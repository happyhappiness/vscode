commit_sha,commit_message,file_name,file_sha,file_url,log_statement,change_type,log_function,log_params,log_location
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,26ebcea0582626fa37c1bc8bee0659822aa237ee,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/client/parallel.cpp,"-    auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, staleNS.db());",-,auto status = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, staleNS.db());']",373
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,26ebcea0582626fa37c1bc8bee0659822aa237ee,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/client/parallel.cpp,"+    auto status = grid.catalogCache()->getDatabase(txn, staleNS.db().toString());",+,auto status = grid.catalogCache,"[u')->getDatabase(txn, staleNS.db().toString());']",374
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,26ebcea0582626fa37c1bc8bee0659822aa237ee,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/client/parallel.cpp,"-        const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",-,const auto shard = uassertStatusOK,"[u'Grid::get(txn)->shardRegistry()->getShard(txn, shardId));']",422
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,26ebcea0582626fa37c1bc8bee0659822aa237ee,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/client/parallel.cpp,"+        const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, shardId));",+,const auto shard = uassertStatusOK,"[u'grid.shardRegistry()->getShard(txn, shardId));']",423
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,26ebcea0582626fa37c1bc8bee0659822aa237ee,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/client/parallel.cpp,-            uassertStatusOK(scopedCMStatus.getStatus());,-,uassertStatusOK,[u'scopedCMStatus.getStatus());'],529
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,26ebcea0582626fa37c1bc8bee0659822aa237ee,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/client/parallel.cpp,"+        auto status = grid.catalogCache()->getDatabase(txn, nss.db().toString());",+,auto status = grid.catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",535
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,26ebcea0582626fa37c1bc8bee0659822aa237ee,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/client/parallel.cpp,+            config = uassertStatusOK(status);,+,config = uassertStatusOK,[u'status);'],537
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,26ebcea0582626fa37c1bc8bee0659822aa237ee,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/client/parallel.cpp,"-                uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, i->first));",-,uassertStatusOK,"[u'Grid::get(txn)->shardRegistry()->getShard(txn, i->first));']",1025
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,26ebcea0582626fa37c1bc8bee0659822aa237ee,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/client/parallel.cpp,"+            const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, i->first));",+,const auto shard = uassertStatusOK,"[u'grid.shardRegistry()->getShard(txn, i->first));']",1026
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/db/s/balancer/balancer.cpp,45c00bde6862bb7416e7204a1c53a66380aab55c,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/db/s/balancer/balancer.cpp,"-    auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",-,auto scopedCM = uassertStatusOK,"[u'ScopedChunkManager::refreshAndGet(txn, nss));']",634
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/db/s/balancer/balancer.cpp,45c00bde6862bb7416e7204a1c53a66380aab55c,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/db/s/balancer/balancer.cpp,"+    auto scopedChunkManager = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",+,auto scopedChunkManager = uassertStatusOK,"[u'ScopedChunkManager::refreshAndGet(txn, nss));']",636
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/catalog/catalog_cache.cpp,cde72edbc46eb5974d75f71b812efc3a6cbe7d2c,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/catalog/catalog_cache.cpp,-CatalogCache::CatalogCache() = default;,-,CatalogCache::CatalogCache,[u') = default;'],45
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/catalog/catalog_cache.cpp,cde72edbc46eb5974d75f71b812efc3a6cbe7d2c,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/catalog/catalog_cache.cpp,-CatalogCache::~CatalogCache() = default;,-,CatalogCache::~CatalogCache,[u') = default;'],47
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/catalog/catalog_cache.cpp,cde72edbc46eb5974d75f71b812efc3a6cbe7d2c,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/catalog/catalog_cache.cpp,+CatalogCache::CatalogCache() {},+,CatalogCache::CatalogCache,[u') {}'],48
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/catalog/catalog_cache.cpp,cde72edbc46eb5974d75f71b812efc3a6cbe7d2c,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/catalog/catalog_cache.cpp,"-    auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName.toString());",-,auto status = Grid::get(txn)->catalogClient,"[u'txn)->getDatabase(txn, dbName.toString());']",74
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/catalog/catalog_cache.cpp,cde72edbc46eb5974d75f71b812efc3a6cbe7d2c,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/catalog/catalog_cache.cpp,"+    auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName);",+,auto status = Grid::get(txn)->catalogClient,"[u'txn)->getDatabase(txn, dbName);']",75
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/chunk_manager.cpp,324be082da5cee886cad2786d5a35a5d0b15d1ac,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/chunk_manager.cpp,"-    auto config = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db()));",-,auto config = uassertStatusOK(Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db()));']",522
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/chunk_manager.cpp,324be082da5cee886cad2786d5a35a5d0b15d1ac,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/chunk_manager.cpp,"+        uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString()));",+,uassertStatusOK(Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db().toString()));']",524
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/client/version_manager.cpp,3cb09cc0db65e60f15c3dca03adc047b8a6ad0f9,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/client/version_manager.cpp,"+    auto status = grid.catalogCache()->getDatabase(txn, nsToDatabase(ns));",+,auto status = grid.catalogCache,"[u')->getDatabase(txn, nsToDatabase(ns));']",273
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/client/version_manager.cpp,3cb09cc0db65e60f15c3dca03adc047b8a6ad0f9,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/client/version_manager.cpp,-            Grid::get(txn)->catalogCache()->invalidate(nss.db());,-,Grid::get(txn)->catalogCache,[u')->invalidate(nss.db());'],468
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/client/version_manager.cpp,3cb09cc0db65e60f15c3dca03adc047b8a6ad0f9,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/client/version_manager.cpp,+    grid.catalogCache()->invalidate(nss.db().toString());,+,grid.catalogCache,[u')->invalidate(nss.db().toString());'],532
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/client/version_manager.cpp,3cb09cc0db65e60f15c3dca03adc047b8a6ad0f9,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/client/version_manager.cpp,"+    auto status = grid.catalogCache()->getDatabase(txn, nss.db().toString());",+,auto status = grid.catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",534
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/cluster_commands_common.cpp,8a309d3d31b139da0a884513cf87d649487d38d5,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/commands/cluster_commands_common.cpp,-    Grid::get(txn)->catalogCache()->invalidate(nss.db());,-,Grid::get(txn)->catalogCache,[u')->invalidate(nss.db());'],70
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/cluster_map_reduce_cmd.cpp,232aefa5bd2796ebe4adaa2d16bbb2da4ffdfd52,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,-                    Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db());,-,Grid::get(txn)->catalogCache,[u')->invalidate(outputCollNss.db());'],481
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/cluster_map_reduce_cmd.cpp,232aefa5bd2796ebe4adaa2d16bbb2da4ffdfd52,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+                    Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db().toString());,+,Grid::get(txn)->catalogCache,[u')->invalidate(outputCollNss.db().toString());'],482
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/commands/commands_public.cpp,"-        auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",-,auto status = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db());']",1016
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/commands/commands_public.cpp,"+        auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",+,auto status = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",1017
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/strategy.cpp,411fae3358fa53a009a217c0cc53cef5731a41d9,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/commands/strategy.cpp,-                Grid::get(txn)->catalogCache()->invalidate(NamespaceString(staleNS).db());,-,Grid::get(txn)->catalogCache,[u')->invalidate(NamespaceString(staleNS).db());'],349
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/strategy.cpp,411fae3358fa53a009a217c0cc53cef5731a41d9,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/commands/strategy.cpp,"+                    LOG(1) << ""Database does not exist or collection no longer sharded after a """,+,LOG,"[u'1) << ""Database does not exist or collection no longer sharded after a ""']",351
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/strategy.cpp,411fae3358fa53a009a217c0cc53cef5731a41d9,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/commands/strategy.cpp,"-    auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",-,auto statusGetDb = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db());']",421
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/strategy.cpp,411fae3358fa53a009a217c0cc53cef5731a41d9,https://raw.githubusercontent.com/mongodb/mongo/c5f52fb3265ef68ffe2741f88758082dda393a4b/src/mongo/s/commands/strategy.cpp,"+    auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",+,auto statusGetDb = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",422
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,c712941dee51ce2a77b049d6662954e91f071123,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock.cpp,+    return getLogicalClock(service).get();,+,return getLogicalClock,[u'service).get();'],45
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,c712941dee51ce2a77b049d6662954e91f071123,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock.cpp,+    auto& clock = getLogicalClock(service);,+,auto& clock = getLogicalClock,[u'service);'],53
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,c712941dee51ce2a77b049d6662954e91f071123,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock.cpp,"+LogicalClock::LogicalClock(ServiceContext* serviceContext,",+,LogicalClock::LogicalClock,"[u'ServiceContext* serviceContext,']",57
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,c712941dee51ce2a77b049d6662954e91f071123,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock.cpp,+SignedLogicalTime LogicalClock::_makeSignedLogicalTime(LogicalTime logicalTime) {,+,SignedLogicalTime LogicalClock::_makeSignedLogicalTime,[u'LogicalTime logicalTime) {'],69
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,c712941dee51ce2a77b049d6662954e91f071123,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock.cpp,"+    return SignedLogicalTime(logicalTime, _timeProofService->getProof(logicalTime));",+,return SignedLogicalTime,"[u'logicalTime, _timeProofService->getProof(logicalTime));']",70
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,c712941dee51ce2a77b049d6662954e91f071123,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock.cpp,"+        clusterTimestamp = LogicalTime(Timestamp(wallClockSecs, 1));",+,clusterTimestamp = LogicalTime,"[u'Timestamp(wallClockSecs, 1));']",103
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,c712941dee51ce2a77b049d6662954e91f071123,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock.cpp,+    _clusterTime = _makeSignedLogicalTime(clusterTimestamp);,+,_clusterTime = _makeSignedLogicalTime,[u'clusterTimestamp);'],110
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,c712941dee51ce2a77b049d6662954e91f071123,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock.cpp,+    _clusterTime = _makeSignedLogicalTime(newTime);,+,_clusterTime = _makeSignedLogicalTime,[u'newTime);'],116
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,+    SignedLogicalTime makeSignedLogicalTime(LogicalTime logicalTime) {,+,SignedLogicalTime makeSignedLogicalTime,[u'LogicalTime logicalTime) {'],64
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,"+        return SignedLogicalTime(logicalTime, _timeProofService->getProof(logicalTime));",+,return SignedLogicalTime,"[u'logicalTime, _timeProofService->getProof(logicalTime));']",65
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,+    auto time = LogicalTime(tX);,+,auto time = LogicalTime,[u'tX);'],80
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,"+    LogicalClock logicalClock(&serviceContext, std::move(pTps), true);",+,LogicalClock logicalClock,"[u'&serviceContext, std::move(pTps), true);']",82
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,+    ASSERT_TRUE(storedTime.getTime() == time);,+,ASSERT_TRUE,[u'storedTime.getTime() == time);'],86
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,+    ASSERT_TRUE(t1 == t2.getTime());,+,ASSERT_TRUE,[u't1 == t2.getTime());'],93
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,+    ASSERT_TRUE(t3 == t1);,+,ASSERT_TRUE,[u't3 == t1);'],97
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,+    ASSERT_TRUE(t3 == t1);,+,ASSERT_TRUE,[u't3 == t1);'],101
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,+    ASSERT_TRUE(t3 == t1);,+,ASSERT_TRUE,[u't3 == t1);'],105
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,+    SignedLogicalTime l1 = makeSignedLogicalTime(t1);,+,SignedLogicalTime l1 = makeSignedLogicalTime,[u't1);'],112
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,+    ASSERT_OK(getClock()->advanceClusterTime(l1));,+,ASSERT_OK,[u'getClock()->advanceClusterTime(l1));'],113
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,cba0cc1faa6ad59941221a914f6c3318c33b80e6,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_clock_test.cpp,+    ASSERT_TRUE(l1.getTime() == l2.getTime());,+,ASSERT_TRUE,[u'l1.getTime() == l2.getTime());'],115
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_time.cpp,e9e5b4c5b3400108802c0acfe3598dce7844e9a0,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_time.cpp,+const LogicalTime LogicalTime::kUninitialized = LogicalTime();,+,const LogicalTime LogicalTime::kUninitialized = LogicalTime,[u');'],37
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_time_test.cpp,d5d1f15a7b2eea6138735ecdfec9e2442a48d9ff,https://raw.githubusercontent.com/mongodb/mongo/91bb1bca8e8b4f66a610409ec0ebe10245a02e5a/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(tX == lT.asTimestamp());,+,ASSERT_TRUE,[u'tX == lT.asTimestamp());'],93
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,6c3b376c73f16527730263613745ead574e4af43,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/client/parallel.cpp,"-    auto status = grid.catalogCache()->getDatabase(txn, staleNS.db().toString());",-,auto status = grid.catalogCache,"[u')->getDatabase(txn, staleNS.db().toString());']",372
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,6c3b376c73f16527730263613745ead574e4af43,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/client/parallel.cpp,"+    auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, staleNS.db());",+,auto status = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, staleNS.db());']",373
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,6c3b376c73f16527730263613745ead574e4af43,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/client/parallel.cpp,"-        const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, shardId));",-,const auto shard = uassertStatusOK,"[u'grid.shardRegistry()->getShard(txn, shardId));']",421
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,6c3b376c73f16527730263613745ead574e4af43,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/client/parallel.cpp,"+        const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",+,const auto shard = uassertStatusOK,"[u'Grid::get(txn)->shardRegistry()->getShard(txn, shardId));']",422
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,6c3b376c73f16527730263613745ead574e4af43,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/client/parallel.cpp,"-        auto status = grid.catalogCache()->getDatabase(txn, nss.db().toString());",-,auto status = grid.catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",525
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,6c3b376c73f16527730263613745ead574e4af43,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/client/parallel.cpp,-            config = uassertStatusOK(status);,-,config = uassertStatusOK,[u'status);'],527
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,6c3b376c73f16527730263613745ead574e4af43,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/client/parallel.cpp,+            uassertStatusOK(scopedCMStatus.getStatus());,+,uassertStatusOK,[u'scopedCMStatus.getStatus());'],531
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,6c3b376c73f16527730263613745ead574e4af43,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/client/parallel.cpp,"-            const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, i->first));",-,const auto shard = uassertStatusOK,"[u'grid.shardRegistry()->getShard(txn, i->first));']",1023
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,6c3b376c73f16527730263613745ead574e4af43,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/client/parallel.cpp,"+                uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, i->first));",+,uassertStatusOK,"[u'Grid::get(txn)->shardRegistry()->getShard(txn, i->first));']",1025
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/db/s/balancer/balancer.cpp,a979624000d4701dd86b504d81dbbd0aa9a43e89,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/db/s/balancer/balancer.cpp,"-    auto scopedChunkManager = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",-,auto scopedChunkManager = uassertStatusOK,"[u'ScopedChunkManager::refreshAndGet(txn, nss));']",633
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/db/s/balancer/balancer.cpp,a979624000d4701dd86b504d81dbbd0aa9a43e89,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/db/s/balancer/balancer.cpp,"+    auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",+,auto scopedCM = uassertStatusOK,"[u'ScopedChunkManager::refreshAndGet(txn, nss));']",635
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/catalog/catalog_cache.cpp,b418977f8b2c7b9edae1b997ac41327bb625ab33,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/catalog/catalog_cache.cpp,+CatalogCache::CatalogCache() = default;,+,CatalogCache::CatalogCache,[u') = default;'],45
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/catalog/catalog_cache.cpp,b418977f8b2c7b9edae1b997ac41327bb625ab33,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/catalog/catalog_cache.cpp,-CatalogCache::CatalogCache() {},-,CatalogCache::CatalogCache,[u') {}'],47
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/catalog/catalog_cache.cpp,b418977f8b2c7b9edae1b997ac41327bb625ab33,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/catalog/catalog_cache.cpp,+CatalogCache::~CatalogCache() = default;,+,CatalogCache::~CatalogCache,[u') = default;'],48
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/catalog/catalog_cache.cpp,b418977f8b2c7b9edae1b997ac41327bb625ab33,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/catalog/catalog_cache.cpp,"-    auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName);",-,auto status = Grid::get(txn)->catalogClient,"[u'txn)->getDatabase(txn, dbName);']",75
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/catalog/catalog_cache.cpp,b418977f8b2c7b9edae1b997ac41327bb625ab33,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/catalog/catalog_cache.cpp,"+    auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName.toString());",+,auto status = Grid::get(txn)->catalogClient,"[u'txn)->getDatabase(txn, dbName.toString());']",76
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/chunk_manager.cpp,3dc01a59dba5b728caf8ef1753d073459dd192cd,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/chunk_manager.cpp,"-        uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString()));",-,uassertStatusOK(Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db().toString()));']",523
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/chunk_manager.cpp,3dc01a59dba5b728caf8ef1753d073459dd192cd,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/chunk_manager.cpp,"+    auto config = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db()));",+,auto config = uassertStatusOK(Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db()));']",524
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/client/version_manager.cpp,0f50b42a38fbeae7a43cb6666d227f1727ffc44e,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/client/version_manager.cpp,"-    auto status = grid.catalogCache()->getDatabase(txn, nsToDatabase(ns));",-,auto status = grid.catalogCache,"[u')->getDatabase(txn, nsToDatabase(ns));']",272
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/client/version_manager.cpp,0f50b42a38fbeae7a43cb6666d227f1727ffc44e,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/client/version_manager.cpp,+            Grid::get(txn)->catalogCache()->invalidate(nss.db());,+,Grid::get(txn)->catalogCache,[u')->invalidate(nss.db());'],471
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/client/version_manager.cpp,0f50b42a38fbeae7a43cb6666d227f1727ffc44e,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/client/version_manager.cpp,-    grid.catalogCache()->invalidate(nss.db().toString());,-,grid.catalogCache,[u')->invalidate(nss.db().toString());'],528
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/client/version_manager.cpp,0f50b42a38fbeae7a43cb6666d227f1727ffc44e,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/client/version_manager.cpp,"-    auto status = grid.catalogCache()->getDatabase(txn, nss.db().toString());",-,auto status = grid.catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",530
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/cluster_commands_common.cpp,020bac131b3d67889953a8a2c22d38f131571b03,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/commands/cluster_commands_common.cpp,+    Grid::get(txn)->catalogCache()->invalidate(nss.db());,+,Grid::get(txn)->catalogCache,[u')->invalidate(nss.db());'],72
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,b9c8f8161b2da9bd94e8135f66a9929b94a8f6ec,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,-                    Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db().toString());,-,Grid::get(txn)->catalogCache,[u')->invalidate(outputCollNss.db().toString());'],481
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,b9c8f8161b2da9bd94e8135f66a9929b94a8f6ec,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+                    Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db());,+,Grid::get(txn)->catalogCache,[u')->invalidate(outputCollNss.db());'],482
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/commands_public.cpp,5957cea46ffe3b14f65739f1f6874664c2c0f7f6,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/commands/commands_public.cpp,"-        auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",-,auto status = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",1016
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/commands_public.cpp,5957cea46ffe3b14f65739f1f6874664c2c0f7f6,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/commands/commands_public.cpp,"+        auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",+,auto status = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db());']",1017
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/strategy.cpp,08fde3b67a4022219985945326ebee42e321eb1e,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/commands/strategy.cpp,"-                    LOG(1) << ""Database does not exist or collection no longer sharded after a """,-,LOG,"[u'1) << ""Database does not exist or collection no longer sharded after a ""']",345
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/strategy.cpp,08fde3b67a4022219985945326ebee42e321eb1e,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/commands/strategy.cpp,+                Grid::get(txn)->catalogCache()->invalidate(NamespaceString(staleNS).db());,+,Grid::get(txn)->catalogCache,[u')->invalidate(NamespaceString(staleNS).db());'],352
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/strategy.cpp,08fde3b67a4022219985945326ebee42e321eb1e,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/commands/strategy.cpp,"-    auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",-,auto statusGetDb = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",421
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/strategy.cpp,08fde3b67a4022219985945326ebee42e321eb1e,https://raw.githubusercontent.com/mongodb/mongo/58292592979ff9277ec34390469a1541315104c0/src/mongo/s/commands/strategy.cpp,"+    auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",+,auto statusGetDb = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db());']",422
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/pipeline/aggregation_request_test.cpp,45313fc8a1e5db92ee1b082a919af1d8d3fc57f6,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/pipeline/aggregation_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(request.getHint(), BSON(""a"" << 1));",+,ASSERT_BSONOBJ_EQ,"[u'request.getHint(), BSON(""a"" << 1));']",68
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/pipeline/aggregation_request_test.cpp,45313fc8a1e5db92ee1b082a919af1d8d3fc57f6,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/pipeline/aggregation_request_test.cpp,+    ASSERT_OK(request.getStatus());,+,ASSERT_OK,[u'request.getStatus());'],201
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/pipeline/aggregation_request_test.cpp,45313fc8a1e5db92ee1b082a919af1d8d3fc57f6,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/pipeline/aggregation_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(request.getValue().getHint(),",+,ASSERT_BSONOBJ_EQ,"[u'request.getValue().getHint(),']",202
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/pipeline/aggregation_request_test.cpp,45313fc8a1e5db92ee1b082a919af1d8d3fc57f6,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/pipeline/aggregation_request_test.cpp,+    ASSERT_NOT_OK(,+,ASSERT_NOT_OK,[u''],255
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/pipeline/aggregation_request_test.cpp,45313fc8a1e5db92ee1b082a919af1d8d3fc57f6,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/pipeline/aggregation_request_test.cpp,+    ASSERT_NOT_OK(,+,ASSERT_NOT_OK,[u''],263
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/count_request_test.cpp,e2a40f87ccfca137665793dd2fbecbeabb19e5c4,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/count_request_test.cpp,-    ASSERT_NOT_OK(countRequest.asAggregationCommand());,-,ASSERT_NOT_OK,[u'countRequest.asAggregationCommand());'],217
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/count_request_test.cpp,e2a40f87ccfca137665793dd2fbecbeabb19e5c4,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/count_request_test.cpp,+    ASSERT_OK(agg);,+,ASSERT_OK,[u'agg);'],219
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/count_request_test.cpp,e2a40f87ccfca137665793dd2fbecbeabb19e5c4,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/count_request_test.cpp,+    ASSERT_OK(ar.getStatus());,+,ASSERT_OK,[u'ar.getStatus());'],222
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/count_request_test.cpp,e2a40f87ccfca137665793dd2fbecbeabb19e5c4,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/count_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(ar.getValue().getHint(), BSON(""x"" << 1));",+,ASSERT_BSONOBJ_EQ,"[u'ar.getValue().getHint(), BSON(""x"" << 1));']",223
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/count_request_test.cpp,e2a40f87ccfca137665793dd2fbecbeabb19e5c4,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/count_request_test.cpp,"+    ASSERT(std::equal(expectedPipeline.begin(),",+,ASSERT,"[u'std::equal(expectedPipeline.begin(),']",227
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_planner.cpp,b19a6bf0e5f7e1ffb12d927b8a1d31e8883d5b98,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/query_planner.cpp,"-            LOG(5) << ""Planner: outputting soln that uses hinted index as scan."";",-,LOG,"[u'5) << ""Planner: outputting soln that uses hinted index as scan."";']",847
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_planner.cpp,b19a6bf0e5f7e1ffb12d927b8a1d31e8883d5b98,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/query_planner.cpp,"+                LOG(5) << ""Planner: outputting soln that uses hinted index as scan."";",+,LOG,"[u'5) << ""Planner: outputting soln that uses hinted index as scan."";']",853
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_planner_test.cpp,2efcc825f581b3e171a3f182dd9f7d97953f10d0,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/query_planner_test.cpp,+    assertNumSolutions(0U);,+,assertNumSolutions,[u'0U);'],2405
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_planner_test.cpp,2efcc825f581b3e171a3f182dd9f7d97953f10d0,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/query_planner_test.cpp,+    assertNumSolutions(0U);,+,assertNumSolutions,[u'0U);'],2414
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_request_test.cpp,66a03bc8285e1600d55433e6de417e95eb3ba81b,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/query_request_test.cpp,+    ASSERT_OK(aggCmd);,+,ASSERT_OK,[u'aggCmd);'],1131
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_request_test.cpp,66a03bc8285e1600d55433e6de417e95eb3ba81b,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/query_request_test.cpp,+    ASSERT_OK(ar.getStatus());,+,ASSERT_OK,[u'ar.getStatus());'],1134
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_request_test.cpp,66a03bc8285e1600d55433e6de417e95eb3ba81b,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/query_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(qr.getHint(), ar.getValue().getHint());",+,ASSERT_BSONOBJ_EQ,"[u'qr.getHint(), ar.getValue().getHint());']",1135
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_request_test.cpp,66a03bc8285e1600d55433e6de417e95eb3ba81b,https://raw.githubusercontent.com/mongodb/mongo/529adf30a88770c44b8dea31323f114975dfd78b/src/mongo/db/query/query_request_test.cpp,-    ASSERT_NOT_OK(qr.asAggregationCommand());,-,ASSERT_NOT_OK,[u'qr.asAggregationCommand());'],1203
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/client/authenticate_test.cpp,7cfa42b4449fe97ad84608eb9f2b88798edbe18a,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/client/authenticate_test.cpp,-            ASSERT(response.isOK());,-,ASSERT,[u'response.isOK());'],191
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/client/authenticate_test.cpp,7cfa42b4449fe97ad84608eb9f2b88798edbe18a,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/client/authenticate_test.cpp,+                             [this](auth::AuthResponse response) { ASSERT(response.isOK()); });,+,[this](auth::AuthResponse response) { ASSERT,[u'response.isOK()); });'],197
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/client/authenticate_test.cpp,7cfa42b4449fe97ad84608eb9f2b88798edbe18a,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/client/authenticate_test.cpp,-            ASSERT(response.isOK());,-,ASSERT,[u'response.isOK());'],211
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/client/authenticate_test.cpp,7cfa42b4449fe97ad84608eb9f2b88798edbe18a,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/client/authenticate_test.cpp,+                             [this](auth::AuthResponse response) { ASSERT(response.isOK()); });,+,[this](auth::AuthResponse response) { ASSERT,[u'response.isOK()); });'],217
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_openssl.cpp,5c552826090c0fb6cb1fa57d3f53cd36bae6e76c,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/crypto_openssl.cpp,"+    fassert(40379,",+,fassert,"[u'40379,']",76
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_openssl.cpp,5c552826090c0fb6cb1fa57d3f53cd36bae6e76c,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/crypto_openssl.cpp,"+    fassert(40380, HMAC(EVP_sha1(), key, keyLen, input, inputLen, output.data(), NULL) != NULL);",+,fassert,"[u'40380, HMAC(EVP_sha1(), key, keyLen, input, inputLen, output.data(), NULL) != NULL);']",98
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_test.cpp,4857e36cab1fba89b55e3d7b6430ede6a4710bc7,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/crypto_test.cpp,"-        ASSERT(crypto::sha1(reinterpret_cast<const unsigned char*>(sha1Tests[i].msg),",-,ASSERT,"[u'crypto::sha1(reinterpret_cast<const unsigned char*>(sha1Tests[i].msg),']",65
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_test.cpp,4857e36cab1fba89b55e3d7b6430ede6a4710bc7,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/crypto_test.cpp,"+        ASSERT(0 == memcmp(sha1Tests[i].hash.data(), result.data(), result.size()))",+,ASSERT,"[u'0 == memcmp(sha1Tests[i].hash.data(), result.data(), result.size()))']",70
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_test.cpp,4857e36cab1fba89b55e3d7b6430ede6a4710bc7,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/crypto_test.cpp,"-        ASSERT(0 == memcmp(sha1Tests[i].hash, sha1Result, digestLen)) << ""Failed SHA1 iteration """,-,ASSERT,"[u'0 == memcmp(sha1Tests[i].hash, sha1Result, digestLen)) << ""Failed SHA1 iteration ""']",72
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_test.cpp,4857e36cab1fba89b55e3d7b6430ede6a4710bc7,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/crypto_test.cpp,"-        ASSERT(crypto::hmacSha1(hmacSha1Tests[i].key,",-,ASSERT,"[u'crypto::hmacSha1(hmacSha1Tests[i].key,']",164
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_test.cpp,4857e36cab1fba89b55e3d7b6430ede6a4710bc7,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/crypto_test.cpp,"-        ASSERT(0 == memcmp(hmacSha1Tests[i].hash, hmacSha1Result, digestLen))",-,ASSERT,"[u'0 == memcmp(hmacSha1Tests[i].hash, hmacSha1Result, digestLen))']",171
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_test.cpp,4857e36cab1fba89b55e3d7b6430ede6a4710bc7,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/crypto_test.cpp,"+        ASSERT(0 == memcmp(hmacSha1Tests[i].hash.data(), result.data(), result.size()))",+,ASSERT,"[u'0 == memcmp(hmacSha1Tests[i].hash.data(), result.data(), result.size()))']",176
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_tom.cpp,904eb5925e3deae0660d4489118724b1e78411e0,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/crypto_tom.cpp,"+    fassert(40381,",+,fassert,"[u'40381,']",72
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_tom.cpp,904eb5925e3deae0660d4489118724b1e78411e0,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/crypto_tom.cpp,"+    fassert(40382,",+,fassert,"[u'40382,']",138
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"-    uassert(17450, ""invalid salt length provided"", saltLen + 4 == hashSize);",-,uassert,"[u'17450, ""invalid salt length provided"", saltLen + 4 == hashSize);']",87
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"+    uassert(17450, ""invalid salt length provided"", saltLen + 4 == startKey.size());",+,uassert,"[u'17450, ""invalid salt length provided"", saltLen + 4 == startKey.size());']",100
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"-    fassert(17494, crypto::hmacSha1(input, inputLen, startKey, saltLen + 4, output, &hashLen));",-,fassert,"[u'17494, crypto::hmacSha1(input, inputLen, startKey, saltLen + 4, output, &hashLen));']",109
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"-        fassert(17495,",-,fassert,"[u'17495,']",118
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"-    fassert(17498,",-,fassert,"[u'17498,']",175
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"-    fassert(17499, crypto::sha1(clientKey, hashSize, storedKey));",-,fassert,"[u'17499, crypto::sha1(clientKey, hashSize, storedKey));']",184
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"-    fassert(17500,",-,fassert,"[u'17500,']",187
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"-    fassert(18689,",-,fassert,"[u'18689,']",405
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"-    fassert(18701, crypto::sha1(clientKey, hashSize, storedKey));",-,fassert,"[u'18701, crypto::sha1(clientKey, hashSize, storedKey));']",415
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"-    fassert(18702,",-,fassert,"[u'18702,']",419
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"-    fassert(18703,",-,fassert,"[u'18703,']",475
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,57a2eed3dd0c30a1bddb0d9946216374e39ebc49,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/crypto/mechanism_scram.cpp,"-    fassert(18704,",-,fassert,"[u'18704,']",485
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_server_conversation.cpp,a98dc6d7dccf7ea4ab04a0ac3d109f561e76a160,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_server_conversation.cpp,"-    fassert(18662,",-,fassert,"[u'18662,']",290
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_server_conversation.cpp,a98dc6d7dccf7ea4ab04a0ac3d109f561e76a160,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_server_conversation.cpp,"-    fassert(18658, hashLen == scram::hashSize);",-,fassert,"[u'18658, hashLen == scram::hashSize);']",298
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_server_conversation.cpp,a98dc6d7dccf7ea4ab04a0ac3d109f561e76a160,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_server_conversation.cpp,"-    fassert(18659, crypto::sha1(clientKey, scram::hashSize, computedStoredKey));",-,fassert,"[u'18659, crypto::sha1(clientKey, scram::hashSize, computedStoredKey));']",316
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_server_conversation.cpp,a98dc6d7dccf7ea4ab04a0ac3d109f561e76a160,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_server_conversation.cpp,"-    fassert(18660,",-,fassert,"[u'18660,']",329
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_server_conversation.cpp,a98dc6d7dccf7ea4ab04a0ac3d109f561e76a160,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_server_conversation.cpp,"-    fassert(18661, hashLen == scram::hashSize);",-,fassert,"[u'18661, hashLen == scram::hashSize);']",337
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,"+    ASSERT_FALSE(cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", salt, 10000)));",+,ASSERT_FALSE,"[u'cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", salt, 10000)));']",465
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,+    ASSERT_TRUE(cachedSecret);,+,ASSERT_TRUE,[u'cachedSecret);'],480
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,+    ASSERT_TRUE(std::equal(,+,ASSERT_TRUE,[u'std::equal('],481
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,+    ASSERT_TRUE(std::equal(,+,ASSERT_TRUE,[u'std::equal('],483
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,+    ASSERT_TRUE(std::equal(,+,ASSERT_TRUE,[u'std::equal('],485
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,"+    ASSERT_FALSE(cache.getCachedSecrets(HostAndPort(""localhost:27018""),",+,ASSERT_FALSE,"[u'cache.getCachedSecrets(HostAndPort(""localhost:27018""),']",501
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,"+    ASSERT_FALSE(cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aab"", salt, 10000)));",+,ASSERT_FALSE,"[u'cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aab"", salt, 10000)));']",503
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,"+    ASSERT_FALSE(cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", badSalt, 10000)));",+,ASSERT_FALSE,"[u'cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", badSalt, 10000)));']",504
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,"+    ASSERT_FALSE(cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", salt, 10001)));",+,ASSERT_FALSE,"[u'cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", salt, 10001)));']",505
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,"+    ASSERT_FALSE(cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", salt, 10000)));",+,ASSERT_FALSE,"[u'cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", salt, 10000)));']",520
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,+    ASSERT_TRUE(cachedSecret);,+,ASSERT_TRUE,[u'cachedSecret);'],522
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,"+    ASSERT_TRUE(std::equal(newSecret.clientKey->begin(),",+,ASSERT_TRUE,"[u'std::equal(newSecret.clientKey->begin(),']",523
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,"+    ASSERT_TRUE(std::equal(newSecret.serverKey->begin(),",+,ASSERT_TRUE,"[u'std::equal(newSecret.serverKey->begin(),']",526
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,b7a214af68eab976612cec49e9ff3ed3a1b25cb6,https://raw.githubusercontent.com/mongodb/mongo/47da0b53f9cd27aeec1d2822780784866269a47d/src/mongo/db/auth/sasl_scramsha1_test.cpp,"+    ASSERT_TRUE(std::equal(newSecret.storedKey->begin(),",+,ASSERT_TRUE,"[u'std::equal(newSecret.storedKey->begin(),']",529
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time.cpp,9d36a17a234bf918b6ed2e83981da8e2b6d79bec,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time.cpp,+LogicalTime::LogicalTime(Timestamp ts) : _time(ts.asULL()) {},+,LogicalTime::LogicalTime,[u'Timestamp ts) : _time(ts.asULL()) {}'],37
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time.cpp,9d36a17a234bf918b6ed2e83981da8e2b6d79bec,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time.cpp,+    return LogicalTime(Timestamp(_time + ticks));,+,return LogicalTime,[u'Timestamp(_time + ticks));'],44
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(tX < tY);,+,ASSERT_TRUE,[u'tX < tY);'],45
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(LogicalTime(tX) < LogicalTime(tY));,+,ASSERT_TRUE(LogicalTime(tX) < LogicalTime,[u'tY));'],47
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(LogicalTime(tX) <= LogicalTime(tY));,+,ASSERT_TRUE(LogicalTime(tX) <= LogicalTime,[u'tY));'],48
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(LogicalTime(tY) > LogicalTime(tX));,+,ASSERT_TRUE(LogicalTime(tY) > LogicalTime,[u'tX));'],49
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(LogicalTime(tY) >= LogicalTime(tX));,+,ASSERT_TRUE(LogicalTime(tY) >= LogicalTime,[u'tX));'],50
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(LogicalTime(tX) != LogicalTime(tY));,+,ASSERT_TRUE(LogicalTime(tX) != LogicalTime,[u'tY));'],51
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(LogicalTime(tX) == LogicalTime(tX));,+,ASSERT_TRUE(LogicalTime(tX) == LogicalTime,[u'tX));'],52
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_FALSE(LogicalTime(tX) > LogicalTime(tY));,+,ASSERT_FALSE(LogicalTime(tX) > LogicalTime,[u'tY));'],54
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_FALSE(LogicalTime(tX) >= LogicalTime(tY));,+,ASSERT_FALSE(LogicalTime(tX) >= LogicalTime,[u'tY));'],55
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_FALSE(LogicalTime(tY) < LogicalTime(tX));,+,ASSERT_FALSE(LogicalTime(tY) < LogicalTime,[u'tX));'],56
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_FALSE(LogicalTime(tY) <= LogicalTime(tX));,+,ASSERT_FALSE(LogicalTime(tY) <= LogicalTime,[u'tX));'],57
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_FALSE(LogicalTime(tX) == LogicalTime(tY));,+,ASSERT_FALSE(LogicalTime(tX) == LogicalTime,[u'tY));'],58
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_FALSE(LogicalTime(tX) != LogicalTime(tX));,+,ASSERT_FALSE(LogicalTime(tX) != LogicalTime,[u'tX));'],59
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    auto tY = LogicalTime(tX).asTimestamp();,+,auto tY = LogicalTime,[u'tX).asTimestamp();'],64
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(tX == tY);,+,ASSERT_TRUE,[u'tX == tY);'],66
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    auto lT = LogicalTime(tX);,+,auto lT = LogicalTime,[u'tX);'],73
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(tY == lT.asTimestamp());,+,ASSERT_TRUE,[u'tY == lT.asTimestamp());'],76
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    const auto lT = LogicalTime(tX);,+,const auto lT = LogicalTime,[u'tX);'],83
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(tX == lT.asTimestamp());,+,ASSERT_TRUE,[u'tX == lT.asTimestamp());'],86
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(tY == lQ.asTimestamp());,+,ASSERT_TRUE,[u'tY == lQ.asTimestamp());'],87
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    auto time = LogicalTime(tX);,+,auto time = LogicalTime,[u'tX);'],93
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(time == signedTime.getTime());,+,ASSERT_TRUE,[u'time == signedTime.getTime());'],97
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,dbff22f8ce3853bc44636c35377da1f697dfb273,https://raw.githubusercontent.com/mongodb/mongo/c742c4ebe789fafa3fccd4b25332a7df0782b252/src/mongo/db/logical_time_test.cpp,+    ASSERT_TRUE(proof == signedTime.getProof());,+,ASSERT_TRUE,[u'proof == signedTime.getProof());'],98
970fdd08aa92e5393d3f616fd6270ea1fb688640,SERVER-27382 Remove usage of DBConfig::reload from ClusterFind,src/mongo/s/query/cluster_find.cpp,ab5b15b0f49bfae5266f2dfc742fcf41f6c50b1a,https://raw.githubusercontent.com/mongodb/mongo/970fdd08aa92e5393d3f616fd6270ea1fb688640/src/mongo/s/query/cluster_find.cpp,"-    auto dbConfig = Grid::get(txn)->catalogCache()->getDatabase(txn, query.nss().db().toString());",-,auto dbConfig = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, query.nss().db().toString());']",336
970fdd08aa92e5393d3f616fd6270ea1fb688640,SERVER-27382 Remove usage of DBConfig::reload from ClusterFind,src/mongo/s/query/cluster_find.cpp,ab5b15b0f49bfae5266f2dfc742fcf41f6c50b1a,https://raw.githubusercontent.com/mongodb/mongo/970fdd08aa92e5393d3f616fd6270ea1fb688640/src/mongo/s/query/cluster_find.cpp,+            Grid::get(txn)->catalogCache()->invalidate(query.nss().db().toString());,+,Grid::get(txn)->catalogCache,[u')->invalidate(query.nss().db().toString());'],425
a82df5012ee9c1d48197af81abc921f717227323,SERVER-27382 Remove usage of DBConfig::reload from ChunkManagerTargeter,src/mongo/s/chunk_manager_targeter.cpp,d8304521175577ef2bd85446ae4dc9381a11953d,https://raw.githubusercontent.com/mongodb/mongo/a82df5012ee9c1d48197af81abc921f717227323/src/mongo/s/chunk_manager_targeter.cpp,+        Grid::get(txn)->catalogCache()->invalidate(_nss.db().toString());,+,Grid::get(txn)->catalogCache,[u')->invalidate(_nss.db().toString());'],779
81901db84f0245dcf616e638366def74e4169c69,SERVER-27889 Handle case in catchup.js where stepUp fails due to node already being a candidate.,src/mongo/db/repl/replset_commands.cpp,6303888dde156100f556949f84eecfe0a11b822e,https://raw.githubusercontent.com/mongodb/mongo/81901db84f0245dcf616e638366def74e4169c69/src/mongo/db/repl/replset_commands.cpp,"+        log() << ""Received replSetStepUp request"";",+,log,"[u') << ""Received replSetStepUp request"";']",876
81901db84f0245dcf616e638366def74e4169c69,SERVER-27889 Handle case in catchup.js where stepUp fails due to node already being a candidate.,src/mongo/db/repl/replset_commands.cpp,6303888dde156100f556949f84eecfe0a11b822e,https://raw.githubusercontent.com/mongodb/mongo/81901db84f0245dcf616e638366def74e4169c69/src/mongo/db/repl/replset_commands.cpp,"+            log() << ""replSetStepUp request failed "" << causedBy(status);",+,log,"[u') << ""replSetStepUp request failed "" << causedBy(status);']",881
6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad,SERVER-26126 Remove broken lockState caching,src/mongo/db/concurrency/lock_state.cpp,9235f56bbb42cc01ec30bcf8a2d6c4ac579e8a6b,https://raw.githubusercontent.com/mongodb/mongo/6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad/src/mongo/db/concurrency/lock_state.cpp,-void LockerImpl<IsForMMAPV1>::assertEmptyAndReset() {,-,void LockerImpl<IsForMMAPV1>::assertEmptyAndReset,[u') {'],195
6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad,SERVER-26126 Remove broken lockState caching,src/mongo/db/concurrency/lock_state.cpp,9235f56bbb42cc01ec30bcf8a2d6c4ac579e8a6b,https://raw.githubusercontent.com/mongodb/mongo/6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad/src/mongo/db/concurrency/lock_state.cpp,-    invariant(!inAWriteUnitOfWork());,-,invariant(!inAWriteUnitOfWork,[u'));'],196
6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad,SERVER-26126 Remove broken lockState caching,src/mongo/db/concurrency/lock_state.cpp,9235f56bbb42cc01ec30bcf8a2d6c4ac579e8a6b,https://raw.githubusercontent.com/mongodb/mongo/6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad/src/mongo/db/concurrency/lock_state.cpp,-    assertEmptyAndReset();,-,assertEmptyAndReset,[u');'],294
6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad,SERVER-26126 Remove broken lockState caching,src/mongo/db/concurrency/lock_state.cpp,9235f56bbb42cc01ec30bcf8a2d6c4ac579e8a6b,https://raw.githubusercontent.com/mongodb/mongo/6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad/src/mongo/db/concurrency/lock_state.cpp,+    invariant(!inAWriteUnitOfWork());,+,invariant(!inAWriteUnitOfWork,[u'));'],295
6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad,SERVER-26126 Remove broken lockState caching,src/mongo/db/operation_context_impl.cpp,0ccdbbbfbef81228fa6d7d272f4063596b1c203d,https://raw.githubusercontent.com/mongodb/mongo/6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad/src/mongo/db/operation_context_impl.cpp,-    lockState()->assertEmptyAndReset();,-,lockState()->assertEmptyAndReset,[u');'],80
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,dd0384c6cf0d14a7f9bbcba800de792ea9de83ee,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/bson/dotted_path_support_test.cpp,"+    ASSERT_BSONELT_EQ(resultElt, fromjson(""{c: [1, 2, 3]}"").firstElement());",+,ASSERT_BSONELT_EQ,"[u'resultElt, fromjson(""{c: [1, 2, 3]}"").firstElement());']",579
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,dd0384c6cf0d14a7f9bbcba800de792ea9de83ee,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/bson/dotted_path_support_test.cpp,+    ASSERT(StringData(pathData).empty());,+,ASSERT,[u'StringData(pathData).empty());'],580
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,dd0384c6cf0d14a7f9bbcba800de792ea9de83ee,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/bson/dotted_path_support_test.cpp,"+    ASSERT_BSONELT_EQ(resultElt, fromjson(""{b: [{c: 1}, {c: 2}]}"").firstElement());",+,ASSERT_BSONELT_EQ,"[u'resultElt, fromjson(""{b: [{c: 1}, {c: 2}]}"").firstElement());']",588
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,dd0384c6cf0d14a7f9bbcba800de792ea9de83ee,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/bson/dotted_path_support_test.cpp,"+    ASSERT_EQ(StringData(pathData), StringData(""c""));",+,ASSERT_EQ,"[u'StringData(pathData), StringData(""c""));']",589
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,dd0384c6cf0d14a7f9bbcba800de792ea9de83ee,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/bson/dotted_path_support_test.cpp,"+    ASSERT_BSONELT_EQ(resultElt, obj.firstElement());",+,ASSERT_BSONELT_EQ,"[u'resultElt, obj.firstElement());']",597
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,dd0384c6cf0d14a7f9bbcba800de792ea9de83ee,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/bson/dotted_path_support_test.cpp,"+    ASSERT_EQ(StringData(pathData), StringData(""0""));",+,ASSERT_EQ,"[u'StringData(pathData), StringData(""0""));']",598
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,dd0384c6cf0d14a7f9bbcba800de792ea9de83ee,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/bson/dotted_path_support_test.cpp,"+    ASSERT_BSONELT_EQ(resultElt, fromjson(""{'0': 'foo'}"").firstElement());",+,ASSERT_BSONELT_EQ,"[u'resultElt, fromjson(""{\'0\': \'foo\'}"").firstElement());']",606
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,dd0384c6cf0d14a7f9bbcba800de792ea9de83ee,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/bson/dotted_path_support_test.cpp,+    ASSERT(StringData(pathData).empty());,+,ASSERT,[u'StringData(pathData).empty());'],607
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format.cpp,770930e90c17854aecf4b9f4fbcd1a36595d6860,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format.cpp,"+    uassert(ErrorCodes::CannotBuildIndexKeys,",+,uassert,"[u'ErrorCodes::CannotBuildIndexKeys,']",120
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format.cpp,770930e90c17854aecf4b9f4fbcd1a36595d6860,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format.cpp,"-        uassert(16675, ""cannot have a multi-key as a prefix to a text index"", e.type() != Array);",-,uassert,"[u'16675, ""cannot have a multi-key as a prefix to a text index"", e.type() != Array);']",181
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",+,FTSSpec spec(assertGet,"[u'FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));']",265
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    ASSERT_THROWS_CODE(FTSIndexFormat::getKeys(spec, objToIndex, &keys),",+,ASSERT_THROWS_CODE,"[u'FTSIndexFormat::getKeys(spec, objToIndex, &keys),']",268
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",+,FTSSpec spec(assertGet,"[u'FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));']",275
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    ASSERT_THROWS_CODE(FTSIndexFormat::getKeys(spec, objToIndex, &keys),",+,ASSERT_THROWS_CODE,"[u'FTSIndexFormat::getKeys(spec, objToIndex, &keys),']",278
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",+,FTSSpec spec(assertGet,"[u'FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));']",285
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    ASSERT_THROWS_CODE(FTSIndexFormat::getKeys(spec, objToIndex, &keys),",+,ASSERT_THROWS_CODE,"[u'FTSIndexFormat::getKeys(spec, objToIndex, &keys),']",288
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",+,FTSSpec spec(assertGet,"[u'FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));']",295
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    ASSERT_THROWS_CODE(FTSIndexFormat::getKeys(spec, objToIndex, &keys),",+,ASSERT_THROWS_CODE,"[u'FTSIndexFormat::getKeys(spec, objToIndex, &keys),']",298
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",+,FTSSpec spec(assertGet,"[u'FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));']",305
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    ASSERT_THROWS_CODE(FTSIndexFormat::getKeys(spec, objToIndex, &keys),",+,ASSERT_THROWS_CODE,"[u'FTSIndexFormat::getKeys(spec, objToIndex, &keys),']",308
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",+,FTSSpec spec(assertGet,"[u'FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));']",315
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+    ASSERT_EQ(2U, keys.size());",+,ASSERT_EQ,"[u'2U, keys.size());']",319
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+        ASSERT_EQ(3, key.nFields());",+,ASSERT_EQ,"[u'3, key.nFields());']",323
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+        ASSERT_BSONELT_EQ(it.next(), fromjson(""{'': {b: 'foo'}}"").firstElement());",+,ASSERT_BSONELT_EQ,"[u'it.next(), fromjson(""{\'\': {b: \'foo\'}}"").firstElement());']",325
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+        ASSERT_BSONELT_EQ(it.next(), fromjson(""{'': 'bar'}"").firstElement());",+,ASSERT_BSONELT_EQ,"[u'it.next(), fromjson(""{\'\': \'bar\'}"").firstElement());']",326
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+        ASSERT_EQ(3, key.nFields());",+,ASSERT_EQ,"[u'3, key.nFields());']",331
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+        ASSERT_BSONELT_EQ(it.next(), fromjson(""{'': {b: 'foo'}}"").firstElement());",+,ASSERT_BSONELT_EQ,"[u'it.next(), fromjson(""{\'\': {b: \'foo\'}}"").firstElement());']",333
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,3a4d383bc45c8423b8d2813ccbf7019a88a0707a,https://raw.githubusercontent.com/mongodb/mongo/521a57162820b3b1100d20408f5ad0cd89fdc80e/src/mongo/db/fts/fts_index_format_test.cpp,"+        ASSERT_BSONELT_EQ(it.next(), fromjson(""{'': 'foo'}"").firstElement());",+,ASSERT_BSONELT_EQ,"[u'it.next(), fromjson(""{\'\': \'foo\'}"").firstElement());']",334
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-    auto config = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",-,auto config = uassertStatusOK,"[u'ScopedShardDatabase::getExisting(txn, nss.db()));']",82
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-            uassert(10163, ""can only handle numbers here - which i think is correct"", e.isNumber());",-,uassert,"[u'10163, ""can only handle numbers here - which i think is correct"", e.isNumber());']",206
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-        uassert(28736,",-,uassert,"[u'28736,']",226
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-        uassertStatusOK(shardutil::selectChunkSplitPoints(txn,",-,uassertStatusOK,"[u'shardutil::selectChunkSplitPoints(txn,']",266
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-            LOG(1) << ""won't auto split because not enough tickets: "" << _manager->getns();",-,LOG,"[u'1) << ""won\'t auto split because not enough tickets: "" << _manager->getns();']",365
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-        LOG(1) << ""about to initiate autosplit: "" << *this << "" dataWritten: "" << chunkBytesWritten",-,LOG,"[u'1) << ""about to initiate autosplit: "" << *this << "" dataWritten: "" << chunkBytesWritten']",384
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-            auto collStatus = grid.catalogClient(txn)->getCollection(txn, _manager->getns());",-,auto collStatus = grid.catalogClient,"[u'txn)->getCollection(txn, _manager->getns());']",407
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-        log() << ""autosplitted "" << _manager->getns() << "" shard: "" << toString() << "" into """,-,log,"[u') << ""autosplitted "" << _manager->getns() << "" shard: "" << toString() << "" into ""']",420
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-            auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",-,auto scopedCM = uassertStatusOK,"[u'ScopedChunkManager::refreshAndGet(txn, nss));']",433
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-                msgassertedNoTraceWithStatus(10412, rebalanceStatus);",-,msgassertedNoTraceWithStatus,"[u'10412, rebalanceStatus);']",446
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-    const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, getShardId()));",-,const auto shard = uassertStatusOK,"[u'grid.shardRegistry()->getShard(txn, getShardId()));']",465
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,"-        grid.catalogClient(txn)->updateConfigDocument(txn,",-,grid.catalogClient,"[u'txn)->updateConfigDocument(txn,']",538
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,ff4341c3f7f303850ddc77967e4a483416325b6b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk.cpp,+    auto status = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,+,auto status = Grid::get(txn)->catalogClient,[u'txn)->updateConfigDocument('],544
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk_manager.cpp,324be082da5cee886cad2786d5a35a5d0b15d1ac,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk_manager.cpp,"-        const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, shardId));",-,const auto shard = uassertStatusOK,"[u'grid.shardRegistry()->getShard(txn, shardId));']",138
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk_manager.cpp,324be082da5cee886cad2786d5a35a5d0b15d1ac,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/chunk_manager.cpp,"+        const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",+,const auto shard = uassertStatusOK,"[u'Grid::get(txn)->shardRegistry()->getShard(txn, shardId));']",139
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_find_and_modify_cmd.cpp,14cd8676917ab5f502053d66cbc607daa11acb9b,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_find_and_modify_cmd.cpp,+            updateChunkWriteStatsAndSplitIfNeeded(,+,updateChunkWriteStatsAndSplitIfNeeded,[u''],238
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,232aefa5bd2796ebe4adaa2d16bbb2da4ffdfd52,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,"+                    updateChunkWriteStatsAndSplitIfNeeded(txn, cm.get(), c.get(), size);",+,updateChunkWriteStatsAndSplitIfNeeded,"[u'txn, cm.get(), c.get(), size);']",628
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,a7bf306075292e0aa745618b3234e874cc63bdb9,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+    request.setWriteConcern(WriteConcernOptions::Acknowledged);,+,request.setWriteConcern,[u'WriteConcernOptions::Acknowledged);'],147
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,a7bf306075292e0aa745618b3234e874cc63bdb9,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,"+    ClusterWriter writer(false, 0);",+,ClusterWriter writer,"[u'false, 0);']",151
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,a7bf306075292e0aa745618b3234e874cc63bdb9,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,"+    writer.write(txn, request, &response);",+,writer.write,"[u'txn, request, &response);']",152
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,a7bf306075292e0aa745618b3234e874cc63bdb9,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,"+        uassertStatusOK(catalogClient->shardCollection(txn,",+,uassertStatusOK,"[u'catalogClient->shardCollection(txn,']",753
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+void toBatchError(const Status& status, BatchedCommandResponse* response) {",+,void toBatchError,"[u'const Status& status, BatchedCommandResponse* response) {']",79
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,+    dassert(response->isValid(NULL));,+,dassert,[u'response->isValid(NULL));'],84
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+    auto config = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",+,auto config = uassertStatusOK,"[u'ScopedShardDatabase::getExisting(txn, nss.db()));']",88
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+            uassert(10163, ""can only handle numbers here - which i think is correct"", e.isNumber());",+,uassert,"[u'10163, ""can only handle numbers here - which i think is correct"", e.isNumber());']",171
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+        const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",+,const auto shard = uassertStatusOK,"[u'Grid::get(txn)->shardRegistry()->getShard(txn, shardId));']",186
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+        uassert(28736,",+,uassert,"[u'28736,']",203
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"-void toBatchError(const Status& status, BatchedCommandResponse* response) {",-,void toBatchError,"[u'const Status& status, BatchedCommandResponse* response) {']",220
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,-    dassert(response->isValid(NULL));,-,dassert,[u'response->isValid(NULL));'],225
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"-    auto status = grid.catalogCache()->getDatabase(txn, nss.db().toString());",-,auto status = grid.catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",237
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+    auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",+,auto status = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",238
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+        updateChunkWriteStatsAndSplitIfNeeded(txn, chunkManager.get(), chunk.get(), it->second);",+,updateChunkWriteStatsAndSplitIfNeeded,"[u'txn, chunkManager.get(), chunk.get(), it->second);']",440
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,-    request.setWriteConcern(WriteConcernOptions::Acknowledged);,-,request.setWriteConcern,[u'WriteConcernOptions::Acknowledged);'],459
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"-    ClusterWriter writer(false, 0);",-,ClusterWriter writer,"[u'false, 0);']",463
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"-    writer.write(txn, request, &response);",-,writer.write,"[u'txn, request, &response);']",464
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+ClusterWriter::ClusterWriter(bool autoSplit, int timeoutMillis)",+,ClusterWriter::ClusterWriter,"[u'bool autoSplit, int timeoutMillis)']",469
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"-        grid.catalogClient(txn)->writeConfigServerDirect(txn, *request, response);",-,grid.catalogClient(txn)->writeConfigServerDirect,"[u'txn, *request, response);']",638
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+        Grid::get(txn)->catalogClient(txn)->writeConfigServerDirect(txn, *request, response);",+,Grid::get(txn)->catalogClient(txn)->writeConfigServerDirect,"[u'txn, *request, response);']",639
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"-ClusterWriter::ClusterWriter(bool autoSplit, int timeoutMillis)",-,ClusterWriter::ClusterWriter,"[u'bool autoSplit, int timeoutMillis)']",678
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+void updateChunkWriteStatsAndSplitIfNeeded(OperationContext* txn,",+,void updateChunkWriteStatsAndSplitIfNeeded,"[u'OperationContext* txn,']",685
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+        LOG(1) << ""won't auto split because not enough tickets: "" << nss;",+,LOG,"[u'1) << ""won\'t auto split because not enough tickets: "" << nss;']",719
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,+        uassertStatusOK(balancerConfig->refreshAndCheck(txn));,+,uassertStatusOK,[u'balancerConfig->refreshAndCheck(txn));'],729
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+        LOG(1) << ""about to initiate autosplit: "" << redact(chunk->toString())",+,LOG,"[u'1) << ""about to initiate autosplit: "" << redact(chunk->toString())']",735
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+            uassertStatusOK(shardutil::selectChunkSplitPoints(txn,",+,uassertStatusOK,"[u'shardutil::selectChunkSplitPoints(txn,']",752
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+            uassertStatusOK(shardutil::splitChunkAtMultiplePoints(txn,",+,uassertStatusOK,"[u'shardutil::splitChunkAtMultiplePoints(txn,']",798
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+                Grid::get(txn)->catalogClient(txn)->getCollection(txn, manager->getns());",+,Grid::get(txn)->catalogClient,"[u'txn)->getCollection(txn, manager->getns());']",813
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+                log() << ""Auto-split for "" << nss << "" failed to load collection metadata""",+,log,"[u') << ""Auto-split for "" << nss << "" failed to load collection metadata""']",815
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+        log() << ""autosplitted "" << nss << "" chunk: "" << redact(chunk->toString()) << "" into """,+,log,"[u') << ""autosplitted "" << nss << "" chunk: "" << redact(chunk->toString()) << "" into ""']",823
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+        auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",+,auto scopedCM = uassertStatusOK,"[u'ScopedChunkManager::refreshAndGet(txn, nss));']",841
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+        uassertStatusOK(configsvr_client::rebalanceChunk(txn, chunkToMove));",+,uassertStatusOK,"[u'configsvr_client::rebalanceChunk(txn, chunkToMove));']",852
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,217c37e273b800030525334ce372254f11cd7625,https://raw.githubusercontent.com/mongodb/mongo/3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f/src/mongo/s/commands/cluster_write.cpp,"+        log() << ""Unable to auto-split chunk "" << redact(chunkRange.toString()) << causedBy(ex);",+,log,"[u') << ""Unable to auto-split chunk "" << redact(chunkRange.toString()) << causedBy(ex);']",858
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/balancer/balancer.cpp,45c00bde6862bb7416e7204a1c53a66380aab55c,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/db/s/balancer/balancer.cpp,"-        log() << ""Marking chunk "" << chunk->toString() << "" as jumbo."";",-,log,"[u') << ""Marking chunk "" << chunk->toString() << "" as jumbo."";']",624
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/balancer/balancer.cpp,45c00bde6862bb7416e7204a1c53a66380aab55c,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/db/s/balancer/balancer.cpp,+        const auto splitPoints = uassertStatusOK(shardutil::selectChunkSplitPoints(,+,const auto splitPoints = uassertStatusOK,[u'shardutil::selectChunkSplitPoints('],626
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/balancer/balancer.cpp,45c00bde6862bb7416e7204a1c53a66380aab55c,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/db/s/balancer/balancer.cpp,"+        uassert(ErrorCodes::CannotSplit, ""No split points found"", !splitPoints.empty());",+,uassert,"[u'ErrorCodes::CannotSplit, ""No split points found"", !splitPoints.empty());']",635
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/balancer/balancer.cpp,45c00bde6862bb7416e7204a1c53a66380aab55c,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/db/s/balancer/balancer.cpp,+        uassertStatusOK(,+,uassertStatusOK,[u''],637
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/split_vector_command.cpp,f02a7d68fa30bed5ff60d4430d6a6d731bedeb8a,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/db/s/split_vector_command.cpp,-    virtual bool supportsWriteConcern(const BSONObj& cmd) const override {,-,virtual bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],79
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/split_vector_command.cpp,f02a7d68fa30bed5ff60d4430d6a6d731bedeb8a,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/db/s/split_vector_command.cpp,+    bool supportsWriteConcern(const BSONObj& cmd) const override {,+,bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],81
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/s/chunk.cpp,8ccf0250115fbdb9c2ab1cddb22a9ec169a9fe0f,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/s/chunk.cpp,"-    uassert(10170, ""Chunk needs a ns"", !ns.empty());",-,uassert,"[u'10170, ""Chunk needs a ns"", !ns.empty());']",114
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/s/chunk.cpp,8ccf0250115fbdb9c2ab1cddb22a9ec169a9fe0f,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/s/chunk.cpp,"-    uassert(13327, ""Chunk ns must match server ns"", ns == _manager->getns());",-,uassert,"[u'13327, ""Chunk ns must match server ns"", ns == _manager->getns());']",115
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/s/chunk.cpp,8ccf0250115fbdb9c2ab1cddb22a9ec169a9fe0f,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/s/chunk.cpp,"-    uassert(10172, ""Chunk needs a min"", !_min.isEmpty());",-,uassert,"[u'10172, ""Chunk needs a min"", !_min.isEmpty());']",116
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/s/chunk.cpp,8ccf0250115fbdb9c2ab1cddb22a9ec169a9fe0f,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/s/chunk.cpp,"-    uassert(10173, ""Chunk needs a max"", !_max.isEmpty());",-,uassert,"[u'10173, ""Chunk needs a max"", !_max.isEmpty());']",117
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/s/chunk.cpp,8ccf0250115fbdb9c2ab1cddb22a9ec169a9fe0f,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/s/chunk.cpp,"-    uassert(10171, ""Chunk needs a server"", grid.shardRegistry()->getShard(txn, _shardId).isOK());",-,uassert,"[u'10171, ""Chunk needs a server"", grid.shardRegistry()->getShard(txn, _shardId).isOK());']",118
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/s/chunk.cpp,8ccf0250115fbdb9c2ab1cddb22a9ec169a9fe0f,https://raw.githubusercontent.com/mongodb/mongo/2922aea4adf8e8fe9bab3a5d6e986e7aecba7228/src/mongo/s/chunk.cpp,"+    log() << ""Marking chunk "" << toString() << "" as jumbo."";",+,log,"[u') << ""Marking chunk "" << toString() << "" as jumbo."";']",502
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/db/s/balancer/scoped_migration_request_test.cpp,10fb8da0e225668214c1dd1f851ffeb9ba9fb578,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/db/s/balancer/scoped_migration_request_test.cpp,-    ChunkType chunkType = assertGet(ChunkType::fromBSON(chunkBuilder.obj()));,-,ChunkType chunkType = assertGet,[u'ChunkType::fromBSON(chunkBuilder.obj()));'],105
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/db/s/balancer/scoped_migration_request_test.cpp,10fb8da0e225668214c1dd1f851ffeb9ba9fb578,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/db/s/balancer/scoped_migration_request_test.cpp,+    ChunkType chunkType = assertGet(ChunkType::fromConfigBSON(chunkBuilder.obj()));,+,ChunkType chunkType = assertGet,[u'ChunkType::fromConfigBSON(chunkBuilder.obj()));'],106
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/db/s/balancer/type_migration_test.cpp,8d5d7cd07db135a33287d49e77d9ef4dbaa0dd03,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/db/s/balancer/type_migration_test.cpp,-    ChunkType chunkType = assertGet(ChunkType::fromBSON(chunkBuilder.obj()));,-,ChunkType chunkType = assertGet,[u'ChunkType::fromBSON(chunkBuilder.obj()));'],63
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/db/s/balancer/type_migration_test.cpp,8d5d7cd07db135a33287d49e77d9ef4dbaa0dd03,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/db/s/balancer/type_migration_test.cpp,+    ChunkType chunkType = assertGet(ChunkType::fromConfigBSON(chunkBuilder.obj()));,+,ChunkType chunkType = assertGet,[u'ChunkType::fromConfigBSON(chunkBuilder.obj()));'],64
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,-    auto mergedChunk = uassertStatusOK(ChunkType::fromBSON(chunksVector.front()));,-,auto mergedChunk = uassertStatusOK,[u'ChunkType::fromBSON(chunksVector.front()));'],90
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+    auto mergedChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.front()));,+,auto mergedChunk = uassertStatusOK,[u'ChunkType::fromConfigBSON(chunksVector.front()));'],91
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,-    auto mergedChunk = uassertStatusOK(ChunkType::fromBSON(chunksVector.front()));,-,auto mergedChunk = uassertStatusOK,[u'ChunkType::fromBSON(chunksVector.front()));'],162
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+    auto mergedChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.front()));,+,auto mergedChunk = uassertStatusOK,[u'ChunkType::fromConfigBSON(chunksVector.front()));'],163
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,-    auto mergedChunk = uassertStatusOK(ChunkType::fromBSON(chunksVector.front()));,-,auto mergedChunk = uassertStatusOK,[u'ChunkType::fromBSON(chunksVector.front()));'],238
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+    auto mergedChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.front()));,+,auto mergedChunk = uassertStatusOK,[u'ChunkType::fromConfigBSON(chunksVector.front()));'],239
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,-    auto mergedChunk = uassertStatusOK(ChunkType::fromBSON(chunksVector.front()));,-,auto mergedChunk = uassertStatusOK,[u'ChunkType::fromBSON(chunksVector.front()));'],310
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+    auto mergedChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.front()));,+,auto mergedChunk = uassertStatusOK,[u'ChunkType::fromConfigBSON(chunksVector.front()));'],311
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,-    auto foundOtherChunk = uassertStatusOK(ChunkType::fromBSON(chunksVector.back()));,-,auto foundOtherChunk = uassertStatusOK,[u'ChunkType::fromBSON(chunksVector.back()));'],330
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+    auto foundOtherChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.back()));,+,auto foundOtherChunk = uassertStatusOK,[u'ChunkType::fromConfigBSON(chunksVector.back()));'],331
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,-    ChunkType foundChunk = uassertStatusOK(ChunkType::fromBSON(chunksVector.front()));,-,ChunkType foundChunk = uassertStatusOK,[u'ChunkType::fromBSON(chunksVector.front()));'],464
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,"-    ASSERT_BSONOBJ_EQ(mergedChunk.toBSON(), foundChunk.toBSON());",-,ASSERT_BSONOBJ_EQ,"[u'mergedChunk.toBSON(), foundChunk.toBSON());']",465
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+    ChunkType foundChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.front()));,+,ChunkType foundChunk = uassertStatusOK,[u'ChunkType::fromConfigBSON(chunksVector.front()));'],466
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,cdb71cfa7cf644ee7348ec75b05733858eabcb5b,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,"+    ASSERT_BSONOBJ_EQ(mergedChunk.toConfigBSON(), foundChunk.toConfigBSON());",+,ASSERT_BSONOBJ_EQ,"[u'mergedChunk.toConfigBSON(), foundChunk.toConfigBSON());']",467
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"-        ASSERT_BSONOBJ_EQ(kReplSecondaryOkMetadata,",-,ASSERT_BSONOBJ_EQ,"[u'kReplSecondaryOkMetadata,']",501
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"+            ASSERT_BSONOBJ_EQ(kReplSecondaryOkMetadata,",+,ASSERT_BSONOBJ_EQ,"[u'kReplSecondaryOkMetadata,']",505
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"-        ASSERT_EQ(nss.ns(), ChunkType::ConfigNS);",-,ASSERT_EQ,"[u'nss.ns(), ChunkType::ConfigNS);']",509
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"+            ASSERT_EQ(nss.ns(), ChunkType::ConfigNS);",+,ASSERT_EQ,"[u'nss.ns(), ChunkType::ConfigNS);']",511
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"-        auto query = assertGet(QueryRequest::makeFromFindCommand(nss, request.cmdObj, false));",-,auto query = assertGet,"[u'QueryRequest::makeFromFindCommand(nss, request.cmdObj, false));']",513
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"+            auto query = assertGet(QueryRequest::makeFromFindCommand(nss, request.cmdObj, false));",+,auto query = assertGet,"[u'QueryRequest::makeFromFindCommand(nss, request.cmdObj, false));']",514
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"-        ASSERT_EQ(query->ns(), ChunkType::ConfigNS);",-,ASSERT_EQ,"[u'query->ns(), ChunkType::ConfigNS);']",516
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"-        ASSERT_BSONOBJ_EQ(query->getFilter(), chunksQuery);",-,ASSERT_BSONOBJ_EQ,"[u'query->getFilter(), chunksQuery);']",517
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"-        ASSERT_BSONOBJ_EQ(query->getSort(), BSON(ChunkType::DEPRECATED_lastmod() << -1));",-,ASSERT_BSONOBJ_EQ,"[u'query->getSort(), BSON(ChunkType::DEPRECATED_lastmod() << -1));']",518
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"-        ASSERT_EQ(query->getLimit().get(), 1);",-,ASSERT_EQ,"[u'query->getLimit().get(), 1);']",519
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"+            ASSERT_EQ(query->ns(), ChunkType::ConfigNS);",+,ASSERT_EQ,"[u'query->ns(), ChunkType::ConfigNS);']",520
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"+            ASSERT_BSONOBJ_EQ(query->getFilter(), chunksQuery);",+,ASSERT_BSONOBJ_EQ,"[u'query->getFilter(), chunksQuery);']",521
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"+            ASSERT_BSONOBJ_EQ(query->getSort(), BSON(ChunkType::DEPRECATED_lastmod() << -1));",+,ASSERT_BSONOBJ_EQ,"[u'query->getSort(), BSON(ChunkType::DEPRECATED_lastmod() << -1));']",522
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"+            ASSERT_EQ(query->getLimit().get(), 1);",+,ASSERT_EQ,"[u'query->getLimit().get(), 1);']",523
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,-        metadata.writeToMetadata(&builder);,-,metadata.writeToMetadata,[u'&builder);'],530
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,+            metadata.writeToMetadata(&builder);,+,metadata.writeToMetadata,[u'&builder);'],533
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"-    ASSERT_BSONOBJ_EQ(chunkA.toBSON(), chunks[0].toBSON());",-,ASSERT_BSONOBJ_EQ,"[u'chunkA.toBSON(), chunks[0].toBSON());']",542
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"-    ASSERT_BSONOBJ_EQ(chunkB.toBSON(), chunks[1].toBSON());",-,ASSERT_BSONOBJ_EQ,"[u'chunkB.toBSON(), chunks[1].toBSON());']",543
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"+    ASSERT_BSONOBJ_EQ(chunkA.toConfigBSON(), chunks[0].toConfigBSON());",+,ASSERT_BSONOBJ_EQ,"[u'chunkA.toConfigBSON(), chunks[0].toConfigBSON());']",544
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,d062d59023eb74ed1763c38524af082cbcb46660,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/sharding_catalog_test.cpp,"+    ASSERT_BSONOBJ_EQ(chunkB.toConfigBSON(), chunks[1].toConfigBSON());",+,ASSERT_BSONOBJ_EQ,"[u'chunkB.toConfigBSON(), chunks[1].toConfigBSON());']",545
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,+    ASSERT_FALSE(chunkRes.isOK());,+,ASSERT_FALSE,[u'chunkRes.isOK());'],121
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_EQUALS(chunkRes.getStatus(), ErrorCodes::NoSuchKey);",+,ASSERT_EQUALS,"[u'chunkRes.getStatus(), ErrorCodes::NoSuchKey);']",140
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_STRING_CONTAINS(chunkRes.getStatus().reason(), ChunkType::minShardID.name());",+,ASSERT_STRING_CONTAINS,"[u'chunkRes.getStatus().reason(), ChunkType::minShardID.name());']",141
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_EQUALS(chunkRes.getStatus(), ErrorCodes::NoSuchKey);",+,ASSERT_EQUALS,"[u'chunkRes.getStatus(), ErrorCodes::NoSuchKey);']",146
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_STRING_CONTAINS(chunkRes.getStatus().reason(), ChunkType::max.name());",+,ASSERT_STRING_CONTAINS,"[u'chunkRes.getStatus().reason(), ChunkType::max.name());']",147
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_EQUALS(chunkRes.getStatus(), ErrorCodes::NoSuchKey);",+,ASSERT_EQUALS,"[u'chunkRes.getStatus(), ErrorCodes::NoSuchKey);']",152
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_STRING_CONTAINS(chunkRes.getStatus().reason(), ChunkType::shard.name());",+,ASSERT_STRING_CONTAINS,"[u'chunkRes.getStatus().reason(), ChunkType::shard.name());']",153
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_EQUALS(chunkRes.getStatus(), ErrorCodes::BadValue);",+,ASSERT_EQUALS,"[u'chunkRes.getStatus(), ErrorCodes::BadValue);']",158
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ChunkType shardChunk = assertGet(ChunkType::fromShardBSON(obj, epoch));",+,ChunkType shardChunk = assertGet,"[u'ChunkType::fromShardBSON(obj, epoch));']",170
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_BSONOBJ_EQ(obj, shardChunk.toShardBSON());",+,ASSERT_BSONOBJ_EQ,"[u'obj, shardChunk.toShardBSON());']",172
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_BSONOBJ_EQ(kMin, shardChunk.getMin());",+,ASSERT_BSONOBJ_EQ,"[u'kMin, shardChunk.getMin());']",174
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_BSONOBJ_EQ(kMax, shardChunk.getMax());",+,ASSERT_BSONOBJ_EQ,"[u'kMax, shardChunk.getMax());']",175
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_EQUALS(kShard, shardChunk.getShard());",+,ASSERT_EQUALS,"[u'kShard, shardChunk.getShard());']",176
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_EQUALS(chunkVersion, shardChunk.getVersion());",+,ASSERT_EQUALS,"[u'chunkVersion, shardChunk.getVersion());']",177
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ASSERT_BSONOBJ_EQ(chunk.toConfigBSON(), obj);",+,ASSERT_BSONOBJ_EQ,"[u'chunk.toConfigBSON(), obj);']",341
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"-    ChunkType chunk = assertGet(ChunkType::fromBSON(BSON(""_id""",-,ChunkType chunk = assertGet,"[u'ChunkType::fromBSON(BSON(""_id""']",380
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,4589e4d4c38e2d1a70b719fc87742347dd76bc75,https://raw.githubusercontent.com/mongodb/mongo/03028591aec8f6e8f08c8c2be2f829772822d7dd/src/mongo/s/catalog/type_chunk_test.cpp,"+    ChunkType chunk = assertGet(ChunkType::fromConfigBSON(BSON(""_id""",+,ChunkType chunk = assertGet,"[u'ChunkType::fromConfigBSON(BSON(""_id""']",392
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"-            log() << ""startCommit never finished!"" << migrateLog;",-,log,"[u') << ""startCommit never finished!"" << migrateLog;']",469
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"-    log() << ""startCommit failed, final data failed to transfer"" << migrateLog;",-,log,"[u') << ""startCommit failed, final data failed to transfer"" << migrateLog;']",481
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"-        error() << ""migrate failed: "" << redact(e.what()) << migrateLog;",-,error,"[u') << ""migrate failed: "" << redact(e.what()) << migrateLog;']",556
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"+        log() << ""migrate failed: "" << redact(e.what());",+,log,"[u') << ""migrate failed: "" << redact(e.what());']",557
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"-        error() << ""migrate failed with unknown exception"" << migrateLog;",-,error,"[u') << ""migrate failed with unknown exception"" << migrateLog;']",565
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"+        log() << ""migrate failed with unknown exception"";",+,log,"[u') << ""migrate failed with unknown exception"";']",566
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,-        error() << errmsg << migrateLog;,-,error,[u') << errmsg << migrateLog;'],625
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"+        error() << ""Migration abort requested before it started"";",+,error,"[u') << ""Migration abort requested before it started"";']",626
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,-                error() << errmsg << migrateLog;,-,error,[u') << errmsg << migrateLog;'],935
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,+                log() << _errmsg;,+,log,[u') << _errmsg;'],938
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,-                    error() << errmsg << migrateLog;,-,error,[u') << errmsg << migrateLog;'],962
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"+                    log() << ""Migration aborted while copying documents"";",+,log,"[u') << ""Migration aborted while copying documents"";']",963
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"-                error() << ""_transferMods failed: "" << redact(res) << migrateLog;",-,error,"[u') << ""_transferMods failed: "" << redact(res) << migrateLog;']",1048
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"+                log() << ""_transferMods failed: "" << redact(res);",+,log,"[u') << ""_transferMods failed: "" << redact(res);']",1051
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,-                    error() << errmsg << migrateLog;,-,error,[u') << errmsg << migrateLog;'],1080
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"+                    log() << ""Migration aborted while waiting for replication at catch up stage"";",+,log,"[u') << ""Migration aborted while waiting for replication at catch up stage"";']",1081
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"+                    log() << ""secondaries having hard time keeping up with migrate"";",+,log,"[u') << ""secondaries having hard time keeping up with migrate"";']",1091
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,-                error() << errmsg << migrateLog;,-,error,[u') << errmsg << migrateLog;'],1099
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,+                log() << _errmsg;,+,log,[u') << _errmsg;'],1101
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,-                error() << errmsg << migrateLog;,-,error,[u') << errmsg << migrateLog;'],1145
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"+                log() << ""Migration aborted while waiting for replication"";",+,log,"[u') << ""Migration aborted while waiting for replication"";']",1146
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,-            error() << errmsg << migrateLog;,-,error,[u') << errmsg << migrateLog;'],1170
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,+            log() << _errmsg;,+,log,[u') << _errmsg;'],1172
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"-                log() << ""_transferMods failed in STEADY state: "" << redact(res) << migrateLog;",-,log,"[u') << ""_transferMods failed in STEADY state: "" << redact(res) << migrateLog;']",1208
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"+                log() << ""_transferMods failed in STEADY state: "" << redact(res);",+,log,"[u') << ""_transferMods failed in STEADY state: "" << redact(res);']",1210
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,-                error() << errmsg << migrateLog;,-,error,[u') << errmsg << migrateLog;'],1243
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"+                log() << ""Migration aborted while transferring mods"";",+,log,"[u') << ""Migration aborted while transferring mods"";']",1244
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,+            log() << _errmsg;,+,log,[u') << _errmsg;'],1273
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,4119f3617de89f8413f8cb1de012e9340df31edb,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager.cpp,"+        OCCASIONALLY log() << ""migrate commit waiting for a majority of slaves for '"" << ns << ""' """,+,OCCASIONALLY log,"[u') << ""migrate commit waiting for a majority of slaves for \'"" << ns << ""\' ""']",1403
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,3d684fda2906a91cb5b1dbe1399eafdc44aa2f7f,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,-            uassertStatusOK(MigrationSessionId::extractFromBSON(cmdObj)));,-,uassertStatusOK,[u'MigrationSessionId::extractFromBSON(cmdObj)));'],251
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,3d684fda2906a91cb5b1dbe1399eafdc44aa2f7f,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+        auto const sessionId = uassertStatusOK(MigrationSessionId::extractFromBSON(cmdObj));,+,auto const sessionId = uassertStatusOK,[u'MigrationSessionId::extractFromBSON(cmdObj));'],257
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,3d684fda2906a91cb5b1dbe1399eafdc44aa2f7f,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+            log() << status.reason();,+,log,[u') << status.reason();'],262
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,3d684fda2906a91cb5b1dbe1399eafdc44aa2f7f,https://raw.githubusercontent.com/mongodb/mongo/caacf2f709ae9a01384d1de658628185259dfed2/src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+                log() << status.reason();,+,log,[u') << status.reason();'],331
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual(std::set<size_t>{1U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'std::set<size_t>{1U}, actualArrayComponents);']",198
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << BSONArray())}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << BSONArray())}, actualElements);']",210
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual(std::set<size_t>{1U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'std::set<size_t>{1U}, actualArrayComponents);']",244
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << BSON_ARRAY(3))}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << BSON_ARRAY(3))}, actualElements);']",256
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 2)}, actualElements);']",558
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'std::set<size_t>{}, actualArrayComponents);']",559
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 1), BSON("""" << 2)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 1), BSON("""" << 2)}, actualElements);']",571
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({2U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{2U}, actualArrayComponents);']",572
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << BSON_ARRAY(1 << 2))}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << BSON_ARRAY(1 << 2))}, actualElements);']",584
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'std::set<size_t>{}, actualArrayComponents);']",585
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual(std::vector<BSONObj>{}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'std::vector<BSONObj>{}, actualElements);']",597
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({0U, 1U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{0U, 1U}, actualArrayComponents);']",598
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 3)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 3)}, actualElements);']",610
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,341750a9777c39122fd2d8ca48a9b7bbd060dcc2,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({1U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{1U}, actualArrayComponents);']",611
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/btree_key_generator_test.cpp,a884b5ce619f274f8936be475bd761fc4769d009,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/btree_key_generator_test.cpp,"+    ASSERT(testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));",+,ASSERT,"[u'testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));']",842
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/btree_key_generator_test.cpp,a884b5ce619f274f8936be475bd761fc4769d009,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/btree_key_generator_test.cpp,"+    ASSERT(testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));",+,ASSERT,"[u'testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));']",852
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/btree_key_generator_test.cpp,a884b5ce619f274f8936be475bd761fc4769d009,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/btree_key_generator_test.cpp,"+    ASSERT(testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));",+,ASSERT,"[u'testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));']",861
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/btree_key_generator_test.cpp,a884b5ce619f274f8936be475bd761fc4769d009,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/btree_key_generator_test.cpp,"+    ASSERT(testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));",+,ASSERT,"[u'testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));']",870
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,5a3f471d827545bf703c575a6e7e9a9bc902f74f,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/s2_key_generator_test.cpp,"+    assertKeysetsEqual(expectedKeys, actualKeys);",+,assertKeysetsEqual,"[u'expectedKeys, actualKeys);']",436
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,5a3f471d827545bf703c575a6e7e9a9bc902f74f,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/s2_key_generator_test.cpp,"+    assertMultikeyPathsEqual(MultikeyPaths{{0U}, std::set<size_t>{}}, actualMultikeyPaths);",+,assertMultikeyPathsEqual,"[u'MultikeyPaths{{0U}, std::set<size_t>{}}, actualMultikeyPaths);']",437
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,5a3f471d827545bf703c575a6e7e9a9bc902f74f,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/s2_key_generator_test.cpp,"+    assertKeysetsEqual(expectedKeys, actualKeys);",+,assertKeysetsEqual,"[u'expectedKeys, actualKeys);']",455
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,5a3f471d827545bf703c575a6e7e9a9bc902f74f,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/s2_key_generator_test.cpp,"+    assertMultikeyPathsEqual(MultikeyPaths{std::set<size_t>{}, {0U}}, actualMultikeyPaths);",+,assertMultikeyPathsEqual,"[u'MultikeyPaths{std::set<size_t>{}, {0U}}, actualMultikeyPaths);']",456
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,5a3f471d827545bf703c575a6e7e9a9bc902f74f,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/s2_key_generator_test.cpp,"+    assertKeysetsEqual(expectedKeys, actualKeys);",+,assertKeysetsEqual,"[u'expectedKeys, actualKeys);']",474
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,5a3f471d827545bf703c575a6e7e9a9bc902f74f,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/s2_key_generator_test.cpp,"+    assertMultikeyPathsEqual(MultikeyPaths{{1U}, std::set<size_t>{}}, actualMultikeyPaths);",+,assertMultikeyPathsEqual,"[u'MultikeyPaths{{1U}, std::set<size_t>{}}, actualMultikeyPaths);']",475
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,5a3f471d827545bf703c575a6e7e9a9bc902f74f,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/s2_key_generator_test.cpp,"+    assertKeysetsEqual(expectedKeys, actualKeys);",+,assertKeysetsEqual,"[u'expectedKeys, actualKeys);']",493
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,5a3f471d827545bf703c575a6e7e9a9bc902f74f,https://raw.githubusercontent.com/mongodb/mongo/c7c8e4151ddc745aea9c0f07ed1890518d00723d/src/mongo/db/index/s2_key_generator_test.cpp,"+    assertMultikeyPathsEqual(MultikeyPaths{{0U}, std::set<size_t>{}}, actualMultikeyPaths);",+,assertMultikeyPathsEqual,"[u'MultikeyPaths{{0U}, std::set<size_t>{}}, actualMultikeyPaths);']",494
310ce16e32d0f2c110a0f8e2b11e0e0cbc1617ad,SERVER-26213 Remove MigrationManager::CollectionMigrationsState::distLockHandle variable,src/mongo/db/s/balancer/migration_manager.cpp,6253ebd2b2595027d8f520bab69c402a61e9a5c7,https://raw.githubusercontent.com/mongodb/mongo/310ce16e32d0f2c110a0f8e2b11e0e0cbc1617ad/src/mongo/db/s/balancer/migration_manager.cpp,-        Grid::get(txn)->catalogClient(txn)->getDistLockManager()->lockWithSessionID(,-,Grid::get(txn)->catalogClient,[u'txn)->getDistLockManager()->lockWithSessionID('],100
310ce16e32d0f2c110a0f8e2b11e0e0cbc1617ad,SERVER-26213 Remove MigrationManager::CollectionMigrationsState::distLockHandle variable,src/mongo/db/s/balancer/migration_manager.cpp,6253ebd2b2595027d8f520bab69c402a61e9a5c7,https://raw.githubusercontent.com/mongodb/mongo/310ce16e32d0f2c110a0f8e2b11e0e0cbc1617ad/src/mongo/db/s/balancer/migration_manager.cpp,+            Grid::get(txn)->catalogClient(txn)->getDistLockManager()->lockWithSessionID(,+,Grid::get(txn)->catalogClient,[u'txn)->getDistLockManager()->lockWithSessionID('],528
94b37aac060bcc8b10c3eb41f178d84008136f9c,"SERVER-4786 Allow specifying sample rate of slow queries

Adds a sampleRate parameter to the profile command, a value
on the interval [0, 1] which indicates which fraction of
operations should be randomly sampled for profiling and
logging. This allows users to reduce their slowms threshold
or increase their profiling level with less performance
impact on the system.

Closes #1099

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/db/commands/dbcommands.cpp,b9e0fd0766970f63a410a1909a694b26a5f3cf10,https://raw.githubusercontent.com/mongodb/mongo/94b37aac060bcc8b10c3eb41f178d84008136f9c/src/mongo/db/commands/dbcommands.cpp,+        uassertStatusOK(bsonExtractDoubleFieldWithDefault(,+,uassertStatusOK,[u'bsonExtractDoubleFieldWithDefault('],442
94b37aac060bcc8b10c3eb41f178d84008136f9c,"SERVER-4786 Allow specifying sample rate of slow queries

Adds a sampleRate parameter to the profile command, a value
on the interval [0, 1] which indicates which fraction of
operations should be randomly sampled for profiling and
logging. This allows users to reduce their slowms threshold
or increase their profiling level with less performance
impact on the system.

Closes #1099

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/db/commands/dbcommands.cpp,b9e0fd0766970f63a410a1909a694b26a5f3cf10,https://raw.githubusercontent.com/mongodb/mongo/94b37aac060bcc8b10c3eb41f178d84008136f9c/src/mongo/db/commands/dbcommands.cpp,"+        uassert(ErrorCodes::BadValue,",+,uassert,"[u'ErrorCodes::BadValue,']",444
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/chunk.cpp,be3e0b870ba38af92534bc3a2506648b981cc05d,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/chunk.cpp,"-            uassertStatusOK(shardutil::selectMedianKey(txn,",-,uassertStatusOK,"[u'shardutil::selectMedianKey(txn,']",233
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/chunk.cpp,be3e0b870ba38af92534bc3a2506648b981cc05d,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/chunk.cpp,"-            uassertStatusOK(shardutil::selectChunkSplitPoints(txn,",-,uassertStatusOK,"[u'shardutil::selectChunkSplitPoints(txn,']",259
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/chunk.cpp,be3e0b870ba38af92534bc3a2506648b981cc05d,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/chunk.cpp,"+        uassertStatusOK(shardutil::selectChunkSplitPoints(txn,",+,uassertStatusOK,"[u'shardutil::selectChunkSplitPoints(txn,']",289
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/chunk.cpp,be3e0b870ba38af92534bc3a2506648b981cc05d,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/chunk.cpp,-        LOG(1) << msg;,-,LOG,[u'1) << msg;'],365
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/chunk.cpp,be3e0b870ba38af92534bc3a2506648b981cc05d,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/chunk.cpp,-        log() << msg;,-,log,[u') << msg;'],409
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/chunk.cpp,be3e0b870ba38af92534bc3a2506648b981cc05d,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/chunk.cpp,-        log() << msg;,-,log,[u') << msg;'],417
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,b8799b63cd04bfc12d438feaac26c640bde24bbc,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/commands/cluster_split_cmd.cpp,"+    auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",+,auto shard = uassertStatusOK,"[u'Grid::get(txn)->shardRegistry()->getShard(txn, shardId));']",74
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,b8799b63cd04bfc12d438feaac26c640bde24bbc,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/commands/cluster_split_cmd.cpp,+    auto cmdResponse = uassertStatusOK(,+,auto cmdResponse = uassertStatusOK,[u''],76
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,b8799b63cd04bfc12d438feaac26c640bde24bbc,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/commands/cluster_split_cmd.cpp,+    uassertStatusOK(cmdResponse.commandStatus);,+,uassertStatusOK,[u'cmdResponse.commandStatus);'],83
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,b8799b63cd04bfc12d438feaac26c640bde24bbc,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/commands/cluster_split_cmd.cpp,"+    uasserted(ErrorCodes::CannotSplit,",+,uasserted,"[u'ErrorCodes::CannotSplit,']",91
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,b8799b63cd04bfc12d438feaac26c640bde24bbc,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/commands/cluster_split_cmd.cpp,"-            uassertStatusOK(chunk->split(txn, Chunk::atMedian, nullptr));",-,uassertStatusOK,"[u'chunk->split(txn, Chunk::atMedian, nullptr));']",343
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,b8799b63cd04bfc12d438feaac26c640bde24bbc,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/commands/cluster_split_cmd.cpp,"-            uassertStatusOK(shardutil::splitChunkAtMultiplePoints(txn,",-,uassertStatusOK,"[u'shardutil::splitChunkAtMultiplePoints(txn,']",345
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,b8799b63cd04bfc12d438feaac26c640bde24bbc,https://raw.githubusercontent.com/mongodb/mongo/5d2fbb084e463ef3417dffac0f01246698c1a404/src/mongo/s/commands/cluster_split_cmd.cpp,+        uassertStatusOK(,+,uassertStatusOK,[u''],357
60185f785b617c775fd15cd6c7212373d936f0d5,"SERVER-27800 Change ReplicationCoordinatorImpl and ReplicationExecutor constructors to take owned objects by unique_ptr

The constructors of ReplicationCoordinatorImpl and ReplicationExecutor
predate C++11 support in the MongoDB codebase, and so receive bare
pointers to objects that they actually own. This patch is to changes the
constructors and some of the associated test infrastructure to
transfer ownership by passing unique_ptr, as in more modern
components.",src/mongo/db/db.cpp,2822fae92c2b7f5172c48cd9d487749a38468e81,https://raw.githubusercontent.com/mongodb/mongo/60185f785b617c775fd15cd6c7212373d936f0d5/src/mongo/db/db.cpp,"-        new repl::TopologyCoordinatorImpl(topoCoordOptions),",-,new repl::TopologyCoordinatorImpl,"[u'topoCoordOptions),']",890
60185f785b617c775fd15cd6c7212373d936f0d5,"SERVER-27800 Change ReplicationCoordinatorImpl and ReplicationExecutor constructors to take owned objects by unique_ptr

The constructors of ReplicationCoordinatorImpl and ReplicationExecutor
predate C++11 support in the MongoDB codebase, and so receive bare
pointers to objects that they actually own. This patch is to changes the
constructors and some of the associated test infrastructure to
transfer ownership by passing unique_ptr, as in more modern
components.",src/mongo/db/repl/replication_coordinator_test_fixture.cpp,b77836029b4789e94c13fb57b4e151d4445a379e,https://raw.githubusercontent.com/mongodb/mongo/60185f785b617c775fd15cd6c7212373d936f0d5/src/mongo/db/repl/replication_coordinator_test_fixture.cpp,-    _topo = new TopologyCoordinatorImpl(settings);,-,_topo = new TopologyCoordinatorImpl,[u'settings);'],125
97718a410d3d40f5c3f01dfae76e7ddd910897af,SERVER-27125 Arbiters in PV1 vote no if they can see a healthy primary of equal or greater priority to the candidate,src/mongo/db/repl/topology_coordinator_impl_test.cpp,b61f8907b41660b71335121d6910e9fa3a6c98b9,https://raw.githubusercontent.com/mongodb/mongo/97718a410d3d40f5c3f01dfae76e7ddd910897af/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(""can see a healthy primary of equal or greater priority"", response.getReason());",+,ASSERT_EQUALS,"[u'""can see a healthy primary of equal or greater priority"", response.getReason());']",6082
97718a410d3d40f5c3f01dfae76e7ddd910897af,SERVER-27125 Arbiters in PV1 vote no if they can see a healthy primary of equal or greater priority to the candidate,src/mongo/db/repl/topology_coordinator_impl_test.cpp,b61f8907b41660b71335121d6910e9fa3a6c98b9,https://raw.githubusercontent.com/mongodb/mongo/97718a410d3d40f5c3f01dfae76e7ddd910897af/src/mongo/db/repl/topology_coordinator_impl_test.cpp,+    ASSERT_FALSE(response.getVoteGranted());,+,ASSERT_FALSE,[u'response.getVoteGranted());'],6083
c54d665229604e6fd6bfc0e73c171524604e296b,SERVER-27050 jstest that rollback detects upstream node rolling back,src/mongo/db/repl/rs_rollback.cpp,c2f7666ab7a601180a708fac4c1867ead9dc2aef,https://raw.githubusercontent.com/mongodb/mongo/c54d665229604e6fd6bfc0e73c171524604e296b/src/mongo/db/repl/rs_rollback.cpp,"+        log() << ""rollback - rollbackHangThenFailAfterWritingMinValid fail point """,+,log,"[u') << ""rollback - rollbackHangThenFailAfterWritingMinValid fail point ""']",382
c54d665229604e6fd6bfc0e73c171524604e296b,SERVER-27050 jstest that rollback detects upstream node rolling back,src/mongo/db/repl/rs_rollback.cpp,c2f7666ab7a601180a708fac4c1867ead9dc2aef,https://raw.githubusercontent.com/mongodb/mongo/c54d665229604e6fd6bfc0e73c171524604e296b/src/mongo/db/repl/rs_rollback.cpp,"+        uasserted(40378,",+,uasserted,"[u'40378,']",388
c169d7bfd38abb845dfa5369a43781742d957d72,"Revert ""SERVER-27125 Arbiters in PV1 vote no if they can see a healthy primary of equal or greater priority to the candidate""

This reverts commit eef6335bbc0eedeb6f50120164ca0f198fb94303.",src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/c169d7bfd38abb845dfa5369a43781742d957d72/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"-    ASSERT_EQUALS(""can see a healthy primary of equal or greater priority"", response.getReason());",-,ASSERT_EQUALS,"[u'""can see a healthy primary of equal or greater priority"", response.getReason());']",6082
c169d7bfd38abb845dfa5369a43781742d957d72,"Revert ""SERVER-27125 Arbiters in PV1 vote no if they can see a healthy primary of equal or greater priority to the candidate""

This reverts commit eef6335bbc0eedeb6f50120164ca0f198fb94303.",src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/c169d7bfd38abb845dfa5369a43781742d957d72/src/mongo/db/repl/topology_coordinator_impl_test.cpp,-    ASSERT_FALSE(response.getVoteGranted());,-,ASSERT_FALSE,[u'response.getVoteGranted());'],6083
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/db/s/balancer/balancer.cpp,23f1aaf0989728cc15f691297e3868fc7e820c1c,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/db/s/balancer/balancer.cpp,"-            log() << ""Balancer distributed lock could not be acquired and will be retried in """,-,log,"[u') << ""Balancer distributed lock could not be acquired and will be retried in ""']",322
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/db/s/balancer/migration_manager.cpp,e8cc06048518d4ac8692eb20327d72688bfb3130,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/db/s/balancer/migration_manager.cpp,-    auto balancerLockStatus = distLockManager->tryLockWithLocalWriteConcern(,-,auto balancerLockStatus = distLockManager->tryLockWithLocalWriteConcern,[u''],244
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/db/s/balancer/migration_manager.cpp,e8cc06048518d4ac8692eb20327d72688bfb3130,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/db/s/balancer/migration_manager.cpp,"-        log() << ""Failed to acquire balancer distributed lock. Abandoning balancer recovery.""",-,log,"[u') << ""Failed to acquire balancer distributed lock. Abandoning balancer recovery.""']",247
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/db/s/balancer/migration_manager.cpp,e8cc06048518d4ac8692eb20327d72688bfb3130,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/db/s/balancer/migration_manager.cpp,-        ->catalogClient(txn),-,->catalogClient,[u'txn)'],675
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"-    ASSERT_EQUALS(lock.getName(), ""balancer"");",-,ASSERT_EQUALS,"[u'lock.getName(), ""balancer"");']",63
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"+    ASSERT_EQUALS(lock.getName(), ""dummy"");",+,ASSERT_EQUALS,"[u'lock.getName(), ""dummy"");']",64
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"-    ASSERT_EQUALS(lock.getWho(), ""host.local:27017:1352918870:16807:Balancer:282475249"");",-,ASSERT_EQUALS,"[u'lock.getWho(), ""host.local:27017:1352918870:16807:Balancer:282475249"");']",68
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"-    ASSERT_EQUALS(lock.getWhy(), ""doing balance round"");",-,ASSERT_EQUALS,"[u'lock.getWhy(), ""doing balance round"");']",69
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"+    ASSERT_EQUALS(lock.getWho(), ""host.local:27017:1352918870:16807:Dummy:282475249"");",+,ASSERT_EQUALS,"[u'lock.getWho(), ""host.local:27017:1352918870:16807:Dummy:282475249"");']",70
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"+    ASSERT_EQUALS(lock.getWhy(), ""twiddling thumbs"");",+,ASSERT_EQUALS,"[u'lock.getWhy(), ""twiddling thumbs"");']",71
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"-    ASSERT_EQUALS(lock.getName(), ""balancer"");",-,ASSERT_EQUALS,"[u'lock.getName(), ""balancer"");']",82
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"+    ASSERT_EQUALS(lock.getName(), ""dummy"");",+,ASSERT_EQUALS,"[u'lock.getName(), ""dummy"");']",83
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"-    ASSERT_EQUALS(lock.getName(), ""balancer"");",-,ASSERT_EQUALS,"[u'lock.getName(), ""balancer"");']",102
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"+    ASSERT_EQUALS(lock.getName(), ""dummy"");",+,ASSERT_EQUALS,"[u'lock.getName(), ""dummy"");']",103
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"-    ASSERT_EQUALS(lock.getWho(), ""host.local:27017:1352918870:16807:Balancer:282475249"");",-,ASSERT_EQUALS,"[u'lock.getWho(), ""host.local:27017:1352918870:16807:Balancer:282475249"");']",107
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,3b938a36485bfabce7f5934397f532f0a215c430,https://raw.githubusercontent.com/mongodb/mongo/94be1956ffa4af698132bd7d65f8b79092566897/src/mongo/s/catalog/type_locks_test.cpp,"+    ASSERT_EQUALS(lock.getWho(), ""host.local:27017:1352918870:16807:Dummy:282475249"");",+,ASSERT_EQUALS,"[u'lock.getWho(), ""host.local:27017:1352918870:16807:Dummy:282475249"");']",108
eef6335bbc0eedeb6f50120164ca0f198fb94303,SERVER-27125 Arbiters in PV1 vote no if they can see a healthy primary of equal or greater priority to the candidate,src/mongo/db/repl/topology_coordinator_impl_test.cpp,b61f8907b41660b71335121d6910e9fa3a6c98b9,https://raw.githubusercontent.com/mongodb/mongo/eef6335bbc0eedeb6f50120164ca0f198fb94303/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(""can see a healthy primary of equal or greater priority"", response.getReason());",+,ASSERT_EQUALS,"[u'""can see a healthy primary of equal or greater priority"", response.getReason());']",6082
eef6335bbc0eedeb6f50120164ca0f198fb94303,SERVER-27125 Arbiters in PV1 vote no if they can see a healthy primary of equal or greater priority to the candidate,src/mongo/db/repl/topology_coordinator_impl_test.cpp,b61f8907b41660b71335121d6910e9fa3a6c98b9,https://raw.githubusercontent.com/mongodb/mongo/eef6335bbc0eedeb6f50120164ca0f198fb94303/src/mongo/db/repl/topology_coordinator_impl_test.cpp,+    ASSERT_FALSE(response.getVoteGranted());,+,ASSERT_FALSE,[u'response.getVoteGranted());'],6083
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/commands/dbcommands.cpp,7b5714b95e09446d527bc4570dae80b86d725794,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/commands/dbcommands.cpp,-                    uassertStatusOK(,-,uassertStatusOK,[u''],1588
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/commands/dbcommands.cpp,7b5714b95e09446d527bc4570dae80b86d725794,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/commands/dbcommands.cpp,"-                        uassertStatusOK({ErrorCodes::NoShardingEnabled,",-,uassertStatusOK,"[u'{ErrorCodes::NoShardingEnabled,']",1596
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/commands/dbcommands.cpp,7b5714b95e09446d527bc4570dae80b86d725794,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/commands/dbcommands.cpp,+                uassertStatusOK(shardingState->canAcceptShardedCommands());,+,uassertStatusOK,[u'shardingState->canAcceptShardedCommands());'],1603
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/commands/dbcommands.cpp,7b5714b95e09446d527bc4570dae80b86d725794,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/commands/dbcommands.cpp,-                uassertStatusOK(shardingState->updateConfigServerOpTimeFromMetadata(txn));,-,uassertStatusOK,[u'shardingState->updateConfigServerOpTimeFromMetadata(txn));'],1609
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/commands/dbcommands.cpp,7b5714b95e09446d527bc4570dae80b86d725794,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/commands/dbcommands.cpp,+            uassertStatusOK(shardingState->updateConfigServerOpTimeFromMetadata(txn));,+,uassertStatusOK,[u'shardingState->updateConfigServerOpTimeFromMetadata(txn));'],1612
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,c1267979332daf2734dedd3d2253032357c2b678,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,-            Grid::get(txn)->catalogManager()->initializeShardingAwarenessOnUnawareShards(txn);,-,Grid::get(txn)->catalogManager,[u')->initializeShardingAwarenessOnUnawareShards(txn);'],780
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/collection_sharding_state.cpp,e10d654d4efc5dbfa2de0d7536a69298e0f0c4f1,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/collection_sharding_state.cpp,"-    LegacyAddShardLogOpHandler(OperationContext* txn, ShardType shardType)",-,LegacyAddShardLogOpHandler,"[u'OperationContext* txn, ShardType shardType)']",94
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/collection_sharding_state.cpp,e10d654d4efc5dbfa2de0d7536a69298e0f0c4f1,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/collection_sharding_state.cpp,-        uassertStatusOK(,-,uassertStatusOK,[u''],98
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/collection_sharding_state.cpp,e10d654d4efc5dbfa2de0d7536a69298e0f0c4f1,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/collection_sharding_state.cpp,"-            Grid::get(_txn)->catalogManager()->upsertShardIdentityOnShard(_txn, _shardType));",-,Grid::get(_txn)->catalogManager,"[u')->upsertShardIdentityOnShard(_txn, _shardType));']",99
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/collection_sharding_state.cpp,e10d654d4efc5dbfa2de0d7536a69298e0f0c4f1,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/collection_sharding_state.cpp,"-    RemoveShardLogOpHandler(OperationContext* txn, ShardId shardId)",-,RemoveShardLogOpHandler,"[u'OperationContext* txn, ShardId shardId)']",116
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/collection_sharding_state.cpp,e10d654d4efc5dbfa2de0d7536a69298e0f0c4f1,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/collection_sharding_state.cpp,-        Grid::get(_txn)->catalogManager()->cancelAddShardTaskIfNeeded(_shardId);,-,Grid::get(_txn)->catalogManager,[u')->cancelAddShardTaskIfNeeded(_shardId);'],120
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/collection_sharding_state.cpp,e10d654d4efc5dbfa2de0d7536a69298e0f0c4f1,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/collection_sharding_state.cpp,-            const auto shardType = uassertStatusOK(ShardType::fromBSON(insertedDoc));,-,const auto shardType = uassertStatusOK,[u'ShardType::fromBSON(insertedDoc));'],264
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/collection_sharding_state.cpp,e10d654d4efc5dbfa2de0d7536a69298e0f0c4f1,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/collection_sharding_state.cpp,"-                new LegacyAddShardLogOpHandler(txn, std::move(shardType)));",-,new LegacyAddShardLogOpHandler,"[u'txn, std::move(shardType)));']",266
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/collection_sharding_state.cpp,e10d654d4efc5dbfa2de0d7536a69298e0f0c4f1,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/collection_sharding_state.cpp,"-                new RemoveShardLogOpHandler(txn, ShardId(std::move(shardIdStr))));",-,new RemoveShardLogOpHandler,"[u'txn, ShardId(std::move(shardIdStr))));']",328
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/merge_chunks_command.cpp,242c9d5fc7f0af507369c7670d23f1a150039a63,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/merge_chunks_command.cpp,+        uassertStatusOK(ShardingState::get(txn)->canAcceptShardedCommands());,+,uassertStatusOK,[u'ShardingState::get(txn)->canAcceptShardedCommands());'],383
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,c55a317e99f79d351703b4f2b41075d2a7867f7d,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+        uassertStatusOK(shardingState->canAcceptShardedCommands());,+,uassertStatusOK,[u'shardingState->canAcceptShardedCommands());'],97
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,c55a317e99f79d351703b4f2b41075d2a7867f7d,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,"-                dassert(cmdObj[""configServer""].type() == String);",-,dassert,"[u'cmdObj[""configServer""].type() == String);']",104
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/move_chunk_command.cpp,03a03c285bbc28d1c659e1ae3fa84242317fe773,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/move_chunk_command.cpp,+        uassertStatusOK(shardingState->canAcceptShardedCommands());,+,uassertStatusOK,[u'shardingState->canAcceptShardedCommands());'],121
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,6261ebc04818474535c21a39237559b896299e44,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/set_shard_version_command.cpp,"-            uassertStatusOK({ErrorCodes::NoShardingEnabled,",-,uassertStatusOK,"[u'{ErrorCodes::NoShardingEnabled,']",100
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,6261ebc04818474535c21a39237559b896299e44,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/set_shard_version_command.cpp,+        uassertStatusOK(shardingState->canAcceptShardedCommands());,+,uassertStatusOK,[u'shardingState->canAcceptShardedCommands());'],104
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,6261ebc04818474535c21a39237559b896299e44,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/set_shard_version_command.cpp,"+        uassert(ErrorCodes::BadValue,",+,uassert,"[u'ErrorCodes::BadValue,']",230
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,6261ebc04818474535c21a39237559b896299e44,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/set_shard_version_command.cpp,+        uassertStatusOK(givenConnStrStatus);,+,uassertStatusOK,[u'givenConnStrStatus);'],248
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,6261ebc04818474535c21a39237559b896299e44,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/set_shard_version_command.cpp,+            uassertStatusOK(ChunkVersion::parseFromBSONForSetShardVersion(cmdObj));,+,uassertStatusOK,[u'ChunkVersion::parseFromBSONForSetShardVersion(cmdObj));'],289
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,6261ebc04818474535c21a39237559b896299e44,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/set_shard_version_command.cpp,-            uassertStatusOK(ChunkVersion::parseFromBSONForSetShardVersion(cmdObj));,-,uassertStatusOK,[u'ChunkVersion::parseFromBSONForSetShardVersion(cmdObj));'],302
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,dda78ad8ae8ea61c8680491dae87174c45fa60d2,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state.cpp,"-            uassert(18509,",-,uassert,"[u'18509,']",370
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,dda78ad8ae8ea61c8680491dae87174c45fa60d2,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state.cpp,-            ConnectionString configSvrConnStr = uassertStatusOK(ConnectionString::parse(configSvr));,-,ConnectionString configSvrConnStr = uassertStatusOK,[u'ConnectionString::parse(configSvr));'],374
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,dda78ad8ae8ea61c8680491dae87174c45fa60d2,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state.cpp,-    uassertStatusOK(_waitForInitialization(txn->getDeadline()));,-,uassertStatusOK,[u'_waitForInitialization(txn->getDeadline()));'],385
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,dda78ad8ae8ea61c8680491dae87174c45fa60d2,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state.cpp,-    uassertStatusOK(reloadShardRegistryUntilSuccess(txn));,-,uassertStatusOK,[u'reloadShardRegistryUntilSuccess(txn));'],386
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,dda78ad8ae8ea61c8680491dae87174c45fa60d2,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state.cpp,-    uassertStatusOK(updateConfigServerOpTimeFromMetadata(txn));,-,uassertStatusOK,[u'updateConfigServerOpTimeFromMetadata(txn));'],387
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,dda78ad8ae8ea61c8680491dae87174c45fa60d2,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state.cpp,"+        fassert(40372, _shardName == shardIdentity.getShardName());",+,fassert,"[u'40372, _shardName == shardIdentity.getShardName());']",448
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,dda78ad8ae8ea61c8680491dae87174c45fa60d2,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state.cpp,"+        fassert(40373, prevConfigsvrConnStr.getSetName() == configSvrConnStr.getSetName());",+,fassert,"[u'40373, prevConfigsvrConnStr.getSetName() == configSvrConnStr.getSetName());']",458
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,dda78ad8ae8ea61c8680491dae87174c45fa60d2,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state.cpp,"+        fassert(40374, _clusterId == shardIdentity.getClusterId());",+,fassert,"[u'40374, _clusterId == shardIdentity.getClusterId());']",479
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,dda78ad8ae8ea61c8680491dae87174c45fa60d2,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state.cpp,"+            log() << ""initialized sharding components"";",+,log,"[u') << ""initialized sharding components"";']",540
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,dda78ad8ae8ea61c8680491dae87174c45fa60d2,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state.cpp,"+            log() << ""failed to initialize sharding components"" << causedBy(status);",+,log,"[u') << ""failed to initialize sharding components"" << causedBy(status);']",551
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,dda78ad8ae8ea61c8680491dae87174c45fa60d2,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state.cpp,"-        fassertStatusOK(34349, _initializationStatus);",-,fassertStatusOK,"[u'34349, _initializationStatus);']",593
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",-,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",264
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(ErrorCodes::InconsistentShardIdentity, status);",-,ASSERT_EQ,"[u'ErrorCodes::InconsistentShardIdentity, status);']",278
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,-    ASSERT_TRUE(shardingState()->enabled());,-,ASSERT_TRUE,[u'shardingState()->enabled());'],280
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(shardName(), shardingState()->getShardName());",-,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",281
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""config/a:1,b:2"", shardingState()->getConfigServer(operationContext()).toString());",-,ASSERT_EQ,"[u'""config/a:1,b:2"", shardingState()->getConfigServer(operationContext()).toString());']",282
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",-,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",293
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(ErrorCodes::InconsistentShardIdentity, status);",-,ASSERT_EQ,"[u'ErrorCodes::InconsistentShardIdentity, status);']",307
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,-    ASSERT_TRUE(shardingState()->enabled());,-,ASSERT_TRUE,[u'shardingState()->enabled());'],309
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(shardName(), shardingState()->getShardName());",-,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",310
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""config/a:1,b:2"", shardingState()->getConfigServer(operationContext()).toString());",-,ASSERT_EQ,"[u'""config/a:1,b:2"", shardingState()->getConfigServer(operationContext()).toString());']",311
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",-,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",321
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(ErrorCodes::InconsistentShardIdentity, status);",-,ASSERT_EQ,"[u'ErrorCodes::InconsistentShardIdentity, status);']",335
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,-    ASSERT_TRUE(shardingState()->enabled());,-,ASSERT_TRUE,[u'shardingState()->enabled());'],337
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(shardName(), shardingState()->getShardName());",-,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",338
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state_test.cpp,b42af89e7745b17a82af3e71f9136347b316e89c,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""config/a:1,b:2"", shardingState()->getConfigServer(operationContext()).toString());",-,ASSERT_EQ,"[u'""config/a:1,b:2"", shardingState()->getConfigServer(operationContext()).toString());']",339
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/split_chunk_command.cpp,09d7f147b27e7644f1cb74a5954ba0fa219b55cd,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/db/s/split_chunk_command.cpp,+        uassertStatusOK(shardingState->canAcceptShardedCommands());,+,uassertStatusOK,[u'shardingState->canAcceptShardedCommands());'],178
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,"-    ASSERT_OK(catalogClient()->insertConfigDocument(operationContext(),",-,ASSERT_OK(catalogClient,"[u')->insertConfigDocument(operationContext(),']",1081
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    assertShardExists(addedShard);,-,assertShardExists,[u'addedShard);'],1094
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,"-    ASSERT_OK(catalogClient()->insertConfigDocument(operationContext(),",-,ASSERT_OK(catalogClient,"[u')->insertConfigDocument(operationContext(),']",1120
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    assertShardExists(addedShard);,-,assertShardExists,[u'addedShard);'],1158
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,"-    ASSERT_OK(catalogClient()->insertConfigDocument(operationContext(),",-,ASSERT_OK(catalogClient,"[u')->insertConfigDocument(operationContext(),']",1186
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    assertShardExists(addedShard);,-,assertShardExists,[u'addedShard);'],1214
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,"-    ASSERT_OK(catalogClient()->insertConfigDocument(operationContext(),",-,ASSERT_OK(catalogClient,"[u')->insertConfigDocument(operationContext(),']",1240
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    catalogManager()->cancelAddShardTaskIfNeeded(addedShard.getName());,-,catalogManager,[u')->cancelAddShardTaskIfNeeded(addedShard.getName());'],1248
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    assertShardExists(addedShard);,-,assertShardExists,[u'addedShard);'],1257
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,"-    ASSERT_OK(catalogClient()->insertConfigDocument(operationContext(),",-,ASSERT_OK(catalogClient,"[u')->insertConfigDocument(operationContext(),']",1283
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    catalogManager()->cancelAddShardTaskIfNeeded(addedShard.getName());,-,catalogManager,[u')->cancelAddShardTaskIfNeeded(addedShard.getName());'],1312
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    assertShardExists(addedShard);,-,assertShardExists,[u'addedShard);'],1320
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,"-    ASSERT_OK(catalogClient()->insertConfigDocument(operationContext(),",-,ASSERT_OK(catalogClient,"[u')->insertConfigDocument(operationContext(),']",1346
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    catalogManager()->cancelAddShardTaskIfNeeded(addedShard.getName());,-,catalogManager,[u')->cancelAddShardTaskIfNeeded(addedShard.getName());'],1354
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,"-    ASSERT_OK(catalogManager()->upsertShardIdentityOnShard(operationContext(), addedShard));",-,ASSERT_OK(catalogManager,"[u')->upsertShardIdentityOnShard(operationContext(), addedShard));']",1358
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    assertShardExists(addedShard);,-,assertShardExists,[u'addedShard);'],1367
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    assertShardExists(addedShard);,-,assertShardExists,[u'addedShard);'],1373
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,"-    ASSERT_OK(catalogClient()->insertConfigDocument(operationContext(),",-,ASSERT_OK(catalogClient,"[u')->insertConfigDocument(operationContext(),']",1399
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    catalogManager()->cancelAddShardTaskIfNeeded(addedShard.getName());,-,catalogManager,[u')->cancelAddShardTaskIfNeeded(addedShard.getName());'],1414
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    assertShardExists(addedShard);,-,assertShardExists,[u'addedShard);'],1416
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,"-    ASSERT_OK(catalogClient()->insertConfigDocument(operationContext(),",-,ASSERT_OK(catalogClient,"[u')->insertConfigDocument(operationContext(),']",1442
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,"-    ASSERT_OK(catalogClient()->removeConfigDocuments(operationContext(),",-,ASSERT_OK(catalogClient,"[u')->removeConfigDocuments(operationContext(),']",1456
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,"-    ASSERT_OK(catalogClient()->insertConfigDocument(operationContext(),",-,ASSERT_OK(catalogClient,"[u')->insertConfigDocument(operationContext(),']",1463
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,df94c520318d60fd0afddf4b5db67d3a176667cb,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_add_shard_test.cpp,-    assertShardExists(addedShard);,-,assertShardExists,[u'addedShard);'],1472
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,b42ed6bb69edf907d265745daf2559f5f216d37d,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"-        log() << ""Retrying upsert of shardIdentity document into shard "" << shardType.getName();",-,log,"[u') << ""Retrying upsert of shardIdentity document into shard "" << shardType.getName();']",865
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,b42ed6bb69edf907d265745daf2559f5f216d37d,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,-        Status writeConcernStatus = getWriteConcernStatusFromCommandResult(responseObj);,-,Status writeConcernStatus = getWriteConcernStatusFromCommandResult,[u'responseObj);'],912
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,b42ed6bb69edf907d265745daf2559f5f216d37d,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"-            Shard::CommandResponse::processBatchWriteResponse(commandResponse, &batchResponse);",-,Shard::CommandResponse::processBatchWriteResponse,"[u'commandResponse, &batchResponse);']",920
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,b42ed6bb69edf907d265745daf2559f5f216d37d,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,-            ->catalogClient(txnPtr.get()),-,->catalogClient,[u'txnPtr.get())'],990
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,b42ed6bb69edf907d265745daf2559f5f216d37d,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"-    fassert(40219, swHandle.getStatus());",-,fassert,"[u'40219, swHandle.getStatus());']",1061
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/set_shard_version_request_test.cpp,7e209414765da7bea5d3417440c64934e6511e9f,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/set_shard_version_request_test.cpp,-    ASSERT(ssv.isInit());,-,ASSERT,[u'ssv.isInit());'],292
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/set_shard_version_request_test.cpp,7e209414765da7bea5d3417440c64934e6511e9f,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/set_shard_version_request_test.cpp,-    ASSERT(ssv.isAuthoritative());,-,ASSERT,[u'ssv.isAuthoritative());'],293
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/set_shard_version_request_test.cpp,7e209414765da7bea5d3417440c64934e6511e9f,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/set_shard_version_request_test.cpp,-    ASSERT(ssv.getNoConnectionVersioning());,-,ASSERT,[u'ssv.getNoConnectionVersioning());'],294
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/set_shard_version_request_test.cpp,7e209414765da7bea5d3417440c64934e6511e9f,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/set_shard_version_request_test.cpp,"-    ASSERT_EQ(ssv.getConfigServer().toString(), configCS.toString());",-,ASSERT_EQ,"[u'ssv.getConfigServer().toString(), configCS.toString());']",295
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/set_shard_version_request_test.cpp,7e209414765da7bea5d3417440c64934e6511e9f,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/set_shard_version_request_test.cpp,"-    ASSERT_EQ(ssv.getShardName(), ""TestShard"");",-,ASSERT_EQ,"[u'ssv.getShardName(), ""TestShard"");']",296
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/set_shard_version_request_test.cpp,7e209414765da7bea5d3417440c64934e6511e9f,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/set_shard_version_request_test.cpp,"-    ASSERT_EQ(ssv.getShardConnectionString().toString(), shardCS.toString());",-,ASSERT_EQ,"[u'ssv.getShardConnectionString().toString(), shardCS.toString());']",297
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/s/set_shard_version_request_test.cpp,7e209414765da7bea5d3417440c64934e6511e9f,https://raw.githubusercontent.com/mongodb/mongo/ac5d193edf5c1e170119871dd4bfdc5a839fc1cf/src/mongo/s/set_shard_version_request_test.cpp,"-    ASSERT_BSONOBJ_EQ(ssv.toBSON(),",-,ASSERT_BSONOBJ_EQ,"[u'ssv.toBSON(),']",299
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker.cpp,fddef67d4fa0dee401e89223c6c3cc5b59dc806e,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/freshness_checker.cpp,"-        log() << ""not electing self, we are not freshest"";",-,log,"[u') << ""not electing self, we are not freshest"";']",153
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker.cpp,fddef67d4fa0dee401e89223c6c3cc5b59dc806e,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/freshness_checker.cpp,"+        log() << ""not electing self, "" << request.target.toString()",+,log,"[u') << ""not electing self, "" << request.target.toString()']",154
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker.cpp,fddef67d4fa0dee401e89223c6c3cc5b59dc806e,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/freshness_checker.cpp,"+        log() << ""not electing self, "" << request.target.toString()",+,log,"[u') << ""not electing self, "" << request.target.toString()']",177
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker.cpp,fddef67d4fa0dee401e89223c6c3cc5b59dc806e,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/freshness_checker.cpp,"+        log() << ""not electing self, "" << request.target.toString()",+,log,"[u') << ""not electing self, "" << request.target.toString()']",183
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker_test.cpp,5c33c8988bb41409669ecb50a046b7f94e17f94d,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/freshness_checker_test.cpp,"-    ASSERT_EQUALS(1, countLogLinesContaining(""not electing self, we are not freshest""));",-,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""not electing self, we are not freshest""));']",281
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker_test.cpp,5c33c8988bb41409669ecb50a046b7f94e17f94d,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/freshness_checker_test.cpp,+    ASSERT_EQUALS(,+,ASSERT_EQUALS,[u''],282
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker_test.cpp,5c33c8988bb41409669ecb50a046b7f94e17f94d,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/freshness_checker_test.cpp,"+        1, countLogLinesContaining(""not electing self, h1:27017 knows a node is fresher than us""));",+,"1, countLogLinesContaining","[u'""not electing self, h1:27017 knows a node is fresher than us""));']",283
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker_test.cpp,5c33c8988bb41409669ecb50a046b7f94e17f94d,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/freshness_checker_test.cpp,"-    ASSERT_EQUALS(1, countLogLinesContaining(""not electing self, we are not freshest""));",-,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""not electing self, we are not freshest""));']",518
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker_test.cpp,5c33c8988bb41409669ecb50a046b7f94e17f94d,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/freshness_checker_test.cpp,+    ASSERT_EQUALS(,+,ASSERT_EQUALS,[u''],519
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker_test.cpp,5c33c8988bb41409669ecb50a046b7f94e17f94d,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/freshness_checker_test.cpp,"+        1, countLogLinesContaining(""not electing self, h1:27017 knows a node is fresher than us""));",+,"1, countLogLinesContaining","[u'""not electing self, h1:27017 knows a node is fresher than us""));']",520
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/replication_coordinator_impl_elect.cpp,2aacae33e81d3ca0b4a0c15fd45325a95a68b5d8,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/replication_coordinator_impl_elect.cpp,"-    log() << ""running for election"";",-,log,"[u') << ""running for election"";']",210
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/replication_coordinator_impl_elect.cpp,2aacae33e81d3ca0b4a0c15fd45325a95a68b5d8,https://raw.githubusercontent.com/mongodb/mongo/7480e053bb992f869bf83c8e54ee088afa199bb9/src/mongo/db/repl/replication_coordinator_impl_elect.cpp,"+    log() << ""running for election""",+,log,"[u') << ""running for election""']",211
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,baa259f8817d97136d3cb299dc78f69bc1ab10b0,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/bench/wtperf/wtperf.c,"-		snprintf(cc_buf, req_len, ""%s,%s,%s,%s,%s"",",-,snprintf,"[u'cc_buf, req_len, ""%s,%s,%s,%s,%s"",']",2552
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,baa259f8817d97136d3cb299dc78f69bc1ab10b0,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/bench/wtperf/wtperf.c,+			pos += (size_t)snprintf(,+,pos += (size_t)snprintf,[u''],2564
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,baa259f8817d97136d3cb299dc78f69bc1ab10b0,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/bench/wtperf/wtperf.c,+			pos += (size_t)snprintf(,+,pos += (size_t)snprintf,[u''],2571
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,baa259f8817d97136d3cb299dc78f69bc1ab10b0,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/bench/wtperf/wtperf.c,+			pos += (size_t)snprintf(,+,pos += (size_t)snprintf,[u''],2577
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,baa259f8817d97136d3cb299dc78f69bc1ab10b0,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/bench/wtperf/wtperf.c,+			pos += (size_t)snprintf(,+,pos += (size_t)snprintf,[u''],2583
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,baa259f8817d97136d3cb299dc78f69bc1ab10b0,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/bench/wtperf/wtperf.c,+			pos += (size_t)snprintf(,+,pos += (size_t)snprintf,[u''],2589
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,baa259f8817d97136d3cb299dc78f69bc1ab10b0,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/bench/wtperf/wtperf.c,"-		snprintf(tc_buf, req_len, ""%s,%s,%s,%s"",",-,snprintf,"[u'tc_buf, req_len, ""%s,%s,%s,%s"",']",2614
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,baa259f8817d97136d3cb299dc78f69bc1ab10b0,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/bench/wtperf/wtperf.c,+			pos += (size_t)snprintf(,+,pos += (size_t)snprintf,[u''],2626
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,baa259f8817d97136d3cb299dc78f69bc1ab10b0,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/bench/wtperf/wtperf.c,+			pos += (size_t)snprintf(,+,pos += (size_t)snprintf,[u''],2632
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,baa259f8817d97136d3cb299dc78f69bc1ab10b0,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/bench/wtperf/wtperf.c,+			pos += (size_t)snprintf(,+,pos += (size_t)snprintf,[u''],2638
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,baa259f8817d97136d3cb299dc78f69bc1ab10b0,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/bench/wtperf/wtperf.c,+			pos += (size_t)snprintf(,+,pos += (size_t)snprintf,[u''],2644
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_cursor.c,d18b9b76992cddea58da76c1703d4bf65bb5edd9,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/btree/bt_cursor.c,"-		WT_ASSERT(session, cbt->slot < page->pg_var_entries);",-,WT_ASSERT,"[u'session, cbt->slot < page->pg_var_entries);']",189
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_cursor.c,d18b9b76992cddea58da76c1703d4bf65bb5edd9,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/btree/bt_cursor.c,"+		WT_ASSERT(session, cbt->slot < page->entries);",+,WT_ASSERT,"[u'session, cbt->slot < page->entries);']",190
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_cursor.c,d18b9b76992cddea58da76c1703d4bf65bb5edd9,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/btree/bt_cursor.c,"-		WT_ASSERT(session, cbt->slot < page->pg_row_entries);",-,WT_ASSERT,"[u'session, cbt->slot < page->pg_row_entries);']",227
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_cursor.c,d18b9b76992cddea58da76c1703d4bf65bb5edd9,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/btree/bt_cursor.c,"+		WT_ASSERT(session, cbt->slot < page->entries);",+,WT_ASSERT,"[u'session, cbt->slot < page->entries);']",228
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_ovfl.c,ae0da62af57edb22de93938ad4c29903b5ef7e29,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/btree/bt_ovfl.c,"-	__wt_writelock(session, btree->ovfl_lock);",-,__wt_writelock,"[u'session, btree->ovfl_lock);']",267
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_ovfl.c,ae0da62af57edb22de93938ad4c29903b5ef7e29,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/btree/bt_ovfl.c,"+	__wt_writelock(session, &btree->ovfl_lock);",+,__wt_writelock,"[u'session, &btree->ovfl_lock);']",268
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_ovfl.c,ae0da62af57edb22de93938ad4c29903b5ef7e29,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/btree/bt_ovfl.c,"-	__wt_writeunlock(session, btree->ovfl_lock);",-,__wt_writeunlock,"[u'session, btree->ovfl_lock);']",290
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_ovfl.c,ae0da62af57edb22de93938ad4c29903b5ef7e29,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/btree/bt_ovfl.c,"+	__wt_writeunlock(session, &btree->ovfl_lock);",+,__wt_writeunlock,"[u'session, &btree->ovfl_lock);']",291
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_log.c,8f8f8614ba8aa4aedd1adfafd0fdc8b658a397db,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_log.c,"-	__wt_writelock(session, log->log_archive_lock);",-,__wt_writelock,"[u'session, log->log_archive_lock);']",386
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_log.c,8f8f8614ba8aa4aedd1adfafd0fdc8b658a397db,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_log.c,"+	__wt_writelock(session, &log->log_archive_lock);",+,__wt_writelock,"[u'session, &log->log_archive_lock);']",387
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_log.c,8f8f8614ba8aa4aedd1adfafd0fdc8b658a397db,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_log.c,"-	__wt_writeunlock(session, log->log_archive_lock);",-,__wt_writeunlock,"[u'session, log->log_archive_lock);']",389
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_log.c,8f8f8614ba8aa4aedd1adfafd0fdc8b658a397db,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_log.c,"+	__wt_writeunlock(session, &log->log_archive_lock);",+,__wt_writeunlock,"[u'session, &log->log_archive_lock);']",390
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,7d5cb7d7c7240c30c90cf250413944e0bc27a4aa,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_sweep.c,"-	WT_RET(__wt_try_writelock(session, dhandle->rwlock));",-,WT_RET(__wt_try_writelock,"[u'session, dhandle->rwlock));']",85
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,7d5cb7d7c7240c30c90cf250413944e0bc27a4aa,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_sweep.c,"+	WT_RET(__wt_try_writelock(session, &dhandle->rwlock));",+,WT_RET(__wt_try_writelock,"[u'session, &dhandle->rwlock));']",86
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,7d5cb7d7c7240c30c90cf250413944e0bc27a4aa,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_sweep.c,"-err:	__wt_writeunlock(session, dhandle->rwlock);",-,err:	__wt_writeunlock,"[u'session, dhandle->rwlock);']",108
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,7d5cb7d7c7240c30c90cf250413944e0bc27a4aa,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_sweep.c,"+err:	__wt_writeunlock(session, &dhandle->rwlock);",+,err:	__wt_writeunlock,"[u'session, &dhandle->rwlock);']",109
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,7d5cb7d7c7240c30c90cf250413944e0bc27a4aa,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_sweep.c,"-	WT_RET(__wt_try_writelock(session, dhandle->rwlock));",-,WT_RET(__wt_try_writelock,"[u'session, dhandle->rwlock));']",210
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,7d5cb7d7c7240c30c90cf250413944e0bc27a4aa,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_sweep.c,"+	WT_RET(__wt_try_writelock(session, &dhandle->rwlock));",+,WT_RET(__wt_try_writelock,"[u'session, &dhandle->rwlock));']",211
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,7d5cb7d7c7240c30c90cf250413944e0bc27a4aa,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_sweep.c,"-err:		__wt_writeunlock(session, dhandle->rwlock);",-,err:		__wt_writeunlock,"[u'session, dhandle->rwlock);']",236
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,7d5cb7d7c7240c30c90cf250413944e0bc27a4aa,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/conn/conn_sweep.c,"+err:		__wt_writeunlock(session, &dhandle->rwlock);",+,err:		__wt_writeunlock,"[u'session, &dhandle->rwlock);']",237
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"-	__wt_writelock(session, conn->hot_backup_lock);",-,__wt_writelock,"[u'session, conn->hot_backup_lock);']",234
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"+	__wt_writelock(session, &conn->hot_backup_lock);",+,__wt_writelock,"[u'session, &conn->hot_backup_lock);']",235
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"-	__wt_writeunlock(session, conn->hot_backup_lock);",-,__wt_writeunlock,"[u'session, conn->hot_backup_lock);']",238
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"+	__wt_writeunlock(session, &conn->hot_backup_lock);",+,__wt_writeunlock,"[u'session, &conn->hot_backup_lock);']",239
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"-		__wt_writelock(session, conn->hot_backup_lock);",-,__wt_writelock,"[u'session, conn->hot_backup_lock);']",314
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"+		__wt_writelock(session, &conn->hot_backup_lock);",+,__wt_writelock,"[u'session, &conn->hot_backup_lock);']",315
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"-		__wt_writeunlock(session, conn->hot_backup_lock);",-,__wt_writeunlock,"[u'session, conn->hot_backup_lock);']",317
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"+		__wt_writeunlock(session, &conn->hot_backup_lock);",+,__wt_writeunlock,"[u'session, &conn->hot_backup_lock);']",318
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"-	__wt_writelock(session, conn->hot_backup_lock);",-,__wt_writelock,"[u'session, conn->hot_backup_lock);']",348
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"+	__wt_writelock(session, &conn->hot_backup_lock);",+,__wt_writelock,"[u'session, &conn->hot_backup_lock);']",349
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"-	__wt_writeunlock(session, conn->hot_backup_lock);",-,__wt_writeunlock,"[u'session, conn->hot_backup_lock);']",351
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"+	__wt_writeunlock(session, &conn->hot_backup_lock);",+,__wt_writeunlock,"[u'session, &conn->hot_backup_lock);']",352
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"-	__wt_writelock(session, conn->hot_backup_lock);",-,__wt_writelock,"[u'session, conn->hot_backup_lock);']",373
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"+	__wt_writelock(session, &conn->hot_backup_lock);",+,__wt_writelock,"[u'session, &conn->hot_backup_lock);']",374
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"-	__wt_writeunlock(session, conn->hot_backup_lock);",-,__wt_writeunlock,"[u'session, conn->hot_backup_lock);']",376
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,08b15e6ca5e7e087972d70c58926949a8503ee5d,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_backup.c,"+	__wt_writeunlock(session, &conn->hot_backup_lock);",+,__wt_writeunlock,"[u'session, &conn->hot_backup_lock);']",377
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_json.c,5870d14273e7119d6d36239e1835476cf157a431,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/cursor/cur_json.c,"+		WT_ASSERT((WT_SESSION_IMPL *)cursor->session,",+,WT_ASSERT,"[u'(WT_SESSION_IMPL *)cursor->session,']",424
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"-	__wt_writelock(session, conn->evict_threads.lock);",-,__wt_writelock,"[u'session, conn->evict_threads.lock);']",599
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+	__wt_writelock(session, &conn->evict_threads.lock);",+,__wt_writelock,"[u'session, &conn->evict_threads.lock);']",600
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+	WT_ASSERT(session, conn->evict_threads.threads[0]->session == session);",+,WT_ASSERT,"[u'session, conn->evict_threads.threads[0]->session == session);']",1084
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+	if (fprintf(fp, ""==========\n"" ""transaction state dump\n"") < 0)",+,if (fprintf,"[u'fp, ""==========\\n"" ""transaction state dump\\n"") < 0)']",2615
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+	if (fprintf(fp,",+,if (fprintf,"[u'fp,']",2618
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+	if (fprintf(fp,",+,if (fprintf,"[u'fp,']",2627
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+	if (fprintf(fp, ""Dumping transaction state of active sessions\n"") < 0)",+,if (fprintf,"[u'fp, ""Dumping transaction state of active sessions\\n"") < 0)']",2640
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+		if (fprintf(fp,",+,if (fprintf,"[u'fp,']",2668
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"-	(void)fprintf(fp, ""==========\n"" ""cache dump\n"");",-,(void)fprintf,"[u'fp, ""==========\\n"" ""cache dump\\n"");']",2834
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+	if (fprintf(fp, ""==========\n"" ""cache dump\n"") < 0)",+,if (fprintf,"[u'fp, ""==========\\n"" ""cache dump\\n"") < 0)']",2835
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"-			(void)fprintf(fp, ""%s(<live>): \n"", dhandle->name);",-,(void)fprintf,"[u'fp, ""%s(<live>): \\n"", dhandle->name);']",2892
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"-			(void)fprintf(fp, ""%s(checkpoint=%s): \n"",",-,(void)fprintf,"[u'fp, ""%s(checkpoint=%s): \\n"",']",2894
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"-			(void)fprintf(fp,",-,(void)fprintf,"[u'fp,']",2897
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+			if (fprintf(fp,",+,if (fprintf,"[u'fp,']",2899
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+			if (fprintf(fp, ""%s(checkpoint=%s): \n"",",+,if (fprintf,"[u'fp, ""%s(checkpoint=%s): \\n"",']",2903
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+			if (fprintf(fp,",+,if (fprintf,"[u'fp,']",2908
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"-			(void)fprintf(fp,",-,(void)fprintf,"[u'fp,']",2943
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+			if (fprintf(fp,",+,if (fprintf,"[u'fp,']",2948
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"-	(void)fprintf(fp,",-,(void)fprintf,"[u'fp,']",3001
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+	if (fprintf(fp,",+,if (fprintf,"[u'fp,']",3002
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"-	(void)fprintf(fp, ""==========\n"");",-,(void)fprintf,"[u'fp, ""==========\\n"");']",3010
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,9b969de9a9e90e3cb61d4ad7ac05126198af1bf8,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/evict/evict_lru.c,"+	if (fprintf(fp, ""==========\n"") < 0)",+,if (fprintf,"[u'fp, ""==========\\n"") < 0)']",3015
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/lsm/lsm_tree.c,71a981a6284f397d60ec5098cd7fa767644e16d7,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"-	__wt_writelock(session, lsm_tree->rwlock);",-,__wt_writelock,"[u'session, lsm_tree->rwlock);']",1141
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/lsm/lsm_tree.c,71a981a6284f397d60ec5098cd7fa767644e16d7,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"+	__wt_writelock(session, &lsm_tree->rwlock);",+,__wt_writelock,"[u'session, &lsm_tree->rwlock);']",1142
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/lsm/lsm_tree.c,71a981a6284f397d60ec5098cd7fa767644e16d7,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"-	__wt_writeunlock(session, lsm_tree->rwlock);",-,__wt_writeunlock,"[u'session, lsm_tree->rwlock);']",1168
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/lsm/lsm_tree.c,71a981a6284f397d60ec5098cd7fa767644e16d7,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"+	__wt_writeunlock(session, &lsm_tree->rwlock);",+,__wt_writeunlock,"[u'session, &lsm_tree->rwlock);']",1169
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,5bf425b1b21d7c0b573443c0513977823139e76a,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/reconcile/rec_track.c,"-		__wt_writelock(session, S2BT(session)->ovfl_lock);",-,__wt_writelock,"[u'session, S2BT(session)->ovfl_lock);']",879
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,5bf425b1b21d7c0b573443c0513977823139e76a,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/reconcile/rec_track.c,"+		__wt_writelock(session, &S2BT(session)->ovfl_lock);",+,__wt_writelock,"[u'session, &S2BT(session)->ovfl_lock);']",880
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,5bf425b1b21d7c0b573443c0513977823139e76a,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/reconcile/rec_track.c,"-		__wt_writeunlock(session, S2BT(session)->ovfl_lock);",-,__wt_writeunlock,"[u'session, S2BT(session)->ovfl_lock);']",882
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,5bf425b1b21d7c0b573443c0513977823139e76a,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/reconcile/rec_track.c,"+		__wt_writeunlock(session, &S2BT(session)->ovfl_lock);",+,__wt_writeunlock,"[u'session, &S2BT(session)->ovfl_lock);']",883
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,5bf425b1b21d7c0b573443c0513977823139e76a,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/reconcile/rec_track.c,"-		__wt_writelock(session, S2BT(session)->ovfl_lock);",-,__wt_writelock,"[u'session, S2BT(session)->ovfl_lock);']",919
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,5bf425b1b21d7c0b573443c0513977823139e76a,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/reconcile/rec_track.c,"+		__wt_writelock(session, &S2BT(session)->ovfl_lock);",+,__wt_writelock,"[u'session, &S2BT(session)->ovfl_lock);']",920
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,5bf425b1b21d7c0b573443c0513977823139e76a,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/reconcile/rec_track.c,"-		__wt_writeunlock(session, S2BT(session)->ovfl_lock);",-,__wt_writeunlock,"[u'session, S2BT(session)->ovfl_lock);']",922
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,5bf425b1b21d7c0b573443c0513977823139e76a,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/reconcile/rec_track.c,"+		__wt_writeunlock(session, &S2BT(session)->ovfl_lock);",+,__wt_writeunlock,"[u'session, &S2BT(session)->ovfl_lock);']",923
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_api.c,fcbfa8809b3e2de09e929e94133d7a08983d7de3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_api.c,"-	__wt_writelock(session, txn_global->nsnap_rwlock);",-,__wt_writelock,"[u'session, txn_global->nsnap_rwlock);']",1690
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_api.c,fcbfa8809b3e2de09e929e94133d7a08983d7de3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_api.c,"+	__wt_writelock(session, &txn_global->nsnap_rwlock);",+,__wt_writelock,"[u'session, &txn_global->nsnap_rwlock);']",1691
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_api.c,fcbfa8809b3e2de09e929e94133d7a08983d7de3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_api.c,"-err:	__wt_writeunlock(session, txn_global->nsnap_rwlock);",-,err:	__wt_writeunlock,"[u'session, txn_global->nsnap_rwlock);']",1709
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_api.c,fcbfa8809b3e2de09e929e94133d7a08983d7de3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_api.c,"+err:	__wt_writeunlock(session, &txn_global->nsnap_rwlock);",+,err:	__wt_writeunlock,"[u'session, &txn_global->nsnap_rwlock);']",1710
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"-		if ((ret = __wt_try_writelock(session, dhandle->rwlock)) == 0) {",-,if ((ret = __wt_try_writelock,"[u'session, dhandle->rwlock)) == 0) {']",226
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"+		    __wt_try_writelock(session, &dhandle->rwlock)) == 0) {",+,__wt_try_writelock,"[u'session, &dhandle->rwlock)) == 0) {']",228
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"-				__wt_writeunlock(session, dhandle->rwlock);",-,__wt_writeunlock,"[u'session, dhandle->rwlock);']",231
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"+				__wt_writeunlock(session, &dhandle->rwlock);",+,__wt_writeunlock,"[u'session, &dhandle->rwlock);']",232
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"-				__wt_writeunlock(session, dhandle->rwlock);",-,__wt_writeunlock,"[u'session, dhandle->rwlock);']",255
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"+				__wt_writeunlock(session, &dhandle->rwlock);",+,__wt_writeunlock,"[u'session, &dhandle->rwlock);']",256
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"-			__wt_writeunlock(session, dhandle->rwlock);",-,__wt_writeunlock,"[u'session, dhandle->rwlock);']",335
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"+			__wt_writeunlock(session, &dhandle->rwlock);",+,__wt_writeunlock,"[u'session, &dhandle->rwlock);']",336
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"-			__wt_writeunlock(session, dhandle->rwlock);",-,__wt_writeunlock,"[u'session, dhandle->rwlock);']",570
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"+			__wt_writeunlock(session, &dhandle->rwlock);",+,__wt_writeunlock,"[u'session, &dhandle->rwlock);']",571
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"-		__wt_writeunlock(session, dhandle->rwlock);",-,__wt_writeunlock,"[u'session, dhandle->rwlock);']",601
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,f1251794b8986c94012e89ca0847e76b729d9bd3,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/session/session_dhandle.c,"+		__wt_writeunlock(session, &dhandle->rwlock);",+,__wt_writeunlock,"[u'session, &dhandle->rwlock);']",602
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/mtx_rw.c,35ad5da23f2512a3df7c0128ca411f2b5899f7e1,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/mtx_rw.c,"-__wt_try_writelock(WT_SESSION_IMPL *session, WT_RWLOCK *rwlock)",-,__wt_try_writelock,"[u'WT_SESSION_IMPL *session, WT_RWLOCK *rwlock)']",376
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/mtx_rw.c,35ad5da23f2512a3df7c0128ca411f2b5899f7e1,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/mtx_rw.c,"+__wt_try_writelock(WT_SESSION_IMPL *session, WT_RWLOCK *l)",+,__wt_try_writelock,"[u'WT_SESSION_IMPL *session, WT_RWLOCK *l)']",377
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/mtx_rw.c,35ad5da23f2512a3df7c0128ca411f2b5899f7e1,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/mtx_rw.c,"-__wt_writelock(WT_SESSION_IMPL *session, WT_RWLOCK *rwlock)",-,__wt_writelock,"[u'WT_SESSION_IMPL *session, WT_RWLOCK *rwlock)']",421
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/mtx_rw.c,35ad5da23f2512a3df7c0128ca411f2b5899f7e1,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/mtx_rw.c,"+__wt_writelock(WT_SESSION_IMPL *session, WT_RWLOCK *l)",+,__wt_writelock,"[u'WT_SESSION_IMPL *session, WT_RWLOCK *l)']",422
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/mtx_rw.c,35ad5da23f2512a3df7c0128ca411f2b5899f7e1,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/mtx_rw.c,"-__wt_writeunlock(WT_SESSION_IMPL *session, WT_RWLOCK *rwlock)",-,__wt_writeunlock,"[u'WT_SESSION_IMPL *session, WT_RWLOCK *rwlock)']",478
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/mtx_rw.c,35ad5da23f2512a3df7c0128ca411f2b5899f7e1,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/mtx_rw.c,"+__wt_writeunlock(WT_SESSION_IMPL *session, WT_RWLOCK *l)",+,__wt_writeunlock,"[u'WT_SESSION_IMPL *session, WT_RWLOCK *l)']",479
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"-	WT_ASSERT(session,",-,WT_ASSERT,"[u'session,']",54
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+	WT_ASSERT(session, __wt_rwlock_islocked(session, &group->lock));",+,WT_ASSERT,"[u'session, __wt_rwlock_islocked(session, &group->lock));']",56
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"-	WT_ASSERT(session,",-,WT_ASSERT,"[u'session,']",99
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+	WT_ASSERT(session, __wt_rwlock_islocked(session, &group->lock));",+,WT_ASSERT,"[u'session, __wt_rwlock_islocked(session, &group->lock));']",101
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"-	__wt_writelock(session, group->lock);",-,__wt_writelock,"[u'session, group->lock);']",313
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+	__wt_writelock(session, &group->lock);",+,__wt_writelock,"[u'session, &group->lock);']",314
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"-	__wt_writeunlock(session, group->lock);",-,__wt_writeunlock,"[u'session, group->lock);']",316
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+	__wt_writeunlock(session, &group->lock);",+,__wt_writeunlock,"[u'session, &group->lock);']",317
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"-	__wt_writelock(session, group->lock);",-,__wt_writelock,"[u'session, group->lock);']",359
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+	__wt_writelock(session, &group->lock);",+,__wt_writelock,"[u'session, &group->lock);']",360
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"-	__wt_writeunlock(session, group->lock);",-,__wt_writeunlock,"[u'session, group->lock);']",365
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+	__wt_writeunlock(session, &group->lock);",+,__wt_writeunlock,"[u'session, &group->lock);']",366
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"-	WT_ASSERT(session, __wt_rwlock_islocked(session, group->lock));",-,WT_ASSERT,"[u'session, __wt_rwlock_islocked(session, group->lock));']",407
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+	WT_ASSERT(session, __wt_rwlock_islocked(session, &group->lock));",+,WT_ASSERT,"[u'session, __wt_rwlock_islocked(session, &group->lock));']",408
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"-		__wt_writelock(session, group->lock);",-,__wt_writelock,"[u'session, group->lock);']",454
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"-	else if (__wt_try_writelock(session, group->lock) != 0)",-,else if (__wt_try_writelock,"[u'session, group->lock) != 0)']",455
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+		__wt_writelock(session, &group->lock);",+,__wt_writelock,"[u'session, &group->lock);']",457
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+		WT_RET(__wt_try_writelock(session, &group->lock));",+,WT_RET(__wt_try_writelock,"[u'session, &group->lock));']",459
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"-	__wt_writeunlock(session, group->lock);",-,__wt_writeunlock,"[u'session, group->lock);']",465
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+	__wt_writeunlock(session, &group->lock);",+,__wt_writeunlock,"[u'session, &group->lock);']",466
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+		__wt_writelock(session, &group->lock);",+,__wt_writelock,"[u'session, &group->lock);']",485
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+		WT_RET(__wt_try_writelock(session, &group->lock));",+,WT_RET(__wt_try_writelock,"[u'session, &group->lock));']",487
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,beb143e63e285286fc7dde1178b5b8d676e1461f,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/support/thread_group.c,"+	__wt_writeunlock(session, &group->lock);",+,__wt_writeunlock,"[u'session, &group->lock);']",493
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn.c,660d37b17d584773b49348b528ecbbb17cd6a6ec,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/txn/txn.c,"-		__wt_writelock(session, txn_global->scan_rwlock);",-,__wt_writelock,"[u'session, txn_global->scan_rwlock);']",353
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn.c,660d37b17d584773b49348b528ecbbb17cd6a6ec,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/txn/txn.c,"+		__wt_writelock(session, &txn_global->scan_rwlock);",+,__wt_writelock,"[u'session, &txn_global->scan_rwlock);']",354
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn.c,660d37b17d584773b49348b528ecbbb17cd6a6ec,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/txn/txn.c,"-	    __wt_try_writelock(session, txn_global->scan_rwlock)) != 0)",-,__wt_try_writelock,"[u'session, txn_global->scan_rwlock)) != 0)']",356
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn.c,660d37b17d584773b49348b528ecbbb17cd6a6ec,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/txn/txn.c,"+	    __wt_try_writelock(session, &txn_global->scan_rwlock)) != 0)",+,__wt_try_writelock,"[u'session, &txn_global->scan_rwlock)) != 0)']",357
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn.c,660d37b17d584773b49348b528ecbbb17cd6a6ec,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/txn/txn.c,"-done:	__wt_writeunlock(session, txn_global->scan_rwlock);",-,done:	__wt_writeunlock,"[u'session, txn_global->scan_rwlock);']",426
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn.c,660d37b17d584773b49348b528ecbbb17cd6a6ec,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/txn/txn.c,"+done:	__wt_writeunlock(session, &txn_global->scan_rwlock);",+,done:	__wt_writeunlock,"[u'session, &txn_global->scan_rwlock);']",427
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn_ckpt.c,3b19162fd3de1c8a78aa10b51a92438719479492,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/txn/txn_ckpt.c,"-	__wt_writelock(session, txn_global->scan_rwlock);",-,__wt_writelock,"[u'session, txn_global->scan_rwlock);']",683
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn_ckpt.c,3b19162fd3de1c8a78aa10b51a92438719479492,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/txn/txn_ckpt.c,"+	__wt_writelock(session, &txn_global->scan_rwlock);",+,__wt_writelock,"[u'session, &txn_global->scan_rwlock);']",684
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn_ckpt.c,3b19162fd3de1c8a78aa10b51a92438719479492,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/txn/txn_ckpt.c,"-	__wt_writeunlock(session, txn_global->scan_rwlock);",-,__wt_writeunlock,"[u'session, txn_global->scan_rwlock);']",713
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn_ckpt.c,3b19162fd3de1c8a78aa10b51a92438719479492,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/txn/txn_ckpt.c,"+	__wt_writeunlock(session, &txn_global->scan_rwlock);",+,__wt_writeunlock,"[u'session, &txn_global->scan_rwlock);']",714
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_dump.c,3f8b4a49dfefbb789ff49eef2c603473879fa762,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/utilities/util_dump.c,"+	n = vsnprintf(*bufp, *leftp, fmt, ap);",+,n = vsnprintf,"[u'*bufp, *leftp, fmt, ap);']",427
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_dump.c,3f8b4a49dfefbb789ff49eef2c603473879fa762,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/utilities/util_dump.c,+			assert(p != NULL);,+,assert,[u'p != NULL);'],493
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_dump.c,3f8b4a49dfefbb789ff49eef2c603473879fa762,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/utilities/util_dump.c,+			assert(p[strlen(p) - 1] == ')');,+,assert,"[u""p[strlen(p) - 1] == ')');""]",494
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_dump.c,3f8b4a49dfefbb789ff49eef2c603473879fa762,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/utilities/util_dump.c,+	assert(len > 0);,+,assert,[u'len > 0);'],512
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_dump.c,3f8b4a49dfefbb789ff49eef2c603473879fa762,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/utilities/util_dump.c,"-	WT_RET(print_config(session, uri, v, json, true));",-,WT_RET(print_config,"[u'session, uri, v, json, true));']",678
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_dump.c,3f8b4a49dfefbb789ff49eef2c603473879fa762,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/utilities/util_dump.c,"+	WT_ERR(print_config(session, uri, v, json, true));",+,WT_ERR(print_config,"[u'session, uri, v, json, true));']",689
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_truncate.c,9325c0d7e841857ef2b5263611bd78c87f280430,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/src/utilities/util_truncate.c,"+	(void)fprintf(stderr,",+,(void)fprintf,"[u'stderr,']",47
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/test/format/config.c,50430fe073e53dc497ead8b3e16020419a284314,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/test/format/config.c,+	testutil_assert(g.c_delete_pct +,+,testutil_assert,[u'g.c_delete_pct +'],594
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/test/recovery/random-abort.c,660ef0cca6791b48e418967e93258606687c8968,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/test/recovery/random-abort.c,"+		snprintf(statname, sizeof(statname), ""%s/%s"", home, fs_main);",+,snprintf,"[u'statname, sizeof(statname), ""%s/%s"", home, fs_main);']",362
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/test/recovery/random-abort.c,660ef0cca6791b48e418967e93258606687c8968,https://raw.githubusercontent.com/mongodb/mongo/c91b93d2786342505fd9e151c8aa6b68ee03a1fb/src/third_party/wiredtiger/test/recovery/random-abort.c,"-			fprintf(stderr,",-,fprintf,"[u'stderr,']",415
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",201
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",204
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(ErrorCodes::ShutdownInProgress, _databaseCloner->startup());",+,ASSERT_EQUALS,"[u'ErrorCodes::ShutdownInProgress, _databaseCloner->startup());']",205
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, databaseCloner.getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, databaseCloner.getState_forTest());']",244
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(ErrorCodes::OperationFailed, databaseCloner.startup());",+,ASSERT_EQUALS,"[u'ErrorCodes::OperationFailed, databaseCloner.startup());']",246
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, databaseCloner.getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, databaseCloner.getState_forTest());']",247
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",251
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",254
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",350
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",353
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",380
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",384
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",387
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",414
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",419
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",422
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",457
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",485
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",488
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",521
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",538
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",541
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",592
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",596
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",599
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",610
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",614
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",617
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",628
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",632
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",635
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",702
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",706
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",709
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",747
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",751
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",754
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",766
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",770
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",773
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",826
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",830
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",833
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",867
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",871
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",874
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",905
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",935
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",938
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",963
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",967
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",970
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",1007
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",1011
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",1014
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",1064
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",1068
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",1071
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kShuttingDown, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kShuttingDown, _databaseCloner->getState_forTest());']",1115
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",1122
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",1130
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",1133
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",1194
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());']",1220
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());']",1223
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,f5fa63181e4aca163de16b2a2147156d5b6d2fb0,https://raw.githubusercontent.com/mongodb/mongo/3b1134f5821dcabf89fa6df25b58a674cd3b6ab9/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",+,ASSERT_EQUALS,"[u'DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());']",1280
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/921906a20d9f0337fc18f716da8849e00d908f68/src/mongo/db/repl/database_cloner_test.cpp,+    ASSERT_OK(_databaseCloner->startup());,+,ASSERT_OK,[u'_databaseCloner->startup());'],573
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/921906a20d9f0337fc18f716da8849e00d908f68/src/mongo/db/repl/database_cloner_test.cpp,"+        assertRemoteCommandNameEquals(""listCollections"",",+,assertRemoteCommandNameEquals,"[u'""listCollections"",']",578
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/921906a20d9f0337fc18f716da8849e00d908f68/src/mongo/db/repl/database_cloner_test.cpp,"+        assertRemoteCommandNameEquals(""count"", noi->getRequest());",+,assertRemoteCommandNameEquals,"[u'""count"", noi->getRequest());']",594
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/921906a20d9f0337fc18f716da8849e00d908f68/src/mongo/db/repl/database_cloner_test.cpp,"+        ASSERT_EQUALS(""a"", noi->getRequest().cmdObj.firstElement().String());",+,ASSERT_EQUALS,"[u'""a"", noi->getRequest().cmdObj.firstElement().String());']",595
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/921906a20d9f0337fc18f716da8849e00d908f68/src/mongo/db/repl/database_cloner_test.cpp,+    ASSERT_FALSE(_databaseCloner->isActive());,+,ASSERT_FALSE,[u'_databaseCloner->isActive());'],605
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/921906a20d9f0337fc18f716da8849e00d908f68/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(ErrorCodes::ShutdownInProgress, getStatus());",+,ASSERT_EQUALS,"[u'ErrorCodes::ShutdownInProgress, getStatus());']",609
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_OK(collectionCloner->startup());,+,ASSERT_OK,[u'collectionCloner->startup());'],1218
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_TRUE(collectionCloner->isActive());,+,ASSERT_TRUE,[u'collectionCloner->isActive());'],1219
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,"+        assertRemoteCommandNameEquals(""count"",",+,assertRemoteCommandNameEquals,"[u'""count"",']",1225
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+        assertRemoteCommandNameEquals(,+,assertRemoteCommandNameEquals,[u''],1229
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_TRUE(collectionCloner->isActive());,+,ASSERT_TRUE,[u'collectionCloner->isActive());'],1234
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_TRUE(collectionCloner->isActive());,+,ASSERT_TRUE,[u'collectionCloner->isActive());'],1237
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_TRUE(collectionStats.initCalled);,+,ASSERT_TRUE,[u'collectionStats.initCalled);'],1238
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_FALSE(insertDocumentsFn);,+,ASSERT_FALSE,[u'insertDocumentsFn);'],1253
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+        assertRemoteCommandNameEquals(,+,assertRemoteCommandNameEquals,[u''],1260
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_TRUE(insertDocumentsFn);,+,ASSERT_TRUE,[u'insertDocumentsFn);'],1266
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+        assertRemoteCommandNameEquals(,+,assertRemoteCommandNameEquals,[u''],1272
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,"+            net->scheduleErrorResponse(Status(ErrorCodes::OperationFailed, ""getMore failed"")));",+,net->scheduleErrorResponse,"[u'Status(ErrorCodes::OperationFailed, ""getMore failed"")));']",1274
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_TRUE(collectionCloner->isActive());,+,ASSERT_TRUE,[u'collectionCloner->isActive());'],1280
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,"+    ASSERT_EQUALS(getDetectableErrorStatus(), getStatus());",+,ASSERT_EQUALS(getDetectableErrorStatus,"[u'), getStatus());']",1281
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_FALSE(collectionCloner->isActive());,+,ASSERT_FALSE,[u'collectionCloner->isActive());'],1295
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,3503a95e8030d1c205de15631c09ac3cd53d54e9,https://raw.githubusercontent.com/mongodb/mongo/23d8d6530a044494746c919aa6b73d5317b6b667/src/mongo/db/repl/collection_cloner_test.cpp,"+    ASSERT_EQUALS(ErrorCodes::OperationFailed, getStatus());",+,ASSERT_EQUALS,"[u'ErrorCodes::OperationFailed, getStatus());']",1296
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+    ASSERT_TRUE(next.isAdvanced());,+,ASSERT_TRUE,[u'next.isAdvanced());'],528
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,"+    ASSERT_EQ(3U, next.getDocument().size());",+,ASSERT_EQ,"[u'3U, next.getDocument().size());']",530
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,"+    ASSERT_VALUE_EQ(Value(0), next.getDocument().getField(""_id""));",+,ASSERT_VALUE_EQ,"[u'Value(0), next.getDocument().getField(""_id""));']",531
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+    ASSERT(resultsValue.isArray());,+,ASSERT,[u'resultsValue.isArray());'],534
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,"+    ASSERT(arrayContains(expCtx, resultsArray, Value(middle1)));",+,ASSERT,"[u'arrayContains(expCtx, resultsArray, Value(middle1)));']",537
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,"+    ASSERT(arrayContains(expCtx, resultsArray, Value(middle2)));",+,ASSERT,"[u'arrayContains(expCtx, resultsArray, Value(middle2)));']",538
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,"+    ASSERT(arrayContains(expCtx, resultsArray, Value(middle3)));",+,ASSERT,"[u'arrayContains(expCtx, resultsArray, Value(middle3)));']",539
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,"+    ASSERT(arrayContains(expCtx, resultsArray, Value(sinkDoc)));",+,ASSERT,"[u'arrayContains(expCtx, resultsArray, Value(sinkDoc)));']",540
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+    ASSERT(graphLookupStage->getNext().isEOF());,+,ASSERT,[u'graphLookupStage->getNext().isEOF());'],541
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+    ASSERT_TRUE(next.isAdvanced());,+,ASSERT_TRUE,[u'next.isAdvanced());'],601
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,"+    ASSERT_EQ(3U, next.getDocument().size());",+,ASSERT_EQ,"[u'3U, next.getDocument().size());']",603
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,"+    ASSERT_VALUE_EQ(Value(0), next.getDocument().getField(""_id""));",+,ASSERT_VALUE_EQ,"[u'Value(0), next.getDocument().getField(""_id""));']",604
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+    ASSERT(resultsValue.isArray());,+,ASSERT,[u'resultsValue.isArray());'],607
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,"+    ASSERT(arrayContains(expCtx, resultsArray, Value(target1)));",+,ASSERT,"[u'arrayContains(expCtx, resultsArray, Value(target1)));']",610
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,"+    ASSERT(arrayContains(expCtx, resultsArray, Value(target2)));",+,ASSERT,"[u'arrayContains(expCtx, resultsArray, Value(target2)));']",611
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,"+    ASSERT(!arrayContains(expCtx, resultsArray, Value(soloDoc)));",+,ASSERT,"[u'!arrayContains(expCtx, resultsArray, Value(soloDoc)));']",612
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,4c190b24f6ec51de506e9539b33e411a36b357b3,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+    ASSERT(graphLookupStage->getNext().isEOF());,+,ASSERT,[u'graphLookupStage->getNext().isEOF());'],613
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"-    ASSERT_TRUE(vectorContains(cache[Value(0)], intToObj(1)));",-,ASSERT_TRUE,"[u'vectorContains(cache[Value(0)], intToObj(1)));']",81
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"-    ASSERT_TRUE(vectorContains(cache[Value(0)], intToObj(2)));",-,ASSERT_TRUE,"[u'vectorContains(cache[Value(0)], intToObj(2)));']",82
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"-    ASSERT_TRUE(vectorContains(cache[Value(0)], intToObj(3)));",-,ASSERT_TRUE,"[u'vectorContains(cache[Value(0)], intToObj(3)));']",83
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"-    ASSERT_FALSE(vectorContains(cache[Value(0)], intToObj(4)));",-,ASSERT_FALSE,"[u'vectorContains(cache[Value(0)], intToObj(4)));']",84
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"-    ASSERT_FALSE(vectorContains(cache[Value(0)], intToObj(5)));",-,ASSERT_FALSE,"[u'vectorContains(cache[Value(0)], intToObj(5)));']",85
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"+    ASSERT_TRUE(vectorContains(cache[Value(0)], intToDoc(1)));",+,ASSERT_TRUE,"[u'vectorContains(cache[Value(0)], intToDoc(1)));']",86
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"+    ASSERT_TRUE(vectorContains(cache[Value(0)], intToDoc(2)));",+,ASSERT_TRUE,"[u'vectorContains(cache[Value(0)], intToDoc(2)));']",87
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"+    ASSERT_TRUE(vectorContains(cache[Value(0)], intToDoc(3)));",+,ASSERT_TRUE,"[u'vectorContains(cache[Value(0)], intToDoc(3)));']",88
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"+    ASSERT_FALSE(vectorContains(cache[Value(0)], intToDoc(4)));",+,ASSERT_FALSE,"[u'vectorContains(cache[Value(0)], intToDoc(4)));']",89
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"+    ASSERT_FALSE(vectorContains(cache[Value(0)], intToDoc(5)));",+,ASSERT_FALSE,"[u'vectorContains(cache[Value(0)], intToDoc(5)));']",90
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"-    ASSERT_TRUE(vectorContains(cache[Value(1)], intToObj(0)));",-,ASSERT_TRUE,"[u'vectorContains(cache[Value(1)], intToObj(0)));']",274
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"-    ASSERT_TRUE(vectorContains(cache[Value(1)], intToObj(1)));",-,ASSERT_TRUE,"[u'vectorContains(cache[Value(1)], intToObj(1)));']",275
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"-    ASSERT_TRUE(vectorContains(cache[Value(1)], intToObj(2)));",-,ASSERT_TRUE,"[u'vectorContains(cache[Value(1)], intToObj(2)));']",276
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"-    ASSERT_TRUE(vectorContains(cache[Value(1)], intToObj(3)));",-,ASSERT_TRUE,"[u'vectorContains(cache[Value(1)], intToObj(3)));']",277
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"-    ASSERT_TRUE(vectorContains(cache[Value(1)], intToObj(4)));",-,ASSERT_TRUE,"[u'vectorContains(cache[Value(1)], intToObj(4)));']",278
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"+    ASSERT_TRUE(vectorContains(cache[Value(1)], intToDoc(0)));",+,ASSERT_TRUE,"[u'vectorContains(cache[Value(1)], intToDoc(0)));']",279
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"+    ASSERT_TRUE(vectorContains(cache[Value(1)], intToDoc(1)));",+,ASSERT_TRUE,"[u'vectorContains(cache[Value(1)], intToDoc(1)));']",280
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"+    ASSERT_TRUE(vectorContains(cache[Value(1)], intToDoc(2)));",+,ASSERT_TRUE,"[u'vectorContains(cache[Value(1)], intToDoc(2)));']",281
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"+    ASSERT_TRUE(vectorContains(cache[Value(1)], intToDoc(3)));",+,ASSERT_TRUE,"[u'vectorContains(cache[Value(1)], intToDoc(3)));']",282
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,b6303ffad16b2e3cede1d352e9ebcd147f0df7df,https://raw.githubusercontent.com/mongodb/mongo/1aae7f519532707c40c3d19262b589ccd0c7ee08/src/mongo/db/pipeline/lookup_set_cache_test.cpp,"+    ASSERT_TRUE(vectorContains(cache[Value(1)], intToDoc(4)));",+,ASSERT_TRUE,"[u'vectorContains(cache[Value(1)], intToDoc(4)));']",283
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << BSON_ARRAY(1 << 2)), BSON("""" << BSON_ARRAY(3 << 4))},",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << BSON_ARRAY(1 << 2)), BSON("""" << BSON_ARRAY(3 << 4))},']",289
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({1U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{1U}, actualArrayComponents);']",291
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{}, actualElements);']",304
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({0U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{0U}, actualArrayComponents);']",305
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << -2), BSON("""" << -3), BSON("""" << -4)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << -2), BSON("""" << -3), BSON("""" << -4)}, actualElements);']",324
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({0U, 1U, 2U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{0U, 1U, 2U}, actualArrayComponents);']",325
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 1)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 1)}, actualElements);']",337
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'std::set<size_t>{}, actualArrayComponents);']",338
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 1)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 1)}, actualElements);']",350
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'std::set<size_t>{}, actualArrayComponents);']",351
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 2)}, actualElements);']",363
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({0U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{0U}, actualArrayComponents);']",364
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{}, actualElements);']",376
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'std::set<size_t>{}, actualArrayComponents);']",377
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 2)}, actualElements);']",389
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({0U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{0U}, actualArrayComponents);']",390
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 2)}, actualElements);']",402
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({0U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{0U}, actualArrayComponents);']",403
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 2)}, actualElements);']",415
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({0U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{0U}, actualArrayComponents);']",416
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 2)}, actualElements);']",428
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({0U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{0U}, actualArrayComponents);']",429
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 3)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 3)}, actualElements);']",442
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'std::set<size_t>{}, actualArrayComponents);']",443
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON(""""",+,assertBSONElementSetsAreEqual,"[u'{BSON(""""']",455
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'std::set<size_t>{}, actualArrayComponents);']",458
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",+,assertBSONElementSetsAreEqual,"[u'{BSON("""" << 2)}, actualElements);']",470
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'std::set<size_t>{}, actualArrayComponents);']",471
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertBSONElementSetsAreEqual({BSON(""""",+,assertBSONElementSetsAreEqual,"[u'{BSON(""""']",483
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,06fa6dc2840d22a0c788e5070116c637b04ea7b7,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/bson/dotted_path_support_test.cpp,"+    assertArrayComponentsAreEqual({1U}, actualArrayComponents);",+,assertArrayComponentsAreEqual,"[u'{1U}, actualArrayComponents);']",488
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document.cpp,573949afb8db69f75ea60ac20c991ffec0f93906,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document.cpp,"-    fassert(16489, fieldNames.getPathLength());",-,fassert,"[u'16489, fieldNames.getPathLength());']",360
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document.cpp,573949afb8db69f75ea60ac20c991ffec0f93906,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document.cpp,"+    fassert(16489, path.getPathLength());",+,fassert,"[u'16489, path.getPathLength());']",363
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",58
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(1)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(1)), 1UL);']",59
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 0UL);",+,ASSERT_EQ,"[u'values.size(), 0UL);']",67
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",75
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(1)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(1)), 1UL);']",76
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 3UL);",+,ASSERT_EQ,"[u'values.size(), 3UL);']",84
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(1)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(1)), 1UL);']",85
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(2)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(2)), 1UL);']",86
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(3)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(3)), 1UL);']",87
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 3UL);",+,ASSERT_EQ,"[u'values.size(), 3UL);']",96
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(1)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(1)), 1UL);']",97
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(2)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(2)), 1UL);']",98
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(3)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(3)), 1UL);']",99
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 3UL);",+,ASSERT_EQ,"[u'values.size(), 3UL);']",110
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(1)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(1)), 1UL);']",111
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(2)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(2)), 1UL);']",112
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(3)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(3)), 1UL);']",113
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 0UL);",+,ASSERT_EQ,"[u'values.size(), 0UL);']",121
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 3UL);",+,ASSERT_EQ,"[u'values.size(), 3UL);']",136
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(-2)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(-2)), 1UL);']",137
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(-3)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(-3)), 1UL);']",138
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(-4)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(-4)), 1UL);']",139
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",147
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(1)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(1)), 1UL);']",148
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",156
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(1)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(1)), 1UL);']",157
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",168
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(""target""_sd)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(""target""_sd)), 1UL);']",169
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 0UL);",+,ASSERT_EQ,"[u'values.size(), 0UL);']",178
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",189
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(2)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(2)), 1UL);']",190
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",200
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(2)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(2)), 1UL);']",201
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",212
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(2)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(2)), 1UL);']",213
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",224
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(2)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(2)), 1UL);']",225
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",235
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(3)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(3)), 1UL);']",236
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",244
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(""(1, 0)""_sd)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(""(1, 0)""_sd)), 1UL);']",245
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 1UL);",+,ASSERT_EQ,"[u'values.size(), 1UL);']",253
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(2)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(2)), 1UL);']",254
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 2UL);",+,ASSERT_EQ,"[u'values.size(), 2UL);']",262
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(""(1, 0)""_sd)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(""(1, 0)""_sd)), 1UL);']",263
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(""(1, 1)""_sd)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(""(1, 1)""_sd)), 1UL);']",264
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 0UL);",+,ASSERT_EQ,"[u'values.size(), 0UL);']",272
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.size(), 2UL);",+,ASSERT_EQ,"[u'values.size(), 2UL);']",280
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(1)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(1)), 1UL);']",281
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,cb3a2e1b3b57d809f8f746d24062c63e4b0ecae2,https://raw.githubusercontent.com/mongodb/mongo/d60dd07f3f470b702092b6b54e15586a5177d8a1/src/mongo/db/pipeline/document_path_support_test.cpp,"+    ASSERT_EQ(values.count(Value(2)), 1UL);",+,ASSERT_EQ,"[u'values.count(Value(2)), 1UL);']",282
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_THROWS(FieldPath path(""""), UserException);",-,ASSERT_THROWS,"[u'FieldPath path(""""), UserException);']",48
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_THROWS(FieldPath path(""""), UserException);",+,ASSERT_THROWS,"[u'FieldPath path(""""), UserException);']",52
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(1U, path.getPathLength());",-,ASSERT_EQUALS,"[u'1U, path.getPathLength());']",60
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""foo"", path.getFieldName(0));",-,ASSERT_EQUALS,"[u'""foo"", path.getFieldName(0));']",61
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""foo"", path.fullPath());",-,ASSERT_EQUALS,"[u'""foo"", path.fullPath());']",62
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""$foo"", path.fullPathWithPrefix());",-,ASSERT_EQUALS,"[u'""$foo"", path.fullPathWithPrefix());']",63
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(1U, path.getPathLength());",+,ASSERT_EQUALS,"[u'1U, path.getPathLength());']",68
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""foo"", path.getFieldName(0));",+,ASSERT_EQUALS,"[u'""foo"", path.getFieldName(0));']",69
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""foo"", path.fullPath());",+,ASSERT_EQUALS,"[u'""foo"", path.fullPath());']",70
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""$foo"", path.fullPathWithPrefix());",+,ASSERT_EQUALS,"[u'""$foo"", path.fullPathWithPrefix());']",71
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_THROWS(FieldPath path(""$""), UserException);",-,ASSERT_THROWS,"[u'FieldPath path(""$""), UserException);']",78
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_THROWS(FieldPath path(""$""), UserException);",+,ASSERT_THROWS,"[u'FieldPath path(""$""), UserException);']",82
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_THROWS(FieldPath path(""$a""), UserException);",-,ASSERT_THROWS,"[u'FieldPath path(""$a""), UserException);']",89
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_THROWS(FieldPath path(""$a""), UserException);",+,ASSERT_THROWS,"[u'FieldPath path(""$a""), UserException);']",93
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(2U, path.getPathLength());",-,ASSERT_EQUALS,"[u'2U, path.getPathLength());']",101
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""foo"", path.getFieldName(0));",-,ASSERT_EQUALS,"[u'""foo"", path.getFieldName(0));']",102
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""bar"", path.getFieldName(1));",-,ASSERT_EQUALS,"[u'""bar"", path.getFieldName(1));']",103
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""foo.bar"", path.fullPath());",-,ASSERT_EQUALS,"[u'""foo.bar"", path.fullPath());']",104
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""$foo.bar"", path.fullPathWithPrefix());",-,ASSERT_EQUALS,"[u'""$foo.bar"", path.fullPathWithPrefix());']",105
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(2U, path.getPathLength());",+,ASSERT_EQUALS,"[u'2U, path.getPathLength());']",110
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""foo"", path.getFieldName(0));",+,ASSERT_EQUALS,"[u'""foo"", path.getFieldName(0));']",111
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""bar"", path.getFieldName(1));",+,ASSERT_EQUALS,"[u'""bar"", path.getFieldName(1));']",112
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""foo.bar"", path.fullPath());",+,ASSERT_EQUALS,"[u'""foo.bar"", path.fullPath());']",113
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""$foo.bar"", path.fullPathWithPrefix());",+,ASSERT_EQUALS,"[u'""$foo.bar"", path.fullPathWithPrefix());']",114
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_THROWS(FieldPath path(""a.$b""), UserException);",-,ASSERT_THROWS,"[u'FieldPath path(""a.$b""), UserException);']",121
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_THROWS(FieldPath path(""a.$b""), UserException);",+,ASSERT_THROWS,"[u'FieldPath path(""a.$b""), UserException);']",125
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(3U, path.getPathLength());",-,ASSERT_EQUALS,"[u'3U, path.getPathLength());']",133
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""foo"", path.getFieldName(0));",-,ASSERT_EQUALS,"[u'""foo"", path.getFieldName(0));']",134
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""bar"", path.getFieldName(1));",-,ASSERT_EQUALS,"[u'""bar"", path.getFieldName(1));']",135
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""baz"", path.getFieldName(2));",-,ASSERT_EQUALS,"[u'""baz"", path.getFieldName(2));']",136
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""foo.bar.baz"", path.fullPath());",-,ASSERT_EQUALS,"[u'""foo.bar.baz"", path.fullPath());']",137
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(3U, path.getPathLength());",+,ASSERT_EQUALS,"[u'3U, path.getPathLength());']",142
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""foo"", path.getFieldName(0));",+,ASSERT_EQUALS,"[u'""foo"", path.getFieldName(0));']",143
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""bar"", path.getFieldName(1));",+,ASSERT_EQUALS,"[u'""bar"", path.getFieldName(1));']",144
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""baz"", path.getFieldName(2));",+,ASSERT_EQUALS,"[u'""baz"", path.getFieldName(2));']",145
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""foo.bar.baz"", path.fullPath());",+,ASSERT_EQUALS,"[u'""foo.bar.baz"", path.fullPath());']",146
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_THROWS(FieldPath path(""foo.""), UserException);",-,ASSERT_THROWS,"[u'FieldPath path(""foo.""), UserException);']",153
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_THROWS(FieldPath path(""foo.""), UserException);",+,ASSERT_THROWS,"[u'FieldPath path(""foo.""), UserException);']",157
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_THROWS(FieldPath path("".foo""), UserException);",-,ASSERT_THROWS,"[u'FieldPath path("".foo""), UserException);']",164
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_THROWS(FieldPath path("".foo""), UserException);",+,ASSERT_THROWS,"[u'FieldPath path("".foo""), UserException);']",168
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_THROWS(FieldPath path(""foo..bar""), UserException);",-,ASSERT_THROWS,"[u'FieldPath path(""foo..bar""), UserException);']",175
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_THROWS(FieldPath path(""foo..bar""), UserException);",+,ASSERT_THROWS,"[u'FieldPath path(""foo..bar""), UserException);']",179
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_THROWS(FieldPath path(""...""), UserException);",-,ASSERT_THROWS,"[u'FieldPath path(""...""), UserException);']",186
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_THROWS(FieldPath path(""...""), UserException);",+,ASSERT_THROWS,"[u'FieldPath path(""...""), UserException);']",190
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(3U, path.getPathLength());",-,ASSERT_EQUALS,"[u'3U, path.getPathLength());']",198
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""foo.a.bar"", path.fullPath());",-,ASSERT_EQUALS,"[u'""foo.a.bar"", path.fullPath());']",199
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(3U, path.getPathLength());",+,ASSERT_EQUALS,"[u'3U, path.getPathLength());']",204
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""foo.a.bar"", path.fullPath());",+,ASSERT_EQUALS,"[u'""foo.a.bar"", path.fullPath());']",205
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_THROWS(FieldPath path(string(""foo.b\0r"", 7)), UserException);",-,ASSERT_THROWS,"[u'FieldPath path(string(""foo.b\\0r"", 7)), UserException);']",212
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_THROWS(FieldPath path(string(""foo.b\0r"", 7)), UserException);",+,ASSERT_THROWS,"[u'FieldPath path(string(""foo.b\\0r"", 7)), UserException);']",216
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(1U, path.getPathLength());",-,ASSERT_EQUALS,"[u'1U, path.getPathLength());']",224
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""bar"", path.fullPath());",-,ASSERT_EQUALS,"[u'""bar"", path.fullPath());']",225
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(1U, path.getPathLength());",+,ASSERT_EQUALS,"[u'1U, path.getPathLength());']",230
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""bar"", path.fullPath());",+,ASSERT_EQUALS,"[u'""bar"", path.fullPath());']",231
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(2U, path.getPathLength());",-,ASSERT_EQUALS,"[u'2U, path.getPathLength());']",239
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"-        ASSERT_EQUALS(""bar.baz"", path.fullPath());",-,ASSERT_EQUALS,"[u'""bar.baz"", path.fullPath());']",240
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(2U, path.getPathLength());",+,ASSERT_EQUALS,"[u'2U, path.getPathLength());']",268
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,63e0584def3b978ca3c5c4ea0508f640902e9c60,https://raw.githubusercontent.com/mongodb/mongo/2c6c114e3952e952de1a395f987f1c5b83d209fe/src/mongo/db/pipeline/field_path_test.cpp,"+    ASSERT_EQUALS(""bar.baz"", path.fullPath());",+,ASSERT_EQUALS,"[u'""bar.baz"", path.fullPath());']",269
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/oplog_fetcher_test.cpp,5b753cce88100a7ce961b62041f417f3491705ad,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/oplog_fetcher_test.cpp,"-    ASSERT_EQUALS(2, metadataObj.nFields());",-,ASSERT_EQUALS,"[u'2, metadataObj.nFields());']",412
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/oplog_fetcher_test.cpp,5b753cce88100a7ce961b62041f417f3491705ad,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/oplog_fetcher_test.cpp,"+    ASSERT_EQUALS(3, metadataObj.nFields());",+,ASSERT_EQUALS,"[u'3, metadataObj.nFields());']",413
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/oplog_fetcher_test.cpp,5b753cce88100a7ce961b62041f417f3491705ad,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/oplog_fetcher_test.cpp,"+    ASSERT_EQUALS(1, metadataObj[rpc::kOplogQueryMetadataFieldName].numberInt());",+,ASSERT_EQUALS,"[u'1, metadataObj[rpc::kOplogQueryMetadataFieldName].numberInt());']",415
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,66db01ccfe9eb431c96398f6b3839d98bb7da2db,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl.cpp,+        _prepareOplogQueryMetadata_inlock(builder);,+,_prepareOplogQueryMetadata_inlock,[u'builder);'],3312
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,66db01ccfe9eb431c96398f6b3839d98bb7da2db,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl.cpp,+    metadata.writeToMetadata(builder);,+,metadata.writeToMetadata,[u'builder);'],3321
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,66db01ccfe9eb431c96398f6b3839d98bb7da2db,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl.cpp,+void ReplicationCoordinatorImpl::_prepareOplogQueryMetadata_inlock(BSONObjBuilder* builder) const {,+,void ReplicationCoordinatorImpl::_prepareOplogQueryMetadata_inlock,[u'BSONObjBuilder* builder) const {'],3327
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,66db01ccfe9eb431c96398f6b3839d98bb7da2db,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl.cpp,"+        _topCoord->prepareOplogQueryMetadata(_lastCommittedOpTime, lastAppliedOpTime, _rbid);",+,_topCoord->prepareOplogQueryMetadata,"[u'_lastCommittedOpTime, lastAppliedOpTime, _rbid);']",3330
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    assertStartSuccess(BSON(""_id""",+,assertStartSuccess,"[u'BSON(""_id""']",4085
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    log() << metadata;,+,log,[u') << metadata;'],4138
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT_OK(oqMetadata.getStatus());,+,ASSERT_OK,[u'oqMetadata.getStatus());'],4141
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQ(oqMetadata.getValue().getLastOpCommitted(), optime1);",+,ASSERT_EQ,"[u'oqMetadata.getValue().getLastOpCommitted(), optime1);']",4142
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQ(oqMetadata.getValue().getLastOpApplied(), optime2);",+,ASSERT_EQ,"[u'oqMetadata.getValue().getLastOpApplied(), optime2);']",4143
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQ(oqMetadata.getValue().getRBID(), initialValue);",+,ASSERT_EQ,"[u'oqMetadata.getValue().getRBID(), initialValue);']",4144
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQ(oqMetadata.getValue().getSyncSourceIndex(), -1);",+,ASSERT_EQ,"[u'oqMetadata.getValue().getSyncSourceIndex(), -1);']",4145
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQ(oqMetadata.getValue().getPrimaryIndex(), -1);",+,ASSERT_EQ,"[u'oqMetadata.getValue().getPrimaryIndex(), -1);']",4146
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT_OK(replMetadata.getStatus());,+,ASSERT_OK,[u'replMetadata.getStatus());'],4149
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQ(replMetadata.getValue().getLastOpCommitted(), optime1);",+,ASSERT_EQ,"[u'replMetadata.getValue().getLastOpCommitted(), optime1);']",4150
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQ(replMetadata.getValue().getLastOpVisible(), OpTime());",+,ASSERT_EQ,"[u'replMetadata.getValue().getLastOpVisible(), OpTime());']",4151
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQ(replMetadata.getValue().getConfigVersion(), 2);",+,ASSERT_EQ,"[u'replMetadata.getValue().getConfigVersion(), 2);']",4152
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQ(replMetadata.getValue().getTerm(), 3);",+,ASSERT_EQ,"[u'replMetadata.getValue().getTerm(), 3);']",4153
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQ(replMetadata.getValue().getSyncSourceIndex(), -1);",+,ASSERT_EQ,"[u'replMetadata.getValue().getSyncSourceIndex(), -1);']",4154
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,ceaae23fbea36c453905177f58f352e3d5221edf,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQ(replMetadata.getValue().getPrimaryIndex(), -1);",+,ASSERT_EQ,"[u'replMetadata.getValue().getPrimaryIndex(), -1);']",4155
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/topology_coordinator_impl.cpp,1f6d11a86bbf40b5e8b100df1cf35e936a424bc0,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/topology_coordinator_impl.cpp,+rpc::OplogQueryMetadata TopologyCoordinatorImpl::prepareOplogQueryMetadata(,+,rpc::OplogQueryMetadata TopologyCoordinatorImpl::prepareOplogQueryMetadata,[u''],2546
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/topology_coordinator_impl.cpp,1f6d11a86bbf40b5e8b100df1cf35e936a424bc0,https://raw.githubusercontent.com/mongodb/mongo/859dfb093328ae9129f18952df4f25b123977a38/src/mongo/db/repl/topology_coordinator_impl.cpp,"+    return rpc::OplogQueryMetadata(lastCommittedOpTime,",+,return rpc::OplogQueryMetadata,"[u'lastCommittedOpTime,']",2548
ae2f197bcb46ee961ebadbccba18154f94a09f56,"SERVER-27231 added disableMaxSyncSourceLagSecs failpoint to turn off re-evaluating sync sources, for jstests that manipulate chaining",src/mongo/db/repl/topology_coordinator_impl.cpp,a96790c41a53df909d27755abc0ec1dadcdd0c2b,https://raw.githubusercontent.com/mongodb/mongo/ae2f197bcb46ee961ebadbccba18154f94a09f56/src/mongo/db/repl/topology_coordinator_impl.cpp,"+        log() << ""disableMaxSyncSourceLagSecs fail point enabled - not checking the most recent """,+,log,"[u') << ""disableMaxSyncSourceLagSecs fail point enabled - not checking the most recent ""']",2505
ae2f197bcb46ee961ebadbccba18154f94a09f56,"SERVER-27231 added disableMaxSyncSourceLagSecs failpoint to turn off re-evaluating sync sources, for jstests that manipulate chaining",src/mongo/db/repl/topology_coordinator_impl.cpp,a96790c41a53df909d27755abc0ec1dadcdd0c2b,https://raw.githubusercontent.com/mongodb/mongo/ae2f197bcb46ee961ebadbccba18154f94a09f56/src/mongo/db/repl/topology_coordinator_impl.cpp,"-            log() << ""Choosing new sync source because the most recent OpTime of our sync source, """,-,log,"[u') << ""Choosing new sync source because the most recent OpTime of our sync source, ""']",2521
ae2f197bcb46ee961ebadbccba18154f94a09f56,"SERVER-27231 added disableMaxSyncSourceLagSecs failpoint to turn off re-evaluating sync sources, for jstests that manipulate chaining",src/mongo/db/repl/topology_coordinator_impl.cpp,a96790c41a53df909d27755abc0ec1dadcdd0c2b,https://raw.githubusercontent.com/mongodb/mongo/ae2f197bcb46ee961ebadbccba18154f94a09f56/src/mongo/db/repl/topology_coordinator_impl.cpp,"+                log() << ""Choosing new sync source because the most recent OpTime of our sync """,+,log,"[u') << ""Choosing new sync source because the most recent OpTime of our sync ""']",2537
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/db/commands/mr.cpp,c3f0a27dc07ddb9761f36680efee51b1a0478692,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/db/commands/mr.cpp,"+                uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, server));",+,uassertStatusOK,"[u'Grid::get(txn)->shardRegistry()->getShard(txn, server));']",1798
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/db/commands/mr.cpp,c3f0a27dc07ddb9761f36680efee51b1a0478692,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/db/commands/mr.cpp,"-        auto status = grid.catalogCache()->getDatabase(txn, dbname);",-,auto status = grid.catalogCache,"[u')->getDatabase(txn, dbname);']",1833
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk.cpp,cc3f6cbe524f8714e892c310668f15f40e7c7311,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk.cpp,"+    auto config = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",+,auto config = uassertStatusOK,"[u'ScopedShardDatabase::getExisting(txn, nss.db()));']",93
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,"-    auto config = uassertStatusOK(grid.catalogCache()->getDatabase(txn, nss.db().toString()));",-,auto config = uassertStatusOK(grid.catalogCache,"[u')->getDatabase(txn, nss.db().toString()));']",371
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,-void ChunkManager::_printChunks() const {,-,void ChunkManager::_printChunks,[u') const {'],376
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,-        log() << redact((*it->second).toString());,-,log,[u') << redact((*it->second).toString());'],378
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,-            log() << redact(chunkMin.toString());,-,log,[u') << redact(chunkMin.toString());'],542
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,-            log() << redact((*chunk).toString());,-,log,[u') << redact((*chunk).toString());'],543
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,-            log() << redact(shardKey);,-,log,[u') << redact(shardKey);'],544
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,"+        msgasserted(8070,",+,msgasserted,"[u'8070,']",547
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,"-            msgasserted(13141, ""Chunk map pointed to incorrect chunk"");",-,msgasserted,"[u'13141, ""Chunk map pointed to incorrect chunk"");']",558
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,"-    msgasserted(8070,",-,msgasserted,"[u'8070,']",564
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,+    log() << redact(chunkMin.toString());,+,log,[u') << redact(chunkMin.toString());'],572
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,+    log() << redact((*chunk).toString());,+,log,[u') << redact((*chunk).toString());'],573
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,+    log() << redact(shardKey);,+,log,[u') << redact(shardKey);'],574
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,"+        uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString()));",+,uassertStatusOK(Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db().toString()));']",579
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,735b5e01b9e9d816ddcbb2f9204477dde48d392b,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/chunk_manager.cpp,"+    msgasserted(13141, ""Chunk map pointed to incorrect chunk"");",+,msgasserted,"[u'13141, ""Chunk map pointed to incorrect chunk"");']",582
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_flush_router_config_cmd.cpp,de726f47251cbf0ddd4e4014cd5dd38f8ad9b36d,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/commands/cluster_flush_router_config_cmd.cpp,-        grid.catalogCache()->invalidateAll();,-,grid.catalogCache,[u')->invalidateAll();'],82
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_flush_router_config_cmd.cpp,de726f47251cbf0ddd4e4014cd5dd38f8ad9b36d,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/commands/cluster_flush_router_config_cmd.cpp,+        Grid::get(txn)->catalogCache()->invalidateAll();,+,Grid::get(txn)->catalogCache,[u')->invalidateAll();'],83
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,3ab79ef5364fa814058bc0ef54bf2e7b9d271bca,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,-    virtual bool supportsWriteConcern(const BSONObj& cmd) const override {,-,virtual bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],68
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,3ab79ef5364fa814058bc0ef54bf2e7b9d271bca,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,+    bool supportsWriteConcern(const BSONObj& cmd) const override {,+,bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],69
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,3ab79ef5364fa814058bc0ef54bf2e7b9d271bca,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,"-        auto status = grid.catalogCache()->getDatabase(txn, nss.db().toString());",-,auto status = grid.catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",162
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,3ab79ef5364fa814058bc0ef54bf2e7b9d271bca,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,"+        auto scopedDb = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",+,auto scopedDb = uassertStatusOK,"[u'ScopedShardDatabase::getExisting(txn, nss.db()));']",173
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,3ab79ef5364fa814058bc0ef54bf2e7b9d271bca,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,"+        uassert(ErrorCodes::NamespaceNotSharded, ""ns ["" + nss.ns() + "" is not sharded."", cm);",+,uassert,"[u'ErrorCodes::NamespaceNotSharded, ""ns ["" + nss.ns() + "" is not sharded."", cm);']",180
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,3ab79ef5364fa814058bc0ef54bf2e7b9d271bca,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,+            log() << redact(cmEntry.second->toString());,+,log,[u') << redact(cmEntry.second->toString());'],183
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,3ab79ef5364fa814058bc0ef54bf2e7b9d271bca,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,-        cm->_printChunks();,-,cm->_printChunks,[u');'],186
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/config.cpp,7ab8766877e2a7a6d6913c3e832ad15188f14872,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/config.cpp,"+            uasserted(40371,",+,uasserted,"[u'40371,']",204
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/config.cpp,7ab8766877e2a7a6d6913c3e832ad15188f14872,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/config.cpp,"-    uassert(14822, (string) ""state changed in the middle: "" + ns, ci.isSharded());",-,uassert,"[u'14822, (string) ""state changed in the middle: "" + ns, ci.isSharded());']",494
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/config.cpp,7ab8766877e2a7a6d6913c3e832ad15188f14872,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/config.cpp,"+    uassert(14822,",+,uassert,"[u'14822,']",496
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/config.cpp,7ab8766877e2a7a6d6913c3e832ad15188f14872,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/config.cpp,-    uassert(,-,uassert,[u''],571
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/config.cpp,7ab8766877e2a7a6d6913c3e832ad15188f14872,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/config.cpp,"-    LOG(2) << ""found "" << numCollsSharded << "" collections left and "" << numCollsErased",-,LOG,"[u'2) << ""found "" << numCollsSharded << "" collections left and "" << numCollsErased']",681
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/config.cpp,7ab8766877e2a7a6d6913c3e832ad15188f14872,https://raw.githubusercontent.com/mongodb/mongo/a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23/src/mongo/s/config.cpp,-    dassert(shardIds);,-,dassert,[u'shardIds);'],744
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state.cpp,"-            LOG(1) << ""Successfully refreshed metadata for "" << nss.ns() << "" to """,-,LOG,"[u'1) << ""Successfully refreshed metadata for "" << nss.ns() << "" to ""']",287
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state.cpp,"-            log() << ""Refresh failed and will be retried as full reload """,-,log,"[u') << ""Refresh failed and will be retried as full reload ""']",296
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state.cpp,"+            log() << ""Refresh failed and will be retried as full reload "" << status;",+,log,"[u') << ""Refresh failed and will be retried as full reload "" << status;']",728
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state.cpp,"-    log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,-,log,"[u') << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: ""']",731
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state.cpp,"+        log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,+,log,"[u') << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: ""']",735
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state.cpp,"-                                                           grid.catalogClient(txn),",-,grid.catalogClient,"[u'txn),']",739
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state.cpp,"+                                                        grid.catalogClient(txn),",+,grid.catalogClient,"[u'txn),']",746
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state.cpp,"-        log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,-,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and found version ""']",810
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state.cpp,"+        log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",+,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";']",812
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state.cpp,"-    log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",-,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";']",824
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state.cpp,"+    log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,+,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and found version ""']",825
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,+            ASSERT_OK(,+,ASSERT_OK,[u''],91
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,+    std::unique_ptr<ShardingCatalogClient> makeShardingCatalogClient(,+,std::unique_ptr<ShardingCatalogClient> makeShardingCatalogClient,[u''],211
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",232
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",233
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",355
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",356
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",410
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",411
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",466
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",467
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",513
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",514
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",568
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",569
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",+,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",904
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_OK(shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));",+,ASSERT_OK,"[u'shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));']",922
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,+        ASSERT_OK(diffQueryStatus.getStatus());,+,ASSERT_OK,[u'diffQueryStatus.getStatus());'],936
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),']",939
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",+,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",964
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,+        ASSERT_OK(shardingState()->onStaleShardVersion(,+,ASSERT_OK,[u'shardingState()->onStaleShardVersion('],982
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,+        ASSERT_OK(diffQueryStatus.getStatus());,+,ASSERT_OK,[u'diffQueryStatus.getStatus());'],999
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),']",1002
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,+        ASSERT_OK(diffQueryStatus.getStatus());,+,ASSERT_OK,[u'diffQueryStatus.getStatus());'],1027
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(0, 0))),",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(0, 0))),']",1030
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",+,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",1052
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_EQ(ErrorCodes::RemoteChangeDetected, status);",+,ASSERT_EQ,"[u'ErrorCodes::RemoteChangeDetected, status);']",1072
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,+            ASSERT_OK(diffQueryStatus.getStatus());,+,ASSERT_OK,[u'diffQueryStatus.getStatus());'],1089
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,+            ASSERT_BSONOBJ_EQ(,+,ASSERT_BSONOBJ_EQ,[u''],1093
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",+,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",1120
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_OK(shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));",+,ASSERT_OK,"[u'shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));']",1138
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",+,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",1161
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/0e9947736fa66f1a997dd43fea6d1f854bb79518/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(ErrorCodes::HostNotFound, status);",+,ASSERT_EQ,"[u'ErrorCodes::HostNotFound, status);']",1182
7bf2874d0fe92c5503f9cde86ac9e341d1889000,"Revert ""SERVER-27678 moved DataReplicator::OnCompletionGuard into its own library""

This reverts commit 9edfc4c8ba273d54ecdc31c1fc0eb8c6a42ccbc4.",src/mongo/db/repl/callback_completion_guard.cpp,100a7d74e30d6abacaebfd41242934ba43950f7f,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/repl/callback_completion_guard.cpp,-void CallbackCompletionGuardBase::logUnsetResultErrorAndTerminate() {,-,void CallbackCompletionGuardBase::logUnsetResultErrorAndTerminate,[u') {'],43
7bf2874d0fe92c5503f9cde86ac9e341d1889000,"Revert ""SERVER-27678 moved DataReplicator::OnCompletionGuard into its own library""

This reverts commit 9edfc4c8ba273d54ecdc31c1fc0eb8c6a42ccbc4.",src/mongo/db/repl/callback_completion_guard.cpp,100a7d74e30d6abacaebfd41242934ba43950f7f,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/repl/callback_completion_guard.cpp,-    fassertFailed(40370);,-,fassertFailed,[u'40370);'],46
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,ab9ca2c7dd780c92039ebcde2eb77a6c53318680,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state.cpp,"+            LOG(1) << ""Successfully refreshed metadata for "" << nss.ns() << "" to """,+,LOG,"[u'1) << ""Successfully refreshed metadata for "" << nss.ns() << "" to ""']",291
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,ab9ca2c7dd780c92039ebcde2eb77a6c53318680,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state.cpp,"+            log() << ""Refresh failed and will be retried as full reload """,+,log,"[u') << ""Refresh failed and will be retried as full reload ""']",306
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,ab9ca2c7dd780c92039ebcde2eb77a6c53318680,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state.cpp,"-            log() << ""Refresh failed and will be retried as full reload "" << status;",-,log,"[u') << ""Refresh failed and will be retried as full reload "" << status;']",745
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,ab9ca2c7dd780c92039ebcde2eb77a6c53318680,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state.cpp,"-        log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,-,log,"[u') << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: ""']",748
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,ab9ca2c7dd780c92039ebcde2eb77a6c53318680,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state.cpp,"+    log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,+,log,"[u') << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: ""']",750
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,ab9ca2c7dd780c92039ebcde2eb77a6c53318680,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state.cpp,"-                                                        grid.catalogClient(txn),",-,grid.catalogClient,"[u'txn),']",757
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,ab9ca2c7dd780c92039ebcde2eb77a6c53318680,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state.cpp,"+                                                           grid.catalogClient(txn),",+,grid.catalogClient,"[u'txn),']",765
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,ab9ca2c7dd780c92039ebcde2eb77a6c53318680,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state.cpp,"-        log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",-,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";']",817
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,ab9ca2c7dd780c92039ebcde2eb77a6c53318680,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state.cpp,"+        log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,+,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and found version ""']",818
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,ab9ca2c7dd780c92039ebcde2eb77a6c53318680,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state.cpp,"-    log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,-,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and found version ""']",831
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,ab9ca2c7dd780c92039ebcde2eb77a6c53318680,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state.cpp,"+    log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",+,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";']",833
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,-            ASSERT_OK(,-,ASSERT_OK,[u''],86
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,-    std::unique_ptr<ShardingCatalogClient> makeShardingCatalogClient(,-,std::unique_ptr<ShardingCatalogClient> makeShardingCatalogClient,[u''],174
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(shardName(), shardingState()->getShardName());",-,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",195
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(""a"", shardingState()->getShardName());",+,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",196
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(shardName(), shardingState()->getShardName());",-,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",306
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(""a"", shardingState()->getShardName());",+,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",307
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(shardName(), shardingState()->getShardName());",-,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",361
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(""a"", shardingState()->getShardName());",+,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",362
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(shardName(), shardingState()->getShardName());",-,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",417
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(""a"", shardingState()->getShardName());",+,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",418
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(shardName(), shardingState()->getShardName());",-,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",464
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(""a"", shardingState()->getShardName());",+,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",465
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(shardName(), shardingState()->getShardName());",-,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",519
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(""a"", shardingState()->getShardName());",+,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",520
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",-,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",855
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-        ASSERT_OK(shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));",-,ASSERT_OK,"[u'shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));']",873
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,-        ASSERT_OK(diffQueryStatus.getStatus());,-,ASSERT_OK,[u'diffQueryStatus.getStatus());'],887
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-        ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),",-,ASSERT_BSONOBJ_EQ,"[u'BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),']",890
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",-,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",915
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,-        ASSERT_OK(shardingState()->onStaleShardVersion(,-,ASSERT_OK,[u'shardingState()->onStaleShardVersion('],933
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,-        ASSERT_OK(diffQueryStatus.getStatus());,-,ASSERT_OK,[u'diffQueryStatus.getStatus());'],950
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-        ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),",-,ASSERT_BSONOBJ_EQ,"[u'BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),']",953
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,-        ASSERT_OK(diffQueryStatus.getStatus());,-,ASSERT_OK,[u'diffQueryStatus.getStatus());'],978
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-        ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(0, 0))),",-,ASSERT_BSONOBJ_EQ,"[u'BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(0, 0))),']",981
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",-,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",1003
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-        ASSERT_EQ(ErrorCodes::RemoteChangeDetected, status);",-,ASSERT_EQ,"[u'ErrorCodes::RemoteChangeDetected, status);']",1023
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,-            ASSERT_OK(diffQueryStatus.getStatus());,-,ASSERT_OK,[u'diffQueryStatus.getStatus());'],1040
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,-            ASSERT_BSONOBJ_EQ(,-,ASSERT_BSONOBJ_EQ,[u''],1044
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",-,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",1071
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-        ASSERT_OK(shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));",-,ASSERT_OK,"[u'shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));']",1089
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",-,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",1112
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,0156058676d31ca94063996f8daea0fa3c28505c,https://raw.githubusercontent.com/mongodb/mongo/d3e67186d1f9c633e8e69ebb7bf2418d3850688a/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(ErrorCodes::HostNotFound, status);",-,ASSERT_EQ,"[u'ErrorCodes::HostNotFound, status);']",1133
9edfc4c8ba273d54ecdc31c1fc0eb8c6a42ccbc4,SERVER-27678 moved DataReplicator::OnCompletionGuard into its own library,src/mongo/db/repl/callback_completion_guard.cpp,100a7d74e30d6abacaebfd41242934ba43950f7f,https://raw.githubusercontent.com/mongodb/mongo/9edfc4c8ba273d54ecdc31c1fc0eb8c6a42ccbc4/src/mongo/db/repl/callback_completion_guard.cpp,+void CallbackCompletionGuardBase::logUnsetResultErrorAndTerminate() {,+,void CallbackCompletionGuardBase::logUnsetResultErrorAndTerminate,[u') {'],44
9edfc4c8ba273d54ecdc31c1fc0eb8c6a42ccbc4,SERVER-27678 moved DataReplicator::OnCompletionGuard into its own library,src/mongo/db/repl/callback_completion_guard.cpp,100a7d74e30d6abacaebfd41242934ba43950f7f,https://raw.githubusercontent.com/mongodb/mongo/9edfc4c8ba273d54ecdc31c1fc0eb8c6a42ccbc4/src/mongo/db/repl/callback_completion_guard.cpp,+    fassertFailed(40370);,+,fassertFailed,[u'40370);'],47
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state.cpp,"-            LOG(1) << ""Successfully refreshed metadata for "" << nss.ns() << "" to """,-,LOG,"[u'1) << ""Successfully refreshed metadata for "" << nss.ns() << "" to ""']",287
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state.cpp,"-            log() << ""Refresh failed and will be retried as full reload """,-,log,"[u') << ""Refresh failed and will be retried as full reload ""']",296
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state.cpp,"+            log() << ""Refresh failed and will be retried as full reload "" << status;",+,log,"[u') << ""Refresh failed and will be retried as full reload "" << status;']",728
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state.cpp,"-    log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,-,log,"[u') << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: ""']",731
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state.cpp,"+        log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,+,log,"[u') << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: ""']",735
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state.cpp,"-                                                           grid.catalogClient(txn),",-,grid.catalogClient,"[u'txn),']",739
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state.cpp,"+                                                        grid.catalogClient(txn),",+,grid.catalogClient,"[u'txn),']",746
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state.cpp,"-        log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,-,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and found version ""']",810
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state.cpp,"+        log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",+,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";']",812
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state.cpp,"-    log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",-,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";']",824
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,258f5191b9f1b80e2770f307fdfd1a859570dcbc,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state.cpp,"+    log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,+,log,"[u') << ""MetadataLoader took "" << t.millis() << "" ms and found version ""']",825
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,+            ASSERT_OK(,+,ASSERT_OK,[u''],91
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,+    std::unique_ptr<ShardingCatalogClient> makeShardingCatalogClient(,+,std::unique_ptr<ShardingCatalogClient> makeShardingCatalogClient,[u''],211
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",232
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",233
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",355
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",356
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",410
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",411
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",466
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",467
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",513
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",514
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"-    ASSERT_EQ(""a"", shardingState()->getShardName());",-,ASSERT_EQ,"[u'""a"", shardingState()->getShardName());']",568
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(shardName(), shardingState()->getShardName());",+,ASSERT_EQ,"[u'shardName(), shardingState()->getShardName());']",569
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",+,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",904
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_OK(shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));",+,ASSERT_OK,"[u'shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));']",922
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,+        ASSERT_OK(diffQueryStatus.getStatus());,+,ASSERT_OK,[u'diffQueryStatus.getStatus());'],936
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),']",939
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",+,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",964
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,+        ASSERT_OK(shardingState()->onStaleShardVersion(,+,ASSERT_OK,[u'shardingState()->onStaleShardVersion('],982
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,+        ASSERT_OK(diffQueryStatus.getStatus());,+,ASSERT_OK,[u'diffQueryStatus.getStatus());'],999
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),']",1002
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,+        ASSERT_OK(diffQueryStatus.getStatus());,+,ASSERT_OK,[u'diffQueryStatus.getStatus());'],1027
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(0, 0))),",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(0, 0))),']",1030
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",+,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",1052
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_EQ(ErrorCodes::RemoteChangeDetected, status);",+,ASSERT_EQ,"[u'ErrorCodes::RemoteChangeDetected, status);']",1072
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,+            ASSERT_OK(diffQueryStatus.getStatus());,+,ASSERT_OK,[u'diffQueryStatus.getStatus());'],1089
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,+            ASSERT_BSONOBJ_EQ(,+,ASSERT_BSONOBJ_EQ,[u''],1093
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",+,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",1120
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+        ASSERT_OK(shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));",+,ASSERT_OK,"[u'shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));']",1138
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",+,ASSERT_OK,"[u'shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));']",1161
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,e4953f3488c49a094b0fddc40f8a653823cacf28,https://raw.githubusercontent.com/mongodb/mongo/6add2c82bacecd5f54613ebf4be1553f3b046cbc/src/mongo/db/s/sharding_state_test.cpp,"+    ASSERT_EQ(ErrorCodes::HostNotFound, status);",+,ASSERT_EQ,"[u'ErrorCodes::HostNotFound, status);']",1182
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,-        ASSERT_OK(,-,ASSERT_OK,[u''],67
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,"-            catalogClient()->appendInfoForConfigServerDatabases(operationContext(), &builder));",-,catalogClient,"[u')->appendInfoForConfigServerDatabases(operationContext(), &builder));']",68
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+        ASSERT_OK(catalogClient()->appendInfoForConfigServerDatabases(,+,ASSERT_OK(catalogClient,[u')->appendInfoForConfigServerDatabases('],69
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+        ASSERT_OK(catalogClient()->appendInfoForConfigServerDatabases(,+,ASSERT_OK(catalogClient,[u')->appendInfoForConfigServerDatabases('],138
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,"+        ASSERT_BSONOBJ_EQ(kReplSecondaryOkMetadata,",+,ASSERT_BSONOBJ_EQ,"[u'kReplSecondaryOkMetadata,']",146
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,"+        ASSERT_EQ(""admin"", request.dbname);",+,ASSERT_EQ,"[u'""admin"", request.dbname);']",149
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,"+        ASSERT_BSONOBJ_EQ(BSON(""listDatabases"" << 1 << ""filter"" << BSON(""name""",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""listDatabases"" << 1 << ""filter"" << BSON(""name""']",150
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,"-            catalogClient()->appendInfoForConfigServerDatabases(operationContext(), &builder);",-,catalogClient,"[u')->appendInfoForConfigServerDatabases(operationContext(), &builder);']",175
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+        auto status = catalogClient()->appendInfoForConfigServerDatabases(,+,auto status = catalogClient,[u')->appendInfoForConfigServerDatabases('],176
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,"-            catalogClient()->appendInfoForConfigServerDatabases(operationContext(), &builder);",-,catalogClient,"[u')->appendInfoForConfigServerDatabases(operationContext(), &builder);']",246
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+        auto status = catalogClient()->appendInfoForConfigServerDatabases(,+,auto status = catalogClient,[u')->appendInfoForConfigServerDatabases('],247
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,"-            catalogClient()->appendInfoForConfigServerDatabases(operationContext(), &builder);",-,catalogClient,"[u')->appendInfoForConfigServerDatabases(operationContext(), &builder);']",274
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,5e2259b56fb3bdc75182451cbea6ea315796847f,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+        auto status = catalogClient()->appendInfoForConfigServerDatabases(,+,auto status = catalogClient,[u')->appendInfoForConfigServerDatabases('],275
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/commands/cluster_list_databases_cmd.cpp,2ae555e85930fb36bc3be69e4e2e8dcbcfb5e6f9,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/commands/cluster_list_databases_cmd.cpp,"+            uassertStatusOK(bsonExtractIntegerField(dbElt.Obj(), ""sizeOnDisk""_sd, &sizeOnDisk));",+,uassertStatusOK,"[u'bsonExtractIntegerField(dbElt.Obj(), ""sizeOnDisk""_sd, &sizeOnDisk));']",232
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/commands/cluster_list_databases_cmd.cpp,2ae555e85930fb36bc3be69e4e2e8dcbcfb5e6f9,https://raw.githubusercontent.com/mongodb/mongo/d7bd800d3d06004c4ca9114627ee882442e4d5e4/src/mongo/s/commands/cluster_list_databases_cmd.cpp,"+            uassert(ErrorCodes::BadValue,",+,uassert,"[u'ErrorCodes::BadValue,']",233
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), match);",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(), match);']",179
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), serialize(reserialized.getMatchExpression()));",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(), serialize(reserialized.getMatchExpression()));']",180
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",+,ASSERT_EQ,"[u'original.matches(obj), reserialized.matches(obj));']",183
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",+,ASSERT_EQ,"[u'original.matches(obj), reserialized.matches(obj));']",186
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",+,ASSERT_EQ,"[u'original.matches(obj), reserialized.matches(obj));']",189
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"-    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), fromjson(""{$and: [{x: /a.b.c/}, {x: /.d.e./}]}""));",-,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(), fromjson(""{$and: [{x: /a.b.c/}, {x: /.d.e./}]}""));']",288
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(),']",290
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(),']",358
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), serialize(reserialized.getMatchExpression()));",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(), serialize(reserialized.getMatchExpression()));']",361
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",+,ASSERT_EQ,"[u'original.matches(obj), reserialized.matches(obj));']",364
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",+,ASSERT_EQ,"[u'original.matches(obj), reserialized.matches(obj));']",367
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"-    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), fromjson(""{x: {$regex: 'a.b'}}""));",-,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(), fromjson(""{x: {$regex: \'a.b\'}}""));']",462
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(),']",463
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"-    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), fromjson(""{x: {$regex: 'a.b', $options: 'i'}}""));",-,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(), fromjson(""{x: {$regex: \'a.b\', $options: \'i\'}}""));']",491
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(),']",492
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"-    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), fromjson(""{x: {$regex: 'a.b'}}""));",-,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(), fromjson(""{x: {$regex: \'a.b\'}}""));']",529
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(),']",530
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(),']",692
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), serialize(reserialized.getMatchExpression()));",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(), serialize(reserialized.getMatchExpression()));']",694
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",+,ASSERT_EQ,"[u'original.matches(obj), reserialized.matches(obj));']",697
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",+,ASSERT_EQ,"[u'original.matches(obj), reserialized.matches(obj));']",700
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",+,ASSERT_EQ,"[u'original.matches(obj), reserialized.matches(obj));']",702
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"-    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), fromjson(""{$nor: [{x: /a.b/}]}""));",-,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(), fromjson(""{$nor: [{x: /a.b/}]}""));']",847
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(),']",848
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"-    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), fromjson(""{$nor: [{x: /a.b/}]}""));",-,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(), fromjson(""{$nor: [{x: /a.b/}]}""));']",875
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(),']",876
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"-    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), fromjson(""{$nor: [{x: /a.b/i}]}""));",-,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(), fromjson(""{$nor: [{x: /a.b/i}]}""));']",903
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,13a2aaa172db10b1b766b3d1c31e4936dd8fd1a1,https://raw.githubusercontent.com/mongodb/mongo/04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4/src/mongo/db/matcher/expression_serialization_test.cpp,"+    ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",+,ASSERT_BSONOBJ_EQ,"[u'*reserialized.getQuery(),']",904
21948042b6da5fb5bf15897f9808a70551f5af09,SERVER-27680 Merge stopOplogFetcher and pauseRsBgSyncProducer failpoint into single stopReplProducer failpoint,src/mongo/db/repl/bgsync.cpp,a4943f3f8a489f794d4718b28f1c2b2ee2f131a2,https://raw.githubusercontent.com/mongodb/mongo/21948042b6da5fb5bf15897f9808a70551f5af09/src/mongo/db/repl/bgsync.cpp,"+        log() << ""bgsync - stopReplProducer fail point """,+,log,"[u') << ""bgsync - stopReplProducer fail point ""']",272
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,afff51fd10dc7aaadd1cb039a0af0fbc34c5dde0,https://raw.githubusercontent.com/mongodb/mongo/fd6971a17400c37ea6bf6c54ef2c04c25201416d/src/mongo/db/repl/storage_interface_impl_test.cpp,+    ASSERT_OK(loaderStatus.getStatus());,+,ASSERT_OK,[u'loaderStatus.getStatus());'],514
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,afff51fd10dc7aaadd1cb039a0af0fbc34c5dde0,https://raw.githubusercontent.com/mongodb/mongo/fd6971a17400c37ea6bf6c54ef2c04c25201416d/src/mongo/db/repl/storage_interface_impl_test.cpp,"+    ASSERT_OK(loader->insertDocuments(docs.begin(), docs.end()));",+,ASSERT_OK,"[u'loader->insertDocuments(docs.begin(), docs.end()));']",517
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,afff51fd10dc7aaadd1cb039a0af0fbc34c5dde0,https://raw.githubusercontent.com/mongodb/mongo/fd6971a17400c37ea6bf6c54ef2c04c25201416d/src/mongo/db/repl/storage_interface_impl_test.cpp,+    ASSERT_TRUE(coll);,+,ASSERT_TRUE,[u'coll);'],528
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,afff51fd10dc7aaadd1cb039a0af0fbc34c5dde0,https://raw.githubusercontent.com/mongodb/mongo/fd6971a17400c37ea6bf6c54ef2c04c25201416d/src/mongo/db/repl/storage_interface_impl_test.cpp,"+    ASSERT_EQ(1LL, coll->getRecordStore()->numRecords(txn));",+,ASSERT_EQ,"[u'1LL, coll->getRecordStore()->numRecords(txn));']",529
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,afff51fd10dc7aaadd1cb039a0af0fbc34c5dde0,https://raw.githubusercontent.com/mongodb/mongo/fd6971a17400c37ea6bf6c54ef2c04c25201416d/src/mongo/db/repl/storage_interface_impl_test.cpp,+    auto collIdxCat = coll->getIndexCatalog();,+,auto collIdxCat = coll->getIndexCatalog,[u');'],533
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,afff51fd10dc7aaadd1cb039a0af0fbc34c5dde0,https://raw.githubusercontent.com/mongodb/mongo/fd6971a17400c37ea6bf6c54ef2c04c25201416d/src/mongo/db/repl/storage_interface_impl_test.cpp,"+    ASSERT_EQUALS(0, collIdxCat->numIndexesTotal(txn));",+,ASSERT_EQUALS,"[u'0, collIdxCat->numIndexesTotal(txn));']",534
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,"+        uassert(ErrorCodes::StaleEpoch,",+,uassert,"[u'ErrorCodes::StaleEpoch,']",161
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,"+        return {ErrorCodes::Error(40165),",+,return {ErrorCodes::Error,"[u'40165),']",221
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+    Status applyOpsStatus = Grid::get(txn)->catalogClient(txn)->applyChunkOpsDeprecated(,+,Status applyOpsStatus = Grid::get(txn)->catalogClient,[u'txn)->applyChunkOpsDeprecated('],433
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,"+        WriteConcernOptions(),",+,WriteConcernOptions,"[u'),']",439
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+        Grid::get(txn)->catalogClient(txn)->logChange(,+,Grid::get(txn)->catalogClient(txn)->logChange,[u''],458
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,"+            txn, ""split"", ns.ns(), logDetail.obj(), WriteConcernOptions());",+,"txn, ""split"", ns.ns(), logDetail.obj(), WriteConcernOptions",[u'));'],459
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+            Grid::get(txn)->catalogClient(txn)->logChange(,+,Grid::get(txn)->catalogClient(txn)->logChange,[u''],472
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,"+                txn, ""multi-split"", ns.ns(), chunkDetail.obj(), WriteConcernOptions());",+,"txn, ""multi-split"", ns.ns(), chunkDetail.obj(), WriteConcernOptions",[u'));'],473
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+    Status applyOpsStatus = Grid::get(txn)->catalogClient(txn)->applyChunkOpsDeprecated(,+,Status applyOpsStatus = Grid::get(txn)->catalogClient,[u'txn)->applyChunkOpsDeprecated('],558
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,"+        WriteConcernOptions(),",+,WriteConcernOptions,"[u'),']",564
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+    Grid::get(txn)->catalogClient(txn)->logChange(,+,Grid::get(txn)->catalogClient(txn)->logChange,[u''],581
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,"+        txn, ""merge"", ns.ns(), logDetail.obj(), WriteConcernOptions());",+,"txn, ""merge"", ns.ns(), logDetail.obj(), WriteConcernOptions",[u'));'],582
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,e6b7bd78f08f64a0759b549250d9436e5ddec1f1,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,"+        return Status(ErrorCodes::Error(40164),",+,return Status(ErrorCodes::Error,"[u'40164),']",646
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-const WriteConcernOptions kNoWaitWriteConcern(1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));",-,const WriteConcernOptions kNoWaitWriteConcern,"[u'1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));']",109
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-ShardingCatalogManagerImpl::ShardingCatalogManagerImpl(,-,ShardingCatalogManagerImpl::ShardingCatalogManagerImpl,[u''],305
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-    : _catalogClient(catalogClient),",-,: _catalogClient,"[u'catalogClient),']",307
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-ShardingCatalogManagerImpl::~ShardingCatalogManagerImpl() = default;,-,ShardingCatalogManagerImpl::~ShardingCatalogManagerImpl,[u') = default;'],313
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-    LOG(1) << ""ShardingCatalogManagerImpl::shutDown() called."";",-,LOG,"[u'1) << ""ShardingCatalogManagerImpl::shutDown() called."";']",326
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-            LOG(0) << ""Operation for addShard timed out with status "" << swResponse.status;",-,LOG,"[u'0) << ""Operation for addShard timed out with status "" << swResponse.status;']",364
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-        if (!Shard::shouldErrorBePropagated(swResponse.status.code())) {,-,if (!Shard::shouldErrorBePropagated,[u'swResponse.status.code())) {'],366
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-    if (!Shard::shouldErrorBePropagated(commandStatus.code())) {,-,if (!Shard::shouldErrorBePropagated,[u'commandStatus.code())) {'],380
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-    Status writeConcernStatus = getWriteConcernStatusFromCommandResult(responseObj);,-,Status writeConcernStatus = getWriteConcernStatusFromCommandResult,[u'responseObj);'],388
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-    if (!Shard::shouldErrorBePropagated(writeConcernStatus.code())) {,-,if (!Shard::shouldErrorBePropagated,[u'writeConcernStatus.code())) {'],389
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-        LOG(2) << ""going to insert shardIdentity document into shard: "" << shardType;",-,LOG,"[u'2) << ""going to insert shardIdentity document into shard: "" << shardType;']",886
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-            Shard::CommandResponse::processBatchWriteResponse(commandResponse, &batchResponse);",-,Shard::CommandResponse::processBatchWriteResponse,"[u'commandResponse, &batchResponse);']",898
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-    log() << ""going to insert new entry for shard into config.shards: "" << shardType.toString();",-,log,"[u') << ""going to insert new entry for shard into config.shards: "" << shardType.toString();']",904
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-        log() << ""error adding shard: "" << shardType.toBSON() << "" err: "" << result.reason();",-,log,"[u') << ""error adding shard: "" << shardType.toBSON() << "" err: "" << result.reason();']",909
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-            log() << ""adding shard "" << shardConnectionString.toString()",-,log,"[u') << ""adding shard "" << shardConnectionString.toString()']",922
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-    _catalogClient->logChange(,-,_catalogClient->logChange,[u''],932
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-        grid.catalogClient(txn)->applyChunkOpsDeprecated(txn,",-,grid.catalogClient,"[u'txn)->applyChunkOpsDeprecated(txn,']",1311
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-                                                         WriteConcernOptions(),",-,WriteConcernOptions,"[u'),']",1316
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-        grid.catalogClient(txn)->logChange(,-,grid.catalogClient(txn)->logChange,[u''],1335
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-            txn, ""split"", ns.ns(), logDetail.obj(), WriteConcernOptions());",-,"txn, ""split"", ns.ns(), logDetail.obj(), WriteConcernOptions",[u'));'],1336
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-            grid.catalogClient(txn)->logChange(,-,grid.catalogClient(txn)->logChange,[u''],1349
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-                txn, ""multi-split"", ns.ns(), chunkDetail.obj(), WriteConcernOptions());",-,"txn, ""multi-split"", ns.ns(), chunkDetail.obj(), WriteConcernOptions",[u'));'],1350
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-        grid.catalogClient(txn)->applyChunkOpsDeprecated(txn,",-,grid.catalogClient,"[u'txn)->applyChunkOpsDeprecated(txn,']",1436
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-                                                         WriteConcernOptions(),",-,WriteConcernOptions,"[u'),']",1441
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-    grid.catalogClient(txn)->logChange(,-,grid.catalogClient(txn)->logChange,[u''],1458
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-        txn, ""merge"", ns.ns(), logDetail.obj(), WriteConcernOptions());",-,"txn, ""merge"", ns.ns(), logDetail.obj(), WriteConcernOptions",[u'));'],1459
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"+const WriteConcernOptions kNoWaitWriteConcern(1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));",+,const WriteConcernOptions kNoWaitWriteConcern,"[u'1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));']",1506
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-        uassert(ErrorCodes::StaleEpoch,",-,uassert,"[u'ErrorCodes::StaleEpoch,']",1509
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+ShardingCatalogManagerImpl::ShardingCatalogManagerImpl(,+,ShardingCatalogManagerImpl::ShardingCatalogManagerImpl,[u''],1526
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+ShardingCatalogManagerImpl::~ShardingCatalogManagerImpl() = default;,+,ShardingCatalogManagerImpl::~ShardingCatalogManagerImpl,[u') = default;'],1550
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-            ErrorCodes::Error(40165),",-,ErrorCodes::Error,"[u'40165),']",1576
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"+    LOG(1) << ""ShardingCatalogManagerImpl::shutDown() called."";",+,LOG,"[u'1) << ""ShardingCatalogManagerImpl::shutDown() called."";']",1600
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-        return Status(ErrorCodes::Error(40164),",-,return Status(ErrorCodes::Error,"[u'40164),']",1713
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+    const auto catalogClient = Grid::get(txn)->catalogClient(txn);,+,const auto catalogClient = Grid::get(txn)->catalogClient,[u'txn);'],1865
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-        log() << ""Retrying upsert of shardIdentity document into shard "" << shardType.getName();",-,log,"[u') << ""Retrying upsert of shardIdentity document into shard "" << shardType.getName();']",2201
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-        Status writeConcernStatus = getWriteConcernStatusFromCommandResult(responseObj);,-,Status writeConcernStatus = getWriteConcernStatusFromCommandResult,[u'responseObj);'],2248
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-            Shard::CommandResponse::processBatchWriteResponse(commandResponse, &batchResponse);",-,Shard::CommandResponse::processBatchWriteResponse,"[u'commandResponse, &batchResponse);']",2256
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-    commandRequest.setWriteConcern(ShardingCatalogClient::kMajorityWriteConcern.toBSON());,-,commandRequest.setWriteConcern,[u'ShardingCatalogClient::kMajorityWriteConcern.toBSON());'],2366
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,6c3e9ac749c22e43a581724ed37670e1da24dd14,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,"-    fassert(40219, swHandle.getStatus());",-,fassert,"[u'40219, swHandle.getStatus());']",2387
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_mock.cpp,44a0e884bb8e23705418618b986d54a71cfbc767,https://raw.githubusercontent.com/mongodb/mongo/c43d7cd31af6854eaf134f8021d9f0784ddf5070/src/mongo/s/catalog/sharding_catalog_manager_mock.cpp,-ShardingCatalogManagerMock::ShardingCatalogManagerMock() = default;,-,ShardingCatalogManagerMock::ShardingCatalogManagerMock,[u') = default;'],41
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_mock.cpp,44a0e884bb8e23705418618b986d54a71cfbc767,https://raw.githubusercontent.com/mongodb/mongo/c43d7cd31af6854eaf134f8021d9f0784ddf5070/src/mongo/s/catalog/sharding_catalog_manager_mock.cpp,-ShardingCatalogManagerMock::~ShardingCatalogManagerMock() = default;,-,ShardingCatalogManagerMock::~ShardingCatalogManagerMock,[u') = default;'],43
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+const WriteConcernOptions kNoWaitWriteConcern(1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));",+,const WriteConcernOptions kNoWaitWriteConcern,"[u'1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));']",82
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+            LOG(0) << ""Operation for addShard timed out with status "" << swResponse.status;",+,LOG,"[u'0) << ""Operation for addShard timed out with status "" << swResponse.status;']",159
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+        if (!Shard::shouldErrorBePropagated(swResponse.status.code())) {,+,if (!Shard::shouldErrorBePropagated,[u'swResponse.status.code())) {'],161
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+    if (!Shard::shouldErrorBePropagated(commandStatus.code())) {,+,if (!Shard::shouldErrorBePropagated,[u'commandStatus.code())) {'],175
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+    Status writeConcernStatus = getWriteConcernStatusFromCommandResult(responseObj);,+,Status writeConcernStatus = getWriteConcernStatusFromCommandResult,[u'responseObj);'],183
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+    if (!Shard::shouldErrorBePropagated(writeConcernStatus.code())) {,+,if (!Shard::shouldErrorBePropagated,[u'writeConcernStatus.code())) {'],184
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+    const auto existingShards = Grid::get(txn)->catalogClient(txn)->getAllShards(,+,const auto existingShards = Grid::get(txn)->catalogClient,[u'txn)->getAllShards('],205
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+        auto dbt = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName);",+,auto dbt = Grid::get(txn)->catalogClient,"[u'txn)->getDatabase(txn, dbName);']",585
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+        LOG(2) << ""going to insert shardIdentity document into shard: "" << shardType;",+,LOG,"[u'2) << ""going to insert shardIdentity document into shard: "" << shardType;']",643
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+            Shard::CommandResponse::processBatchWriteResponse(commandResponse, &batchResponse);",+,Shard::CommandResponse::processBatchWriteResponse,"[u'commandResponse, &batchResponse);']",655
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+    log() << ""going to insert new entry for shard into config.shards: "" << shardType.toString();",+,log,"[u') << ""going to insert new entry for shard into config.shards: "" << shardType.toString();']",661
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+    Status result = Grid::get(txn)->catalogClient(txn)->insertConfigDocument(,+,Status result = Grid::get(txn)->catalogClient,[u'txn)->insertConfigDocument('],663
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+        log() << ""error adding shard: "" << shardType.toBSON() << "" err: "" << result.reason();",+,log,"[u') << ""error adding shard: "" << shardType.toBSON() << "" err: "" << result.reason();']",666
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+        Status status = Grid::get(txn)->catalogClient(txn)->updateDatabase(txn, dbName, dbt);",+,Status status = Grid::get(txn)->catalogClient,"[u'txn)->updateDatabase(txn, dbName, dbt);']",677
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+            log() << ""adding shard "" << shardConnectionString.toString()",+,log,"[u') << ""adding shard "" << shardConnectionString.toString()']",679
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+    Grid::get(txn)->catalogClient(txn)->logChange(,+,Grid::get(txn)->catalogClient(txn)->logChange,[u''],689
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+        log() << ""Retrying upsert of shardIdentity document into shard "" << shardType.getName();",+,log,"[u') << ""Retrying upsert of shardIdentity document into shard "" << shardType.getName();']",865
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+        Status writeConcernStatus = getWriteConcernStatusFromCommandResult(responseObj);,+,Status writeConcernStatus = getWriteConcernStatusFromCommandResult,[u'responseObj);'],912
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+            Shard::CommandResponse::processBatchWriteResponse(commandResponse, &batchResponse);",+,Shard::CommandResponse::processBatchWriteResponse,"[u'commandResponse, &batchResponse);']",920
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+            ->catalogClient(txnPtr.get()),+,->catalogClient,[u'txnPtr.get())'],990
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+    commandRequest.setWriteConcern(ShardingCatalogClient::kMajorityWriteConcern.toBSON());,+,commandRequest.setWriteConcern,[u'ShardingCatalogClient::kMajorityWriteConcern.toBSON());'],1034
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,3a7aef9c9df1bb48553404f3d76136f0da88848e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,"+    fassert(40219, swHandle.getStatus());",+,fassert,"[u'40219, swHandle.getStatus());']",1054
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,6af584d3c300db53eb3d3566110e53d71589812e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,"+const WriteConcernOptions kNoWaitWriteConcern(1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));",+,const WriteConcernOptions kNoWaitWriteConcern,"[u'1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));']",55
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,6af584d3c300db53eb3d3566110e53d71589812e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+    auto updateStatus = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,+,auto updateStatus = Grid::get(txn)->catalogClient,[u'txn)->updateConfigDocument('],181
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,6af584d3c300db53eb3d3566110e53d71589812e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+    auto updateStatus = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,+,auto updateStatus = Grid::get(txn)->catalogClient,[u'txn)->updateConfigDocument('],291
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,6af584d3c300db53eb3d3566110e53d71589812e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+    auto updateStatus = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,+,auto updateStatus = Grid::get(txn)->catalogClient,[u'txn)->updateConfigDocument('],366
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,6af584d3c300db53eb3d3566110e53d71589812e,https://raw.githubusercontent.com/mongodb/mongo/0fe3516e0db2fdc6b3602b0018ebbd9f62008bab/src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+    return Grid::get(txn)->catalogClient(txn)->removeConfigDocuments(,+,return Grid::get(txn)->catalogClient,[u'txn)->removeConfigDocuments('],394
c43d7cd31af6854eaf134f8021d9f0784ddf5070,SERVER-27460 fix RouterStageMerge::kill() crash during mongos shutdown,src/mongo/s/query/async_results_merger_test.cpp,cfe5f0988c6dd75f2f9966f3ee5ab0960a211b95,https://raw.githubusercontent.com/mongodb/mongo/c43d7cd31af6854eaf134f8021d9f0784ddf5070/src/mongo/s/query/async_results_merger_test.cpp,-    ASSERT_NOT_OK(arm->nextEvent().getStatus());,-,ASSERT_NOT_OK,[u'arm->nextEvent().getStatus());'],862
c43d7cd31af6854eaf134f8021d9f0784ddf5070,SERVER-27460 fix RouterStageMerge::kill() crash during mongos shutdown,src/mongo/s/query/async_results_merger_test.cpp,cfe5f0988c6dd75f2f9966f3ee5ab0960a211b95,https://raw.githubusercontent.com/mongodb/mongo/c43d7cd31af6854eaf134f8021d9f0784ddf5070/src/mongo/s/query/async_results_merger_test.cpp,"+    ASSERT_EQ(ErrorCodes::ShutdownInProgress, arm->nextEvent().getStatus());",+,ASSERT_EQ,"[u'ErrorCodes::ShutdownInProgress, arm->nextEvent().getStatus());']",863
e8893fc311ac12028dafcf4416c2f534a42f1cf7,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,bd40a94ef3383c2a33c5028c61088a220d5fd1a2,https://raw.githubusercontent.com/mongodb/mongo/e8893fc311ac12028dafcf4416c2f534a42f1cf7/src/mongo/db/query/query_request_test.cpp,"+        assertGet(QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));",+,assertGet,"[u'QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));']",1314
e8893fc311ac12028dafcf4416c2f534a42f1cf7,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,bd40a94ef3383c2a33c5028c61088a220d5fd1a2,https://raw.githubusercontent.com/mongodb/mongo/e8893fc311ac12028dafcf4416c2f534a42f1cf7/src/mongo/db/query/query_request_test.cpp,"+    ASSERT_EQ(qr->getComment(), ""{ b: 2, c: { d: \""ParseFromLegacyObjMetaOpComment\"" } }"");",+,ASSERT_EQ,"[u'qr->getComment(), ""{ b: 2, c: { d: \\""ParseFromLegacyObjMetaOpComment\\"" } }"");']",1317
e8893fc311ac12028dafcf4416c2f534a42f1cf7,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,bd40a94ef3383c2a33c5028c61088a220d5fd1a2,https://raw.githubusercontent.com/mongodb/mongo/e8893fc311ac12028dafcf4416c2f534a42f1cf7/src/mongo/db/query/query_request_test.cpp,"+        assertGet(QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));",+,assertGet,"[u'QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));']",1326
e8893fc311ac12028dafcf4416c2f534a42f1cf7,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,bd40a94ef3383c2a33c5028c61088a220d5fd1a2,https://raw.githubusercontent.com/mongodb/mongo/e8893fc311ac12028dafcf4416c2f534a42f1cf7/src/mongo/db/query/query_request_test.cpp,"+    ASSERT_EQ(qr->getComment(), ""ParseFromLegacyStringMetaOpComment"");",+,ASSERT_EQ,"[u'qr->getComment(), ""ParseFromLegacyStringMetaOpComment"");']",1328
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,+    ASSERT_OK(lastVote.getStatus());,+,ASSERT_OK,[u'lastVote.getStatus());'],85
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getTerm(), 2);",+,ASSERT_EQ,"[u'lastVote.getValue().getTerm(), 2);']",86
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",+,ASSERT_EQ,"[u'lastVote.getValue().getCandidateIndex(), 1);']",87
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,+    ASSERT_OK(lastVote.getStatus());,+,ASSERT_OK,[u'lastVote.getStatus());'],92
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getTerm(), 3);",+,ASSERT_EQ,"[u'lastVote.getValue().getTerm(), 3);']",93
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",+,ASSERT_EQ,"[u'lastVote.getValue().getCandidateIndex(), 1);']",94
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,+    ASSERT_OK(lastVote.getStatus());,+,ASSERT_OK,[u'lastVote.getStatus());'],104
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getTerm(), 2);",+,ASSERT_EQ,"[u'lastVote.getValue().getTerm(), 2);']",105
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",+,ASSERT_EQ,"[u'lastVote.getValue().getCandidateIndex(), 1);']",106
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,+    ASSERT_OK(lastVote.getStatus());,+,ASSERT_OK,[u'lastVote.getStatus());'],111
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getTerm(), 2);",+,ASSERT_EQ,"[u'lastVote.getValue().getTerm(), 2);']",112
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",+,ASSERT_EQ,"[u'lastVote.getValue().getCandidateIndex(), 1);']",113
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,+    ASSERT_OK(lastVote.getStatus());,+,ASSERT_OK,[u'lastVote.getStatus());'],123
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getTerm(), 2);",+,ASSERT_EQ,"[u'lastVote.getValue().getTerm(), 2);']",124
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",+,ASSERT_EQ,"[u'lastVote.getValue().getCandidateIndex(), 1);']",125
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,+    ASSERT_OK(lastVote.getStatus());,+,ASSERT_OK,[u'lastVote.getStatus());'],130
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getTerm(), 2);",+,ASSERT_EQ,"[u'lastVote.getValue().getTerm(), 2);']",131
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,f6cb5b11e2122bfe34975c86375b1701617e5033,https://raw.githubusercontent.com/mongodb/mongo/2369c1863931e5c7f671c33421416c9580f80626/src/mongo/dbtests/replica_set_tests.cpp,"+    ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",+,ASSERT_EQ,"[u'lastVote.getValue().getCandidateIndex(), 1);']",132
df60eec6052c7a7bcd71d1af31fc4a6f11c4699f,"Revert ""SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator""

This reverts commit 0eeb9396ff46269c2181e5d4aeab629863d875d4.",src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/df60eec6052c7a7bcd71d1af31fc4a6f11c4699f/src/mongo/db/query/query_request_test.cpp,"-        assertGet(QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));",-,assertGet,"[u'QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));']",1314
df60eec6052c7a7bcd71d1af31fc4a6f11c4699f,"Revert ""SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator""

This reverts commit 0eeb9396ff46269c2181e5d4aeab629863d875d4.",src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/df60eec6052c7a7bcd71d1af31fc4a6f11c4699f/src/mongo/db/query/query_request_test.cpp,"-    ASSERT_EQ(qr->getComment(), ""{ b: 2, c: { d: \""ParseFromLegacyObjMetaOpComment\"" } }"");",-,ASSERT_EQ,"[u'qr->getComment(), ""{ b: 2, c: { d: \\""ParseFromLegacyObjMetaOpComment\\"" } }"");']",1317
df60eec6052c7a7bcd71d1af31fc4a6f11c4699f,"Revert ""SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator""

This reverts commit 0eeb9396ff46269c2181e5d4aeab629863d875d4.",src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/df60eec6052c7a7bcd71d1af31fc4a6f11c4699f/src/mongo/db/query/query_request_test.cpp,"-        assertGet(QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));",-,assertGet,"[u'QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));']",1326
df60eec6052c7a7bcd71d1af31fc4a6f11c4699f,"Revert ""SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator""

This reverts commit 0eeb9396ff46269c2181e5d4aeab629863d875d4.",src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/df60eec6052c7a7bcd71d1af31fc4a6f11c4699f/src/mongo/db/query/query_request_test.cpp,"-    ASSERT_EQ(qr->getComment(), ""ParseFromLegacyStringMetaOpComment"");",-,ASSERT_EQ,"[u'qr->getComment(), ""ParseFromLegacyStringMetaOpComment"");']",1328
3ead1168d2078379da99c0b5266b6239222d0a35,SERVER-26945 ReplSource::resyncDrop should not assume database name obtained from listDatabases result exists locally,src/mongo/db/repl/master_slave.cpp,90b3ce16e3b22a33efdd5971e5d9aea6b925feb3,https://raw.githubusercontent.com/mongodb/mongo/3ead1168d2078379da99c0b5266b6239222d0a35/src/mongo/db/repl/master_slave.cpp,"+        log() << ""resync: dropping database "" << dbName",+,log,"[u') << ""resync: dropping database "" << dbName']",493
0eeb9396ff46269c2181e5d4aeab629863d875d4,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,bd40a94ef3383c2a33c5028c61088a220d5fd1a2,https://raw.githubusercontent.com/mongodb/mongo/0eeb9396ff46269c2181e5d4aeab629863d875d4/src/mongo/db/query/query_request_test.cpp,"+        assertGet(QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));",+,assertGet,"[u'QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));']",1314
0eeb9396ff46269c2181e5d4aeab629863d875d4,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,bd40a94ef3383c2a33c5028c61088a220d5fd1a2,https://raw.githubusercontent.com/mongodb/mongo/0eeb9396ff46269c2181e5d4aeab629863d875d4/src/mongo/db/query/query_request_test.cpp,"+    ASSERT_EQ(qr->getComment(), ""{ b: 2, c: { d: \""ParseFromLegacyObjMetaOpComment\"" } }"");",+,ASSERT_EQ,"[u'qr->getComment(), ""{ b: 2, c: { d: \\""ParseFromLegacyObjMetaOpComment\\"" } }"");']",1317
0eeb9396ff46269c2181e5d4aeab629863d875d4,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,bd40a94ef3383c2a33c5028c61088a220d5fd1a2,https://raw.githubusercontent.com/mongodb/mongo/0eeb9396ff46269c2181e5d4aeab629863d875d4/src/mongo/db/query/query_request_test.cpp,"+        assertGet(QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));",+,assertGet,"[u'QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));']",1326
0eeb9396ff46269c2181e5d4aeab629863d875d4,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,bd40a94ef3383c2a33c5028c61088a220d5fd1a2,https://raw.githubusercontent.com/mongodb/mongo/0eeb9396ff46269c2181e5d4aeab629863d875d4/src/mongo/db/query/query_request_test.cpp,"+    ASSERT_EQ(qr->getComment(), ""ParseFromLegacyStringMetaOpComment"");",+,ASSERT_EQ,"[u'qr->getComment(), ""ParseFromLegacyStringMetaOpComment"");']",1328
adbd05f44bb218f60233493ecbda6f29c60aeeec,SERVER-25337 Remove global lock in configsvr commit{split/merge/migrate} chunk commands,src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,b46a766d9e771c51c6aef7178fa9126265d517f8,https://raw.githubusercontent.com/mongodb/mongo/adbd05f44bb218f60233493ecbda6f29c60aeeec/src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,-    Lock::GlobalWrite firstGlobalWriteLock(txn->lockState());,-,Lock::GlobalWrite firstGlobalWriteLock,[u'txn->lockState());'],1685
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/db/s/migration_source_manager.cpp,22d6d259dab884cc6cf817168f2dd30d1cd0a743,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/db/s/migration_source_manager.cpp,"-    uassert(ErrorCodes::InvalidOptions, ""collection version is missing"", oss.hasShardVersion());",-,uassert,"[u'ErrorCodes::InvalidOptions, ""collection version is missing"", oss.hasShardVersion());']",96
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_TRUE(cmdObj.hasField(""shardVersion""));",+,ASSERT_TRUE,"[u'cmdObj.hasField(""shardVersion""));']",82
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(""TestDB.TestColl"", request.getNss().ns());",-,ASSERT_EQ,"[u'""TestDB.TestColl"", request.getNss().ns());']",86
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(kTestConnectionString.toString(), request.getConfigServerCS().toString());",-,ASSERT_EQ,"[u'kTestConnectionString.toString(), request.getConfigServerCS().toString());']",87
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(ShardId(""shard0001""), request.getFromShardId());",-,ASSERT_EQ,"[u'ShardId(""shard0001""), request.getFromShardId());']",88
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(ShardId(""shard0002""), request.getToShardId());",-,ASSERT_EQ,"[u'ShardId(""shard0002""), request.getToShardId());']",89
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_BSONOBJ_EQ(BSON(""Key"" << -100), request.getMinKey());",-,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << -100), request.getMinKey());']",90
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_BSONOBJ_EQ(BSON(""Key"" << 100), request.getMaxKey());",-,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << 100), request.getMaxKey());']",91
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,-    ASSERT(request.hasChunkVersion());,-,ASSERT,[u'request.hasChunkVersion());'],92
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(chunkVersion, request.getChunkVersion());",-,ASSERT_EQ,"[u'chunkVersion, request.getChunkVersion());']",93
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(1024, request.getMaxChunkSizeBytes());",-,ASSERT_EQ,"[u'1024, request.getMaxChunkSizeBytes());']",94
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kNs, request.getNss().ns());",+,ASSERT_EQ,"[u'kNs, request.getNss().ns());']",95
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kTestConfigServerConnectionString.toString(), request.getConfigServerCS().toString());",+,ASSERT_EQ,"[u'kTestConfigServerConnectionString.toString(), request.getConfigServerCS().toString());']",96
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kFromShard, request.getFromShardId());",+,ASSERT_EQ,"[u'kFromShard, request.getFromShardId());']",97
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kToShard, request.getToShardId());",+,ASSERT_EQ,"[u'kToShard, request.getToShardId());']",98
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(kMin, request.getMinKey());",+,ASSERT_BSONOBJ_EQ,"[u'kMin, request.getMinKey());']",99
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(kMax, request.getMaxKey());",+,ASSERT_BSONOBJ_EQ,"[u'kMax, request.getMaxKey());']",100
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(chunkVersion.epoch(), request.getVersionEpoch());",+,ASSERT_EQ,"[u'chunkVersion.epoch(), request.getVersionEpoch());']",101
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kMaxChunkSizeBytes, request.getMaxChunkSizeBytes());",+,ASSERT_EQ,"[u'kMaxChunkSizeBytes, request.getMaxChunkSizeBytes());']",102
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(true, request.getWaitForDelete());",-,ASSERT_EQ,"[u'true, request.getWaitForDelete());']",105
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""),",-,assertGet,"[u'MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""),']",112
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(""TestDB.TestColl"", request.getNss().ns());",-,ASSERT_EQ,"[u'""TestDB.TestColl"", request.getNss().ns());']",131
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(kTestConnectionString.toString(), request.getConfigServerCS().toString());",-,ASSERT_EQ,"[u'kTestConnectionString.toString(), request.getConfigServerCS().toString());']",132
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(ShardId(""shard0001""), request.getFromShardId());",-,ASSERT_EQ,"[u'ShardId(""shard0001""), request.getFromShardId());']",133
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(ShardId(""shard0002""), request.getToShardId());",-,ASSERT_EQ,"[u'ShardId(""shard0002""), request.getToShardId());']",134
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_BSONOBJ_EQ(BSON(""Key"" << -1), request.getMinKey());",-,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << -1), request.getMinKey());']",135
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_BSONOBJ_EQ(BSON(""Key"" << 1), request.getMaxKey());",-,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << 1), request.getMaxKey());']",136
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,-    ASSERT(!request.hasChunkVersion());,-,ASSERT,[u'!request.hasChunkVersion());'],137
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(MigrationSecondaryThrottleOptions::kDefault,",-,ASSERT_EQ,"[u'MigrationSecondaryThrottleOptions::kDefault,']",138
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(false, request.getWaitForDelete());",-,ASSERT_EQ,"[u'false, request.getWaitForDelete());']",140
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kWaitForDelete, request.getWaitForDelete());",+,ASSERT_EQ,"[u'kWaitForDelete, request.getWaitForDelete());']",141
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",-,assertGet,"[u'ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),']",154
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));",-,assertGet,"[u'MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));']",173
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));",-,assertGet,"[u'MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));']",175
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    auto value1 = assertGet(MoveChunkRequest::createFromCommand(kNs, obj));",+,auto value1 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, obj));']",176
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    auto value2 = assertGet(MoveChunkRequest::createFromCommand(kNs, obj));",+,auto value2 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, obj));']",177
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",-,assertGet,"[u'ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),']",193
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,-    auto value1 = assertGet(,-,auto value1 = assertGet,[u''],209
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    auto value1 = assertGet(MoveChunkRequest::createFromCommand(kNs, builder1.obj()));",+,auto value1 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, builder1.obj()));']",211
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",-,assertGet,"[u'ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),']",218
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,-    auto value2 = assertGet(,-,auto value2 = assertGet,[u''],232
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/fdec6ed545c0045646c7cca33eb4094385bc9429/src/mongo/s/move_chunk_request_test.cpp,"+    auto value2 = assertGet(MoveChunkRequest::createFromCommand(kNs, builder2.obj()));",+,auto value2 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, builder2.obj()));']",235
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/commands/request.cpp,ba90e2650ca84454dd82cb6190422646f77a42d8,https://raw.githubusercontent.com/mongodb/mongo/a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5/src/mongo/s/commands/request.cpp,"-        uassert(ErrorCodes::IllegalOperation,",-,uassert,"[u'ErrorCodes::IllegalOperation,']",57
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/commands/request.cpp,ba90e2650ca84454dd82cb6190422646f77a42d8,https://raw.githubusercontent.com/mongodb/mongo/a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5/src/mongo/s/commands/request.cpp,"-        uassert(ErrorCodes::InvalidNamespace,",-,uassert,"[u'ErrorCodes::InvalidNamespace,']",61
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/commands/request.cpp,ba90e2650ca84454dd82cb6190422646f77a42d8,https://raw.githubusercontent.com/mongodb/mongo/a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5/src/mongo/s/commands/request.cpp,"-    LOG(3) << ""Request::process begin ns: "" << getnsIfPresent() << "" msg id: "" << msgId",-,LOG,"[u'3) << ""Request::process begin ns: "" << getnsIfPresent() << "" msg id: "" << msgId']",77
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/commands/request.cpp,ba90e2650ca84454dd82cb6190422646f77a42d8,https://raw.githubusercontent.com/mongodb/mongo/a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5/src/mongo/s/commands/request.cpp,"-        Strategy::writeOp(txn, op, &_d);",-,Strategy::writeOp,"[u'txn, op, &_d);']",95
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/commands/request.cpp,ba90e2650ca84454dd82cb6190422646f77a42d8,https://raw.githubusercontent.com/mongodb/mongo/a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5/src/mongo/s/commands/request.cpp,"-    LOG(3) << ""Request::process end ns: "" << getnsIfPresent() << "" msg id: "" << msgId",-,LOG,"[u'3) << ""Request::process end ns: "" << getnsIfPresent() << "" msg id: "" << msgId']",98
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/commands/strategy.cpp,9f3ff97ba02bfc3d5f6a0d3bd6eb4e2f20c0455b,https://raw.githubusercontent.com/mongodb/mongo/df3ca24457ea3842ec8524d6b196027dbdbc52f5/src/mongo/s/commands/strategy.cpp,"-void Strategy::writeOp(OperationContext* txn, int op, DbMessage* dbm) {",-,void Strategy::writeOp,"[u'OperationContext* txn, int op, DbMessage* dbm) {']",550
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/commands/strategy.cpp,9f3ff97ba02bfc3d5f6a0d3bd6eb4e2f20c0455b,https://raw.githubusercontent.com/mongodb/mongo/df3ca24457ea3842ec8524d6b196027dbdbc52f5/src/mongo/s/commands/strategy.cpp,"+void Strategy::writeOp(OperationContext* txn, DbMessage* dbm) {",+,void Strategy::writeOp,"[u'OperationContext* txn, DbMessage* dbm) {']",551
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,67ac08e935488b1670d4be5ea97c49c1656a4eb5,https://raw.githubusercontent.com/mongodb/mongo/df3ca24457ea3842ec8524d6b196027dbdbc52f5/src/mongo/s/service_entry_point_mongos.cpp,"+        uassert(ErrorCodes::IllegalOperation,",+,uassert,"[u'ErrorCodes::IllegalOperation,']",137
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,67ac08e935488b1670d4be5ea97c49c1656a4eb5,https://raw.githubusercontent.com/mongodb/mongo/df3ca24457ea3842ec8524d6b196027dbdbc52f5/src/mongo/s/service_entry_point_mongos.cpp,"+                uassert(ErrorCodes::InvalidNamespace,",+,uassert,"[u'ErrorCodes::InvalidNamespace,']",160
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,67ac08e935488b1670d4be5ea97c49c1656a4eb5,https://raw.githubusercontent.com/mongodb/mongo/df3ca24457ea3842ec8524d6b196027dbdbc52f5/src/mongo/s/service_entry_point_mongos.cpp,"+                uassert(ErrorCodes::IllegalOperation,",+,uassert,"[u'ErrorCodes::IllegalOperation,']",164
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,67ac08e935488b1670d4be5ea97c49c1656a4eb5,https://raw.githubusercontent.com/mongodb/mongo/df3ca24457ea3842ec8524d6b196027dbdbc52f5/src/mongo/s/service_entry_point_mongos.cpp,"+            LOG(3) << ""Request::process begin ns: "" << nss << "" msg id: "" << msgId",+,LOG,"[u'3) << ""Request::process begin ns: "" << nss << "" msg id: "" << msgId']",171
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,67ac08e935488b1670d4be5ea97c49c1656a4eb5,https://raw.githubusercontent.com/mongodb/mongo/df3ca24457ea3842ec8524d6b196027dbdbc52f5/src/mongo/s/service_entry_point_mongos.cpp,"+                    Strategy::writeOp(txn.get(), &dbm);",+,Strategy::writeOp,"[u'txn.get(), &dbm);']",189
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,67ac08e935488b1670d4be5ea97c49c1656a4eb5,https://raw.githubusercontent.com/mongodb/mongo/df3ca24457ea3842ec8524d6b196027dbdbc52f5/src/mongo/s/service_entry_point_mongos.cpp,"+            LOG(3) << ""Request::process end ns: "" << nss << "" msg id: "" << msgId",+,LOG,"[u'3) << ""Request::process end ns: "" << nss << "" msg id: "" << msgId']",193
a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5,"SERVER-27603 Rename mongo::inShutdown() to mongo::globalInShutdownDeprecated() for clarity.

Calling this function is deprecated because modules that consult it
cannot engage in an orderly, coordinated shutdown. Instead, such
modules tend to just stop working at some point after
mongo::shutdown() is invoked, without regard to whether modules that
depend on them have already shut down.

As such, for clarity, this patch renames the function from
mongo::inShutdown() to mongo::globalInShutdownDeprecated(). This also
helps disambiguate calls to this function from calls to individual
components' similarly named functions.

Also, remove uncalled mongo::inShutdownStrict().",src/mongo/client/connpool.cpp,5ef2b4e72e016dcacf3175b0b443fd0a61335cc2,https://raw.githubusercontent.com/mongodb/mongo/a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5/src/mongo/client/connpool.cpp,"-    uassert(17382, ""Can't use connection pool during shutdown"", !inShutdown());",-,uassert,"[u'17382, ""Can\'t use connection pool during shutdown"", !inShutdown());']",189
a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5,"SERVER-27603 Rename mongo::inShutdown() to mongo::globalInShutdownDeprecated() for clarity.

Calling this function is deprecated because modules that consult it
cannot engage in an orderly, coordinated shutdown. Instead, such
modules tend to just stop working at some point after
mongo::shutdown() is invoked, without regard to whether modules that
depend on them have already shut down.

As such, for clarity, this patch renames the function from
mongo::inShutdown() to mongo::globalInShutdownDeprecated(). This also
helps disambiguate calls to this function from calls to individual
components' similarly named functions.

Also, remove uncalled mongo::inShutdownStrict().",src/mongo/client/connpool.cpp,5ef2b4e72e016dcacf3175b0b443fd0a61335cc2,https://raw.githubusercontent.com/mongodb/mongo/a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5/src/mongo/client/connpool.cpp,"+    uassert(17382, ""Can't use connection pool during shutdown"", !globalInShutdownDeprecated());",+,uassert,"[u'17382, ""Can\'t use connection pool during shutdown"", !globalInShutdownDeprecated());']",190
a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5,"SERVER-27603 Rename mongo::inShutdown() to mongo::globalInShutdownDeprecated() for clarity.

Calling this function is deprecated because modules that consult it
cannot engage in an orderly, coordinated shutdown. Instead, such
modules tend to just stop working at some point after
mongo::shutdown() is invoked, without regard to whether modules that
depend on them have already shut down.

As such, for clarity, this patch renames the function from
mongo::inShutdown() to mongo::globalInShutdownDeprecated(). This also
helps disambiguate calls to this function from calls to individual
components' similarly named functions.

Also, remove uncalled mongo::inShutdownStrict().",src/mongo/db/storage/mmap_v1/dur_recover.cpp,ec6b945455eeb1e630cb12906fcd67e1adc78c65,https://raw.githubusercontent.com/mongodb/mongo/a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5/src/mongo/db/storage/mmap_v1/dur_recover.cpp,"-            uassert(ErrorCodes::Interrupted, ""interrupted during journal recovery"", !inShutdown());",-,uassert,"[u'ErrorCodes::Interrupted, ""interrupted during journal recovery"", !inShutdown());']",530
a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5,"SERVER-27603 Rename mongo::inShutdown() to mongo::globalInShutdownDeprecated() for clarity.

Calling this function is deprecated because modules that consult it
cannot engage in an orderly, coordinated shutdown. Instead, such
modules tend to just stop working at some point after
mongo::shutdown() is invoked, without regard to whether modules that
depend on them have already shut down.

As such, for clarity, this patch renames the function from
mongo::inShutdown() to mongo::globalInShutdownDeprecated(). This also
helps disambiguate calls to this function from calls to individual
components' similarly named functions.

Also, remove uncalled mongo::inShutdownStrict().",src/mongo/db/storage/mmap_v1/dur_recover.cpp,ec6b945455eeb1e630cb12906fcd67e1adc78c65,https://raw.githubusercontent.com/mongodb/mongo/a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5/src/mongo/db/storage/mmap_v1/dur_recover.cpp,"+            uassert(ErrorCodes::Interrupted,",+,uassert,"[u'ErrorCodes::Interrupted,']",531
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,-    assertNumSolutions(3U);,-,assertNumSolutions,[u'3U);'],1958
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,-    assertSolutionExists(,-,assertSolutionExists,[u''],1959
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,"-    assertSolutionExists(""{fetch: {node: {ixscan: {pattern: {a: 1}}}}}"");",-,assertSolutionExists,"[u'""{fetch: {node: {ixscan: {pattern: {a: 1}}}}}"");']",1962
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,-    assertSolutionExists(,-,assertSolutionExists,[u''],1963
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertNumSolutions(2U);,+,assertNumSolutions,[u'2U);'],2224
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2225
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2228
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertNumSolutions(2U);,+,assertNumSolutions,[u'2U);'],2239
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2240
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2243
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertNumSolutions(5U);,+,assertNumSolutions,[u'5U);'],2255
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2256
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2259
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2262
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2266
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2270
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertNumSolutions(2U);,+,assertNumSolutions,[u'2U);'],2282
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2283
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2286
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertNumSolutions(2U);,+,assertNumSolutions,[u'2U);'],2299
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2300
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2303
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertNumSolutions(2U);,+,assertNumSolutions,[u'2U);'],2315
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2316
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,2241ecb91e620b4f5bd8dc4b3b023a2fee30eb5f,https://raw.githubusercontent.com/mongodb/mongo/be58d599fd9df085c94be3c22051f04aa3df5c13/src/mongo/db/query/query_planner_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],2319
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,-    ASSERT_TRUE(request.isCursorCommand());,-,ASSERT_TRUE,[u'request.isCursorCommand());'],75
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,"-    ASSERT_EQ(request.getBatchSize().get(), 10);",-,ASSERT_EQ,"[u'request.getBatchSize().get(), 10);']",76
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,"+    ASSERT_EQ(request.getBatchSize(), 10);",+,ASSERT_EQ,"[u'request.getBatchSize(), 10);']",77
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,-    ASSERT_OK(request.getStatus());,-,ASSERT_OK,[u'request.getStatus());'],178
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,-    ASSERT_TRUE(request.getValue().isCursorCommand());,-,ASSERT_TRUE,[u'request.getValue().isCursorCommand());'],179
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,-    ASSERT_TRUE(request.getValue().getBatchSize());,-,ASSERT_TRUE,[u'request.getValue().getBatchSize());'],180
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,"-    ASSERT_EQ(request.getValue().getBatchSize().get(), AggregationRequest::kDefaultBatchSize);",-,ASSERT_EQ,"[u'request.getValue().getBatchSize().get(), AggregationRequest::kDefaultBatchSize);']",181
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,"+    ASSERT_DOCUMENT_EQ(request.serializeToCommandObj(), expectedSerialization);",+,ASSERT_DOCUMENT_EQ,"[u'request.serializeToCommandObj(), expectedSerialization);']",190
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,-    ASSERT_FALSE(request.getValue().isCursorCommand());,-,ASSERT_FALSE,[u'request.getValue().isCursorCommand());'],200
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,-    ASSERT_FALSE(request.getValue().getBatchSize());,-,ASSERT_FALSE,[u'request.getValue().getBatchSize());'],201
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,"+    ASSERT_EQ(request.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",+,ASSERT_EQ,"[u'request.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);']",202
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,4d1a5f33fb6566044c2387b708e50383dd341218,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/aggregation_request_test.cpp,"+    ASSERT_NOT_OK(AggregationRequest::parseFromBSON(nss, inputBson).getStatus());",+,ASSERT_NOT_OK,"[u'AggregationRequest::parseFromBSON(nss, inputBson).getStatus());']",283
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/pipeline.cpp,5c13f710b40de1628390459f0c007226fcb35cc8,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/pipeline/pipeline.cpp,"-        uassert(16389,",-,uassert,"[u'16389,']",327
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/count_request_test.cpp,41cff25449f5def7b241b710f6bfbba067e049b1,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/count_request_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],226
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/count_request_test.cpp,41cff25449f5def7b241b710f6bfbba067e049b1,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/count_request_test.cpp,"+    ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",+,ASSERT_EQ,"[u'ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);']",227
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/count_request_test.cpp,41cff25449f5def7b241b710f6bfbba067e049b1,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/count_request_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],256
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/count_request_test.cpp,41cff25449f5def7b241b710f6bfbba067e049b1,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/count_request_test.cpp,"+    ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",+,ASSERT_EQ,"[u'ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);']",257
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/count_request_test.cpp,41cff25449f5def7b241b710f6bfbba067e049b1,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/count_request_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],289
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/parsed_distinct_test.cpp,1a4f07adb88be3b219375fd8617ac7300449c987,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/parsed_distinct_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],65
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/parsed_distinct_test.cpp,1a4f07adb88be3b219375fd8617ac7300449c987,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/parsed_distinct_test.cpp,"+    ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",+,ASSERT_EQ,"[u'ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);']",66
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/parsed_distinct_test.cpp,1a4f07adb88be3b219375fd8617ac7300449c987,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/parsed_distinct_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],105
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/parsed_distinct_test.cpp,1a4f07adb88be3b219375fd8617ac7300449c987,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/parsed_distinct_test.cpp,"+    ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",+,ASSERT_EQ,"[u'ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);']",106
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/parsed_distinct_test.cpp,1a4f07adb88be3b219375fd8617ac7300449c987,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/parsed_distinct_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],146
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/query_request_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],1108
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/query_request_test.cpp,"+    ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",+,ASSERT_EQ,"[u'ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);']",1109
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/query_request_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],1132
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/query_request_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],1262
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/query_request_test.cpp,"+    ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",+,ASSERT_EQ,"[u'ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);']",1263
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/query_request_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],1295
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/query_request_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],1322
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/query_request_test.cpp,"+    ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",+,ASSERT_EQ,"[u'ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);']",1323
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/query_request_test.cpp,-    ASSERT(ar.getValue().isCursorCommand());,-,ASSERT,[u'ar.getValue().isCursorCommand());'],1346
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,b8e45d810e401f5e3e737225b3d0140afe0be891,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/query/query_request_test.cpp,"+    ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",+,ASSERT_EQ,"[u'ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);']",1347
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/views/resolved_view_test.cpp,3f991868ccb3a5928e51d17f90f8c9109a94a98a,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/views/resolved_view_test.cpp,"+    ASSERT_BSONOBJ_EQ(result.getValue(), expected);",+,ASSERT_BSONOBJ_EQ,"[u'result.getValue(), expected);']",194
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/views/resolved_view_test.cpp,3f991868ccb3a5928e51d17f90f8c9109a94a98a,https://raw.githubusercontent.com/mongodb/mongo/92e599237444912607e70a745fe5c0aa00dd4caf/src/mongo/db/views/resolved_view_test.cpp,+    ASSERT_OK(result.getStatus());,+,ASSERT_OK,[u'result.getStatus());'],205
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,0cd00755d5290b77655fe79704a4aa0df2160e5b,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_planner_array_test.cpp,+    assertNumSolutions(2U);,+,assertNumSolutions,[u'2U);'],1423
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,0cd00755d5290b77655fe79704a4aa0df2160e5b,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_planner_array_test.cpp,"+    assertSolutionExists(""{proj: {spec: {_id: 0, a: 1}, node: {cscan: {dir: 1}}}}"");",+,assertSolutionExists,"[u'""{proj: {spec: {_id: 0, a: 1}, node: {cscan: {dir: 1}}}}"");']",1424
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,0cd00755d5290b77655fe79704a4aa0df2160e5b,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_planner_array_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],1425
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,0cd00755d5290b77655fe79704a4aa0df2160e5b,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_planner_array_test.cpp,+    assertNumSolutions(2U);,+,assertNumSolutions,[u'2U);'],1436
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,0cd00755d5290b77655fe79704a4aa0df2160e5b,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_planner_array_test.cpp,"+    assertSolutionExists(""{proj: {spec: {_id: 0, b: 1}, node: {cscan: {dir: 1}}}}"");",+,assertSolutionExists,"[u'""{proj: {spec: {_id: 0, b: 1}, node: {cscan: {dir: 1}}}}"");']",1437
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,0cd00755d5290b77655fe79704a4aa0df2160e5b,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_planner_array_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],1438
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,0cd00755d5290b77655fe79704a4aa0df2160e5b,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_planner_array_test.cpp,+    assertNumSolutions(2U);,+,assertNumSolutions,[u'2U);'],1449
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,0cd00755d5290b77655fe79704a4aa0df2160e5b,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_planner_array_test.cpp,"+    assertSolutionExists(""{proj: {spec: {_id:0,'a.y':1}, node: {cscan: {dir: 1}}}}"");",+,assertSolutionExists,"[u'""{proj: {spec: {_id:0,\'a.y\':1}, node: {cscan: {dir: 1}}}}"");']",1450
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,0cd00755d5290b77655fe79704a4aa0df2160e5b,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_planner_array_test.cpp,+    assertSolutionExists(,+,assertSolutionExists,[u''],1451
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_TRUE(node->hasField(""a""));",+,ASSERT_TRUE,"[u'node->hasField(""a""));']",776
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_TRUE(node->hasField(""b.c.d""));",+,ASSERT_TRUE,"[u'node->hasField(""b.c.d""));']",777
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b.c""));",+,ASSERT_FALSE,"[u'node->hasField(""b.c""));']",778
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b""));",+,ASSERT_FALSE,"[u'node->hasField(""b""));']",779
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""e""));",+,ASSERT_FALSE,"[u'node->hasField(""e""));']",780
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_TRUE(node->hasField(""a""));",+,ASSERT_TRUE,"[u'node->hasField(""a""));']",787
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_TRUE(node->hasField(""b.c.d""));",+,ASSERT_TRUE,"[u'node->hasField(""b.c.d""));']",788
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b.c""));",+,ASSERT_FALSE,"[u'node->hasField(""b.c""));']",789
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b""));",+,ASSERT_FALSE,"[u'node->hasField(""b""));']",790
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""e""));",+,ASSERT_FALSE,"[u'node->hasField(""e""));']",791
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""a""));",+,ASSERT_FALSE,"[u'node->hasField(""a""));']",798
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b.c.d""));",+,ASSERT_FALSE,"[u'node->hasField(""b.c.d""));']",799
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b.c""));",+,ASSERT_FALSE,"[u'node->hasField(""b.c""));']",800
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b""));",+,ASSERT_FALSE,"[u'node->hasField(""b""));']",801
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""e""));",+,ASSERT_FALSE,"[u'node->hasField(""e""));']",802
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_TRUE(node->hasField(""a""));",+,ASSERT_TRUE,"[u'node->hasField(""a""));']",813
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b""));",+,ASSERT_FALSE,"[u'node->hasField(""b""));']",814
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b.c""));",+,ASSERT_FALSE,"[u'node->hasField(""b.c""));']",815
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_TRUE(node->hasField(""c""));",+,ASSERT_TRUE,"[u'node->hasField(""c""));']",816
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_TRUE(node->hasField(""a""));",+,ASSERT_TRUE,"[u'node->hasField(""a""));']",827
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b""));",+,ASSERT_FALSE,"[u'node->hasField(""b""));']",828
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b.c""));",+,ASSERT_FALSE,"[u'node->hasField(""b.c""));']",829
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_FALSE(node->hasField(""b.c.d""));",+,ASSERT_FALSE,"[u'node->hasField(""b.c.d""));']",830
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,fe9749d49c31136cbbca7ab67c3519b8b0eb2b97,https://raw.githubusercontent.com/mongodb/mongo/8953400c0f999bcb9da067edfb7978130516ac04/src/mongo/db/query/query_solution_test.cpp,"+    ASSERT_TRUE(node->hasField(""e""));",+,ASSERT_TRUE,"[u'node->hasField(""e""));']",831
c2337e67557991922721de3cda1f22287f44da88,"Revert ""SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner""

This reverts commit e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f.",src/mongo/db/repl/database_cloner_test.cpp,c2e13b2e8a9727fb4696e78e14a27e146a4e730e,https://raw.githubusercontent.com/mongodb/mongo/c2337e67557991922721de3cda1f22287f44da88/src/mongo/db/repl/database_cloner_test.cpp,-    ASSERT_OK(_databaseCloner->startup());,-,ASSERT_OK,[u'_databaseCloner->startup());'],573
c2337e67557991922721de3cda1f22287f44da88,"Revert ""SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner""

This reverts commit e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f.",src/mongo/db/repl/database_cloner_test.cpp,c2e13b2e8a9727fb4696e78e14a27e146a4e730e,https://raw.githubusercontent.com/mongodb/mongo/c2337e67557991922721de3cda1f22287f44da88/src/mongo/db/repl/database_cloner_test.cpp,"-        assertRemoteCommandNameEquals(""listCollections"",",-,assertRemoteCommandNameEquals,"[u'""listCollections"",']",578
c2337e67557991922721de3cda1f22287f44da88,"Revert ""SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner""

This reverts commit e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f.",src/mongo/db/repl/database_cloner_test.cpp,c2e13b2e8a9727fb4696e78e14a27e146a4e730e,https://raw.githubusercontent.com/mongodb/mongo/c2337e67557991922721de3cda1f22287f44da88/src/mongo/db/repl/database_cloner_test.cpp,"-        assertRemoteCommandNameEquals(""count"", noi->getRequest());",-,assertRemoteCommandNameEquals,"[u'""count"", noi->getRequest());']",594
c2337e67557991922721de3cda1f22287f44da88,"Revert ""SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner""

This reverts commit e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f.",src/mongo/db/repl/database_cloner_test.cpp,c2e13b2e8a9727fb4696e78e14a27e146a4e730e,https://raw.githubusercontent.com/mongodb/mongo/c2337e67557991922721de3cda1f22287f44da88/src/mongo/db/repl/database_cloner_test.cpp,"-        ASSERT_EQUALS(""a"", noi->getRequest().cmdObj.firstElement().String());",-,ASSERT_EQUALS,"[u'""a"", noi->getRequest().cmdObj.firstElement().String());']",595
c2337e67557991922721de3cda1f22287f44da88,"Revert ""SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner""

This reverts commit e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f.",src/mongo/db/repl/database_cloner_test.cpp,c2e13b2e8a9727fb4696e78e14a27e146a4e730e,https://raw.githubusercontent.com/mongodb/mongo/c2337e67557991922721de3cda1f22287f44da88/src/mongo/db/repl/database_cloner_test.cpp,-    ASSERT_FALSE(_databaseCloner->isActive());,-,ASSERT_FALSE,[u'_databaseCloner->isActive());'],605
c2337e67557991922721de3cda1f22287f44da88,"Revert ""SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner""

This reverts commit e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f.",src/mongo/db/repl/database_cloner_test.cpp,c2e13b2e8a9727fb4696e78e14a27e146a4e730e,https://raw.githubusercontent.com/mongodb/mongo/c2337e67557991922721de3cda1f22287f44da88/src/mongo/db/repl/database_cloner_test.cpp,"-    ASSERT_EQUALS(ErrorCodes::ShutdownInProgress, getStatus());",-,ASSERT_EQUALS,"[u'ErrorCodes::ShutdownInProgress, getStatus());']",609
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata.cpp,6ac3f91ea0057274ac284290c81a7bcc675a81df,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata.cpp,"+OplogQueryMetadata::OplogQueryMetadata(OpTime lastOpCommitted,",+,OplogQueryMetadata::OplogQueryMetadata,"[u'OpTime lastOpCommitted,']",57
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata.cpp,6ac3f91ea0057274ac284290c81a7bcc675a81df,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata.cpp,"+    return OplogQueryMetadata(lastOpCommitted, lastOpApplied, rbid, primaryIndex, syncSourceIndex);",+,return OplogQueryMetadata,"[u'lastOpCommitted, lastOpApplied, rbid, primaryIndex, syncSourceIndex);']",102
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata.cpp,6ac3f91ea0057274ac284290c81a7bcc675a81df,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata.cpp,+Status OplogQueryMetadata::writeToMetadata(BSONObjBuilder* builder) const {,+,Status OplogQueryMetadata::writeToMetadata,[u'BSONObjBuilder* builder) const {'],105
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,"+    ASSERT_EQ(opTime1, metadata.getLastOpCommitted());",+,ASSERT_EQ,"[u'opTime1, metadata.getLastOpCommitted());']",47
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,"+    ASSERT_EQ(opTime2, metadata.getLastOpApplied());",+,ASSERT_EQ,"[u'opTime2, metadata.getLastOpApplied());']",48
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+    metadata.writeToMetadata(&builder);,+,metadata.writeToMetadata,[u'&builder);'],51
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,"+    ASSERT_BSONOBJ_EQ(expectedObj, serializedObj);",+,ASSERT_BSONOBJ_EQ,"[u'expectedObj, serializedObj);']",66
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+    ASSERT_OK(cloneStatus.getStatus());,+,ASSERT_OK,[u'cloneStatus.getStatus());'],69
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,"+    ASSERT_EQ(opTime1, clonedMetadata.getLastOpCommitted());",+,ASSERT_EQ,"[u'opTime1, clonedMetadata.getLastOpCommitted());']",72
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,"+    ASSERT_EQ(opTime2, clonedMetadata.getLastOpApplied());",+,ASSERT_EQ,"[u'opTime2, clonedMetadata.getLastOpApplied());']",73
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,"+    ASSERT_EQ(metadata.getRBID(), clonedMetadata.getRBID());",+,ASSERT_EQ,"[u'metadata.getRBID(), clonedMetadata.getRBID());']",74
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,"+    ASSERT_EQ(metadata.getPrimaryIndex(), clonedMetadata.getPrimaryIndex());",+,ASSERT_EQ,"[u'metadata.getPrimaryIndex(), clonedMetadata.getPrimaryIndex());']",75
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,"+    ASSERT_EQ(metadata.getSyncSourceIndex(), clonedMetadata.getSyncSourceIndex());",+,ASSERT_EQ,"[u'metadata.getSyncSourceIndex(), clonedMetadata.getSyncSourceIndex());']",76
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+    clonedMetadata.writeToMetadata(&clonedBuilder);,+,clonedMetadata.writeToMetadata,[u'&clonedBuilder);'],79
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,cc08bf832fb72a1c5db4dc5d0e537bb7bb788240,https://raw.githubusercontent.com/mongodb/mongo/8daf13374403272ace73340f25fce573fa36a55b/src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,"+    ASSERT_BSONOBJ_EQ(expectedObj, clonedSerializedObj);",+,ASSERT_BSONOBJ_EQ,"[u'expectedObj, clonedSerializedObj);']",82
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f/src/mongo/db/repl/database_cloner_test.cpp,+    ASSERT_OK(_databaseCloner->startup());,+,ASSERT_OK,[u'_databaseCloner->startup());'],573
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f/src/mongo/db/repl/database_cloner_test.cpp,"+        assertRemoteCommandNameEquals(""listCollections"",",+,assertRemoteCommandNameEquals,"[u'""listCollections"",']",578
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f/src/mongo/db/repl/database_cloner_test.cpp,"+        assertRemoteCommandNameEquals(""count"", noi->getRequest());",+,assertRemoteCommandNameEquals,"[u'""count"", noi->getRequest());']",594
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f/src/mongo/db/repl/database_cloner_test.cpp,"+        ASSERT_EQUALS(""a"", noi->getRequest().cmdObj.firstElement().String());",+,ASSERT_EQUALS,"[u'""a"", noi->getRequest().cmdObj.firstElement().String());']",595
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f/src/mongo/db/repl/database_cloner_test.cpp,+    ASSERT_FALSE(_databaseCloner->isActive());,+,ASSERT_FALSE,[u'_databaseCloner->isActive());'],605
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,5eeca00cfcdb968e393415631be009ca0076fd4b,https://raw.githubusercontent.com/mongodb/mongo/e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f/src/mongo/db/repl/database_cloner_test.cpp,"+    ASSERT_EQUALS(ErrorCodes::ShutdownInProgress, getStatus());",+,ASSERT_EQUALS,"[u'ErrorCodes::ShutdownInProgress, getStatus());']",609
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/db/s/migration_source_manager.cpp,3cca0606180043630f33f0803b40cacc2c87806e,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/db/s/migration_source_manager.cpp,"+    uassert(ErrorCodes::InvalidOptions, ""collection version is missing"", oss.hasShardVersion());",+,uassert,"[u'ErrorCodes::InvalidOptions, ""collection version is missing"", oss.hasShardVersion());']",96
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_TRUE(cmdObj.hasField(""shardVersion""));",-,ASSERT_TRUE,"[u'cmdObj.hasField(""shardVersion""));']",82
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(kNs, request.getNss().ns());",-,ASSERT_EQ,"[u'kNs, request.getNss().ns());']",86
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(kTestConfigServerConnectionString.toString(), request.getConfigServerCS().toString());",-,ASSERT_EQ,"[u'kTestConfigServerConnectionString.toString(), request.getConfigServerCS().toString());']",87
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(kFromShard, request.getFromShardId());",-,ASSERT_EQ,"[u'kFromShard, request.getFromShardId());']",88
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(kToShard, request.getToShardId());",-,ASSERT_EQ,"[u'kToShard, request.getToShardId());']",89
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_BSONOBJ_EQ(kMin, request.getMinKey());",-,ASSERT_BSONOBJ_EQ,"[u'kMin, request.getMinKey());']",90
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_BSONOBJ_EQ(kMax, request.getMaxKey());",-,ASSERT_BSONOBJ_EQ,"[u'kMax, request.getMaxKey());']",91
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(chunkVersion.epoch(), request.getVersionEpoch());",-,ASSERT_EQ,"[u'chunkVersion.epoch(), request.getVersionEpoch());']",92
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(kMaxChunkSizeBytes, request.getMaxChunkSizeBytes());",-,ASSERT_EQ,"[u'kMaxChunkSizeBytes, request.getMaxChunkSizeBytes());']",93
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(""TestDB.TestColl"", request.getNss().ns());",+,ASSERT_EQ,"[u'""TestDB.TestColl"", request.getNss().ns());']",94
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kTestConnectionString.toString(), request.getConfigServerCS().toString());",+,ASSERT_EQ,"[u'kTestConnectionString.toString(), request.getConfigServerCS().toString());']",95
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(ShardId(""shard0001""), request.getFromShardId());",+,ASSERT_EQ,"[u'ShardId(""shard0001""), request.getFromShardId());']",96
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(ShardId(""shard0002""), request.getToShardId());",+,ASSERT_EQ,"[u'ShardId(""shard0002""), request.getToShardId());']",97
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(BSON(""Key"" << -100), request.getMinKey());",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << -100), request.getMinKey());']",98
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(BSON(""Key"" << 100), request.getMaxKey());",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << 100), request.getMaxKey());']",99
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,+    ASSERT(request.hasChunkVersion());,+,ASSERT,[u'request.hasChunkVersion());'],100
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(chunkVersion, request.getChunkVersion());",+,ASSERT_EQ,"[u'chunkVersion, request.getChunkVersion());']",101
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(1024, request.getMaxChunkSizeBytes());",+,ASSERT_EQ,"[u'1024, request.getMaxChunkSizeBytes());']",102
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(kWaitForDelete, request.getWaitForDelete());",-,ASSERT_EQ,"[u'kWaitForDelete, request.getWaitForDelete());']",105
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(true, request.getWaitForDelete());",+,ASSERT_EQ,"[u'true, request.getWaitForDelete());']",106
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+        assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""),",+,assertGet,"[u'MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""),']",113
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(""TestDB.TestColl"", request.getNss().ns());",+,ASSERT_EQ,"[u'""TestDB.TestColl"", request.getNss().ns());']",132
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kTestConnectionString.toString(), request.getConfigServerCS().toString());",+,ASSERT_EQ,"[u'kTestConnectionString.toString(), request.getConfigServerCS().toString());']",133
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(ShardId(""shard0001""), request.getFromShardId());",+,ASSERT_EQ,"[u'ShardId(""shard0001""), request.getFromShardId());']",134
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(ShardId(""shard0002""), request.getToShardId());",+,ASSERT_EQ,"[u'ShardId(""shard0002""), request.getToShardId());']",135
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(BSON(""Key"" << -1), request.getMinKey());",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << -1), request.getMinKey());']",136
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(BSON(""Key"" << 1), request.getMaxKey());",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << 1), request.getMaxKey());']",137
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,+    ASSERT(!request.hasChunkVersion());,+,ASSERT,[u'!request.hasChunkVersion());'],138
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(MigrationSecondaryThrottleOptions::kDefault,",+,ASSERT_EQ,"[u'MigrationSecondaryThrottleOptions::kDefault,']",139
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(false, request.getWaitForDelete());",+,ASSERT_EQ,"[u'false, request.getWaitForDelete());']",141
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+        assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",+,assertGet,"[u'ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),']",155
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    auto value1 = assertGet(MoveChunkRequest::createFromCommand(kNs, obj));",-,auto value1 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, obj));']",172
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    auto value2 = assertGet(MoveChunkRequest::createFromCommand(kNs, obj));",-,auto value2 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, obj));']",173
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+        assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));",+,assertGet,"[u'MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));']",175
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+        assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));",+,assertGet,"[u'MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));']",177
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+        assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",+,assertGet,"[u'ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),']",194
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    auto value1 = assertGet(MoveChunkRequest::createFromCommand(kNs, builder1.obj()));",-,auto value1 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, builder1.obj()));']",209
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,+    auto value1 = assertGet(,+,auto value1 = assertGet,[u''],210
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"+        assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",+,assertGet,"[u'ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),']",223
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,"-    auto value2 = assertGet(MoveChunkRequest::createFromCommand(kNs, builder2.obj()));",-,auto value2 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, builder2.obj()));']",232
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/c920eb38186c6122fed326ba341e05d7e02ffe37/src/mongo/s/move_chunk_request_test.cpp,+    auto value2 = assertGet(,+,auto value2 = assertGet,[u''],234
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/db/s/migration_source_manager.cpp,d9cc1c3626368855223de4f640d7dcf1cd4afc88,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/db/s/migration_source_manager.cpp,"-    uassert(ErrorCodes::InvalidOptions, ""collection version is missing"", oss.hasShardVersion());",-,uassert,"[u'ErrorCodes::InvalidOptions, ""collection version is missing"", oss.hasShardVersion());']",96
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_TRUE(cmdObj.hasField(""shardVersion""));",+,ASSERT_TRUE,"[u'cmdObj.hasField(""shardVersion""));']",82
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(""TestDB.TestColl"", request.getNss().ns());",-,ASSERT_EQ,"[u'""TestDB.TestColl"", request.getNss().ns());']",86
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(kTestConnectionString.toString(), request.getConfigServerCS().toString());",-,ASSERT_EQ,"[u'kTestConnectionString.toString(), request.getConfigServerCS().toString());']",87
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(ShardId(""shard0001""), request.getFromShardId());",-,ASSERT_EQ,"[u'ShardId(""shard0001""), request.getFromShardId());']",88
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(ShardId(""shard0002""), request.getToShardId());",-,ASSERT_EQ,"[u'ShardId(""shard0002""), request.getToShardId());']",89
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_BSONOBJ_EQ(BSON(""Key"" << -100), request.getMinKey());",-,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << -100), request.getMinKey());']",90
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_BSONOBJ_EQ(BSON(""Key"" << 100), request.getMaxKey());",-,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << 100), request.getMaxKey());']",91
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,-    ASSERT(request.hasChunkVersion());,-,ASSERT,[u'request.hasChunkVersion());'],92
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(chunkVersion, request.getChunkVersion());",-,ASSERT_EQ,"[u'chunkVersion, request.getChunkVersion());']",93
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(1024, request.getMaxChunkSizeBytes());",-,ASSERT_EQ,"[u'1024, request.getMaxChunkSizeBytes());']",94
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kNs, request.getNss().ns());",+,ASSERT_EQ,"[u'kNs, request.getNss().ns());']",95
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kTestConfigServerConnectionString.toString(), request.getConfigServerCS().toString());",+,ASSERT_EQ,"[u'kTestConfigServerConnectionString.toString(), request.getConfigServerCS().toString());']",96
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kFromShard, request.getFromShardId());",+,ASSERT_EQ,"[u'kFromShard, request.getFromShardId());']",97
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kToShard, request.getToShardId());",+,ASSERT_EQ,"[u'kToShard, request.getToShardId());']",98
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(kMin, request.getMinKey());",+,ASSERT_BSONOBJ_EQ,"[u'kMin, request.getMinKey());']",99
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_BSONOBJ_EQ(kMax, request.getMaxKey());",+,ASSERT_BSONOBJ_EQ,"[u'kMax, request.getMaxKey());']",100
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(chunkVersion.epoch(), request.getVersionEpoch());",+,ASSERT_EQ,"[u'chunkVersion.epoch(), request.getVersionEpoch());']",101
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kMaxChunkSizeBytes, request.getMaxChunkSizeBytes());",+,ASSERT_EQ,"[u'kMaxChunkSizeBytes, request.getMaxChunkSizeBytes());']",102
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(true, request.getWaitForDelete());",-,ASSERT_EQ,"[u'true, request.getWaitForDelete());']",105
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""),",-,assertGet,"[u'MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""),']",112
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(""TestDB.TestColl"", request.getNss().ns());",-,ASSERT_EQ,"[u'""TestDB.TestColl"", request.getNss().ns());']",131
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(kTestConnectionString.toString(), request.getConfigServerCS().toString());",-,ASSERT_EQ,"[u'kTestConnectionString.toString(), request.getConfigServerCS().toString());']",132
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(ShardId(""shard0001""), request.getFromShardId());",-,ASSERT_EQ,"[u'ShardId(""shard0001""), request.getFromShardId());']",133
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(ShardId(""shard0002""), request.getToShardId());",-,ASSERT_EQ,"[u'ShardId(""shard0002""), request.getToShardId());']",134
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_BSONOBJ_EQ(BSON(""Key"" << -1), request.getMinKey());",-,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << -1), request.getMinKey());']",135
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_BSONOBJ_EQ(BSON(""Key"" << 1), request.getMaxKey());",-,ASSERT_BSONOBJ_EQ,"[u'BSON(""Key"" << 1), request.getMaxKey());']",136
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,-    ASSERT(!request.hasChunkVersion());,-,ASSERT,[u'!request.hasChunkVersion());'],137
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(MigrationSecondaryThrottleOptions::kDefault,",-,ASSERT_EQ,"[u'MigrationSecondaryThrottleOptions::kDefault,']",138
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(false, request.getWaitForDelete());",-,ASSERT_EQ,"[u'false, request.getWaitForDelete());']",140
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    ASSERT_EQ(kWaitForDelete, request.getWaitForDelete());",+,ASSERT_EQ,"[u'kWaitForDelete, request.getWaitForDelete());']",141
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",-,assertGet,"[u'ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),']",154
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));",-,assertGet,"[u'MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));']",173
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));",-,assertGet,"[u'MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));']",175
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    auto value1 = assertGet(MoveChunkRequest::createFromCommand(kNs, obj));",+,auto value1 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, obj));']",176
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    auto value2 = assertGet(MoveChunkRequest::createFromCommand(kNs, obj));",+,auto value2 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, obj));']",177
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",-,assertGet,"[u'ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),']",193
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,-    auto value1 = assertGet(,-,auto value1 = assertGet,[u''],209
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    auto value1 = assertGet(MoveChunkRequest::createFromCommand(kNs, builder1.obj()));",+,auto value1 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, builder1.obj()));']",211
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"-        assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",-,assertGet,"[u'ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),']",218
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,-    auto value2 = assertGet(,-,auto value2 = assertGet,[u''],232
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,8385cd93ac60af289658880b1ec4e3a7fbac771d,https://raw.githubusercontent.com/mongodb/mongo/d779870e5d4744cbcc402cba2a77f8d892bed0ef/src/mongo/s/move_chunk_request_test.cpp,"+    auto value2 = assertGet(MoveChunkRequest::createFromCommand(kNs, builder2.obj()));",+,auto value2 = assertGet,"[u'MoveChunkRequest::createFromCommand(kNs, builder2.obj()));']",235
3f51a51845e2c8c5b748905b7f8f472cb379f6e8,SERVER-27556/SERVER-27608 Fix a Coverity unchecked return value warning,src/mongo/s/commands/strategy.cpp,b782cbbbb4bd496906eddb03bff905acfa3e2772,https://raw.githubusercontent.com/mongodb/mongo/3f51a51845e2c8c5b748905b7f8f472cb379f6e8/src/mongo/s/commands/strategy.cpp,"+                    LOG(1) << ""Database does not exist or collection no longer sharded after a """,+,LOG,"[u'1) << ""Database does not exist or collection no longer sharded after a ""']",343
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager.cpp,6bccabf73262f02b5a810a951c6cc5a200ae3727,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager.cpp,"-            ScopedMigrationRequest::writeMigration(txn, migrateInfo, waitForDelete);",-,ScopedMigrationRequest::writeMigration,"[u'txn, migrateInfo, waitForDelete);']",275
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,"-        ASSERT_EQ(takeDistLock, moveChunkRequestWithStatus.getValue().getTakeDistLock());",-,ASSERT_EQ,"[u'takeDistLock, moveChunkRequestWithStatus.getValue().getTakeDistLock());']",300
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,-    ASSERT_OK(catalogClient()->insertConfigDocument(,-,ASSERT_OK(catalogClient,[u')->insertConfigDocument('],468
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,-    ASSERT_OK(catalogClient()->insertConfigDocument(,-,ASSERT_OK(catalogClient,[u')->insertConfigDocument('],470
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,-            ASSERT_OK(migrationStatuses.at(migrateInfo.getName()));,-,ASSERT_OK,[u'migrationStatuses.at(migrateInfo.getName()));'],504
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,-    ASSERT_OK(catalogClient()->insertConfigDocument(,-,ASSERT_OK(catalogClient,[u')->insertConfigDocument('],526
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,"-            ASSERT_EQ(ErrorCodes::LockBusy, migrationStatuses.at(migrateInfo.getName()));",-,ASSERT_EQ,"[u'ErrorCodes::LockBusy, migrationStatuses.at(migrateInfo.getName()));']",556
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,-    ASSERT_OK(catalogClient()->insertConfigDocument(,-,ASSERT_OK(catalogClient,[u')->insertConfigDocument('],580
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,-    ASSERT_OK(catalogClient()->insertConfigDocument(,-,ASSERT_OK(catalogClient,[u')->insertConfigDocument('],582
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,-            ASSERT_OK(migrationStatuses.at(migrateInfo.getName()));,-,ASSERT_OK,[u'migrationStatuses.at(migrateInfo.getName()));'],616
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,-    ASSERT_OK(catalogClient()->insertConfigDocument(,-,ASSERT_OK(catalogClient,[u')->insertConfigDocument('],643
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,-    ASSERT_OK(catalogClient()->insertConfigDocument(,-,ASSERT_OK(catalogClient,[u')->insertConfigDocument('],645
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,-    DistLockManager::ScopedDistLock distLockStatus = assertGet(,-,DistLockManager::ScopedDistLock distLockStatus = assertGet,[u''],671
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,"-        catalogClient()->getDistLockManager()->lock(operationContext(),",-,catalogClient,"[u')->getDistLockManager()->lock(operationContext(),']",672
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/balancer/migration_manager_test.cpp,bcca90e4e25ca1371c27891b0415d85bec706171,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/balancer/migration_manager_test.cpp,"-        ASSERT_EQ(ErrorCodes::ConflictingOperationInProgress,",-,ASSERT_EQ,"[u'ErrorCodes::ConflictingOperationInProgress,']",681
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,6e0f96328ee97aef09ee34e497592eafbbcf6384,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,-            Grid::get(txn)->catalogClient(txn)->getDistLockManager()->getProcessID();,-,Grid::get(txn)->catalogClient,[u'txn)->getDistLockManager()->getProcessID();'],154
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/move_chunk_command.cpp,d00b54b80c4b4a5d060efbbff03a87e3e691acfa,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/move_chunk_command.cpp,-    auto distLockStatus = Grid::get(txn)->catalogClient(txn)->getDistLockManager()->lock(,-,auto distLockStatus = Grid::get(txn)->catalogClient,[u'txn)->getDistLockManager()->lock('],78
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/move_chunk_command.cpp,d00b54b80c4b4a5d060efbbff03a87e3e691acfa,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/move_chunk_command.cpp,"-        uasserted(distLockStatus.getStatus().code(), msg);",-,uasserted,"[u'distLockStatus.getStatus().code(), msg);']",86
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/move_chunk_command.cpp,d00b54b80c4b4a5d060efbbff03a87e3e691acfa,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/move_chunk_command.cpp,-                    migrationSourceManager.cleanupOnError(txn);,-,migrationSourceManager.cleanupOnError,[u'txn);'],299
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/db/s/move_chunk_command.cpp,d00b54b80c4b4a5d060efbbff03a87e3e691acfa,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/db/s/move_chunk_command.cpp,-                    uassertStatusOKWithWarning(,-,uassertStatusOKWithWarning,[u''],301
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(true, request.getTakeDistLock());",-,ASSERT_EQ,"[u'true, request.getTakeDistLock());']",88
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/s/move_chunk_request_test.cpp,96053082832c53205940163a47932bf3dfefbf94,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/s/move_chunk_request_test.cpp,"-    ASSERT_EQ(true, request.getTakeDistLock());",-,ASSERT_EQ,"[u'true, request.getTakeDistLock());']",131
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/s/request_types/commit_chunk_migration_request_test.cpp,9c5f513ac60240889c193731c3f5ef6486fa96fe,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/s/request_types/commit_chunk_migration_request_test.cpp,"-    ASSERT_EQ(kShardHasDistributedLock, request.shardHasDistributedLock());",-,ASSERT_EQ,"[u'kShardHasDistributedLock, request.shardHasDistributedLock());']",109
da79c6596c6a6e6d818e39b2782968d27cf42be2,SERVER-27390 Delete dead code in commitChunkMigration,src/mongo/s/request_types/commit_chunk_migration_request_test.cpp,9c5f513ac60240889c193731c3f5ef6486fa96fe,https://raw.githubusercontent.com/mongodb/mongo/da79c6596c6a6e6d818e39b2782968d27cf42be2/src/mongo/s/request_types/commit_chunk_migration_request_test.cpp,"-    ASSERT_EQ(kShardHasDistributedLock, request.shardHasDistributedLock());",-,ASSERT_EQ,"[u'kShardHasDistributedLock, request.shardHasDistributedLock());']",158
8478c3b4f7c2e2e8804ca4f5a3847b07a71fd9b3,SERVER-22348 propagate binary paths from resmoke to MongoRunner,src/mongo/shell/shell_utils_launcher.cpp,8c1efb65a2d5a2fc264cbe5d7f38db13ebdefa5d,https://raw.githubusercontent.com/mongodb/mongo/8478c3b4f7c2e2e8804ca4f5a3847b07a71fd9b3/src/mongo/shell/shell_utils_launcher.cpp,"+    uassert(ErrorCodes::FailedToParse,",+,uassert,"[u'ErrorCodes::FailedToParse,']",265
8478c3b4f7c2e2e8804ca4f5a3847b07a71fd9b3,SERVER-22348 propagate binary paths from resmoke to MongoRunner,src/mongo/shell/shell_utils_launcher.cpp,8c1efb65a2d5a2fc264cbe5d7f38db13ebdefa5d,https://raw.githubusercontent.com/mongodb/mongo/8478c3b4f7c2e2e8804ca4f5a3847b07a71fd9b3/src/mongo/shell/shell_utils_launcher.cpp,"+    uassert(ErrorCodes::FailedToParse,",+,uassert,"[u'ErrorCodes::FailedToParse,']",271
e5b42cc86c8b97c84c6bec4e9e41ea5f3064e2b4,SERVER-27582 initialize lastVote properly,src/mongo/db/repl/replication_coordinator_impl.cpp,7f657046601bafbe0bd26622afbfc53349029efe,https://raw.githubusercontent.com/mongodb/mongo/e5b42cc86c8b97c84c6bec4e9e41ea5f3064e2b4/src/mongo/db/repl/replication_coordinator_impl.cpp,"-        log() << ""Did not find local voted for document at startup;  "" << lastVote.getStatus();",-,log,"[u') << ""Did not find local voted for document at startup;  "" << lastVote.getStatus();']",402
e5b42cc86c8b97c84c6bec4e9e41ea5f3064e2b4,SERVER-27582 initialize lastVote properly,src/mongo/db/repl/replication_coordinator_impl.cpp,7f657046601bafbe0bd26622afbfc53349029efe,https://raw.githubusercontent.com/mongodb/mongo/e5b42cc86c8b97c84c6bec4e9e41ea5f3064e2b4/src/mongo/db/repl/replication_coordinator_impl.cpp,"+            log() << ""Did not find local voted for document at startup."";",+,log,"[u') << ""Did not find local voted for document at startup."";']",404
e5b42cc86c8b97c84c6bec4e9e41ea5f3064e2b4,SERVER-27582 initialize lastVote properly,src/mongo/db/repl/replication_coordinator_impl.cpp,7f657046601bafbe0bd26622afbfc53349029efe,https://raw.githubusercontent.com/mongodb/mongo/e5b42cc86c8b97c84c6bec4e9e41ea5f3064e2b4/src/mongo/db/repl/replication_coordinator_impl.cpp,+            fassertFailedNoTrace(40367);,+,fassertFailedNoTrace,[u'40367);'],408
b9ecd13e8bee07dea88e908d8e8d2f12239f1879,SERVER-27510 remove chunk version check in moveChunk and splitChunk,src/mongo/db/s/split_chunk_command.cpp,756550572a47478aad5bfb05f84dabceeff2d608,https://raw.githubusercontent.com/mongodb/mongo/b9ecd13e8bee07dea88e908d8e8d2f12239f1879/src/mongo/db/s/split_chunk_command.cpp,-            uassertStatusOK(statusWithChunkVersion);,-,uassertStatusOK,[u'statusWithChunkVersion);'],212
166a9663a3cb627f36873ffa104a60c0c935393c,SERVER-27308 Reduce cost of sharding check in DocumentSourceLookup,src/mongo/db/pipeline/document_source_lookup.cpp,f173224f20212d83506fa2f1d48946f2aa6d2f22,https://raw.githubusercontent.com/mongodb/mongo/166a9663a3cb627f36873ffa104a60c0c935393c/src/mongo/db/pipeline/document_source_lookup.cpp,"-    uassert(4567, ""from collection cannot be sharded"", !_mongod->isSharded(_fromExpCtx->ns));",-,uassert,"[u'4567, ""from collection cannot be sharded"", !_mongod->isSharded(_fromExpCtx->ns));']",125
166a9663a3cb627f36873ffa104a60c0c935393c,SERVER-27308 Reduce cost of sharding check in DocumentSourceLookup,src/mongo/db/pipeline/pipeline_d.cpp,5eee80f6cc7a564a98eddb48ef7beaf395c2d094,https://raw.githubusercontent.com/mongodb/mongo/166a9663a3cb627f36873ffa104a60c0c935393c/src/mongo/db/pipeline/pipeline_d.cpp,"+        uassert(4567, ""from collection cannot be sharded"", !bool(css->getMetadata()));",+,uassert,"[u'4567, ""from collection cannot be sharded"", !bool(css->getMetadata()));']",216
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/request.cpp,ba90e2650ca84454dd82cb6190422646f77a42d8,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/request.cpp,"-            uassert(16978,",-,uassert,"[u'16978,']",103
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/request.cpp,ba90e2650ca84454dd82cb6190422646f77a42d8,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/request.cpp,"-        Strategy::writeOp(txn, op, *this);",-,Strategy::writeOp,"[u'txn, op, *this);']",121
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/request.cpp,ba90e2650ca84454dd82cb6190422646f77a42d8,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/request.cpp,"+        Strategy::writeOp(txn, op, &_d);",+,Strategy::writeOp,"[u'txn, op, &_d);']",123
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,"-    audit::logQueryAuthzCheck(client, ns, q.query, status.code());",-,audit::logQueryAuthzCheck,"[u'client, ns, q.query, status.code());']",208
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,"+    audit::logQueryAuthzCheck(client, nss, q.query, status.code());",+,audit::logQueryAuthzCheck,"[u'client, nss, q.query, status.code());']",210
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,-        uassertStatusOK(parsedRps.getStatus());,-,uassertStatusOK,[u'parsedRps.getStatus());'],241
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,-    uassertStatusOK(canonicalQuery.getStatus());,-,uassertStatusOK,[u'canonicalQuery.getStatus());'],258
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,+        return uassertStatusOK(ReadPreferenceSetting::fromBSON(rpElem.Obj()));,+,return uassertStatusOK,[u'ReadPreferenceSetting::fromBSON(rpElem.Obj()));'],259
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,"+        uassertStatusOK(CanonicalQuery::canonicalize(txn, q, ExtensionsCallbackNoop()));",+,uassertStatusOK,"[u'CanonicalQuery::canonicalize(txn, q, ExtensionsCallbackNoop()));']",263
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,-        uassertStatusOK(,-,uassertStatusOK,[u''],283
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,+        uassertStatusOK(Strategy::explainFind(,+,uassertStatusOK,[u'Strategy::explainFind('],285
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,"+    uassert(16978,",+,uassert,"[u'16978,']",448
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,"-void Strategy::writeOp(OperationContext* txn, int op, Request& request) {",-,void Strategy::writeOp,"[u'OperationContext* txn, int op, Request& request) {']",916
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,"+void Strategy::writeOp(OperationContext* txn, int op, DbMessage* dbm) {",+,void Strategy::writeOp,"[u'OperationContext* txn, int op, DbMessage* dbm) {']",917
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,-        dassert(parsed && commandResponse.isValid(NULL));,-,dassert,[u'parsed && commandResponse.isValid(NULL));'],958
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,3b96f422337268c71c1c84d57a9ac7b6b5011862,https://raw.githubusercontent.com/mongodb/mongo/6dd2c8edd95ad1e3afc8473e8d5e5885572c9477/src/mongo/s/commands/strategy.cpp,+            dassert(parsed && commandResponse.isValid(nullptr));,+,dassert,[u'parsed && commandResponse.isValid(nullptr));'],970
f96f0ea2279962f31b18af1232ef11acfcb9f932,SERVER-14148 Remove JS mode from JSON output options,src/mongo/dbtests/jsontests.cpp,5b889487604baa7dca0670d79ecfeb31ff204d6c,https://raw.githubusercontent.com/mongodb/mongo/f96f0ea2279962f31b18af1232ef11acfcb9f932/src/mongo/dbtests/jsontests.cpp,"-        ASSERT_EQUALS(""{ \""a\"" : undefined }"", b.done().jsonString(JS));",-,ASSERT_EQUALS,"[u'""{ \\""a\\"" : undefined }"", b.done().jsonString(JS));']",282
f96f0ea2279962f31b18af1232ef11acfcb9f932,SERVER-14148 Remove JS mode from JSON output options,src/mongo/dbtests/jsontests.cpp,5b889487604baa7dca0670d79ecfeb31ff204d6c,https://raw.githubusercontent.com/mongodb/mongo/f96f0ea2279962f31b18af1232ef11acfcb9f932/src/mongo/dbtests/jsontests.cpp,-        ASSERT_EQUALS(,-,ASSERT_EQUALS,[u''],347
f96f0ea2279962f31b18af1232ef11acfcb9f932,SERVER-14148 Remove JS mode from JSON output options,src/mongo/dbtests/jsontests.cpp,5b889487604baa7dca0670d79ecfeb31ff204d6c,https://raw.githubusercontent.com/mongodb/mongo/f96f0ea2279962f31b18af1232ef11acfcb9f932/src/mongo/dbtests/jsontests.cpp,"-        ASSERT_EQUALS(""{ \""a\"" : Date( 0 ) }"", built.jsonString(JS));",-,ASSERT_EQUALS,"[u'""{ \\""a\\"" : Date( 0 ) }"", built.jsonString(JS));']",482
f96f0ea2279962f31b18af1232ef11acfcb9f932,SERVER-14148 Remove JS mode from JSON output options,src/mongo/dbtests/jsontests.cpp,5b889487604baa7dca0670d79ecfeb31ff204d6c,https://raw.githubusercontent.com/mongodb/mongo/f96f0ea2279962f31b18af1232ef11acfcb9f932/src/mongo/dbtests/jsontests.cpp,"-        ASSERT_EQUALS(""{ \""a\"" : Date( -1 ) }"", built.jsonString(JS));",-,ASSERT_EQUALS,"[u'""{ \\""a\\"" : Date( -1 ) }"", built.jsonString(JS));']",512
f96f0ea2279962f31b18af1232ef11acfcb9f932,SERVER-14148 Remove JS mode from JSON output options,src/mongo/dbtests/jsontests.cpp,5b889487604baa7dca0670d79ecfeb31ff204d6c,https://raw.githubusercontent.com/mongodb/mongo/f96f0ea2279962f31b18af1232ef11acfcb9f932/src/mongo/dbtests/jsontests.cpp,"-        ASSERT_EQUALS(""{ \""a\"" : /abc/i }"", built.jsonString(JS));",-,ASSERT_EQUALS,"[u'""{ \\""a\\"" : /abc/i }"", built.jsonString(JS));']",532
f96f0ea2279962f31b18af1232ef11acfcb9f932,SERVER-14148 Remove JS mode from JSON output options,src/mongo/dbtests/jsontests.cpp,5b889487604baa7dca0670d79ecfeb31ff204d6c,https://raw.githubusercontent.com/mongodb/mongo/f96f0ea2279962f31b18af1232ef11acfcb9f932/src/mongo/dbtests/jsontests.cpp,"-        ASSERT_EQUALS(""{ \""a\"" : /\\/\\\""/i }"", built.jsonString(JS));",-,ASSERT_EQUALS,"[u'""{ \\""a\\"" : /\\\\/\\\\\\""/i }"", built.jsonString(JS));']",552
f96f0ea2279962f31b18af1232ef11acfcb9f932,SERVER-14148 Remove JS mode from JSON output options,src/mongo/dbtests/jsontests.cpp,5b889487604baa7dca0670d79ecfeb31ff204d6c,https://raw.githubusercontent.com/mongodb/mongo/f96f0ea2279962f31b18af1232ef11acfcb9f932/src/mongo/dbtests/jsontests.cpp,"-        ASSERT_EQUALS(""{ \""a\"" : /z/gim }"", built.jsonString(JS));",-,ASSERT_EQUALS,"[u'""{ \\""a\\"" : /z/gim }"", built.jsonString(JS));']",572
f96f0ea2279962f31b18af1232ef11acfcb9f932,SERVER-14148 Remove JS mode from JSON output options,src/mongo/dbtests/jsontests.cpp,5b889487604baa7dca0670d79ecfeb31ff204d6c,https://raw.githubusercontent.com/mongodb/mongo/f96f0ea2279962f31b18af1232ef11acfcb9f932/src/mongo/dbtests/jsontests.cpp,"-        ASSERT_EQUALS(""{ \""x\"" : { \""$timestamp\"" : { \""t\"" : 4, \""i\"" : 10 } } }"",",-,ASSERT_EQUALS,"[u'""{ \\""x\\"" : { \\""$timestamp\\"" : { \\""t\\"" : 4, \\""i\\"" : 10 } } }"",']",619
f96f0ea2279962f31b18af1232ef11acfcb9f932,SERVER-14148 Remove JS mode from JSON output options,src/mongo/dbtests/jsontests.cpp,5b889487604baa7dca0670d79ecfeb31ff204d6c,https://raw.githubusercontent.com/mongodb/mongo/f96f0ea2279962f31b18af1232ef11acfcb9f932/src/mongo/dbtests/jsontests.cpp,"-        assertEquals(bson(), fromjson(tojson(bson(), JS)), ""mode: js"");",-,assertEquals,"[u'bson(), fromjson(tojson(bson(), JS)), ""mode: js"");']",690
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,09a1fb95e661b324bf09c46f952ffd254346210b,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/expression_index.cpp,"-    uassert(28739,",-,uassert,"[u'28739,']",113
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,09a1fb95e661b324bf09c46f952ffd254346210b,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/expression_index.cpp,"-    uassert(28740,",-,uassert,"[u'28740,']",116
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,09a1fb95e661b324bf09c46f952ffd254346210b,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/expression_index.cpp,"-    uassert(28741,",-,uassert,"[u'28741,']",119
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,09a1fb95e661b324bf09c46f952ffd254346210b,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/expression_index.cpp,"+    uassert(28739, ""Geo coarsest level must be in range [0,30]"", 0 <= minLevel && minLevel <= 30);",+,uassert,"[u'28739, ""Geo coarsest level must be in range [0,30]"", 0 <= minLevel && minLevel <= 30);']",125
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,09a1fb95e661b324bf09c46f952ffd254346210b,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/expression_index.cpp,"+    uassert(28740, ""Geo finest level must be in range [0,30]"", 0 <= maxLevel && maxLevel <= 30);",+,uassert,"[u'28740, ""Geo finest level must be in range [0,30]"", 0 <= maxLevel && maxLevel <= 30);']",126
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,09a1fb95e661b324bf09c46f952ffd254346210b,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/expression_index.cpp,"+    uassert(28741, ""Geo coarsest level must be less than or equal to finest"", minLevel <= maxLevel);",+,uassert,"[u'28741, ""Geo coarsest level must be less than or equal to finest"", minLevel <= maxLevel);']",127
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/query_planner_test.cpp,f63934389fec71903751b4f3fe50c0a0e3891b18,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/query_planner_test.cpp,-    assertNumSolutions(internalQueryEnumerationMaxOrSolutions);,-,assertNumSolutions,[u'internalQueryEnumerationMaxOrSolutions);'],3285
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/query_planner_test.cpp,f63934389fec71903751b4f3fe50c0a0e3891b18,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/query_planner_test.cpp,+    assertNumSolutions(internalQueryEnumerationMaxOrSolutions.load());,+,assertNumSolutions,[u'internalQueryEnumerationMaxOrSolutions.load());'],3286
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/query_planner_test.cpp,f63934389fec71903751b4f3fe50c0a0e3891b18,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/query_planner_test.cpp,-    assertNumSolutions(internalQueryEnumerationMaxOrSolutions);,-,assertNumSolutions,[u'internalQueryEnumerationMaxOrSolutions);'],3588
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/query_planner_test.cpp,f63934389fec71903751b4f3fe50c0a0e3891b18,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/query_planner_test.cpp,+    assertNumSolutions(internalQueryEnumerationMaxOrSolutions.load());,+,assertNumSolutions,[u'internalQueryEnumerationMaxOrSolutions.load());'],3589
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/query_planner_test.cpp,f63934389fec71903751b4f3fe50c0a0e3891b18,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/query_planner_test.cpp,-    assertNumSolutions(internalQueryEnumerationMaxOrSolutions);,-,assertNumSolutions,[u'internalQueryEnumerationMaxOrSolutions);'],3614
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/query_planner_test.cpp,f63934389fec71903751b4f3fe50c0a0e3891b18,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/query/query_planner_test.cpp,+    assertNumSolutions(internalQueryEnumerationMaxOrSolutions.load());,+,assertNumSolutions,[u'internalQueryEnumerationMaxOrSolutions.load());'],3615
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/repl/replication_coordinator_impl.cpp,532363030e3fd870f297c1e10d7386ed5d7d1701,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/repl/replication_coordinator_impl.cpp,"-            uassertStatusOK(drCopy->startup(txn, numInitialSyncAttempts));",-,uassertStatusOK,"[u'drCopy->startup(txn, numInitialSyncAttempts));']",658
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/repl/replication_coordinator_impl.cpp,532363030e3fd870f297c1e10d7386ed5d7d1701,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/repl/replication_coordinator_impl.cpp,"+            uassertStatusOK(drCopy->startup(txn, numInitialSyncAttempts.load()));",+,uassertStatusOK,"[u'drCopy->startup(txn, numInitialSyncAttempts.load()));']",659
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/server_parameters_test.cpp,3b4783bcbbd9d70c18a87ae23d63ae8fa927b330,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/server_parameters_test.cpp,"-    ASSERT_EQUALS(6, f);",-,ASSERT_EQUALS,"[u'6, f);']",51
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/server_parameters_test.cpp,3b4783bcbbd9d70c18a87ae23d63ae8fa927b330,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/server_parameters_test.cpp,"+    ASSERT_EQUALS(6, f.load());",+,ASSERT_EQUALS,"[u'6, f.load());']",52
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/server_parameters_test.cpp,3b4783bcbbd9d70c18a87ae23d63ae8fa927b330,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/server_parameters_test.cpp,"-    ASSERT_EQUALS(7, f);",-,ASSERT_EQUALS,"[u'7, f);']",55
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/server_parameters_test.cpp,3b4783bcbbd9d70c18a87ae23d63ae8fa927b330,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/server_parameters_test.cpp,"+    ASSERT_EQUALS(7, f.load());",+,ASSERT_EQUALS,"[u'7, f.load());']",56
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/server_parameters_test.cpp,3b4783bcbbd9d70c18a87ae23d63ae8fa927b330,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/server_parameters_test.cpp,"-    ASSERT_EQUALS(8, f);",-,ASSERT_EQUALS,"[u'8, f);']",59
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/server_parameters_test.cpp,3b4783bcbbd9d70c18a87ae23d63ae8fa927b330,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/db/server_parameters_test.cpp,"+    ASSERT_EQUALS(8, f.load());",+,ASSERT_EQUALS,"[u'8, f.load());']",60
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/dbtests/plan_ranking.cpp,031a95d807acdea424598c401f73b91b04de172f,https://raw.githubusercontent.com/mongodb/mongo/ba55f2573976ba570c2319bce9b598f0a660445f/src/mongo/dbtests/plan_ranking.cpp,"+        ASSERT_GTE(N, internalQueryPlanEvaluationWorks.load() + 1000);",+,ASSERT_GTE,"[u'N, internalQueryPlanEvaluationWorks.load() + 1000);']",98
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/bgsync.cpp,32dab1108b3d98366a6e68f60268d680ca92135a,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/bgsync.cpp,"+        log() << ""rollback - rollbackHangBeforeStart fail point """,+,log,"[u') << ""rollback - rollbackHangBeforeStart fail point ""']",641
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher.cpp,61169fa1a6886d9cd2a9dce34a59b77e0f3bea0e,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/oplog_fetcher.cpp,"-            error() << ""invalid replication metadata from sync source "" << _fetcher->getSource()",-,error,"[u') << ""invalid replication metadata from sync source "" << _fetcher->getSource()']",446
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher.cpp,61169fa1a6886d9cd2a9dce34a59b77e0f3bea0e,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/oplog_fetcher.cpp,"+            error() << ""invalid replication metadata from sync source "" << _fetcher->getSource()",+,error,"[u') << ""invalid replication metadata from sync source "" << _fetcher->getSource()']",508
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,1c77b47bd3ea08d2b56b8d395820eb4dc5ae7073,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/oplog_fetcher_test.cpp,"+        {makeCursorResponse(0, {makeNoopOplogEntry(lastFetched)}),",+,"{makeCursorResponse(0, {makeNoopOplogEntry","[u'lastFetched)}),']",557
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,1c77b47bd3ea08d2b56b8d395820eb4dc5ae7073,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/oplog_fetcher_test.cpp,"-        {makeCursorResponse(0, {makeNoopOplogEntry(lastFetched)}), metadataObj, Milliseconds(0)});",-,"{makeCursorResponse(0, {makeNoopOplogEntry","[u'lastFetched)}), metadataObj, Milliseconds(0)});']",578
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,1c77b47bd3ea08d2b56b8d395820eb4dc5ae7073,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/oplog_fetcher_test.cpp,"+    ASSERT_OK(processSingleBatch({makeCursorResponse(0, {makeNoopOplogEntry(lastFetched)}),",+,"ASSERT_OK(processSingleBatch({makeCursorResponse(0, {makeNoopOplogEntry","[u'lastFetched)}),']",579
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,1c77b47bd3ea08d2b56b8d395820eb4dc5ae7073,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/oplog_fetcher_test.cpp,+    ASSERT_TRUE(dataReplicatorExternalState->metadataWasProcessed);,+,ASSERT_TRUE,[u'dataReplicatorExternalState->metadataWasProcessed);'],583
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,1c77b47bd3ea08d2b56b8d395820eb4dc5ae7073,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/oplog_fetcher_test.cpp,+    ASSERT_OK(metadata.writeToMetadata(&bob));,+,ASSERT_OK(metadata.writeToMetadata,[u'&bob));'],591
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,1c77b47bd3ea08d2b56b8d395820eb4dc5ae7073,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/oplog_fetcher_test.cpp,"+    ASSERT_EQUALS(ErrorCodes::OplogStartMissing,",+,ASSERT_EQUALS,"[u'ErrorCodes::OplogStartMissing,']",593
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,1c77b47bd3ea08d2b56b8d395820eb4dc5ae7073,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/oplog_fetcher_test.cpp,"+                      {makeCursorResponse(0, {makeNoopOplogEntry(Seconds(456), lastFetched.value)}),",+,"{makeCursorResponse(0, {makeNoopOplogEntry","[u'Seconds(456), lastFetched.value)}),']",595
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,1c77b47bd3ea08d2b56b8d395820eb4dc5ae7073,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/oplog_fetcher_test.cpp,+    ASSERT_FALSE(dataReplicatorExternalState->metadataWasProcessed);,+,ASSERT_FALSE,[u'dataReplicatorExternalState->metadataWasProcessed);'],599
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT_OK(metadata.getValue().writeToMetadata(&metadataBuilder));,+,ASSERT_OK(metadata.getValue().writeToMetadata,[u'&metadataBuilder));'],4122
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT_TRUE(net->hasReadyRequests());,+,ASSERT_TRUE,[u'net->hasReadyRequests());'],4128
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(HostAndPort(""node2"", 12345), request.target);",+,ASSERT_EQUALS,"[u'HostAndPort(""node2"", 12345), request.target);']",4131
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(""replSetHeartbeat"", request.cmdObj.firstElement().fieldNameStringData());",+,ASSERT_EQUALS,"[u'""replSetHeartbeat"", request.cmdObj.firstElement().fieldNameStringData());']",4132
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(OpTime(Timestamp(0, 0), 0), getReplCoord()->getLastCommittedOpTime());",+,ASSERT_EQUALS,"[u'OpTime(Timestamp(0, 0), 0), getReplCoord()->getLastCommittedOpTime());']",4142
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(3, getReplCoord()->getTerm());",+,ASSERT_EQUALS,"[u'3, getReplCoord()->getTerm());']",4143
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(-1, getTopoCoord().getCurrentPrimaryIndex());",+,ASSERT_EQUALS,"[u'-1, getTopoCoord().getCurrentPrimaryIndex());']",4144
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    assertStartSuccess(BSON(""_id""",+,assertStartSuccess,"[u'BSON(""_id""']",4149
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(OpTime(Timestamp(0, 0), 0), getReplCoord()->getLastCommittedOpTime());",+,ASSERT_EQUALS,"[u'OpTime(Timestamp(0, 0), 0), getReplCoord()->getLastCommittedOpTime());']",4167
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(1, getReplCoord()->getTerm());",+,ASSERT_EQUALS,"[u'1, getReplCoord()->getTerm());']",4170
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    assertStartSuccess(BSON(""_id""",+,assertStartSuccess,"[u'BSON(""_id""']",4566
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT_TRUE(replCoord->setFollowerMode(MemberState::RS_SECONDARY));,+,ASSERT_TRUE,[u'replCoord->setFollowerMode(MemberState::RS_SECONDARY));'],4584
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_NOT_EQUALS(Date_t(), electionTimeoutWhen);",+,ASSERT_NOT_EQUALS,"[u'Date_t(), electionTimeoutWhen);']",4587
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT_TRUE(net->hasReadyRequests());,+,ASSERT_TRUE,[u'net->hasReadyRequests());'],4591
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    log() << ""processing "" << request.cmdObj;",+,log,"[u') << ""processing "" << request.cmdObj;']",4594
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(HostAndPort(""node2"", 12345), request.target);",+,ASSERT_EQUALS,"[u'HostAndPort(""node2"", 12345), request.target);']",4595
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(""replSetHeartbeat"", request.cmdObj.firstElement().fieldNameStringData());",+,ASSERT_EQUALS,"[u'""replSetHeartbeat"", request.cmdObj.firstElement().fieldNameStringData());']",4597
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(heartbeatWhen, net->now());",+,ASSERT_EQUALS,"[u'heartbeatWhen, net->now());']",4610
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,757a422bf7019b9a5b73c97975cd0d37dbcbeb97,https://raw.githubusercontent.com/mongodb/mongo/87f49488f1b5c872daa71fd2fd9b5d744409a817/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_GREATER_THAN(heartbeatWhen + replCoord->getConfig().getElectionTimeoutPeriod(),",+,ASSERT_GREATER_THAN,"[u'heartbeatWhen + replCoord->getConfig().getElectionTimeoutPeriod(),']",4614
a59962fab548e695f2e0efa2f261381cba771551,SERVER-27583 shut down SyncSourceFeedback outside ReplicationCoordinatorExternalStateImpl lock,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,d26601ed0d91c1bcd42f4e5c59b3887932711f07,https://raw.githubusercontent.com/mongodb/mongo/a59962fab548e695f2e0efa2f261381cba771551/src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,"-        log() << ""Stopping replication reporter thread"";",-,log,"[u') << ""Stopping replication reporter thread"";']",263
a59962fab548e695f2e0efa2f261381cba771551,SERVER-27583 shut down SyncSourceFeedback outside ReplicationCoordinatorExternalStateImpl lock,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,d26601ed0d91c1bcd42f4e5c59b3887932711f07,https://raw.githubusercontent.com/mongodb/mongo/a59962fab548e695f2e0efa2f261381cba771551/src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,"+        log() << ""Stopping replication reporter thread"";",+,log,"[u') << ""Stopping replication reporter thread"";']",269
b7c7462c564298da54333775f7734e2623dfb08b,SERVER-5738 Remove MONGO_ONCE in favor of std::call_once,src/mongo/dbtests/basictests.cpp,0dd6f2a28d3ce93560fdc044b131466f1ece8c70,https://raw.githubusercontent.com/mongodb/mongo/b7c7462c564298da54333775f7734e2623dfb08b/src/mongo/dbtests/basictests.cpp,"-        ASSERT_EQUALS(1, third);",-,ASSERT_EQUALS,"[u'1, third);']",74
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    assertStartSuccess(BSON(""_id""",+,assertStartSuccess,"[u'BSON(""_id""']",5163
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT(getReplCoord()->setFollowerMode(MemberState::RS_SECONDARY));,+,ASSERT,[u'getReplCoord()->setFollowerMode(MemberState::RS_SECONDARY));'],5182
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_OK(args.initialize(BSON(""replSetRequestVotes"" << 1 << ""setName""",+,ASSERT_OK,"[u'args.initialize(BSON(""replSetRequestVotes"" << 1 << ""setName""']",5190
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_OK(getReplCoord()->processReplSetRequestVotes(txn.get(), args, &response));",+,ASSERT_OK,"[u'getReplCoord()->processReplSetRequestVotes(txn.get(), args, &response));']",5204
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS("""", response.getReason());",+,ASSERT_EQUALS,"[u'"""", response.getReason());']",5205
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT_TRUE(response.getVoteGranted());,+,ASSERT_TRUE,[u'response.getVoteGranted());'],5206
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT_OK(lastVote.getStatus());,+,ASSERT_OK,[u'lastVote.getStatus());'],5209
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(lastVote.getValue().getTerm(), 7);",+,ASSERT_EQUALS,"[u'lastVote.getValue().getTerm(), 7);']",5212
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(lastVote.getValue().getCandidateIndex(), 2);",+,ASSERT_EQUALS,"[u'lastVote.getValue().getCandidateIndex(), 2);']",5213
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    assertStartSuccess(BSON(""_id""",+,assertStartSuccess,"[u'BSON(""_id""']",5217
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT(getReplCoord()->setFollowerMode(MemberState::RS_SECONDARY));,+,ASSERT,[u'getReplCoord()->setFollowerMode(MemberState::RS_SECONDARY));'],5236
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_OK(args.initialize(BSON(""replSetRequestVotes"" << 1 << ""setName""",+,ASSERT_OK,"[u'args.initialize(BSON(""replSetRequestVotes"" << 1 << ""setName""']",5244
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_OK(getReplCoord()->processReplSetRequestVotes(txn.get(), args, &response));",+,ASSERT_OK,"[u'getReplCoord()->processReplSetRequestVotes(txn.get(), args, &response));']",5258
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS("""", response.getReason());",+,ASSERT_EQUALS,"[u'"""", response.getReason());']",5259
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT_TRUE(response.getVoteGranted());,+,ASSERT_TRUE,[u'response.getVoteGranted());'],5260
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,+    ASSERT_OK(lastVote.getStatus());,+,ASSERT_OK,[u'lastVote.getStatus());'],5263
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(lastVote.getValue().getTerm(), 1);",+,ASSERT_EQUALS,"[u'lastVote.getValue().getTerm(), 1);']",5267
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,69816fe9a677d871b2a80af560c37bd8acd1223d,https://raw.githubusercontent.com/mongodb/mongo/7c2a4522ff4586d6a999a143988b7f7fa9097af5/src/mongo/db/repl/replication_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(lastVote.getValue().getCandidateIndex(), 0);",+,ASSERT_EQUALS,"[u'lastVote.getValue().getCandidateIndex(), 0);']",5268
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::TypeMismatch,",+,ASSERT_EQ,"[u'ErrorCodes::TypeMismatch,']",591
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::TypeMismatch,",+,ASSERT_EQ,"[u'ErrorCodes::TypeMismatch,']",595
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::TypeMismatch,",+,ASSERT_EQ,"[u'ErrorCodes::TypeMismatch,']",599
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::TypeMismatch,",+,ASSERT_EQ,"[u'ErrorCodes::TypeMismatch,']",606
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::TypeMismatch,",+,ASSERT_EQ,"[u'ErrorCodes::TypeMismatch,']",611
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",617
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_OK,"[u'authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",624
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",634
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_OK,"[u'authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",643
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",651
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_OK,"[u'authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",659
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",667
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_OK,"[u'authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",675
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,+    ASSERT_THROWS_CODE(,+,ASSERT_THROWS_CODE,[u''],682
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",692
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",697
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",702
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_OK,"[u'authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",712
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObjNoBypassDocumentValidation));",+,ASSERT_OK,"[u'authzSession->checkAuthForAggregate(testFooNss, cmdObjNoBypassDocumentValidation));']",717
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",730
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_OK,"[u'authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",745
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",753
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_OK,"[u'authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",762
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",770
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_OK,"[u'authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",779
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",791
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",796
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_EQ,"[u'ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",801
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,0c242b6c13dbf3e752c62422fe8a85cfc4f72757,https://raw.githubusercontent.com/mongodb/mongo/f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7/src/mongo/db/auth/authorization_session_test.cpp,"+    ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",+,ASSERT_OK,"[u'authzSession->checkAuthForAggregate(testFooNss, cmdObj));']",814
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,e6492ebd33873555ed36fe6fd15c3c36f51bb759,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/bgsync.cpp,"-                               OplogInterfaceLocal(txn, rsOplogName),",-,OplogInterfaceLocal,"[u'txn, rsOplogName),']",638
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,e6492ebd33873555ed36fe6fd15c3c36f51bb759,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/bgsync.cpp,-            fassertFailedNoTrace(40276);,-,fassertFailedNoTrace,[u'40276);'],659
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,e6492ebd33873555ed36fe6fd15c3c36f51bb759,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/bgsync.cpp,"+        log() << ""rollback 0"";",+,log,"[u') << ""rollback 0"";']",672
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,e6492ebd33873555ed36fe6fd15c3c36f51bb759,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/bgsync.cpp,+        Lock::GlobalWrite globalWrite(txn->lockState());,+,Lock::GlobalWrite globalWrite,[u'txn->lockState());'],673
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,e6492ebd33873555ed36fe6fd15c3c36f51bb759,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/bgsync.cpp,"+            log() << ""Cannot transition from "" << _replCoord->getMemberState().toString() << "" to """,+,log,"[u') << ""Cannot transition from "" << _replCoord->getMemberState().toString() << "" to ""']",675
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,e6492ebd33873555ed36fe6fd15c3c36f51bb759,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/bgsync.cpp,"+                                   OplogInterfaceLocal(txn, rsOplogName),",+,OplogInterfaceLocal,"[u'txn, rsOplogName),']",690
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,e6492ebd33873555ed36fe6fd15c3c36f51bb759,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/bgsync.cpp,+            fassertFailedNoTrace(28723);,+,fassertFailedNoTrace,[u'28723);'],701
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,e6492ebd33873555ed36fe6fd15c3c36f51bb759,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/bgsync.cpp,"-        fassertNoTrace(28723, status);",-,fassertNoTrace,"[u'28723, status);']",706
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,e6492ebd33873555ed36fe6fd15c3c36f51bb759,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/bgsync.cpp,+        uassertStatusOK(status);,+,uassertStatusOK,[u'status);'],709
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,e6492ebd33873555ed36fe6fd15c3c36f51bb759,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/bgsync.cpp,+        fassertFailedNoTrace(40276);,+,fassertFailedNoTrace,[u'40276);'],742
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,e6492ebd33873555ed36fe6fd15c3c36f51bb759,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/bgsync.cpp,+        fassertFailedNoTrace(40364);,+,fassertFailedNoTrace,[u'40364);'],749
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+Status rollback_internal::updateFixUpInfoFromLocalOplogEntry(FixUpInfo& fixUpInfo,",+,Status rollback_internal::updateFixUpInfoFromLocalOplogEntry,"[u'FixUpInfo& fixUpInfo,']",192
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+                auto subStatus = updateFixUpInfoFromLocalOplogEntry(fixUpInfo, subopElement.Obj());",+,auto subStatus = updateFixUpInfoFromLocalOplogEntry,"[u'fixUpInfo, subopElement.Obj());']",321
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+        uasserted(40361, ""rollback error newest oplog entry on source is missing or empty"");",+,uasserted,"[u'40361, ""rollback error newest oplog entry on source is missing or empty"");']",409
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+        uasserted(40365, ""rollback rbid on source changed during rollback, canceling this attempt"");",+,uasserted,"[u'40365, ""rollback rbid on source changed during rollback, canceling this attempt"");']",413
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+    OpTime minValid = fassertStatusOK(28774, OpTime::parseFromOplogEntry(newMinValidDoc));",+,"OpTime minValid = fassertStatusOK(28774, OpTime::parseFromOplogEntry",[u'newMinValidDoc));'],418
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+    log() << ""Setting minvalid to "" << minValid;",+,log,"[u') << ""Setting minvalid to "" << minValid;']",419
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-                uassert(13410, ""replSet too much data to roll back"", totalSize < 300 * 1024 * 1024);",-,uassert,"[u'13410, ""replSet too much data to roll back"", totalSize < 300 * 1024 * 1024);']",502
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-            error() << ""rollback error newMinValid empty?"";",-,error,"[u') << ""rollback error newMinValid empty?"";']",527
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+            log() << ""rollback couldn't re-get from ns: "" << doc.ns << "" _id: "" << redact(doc._id)",+,log,"[u') << ""rollback couldn\'t re-get from ns: "" << doc.ns << "" _id: "" << redact(doc._id)']",529
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-        LOG(1) << ""rollback re-get objects: "" << redact(e);",-,LOG,"[u'1) << ""rollback re-get objects: "" << redact(e);']",535
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-        error() << ""rollback couldn't re-get ns:"" << doc.ns << "" _id:"" << redact(doc._id) << ' '",-,error,"[u') << ""rollback couldn\'t re-get ns:"" << doc.ns << "" _id:"" << redact(doc._id) << \' \'']",536
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-    OpTime minValid = fassertStatusOK(28774, OpTime::parseFromOplogEntry(newMinValid));",-,"OpTime minValid = fassertStatusOK(28774, OpTime::parseFromOplogEntry",[u'newMinValid));'],561
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-    log() << ""minvalid="" << minValid;",-,log,"[u') << ""minvalid="" << minValid;']",562
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-                OpTime minValid = fassertStatusOK(28775, OpTime::parseFromOplogEntry(newMinValid));",-,"OpTime minValid = fassertStatusOK(28775, OpTime::parseFromOplogEntry",[u'newMinValid));'],714
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-                log() << ""minvalid="" << minValid;",-,log,"[u') << ""minvalid="" << minValid;']",715
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-        log() << ""rollback 4.3"";",-,log,"[u') << ""rollback 4.3"";']",734
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-                                error() << ""rolling back capped collection rec "" << doc.ns << ' '",-,error,"[u') << ""rolling back capped collection rec "" << doc.ns << \' \'']",955
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-                                    fassertStatusOK(40361,",-,fassertStatusOK,"[u'40361,']",999
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,+        fassertFailedNoTrace(40366);,+,fassertFailedNoTrace,[u'40366);'],1077
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-        log() << ""rollback done"";",-,log,"[u') << ""rollback done"";']",1088
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+    log() << ""rollback done"";",+,log,"[u') << ""rollback done"";']",1089
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-    log() << ""rollback 0"";",-,log,"[u') << ""rollback 0"";']",1101
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,-        Lock::GlobalWrite globalWrite(txn->lockState());,-,Lock::GlobalWrite globalWrite,[u'txn->lockState());'],1110
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-        log() << ""Upstream node rolled back. Need to retry our rollback."";",-,log,"[u') << ""Upstream node rolled back. Need to retry our rollback."";']",1124
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+        uassert(40362,",+,uassert,"[u'40362,']",1130
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-        log() << ""rollback 2 FindCommonPoint"";",-,log,"[u') << ""rollback 2 FindCommonPoint"";']",1136
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-                localOplog, rollbackSource.getOplog(), processOperationForFixUp);",-,"localOplog, rollbackSource.getOplog","[u'), processOperationForFixUp);']",1142
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+    log() << ""rollback 2 FindCommonPoint"";",+,log,"[u') << ""rollback 2 FindCommonPoint"";']",1153
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+            return updateFixUpInfoFromLocalOplogEntry(how, operation);",+,return updateFixUpInfoFromLocalOplogEntry,"[u'how, operation);']",1156
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+            localOplog, rollbackSource.getOplog(), processOperationForFixUp);",+,"localOplog, rollbackSource.getOplog","[u'), processOperationForFixUp);']",1159
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,-            error() << redact(e.what());,-,error,[u') << redact(e.what());'],1174
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"+    log() << ""rollback common point is "" << how.commonPoint;",+,log,"[u') << ""rollback common point is "" << how.commonPoint;']",1200
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,"-        error() << ""exception during rollback: "" << redact(e.what());",-,error,"[u') << ""exception during rollback: "" << redact(e.what());']",1208
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,95ac558cb45827f4631a233bbd9ec76198f6676e,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback.cpp,-    txn->setReplicatedWrites(false);,-,txn->setReplicatedWrites,[u'false);'],1327
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"-    ASSERT_EQUALS(ErrorCodes::OperationFailed,",-,ASSERT_EQUALS,"[u'ErrorCodes::OperationFailed,']",208
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"-                               OplogInterfaceMock(kEmptyMockOperations),",-,OplogInterfaceMock,"[u'kEmptyMockOperations),']",210
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"-                                   new OplogInterfaceMock(kEmptyMockOperations))),",-,new OplogInterfaceMock,"[u'kEmptyMockOperations))),']",212
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"+    ASSERT_THROWS_CODE(syncRollback(_txn.get(),",+,ASSERT_THROWS_CODE,"[u'syncRollback(_txn.get(),']",318
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"+                                    OplogInterfaceMock({operation}),",+,OplogInterfaceMock,"[u'{operation}),']",319
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"+                                        new OplogInterfaceMock(kEmptyMockOperations))),",+,new OplogInterfaceMock,"[u'kEmptyMockOperations))),']",321
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,+                       ErrorCodes::Error(40362));,+,ErrorCodes::Error,[u'40362));'],325
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,+    createOplog(_txn.get());,+,createOplog,[u'_txn.get());'],951
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,+    RollbackSourceLocal rollbackSource(std::unique_ptr<OplogInterface>(new OplogInterfaceMock({,+,RollbackSourceLocal rollbackSource(std::unique_ptr<OplogInterface>(new OplogInterfaceMock,[u'{'],975
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"+    ASSERT_THROWS_CODE(syncRollback(_txn.get(),",+,ASSERT_THROWS_CODE,"[u'syncRollback(_txn.get(),']",980
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"+                                    OplogInterfaceMock({dropCollectionOperation, commonOperation}),",+,OplogInterfaceMock,"[u'{dropCollectionOperation, commonOperation}),']",981
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,+    ASSERT(rollbackSource.copyCollectionCalled);,+,ASSERT,[u'rollbackSource.copyCollectionCalled);'],987
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"+    ASSERT_OK(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry));",+,ASSERT_OK(updateFixUpInfoFromLocalOplogEntry,"[u'fui, validOplogEntry));']",1323
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"+    ASSERT_THROWS(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry.removeField(""ns"")),",+,ASSERT_THROWS(updateFixUpInfoFromLocalOplogEntry,"[u'fui, validOplogEntry.removeField(""ns"")),']",1324
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"+    ASSERT_OK(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry));",+,ASSERT_OK(updateFixUpInfoFromLocalOplogEntry,"[u'fui, validOplogEntry));']",1331
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"+    ASSERT_THROWS(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry.removeField(""o"")),",+,ASSERT_THROWS(updateFixUpInfoFromLocalOplogEntry,"[u'fui, validOplogEntry.removeField(""o"")),']",1332
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"+    ASSERT_OK(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry));",+,ASSERT_OK(updateFixUpInfoFromLocalOplogEntry,"[u'fui, validOplogEntry));']",1340
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,51da192da60ac9f4b669136c220bc78cc4dcd77a,https://raw.githubusercontent.com/mongodb/mongo/ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2/src/mongo/db/repl/rs_rollback_test.cpp,"+    ASSERT_THROWS(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry.removeField(""o2"")),",+,ASSERT_THROWS(updateFixUpInfoFromLocalOplogEntry,"[u'fui, validOplogEntry.removeField(""o2"")),']",1341
2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3,SERVER-25860 Remove redundant operations during rollback,src/mongo/db/repl/rs_rollback.cpp,5f2df4ed083f3398e751c06e387193e83abd3c8e,https://raw.githubusercontent.com/mongodb/mongo/2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3/src/mongo/db/repl/rs_rollback.cpp,"-                log() << ns << "" not found on remote host, dropping"";",-,log,"[u') << ns << "" not found on remote host, dropping"";']",616
2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3,SERVER-25860 Remove redundant operations during rollback,src/mongo/db/repl/rs_rollback.cpp,5f2df4ed083f3398e751c06e387193e83abd3c8e,https://raw.githubusercontent.com/mongodb/mongo/2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3/src/mongo/db/repl/rs_rollback.cpp,"+                log() << ns << "" not found on remote host, so not rolling back collmod operation.""",+,log,"[u') << ns << "" not found on remote host, so not rolling back collmod operation.""']",621
2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3,SERVER-25860 Remove redundant operations during rollback,src/mongo/db/repl/rs_rollback_test.cpp,da63316485c0273686a971d0c9f27cda30d9029f,https://raw.githubusercontent.com/mongodb/mongo/2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3/src/mongo/db/repl/rs_rollback_test.cpp,+    ASSERT((fui.docsToRefetch ==,+,ASSERT,[u'(fui.docsToRefetch =='],1057
2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3,SERVER-25860 Remove redundant operations during rollback,src/mongo/db/repl/rs_rollback_test.cpp,da63316485c0273686a971d0c9f27cda30d9029f,https://raw.githubusercontent.com/mongodb/mongo/2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3/src/mongo/db/repl/rs_rollback_test.cpp,+    ASSERT((fui.docsToRefetch ==,+,ASSERT,[u'(fui.docsToRefetch =='],1071
2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3,SERVER-25860 Remove redundant operations during rollback,src/mongo/db/repl/rs_rollback_test.cpp,da63316485c0273686a971d0c9f27cda30d9029f,https://raw.githubusercontent.com/mongodb/mongo/2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3/src/mongo/db/repl/rs_rollback_test.cpp,"+    ASSERT((fui.docsToRefetch == DocSet{})) << ""remaining docs: "" << fui.docsToRefetch.size();",+,ASSERT,"[u'(fui.docsToRefetch == DocSet{})) << ""remaining docs: "" << fui.docsToRefetch.size();']",1081
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,d9abaef39ca37f2fa72f8252407489baf9f90fb8,https://raw.githubusercontent.com/mongodb/mongo/99e19b1ded425a1d859a9bc52fd5c2712e71f83a/src/mongo/db/catalog/database.cpp,"-    LOG(1) << ""dropCollection: "" << fullns;",-,LOG,"[u'1) << ""dropCollection: "" << fullns;']",349
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,d9abaef39ca37f2fa72f8252407489baf9f90fb8,https://raw.githubusercontent.com/mongodb/mongo/99e19b1ded425a1d859a9bc52fd5c2712e71f83a/src/mongo/db/catalog/database.cpp,"-    massertNamespaceNotIndex(fullns, ""dropCollection"");",-,massertNamespaceNotIndex,"[u'fullns, ""dropCollection"");']",350
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,d9abaef39ca37f2fa72f8252407489baf9f90fb8,https://raw.githubusercontent.com/mongodb/mongo/99e19b1ded425a1d859a9bc52fd5c2712e71f83a/src/mongo/db/catalog/database.cpp,"+    LOG(1) << ""dropCollection: "" << fullns;",+,LOG,"[u'1) << ""dropCollection: "" << fullns;']",392
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,d9abaef39ca37f2fa72f8252407489baf9f90fb8,https://raw.githubusercontent.com/mongodb/mongo/99e19b1ded425a1d859a9bc52fd5c2712e71f83a/src/mongo/db/catalog/database.cpp,"+    massertNamespaceNotIndex(fullns.toString(), ""dropCollection"");",+,massertNamespaceNotIndex,"[u'fullns.toString(), ""dropCollection"");']",399
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,d9abaef39ca37f2fa72f8252407489baf9f90fb8,https://raw.githubusercontent.com/mongodb/mongo/99e19b1ded425a1d859a9bc52fd5c2712e71f83a/src/mongo/db/catalog/database.cpp,"-    audit::logDropCollection(&cc(), fullns);",-,audit::logDropCollection,"[u'&cc(), fullns);']",403
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,d9abaef39ca37f2fa72f8252407489baf9f90fb8,https://raw.githubusercontent.com/mongodb/mongo/99e19b1ded425a1d859a9bc52fd5c2712e71f83a/src/mongo/db/catalog/database.cpp,"+    audit::logDropCollection(&cc(), fullns.toString());",+,audit::logDropCollection,"[u'&cc(), fullns.toString());']",404
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/repl/rs_rollback.cpp,150b1d235424623a164e5b7803026d13362e82e9,https://raw.githubusercontent.com/mongodb/mongo/99e19b1ded425a1d859a9bc52fd5c2712e71f83a/src/mongo/db/repl/rs_rollback.cpp,"+                fassertStatusOK(40359, db->dropCollectionEvenIfSystem(txn, nss));",+,fassertStatusOK,"[u'40359, db->dropCollectionEvenIfSystem(txn, nss));']",440
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/repl/rs_rollback.cpp,150b1d235424623a164e5b7803026d13362e82e9,https://raw.githubusercontent.com/mongodb/mongo/99e19b1ded425a1d859a9bc52fd5c2712e71f83a/src/mongo/db/repl/rs_rollback.cpp,"+            fassertStatusOK(40360, db->dropCollectionEvenIfSystem(txn, nss));",+,fassertStatusOK,"[u'40360, db->dropCollectionEvenIfSystem(txn, nss));']",599
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/repl/rs_rollback.cpp,150b1d235424623a164e5b7803026d13362e82e9,https://raw.githubusercontent.com/mongodb/mongo/99e19b1ded425a1d859a9bc52fd5c2712e71f83a/src/mongo/db/repl/rs_rollback.cpp,"+                                    fassertStatusOK(40361,",+,fassertStatusOK,"[u'40361,']",775
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/bgsync.cpp,84676fd60c83596748e67d4014cb56ad40cc5ca1,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/bgsync.cpp,"-            fassertNoTrace(18750,",-,fassertNoTrace,"[u'18750,']",561
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/oplog_fetcher_test.cpp,f3ea0760d35952eccf63002df86677c1f5dfb1a9,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/oplog_fetcher_test.cpp,+    auto firstEntry = makeNoopOplogEntry(lastFetched);,+,auto firstEntry = makeNoopOplogEntry,[u'lastFetched);'],670
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/oplog_fetcher_test.cpp,f3ea0760d35952eccf63002df86677c1f5dfb1a9,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/oplog_fetcher_test.cpp,"+    auto secondEntry = makeNoopOplogEntry({{Seconds(456), 0}, lastFetched.opTime.getTerm()}, 200);",+,auto secondEntry = makeNoopOplogEntry,"[u'{{Seconds(456), 0}, lastFetched.opTime.getTerm()}, 200);']",671
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/oplog_fetcher_test.cpp,f3ea0760d35952eccf63002df86677c1f5dfb1a9,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/oplog_fetcher_test.cpp,"+    auto thirdEntry = makeNoopOplogEntry({{Seconds(789), 0}, lastFetched.opTime.getTerm()}, 300);",+,auto thirdEntry = makeNoopOplogEntry,"[u'{{Seconds(789), 0}, lastFetched.opTime.getTerm()}, 300);']",672
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/oplog_fetcher_test.cpp,f3ea0760d35952eccf63002df86677c1f5dfb1a9,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/oplog_fetcher_test.cpp,"+    ASSERT_EQ(shutdownState->getStatus(), Status(ErrorCodes::InternalError, ""my custom error""));",+,ASSERT_EQ,"[u'shutdownState->getStatus(), Status(ErrorCodes::InternalError, ""my custom error""));']",683
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/rs_rollback.cpp,7cb229e064f162866845d0efcd71a8ddcade27ef,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/rs_rollback.cpp,"+        log() << ""Upstream node rolled back. Need to retry our rollback."";",+,log,"[u') << ""Upstream node rolled back. Need to retry our rollback."";']",868
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver.cpp,33818e14c50bc60bfcc846297b7b522f4280cedb,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver.cpp,+        uassertStatusOK(rbidReply.response.status);,+,uassertStatusOK,[u'rbidReply.response.status);'],385
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver.cpp,33818e14c50bc60bfcc846297b7b522f4280cedb,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver.cpp,+        uassertStatusOK(getStatusFromCommandResult(rbidReply.response.data));,+,uassertStatusOK,[u'getStatusFromCommandResult(rbidReply.response.data));'],386
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver.cpp,33818e14c50bc60bfcc846297b7b522f4280cedb,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver.cpp,"+        log() << ""Blacklisting "" << candidate << "" due to error: '"" << ex << ""' for """,+,log,"[u') << ""Blacklisting "" << candidate << "" due to error: \'"" << ex << ""\' for ""']",390
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_TRUE(net->hasReadyRequests());,+,ASSERT_TRUE,[u'net->hasReadyRequests());'],622
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_EQUALS(currentSyncSource, request.target);",+,ASSERT_EQUALS,"[u'currentSyncSource, request.target);']",624
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_EQUALS(""admin"", request.dbname);",+,ASSERT_EQUALS,"[u'""admin"", request.dbname);']",625
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_EQUALS(SyncSourceResolver::kFetcherTimeout, request.timeout);",+,ASSERT_EQUALS,"[u'SyncSourceResolver::kFetcherTimeout, request.timeout);']",626
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_BSONOBJ_EQ(BSON(""replSetGetRBID"" << 1), request.cmdObj);",+,ASSERT_BSONOBJ_EQ,"[u'BSON(""replSetGetRBID"" << 1), request.cmdObj);']",627
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT(_response.rbid);,+,ASSERT,[u'_response.rbid);'],674
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_EQ(*_response.rbid, 7);",+,ASSERT_EQ,"[u'*_response.rbid, 7);']",675
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_OK(_resolver->startup());,+,ASSERT_OK,[u'_resolver->startup());'],914
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_TRUE(_resolver->isActive());,+,ASSERT_TRUE,[u'_resolver->isActive());'],915
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    _scheduleFirstOplogEntryFetcherResponse(,+,_scheduleFirstOplogEntryFetcherResponse,[u''],917
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_FALSE(_resolver->isActive());,+,ASSERT_FALSE,[u'_resolver->isActive());'],921
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_EQUALS(ErrorCodes::OperationFailed, _response.syncSourceStatus);",+,ASSERT_EQUALS,"[u'ErrorCodes::OperationFailed, _response.syncSourceStatus);']",922
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_OK(_resolver->startup());,+,ASSERT_OK,[u'_resolver->startup());'],1034
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_TRUE(_resolver->isActive());,+,ASSERT_TRUE,[u'_resolver->isActive());'],1035
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    _scheduleFirstOplogEntryFetcherResponse(,+,_scheduleFirstOplogEntryFetcherResponse,[u''],1037
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    _scheduleNetworkErrorForFirstNode(getNet(), _selector.get(), candidate1, HostAndPort());",+,_scheduleNetworkErrorForFirstNode,"[u'getNet(), _selector.get(), candidate1, HostAndPort());']",1040
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_FALSE(_resolver->isActive());,+,ASSERT_FALSE,[u'_resolver->isActive());'],1042
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_EQUALS(candidate1, _selector->getLastBlacklistedSyncSource_forTest());",+,ASSERT_EQUALS,"[u'candidate1, _selector->getLastBlacklistedSyncSource_forTest());']",1043
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_EQUALS(getExecutor().now() + SyncSourceResolver::kFetcherErrorBlacklistDuration,",+,ASSERT_EQUALS,"[u'getExecutor().now() + SyncSourceResolver::kFetcherErrorBlacklistDuration,']",1044
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_FALSE(_resolver->isActive());,+,ASSERT_FALSE,[u'_resolver->isActive());'],1048
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_EQUALS(HostAndPort(), unittest::assertGet(_response.syncSourceStatus));",+,"ASSERT_EQUALS(HostAndPort(), unittest::assertGet",[u'_response.syncSourceStatus));'],1049
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_OK(_resolver->startup());,+,ASSERT_OK,[u'_resolver->startup());'],1058
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_TRUE(_resolver->isActive());,+,ASSERT_TRUE,[u'_resolver->isActive());'],1059
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    _scheduleFirstOplogEntryFetcherResponse(,+,_scheduleFirstOplogEntryFetcherResponse,[u''],1061
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_FALSE(_resolver->isActive());,+,ASSERT_FALSE,[u'_resolver->isActive());'],1072
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_EQUALS(candidate1, _selector->getLastBlacklistedSyncSource_forTest());",+,ASSERT_EQUALS,"[u'candidate1, _selector->getLastBlacklistedSyncSource_forTest());']",1073
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_EQUALS(getExecutor().now() + SyncSourceResolver::kFetcherErrorBlacklistDuration,",+,ASSERT_EQUALS,"[u'getExecutor().now() + SyncSourceResolver::kFetcherErrorBlacklistDuration,']",1074
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,+    ASSERT_FALSE(_resolver->isActive());,+,ASSERT_FALSE,[u'_resolver->isActive());'],1078
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,fb27a2cc681f396165372c3d24dff28c72242082,https://raw.githubusercontent.com/mongodb/mongo/0b76764eac7651ddba4c82c504aa7e8d785087c2/src/mongo/db/repl/sync_source_resolver_test.cpp,"+    ASSERT_EQUALS(HostAndPort(), unittest::assertGet(_response.syncSourceStatus));",+,"ASSERT_EQUALS(HostAndPort(), unittest::assertGet",[u'_response.syncSourceStatus));'],1079
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,"+            LOG(debugLevel) << ""Command on database "" << db",+,LOG,"[u'debugLevel) << ""Command on database "" << db']",1359
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,+                            << redact(getRedactedCopyForLogging(request.getCommandArgs()));,+,<< redact(getRedactedCopyForLogging,[u'request.getCommandArgs()));'],1361
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,+    if (!supportsWriteConcern(cmd)) {,+,if (!supportsWriteConcern,[u'cmd)) {'],1372
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,+        if (commandSpecifiesWriteConcern(cmd)) {,+,if (commandSpecifiesWriteConcern,[u'cmd)) {'],1373
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,"+        auto wcResult = extractWriteConcern(txn, cmd, db);",+,auto wcResult = extractWriteConcern,"[u'txn, cmd, db);']",1385
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,+        const auto oldWC = txn->getWriteConcern();,+,const auto oldWC = txn->getWriteConcern,[u');'],1394
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,+        ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,+,ON_BLOCK_EXIT([&] { txn->setWriteConcern,[u'oldWC); });'],1395
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,+        txn->setWriteConcern(wcResult.getValue());,+,txn->setWriteConcern,[u'wcResult.getValue());'],1396
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,+        dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern,[u').toBSON() =='],1401
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,"+            waitForWriteConcern(txn,",+,waitForWriteConcern,"[u'txn,']",1406
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,"-        uassertStatusOK(checkAuthorization(command, txn, dbname, request.getCommandArgs()));",-,uassertStatusOK,"[u'checkAuthorization(command, txn, dbname, request.getCommandArgs()));']",1665
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,+        uassertStatusOK(,+,uassertStatusOK,[u''],1666
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,"-            LOG(debugLevel) << ""Command on database "" << db",-,LOG,"[u'debugLevel) << ""Command on database "" << db']",1873
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,-                            << redact(getRedactedCopyForLogging(request.getCommandArgs()));,-,<< redact(getRedactedCopyForLogging,[u'request.getCommandArgs()));'],1875
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,-    if (!supportsWriteConcern(cmd)) {,-,if (!supportsWriteConcern,[u'cmd)) {'],1886
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,-        if (commandSpecifiesWriteConcern(cmd)) {,-,if (commandSpecifiesWriteConcern,[u'cmd)) {'],1887
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,"-        auto wcResult = extractWriteConcern(txn, cmd, db);",-,auto wcResult = extractWriteConcern,"[u'txn, cmd, db);']",1899
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,-        const auto oldWC = txn->getWriteConcern();,-,const auto oldWC = txn->getWriteConcern,[u');'],1908
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,-        ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,-,ON_BLOCK_EXIT([&] { txn->setWriteConcern,[u'oldWC); });'],1909
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,-        txn->setWriteConcern(wcResult.getValue());,-,txn->setWriteConcern,[u'wcResult.getValue());'],1910
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,-        dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,-,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern,[u').toBSON() =='],1915
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/db/commands/dbcommands.cpp,"-            waitForWriteConcern(txn,",-,waitForWriteConcern,"[u'txn,']",1920
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/s/s_only.cpp,609a01910a85de6f4de5f34c7960d661aeb4dac1,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/s/s_only.cpp,"-    std::tie(cmdObj, queryFlags) = uassertStatusOK(",-,"std::tie(cmdObj, queryFlags) = uassertStatusOK",[u''],69
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/s/s_only.cpp,609a01910a85de6f4de5f34c7960d661aeb4dac1,https://raw.githubusercontent.com/mongodb/mongo/2a286b4729da597067f18e677848e6de97abc5a5/src/mongo/s/s_only.cpp,"+    std::tie(cmdObj, queryFlags) = uassertStatusOK(",+,"std::tie(cmdObj, queryFlags) = uassertStatusOK",[u''],236
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,c609b6087b71eb926f6b00e2335505c97acb237c,https://raw.githubusercontent.com/mongodb/mongo/5fd8887479dabbcb23a4084286ef2f0d5cc267c4/src/mongo/s/commands/strategy.cpp,"-    auto statusGetDb = grid.catalogCache()->getDatabase(txn, nss.db().toString());",-,auto statusGetDb = grid.catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",460
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,c609b6087b71eb926f6b00e2335505c97acb237c,https://raw.githubusercontent.com/mongodb/mongo/5fd8887479dabbcb23a4084286ef2f0d5cc267c4/src/mongo/s/commands/strategy.cpp,"+    auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",+,auto statusGetDb = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, nss.db().toString());']",461
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,c609b6087b71eb926f6b00e2335505c97acb237c,https://raw.githubusercontent.com/mongodb/mongo/5fd8887479dabbcb23a4084286ef2f0d5cc267c4/src/mongo/s/commands/strategy.cpp,-    dassert(&LastError::get(cc()));,-,dassert,[u'&LastError::get(cc()));'],590
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,c609b6087b71eb926f6b00e2335505c97acb237c,https://raw.githubusercontent.com/mongodb/mongo/5fd8887479dabbcb23a4084286ef2f0d5cc267c4/src/mongo/s/commands/strategy.cpp,-            LastError::Disabled disableLastError(&LastError::get(cc()));,-,LastError::Disabled disableLastError,[u'&LastError::get(cc()));'],643
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,c609b6087b71eb926f6b00e2335505c97acb237c,https://raw.githubusercontent.com/mongodb/mongo/5fd8887479dabbcb23a4084286ef2f0d5cc267c4/src/mongo/s/commands/strategy.cpp,+            LastError::Disabled disableLastError(&clientLastError);,+,LastError::Disabled disableLastError,[u'&clientLastError);'],644
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,c609b6087b71eb926f6b00e2335505c97acb237c,https://raw.githubusercontent.com/mongodb/mongo/5fd8887479dabbcb23a4084286ef2f0d5cc267c4/src/mongo/s/commands/strategy.cpp,"-            batchErrorToLastError(*commandRequest, commandResponse, &LastError::get(cc()));",-,batchErrorToLastError,"[u'*commandRequest, commandResponse, &LastError::get(cc()));']",664
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,c609b6087b71eb926f6b00e2335505c97acb237c,https://raw.githubusercontent.com/mongodb/mongo/5fd8887479dabbcb23a4084286ef2f0d5cc267c4/src/mongo/s/commands/strategy.cpp,"+            batchErrorToLastError(*commandRequest, commandResponse, &clientLastError);",+,batchErrorToLastError,"[u'*commandRequest, commandResponse, &clientLastError);']",667
77b263defe4ce37eb31fa5f7dda52018b148d63a,"SERVER-27556 Cleanup sharding request processing code

No functional changes, just going in the direction of removing
request.h/.cpp.",src/mongo/s/service_entry_point_mongos.cpp,95e277d86207f9919c3f8c1f5c16c463d9929749,https://raw.githubusercontent.com/mongodb/mongo/77b263defe4ce37eb31fa5f7dda52018b148d63a/src/mongo/s/service_entry_point_mongos.cpp,"-            LOG(ex.isUserAssertion() ? 1 : 0) << ""Assertion failed""",-,LOG(ex.isUserAssertion,"[u') ? 1 : 0) << ""Assertion failed""']",173
77b263defe4ce37eb31fa5f7dda52018b148d63a,"SERVER-27556 Cleanup sharding request processing code

No functional changes, just going in the direction of removing
request.h/.cpp.",src/mongo/s/service_entry_point_mongos.cpp,95e277d86207f9919c3f8c1f5c16c463d9929749,https://raw.githubusercontent.com/mongodb/mongo/77b263defe4ce37eb31fa5f7dda52018b148d63a/src/mongo/s/service_entry_point_mongos.cpp,"-            LastError::get(cc()).setLastError(ex.getCode(), ex.what());",-,LastError::get(cc()).setLastError,"[u'ex.getCode(), ex.what());']",183
77b263defe4ce37eb31fa5f7dda52018b148d63a,"SERVER-27556 Cleanup sharding request processing code

No functional changes, just going in the direction of removing
request.h/.cpp.",src/mongo/s/service_entry_point_mongos.cpp,95e277d86207f9919c3f8c1f5c16c463d9929749,https://raw.githubusercontent.com/mongodb/mongo/77b263defe4ce37eb31fa5f7dda52018b148d63a/src/mongo/s/service_entry_point_mongos.cpp,"-            log() << ""Exception thrown""",-,log,"[u') << ""Exception thrown""']",185
77b263defe4ce37eb31fa5f7dda52018b148d63a,"SERVER-27556 Cleanup sharding request processing code

No functional changes, just going in the direction of removing
request.h/.cpp.",src/mongo/s/service_entry_point_mongos.cpp,95e277d86207f9919c3f8c1f5c16c463d9929749,https://raw.githubusercontent.com/mongodb/mongo/77b263defe4ce37eb31fa5f7dda52018b148d63a/src/mongo/s/service_entry_point_mongos.cpp,"+            LOG(1) << ""Exception thrown""",+,LOG,"[u'1) << ""Exception thrown""']",188
77b263defe4ce37eb31fa5f7dda52018b148d63a,"SERVER-27556 Cleanup sharding request processing code

No functional changes, just going in the direction of removing
request.h/.cpp.",src/mongo/s/service_entry_point_mongos.cpp,95e277d86207f9919c3f8c1f5c16c463d9929749,https://raw.githubusercontent.com/mongodb/mongo/77b263defe4ce37eb31fa5f7dda52018b148d63a/src/mongo/s/service_entry_point_mongos.cpp,"-            LastError::get(cc()).setLastError(ex.getCode(), ex.what());",-,LastError::get(cc()).setLastError,"[u'ex.getCode(), ex.what());']",199
77b263defe4ce37eb31fa5f7dda52018b148d63a,"SERVER-27556 Cleanup sharding request processing code

No functional changes, just going in the direction of removing
request.h/.cpp.",src/mongo/s/service_entry_point_mongos.cpp,95e277d86207f9919c3f8c1f5c16c463d9929749,https://raw.githubusercontent.com/mongodb/mongo/77b263defe4ce37eb31fa5f7dda52018b148d63a/src/mongo/s/service_entry_point_mongos.cpp,"+            LastError::get(txn->getClient()).setLastError(ex.getCode(), ex.what());",+,LastError::get(txn->getClient()).setLastError,"[u'ex.getCode(), ex.what());']",200
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_OK(collectionCloner->startup());,+,ASSERT_OK,[u'collectionCloner->startup());'],433
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,"+    assertRemoteCommandNameEquals(""count"", net->scheduleSuccessfulResponse(createCountResponse(0)));",+,assertRemoteCommandNameEquals,"[u'""count"", net->scheduleSuccessfulResponse(createCountResponse(0)));']",440
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,"+    assertRemoteCommandNameEquals(""listIndexes"",",+,assertRemoteCommandNameEquals,"[u'""listIndexes"",']",444
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,"+                                  net->scheduleErrorResponse(Status(ErrorCodes::HostNotFound, """")));",+,net->scheduleErrorResponse,"[u'Status(ErrorCodes::HostNotFound, """")));']",445
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_TRUE(collectionCloner->isActive());,+,ASSERT_TRUE,[u'collectionCloner->isActive());'],447
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,"+    assertRemoteCommandNameEquals(""listIndexes"", noi->getRequest());",+,assertRemoteCommandNameEquals,"[u'""listIndexes"", noi->getRequest());']",451
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_OK(collectionCloner->startup());,+,ASSERT_OK,[u'collectionCloner->startup());'],749
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,"+    assertRemoteCommandNameEquals(""count"", net->scheduleSuccessfulResponse(createCountResponse(0)));",+,assertRemoteCommandNameEquals,"[u'""count"", net->scheduleSuccessfulResponse(createCountResponse(0)));']",756
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,+    assertRemoteCommandNameEquals(,+,assertRemoteCommandNameEquals,[u''],761
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,"+    assertRemoteCommandNameEquals(""find"",",+,assertRemoteCommandNameEquals,"[u'""find"",']",767
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,"+                                  net->scheduleErrorResponse(Status(ErrorCodes::HostNotFound, """")));",+,net->scheduleErrorResponse,"[u'Status(ErrorCodes::HostNotFound, """")));']",768
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,+    ASSERT_TRUE(collectionCloner->isActive());,+,ASSERT_TRUE,[u'collectionCloner->isActive());'],770
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,7153497499ff2b3b73fe04bb5632df919c80dfda,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/collection_cloner_test.cpp,"+    assertRemoteCommandNameEquals(""find"", noi->getRequest());",+,assertRemoteCommandNameEquals,"[u'""find"", noi->getRequest());']",774
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,7626ac9824cba5d462256a5fd48934e8c9aac253,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/data_replicator_test.cpp,"+    ASSERT_OK(dr->startup(txn.get(), maxAttempts));",+,ASSERT_OK,"[u'dr->startup(txn.get(), maxAttempts));']",656
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,7626ac9824cba5d462256a5fd48934e8c9aac253,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/data_replicator_test.cpp,+    ASSERT_FALSE(_storageInterfaceWorkDone.droppedUserDBs);,+,ASSERT_FALSE,[u'_storageInterfaceWorkDone.droppedUserDBs);'],662
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,7626ac9824cba5d462256a5fd48934e8c9aac253,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/data_replicator_test.cpp,+    ASSERT_TRUE(_storageInterfaceWorkDone.droppedUserDBs);,+,ASSERT_TRUE,[u'_storageInterfaceWorkDone.droppedUserDBs);'],672
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,7626ac9824cba5d462256a5fd48934e8c9aac253,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/data_replicator_test.cpp,"+    ASSERT_OK(dr->startup(txn.get(), maxAttempts));",+,ASSERT_OK,"[u'dr->startup(txn.get(), maxAttempts));']",1158
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,7626ac9824cba5d462256a5fd48934e8c9aac253,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/data_replicator_test.cpp,"+    assertRemoteCommandNameEquals(""find"",",+,assertRemoteCommandNameEquals,"[u'""find"",']",1168
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,7626ac9824cba5d462256a5fd48934e8c9aac253,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/data_replicator_test.cpp,"+                                  net->scheduleErrorResponse(Status(ErrorCodes::HostNotFound, """")));",+,net->scheduleErrorResponse,"[u'Status(ErrorCodes::HostNotFound, """")));']",1169
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,7626ac9824cba5d462256a5fd48934e8c9aac253,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/data_replicator_test.cpp,+    ASSERT_TRUE(dr->isActive());,+,ASSERT_TRUE,[u'dr->isActive());'],1173
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,7626ac9824cba5d462256a5fd48934e8c9aac253,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/data_replicator_test.cpp,+    processSuccessfulLastOplogEntryFetcherResponse({makeOplogEntry(1)});,+,processSuccessfulLastOplogEntryFetcherResponse({makeOplogEntry,[u'1)});'],1176
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/database_cloner_test.cpp,c2e13b2e8a9727fb4696e78e14a27e146a4e730e,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/database_cloner_test.cpp,+    ASSERT_OK(_databaseCloner->startup());,+,ASSERT_OK,[u'_databaseCloner->startup());'],472
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/database_cloner_test.cpp,c2e13b2e8a9727fb4696e78e14a27e146a4e730e,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/database_cloner_test.cpp,"+    assertRemoteCommandNameEquals(""listCollections"",",+,assertRemoteCommandNameEquals,"[u'""listCollections"",']",477
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/database_cloner_test.cpp,c2e13b2e8a9727fb4696e78e14a27e146a4e730e,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/database_cloner_test.cpp,"+                                  net->scheduleErrorResponse(Status(ErrorCodes::HostNotFound, """")));",+,net->scheduleErrorResponse,"[u'Status(ErrorCodes::HostNotFound, """")));']",478
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/database_cloner_test.cpp,c2e13b2e8a9727fb4696e78e14a27e146a4e730e,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/database_cloner_test.cpp,+    ASSERT_TRUE(_databaseCloner->isActive());,+,ASSERT_TRUE,[u'_databaseCloner->isActive());'],482
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/database_cloner_test.cpp,c2e13b2e8a9727fb4696e78e14a27e146a4e730e,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/database_cloner_test.cpp,"+    assertRemoteCommandNameEquals(""listCollections"", noi->getRequest());",+,assertRemoteCommandNameEquals,"[u'""listCollections"", noi->getRequest());']",486
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,366e8c04a7ca2c02fd11d3ac85937ee03aeb8906,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/databases_cloner_test.cpp,+    ASSERT_OK(cloner.startup());,+,ASSERT_OK,[u'cloner.startup());'],486
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,366e8c04a7ca2c02fd11d3ac85937ee03aeb8906,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/databases_cloner_test.cpp,+    ASSERT_TRUE(cloner.isActive());,+,ASSERT_TRUE,[u'cloner.isActive());'],487
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,366e8c04a7ca2c02fd11d3ac85937ee03aeb8906,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/databases_cloner_test.cpp,"+    assertRemoteCommandNameEquals(""listDatabases"",",+,assertRemoteCommandNameEquals,"[u'""listDatabases"",']",493
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,366e8c04a7ca2c02fd11d3ac85937ee03aeb8906,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/databases_cloner_test.cpp,"+                                  net->scheduleErrorResponse(Status(ErrorCodes::HostNotFound, """")));",+,net->scheduleErrorResponse,"[u'Status(ErrorCodes::HostNotFound, """")));']",494
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,366e8c04a7ca2c02fd11d3ac85937ee03aeb8906,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/databases_cloner_test.cpp,+    ASSERT_TRUE(cloner.isActive());,+,ASSERT_TRUE,[u'cloner.isActive());'],498
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,366e8c04a7ca2c02fd11d3ac85937ee03aeb8906,https://raw.githubusercontent.com/mongodb/mongo/03510b1b55475fbbd8c710c70511c6397ca846e9/src/mongo/db/repl/databases_cloner_test.cpp,"+    assertRemoteCommandNameEquals(""listDatabases"", noi->getRequest());",+,assertRemoteCommandNameEquals,"[u'""listDatabases"", noi->getRequest());']",502
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_apply_ops_cmd.cpp,c892878442215838656b39082ab58d1d5f36e7c5,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_apply_ops_cmd.cpp,+    bool supportsWriteConcern(const BSONObj& cmd) const override {,+,bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],50
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_apply_ops_cmd.cpp,c892878442215838656b39082ab58d1d5f36e7c5,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_apply_ops_cmd.cpp,"+        uasserted(ErrorCodes::CommandNotSupported, ""applyOps not allowed through mongos"");",+,uasserted,"[u'ErrorCodes::CommandNotSupported, ""applyOps not allowed through mongos"");']",66
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_available_query_options_cmd.cpp,0eed4f14c9b9b7e4e41b65763932a36da3c0e7fe,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_available_query_options_cmd.cpp,+    bool supportsWriteConcern(const BSONObj& cmd) const override {,+,bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],47
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_commands_common.cpp,8a309d3d31b139da0a884513cf87d649487d38d5,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_commands_common.cpp,+    uassertStatusOK(Grid::get(txn)->catalogClient(txn)->getCollections(,+,uassertStatusOK(Grid::get(txn)->catalogClient,[u'txn)->getCollections('],240
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_drop_database_cmd.cpp,33a4f1d64b8cf72db566fe882714d8eb07166312,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_drop_database_cmd.cpp,"-            uassertStatusOK(catalogClient->dropCollection(txn, NamespaceString(ns)));",-,uassertStatusOK,"[u'catalogClient->dropCollection(txn, NamespaceString(ns)));']",122
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_drop_database_cmd.cpp,33a4f1d64b8cf72db566fe882714d8eb07166312,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_drop_database_cmd.cpp,"+            uassertStatusOK(catalogClient->dropCollection(txn, nss));",+,uassertStatusOK,"[u'catalogClient->dropCollection(txn, nss));']",125
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,-        Grid::get(txn)->catalogCache()->invalidate(dbname);,-,Grid::get(txn)->catalogCache,[u')->invalidate(dbname);'],135
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,+        auto const catalogClient = Grid::get(txn)->catalogClient(txn);,+,auto const catalogClient = Grid::get(txn)->catalogClient,[u'txn);'],136
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,+        auto const catalogCache = Grid::get(txn)->catalogCache();,+,auto const catalogCache = Grid::get(txn)->catalogCache,[u');'],137
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"-        auto status = grid.catalogCache()->getDatabase(txn, dbname);",-,auto status = grid.catalogCache,"[u')->getDatabase(txn, dbname);']",140
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+        auto config = uassertStatusOK(catalogCache->getDatabase(txn, dbname));",+,auto config = uassertStatusOK,"[u'catalogCache->getDatabase(txn, dbname));']",148
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,-            log() << msg;,-,log,[u') << msg;'],186
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+            uassertStatusOK(shardRegistry->getShard(txn, config->getPrimaryId()));",+,uassertStatusOK,"[u'shardRegistry->getShard(txn, config->getPrimaryId()));']",191
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,+                log() << msg;,+,log,[u') << msg;'],200
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+                uasserted(toShardStatus.getStatus().code(), msg);",+,uasserted,"[u'toShardStatus.getStatus().code(), msg);']",201
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"-            uassertStatusOK(grid.shardRegistry()->getShard(txn, config->getPrimaryId()));",-,uassertStatusOK,"[u'grid.shardRegistry()->getShard(txn, config->getPrimaryId()));']",205
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+        uassert(ErrorCodes::IllegalOperation,",+,uassert,"[u'ErrorCodes::IllegalOperation,']",213
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,-        auto scopedDistLock = grid.catalogClient(txn)->getDistLockManager()->lock(,-,auto scopedDistLock = grid.catalogClient,[u'txn)->getDistLockManager()->lock('],221
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,+        auto scopedDistLock = uassertStatusOK(catalogClient->getDistLockManager()->lock(,+,auto scopedDistLock = uassertStatusOK,[u'catalogClient->getDistLockManager()->lock('],228
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,-        auto catalogClient = grid.catalogClient(txn);,-,auto catalogClient = grid.catalogClient,[u'txn);'],239
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"-        catalogClient->logChange(txn,",-,catalogClient->logChange,"[u'txn,']",240
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,+        catalogClient->logChange(,+,catalogClient->logChange,[u''],248
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+            _buildMoveLogEntry(dbname, fromShard->toString(), toShard->toString(), shardedColls),",+,_buildMoveLogEntry,"[u'dbname, fromShard->toString(), toShard->toString(), shardedColls),']",252
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"-                         << txn->getWriteConcern().toBSON()),",-,<< txn->getWriteConcern,"[u').toBSON()),']",331
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"-            log() << ""clone failed"" << redact(cloneRes);",-,log,"[u') << ""clone failed"" << redact(cloneRes);']",336
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"-            appendWriteConcernErrorToCmdResponse(toShard->getId(), wcErrorElem, result);",-,appendWriteConcernErrorToCmdResponse,"[u'toShard->getId(), wcErrorElem, result);']",343
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+                             << txn->getWriteConcern().toBSON()),",+,<< txn->getWriteConcern,"[u').toBSON()),']",359
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+                log() << ""clone failed"" << redact(cloneRes);",+,log,"[u') << ""clone failed"" << redact(cloneRes);']",364
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+                appendWriteConcernErrorToCmdResponse(toShard->getId(), wcErrorElem, result);",+,appendWriteConcernErrorToCmdResponse,"[u'toShard->getId(), wcErrorElem, result);']",370
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+            auto dbt = uassertStatusOK(catalogClient->getDatabase(txn, dbname)).value;",+,auto dbt = uassertStatusOK,"[u'catalogClient->getDatabase(txn, dbname)).value;']",379
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"-            uassertStatusOK(Grid::get(txn)->catalogClient(txn)->updateDatabase(txn, dbname, dbt));",-,uassertStatusOK(Grid::get(txn)->catalogClient,"[u'txn)->updateDatabase(txn, dbname, dbt));']",383
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+            uassertStatusOK(catalogClient->updateDatabase(txn, dbname, dbt));",+,uassertStatusOK,"[u'catalogClient->updateDatabase(txn, dbname, dbt));']",384
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,-        Grid::get(txn)->catalogCache()->invalidate(dbname);,-,Grid::get(txn)->catalogCache,[u')->invalidate(dbname);'],389
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"-        catalogClient->logChange(txn,",-,catalogClient->logChange,"[u'txn,']",514
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,+        catalogClient->logChange(,+,catalogClient->logChange,[u''],519
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+            _buildMoveLogEntry(dbname, oldPrimary, toShard->toString(), shardedColls),",+,_buildMoveLogEntry,"[u'dbname, oldPrimary, toShard->toString(), shardedColls),']",523
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,02b8bfc43db2bfe7be1df6591587c7ed46d73221,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+    static BSONObj _buildMoveLogEntry(const std::string& db,",+,static BSONObj _buildMoveLogEntry,"[u'const std::string& db,']",534
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,2d2283382f11b562d017b9f916d9090cc9742301,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,-    virtual bool supportsWriteConcern(const BSONObj& cmd) const override {,-,virtual bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],99
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,2d2283382f11b562d017b9f916d9090cc9742301,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+    bool supportsWriteConcern(const BSONObj& cmd) const override {,+,bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],100
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,2d2283382f11b562d017b9f916d9090cc9742301,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,"-        uassert(ErrorCodes::InvalidNamespace, ""Invalid namespace"", nss.isValid());",-,uassert,"[u'ErrorCodes::InvalidNamespace, ""Invalid namespace"", nss.isValid());']",172
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,2d2283382f11b562d017b9f916d9090cc9742301,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,"-        auto config = uassertStatusOK(grid.catalogCache()->getDatabase(txn, nss.db().toString()));",-,auto config = uassertStatusOK(grid.catalogCache,"[u')->getDatabase(txn, nss.db().toString()));']",174
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,2d2283382f11b562d017b9f916d9090cc9742301,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+        auto const catalogClient = Grid::get(txn)->catalogClient(txn);,+,auto const catalogClient = Grid::get(txn)->catalogClient,[u'txn);'],175
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,2d2283382f11b562d017b9f916d9090cc9742301,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,"+        auto scopedShardedDb = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",+,auto scopedShardedDb = uassertStatusOK,"[u'ScopedShardDatabase::getExisting(txn, nss.db()));']",178
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,2d2283382f11b562d017b9f916d9090cc9742301,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,"-                uassertStatusOK(grid.shardRegistry()->getShard(txn, config->getPrimaryId()));",-,uassertStatusOK,"[u'grid.shardRegistry()->getShard(txn, config->getPrimaryId()));']",322
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,2d2283382f11b562d017b9f916d9090cc9742301,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,"+                uassertStatusOK(shardRegistry->getShard(txn, config->getPrimaryId()));",+,uassertStatusOK,"[u'shardRegistry->getShard(txn, config->getPrimaryId()));']",325
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,2d2283382f11b562d017b9f916d9090cc9742301,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,"-        Status status = grid.catalogClient(txn)->shardCollection(txn,",-,Status status = grid.catalogClient,"[u'txn)->shardCollection(txn,']",648
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,2d2283382f11b562d017b9f916d9090cc9742301,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/cluster_shard_collection_cmd.cpp,"-        config = uassertStatusOK(grid.catalogCache()->getDatabase(txn, nss.db().toString()));",-,config = uassertStatusOK(grid.catalogCache,"[u')->getDatabase(txn, nss.db().toString()));']",667
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,-    virtual bool supportsWriteConcern(const BSONObj& cmd) const override {,-,virtual bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],643
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,+    bool supportsWriteConcern(const BSONObj& cmd) const override {,+,bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],645
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,"-            uassert(ErrorCodes::InvalidNamespace,",-,uassert,"[u'ErrorCodes::InvalidNamespace,']",705
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,"-            uassert(ErrorCodes::InvalidNamespace,",-,uassert,"[u'ErrorCodes::InvalidNamespace,']",709
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,"-                uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, fromdb));",-,uassertStatusOK(Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, fromdb));']",715
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,"-            uassert(13400, ""don't know where source DB is"", confFrom);",-,uassert,"[u'13400, ""don\'t know where source DB is"", confFrom);']",718
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,"-            uassert(13401, ""cant copy from sharded DB"", !confFrom->isShardingEnabled());",-,uassert,"[u'13401, ""cant copy from sharded DB"", !confFrom->isShardingEnabled());']",719
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,"+        uassert(ErrorCodes::InvalidNamespace,",+,uassert,"[u'ErrorCodes::InvalidNamespace,']",721
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,+        uassert(,+,uassert,[u''],725
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,"+        auto scopedFromDb = uassertStatusOK(ScopedShardDatabase::getExisting(txn, fromdb));",+,auto scopedFromDb = uassertStatusOK,"[u'ScopedShardDatabase::getExisting(txn, fromdb));']",736
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,"+        uassert(ErrorCodes::IllegalOperation,",+,uassert,"[u'ErrorCodes::IllegalOperation,']",737
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,-                const auto shard = uassertStatusOK(,-,const auto shard = uassertStatusOK,[u''],742
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,+            const auto shard = uassertStatusOK(,+,const auto shard = uassertStatusOK,[u''],755
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,-    virtual bool supportsWriteConcern(const BSONObj& cmd) const override {,-,virtual bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],1813
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,943f831dfa637d13d326b9865f33f1f93c3e0753,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/commands/commands_public.cpp,-    virtual bool supportsWriteConcern(const BSONObj& cmd) const override {,-,virtual bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],1998
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/config.cpp,256362be5824e5155af4128214dda966ef684609,https://raw.githubusercontent.com/mongodb/mongo/efb9ace86bac133fb9f9c17fbb598a45871206ea/src/mongo/s/config.cpp,"-        log() << ""Coll : "" << i->first << "" sharded? "" << i->second.isSharded();",-,log,"[u') << ""Coll : "" << i->first << "" sharded? "" << i->second.isSharded();']",477
5d24dd0ade8b30d9e591eda0f8a008f2f7bde881,"SERVER-27527 Remove explicit shardingEnabled check for databases in M/R and aggregation

The sharded property should be read from the collection itself and not the
database.",src/mongo/s/commands/cluster_aggregate.cpp,9f62f50613f85bc8d0899b53bb5a38f1bb20a25b,https://raw.githubusercontent.com/mongodb/mongo/5d24dd0ade8b30d9e591eda0f8a008f2f7bde881/src/mongo/s/commands/cluster_aggregate.cpp,"-    auto status = grid.catalogCache()->getDatabase(txn, dbname);",-,auto status = grid.catalogCache,"[u')->getDatabase(txn, dbname);']",87
5d24dd0ade8b30d9e591eda0f8a008f2f7bde881,"SERVER-27527 Remove explicit shardingEnabled check for databases in M/R and aggregation

The sharded property should be read from the collection itself and not the
database.",src/mongo/s/commands/cluster_aggregate.cpp,9f62f50613f85bc8d0899b53bb5a38f1bb20a25b,https://raw.githubusercontent.com/mongodb/mongo/5d24dd0ade8b30d9e591eda0f8a008f2f7bde881/src/mongo/s/commands/cluster_aggregate.cpp,"-    const auto mergingShard = uassertStatusOK(grid.shardRegistry()->getShard(txn, mergingShardId));",-,const auto mergingShard = uassertStatusOK,"[u'grid.shardRegistry()->getShard(txn, mergingShardId));']",342
5d24dd0ade8b30d9e591eda0f8a008f2f7bde881,"SERVER-27527 Remove explicit shardingEnabled check for databases in M/R and aggregation

The sharded property should be read from the collection itself and not the
database.",src/mongo/s/commands/cluster_aggregate.cpp,9f62f50613f85bc8d0899b53bb5a38f1bb20a25b,https://raw.githubusercontent.com/mongodb/mongo/5d24dd0ade8b30d9e591eda0f8a008f2f7bde881/src/mongo/s/commands/cluster_aggregate.cpp,"+        uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, mergingShardId));",+,uassertStatusOK,"[u'Grid::get(txn)->shardRegistry()->getShard(txn, mergingShardId));']",344
86e6d8415f250e8b9806482d880e315283c6041b,SERVER-23420 Remove use of GNU extensions in parse_number_test.cpp,src/mongo/base/parse_number_test.cpp,76b1018af214d3b56aa7af61fb85f200b6ed55cd,https://raw.githubusercontent.com/mongodb/mongo/86e6d8415f250e8b9806482d880e315283c6041b/src/mongo/base/parse_number_test.cpp,"-    ASSERT_PARSES(double, ""0xff"", 0xff);",-,ASSERT_PARSES,"[u'double, ""0xff"", 0xff);']",294
86e6d8415f250e8b9806482d880e315283c6041b,SERVER-23420 Remove use of GNU extensions in parse_number_test.cpp,src/mongo/base/parse_number_test.cpp,76b1018af214d3b56aa7af61fb85f200b6ed55cd,https://raw.githubusercontent.com/mongodb/mongo/86e6d8415f250e8b9806482d880e315283c6041b/src/mongo/base/parse_number_test.cpp,"-    ASSERT_PARSES(double, ""-0xff"", -0xff);",-,ASSERT_PARSES,"[u'double, ""-0xff"", -0xff);']",295
86e6d8415f250e8b9806482d880e315283c6041b,SERVER-23420 Remove use of GNU extensions in parse_number_test.cpp,src/mongo/base/parse_number_test.cpp,76b1018af214d3b56aa7af61fb85f200b6ed55cd,https://raw.githubusercontent.com/mongodb/mongo/86e6d8415f250e8b9806482d880e315283c6041b/src/mongo/base/parse_number_test.cpp,"-    ASSERT_PARSES(double, ""0xabcab.defdefP-10"", 0xabcab.defdefP-10);",-,ASSERT_PARSES,"[u'double, ""0xabcab.defdefP-10"", 0xabcab.defdefP-10);']",296
86e6d8415f250e8b9806482d880e315283c6041b,SERVER-23420 Remove use of GNU extensions in parse_number_test.cpp,src/mongo/base/parse_number_test.cpp,76b1018af214d3b56aa7af61fb85f200b6ed55cd,https://raw.githubusercontent.com/mongodb/mongo/86e6d8415f250e8b9806482d880e315283c6041b/src/mongo/base/parse_number_test.cpp,"+    ASSERT_PARSES(double, ""0xff"", 255);",+,ASSERT_PARSES,"[u'double, ""0xff"", 255);']",297
86e6d8415f250e8b9806482d880e315283c6041b,SERVER-23420 Remove use of GNU extensions in parse_number_test.cpp,src/mongo/base/parse_number_test.cpp,76b1018af214d3b56aa7af61fb85f200b6ed55cd,https://raw.githubusercontent.com/mongodb/mongo/86e6d8415f250e8b9806482d880e315283c6041b/src/mongo/base/parse_number_test.cpp,"+    ASSERT_PARSES(double, ""-0xff"", -255);",+,ASSERT_PARSES,"[u'double, ""-0xff"", -255);']",298
86e6d8415f250e8b9806482d880e315283c6041b,SERVER-23420 Remove use of GNU extensions in parse_number_test.cpp,src/mongo/base/parse_number_test.cpp,76b1018af214d3b56aa7af61fb85f200b6ed55cd,https://raw.githubusercontent.com/mongodb/mongo/86e6d8415f250e8b9806482d880e315283c6041b/src/mongo/base/parse_number_test.cpp,"+    ASSERT_PARSES(double, ""0xabcab.defdefP-10"", 687.16784283419838);",+,ASSERT_PARSES,"[u'double, ""0xabcab.defdefP-10"", 687.16784283419838);']",299
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/concurrency/lock_state.cpp,898f9cd462e2c612920bbbe36b1ce84caf6be127,https://raw.githubusercontent.com/mongodb/mongo/c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a/src/mongo/db/concurrency/lock_state.cpp,+void LockerImpl<IsForMMAPV1>::assertEmptyAndReset() {,+,void LockerImpl<IsForMMAPV1>::assertEmptyAndReset,[u') {'],195
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/concurrency/lock_state.cpp,898f9cd462e2c612920bbbe36b1ce84caf6be127,https://raw.githubusercontent.com/mongodb/mongo/c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a/src/mongo/db/concurrency/lock_state.cpp,+    invariant(!inAWriteUnitOfWork());,+,invariant(!inAWriteUnitOfWork,[u'));'],196
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/concurrency/lock_state.cpp,898f9cd462e2c612920bbbe36b1ce84caf6be127,https://raw.githubusercontent.com/mongodb/mongo/c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a/src/mongo/db/concurrency/lock_state.cpp,-    invariant(!inAWriteUnitOfWork());,-,invariant(!inAWriteUnitOfWork,[u'));'],305
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/concurrency/lock_state.cpp,898f9cd462e2c612920bbbe36b1ce84caf6be127,https://raw.githubusercontent.com/mongodb/mongo/c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a/src/mongo/db/concurrency/lock_state.cpp,+    assertEmptyAndReset();,+,assertEmptyAndReset,[u');'],312
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/operation_context_impl.cpp,7fae6cfa4a78142da21fa632134cb08f358e6972,https://raw.githubusercontent.com/mongodb/mongo/c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a/src/mongo/db/operation_context_impl.cpp,+    lockState()->assertEmptyAndReset();,+,lockState()->assertEmptyAndReset,[u');'],80
46daec6a95628d336762c5f78430f54d361e63c0,SERVER-26126 Fix repl unittests,src/mongo/db/operation_context.cpp,8151fe97dfac7d36eb938d22b8259424c9cc3729,https://raw.githubusercontent.com/mongodb/mongo/46daec6a95628d336762c5f78430f54d361e63c0/src/mongo/db/operation_context.cpp,+    dassert(_locker);,+,dassert,[u'_locker);'],402
7b68733fae7ce8d91f9a5fda67b9972c15a20ef0,SERVER-26126 Remove broken LockState caching,src/mongo/db/concurrency/lock_state.cpp,9235f56bbb42cc01ec30bcf8a2d6c4ac579e8a6b,https://raw.githubusercontent.com/mongodb/mongo/7b68733fae7ce8d91f9a5fda67b9972c15a20ef0/src/mongo/db/concurrency/lock_state.cpp,-void LockerImpl<IsForMMAPV1>::assertEmptyAndReset() {,-,void LockerImpl<IsForMMAPV1>::assertEmptyAndReset,[u') {'],195
7b68733fae7ce8d91f9a5fda67b9972c15a20ef0,SERVER-26126 Remove broken LockState caching,src/mongo/db/concurrency/lock_state.cpp,9235f56bbb42cc01ec30bcf8a2d6c4ac579e8a6b,https://raw.githubusercontent.com/mongodb/mongo/7b68733fae7ce8d91f9a5fda67b9972c15a20ef0/src/mongo/db/concurrency/lock_state.cpp,-    invariant(!inAWriteUnitOfWork());,-,invariant(!inAWriteUnitOfWork,[u'));'],196
7b68733fae7ce8d91f9a5fda67b9972c15a20ef0,SERVER-26126 Remove broken LockState caching,src/mongo/db/concurrency/lock_state.cpp,9235f56bbb42cc01ec30bcf8a2d6c4ac579e8a6b,https://raw.githubusercontent.com/mongodb/mongo/7b68733fae7ce8d91f9a5fda67b9972c15a20ef0/src/mongo/db/concurrency/lock_state.cpp,-    assertEmptyAndReset();,-,assertEmptyAndReset,[u');'],294
7b68733fae7ce8d91f9a5fda67b9972c15a20ef0,SERVER-26126 Remove broken LockState caching,src/mongo/db/concurrency/lock_state.cpp,9235f56bbb42cc01ec30bcf8a2d6c4ac579e8a6b,https://raw.githubusercontent.com/mongodb/mongo/7b68733fae7ce8d91f9a5fda67b9972c15a20ef0/src/mongo/db/concurrency/lock_state.cpp,+    invariant(!inAWriteUnitOfWork());,+,invariant(!inAWriteUnitOfWork,[u'));'],295
7b68733fae7ce8d91f9a5fda67b9972c15a20ef0,SERVER-26126 Remove broken LockState caching,src/mongo/db/operation_context.cpp,f96c644b431b998eed365bc5bd7d4c5e79433385,https://raw.githubusercontent.com/mongodb/mongo/7b68733fae7ce8d91f9a5fda67b9972c15a20ef0/src/mongo/db/operation_context.cpp,-    dassert(_locker);,-,dassert,[u'_locker);'],402
7b68733fae7ce8d91f9a5fda67b9972c15a20ef0,SERVER-26126 Remove broken LockState caching,src/mongo/db/operation_context_impl.cpp,0ccdbbbfbef81228fa6d7d272f4063596b1c203d,https://raw.githubusercontent.com/mongodb/mongo/7b68733fae7ce8d91f9a5fda67b9972c15a20ef0/src/mongo/db/operation_context_impl.cpp,-    lockState()->assertEmptyAndReset();,-,lockState()->assertEmptyAndReset,[u');'],80
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/catalog/catalog_cache.cpp,0e58dbc7001a7851dde4772ad86fb539d45f6aac,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/catalog/catalog_cache.cpp,"-    auto status = grid.catalogClient(txn)->getDatabase(txn, dbName);",-,auto status = grid.catalogClient,"[u'txn)->getDatabase(txn, dbName);']",66
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/catalog/catalog_cache.cpp,0e58dbc7001a7851dde4772ad86fb539d45f6aac,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/catalog/catalog_cache.cpp,"+    auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName);",+,auto status = Grid::get(txn)->catalogClient,"[u'txn)->getDatabase(txn, dbName);']",67
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,cb17f74f0053e9801bbca0476613b4dc2cdb3102,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/config.cpp,"-    uassertStatusOK(grid.catalogClient(txn)->updateCollection(txn, ns, coll));",-,uassertStatusOK(grid.catalogClient,"[u'txn)->updateCollection(txn, ns, coll));']",149
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,cb17f74f0053e9801bbca0476613b4dc2cdb3102,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/config.cpp,-        uassertStatusOK(,-,uassertStatusOK,[u''],339
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,cb17f74f0053e9801bbca0476613b4dc2cdb3102,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/config.cpp,"-            grid.catalogClient(txn)->getChunks(txn,",-,grid.catalogClient,"[u'txn)->getChunks(txn,']",340
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,cb17f74f0053e9801bbca0476613b4dc2cdb3102,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/config.cpp,+        uassertStatusOK(Grid::get(txn)->catalogClient(txn)->getChunks(,+,uassertStatusOK(Grid::get(txn)->catalogClient,[u'txn)->getChunks('],347
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,cb17f74f0053e9801bbca0476613b4dc2cdb3102,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/config.cpp,"-    auto status = grid.catalogClient(txn)->getDatabase(txn, _name);",-,auto status = grid.catalogClient,"[u'txn)->getDatabase(txn, _name);']",536
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,cb17f74f0053e9801bbca0476613b4dc2cdb3102,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/config.cpp,+    const auto catalogClient = Grid::get(txn)->catalogClient(txn);,+,const auto catalogClient = Grid::get(txn)->catalogClient,[u'txn);'],537
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,cb17f74f0053e9801bbca0476613b4dc2cdb3102,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/config.cpp,-    uassertStatusOK(grid.catalogClient(txn)->getCollections(,-,uassertStatusOK(grid.catalogClient,[u'txn)->getCollections('],569
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,cb17f74f0053e9801bbca0476613b4dc2cdb3102,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/config.cpp,+    uassertStatusOK(,+,uassertStatusOK,[u''],571
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,cb17f74f0053e9801bbca0476613b4dc2cdb3102,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/config.cpp,"-        uassertStatusOK(grid.catalogClient(txn)->updateDatabase(txn, _name, dbt));",-,uassertStatusOK(grid.catalogClient,"[u'txn)->updateDatabase(txn, _name, dbt));']",619
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,cb17f74f0053e9801bbca0476613b4dc2cdb3102,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/config.cpp,-        grid.catalogCache()->invalidate(_name);,-,grid.catalogCache,[u')->invalidate(_name);'],652
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,cb17f74f0053e9801bbca0476613b4dc2cdb3102,https://raw.githubusercontent.com/mongodb/mongo/6d8018b970374182904d197cfe7ad3532dbd613c/src/mongo/s/config.cpp,+        Grid::get(txn)->catalogCache()->invalidate(_name);,+,Grid::get(txn)->catalogCache,[u')->invalidate(_name);'],653
46f05091c9a7d46b3233a12f28d04e29b6f1dfc9,SERVER-24398 Remove use of boost NOEXCEPT macros in favor of true C++11 noexcept,src/mongo/unittest/unittest.cpp,a39383a79a277c69b8a62e53ef9082464cd6df67,https://raw.githubusercontent.com/mongodb/mongo/46f05091c9a7d46b3233a12f28d04e29b6f1dfc9/src/mongo/unittest/unittest.cpp,-TestAssertionFailure::~TestAssertionFailure() BOOST_NOEXCEPT_IF(false) {,-,TestAssertionFailure::~TestAssertionFailure,[u') BOOST_NOEXCEPT_IF(false) {'],457
46f05091c9a7d46b3233a12f28d04e29b6f1dfc9,SERVER-24398 Remove use of boost NOEXCEPT macros in favor of true C++11 noexcept,src/mongo/unittest/unittest.cpp,a39383a79a277c69b8a62e53ef9082464cd6df67,https://raw.githubusercontent.com/mongodb/mongo/46f05091c9a7d46b3233a12f28d04e29b6f1dfc9/src/mongo/unittest/unittest.cpp,+TestAssertionFailure::~TestAssertionFailure() noexcept(false) {,+,TestAssertionFailure::~TestAssertionFailure,[u') noexcept(false) {'],458
6c4794728036f4a5e9169b895e2a9fb6c328812b,SERVER-27466 move transitionToPrimaryHangBeforeInitializingConfigDatabase to before taking the global exclusive lock,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,9413d1219afc2127891536b14e3ec5339ff888dc,https://raw.githubusercontent.com/mongodb/mongo/6c4794728036f4a5e9169b895e2a9fb6c328812b/src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,"-            log() << ""transition to primary - """,-,log,"[u') << ""transition to primary - ""']",748
6c4794728036f4a5e9169b895e2a9fb6c328812b,SERVER-27466 move transitionToPrimaryHangBeforeInitializingConfigDatabase to before taking the global exclusive lock,src/mongo/db/repl/replication_coordinator_impl.cpp,e012528b96c7536d513ab4f6a7b8cff55bf8aa95,https://raw.githubusercontent.com/mongodb/mongo/6c4794728036f4a5e9169b895e2a9fb6c328812b/src/mongo/db/repl/replication_coordinator_impl.cpp,"+        log() << ""transition to primary - """,+,log,"[u') << ""transition to primary - ""']",967
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,2b46213ec6b38f84a4915f65fbbe451416111291,https://raw.githubusercontent.com/mongodb/mongo/2038664084eeaa89e1a8c520a7fabc789545e937/src/mongo/s/client/shard_registry.cpp,"+    auto connString = fassertStatusOK(28805, ConnectionString::parse(newConnectionString));",+,auto connString = fassertStatusOK,"[u'28805, ConnectionString::parse(newConnectionString));']",315
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,2b46213ec6b38f84a4915f65fbbe451416111291,https://raw.githubusercontent.com/mongodb/mongo/2038664084eeaa89e1a8c520a7fabc789545e937/src/mongo/s/client/shard_registry.cpp,"+            LOG(1) << ""shard not found for set: "" << newConnectionString",+,LOG,"[u'1) << ""shard not found for set: "" << newConnectionString']",329
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,2b46213ec6b38f84a4915f65fbbe451416111291,https://raw.githubusercontent.com/mongodb/mongo/2038664084eeaa89e1a8c520a7fabc789545e937/src/mongo/s/client/shard_registry.cpp,+        auto status = Grid::get(txn.get())->catalogClient(txn.get())->updateConfigDocument(,+,auto status = Grid::get(txn.get())->catalogClient,[u'txn.get())->updateConfigDocument('],339
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,2b46213ec6b38f84a4915f65fbbe451416111291,https://raw.githubusercontent.com/mongodb/mongo/2038664084eeaa89e1a8c520a7fabc789545e937/src/mongo/s/client/shard_registry.cpp,"+            error() << ""RSChangeWatcher: could not update config db for set: "" << setName",+,error,"[u') << ""RSChangeWatcher: could not update config db for set: "" << setName']",347
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/config.cpp,82a396290251ce129fb43515dbe69eab5c4c878f,https://raw.githubusercontent.com/mongodb/mongo/2038664084eeaa89e1a8c520a7fabc789545e937/src/mongo/s/config.cpp,"-    auto connString = fassertStatusOK(28805, ConnectionString::parse(newConnectionString));",-,auto connString = fassertStatusOK,"[u'28805, ConnectionString::parse(newConnectionString));']",543
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/config.cpp,82a396290251ce129fb43515dbe69eab5c4c878f,https://raw.githubusercontent.com/mongodb/mongo/2038664084eeaa89e1a8c520a7fabc789545e937/src/mongo/s/config.cpp,"-            LOG(1) << ""shard not found for set: "" << newConnectionString",-,LOG,"[u'1) << ""shard not found for set: "" << newConnectionString']",557
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/config.cpp,82a396290251ce129fb43515dbe69eab5c4c878f,https://raw.githubusercontent.com/mongodb/mongo/2038664084eeaa89e1a8c520a7fabc789545e937/src/mongo/s/config.cpp,-        auto status = grid.catalogClient(txn.get())->updateConfigDocument(,-,auto status = grid.catalogClient,[u'txn.get())->updateConfigDocument('],567
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/config.cpp,82a396290251ce129fb43515dbe69eab5c4c878f,https://raw.githubusercontent.com/mongodb/mongo/2038664084eeaa89e1a8c520a7fabc789545e937/src/mongo/s/config.cpp,"-            error() << ""RSChangeWatcher: could not update config db for set: "" << setName",-,error,"[u') << ""RSChangeWatcher: could not update config db for set: "" << setName']",575
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,"-            LOG(debugLevel) << ""Command on database "" << db",-,LOG,"[u'debugLevel) << ""Command on database "" << db']",1359
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,-                            << redact(getRedactedCopyForLogging(request.getCommandArgs()));,-,<< redact(getRedactedCopyForLogging,[u'request.getCommandArgs()));'],1361
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,-    if (!supportsWriteConcern(cmd)) {,-,if (!supportsWriteConcern,[u'cmd)) {'],1372
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,-        if (commandSpecifiesWriteConcern(cmd)) {,-,if (commandSpecifiesWriteConcern,[u'cmd)) {'],1373
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,"-        auto wcResult = extractWriteConcern(txn, cmd, db);",-,auto wcResult = extractWriteConcern,"[u'txn, cmd, db);']",1385
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,-        const auto oldWC = txn->getWriteConcern();,-,const auto oldWC = txn->getWriteConcern,[u');'],1394
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,-        ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,-,ON_BLOCK_EXIT([&] { txn->setWriteConcern,[u'oldWC); });'],1395
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,-        txn->setWriteConcern(wcResult.getValue());,-,txn->setWriteConcern,[u'wcResult.getValue());'],1396
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,-        dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,-,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern,[u').toBSON() =='],1401
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,"-            waitForWriteConcern(txn,",-,waitForWriteConcern,"[u'txn,']",1406
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,-        uassertStatusOK(,-,uassertStatusOK,[u''],1521
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,"+        uassertStatusOK(checkAuthorization(command, txn, dbname, request.getCommandArgs()));",+,uassertStatusOK,"[u'checkAuthorization(command, txn, dbname, request.getCommandArgs()));']",1523
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,"+            LOG(debugLevel) << ""Command on database "" << db",+,LOG,"[u'debugLevel) << ""Command on database "" << db']",1728
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,+                            << redact(getRedactedCopyForLogging(request.getCommandArgs()));,+,<< redact(getRedactedCopyForLogging,[u'request.getCommandArgs()));'],1730
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,+    if (!supportsWriteConcern(cmd)) {,+,if (!supportsWriteConcern,[u'cmd)) {'],1741
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,+        if (commandSpecifiesWriteConcern(cmd)) {,+,if (commandSpecifiesWriteConcern,[u'cmd)) {'],1742
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,"+        auto wcResult = extractWriteConcern(txn, cmd, db);",+,auto wcResult = extractWriteConcern,"[u'txn, cmd, db);']",1754
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,+        const auto oldWC = txn->getWriteConcern();,+,const auto oldWC = txn->getWriteConcern,[u');'],1763
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,+        ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,+,ON_BLOCK_EXIT([&] { txn->setWriteConcern,[u'oldWC); });'],1764
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,+        txn->setWriteConcern(wcResult.getValue());,+,txn->setWriteConcern,[u'wcResult.getValue());'],1765
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,+        dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern,[u').toBSON() =='],1770
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,64b0d3e2b114dfc1cf509bcf3fbc0a19769acae0,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/db/commands/dbcommands.cpp,"+            waitForWriteConcern(txn,",+,waitForWriteConcern,"[u'txn,']",1775
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/s/s_only.cpp,c7db840cd14dd5ae729282d95498a684c4ee1115,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/s/s_only.cpp,"+    std::tie(cmdObj, queryFlags) = uassertStatusOK(",+,"std::tie(cmdObj, queryFlags) = uassertStatusOK",[u''],75
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/s/s_only.cpp,c7db840cd14dd5ae729282d95498a684c4ee1115,https://raw.githubusercontent.com/mongodb/mongo/1d5f9af9a409f3a2bff2742afd1c55580477cea8/src/mongo/s/s_only.cpp,"-    std::tie(cmdObj, queryFlags) = uassertStatusOK(",-,"std::tie(cmdObj, queryFlags) = uassertStatusOK",[u''],260
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,"+            LOG(debugLevel) << ""Command on database "" << db",+,LOG,"[u'debugLevel) << ""Command on database "" << db']",1359
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,+                            << redact(getRedactedCopyForLogging(request.getCommandArgs()));,+,<< redact(getRedactedCopyForLogging,[u'request.getCommandArgs()));'],1361
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,+    if (!supportsWriteConcern(cmd)) {,+,if (!supportsWriteConcern,[u'cmd)) {'],1372
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,+        if (commandSpecifiesWriteConcern(cmd)) {,+,if (commandSpecifiesWriteConcern,[u'cmd)) {'],1373
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,"+        auto wcResult = extractWriteConcern(txn, cmd, db);",+,auto wcResult = extractWriteConcern,"[u'txn, cmd, db);']",1385
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,+        const auto oldWC = txn->getWriteConcern();,+,const auto oldWC = txn->getWriteConcern,[u');'],1394
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,+        ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,+,ON_BLOCK_EXIT([&] { txn->setWriteConcern,[u'oldWC); });'],1395
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,+        txn->setWriteConcern(wcResult.getValue());,+,txn->setWriteConcern,[u'wcResult.getValue());'],1396
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,+        dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern,[u').toBSON() =='],1401
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,"+            waitForWriteConcern(txn,",+,waitForWriteConcern,"[u'txn,']",1406
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,"-        uassertStatusOK(checkAuthorization(command, txn, dbname, request.getCommandArgs()));",-,uassertStatusOK,"[u'checkAuthorization(command, txn, dbname, request.getCommandArgs()));']",1665
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,+        uassertStatusOK(,+,uassertStatusOK,[u''],1666
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,"-            LOG(debugLevel) << ""Command on database "" << db",-,LOG,"[u'debugLevel) << ""Command on database "" << db']",1873
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,-                            << redact(getRedactedCopyForLogging(request.getCommandArgs()));,-,<< redact(getRedactedCopyForLogging,[u'request.getCommandArgs()));'],1875
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,-    if (!supportsWriteConcern(cmd)) {,-,if (!supportsWriteConcern,[u'cmd)) {'],1886
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,-        if (commandSpecifiesWriteConcern(cmd)) {,-,if (commandSpecifiesWriteConcern,[u'cmd)) {'],1887
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,"-        auto wcResult = extractWriteConcern(txn, cmd, db);",-,auto wcResult = extractWriteConcern,"[u'txn, cmd, db);']",1899
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,-        const auto oldWC = txn->getWriteConcern();,-,const auto oldWC = txn->getWriteConcern,[u');'],1908
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,-        ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,-,ON_BLOCK_EXIT([&] { txn->setWriteConcern,[u'oldWC); });'],1909
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,-        txn->setWriteConcern(wcResult.getValue());,-,txn->setWriteConcern,[u'wcResult.getValue());'],1910
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,-        dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,-,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern,[u').toBSON() =='],1915
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,25b0423fa9e005742525a7936ecc627aaa354559,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/db/commands/dbcommands.cpp,"-            waitForWriteConcern(txn,",-,waitForWriteConcern,"[u'txn,']",1920
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/s/s_only.cpp,609a01910a85de6f4de5f34c7960d661aeb4dac1,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/s/s_only.cpp,"-    std::tie(cmdObj, queryFlags) = uassertStatusOK(",-,"std::tie(cmdObj, queryFlags) = uassertStatusOK",[u''],69
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/s/s_only.cpp,609a01910a85de6f4de5f34c7960d661aeb4dac1,https://raw.githubusercontent.com/mongodb/mongo/9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2/src/mongo/s/s_only.cpp,"+    std::tie(cmdObj, queryFlags) = uassertStatusOK(",+,"std::tie(cmdObj, queryFlags) = uassertStatusOK",[u''],236
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/replication_coordinator_impl_elect.cpp,fdfb92af636b0bd5d20b8af695d76380c8ac8a8e,https://raw.githubusercontent.com/mongodb/mongo/d5a000950a8c1802138d50d9313a721b4c7c4c1c/src/mongo/db/repl/replication_coordinator_impl_elect.cpp,"-        fassertStatusOK(28817, _topCoord->becomeCandidateIfElectable(now, lastOpApplied));",-,fassertStatusOK,"[u'28817, _topCoord->becomeCandidateIfElectable(now, lastOpApplied));']",287
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/replication_coordinator_impl_elect.cpp,fdfb92af636b0bd5d20b8af695d76380c8ac8a8e,https://raw.githubusercontent.com/mongodb/mongo/d5a000950a8c1802138d50d9313a721b4c7c4c1c/src/mongo/db/repl/replication_coordinator_impl_elect.cpp,"+        fassertStatusOK(28817, _topCoord->becomeCandidateIfElectable(now, lastOpApplied, false));",+,fassertStatusOK,"[u'28817, _topCoord->becomeCandidateIfElectable(now, lastOpApplied, false));']",288
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/topology_coordinator_impl.cpp,7e8405807b5fc20223772b8a25cb5f84251608fd,https://raw.githubusercontent.com/mongodb/mongo/d5a000950a8c1802138d50d9313a721b4c7c4c1c/src/mongo/db/repl/topology_coordinator_impl.cpp,"-    fassertStatusOK(28816, becomeCandidateIfElectable(now, lastOpApplied));",-,fassertStatusOK,"[u'28816, becomeCandidateIfElectable(now, lastOpApplied));']",1375
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/topology_coordinator_impl.cpp,7e8405807b5fc20223772b8a25cb5f84251608fd,https://raw.githubusercontent.com/mongodb/mongo/d5a000950a8c1802138d50d9313a721b4c7c4c1c/src/mongo/db/repl/topology_coordinator_impl.cpp,"+    fassertStatusOK(28816, becomeCandidateIfElectable(now, lastOpApplied, false));",+,fassertStatusOK,"[u'28816, becomeCandidateIfElectable(now, lastOpApplied, false));']",1376
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,216bbceabc7bf7f78f0b12adf89b1b3546291795,https://raw.githubusercontent.com/mongodb/mongo/d5a000950a8c1802138d50d9313a721b4c7c4c1c/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"-    ASSERT_OK(getTopoCoord().becomeCandidateIfElectable(now(), lastOpTimeApplied));",-,ASSERT_OK,"[u'getTopoCoord().becomeCandidateIfElectable(now(), lastOpTimeApplied));']",3843
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,216bbceabc7bf7f78f0b12adf89b1b3546291795,https://raw.githubusercontent.com/mongodb/mongo/d5a000950a8c1802138d50d9313a721b4c7c4c1c/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"+    ASSERT_OK(getTopoCoord().becomeCandidateIfElectable(now(), lastOpTimeApplied, false));",+,ASSERT_OK,"[u'getTopoCoord().becomeCandidateIfElectable(now(), lastOpTimeApplied, false));']",3844
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,216bbceabc7bf7f78f0b12adf89b1b3546291795,https://raw.githubusercontent.com/mongodb/mongo/d5a000950a8c1802138d50d9313a721b4c7c4c1c/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"-    ASSERT_OK(getTopoCoord().becomeCandidateIfElectable(now(), lastOpTimeApplied));",-,ASSERT_OK,"[u'getTopoCoord().becomeCandidateIfElectable(now(), lastOpTimeApplied));']",3884
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,216bbceabc7bf7f78f0b12adf89b1b3546291795,https://raw.githubusercontent.com/mongodb/mongo/d5a000950a8c1802138d50d9313a721b4c7c4c1c/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"+    ASSERT_OK(getTopoCoord().becomeCandidateIfElectable(now(), lastOpTimeApplied, false));",+,ASSERT_OK,"[u'getTopoCoord().becomeCandidateIfElectable(now(), lastOpTimeApplied, false));']",3885
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,-                        repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(tempNss));,-,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor,[u'tempNss));'],424
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,+                        repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(,+,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor,[u''],426
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-        MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R dropTempCollections"", _config.tempNamespace)",-,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""M/R dropTempCollections"", _config.tempNamespace)']",432
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,+        MONGO_WRITE_CONFLICT_RETRY_LOOP_END(,+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,[u''],433
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-        MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R dropTempCollections"", _config.incLong)",-,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""M/R dropTempCollections"", _config.incLong)']",486
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+        MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R dropTempCollections"", _config.incLong.ns())",+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""M/R dropTempCollections"", _config.incLong.ns())']",487
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-        MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R prepTempCollection"", _config.incLong);",-,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""M/R prepTempCollection"", _config.incLong);']",566
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+        MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R prepTempCollection"", _config.incLong.ns());",+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""M/R prepTempCollection"", _config.incLong.ns());']",567
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,-                repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(tempNss));,-,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor,[u'tempNss));'],667
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,+                repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(_config.tempNamespace));,+,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor,[u'_config.tempNamespace));'],668
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-    MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R prepTempCollection"", _config.tempNamespace)",-,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""M/R prepTempCollection"", _config.tempNamespace)']",712
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+    MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R prepTempCollection"", _config.tempNamespace.ns())",+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""M/R prepTempCollection"", _config.tempNamespace.ns())']",713
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-                Collection* coll = getCollectionOrUassert(tx.db(), finalNamespace);",-,Collection* coll = getCollectionOrUassert,"[u'tx.db(), finalNamespace);']",1008
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+                    getCollectionOrUassert(tx.db(), _config.outputOptions.finalNamespace);",+,getCollectionOrUassert,"[u'tx.db(), _config.outputOptions.finalNamespace);']",1011
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-        Collection* coll = getCollectionOrUassert(ctx.db(), ns);",-,Collection* coll = getCollectionOrUassert,"[u'ctx.db(), ns);']",1072
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+        Collection* coll = getCollectionOrUassert(ctx.db(), nss);",+,Collection* coll = getCollectionOrUassert,"[u'ctx.db(), nss);']",1073
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-    MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R insert"", ns);",-,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""M/R insert"", ns);']",1110
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+    MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R insert"", nss.ns());",+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""M/R insert"", nss.ns());']",1111
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-    MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R insertToInc"", _config.incLong);",-,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""M/R insertToInc"", _config.incLong);']",1163
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+    MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R insertToInc"", _config.incLong.ns());",+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""M/R insertToInc"", _config.incLong.ns());']",1164
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-Collection* State::getCollectionOrUassert(Database* db, StringData ns) {",-,Collection* State::getCollectionOrUassert,"[u'Database* db, StringData ns) {']",1363
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-    uassert(18697, ""Collection unexpectedly disappeared: "" + ns.toString(), out);",-,uassert,"[u'18697, ""Collection unexpectedly disappeared: "" + ns.toString(), out);']",1365
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+Collection* State::getCollectionOrUassert(Database* db, const NamespaceString& nss) {",+,Collection* State::getCollectionOrUassert,"[u'Database* db, const NamespaceString& nss) {']",1366
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+    uassert(18697, ""Collection unexpectedly disappeared: "" + nss.ns(), out);",+,uassert,"[u'18697, ""Collection unexpectedly disappeared: "" + nss.ns(), out);']",1368
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-    MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""finalReduce"", _config.incLong);",-,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""finalReduce"", _config.incLong);']",1481
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+    MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""finalReduce"", _config.incLong.ns());",+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END,"[u'_txn, ""finalReduce"", _config.incLong.ns());']",1482
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-        LOG(1) << ""mr ns: "" << config.ns;",-,LOG,"[u'1) << ""mr ns: "" << config.ns;']",1832
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+        LOG(1) << ""mr ns: "" << config.nss;",+,LOG,"[u'1) << ""mr ns: "" << config.nss;']",1833
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,-            if (!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(nss)) {,-,if (!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor,[u'nss)) {'],1915
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,+            if (!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(config.nss)) {,+,if (!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor,[u'config.nss)) {'],1916
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"-                    Collection* coll = State::getCollectionOrUassert(db, config.ns);",-,Collection* coll = State::getCollectionOrUassert,"[u'db, config.ns);']",2019
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,25572a18636d3ed2d1814fb44bd6d3d14542f0e8,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/commands/mr.cpp,"+                    Collection* coll = State::getCollectionOrUassert(db, config.nss);",+,Collection* coll = State::getCollectionOrUassert,"[u'db, config.nss);']",2020
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/repl/oplog.cpp,3e75d04e94f3afc8f628487729faee1ddefbc289,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/repl/oplog.cpp,"-                AutoGetCollectionForRead oplog(txn.get(), rsOplogName);",-,AutoGetCollectionForRead oplog,"[u'txn.get(), rsOplogName);']",1248
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/repl/oplog.cpp,3e75d04e94f3afc8f628487729faee1ddefbc289,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/db/repl/oplog.cpp,"+                AutoGetCollectionForRead oplog(txn.get(), NamespaceString(rsOplogName));",+,AutoGetCollectionForRead oplog,"[u'txn.get(), NamespaceString(rsOplogName));']",1249
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/dbtests/query_stage_distinct.cpp,d0bab154208f54496bb217657658512cd732ffd5,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/dbtests/query_stage_distinct.cpp,"-        ASSERT_OK(dbtests::createIndex(&_txn, ns(), obj));",-,ASSERT_OK,"[u'dbtests::createIndex(&_txn, ns(), obj));']",72
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/dbtests/query_stage_distinct.cpp,d0bab154208f54496bb217657658512cd732ffd5,https://raw.githubusercontent.com/mongodb/mongo/f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9/src/mongo/dbtests/query_stage_distinct.cpp,"+        ASSERT_OK(dbtests::createIndex(&_txn, nss.ns(), obj));",+,ASSERT_OK,"[u'dbtests::createIndex(&_txn, nss.ns(), obj));']",73
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_cursor_bulk.c,7a6a40e380f9d56a784e91049f1e7135f8932d02,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_cursor_bulk.c,"-	WT_RET(__wt_lsm_meta_write(session, lsm_tree));",-,WT_RET(__wt_lsm_meta_write,"[u'session, lsm_tree));']",49
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_cursor_bulk.c,7a6a40e380f9d56a784e91049f1e7135f8932d02,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_cursor_bulk.c,"+	WT_RET(__wt_lsm_meta_write(session, lsm_tree, NULL));",+,WT_RET(__wt_lsm_meta_write,"[u'session, lsm_tree, NULL));']",50
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_merge.c,ceb5f03a2f5e0be763cdd44fcc23c5550da43fb9,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_merge.c,"-	if ((ret = __wt_lsm_meta_write(session, lsm_tree)) != 0)",-,if ((ret = __wt_lsm_meta_write,"[u'session, lsm_tree)) != 0)']",583
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_merge.c,ceb5f03a2f5e0be763cdd44fcc23c5550da43fb9,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_merge.c,"+	if ((ret = __wt_lsm_meta_write(session, lsm_tree, NULL)) != 0)",+,if ((ret = __wt_lsm_meta_write,"[u'session, lsm_tree, NULL)) != 0)']",584
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_meta.c,46ead6d6ac4d565506fb1fdf8a66e2ce3d3902ea,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_meta.c,"-__wt_lsm_meta_write(WT_SESSION_IMPL *session, WT_LSM_TREE *lsm_tree)",-,__wt_lsm_meta_write,"[u'WT_SESSION_IMPL *session, WT_LSM_TREE *lsm_tree)']",458
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_meta.c,46ead6d6ac4d565506fb1fdf8a66e2ce3d3902ea,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_meta.c,"+__wt_lsm_meta_write(WT_SESSION_IMPL *session, WT_LSM_TREE *lsm_tree,",+,__wt_lsm_meta_write,"[u'WT_SESSION_IMPL *session, WT_LSM_TREE *lsm_tree,']",459
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,38d87dd852bf110ce238691138602c2d52414e8b,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"-	WT_ERR(__wt_lsm_meta_write(session, lsm_tree));",-,WT_ERR(__wt_lsm_meta_write,"[u'session, lsm_tree));']",780
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,38d87dd852bf110ce238691138602c2d52414e8b,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"+	WT_ERR(__wt_lsm_meta_write(session, lsm_tree, NULL));",+,WT_ERR(__wt_lsm_meta_write,"[u'session, lsm_tree, NULL));']",781
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,38d87dd852bf110ce238691138602c2d52414e8b,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"+	__wt_lsm_tree_writelock(session, lsm_tree);",+,__wt_lsm_tree_writelock,"[u'session, lsm_tree);']",895
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,38d87dd852bf110ce238691138602c2d52414e8b,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"+	WT_ERR(__wt_lsm_meta_write(session, lsm_tree, cfg[0]));",+,WT_ERR(__wt_lsm_meta_write,"[u'session, lsm_tree, cfg[0]));']",906
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,38d87dd852bf110ce238691138602c2d52414e8b,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"+		__wt_lsm_tree_writeunlock(session, lsm_tree);",+,__wt_lsm_tree_writeunlock,"[u'session, lsm_tree);']",909
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,38d87dd852bf110ce238691138602c2d52414e8b,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"-	WT_ERR(__wt_lsm_meta_write(session, lsm_tree));",-,WT_ERR(__wt_lsm_meta_write,"[u'session, lsm_tree));']",1075
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,38d87dd852bf110ce238691138602c2d52414e8b,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"+	WT_ERR(__wt_lsm_meta_write(session, lsm_tree, NULL));",+,WT_ERR(__wt_lsm_meta_write,"[u'session, lsm_tree, NULL));']",1076
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,38d87dd852bf110ce238691138602c2d52414e8b,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"-	WT_ERR(__wt_lsm_meta_write(session, lsm_tree));",-,WT_ERR(__wt_lsm_meta_write,"[u'session, lsm_tree));']",1139
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,38d87dd852bf110ce238691138602c2d52414e8b,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_tree.c,"+	WT_ERR(__wt_lsm_meta_write(session, lsm_tree, NULL));",+,WT_ERR(__wt_lsm_meta_write,"[u'session, lsm_tree, NULL));']",1140
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,d9c185a3f58cdac29550e22160c6118ec2cc5b6c,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,"-	ret = __wt_lsm_meta_write(session, lsm_tree);",-,ret = __wt_lsm_meta_write,"[u'session, lsm_tree);']",368
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,d9c185a3f58cdac29550e22160c6118ec2cc5b6c,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,"+	ret = __wt_lsm_meta_write(session, lsm_tree, NULL);",+,ret = __wt_lsm_meta_write,"[u'session, lsm_tree, NULL);']",369
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,d9c185a3f58cdac29550e22160c6118ec2cc5b6c,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,"-	ret = __wt_lsm_meta_write(session, lsm_tree);",-,ret = __wt_lsm_meta_write,"[u'session, lsm_tree);']",482
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,d9c185a3f58cdac29550e22160c6118ec2cc5b6c,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,"+	ret = __wt_lsm_meta_write(session, lsm_tree, NULL);",+,ret = __wt_lsm_meta_write,"[u'session, lsm_tree, NULL);']",483
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,d9c185a3f58cdac29550e22160c6118ec2cc5b6c,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,"-		WT_TRET(__wt_lsm_meta_write(session, lsm_tree));",-,WT_TRET(__wt_lsm_meta_write,"[u'session, lsm_tree));']",681
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,d9c185a3f58cdac29550e22160c6118ec2cc5b6c,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,"+		WT_TRET(__wt_lsm_meta_write(session, lsm_tree, NULL));",+,WT_TRET(__wt_lsm_meta_write,"[u'session, lsm_tree, NULL));']",682
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/os_posix/os_mtx_cond.c,be8b1abda31cd81f108d1f5e3e52703f14c30cdc,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/os_posix/os_mtx_cond.c,-	WT_WRITE_BARRIER();,-,WT_WRITE_BARRIER,[u');'],119
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/schema/schema_alter.c,26d800aa98eaecd7a13bb97861fd248f87f23c5e,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/schema/schema_alter.c,"+	WT_ASSERT(session, newcfg[0] != NULL);",+,WT_ASSERT,"[u'session, newcfg[0] != NULL);']",31
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/schema/schema_alter.c,26d800aa98eaecd7a13bb97861fd248f87f23c5e,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/schema/schema_alter.c,"+	WT_ASSERT(session, F_ISSET(session, WT_SESSION_LOCKED_TABLE));",+,WT_ASSERT,"[u'session, F_ISSET(session, WT_SESSION_LOCKED_TABLE));']",66
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/support/hazard.c,7e88ad183fef39c0994ca25c6fa14ad82584f7c1,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/support/hazard.c,"+		WT_ASSERT(session,",+,WT_ASSERT,"[u'session,']",157
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/support/hazard.c,7e88ad183fef39c0994ca25c6fa14ad82584f7c1,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/support/hazard.c,"+		WT_ASSERT(session,",+,WT_ASSERT,"[u'session,']",168
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/support/hazard.c,7e88ad183fef39c0994ca25c6fa14ad82584f7c1,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/support/hazard.c,"+		WT_ASSERT(session,",+,WT_ASSERT,"[u'session,']",173
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/support/hazard.c,7e88ad183fef39c0994ca25c6fa14ad82584f7c1,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/support/hazard.c,"+	WT_ASSERT(session, hp->ref == NULL);",+,WT_ASSERT,"[u'session, hp->ref == NULL);']",192
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/utilities/util_alter.c,d228c15cd483841dee0b395cbbe46f81ef6dac3e,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/src/utilities/util_alter.c,"+	(void)fprintf(stderr,",+,(void)fprintf,"[u'stderr,']",46
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/test/format/util.c,b9788f1ac75e65006d55add58fe83ac338894d75,https://raw.githubusercontent.com/mongodb/mongo/4a185996c83862c2e4b911ce637591c4ff535108/src/third_party/wiredtiger/test/format/util.c,"+		snprintf(buf, sizeof(buf),",+,snprintf,"[u'buf, sizeof(buf),']",493
caba732fb722d5c2257d17dd09dec8a826c13795,"SERVER-27364 Remove DBConfig::setPrimary

Moves its entire functionality to the 'movePrimary' command.",src/mongo/s/commands/cluster_move_primary_cmd.cpp,7a91470d4665005a8993c924c76b26e57496fa10,https://raw.githubusercontent.com/mongodb/mongo/caba732fb722d5c2257d17dd09dec8a826c13795/src/mongo/s/commands/cluster_move_primary_cmd.cpp,"+            uassertStatusOK(Grid::get(txn)->catalogClient(txn)->updateDatabase(txn, dbname, dbt));",+,uassertStatusOK(Grid::get(txn)->catalogClient,"[u'txn)->updateDatabase(txn, dbname, dbt));']",248
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,bd7adb2fbb606e43d58ef3be0aa24d605ce43ade,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,"-        Status status = grid.catalogClient(txn)->enableSharding(txn, dbname);",-,Status status = grid.catalogClient,"[u'txn)->enableSharding(txn, dbname);']",109
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,bd7adb2fbb606e43d58ef3be0aa24d605ce43ade,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,"-            audit::logEnableSharding(Client::getCurrent(), dbname);",-,audit::logEnableSharding,"[u'Client::getCurrent(), dbname);']",111
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,bd7adb2fbb606e43d58ef3be0aa24d605ce43ade,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,"+        uassertStatusOK(Grid::get(txn)->catalogClient(txn)->enableSharding(txn, dbname));",+,uassertStatusOK(Grid::get(txn)->catalogClient,"[u'txn)->enableSharding(txn, dbname));']",113
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,bd7adb2fbb606e43d58ef3be0aa24d605ce43ade,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,"+        audit::logEnableSharding(Client::getCurrent(), dbname);",+,audit::logEnableSharding,"[u'Client::getCurrent(), dbname);']",114
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,bd7adb2fbb606e43d58ef3be0aa24d605ce43ade,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,-        grid.catalogCache()->invalidate(dbname);,-,grid.catalogCache,[u')->invalidate(dbname);'],117
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,bd7adb2fbb606e43d58ef3be0aa24d605ce43ade,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,+        Grid::get(txn)->catalogCache()->invalidate(dbname);,+,Grid::get(txn)->catalogCache,[u')->invalidate(dbname);'],118
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,"-        auto status = grid.catalogCache()->getDatabase(txn, dbname);",-,auto status = grid.catalogCache,"[u')->getDatabase(txn, dbname);']",236
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,"+        auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, dbname);",+,auto status = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, dbname);']",237
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,"-                uassertStatusOK(grid.shardRegistry()->getShard(txn, confIn->getPrimaryId()));",-,uassertStatusOK,"[u'grid.shardRegistry()->getShard(txn, confIn->getPrimaryId()));']",304
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+            const auto shard = uassertStatusOK(,+,const auto shard = uassertStatusOK,[u''],305
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,"-                uassertStatusOK(grid.shardRegistry()->getShard(txn, confOut->getPrimaryId()));",-,uassertStatusOK,"[u'grid.shardRegistry()->getShard(txn, confOut->getPrimaryId()));']",478
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+            const auto shard = uassertStatusOK(,+,const auto shard = uassertStatusOK,[u''],479
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+                Status status = Grid::get(txn)->catalogClient(txn)->enableSharding(,+,Status status = Grid::get(txn)->catalogClient,[u'txn)->enableSharding('],517
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+                    Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db().toString());,+,Grid::get(txn)->catalogCache,[u')->invalidate(outputCollNss.db().toString());'],523
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+                    uassertStatusOK(status);,+,uassertStatusOK,[u'status);'],525
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+                confOut = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(,+,confOut = uassertStatusOK(Grid::get(txn)->catalogCache,[u')->getDatabase('],529
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,"-                Status status = grid.catalogClient(txn)->shardCollection(txn,",-,Status status = grid.catalogClient,"[u'txn)->shardCollection(txn,']",579
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+                uassertStatusOK(,+,uassertStatusOK,[u''],589
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,"+                    Grid::get(txn)->catalogClient(txn)->shardCollection(txn,",+,Grid::get(txn)->catalogClient,"[u'txn)->shardCollection(txn,']",590
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,-                confOut = uassertStatusOK(,-,confOut = uassertStatusOK,[u''],599
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,"-                    grid.catalogCache()->getDatabase(txn, outputCollNss.db().toString()));",-,grid.catalogCache,"[u')->getDatabase(txn, outputCollNss.db().toString()));']",600
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,-                auto scopedDistLock = grid.catalogClient(txn)->getDistLockManager()->lock(,-,auto scopedDistLock = grid.catalogClient,[u'txn)->getDistLockManager()->lock('],608
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,8d3a121c5a7fbabcaadbe66f4113c8329da59681,https://raw.githubusercontent.com/mongodb/mongo/c7bf862d8d75fa14801cfe8997a693e05a88594a/src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+                    Grid::get(txn)->catalogClient(txn)->getDistLockManager()->lock(,+,Grid::get(txn)->catalogClient,[u'txn)->getDistLockManager()->lock('],611
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,564d348e043931853b1f5becbe9646c5f7227444,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_cmd.cpp,+    bool supportsWriteConcern(const BSONObj& cmd) const override {,+,bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],65
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,564d348e043931853b1f5becbe9646c5f7227444,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_cmd.cpp,+        uassertStatusOK(scopedDbStatus.getStatus());,+,uassertStatusOK,[u'scopedDbStatus.getStatus());'],90
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,564d348e043931853b1f5becbe9646c5f7227444,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_cmd.cpp,"+            uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",+,uassertStatusOK(Grid::get(txn)->catalogClient,"[u'txn)->dropCollection(txn, nss));']",97
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,564d348e043931853b1f5becbe9646c5f7227444,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_cmd.cpp,+            if (!txn->getWriteConcern().usedDefault) {,+,if (!txn->getWriteConcern,[u').usedDefault) {'],126
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,564d348e043931853b1f5becbe9646c5f7227444,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_cmd.cpp,+                               txn->getWriteConcern().toBSON());,+,txn->getWriteConcern,[u').toBSON());'],128
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,564d348e043931853b1f5becbe9646c5f7227444,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_cmd.cpp,"+        const auto shard = uassertStatusOK(shardRegistry->getShard(txn, shardId));",+,const auto shard = uassertStatusOK,"[u'shardRegistry->getShard(txn, shardId));']",134
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,564d348e043931853b1f5becbe9646c5f7227444,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_cmd.cpp,+        auto cmdDropResult = uassertStatusOK(shard->runCommandWithFixedRetryAttempts(,+,auto cmdDropResult = uassertStatusOK,[u'shard->runCommandWithFixedRetryAttempts('],135
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,564d348e043931853b1f5becbe9646c5f7227444,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_cmd.cpp,+        uassertStatusOK(cmdDropResult.commandStatus);,+,uassertStatusOK,[u'cmdDropResult.commandStatus);'],148
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,564d348e043931853b1f5becbe9646c5f7227444,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_cmd.cpp,+            appendWriteConcernErrorToCmdResponse(,+,appendWriteConcernErrorToCmdResponse,[u''],151
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,f8f418d90d7f7480f157c0d075d199f01ae0f922,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_database_cmd.cpp,"+            uassertStatusOK(catalogClient->dropCollection(txn, NamespaceString(ns)));",+,uassertStatusOK,"[u'catalogClient->dropCollection(txn, NamespaceString(ns)));']",136
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,f8f418d90d7f7480f157c0d075d199f01ae0f922,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_database_cmd.cpp,"-            uassertStatusOK({scopedCMStatus.getStatus().code(),",-,uassertStatusOK,"[u'{scopedCMStatus.getStatus().code(),']",219
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,f8f418d90d7f7480f157c0d075d199f01ae0f922,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_database_cmd.cpp,"-        uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",-,uassertStatusOK(Grid::get(txn)->catalogClient,"[u'txn)->dropCollection(txn, nss));']",230
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,f8f418d90d7f7480f157c0d075d199f01ae0f922,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_database_cmd.cpp,+            if (!txn->getWriteConcern().usedDefault) {,+,if (!txn->getWriteConcern,[u').usedDefault) {'],249
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,f8f418d90d7f7480f157c0d075d199f01ae0f922,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_database_cmd.cpp,+                               txn->getWriteConcern().toBSON());,+,txn->getWriteConcern,[u').toBSON());'],251
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,f8f418d90d7f7480f157c0d075d199f01ae0f922,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/cluster_drop_database_cmd.cpp,"-                                << txn->getWriteConcern().toBSON()),",-,<< txn->getWriteConcern,"[u').toBSON()),']",263
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/commands_public.cpp,fe17c4650e17e5826bf050081dbdb13e01fdb780,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/commands_public.cpp,-    virtual bool supportsWriteConcern(const BSONObj& cmd) const override {,-,virtual bool supportsWriteConcern,[u'const BSONObj& cmd) const override {'],552
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/commands_public.cpp,fe17c4650e17e5826bf050081dbdb13e01fdb780,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/commands_public.cpp,"-        auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, dbName);",-,auto status = Grid::get(txn)->catalogCache,"[u')->getDatabase(txn, dbName);']",562
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/commands_public.cpp,fe17c4650e17e5826bf050081dbdb13e01fdb780,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/commands_public.cpp,"-        log() << ""DROP: "" << nss.ns();",-,log,"[u') << ""DROP: "" << nss.ns();']",573
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/commands_public.cpp,fe17c4650e17e5826bf050081dbdb13e01fdb780,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/commands_public.cpp,"-            log() << ""\tdrop going to do passthrough"";",-,log,"[u') << ""\\tdrop going to do passthrough"";']",577
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/commands_public.cpp,fe17c4650e17e5826bf050081dbdb13e01fdb780,https://raw.githubusercontent.com/mongodb/mongo/834fe4857af1cd75f2cd70f7682540dbe3a2ced6/src/mongo/s/commands/commands_public.cpp,"-        uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",-,uassertStatusOK(Grid::get(txn)->catalogClient,"[u'txn)->dropCollection(txn, nss));']",581
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_TRUE(equalFunc(doc1, doc2));",+,ASSERT_TRUE,"[u'equalFunc(doc1, doc2));']",72
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_FALSE(equalFunc(doc1, doc3));",+,ASSERT_FALSE,"[u'equalFunc(doc1, doc3));']",73
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_TRUE(equalFunc(doc1, doc2));",+,ASSERT_TRUE,"[u'equalFunc(doc1, doc2));']",82
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_TRUE(lessThanFunc(doc1, doc2));",+,ASSERT_TRUE,"[u'lessThanFunc(doc1, doc2));']",146
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_FALSE(lessThanFunc(doc2, doc1));",+,ASSERT_FALSE,"[u'lessThanFunc(doc2, doc1));']",147
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_TRUE(lessThanFunc(doc1, doc2));",+,ASSERT_TRUE,"[u'lessThanFunc(doc1, doc2));']",156
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_FALSE(lessThanFunc(doc2, doc1));",+,ASSERT_FALSE,"[u'lessThanFunc(doc2, doc1));']",157
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_DOCUMENT_EQ(*it, (Document{{""foo"", ""za""_sd}}));",+,ASSERT_DOCUMENT_EQ,"[u'*it, (Document{{""foo"", ""za""_sd}}));']",251
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_DOCUMENT_EQ(*it, (Document{{""foo"", ""yb""_sd}}));",+,ASSERT_DOCUMENT_EQ,"[u'*it, (Document{{""foo"", ""yb""_sd}}));']",253
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,+    ASSERT(it == set.end());,+,ASSERT,[u'it == set.end());'],255
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_EQ(documentCmp.hash(Document{{""foo"", ""foo""_sd}}),",+,ASSERT_EQ,"[u'documentCmp.hash(Document{{""foo"", ""foo""_sd}}),']",310
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_NE(documentCmp.hash(Document{{""foo"", ""foo""_sd}}),",+,ASSERT_NE,"[u'documentCmp.hash(Document{{""foo"", ""foo""_sd}}),']",312
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_EQ(documentCmp.hash(doc1), documentCmp.hash(doc2));",+,ASSERT_EQ,"[u'documentCmp.hash(doc1), documentCmp.hash(doc2));']",321
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_EQ(documentCmp.hash(doc1), documentCmp.hash(doc2));",+,ASSERT_EQ,"[u'documentCmp.hash(doc1), documentCmp.hash(doc2));']",335
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_NE(documentCmp.hash(doc1), documentCmp.hash(doc3));",+,ASSERT_NE,"[u'documentCmp.hash(doc1), documentCmp.hash(doc3));']",336
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_NE(documentCmp.hash(doc2), documentCmp.hash(doc3));",+,ASSERT_NE,"[u'documentCmp.hash(doc2), documentCmp.hash(doc3));']",337
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_TRUE(set.insert(Document{{""foo"", ""foo""_sd}}).second);",+,ASSERT_TRUE,"[u'set.insert(Document{{""foo"", ""foo""_sd}}).second);']",344
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_FALSE(set.insert(Document{{""foo"", ""FOO""_sd}}).second);",+,ASSERT_FALSE,"[u'set.insert(Document{{""foo"", ""FOO""_sd}}).second);']",345
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_TRUE(set.insert(Document{{""foo"", ""FOOz""_sd}}).second);",+,ASSERT_TRUE,"[u'set.insert(Document{{""foo"", ""FOOz""_sd}}).second);']",346
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_EQ(set.size(), 2U);",+,ASSERT_EQ,"[u'set.size(), 2U);']",347
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_EQ(set.count(Document{{""foo"", ""FoO""_sd}}), 1U);",+,ASSERT_EQ,"[u'set.count(Document{{""foo"", ""FoO""_sd}}), 1U);']",348
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_EQ(set.count(Document{{""foo"", ""fooZ""_sd}}), 1U);",+,ASSERT_EQ,"[u'set.count(Document{{""foo"", ""fooZ""_sd}}), 1U);']",349
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_EQ(map.size(), 2U);",+,ASSERT_EQ,"[u'map.size(), 2U);']",359
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_EQ(map[(Document{{""foo"", ""FoO""_sd}})], 2);",+,ASSERT_EQ,"[u'map[(Document{{""foo"", ""FoO""_sd}})], 2);']",360
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,7670b331e6c70b7b2dae6dfb2bc53f57ffab671f,https://raw.githubusercontent.com/mongodb/mongo/e50c923ff402a4b2276e62e053eb5326c06b8976/src/mongo/db/pipeline/document_comparator_test.cpp,"+    ASSERT_EQ(map[(Document{{""foo"", ""fooZ""_sd}})], 3);",+,ASSERT_EQ,"[u'map[(Document{{""foo"", ""fooZ""_sd}})], 3);']",361
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/commands/pipeline_command.cpp,bb426950b44ff43288fb8e0815012f187664ba1c,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/commands/pipeline_command.cpp,+            : uassertStatusOK(CollatorFactoryInterface::get(txn->getServiceContext()),+,: uassertStatusOK,[u'CollatorFactoryInterface::get(txn->getServiceContext())'],373
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/commands/pipeline_command.cpp,bb426950b44ff43288fb8e0815012f187664ba1c,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/commands/pipeline_command.cpp,"+                                      uassertStatusOK(resolveInvolvedNamespaces(txn, request))));",+,uassertStatusOK,"[u'resolveInvolvedNamespaces(txn, request))));']",502
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_context.cpp,5bccef201aef704154aa7908be09c640a19c8280,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_context.cpp,-        uassertStatusOK(statusWithCollator.getStatus());,-,uassertStatusOK,[u'statusWithCollator.getStatus());'],58
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-        ASSERT_THROWS(Expression::parseOperand(specElement, vps), UserException);",-,ASSERT_THROWS,"[u'Expression::parseOperand(specElement, vps), UserException);']",1901
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"+        ASSERT_THROWS(Expression::parseOperand(expCtx, specElement, vps), UserException);",+,ASSERT_THROWS,"[u'Expression::parseOperand(expCtx, specElement, vps), UserException);']",1902
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-        ASSERT_THROWS(ExpressionFieldPath::create(""""), UserException);",-,ASSERT_THROWS,"[u'ExpressionFieldPath::create(""""), UserException);']",2428
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"+        ASSERT_THROWS(ExpressionFieldPath::create(nullptr, """"), UserException);",+,ASSERT_THROWS,"[u'ExpressionFieldPath::create(nullptr, """"), UserException);']",2429
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_THROWS(ExpressionObject::parse(BSON(""a.b"" << 1), vps), UserException);",-,ASSERT_THROWS,"[u'ExpressionObject::parse(BSON(""a.b"" << 1), vps), UserException);']",2983
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_THROWS(ExpressionObject::parse(BSON(""c"" << 3 << ""a.b"" << 1), vps), UserException);",-,ASSERT_THROWS,"[u'ExpressionObject::parse(BSON(""c"" << 3 << ""a.b"" << 1), vps), UserException);']",2984
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_THROWS(ExpressionObject::parse(BSON(""a.b"" << 1 << ""c"" << 3), vps), UserException);",-,ASSERT_THROWS,"[u'ExpressionObject::parse(BSON(""a.b"" << 1 << ""c"" << 3), vps), UserException);']",2985
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""a.b"" << 1), vps), UserException);",+,ASSERT_THROWS,"[u'ExpressionObject::parse(expCtx, BSON(""a.b"" << 1), vps), UserException);']",2986
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""c"" << 3 << ""a.b"" << 1), vps),",+,ASSERT_THROWS,"[u'ExpressionObject::parse(expCtx, BSON(""c"" << 3 << ""a.b"" << 1), vps),']",2987
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""a.b"" << 1 << ""c"" << 3), vps),",+,ASSERT_THROWS,"[u'ExpressionObject::parse(expCtx, BSON(""a.b"" << 1 << ""c"" << 3), vps),']",2989
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_THROWS(ExpressionObject::parse(BSON(""a"" << 1 << ""a"" << 1), vps), UserException);",-,ASSERT_THROWS,"[u'ExpressionObject::parse(BSON(""a"" << 1 << ""a"" << 1), vps), UserException);']",2997
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_THROWS(ExpressionObject::parse(BSON(""a"" << 1 << ""b"" << 2 << ""a"" << 1), vps),",-,ASSERT_THROWS,"[u'ExpressionObject::parse(BSON(""a"" << 1 << ""b"" << 2 << ""a"" << 1), vps),']",2998
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_THROWS(ExpressionObject::parse(BSON(""a"" << BSON(""c"" << 1) << ""b"" << 2 << ""a"" << 1), vps),",-,ASSERT_THROWS,"[u'ExpressionObject::parse(BSON(""a"" << BSON(""c"" << 1) << ""b"" << 2 << ""a"" << 1), vps),']",3000
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_THROWS(ExpressionObject::parse(BSON(""a"" << 1 << ""b"" << 2 << ""a"" << BSON(""c"" << 1)), vps),",-,ASSERT_THROWS,"[u'ExpressionObject::parse(BSON(""a"" << 1 << ""b"" << 2 << ""a"" << BSON(""c"" << 1)), vps),']",3002
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""a"" << 1 << ""a"" << 1), vps), UserException);",+,ASSERT_THROWS,"[u'ExpressionObject::parse(expCtx, BSON(""a"" << 1 << ""a"" << 1), vps), UserException);']",3003
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""a"" << 1 << ""b"" << 2 << ""a"" << 1), vps),",+,ASSERT_THROWS,"[u'ExpressionObject::parse(expCtx, BSON(""a"" << 1 << ""b"" << 2 << ""a"" << 1), vps),']",3004
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,+    ASSERT_THROWS(,+,ASSERT_THROWS,[u''],3006
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,+    ASSERT_THROWS(,+,ASSERT_THROWS,[u''],3009
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_THROWS(ExpressionObject::parse(BSON(""$a"" << 1), vps), UserException);",-,ASSERT_THROWS,"[u'ExpressionObject::parse(BSON(""$a"" << 1), vps), UserException);']",3018
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_THROWS(ExpressionObject::parse(BSON("""" << 1), vps), UserException);",-,ASSERT_THROWS,"[u'ExpressionObject::parse(BSON("""" << 1), vps), UserException);']",3019
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_THROWS(ExpressionObject::parse(BSON(std::string(""a\0b"", 3) << 1), vps), UserException);",-,ASSERT_THROWS,"[u'ExpressionObject::parse(BSON(std::string(""a\\0b"", 3) << 1), vps), UserException);']",3020
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""$a"" << 1), vps), UserException);",+,ASSERT_THROWS,"[u'ExpressionObject::parse(expCtx, BSON(""$a"" << 1), vps), UserException);']",3021
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON("""" << 1), vps), UserException);",+,ASSERT_THROWS,"[u'ExpressionObject::parse(expCtx, BSON("""" << 1), vps), UserException);']",3022
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(std::string(""a\0b"", 3) << 1), vps),",+,ASSERT_THROWS,"[u'ExpressionObject::parse(expCtx, BSON(std::string(""a\\0b"", 3) << 1), vps),']",3023
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_THROWS(ExpressionObject::parse(BSON(""a""",-,ASSERT_THROWS,"[u'ExpressionObject::parse(BSON(""a""']",3031
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_THROWS(ExpressionObject::parse(expCtx,",+,ASSERT_THROWS,"[u'ExpressionObject::parse(expCtx,']",3032
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,-    ASSERT_THROWS(ExpressionObject::parse(,-,ASSERT_THROWS,[u'ExpressionObject::parse('],3043
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,315a2faeac7d05082d9bc9e33fdf174c1a33da94,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/expression_test.cpp,+    ASSERT_THROWS(,+,ASSERT_THROWS,[u''],3046
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""a"" << 1 << ""a"" << 2)), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""a"" << 1 << ""a"" << 2)), UserException);']",68
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""a"" << BSON(""b"" << 1 << ""b"" << 2))), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""a"" << BSON(""b"" << 1 << ""b"" << 2))), UserException);']",69
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""_id"" << 3 << ""_id"" << true)), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""_id"" << 3 << ""_id"" << true)), UserException);']",70
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << 1 << ""a"" << 2)), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""a"" << 1 << ""a"" << 2)), UserException);']",71
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << BSON(""b"" << 1 << ""b"" << 2))),",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""a"" << BSON(""b"" << 1 << ""b"" << 2))),']",72
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""_id"" << 3 << ""_id"" << true)),",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""_id"" << 3 << ""_id"" << true)),']",74
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""a"" << 1 << ""a.b"" << 2)), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""a"" << 1 << ""a.b"" << 2)), UserException);']",78
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""a.b.c"" << 1 << ""a"" << 2)), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""a.b.c"" << 1 << ""a"" << 2)), UserException);']",79
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""_id"" << true << ""_id.x"" << true)), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""_id"" << true << ""_id.x"" << true)), UserException);']",80
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << 1 << ""a.b"" << 2)), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""a"" << 1 << ""a.b"" << 2)), UserException);']",81
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a.b.c"" << 1 << ""a"" << 2)), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""a.b.c"" << 1 << ""a"" << 2)), UserException);']",82
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""_id"" << true << ""_id.x"" << true)),",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""_id"" << true << ""_id.x"" << true)),']",83
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""a"" << BSON(""b.c"" << true))), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""a"" << BSON(""b.c"" << true))), UserException);']",91
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << BSON(""b.c"" << true))), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""a"" << BSON(""b.c"" << true))), UserException);']",92
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""$dollar"" << 0)), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""$dollar"" << 0)), UserException);']",95
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""c.$d"" << true)), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""c.$d"" << true)), UserException);']",96
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""$dollar"" << 0)), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""$dollar"" << 0)), UserException);']",97
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""c.$d"" << true)), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""c.$d"" << true)), UserException);']",98
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON("""" << 2)), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON("""" << 2)), UserException);']",101
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""a"" << BSON("""" << true))), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""a"" << BSON("""" << true))), UserException);']",102
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON("""" << BSON(""a"" << true))), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON("""" << BSON(""a"" << true))), UserException);']",103
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""a."" << true)), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""a."" << true)), UserException);']",104
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON("".a"" << true)), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON("".a"" << true)), UserException);']",105
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON("""" << 2)), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON("""" << 2)), UserException);']",106
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << BSON("""" << true))), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""a"" << BSON("""" << true))), UserException);']",107
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON("""" << BSON(""a"" << true))), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON("""" << BSON(""a"" << true))), UserException);']",108
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a."" << true)), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""a."" << true)), UserException);']",109
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON("".a"" << true)), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON("".a"" << true)), UserException);']",110
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,-    ASSERT_THROWS(,-,ASSERT_THROWS,[u''],118
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""a"" << BSON(""$gt"" << BSON(""bad""",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""a"" << BSON(""$gt"" << BSON(""bad""']",121
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,+    ASSERT_THROWS(ParsedAddFields::create(,+,ASSERT_THROWS,[u'ParsedAddFields::create('],122
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx,",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx,']",125
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSONObj()), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSONObj()), UserException);']",135
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSONObj()), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSONObj()), UserException);']",136
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"-    ASSERT_THROWS(ParsedAddFields::create(BSON(""a"" << BSONObj())), UserException);",-,ASSERT_THROWS,"[u'ParsedAddFields::create(BSON(""a"" << BSONObj())), UserException);']",139
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,d7b68afca1d3bf53721b1aa370dd1e1df2035372,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_add_fields_test.cpp,"+    ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << BSONObj())), UserException);",+,ASSERT_THROWS,"[u'ParsedAddFields::create(expCtx, BSON(""a"" << BSONObj())), UserException);']",140
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << true << ""a"" << true)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << true << ""a"" << true)),']",68
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << true << ""a"" << true)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a"" << true << ""a"" << true)),']",69
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << false << ""a"" << false)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << false << ""a"" << false)),']",71
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << false << ""a"" << false)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a"" << false << ""a"" << false)),']",72
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(ParsedAggregationProjection::create(,+,ASSERT_THROWS,[u'ParsedAggregationProjection::create('],74
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,-    ASSERT_THROWS(,-,ASSERT_THROWS,[u''],77
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << wrapInLiteral(1) << ""a"" << true)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << wrapInLiteral(1) << ""a"" << true)),']",82
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(,+,ASSERT_THROWS,[u''],88
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""_id"" << true << ""_id"" << true)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""_id"" << true << ""_id"" << true)),']",102
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""_id"" << false << ""_id"" << false)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""_id"" << false << ""_id"" << false)),']",104
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""_id"" << true << ""_id"" << true)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""_id"" << true << ""_id"" << true)),']",105
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,-    ASSERT_THROWS(,-,ASSERT_THROWS,[u''],112
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(ParsedAggregationProjection::create(,+,ASSERT_THROWS,[u'ParsedAggregationProjection::create('],118
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(ParsedAggregationProjection::create(,+,ASSERT_THROWS,[u'ParsedAggregationProjection::create('],121
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << true << ""a.b"" << true)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << true << ""a.b"" << true)),']",135
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << true << ""a.b"" << true)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a"" << true << ""a.b"" << true)),']",136
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a.b"" << false << ""a"" << false)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a.b"" << false << ""a"" << false)),']",138
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a.b"" << false << ""a"" << false)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a.b"" << false << ""a"" << false)),']",139
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,-    ASSERT_THROWS(,-,ASSERT_THROWS,[u''],146
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(ParsedAggregationProjection::create(,+,ASSERT_THROWS,[u'ParsedAggregationProjection::create('],150
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""_id"" << true << ""_id.x"" << true)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""_id"" << true << ""_id.x"" << true)),']",168
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""_id.x"" << false << ""_id"" << false)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""_id.x"" << false << ""_id"" << false)),']",170
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(ParsedAggregationProjection::create(,+,ASSERT_THROWS,[u'ParsedAggregationProjection::create('],195
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(,+,ASSERT_THROWS,[u''],198
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << true << ""b"" << false)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << true << ""b"" << false)),']",207
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << true << ""b"" << false)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a"" << true << ""b"" << false)),']",208
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << false << ""b"" << true)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << false << ""b"" << true)),']",210
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << false << ""b"" << true)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a"" << false << ""b"" << true)),']",211
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(ParsedAggregationProjection::create(,+,ASSERT_THROWS,[u'ParsedAggregationProjection::create('],217
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""_id.b"" << false << ""a.c"" << true)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""_id.b"" << false << ""a.c"" << true)),']",224
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""_id"" << true << ""a"" << false)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""_id"" << true << ""a"" << false)),']",238
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << false << ""_id"" << true)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << false << ""_id"" << true)),']",241
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""_id"" << true << ""a"" << false)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""_id"" << true << ""a"" << false)),']",242
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""_id"" << true << ""a.b.c"" << false)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""_id"" << true << ""a.b.c"" << false)),']",245
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << false << ""_id"" << true)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a"" << false << ""_id"" << true)),']",246
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""_id.x"" << true << ""a.b.c"" << false)),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""_id.x"" << true << ""a.b.c"" << false)),']",249
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(ParsedAggregationProjection::create(,+,ASSERT_THROWS,[u'ParsedAggregationProjection::create('],282
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(ParsedAggregationProjection::create(,+,ASSERT_THROWS,[u'ParsedAggregationProjection::create('],286
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << BSON(""b.c"" << true))),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << BSON(""b.c"" << true))),']",297
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << BSON(""b.c"" << wrapInLiteral(1)))),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << BSON(""b.c"" << wrapInLiteral(1)))),']",299
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON(""b.c"" << true))),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON(""b.c"" << true))),']",301
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(,+,ASSERT_THROWS,[u''],303
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""$dollar"" << 0)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""$dollar"" << 0)), UserException);']",309
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""$dollar"" << 1)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""$dollar"" << 1)), UserException);']",310
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$dollar"" << 0)), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""$dollar"" << 0)), UserException);']",312
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$dollar"" << 1)), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""$dollar"" << 1)), UserException);']",313
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""b.$dollar"" << 0)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""b.$dollar"" << 0)), UserException);']",315
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""b.$dollar"" << 1)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""b.$dollar"" << 1)), UserException);']",316
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""b.$dollar"" << 0)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""b.$dollar"" << 0)),']",317
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""b.$dollar"" << 1)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""b.$dollar"" << 1)),']",319
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""b"" << BSON(""$dollar"" << 0))),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""b"" << BSON(""$dollar"" << 0))),']",322
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""b"" << BSON(""$dollar"" << 0))),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""b"" << BSON(""$dollar"" << 0))),']",323
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""b"" << BSON(""$dollar"" << 1))),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""b"" << BSON(""$dollar"" << 1))),']",325
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""b"" << BSON(""$dollar"" << 1))),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""b"" << BSON(""$dollar"" << 1))),']",326
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""$add"" << 0)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""$add"" << 0)), UserException);']",329
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""$add"" << 1)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""$add"" << 1)), UserException);']",330
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$add"" << 0)), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""$add"" << 0)), UserException);']",331
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$add"" << 1)), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""$add"" << 1)), UserException);']",332
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""$add"" << BSON_ARRAY(4 << 2))),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""$add"" << BSON_ARRAY(4 << 2))),']",336
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$add"" << BSON_ARRAY(4 << 2))),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""$add"" << BSON_ARRAY(4 << 2))),']",338
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,-    ASSERT_THROWS(ParsedAggregationProjection::create(,-,ASSERT_THROWS,[u'ParsedAggregationProjection::create('],351
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,-    ASSERT_THROWS(ParsedAggregationProjection::create(,-,ASSERT_THROWS,[u'ParsedAggregationProjection::create('],354
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(,+,ASSERT_THROWS,[u''],358
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(,+,ASSERT_THROWS,[u''],362
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSONObj()), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSONObj()), UserException);']",369
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSONObj()), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSONObj()), UserException);']",371
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << BSONObj())), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << BSONObj())), UserException);']",375
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << false << ""b"" << BSONObj())),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << false << ""b"" << BSONObj())),']",376
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSONObj())),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSONObj())),']",378
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << true << ""b"" << BSONObj())),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << true << ""b"" << BSONObj())),']",380
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(,+,ASSERT_THROWS,[u''],381
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+    ASSERT_THROWS(,+,ASSERT_THROWS,[u''],384
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a.b"" << BSONObj())),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a.b"" << BSONObj())),']",387
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a.b"" << BSONObj())), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a.b"" << BSONObj())), UserException);']",389
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << BSON(""b"" << BSONObj()))),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << BSON(""b"" << BSONObj()))),']",390
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON(""b"" << BSONObj()))),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON(""b"" << BSONObj()))),']",391
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON("""" << wrapInLiteral(2))), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON("""" << wrapInLiteral(2))), UserException);']",410
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON("""" << true)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON("""" << true)), UserException);']",411
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON("""" << false)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON("""" << false)), UserException);']",412
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("""" << wrapInLiteral(2))),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON("""" << wrapInLiteral(2))),']",413
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("""" << true)), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON("""" << true)), UserException);']",415
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("""" << false)), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON("""" << false)), UserException);']",416
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << BSON("""" << true))),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << BSON("""" << true))),']",418
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON("""" << true))),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON("""" << true))),']",419
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a"" << BSON("""" << false))),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a"" << BSON("""" << false))),']",421
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON("""" << false))),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON("""" << false))),']",422
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON("""" << BSON(""a"" << true))),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON("""" << BSON(""a"" << true))),']",425
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("""" << BSON(""a"" << true))),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON("""" << BSON(""a"" << true))),']",426
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON("""" << BSON(""a"" << false))),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON("""" << BSON(""a"" << false))),']",428
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("""" << BSON(""a"" << false))),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON("""" << BSON(""a"" << false))),']",429
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a."" << true)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a."" << true)), UserException);']",432
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""a."" << false)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""a."" << false)), UserException);']",433
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a."" << true)), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a."" << true)), UserException);']",434
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a."" << false)), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""a."" << false)), UserException);']",435
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON("".a"" << true)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON("".a"" << true)), UserException);']",437
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON("".a"" << false)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON("".a"" << false)), UserException);']",438
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("".a"" << true)), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON("".a"" << true)), UserException);']",439
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("".a"" << false)), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON("".a"" << false)), UserException);']",440
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""$x"" << wrapInLiteral(2))),",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""$x"" << wrapInLiteral(2))),']",446
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$x"" << wrapInLiteral(2))),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""$x"" << wrapInLiteral(2))),']",447
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""c.$d"" << true)), UserException);",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""c.$d"" << true)), UserException);']",449
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"+    ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""c.$d"" << false)),",+,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(expCtx, BSON(""c.$d"" << false)),']",450
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""c.$d"" << true)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""c.$d"" << true)), UserException);']",452
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,71dd1c2378f67659c4a9fe19f1178b74575df827,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,"-    ASSERT_THROWS(ParsedAggregationProjection::create(BSON(""c.$d"" << false)), UserException);",-,ASSERT_THROWS,"[u'ParsedAggregationProjection::create(BSON(""c.$d"" << false)), UserException);']",453
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_inclusion_projection_test.cpp,c2610418a407f5e512b180a829b30b740a716a93,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_inclusion_projection_test.cpp,"-    ASSERT_THROWS(inclusion.parse(BSON(""a"" << BSON(""$gt"" << BSON(""bad""",-,ASSERT_THROWS,"[u'inclusion.parse(BSON(""a"" << BSON(""$gt"" << BSON(""bad""']",66
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_inclusion_projection_test.cpp,c2610418a407f5e512b180a829b30b740a716a93,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_inclusion_projection_test.cpp,"+    ASSERT_THROWS(inclusion.parse(expCtx,",+,ASSERT_THROWS,"[u'inclusion.parse(expCtx,']",68
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_inclusion_projection_test.cpp,c2610418a407f5e512b180a829b30b740a716a93,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_inclusion_projection_test.cpp,"-    ASSERT_THROWS(inclusion.parse(BSON(""_id"" << false)), UserException);",-,ASSERT_THROWS,"[u'inclusion.parse(BSON(""_id"" << false)), UserException);']",76
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_inclusion_projection_test.cpp,c2610418a407f5e512b180a829b30b740a716a93,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/parsed_inclusion_projection_test.cpp,"+    ASSERT_THROWS(inclusion.parse(expCtx, BSON(""_id"" << false)), UserException);",+,ASSERT_THROWS,"[u'inclusion.parse(expCtx, BSON(""_id"" << false)), UserException);']",78
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/pipeline_test.cpp,dba575017ce1b5f14557593f47c7d3a9e3db7a21,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/pipeline_test.cpp,-    ASSERT_OK(request.getStatus());,-,ASSERT_OK,[u'request.getStatus());'],1833
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/pipeline_test.cpp,dba575017ce1b5f14557593f47c7d3a9e3db7a21,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/pipeline_test.cpp,-    ASSERT(ctx->getCollator());,-,ASSERT,[u'ctx->getCollator());'],1836
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/pipeline_test.cpp,dba575017ce1b5f14557593f47c7d3a9e3db7a21,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/db/pipeline/pipeline_test.cpp,"-    ASSERT_TRUE(CollatorInterface::collatorsMatch(ctx->getCollator(), &collator));",-,ASSERT_TRUE,"[u'CollatorInterface::collatorsMatch(ctx->getCollator(), &collator));']",1838
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/s/commands/cluster_aggregate.cpp,1b687de25ddc992be47d8328ea5bb6a087d313d6,https://raw.githubusercontent.com/mongodb/mongo/37e720678f6e468726c6cc775a5dc898d080f0f3/src/mongo/s/commands/cluster_aggregate.cpp,+        collation = uassertStatusOK(CollatorFactoryInterface::get(txn->getServiceContext()),+,collation = uassertStatusOK,[u'CollatorFactoryInterface::get(txn->getServiceContext())'],126
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"-    LOG(1) << ""scheduling fetcher to read remote oplog on "" << _syncSourceHost << "" starting at """,-,LOG,"[u'1) << ""scheduling fetcher to read remote oplog on "" << _syncSourceHost << "" starting at ""']",421
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"+    LOG(logLevel) << ""scheduling fetcher to read remote oplog on "" << _syncSourceHost",+,LOG,"[u'logLevel) << ""scheduling fetcher to read remote oplog on "" << _syncSourceHost']",424
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"-        LOG(2) << ""Interrupted by shutdown while checking sync source."";",-,LOG,"[u'2) << ""Interrupted by shutdown while checking sync source."";']",748
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"+        LOG(2) << ""Stopping oplog fetcher due to shutdown."";",+,LOG,"[u'2) << ""Stopping oplog fetcher due to shutdown."";']",749
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"-        LOG(2) << ""Interrupted by waiting for applier to drain while checking sync source."";",-,LOG,"[u'2) << ""Interrupted by waiting for applier to drain while checking sync source."";']",756
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"+        LOG(2) << ""Stopping oplog fetcher because we are waiting for the applier to drain."";",+,LOG,"[u'2) << ""Stopping oplog fetcher because we are waiting for the applier to drain."";']",757
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"-        LOG(2) << ""Interrupted by becoming primary while checking sync source."";",-,LOG,"[u'2) << ""Interrupted by becoming primary while checking sync source."";']",762
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"+        LOG(2) << ""Stopping oplog fetcher because we are primary."";",+,LOG,"[u'2) << ""Stopping oplog fetcher because we are primary."";']",763
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"-        LOG(2) << ""Interrupted by a stop request while checking sync source."";",-,LOG,"[u'2) << ""Interrupted by a stop request while checking sync source."";']",769
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"+        LOG(2) << ""Stopping oplog fetcher due to stop request."";",+,LOG,"[u'2) << ""Stopping oplog fetcher due to stop request."";']",770
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"-        LOG(1) << ""Canceling oplog query because we have no valid sync source."";",-,LOG,"[u'1) << ""Canceling oplog query because we have no valid sync source."";']",777
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,d5fdd0019214ce79bb54f863e259ab0d0119a286,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/bgsync.cpp,"+        LOG(1) << ""Stopping oplog fetcher; canceling oplog query because we have no valid sync """,+,LOG,"[u'1) << ""Stopping oplog fetcher; canceling oplog query because we have no valid sync ""']",778
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/data_replicator_external_state_impl.cpp,418d1de7455898a5023b9f3ae267c8d6323ce2f8,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/data_replicator_external_state_impl.cpp,"-        LOG(1) << ""Canceling oplog query because we have to choose a sync source. Current source: """,-,LOG,"[u'1) << ""Canceling oplog query because we have to choose a sync source. Current source: ""']",75
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/data_replicator_external_state_impl.cpp,418d1de7455898a5023b9f3ae267c8d6323ce2f8,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/data_replicator_external_state_impl.cpp,+        log(),+,log,[u')'],78
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,881206a7d5e33e08bb33e6bfa5ccb2d9fc4fcc90,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/sync_source_resolver.cpp,"-        log() << ""Blacklisting due to empty oplog on host "" << candidate << "" for """,-,log,"[u') << ""Blacklisting due to empty oplog on host "" << candidate << "" for ""']",218
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,881206a7d5e33e08bb33e6bfa5ccb2d9fc4fcc90,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/sync_source_resolver.cpp,"+        log() << ""Blacklisting "" << candidate << "" due to empty oplog for """,+,log,"[u') << ""Blacklisting "" << candidate << "" due to empty oplog for ""']",219
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,881206a7d5e33e08bb33e6bfa5ccb2d9fc4fcc90,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/sync_source_resolver.cpp,"-        log() << ""Blacklisting due to empty first document from host "" << candidate << "" for """,-,log,"[u') << ""Blacklisting due to empty first document from host "" << candidate << "" for ""']",237
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,881206a7d5e33e08bb33e6bfa5ccb2d9fc4fcc90,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/sync_source_resolver.cpp,"+        log() << ""Blacklisting "" << candidate << "" due to empty first document for """,+,log,"[u') << ""Blacklisting "" << candidate << "" due to empty first document for ""']",238
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,881206a7d5e33e08bb33e6bfa5ccb2d9fc4fcc90,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/sync_source_resolver.cpp,"-        log() << ""Blacklisting due to null timestamp in first document from host "" << candidate",-,log,"[u') << ""Blacklisting due to null timestamp in first document from host "" << candidate']",257
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,881206a7d5e33e08bb33e6bfa5ccb2d9fc4fcc90,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/sync_source_resolver.cpp,"+        log() << ""Blacklisting "" << candidate << "" due to null timestamp in first document for """,+,log,"[u') << ""Blacklisting "" << candidate << "" due to null timestamp in first document for ""']",259
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,f3f00e7248829f2c806e88f4211b760a0b6f96b3,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl.cpp,"-            LOG(1) << ""Cannot select primary member as sync source because they are blacklisted:""",-,LOG,"[u'1) << ""Cannot select primary member as sync source because they are blacklisted:""']",197
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,f3f00e7248829f2c806e88f4211b760a0b6f96b3,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl.cpp,"+            LOG(1) << ""Cannot select a sync source because chaining is not allowed and primary """,+,LOG,"[u'1) << ""Cannot select a sync source because chaining is not allowed and primary ""']",198
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,f3f00e7248829f2c806e88f4211b760a0b6f96b3,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl.cpp,"-                    LOG(2) << ""Cannot select sync source because of voting differences: """,-,LOG,"[u'2) << ""Cannot select sync source because of voting differences: ""']",287
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,f3f00e7248829f2c806e88f4211b760a0b6f96b3,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl.cpp,"+                    LOG(2) << ""Cannot select sync source because we are a voter and it is not: """,+,LOG,"[u'2) << ""Cannot select sync source because we are a voter and it is not: ""']",288
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,f3f00e7248829f2c806e88f4211b760a0b6f96b3,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl.cpp,"+        log() << ""Choosing new sync source because the user has requested to use """,+,log,"[u') << ""Choosing new sync source because the user has requested to use ""']",2448
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,f3f00e7248829f2c806e88f4211b760a0b6f96b3,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl.cpp,"+        log() << ""Choosing new sync source because the config version supplied by "" << currentSource",+,log,"[u') << ""Choosing new sync source because the config version supplied by "" << currentSource']",2456
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,f3f00e7248829f2c806e88f4211b760a0b6f96b3,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl.cpp,"+        log() << ""Choosing new sync source because "" << currentSource.toString()",+,log,"[u') << ""Choosing new sync source because "" << currentSource.toString()']",2465
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,f3f00e7248829f2c806e88f4211b760a0b6f96b3,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl.cpp,+        log() << logMessage.str();,+,log,[u') << logMessage.str();'],2522
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,f3f00e7248829f2c806e88f4211b760a0b6f96b3,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl.cpp,"-            log() << ""re-evaluating sync source because our current sync source's most recent """,-,log,"[u') << ""re-evaluating sync source because our current sync source\'s most recent ""']",2556
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,f3f00e7248829f2c806e88f4211b760a0b6f96b3,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl.cpp,"+            log() << ""Choosing new sync source because the most recent OpTime of our sync source, """,+,log,"[u') << ""Choosing new sync source because the most recent OpTime of our sync source, ""']",2559
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"-    ASSERT_EQUALS(0, countLogLinesContaining(""re-evaluating sync source""));",-,"ASSERT_EQUALS(0, countLogLinesContaining","[u'""re-evaluating sync source""));']",5396
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",+,"ASSERT_EQUALS(0, countLogLinesContaining","[u'""Choosing new sync source""));']",5397
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"-    ASSERT_EQUALS(0, countLogLinesContaining(""re-evaluating sync source""));",-,"ASSERT_EQUALS(0, countLogLinesContaining","[u'""re-evaluating sync source""));']",5439
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",+,"ASSERT_EQUALS(0, countLogLinesContaining","[u'""Choosing new sync source""));']",5440
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"-    ASSERT_EQUALS(1, countLogLinesContaining(""re-evaluating sync source""));",-,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""re-evaluating sync source""));']",5480
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",+,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""Choosing new sync source""));']",5481
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"-    ASSERT_EQUALS(1, countLogLinesContaining(""re-evaluating sync source""));",-,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""re-evaluating sync source""));']",5534
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",+,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""Choosing new sync source""));']",5535
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"-    ASSERT_EQUALS(1, countLogLinesContaining(""re-evaluating sync source""));",-,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""re-evaluating sync source""));']",5703
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,791167d2f3a6c745ea277dadbf06218d17599f67,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_test.cpp,"+    ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",+,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""Choosing new sync source""));']",5704
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,1a627398e82c2e5170e79d2d87921a9e4bba1943,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"-    ASSERT_EQUALS(1, countLogLinesContaining(""re-evaluating sync source""));",-,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""re-evaluating sync source""));']",3236
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,1a627398e82c2e5170e79d2d87921a9e4bba1943,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"+    ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",+,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""Choosing new sync source""));']",3237
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,1a627398e82c2e5170e79d2d87921a9e4bba1943,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"-    ASSERT_EQUALS(1, countLogLinesContaining(""re-evaluating sync source""));",-,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""re-evaluating sync source""));']",3404
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,1a627398e82c2e5170e79d2d87921a9e4bba1943,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"+    ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",+,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""Choosing new sync source""));']",3405
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,1a627398e82c2e5170e79d2d87921a9e4bba1943,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"-    ASSERT_EQUALS(0, countLogLinesContaining(""re-evaluating sync source""));",-,"ASSERT_EQUALS(0, countLogLinesContaining","[u'""re-evaluating sync source""));']",3446
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,1a627398e82c2e5170e79d2d87921a9e4bba1943,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"+    ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",+,"ASSERT_EQUALS(0, countLogLinesContaining","[u'""Choosing new sync source""));']",3447
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,1a627398e82c2e5170e79d2d87921a9e4bba1943,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"-    ASSERT_EQUALS(0, countLogLinesContaining(""re-evaluating sync source""));",-,"ASSERT_EQUALS(0, countLogLinesContaining","[u'""re-evaluating sync source""));']",3488
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,1a627398e82c2e5170e79d2d87921a9e4bba1943,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"+    ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",+,"ASSERT_EQUALS(0, countLogLinesContaining","[u'""Choosing new sync source""));']",3489
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,1a627398e82c2e5170e79d2d87921a9e4bba1943,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"-    ASSERT_EQUALS(1, countLogLinesContaining(""re-evaluating sync source""));",-,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""re-evaluating sync source""));']",3529
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,1a627398e82c2e5170e79d2d87921a9e4bba1943,https://raw.githubusercontent.com/mongodb/mongo/0cd2bf29d5798a395a07e67ae79ede9a5cefd411/src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,"+    ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",+,"ASSERT_EQUALS(1, countLogLinesContaining","[u'""Choosing new sync source""));']",3530
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/accumulator_test.cpp,29ab135ebb4e207182251792b23163e707f8a4a7,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/accumulator_test.cpp,"-    assertExpectedResults(""$min"", expCtx, {{{Value(""abc""), Value(""cba"")}, Value(""cba"")}});",-,assertExpectedResults,"[u'""$min"", expCtx, {{{Value(""abc""), Value(""cba"")}, Value(""cba"")}});']",224
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/accumulator_test.cpp,29ab135ebb4e207182251792b23163e707f8a4a7,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/accumulator_test.cpp,"+    assertExpectedResults(""$min"", expCtx, {{{Value(""abc""_sd), Value(""cba""_sd)}, Value(""cba""_sd)}});",+,assertExpectedResults,"[u'""$min"", expCtx, {{{Value(""abc""_sd), Value(""cba""_sd)}, Value(""cba""_sd)}});']",225
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/accumulator_test.cpp,29ab135ebb4e207182251792b23163e707f8a4a7,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/accumulator_test.cpp,"-    assertExpectedResults(""$max"", expCtx, {{{Value(""abc""), Value(""cba"")}, Value(""abc"")}});",-,assertExpectedResults,"[u'""$max"", expCtx, {{{Value(""abc""), Value(""cba"")}, Value(""abc"")}});']",259
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/accumulator_test.cpp,29ab135ebb4e207182251792b23163e707f8a4a7,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/accumulator_test.cpp,"+    assertExpectedResults(""$max"", expCtx, {{{Value(""abc""_sd), Value(""cba""_sd)}, Value(""abc""_sd)}});",+,assertExpectedResults,"[u'""$max"", expCtx, {{{Value(""abc""_sd), Value(""cba""_sd)}, Value(""abc""_sd)}});']",260
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/accumulator_test.cpp,29ab135ebb4e207182251792b23163e707f8a4a7,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/accumulator_test.cpp,-    assertExpectedResults(,-,assertExpectedResults,[u''],365
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/accumulator_test.cpp,29ab135ebb4e207182251792b23163e707f8a4a7,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/accumulator_test.cpp,"+    assertExpectedResults(""$addToSet"",",+,assertExpectedResults,"[u'""$addToSet"",']",369
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_source_bucket_auto_test.cpp,530948d2d3d096919568702680bf5e63d3798fcb,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_source_bucket_auto_test.cpp,-    ASSERT_THROWS_CODE(,-,ASSERT_THROWS_CODE,[u''],846
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_source_bucket_auto_test.cpp,530948d2d3d096919568702680bf5e63d3798fcb,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_source_bucket_auto_test.cpp,"+    ASSERT_THROWS_CODE(getResults(bucketAutoSpec,",+,ASSERT_THROWS_CODE,"[u'getResults(bucketAutoSpec,']",852
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_source_group_test.cpp,599e282e6b94b9ed00acb149f03bb0b63c74918c,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_source_group_test.cpp,"-        ASSERT_VALUE_EQ(res.getDocument().getField(""_id"")[""sub""][""z""], Value(""c""));",-,ASSERT_VALUE_EQ,"[u'res.getDocument().getField(""_id"")[""sub""][""z""], Value(""c""));']",966
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_source_group_test.cpp,599e282e6b94b9ed00acb149f03bb0b63c74918c,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_source_group_test.cpp,"+        ASSERT_VALUE_EQ(res.getDocument().getField(""_id"")[""sub""][""z""], Value(""c""_sd));",+,ASSERT_VALUE_EQ,"[u'res.getDocument().getField(""_id"")[""sub""][""z""], Value(""c""_sd));']",967
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"-        ASSERT_VALUE_EQ(md.peek()[""x""][""y""][""z""], Value(""nested""));",-,ASSERT_VALUE_EQ,"[u'md.peek()[""x""][""y""][""z""], Value(""nested""));']",234
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"+        ASSERT_VALUE_EQ(md.peek()[""x""][""y""][""z""], Value(""nested""_sd));",+,ASSERT_VALUE_EQ,"[u'md.peek()[""x""][""y""][""z""], Value(""nested""_sd));']",236
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"-        ASSERT_VALUE_EQ(md.peek().getNestedField(xxyyzz), Value(""nested""));",-,ASSERT_VALUE_EQ,"[u'md.peek().getNestedField(xxyyzz), Value(""nested""));']",241
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"+        ASSERT_VALUE_EQ(md.peek().getNestedField(xxyyzz), Value(""nested""_sd));",+,ASSERT_VALUE_EQ,"[u'md.peek().getNestedField(xxyyzz), Value(""nested""_sd));']",243
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"-        ASSERT_VALUE_EQ(md.peek().getNestedField(xxxyyyzzz), Value(""nested""));",-,ASSERT_VALUE_EQ,"[u'md.peek().getNestedField(xxxyyyzzz), Value(""nested""));']",250
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"+        ASSERT_VALUE_EQ(md.peek().getNestedField(xxxyyyzzz), Value(""nested""_sd));",+,ASSERT_VALUE_EQ,"[u'md.peek().getNestedField(xxxyyyzzz), Value(""nested""_sd));']",252
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"-        ASSERT_THROWS(Value("""").coerceToInt(), UserException);",-,ASSERT_THROWS,"[u'Value("""").coerceToInt(), UserException);']",1171
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"+        ASSERT_THROWS(Value(StringData()).coerceToInt(), UserException);",+,ASSERT_THROWS,"[u'Value(StringData()).coerceToInt(), UserException);']",1172
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"-        ASSERT_THROWS(Value("""").coerceToLong(), UserException);",-,ASSERT_THROWS,"[u'Value("""").coerceToLong(), UserException);']",1258
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"+        ASSERT_THROWS(Value(StringData()).coerceToLong(), UserException);",+,ASSERT_THROWS,"[u'Value(StringData()).coerceToLong(), UserException);']",1259
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"-        ASSERT_THROWS(Value("""").coerceToDouble(), UserException);",-,ASSERT_THROWS,"[u'Value("""").coerceToDouble(), UserException);']",1346
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"+        ASSERT_THROWS(Value(StringData()).coerceToDouble(), UserException);",+,ASSERT_THROWS,"[u'Value(StringData()).coerceToDouble(), UserException);']",1347
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"-        ASSERT_THROWS(Value("""").coerceToDate(), UserException);",-,ASSERT_THROWS,"[u'Value("""").coerceToDate(), UserException);']",1398
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"+        ASSERT_THROWS(Value(StringData()).coerceToDate(), UserException);",+,ASSERT_THROWS,"[u'Value(StringData()).coerceToDate(), UserException);']",1399
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"-        assertComparison(-1, Value(1), Value(""string""));",-,assertComparison,"[u'-1, Value(1), Value(""string""));']",1721
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"-        assertComparison(0, Value(""string""), Value(BSONSymbol(""string"")));",-,assertComparison,"[u'0, Value(""string""), Value(BSONSymbol(""string"")));']",1722
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"-        assertComparison(-1, Value(""string""), Value(mongo::Document()));",-,assertComparison,"[u'-1, Value(""string""), Value(mongo::Document()));']",1723
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"+        assertComparison(-1, Value(1), Value(""string""_sd));",+,assertComparison,"[u'-1, Value(1), Value(""string""_sd));']",1724
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"+        assertComparison(0, Value(""string""_sd), Value(BSONSymbol(""string"")));",+,assertComparison,"[u'0, Value(""string""_sd), Value(BSONSymbol(""string"")));']",1725
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,bf6d3cca81d243eb2153418bfde2ea2a4ea72fab,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test.cpp,"+        assertComparison(-1, Value(""string""_sd), Value(mongo::Document()));",+,assertComparison,"[u'-1, Value(""string""_sd), Value(mongo::Document()));']",1726
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_DOCUMENT_EQ(Document({{""foo"", ""bar""}}), Document({{""foo"", ""bar""}}));",-,ASSERT_DOCUMENT_EQ,"[u'Document({{""foo"", ""bar""}}), Document({{""foo"", ""bar""}}));']",41
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_DOCUMENT_EQ(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""bar""_sd}}));",+,ASSERT_DOCUMENT_EQ,"[u'Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""bar""_sd}}));']",42
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_DOCUMENT_NE(Document({{""foo"", ""bar""}}), Document({{""foo"", ""baz""}}));",-,ASSERT_DOCUMENT_NE,"[u'Document({{""foo"", ""bar""}}), Document({{""foo"", ""baz""}}));']",46
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_DOCUMENT_NE(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""baz""_sd}}));",+,ASSERT_DOCUMENT_NE,"[u'Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""baz""_sd}}));']",47
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_DOCUMENT_LT(Document({{""foo"", ""bar""}}), Document({{""foo"", ""baz""}}));",-,ASSERT_DOCUMENT_LT,"[u'Document({{""foo"", ""bar""}}), Document({{""foo"", ""baz""}}));']",51
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_DOCUMENT_LT(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""baz""_sd}}));",+,ASSERT_DOCUMENT_LT,"[u'Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""baz""_sd}}));']",52
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_DOCUMENT_LTE(Document({{""foo"", ""bar""}}), Document({{""foo"", ""baz""}}));",-,ASSERT_DOCUMENT_LTE,"[u'Document({{""foo"", ""bar""}}), Document({{""foo"", ""baz""}}));']",56
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_DOCUMENT_LTE(Document({{""foo"", ""bar""}}), Document({{""foo"", ""bar""}}));",-,ASSERT_DOCUMENT_LTE,"[u'Document({{""foo"", ""bar""}}), Document({{""foo"", ""bar""}}));']",57
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_DOCUMENT_LTE(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""baz""_sd}}));",+,ASSERT_DOCUMENT_LTE,"[u'Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""baz""_sd}}));']",58
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_DOCUMENT_LTE(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""bar""_sd}}));",+,ASSERT_DOCUMENT_LTE,"[u'Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""bar""_sd}}));']",59
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_DOCUMENT_GT(Document({{""foo"", ""baz""}}), Document({{""foo"", ""bar""}}));",-,ASSERT_DOCUMENT_GT,"[u'Document({{""foo"", ""baz""}}), Document({{""foo"", ""bar""}}));']",63
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_DOCUMENT_GT(Document({{""foo"", ""baz""_sd}}), Document({{""foo"", ""bar""_sd}}));",+,ASSERT_DOCUMENT_GT,"[u'Document({{""foo"", ""baz""_sd}}), Document({{""foo"", ""bar""_sd}}));']",64
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_DOCUMENT_GTE(Document({{""foo"", ""baz""}}), Document({{""foo"", ""bar""}}));",-,ASSERT_DOCUMENT_GTE,"[u'Document({{""foo"", ""baz""}}), Document({{""foo"", ""bar""}}));']",68
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_DOCUMENT_GTE(Document({{""foo"", ""bar""}}), Document({{""foo"", ""bar""}}));",-,ASSERT_DOCUMENT_GTE,"[u'Document({{""foo"", ""bar""}}), Document({{""foo"", ""bar""}}));']",69
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_DOCUMENT_GTE(Document({{""foo"", ""baz""_sd}}), Document({{""foo"", ""bar""_sd}}));",+,ASSERT_DOCUMENT_GTE,"[u'Document({{""foo"", ""baz""_sd}}), Document({{""foo"", ""bar""_sd}}));']",70
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_DOCUMENT_GTE(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""bar""_sd}}));",+,ASSERT_DOCUMENT_GTE,"[u'Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""bar""_sd}}));']",71
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_VALUE_EQ(Value(""bar""), Value(""bar""));",-,ASSERT_VALUE_EQ,"[u'Value(""bar""), Value(""bar""));']",75
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_VALUE_EQ(Value(""bar""_sd), Value(""bar""_sd));",+,ASSERT_VALUE_EQ,"[u'Value(""bar""_sd), Value(""bar""_sd));']",76
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_VALUE_NE(Value(""bar""), Value(""baz""));",-,ASSERT_VALUE_NE,"[u'Value(""bar""), Value(""baz""));']",80
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_VALUE_NE(Value(""bar""_sd), Value(""baz""_sd));",+,ASSERT_VALUE_NE,"[u'Value(""bar""_sd), Value(""baz""_sd));']",81
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_VALUE_LT(Value(""bar""), Value(""baz""));",-,ASSERT_VALUE_LT,"[u'Value(""bar""), Value(""baz""));']",85
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_VALUE_LT(Value(""bar""_sd), Value(""baz""_sd));",+,ASSERT_VALUE_LT,"[u'Value(""bar""_sd), Value(""baz""_sd));']",86
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_VALUE_LTE(Value(""bar""), Value(""baz""));",-,ASSERT_VALUE_LTE,"[u'Value(""bar""), Value(""baz""));']",90
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_VALUE_LTE(Value(""bar""), Value(""bar""));",-,ASSERT_VALUE_LTE,"[u'Value(""bar""), Value(""bar""));']",91
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_VALUE_LTE(Value(""bar""_sd), Value(""baz""_sd));",+,ASSERT_VALUE_LTE,"[u'Value(""bar""_sd), Value(""baz""_sd));']",92
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_VALUE_LTE(Value(""bar""_sd), Value(""bar""_sd));",+,ASSERT_VALUE_LTE,"[u'Value(""bar""_sd), Value(""bar""_sd));']",93
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_VALUE_GT(Value(""baz""), Value(""bar""));",-,ASSERT_VALUE_GT,"[u'Value(""baz""), Value(""bar""));']",97
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_VALUE_GT(Value(""baz""_sd), Value(""bar""_sd));",+,ASSERT_VALUE_GT,"[u'Value(""baz""_sd), Value(""bar""_sd));']",98
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_VALUE_GTE(Value(""baz""), Value(""bar""));",-,ASSERT_VALUE_GTE,"[u'Value(""baz""), Value(""bar""));']",102
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"-    ASSERT_VALUE_GTE(Value(""bar""), Value(""bar""));",-,ASSERT_VALUE_GTE,"[u'Value(""bar""), Value(""bar""));']",103
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_VALUE_GTE(Value(""baz""_sd), Value(""bar""_sd));",+,ASSERT_VALUE_GTE,"[u'Value(""baz""_sd), Value(""bar""_sd));']",104
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,3c5bbf4436dd0b32310f4be8bc5dd96c52d98060,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/document_value_test_util_self_test.cpp,"+    ASSERT_VALUE_GTE(Value(""bar""_sd), Value(""bar""_sd));",+,ASSERT_VALUE_GTE,"[u'Value(""bar""_sd), Value(""bar""_sd));']",105
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"-    assertExpectedResults(""$stdDevSamp"",",-,assertExpectedResults,"[u'""$stdDevSamp"",']",2180
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,+    assertExpectedResults(,+,assertExpectedResults,[u''],2187
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_VALUE_EQ(Value(Document()), object->evaluate(Document{{""_id"", ""ID""}}));",-,ASSERT_VALUE_EQ,"[u'Value(Document()), object->evaluate(Document{{""_id"", ""ID""}}));']",2572
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_VALUE_EQ(Value(Document()), object->evaluate(Document{{""_id"", ""ID""_sd}}));",+,ASSERT_VALUE_EQ,"[u'Value(Document()), object->evaluate(Document{{""_id"", ""ID""_sd}}));']",2573
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_VALUE_EQ(Value(Document{{""a"", 1}, {""b"", 5}}), object->evaluate(Document{{""_id"", ""ID""}}));",-,ASSERT_VALUE_EQ,"[u'Value(Document{{""a"", 1}, {""b"", 5}}), object->evaluate(Document{{""_id"", ""ID""}}));']",2580
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_VALUE_EQ(Value(Document{{""a"", 1}, {""b"", 5}}),",+,ASSERT_VALUE_EQ,"[u'Value(Document{{""a"", 1}, {""b"", 5}}),']",2581
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_VALUE_EQ(Value(Document{{""a"", ""A""}, {""b"", ""B""}, {""c"", ""C""}}),",-,ASSERT_VALUE_EQ,"[u'Value(Document{{""a"", ""A""}, {""b"", ""B""}, {""c"", ""C""}}),']",2589
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,+    ASSERT_VALUE_EQ(,+,ASSERT_VALUE_EQ,[u''],2591
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_VALUE_EQ(Value(Document{{""a"", Document{{""b"", 1}, {""c"", ""ID""}}}}),",-,ASSERT_VALUE_EQ,"[u'Value(Document{{""a"", Document{{""b"", 1}, {""c"", ""ID""}}}}),']",2634
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_VALUE_EQ(Value(Document{{""a"", Document{{""b"", 1}, {""c"", ""ID""_sd}}}}),",+,ASSERT_VALUE_EQ,"[u'Value(Document{{""a"", Document{{""b"", 1}, {""c"", ""ID""_sd}}}}),']",2636
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_VALUE_EQ(fieldPathExpression->serialize(false), Value(""$field""));",-,ASSERT_VALUE_EQ,"[u'fieldPathExpression->serialize(false), Value(""$field""));']",3173
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_VALUE_EQ(fieldPathExpression->serialize(false), Value(""$field""_sd));",+,ASSERT_VALUE_EQ,"[u'fieldPathExpression->serialize(false), Value(""$field""_sd));']",3174
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"-    ASSERT_VALUE_EQ(constantExpression->serialize(false), Value(Document{{""$const"", ""foo""}}));",-,ASSERT_VALUE_EQ,"[u'constantExpression->serialize(false), Value(Document{{""$const"", ""foo""}}));']",3182
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"+    ASSERT_VALUE_EQ(constantExpression->serialize(false), Value(Document{{""$const"", ""foo""_sd}}));",+,ASSERT_VALUE_EQ,"[u'constantExpression->serialize(false), Value(Document{{""$const"", ""foo""_sd}}));']",3183
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"-    assertExpectedResults(""$strLenBytes"", {{{Value(""abc"")}, Value(3)}});",-,assertExpectedResults,"[u'""$strLenBytes"", {{{Value(""abc"")}, Value(3)}});']",3751
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"+    assertExpectedResults(""$strLenBytes"", {{{Value(""abc""_sd)}, Value(3)}});",+,assertExpectedResults,"[u'""$strLenBytes"", {{{Value(""abc""_sd)}, Value(3)}});']",3752
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"-    assertExpectedResults(""$strLenBytes"", {{{Value("""")}, Value(0)}});",-,assertExpectedResults,"[u'""$strLenBytes"", {{{Value("""")}, Value(0)}});']",3756
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"+    assertExpectedResults(""$strLenBytes"", {{{Value(StringData())}, Value(0)}});",+,assertExpectedResults,"[u'""$strLenBytes"", {{{Value(StringData())}, Value(0)}});']",3757
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"-    assertExpectedResults(""$strLenCP"", {{{Value(""abc"")}, Value(3)}});",-,assertExpectedResults,"[u'""$strLenCP"", {{{Value(""abc"")}, Value(3)}});']",3785
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"+    assertExpectedResults(""$strLenCP"", {{{Value(""abc""_sd)}, Value(3)}});",+,assertExpectedResults,"[u'""$strLenCP"", {{{Value(""abc""_sd)}, Value(3)}});']",3786
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"-    assertExpectedResults(""$strLenCP"", {{{Value("""")}, Value(0)}});",-,assertExpectedResults,"[u'""$strLenCP"", {{{Value("""")}, Value(0)}});']",3790
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,13e96dfef0cfa7e5061c4e895b1e14747df0d515,https://raw.githubusercontent.com/mongodb/mongo/d92892f7ad0a83252c788c08646d05ac46cfeabc/src/mongo/db/pipeline/expression_test.cpp,"+    assertExpectedResults(""$strLenCP"", {{{Value(StringData())}, Value(0)}});",+,assertExpectedResults,"[u'""$strLenCP"", {{{Value(StringData())}, Value(0)}});']",3791

commit_message,file_name,change_type,log_node,cdg_nodes,ddg_nodes
"Merge tag 'xfs-4.11-fixes-3' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux

Pull XFS fixes from Darrick Wong:
 ""Here are three more fixes for 4.11.

  The first one reworks the inline directory verifier to check the
  working copy of the directory metadata and to avoid triggering a
  periodic crash in xfs/348. The second patch fixes a regression in hole
  punching at EOF that corrupts files; and the third patch closes a
  kernel memory disclosure bug.

  Summary:

   - rework the inline directory verifier to avoid crashes on disk
     corruption

   - don't change file size when punching holes w/ KEEP_SIZE

   - close a kernel memory exposure bug""

* tag 'xfs-4.11-fixes-3' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux:
  xfs: fix kernel memory exposure problems
  xfs: Honor FALLOC_FL_KEEP_SIZE when punching ends of files
  xfs: rework the inline directory verifiers",fs/xfs/libxfs/xfs_dir2_sf.c,+,"[[3160, u'True', u'ExpressionStatement', u'ASSERT ( ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL )']]","[[3161, None, u'CallExpression', u'ASSERT ( ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL )'], [3171, None, u'Callee', u'ASSERT'], [3162, None, u'ArgumentList', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [3172, None, u'Identifier', u'ASSERT'], [3163, None, u'Argument', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [3164, None, u'EqualityExpression', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [3166, None, u'MemberAccess', u'ip -> i_d . di_format'], [3165, None, u'Identifier', u'XFS_DINODE_FMT_LOCAL'], [3168, None, u'PtrMemberAccess', u'ip -> i_d'], [3167, None, u'Identifier', u'di_format'], [3170, None, u'Identifier', u'ip'], [3169, None, u'Identifier', u'i_d'], [3160, u'True', u'ExpressionStatement', u'ASSERT ( ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL )'], [3234, u'True', u'CFGEntryNode', u'ENTRY']]","[[3161, None, u'CallExpression', u'ASSERT ( ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL )'], [3171, None, u'Callee', u'ASSERT'], [3162, None, u'ArgumentList', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [3172, None, u'Identifier', u'ASSERT'], [3163, None, u'Argument', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [3164, None, u'EqualityExpression', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [3166, None, u'MemberAccess', u'ip -> i_d . di_format'], [3165, None, u'Identifier', u'XFS_DINODE_FMT_LOCAL'], [3168, None, u'PtrMemberAccess', u'ip -> i_d'], [3167, None, u'Identifier', u'di_format'], [3170, None, u'Identifier', u'ip'], [3169, None, u'Identifier', u'i_d'], [3160, u'True', u'ExpressionStatement', u'ASSERT ( ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL )'], [2821, None, u'ParameterType', u'struct xfs_inode *'], [2820, None, u'Identifier', u'ip'], [2819, u'True', u'Parameter', u'struct xfs_inode * ip']]"
"Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus

Pull MIPS fixes from Ralf Baechle:
 ""Lantiq:
    - Fix adding xbar resoures causing a panic

  Loongson3:
    - Some Loongson 3A don't identify themselves as having an FTLB so
      hardwire that knowledge into CPU probing.
    - Handle Loongson 3 TLB peculiarities in the fast path of the RDHWR
      emulation.
    - Fix invalid FTLB entries with huge page on VTLB+FTLB platforms
    - Add missing calculation of S-cache and V-cache cache-way size

  Ralink:
    - Fix typos in rt3883 pinctrl data

  Generic:
    - Force o32 fp64 support on 32bit MIPS64r6 kernels
    - Yet another build fix after the linux/sched.h changes
    - Wire up statx system call
    - Fix stack unwinding after introduction of IRQ stack
    - Fix spinlock code to build even for microMIPS with recent binutils

  SMP-CPS:
    - Fix retrieval of VPE mask on big endian CPUs""

* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:
  MIPS: IRQ Stack: Unwind IRQ stack onto task stack
  MIPS: c-r4k: Fix Loongson-3's vcache/scache waysize calculation
  MIPS: Flush wrong invalid FTLB entry for huge page
  MIPS: Check TLB before handle_ri_rdhwr() for Loongson-3
  MIPS: Add MIPS_CPU_FTLB for Loongson-3A R2
  MIPS: Lantiq: fix missing xbar kernel panic
  MIPS: smp-cps: Fix retrieval of VPE mask on big endian CPUs
  MIPS: Wire up statx system call
  MIPS: Include asm/ptrace.h now linux/sched.h doesn't
  MIPS: ralink: Fix typos in rt3883 pinctrl
  MIPS: End spinlocks with .insn
  MIPS: Force o32 fp64 support on 32bit MIPS64r6 kernels",arch/mips/mm/tlbex.c,+,"[[108892, u'True', u'ExpressionStatement', u'build_tlb_write_entry ( p , l , r , tlb_indexed )']]","[[108893, None, u'CallExpression', u'build_tlb_write_entry ( p , l , r , tlb_indexed )'], [108903, None, u'Callee', u'build_tlb_write_entry'], [108894, None, u'ArgumentList', u'p'], [108904, None, u'Identifier', u'build_tlb_write_entry'], [108901, None, u'Argument', u'p'], [108899, None, u'Argument', u'l'], [108897, None, u'Argument', u'r'], [108895, None, u'Argument', u'tlb_indexed'], [108902, None, u'Identifier', u'p'], [108900, None, u'Identifier', u'l'], [108898, None, u'Identifier', u'r'], [108896, None, u'Identifier', u'tlb_indexed'], [108892, u'True', u'ExpressionStatement', u'build_tlb_write_entry ( p , l , r , tlb_indexed )'], [108950, None, u'AndExpression', u'cpu_has_ftlb && flush'], [108952, None, u'Identifier', u'cpu_has_ftlb'], [108951, None, u'Identifier', u'flush'], [108949, u'True', u'Condition', u'cpu_has_ftlb && flush'], [108992, u'True', u'CFGEntryNode', u'ENTRY']]","[[108893, None, u'CallExpression', u'build_tlb_write_entry ( p , l , r , tlb_indexed )'], [108903, None, u'Callee', u'build_tlb_write_entry'], [108894, None, u'ArgumentList', u'p'], [108904, None, u'Identifier', u'build_tlb_write_entry'], [108901, None, u'Argument', u'p'], [108899, None, u'Argument', u'l'], [108897, None, u'Argument', u'r'], [108895, None, u'Argument', u'tlb_indexed'], [108902, None, u'Identifier', u'p'], [108900, None, u'Identifier', u'l'], [108898, None, u'Identifier', u'r'], [108896, None, u'Identifier', u'tlb_indexed'], [108892, u'True', u'ExpressionStatement', u'build_tlb_write_entry ( p , l , r , tlb_indexed )'], [108806, None, u'ParameterType', u'u32 * *'], [108805, None, u'Identifier', u'p'], [108804, u'True', u'Parameter', u'u32 * * p'], [108803, None, u'ParameterType', u'struct uasm_reloc * *'], [108802, None, u'Identifier', u'r'], [108801, u'True', u'Parameter', u'struct uasm_reloc * * r'], [108800, None, u'ParameterType', u'struct uasm_label * *'], [108799, None, u'Identifier', u'l'], [108798, u'True', u'Parameter', u'struct uasm_label * * l']]"
"Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus

Pull MIPS fixes from Ralf Baechle:
 ""Lantiq:
    - Fix adding xbar resoures causing a panic

  Loongson3:
    - Some Loongson 3A don't identify themselves as having an FTLB so
      hardwire that knowledge into CPU probing.
    - Handle Loongson 3 TLB peculiarities in the fast path of the RDHWR
      emulation.
    - Fix invalid FTLB entries with huge page on VTLB+FTLB platforms
    - Add missing calculation of S-cache and V-cache cache-way size

  Ralink:
    - Fix typos in rt3883 pinctrl data

  Generic:
    - Force o32 fp64 support on 32bit MIPS64r6 kernels
    - Yet another build fix after the linux/sched.h changes
    - Wire up statx system call
    - Fix stack unwinding after introduction of IRQ stack
    - Fix spinlock code to build even for microMIPS with recent binutils

  SMP-CPS:
    - Fix retrieval of VPE mask on big endian CPUs""

* 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus:
  MIPS: IRQ Stack: Unwind IRQ stack onto task stack
  MIPS: c-r4k: Fix Loongson-3's vcache/scache waysize calculation
  MIPS: Flush wrong invalid FTLB entry for huge page
  MIPS: Check TLB before handle_ri_rdhwr() for Loongson-3
  MIPS: Add MIPS_CPU_FTLB for Loongson-3A R2
  MIPS: Lantiq: fix missing xbar kernel panic
  MIPS: smp-cps: Fix retrieval of VPE mask on big endian CPUs
  MIPS: Wire up statx system call
  MIPS: Include asm/ptrace.h now linux/sched.h doesn't
  MIPS: ralink: Fix typos in rt3883 pinctrl
  MIPS: End spinlocks with .insn
  MIPS: Force o32 fp64 support on 32bit MIPS64r6 kernels",arch/mips/mm/tlbex.c,+,"[[108840, u'True', u'ExpressionStatement', u'build_huge_tlb_write_entry ( p , l , r , pte , tlb_random , 0 )']]","[[108841, None, u'CallExpression', u'build_huge_tlb_write_entry ( p , l , r , pte , tlb_random , 0 )'], [108855, None, u'Callee', u'build_huge_tlb_write_entry'], [108842, None, u'ArgumentList', u'p'], [108856, None, u'Identifier', u'build_huge_tlb_write_entry'], [108853, None, u'Argument', u'p'], [108851, None, u'Argument', u'l'], [108849, None, u'Argument', u'r'], [108847, None, u'Argument', u'pte'], [108845, None, u'Argument', u'tlb_random'], [108843, None, u'Argument', u'0'], [108854, None, u'Identifier', u'p'], [108852, None, u'Identifier', u'l'], [108850, None, u'Identifier', u'r'], [108848, None, u'Identifier', u'pte'], [108846, None, u'Identifier', u'tlb_random'], [108844, None, u'PrimaryExpression', u'0'], [108840, u'True', u'ExpressionStatement', u'build_huge_tlb_write_entry ( p , l , r , pte , tlb_random , 0 )'], [108950, None, u'AndExpression', u'cpu_has_ftlb && flush'], [108952, None, u'Identifier', u'cpu_has_ftlb'], [108951, None, u'Identifier', u'flush'], [108949, u'True', u'Condition', u'cpu_has_ftlb && flush'], [108992, u'True', u'CFGEntryNode', u'ENTRY']]","[[108841, None, u'CallExpression', u'build_huge_tlb_write_entry ( p , l , r , pte , tlb_random , 0 )'], [108855, None, u'Callee', u'build_huge_tlb_write_entry'], [108842, None, u'ArgumentList', u'p'], [108856, None, u'Identifier', u'build_huge_tlb_write_entry'], [108853, None, u'Argument', u'p'], [108851, None, u'Argument', u'l'], [108849, None, u'Argument', u'r'], [108847, None, u'Argument', u'pte'], [108845, None, u'Argument', u'tlb_random'], [108843, None, u'Argument', u'0'], [108854, None, u'Identifier', u'p'], [108852, None, u'Identifier', u'l'], [108850, None, u'Identifier', u'r'], [108848, None, u'Identifier', u'pte'], [108846, None, u'Identifier', u'tlb_random'], [108844, None, u'PrimaryExpression', u'0'], [108840, u'True', u'ExpressionStatement', u'build_huge_tlb_write_entry ( p , l , r , pte , tlb_random , 0 )'], [108806, None, u'ParameterType', u'u32 * *'], [108805, None, u'Identifier', u'p'], [108804, u'True', u'Parameter', u'u32 * * p'], [108803, None, u'ParameterType', u'struct uasm_reloc * *'], [108802, None, u'Identifier', u'r'], [108801, u'True', u'Parameter', u'struct uasm_reloc * * r'], [108797, None, u'ParameterType', u'unsigned int'], [108796, None, u'Identifier', u'pte'], [108795, u'True', u'Parameter', u'unsigned int pte'], [108800, None, u'ParameterType', u'struct uasm_label * *'], [108799, None, u'Identifier', u'l'], [108798, u'True', u'Parameter', u'struct uasm_label * * l']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",drivers/net/irda/vlsi_ir.c,+,"[[292195, u'True', u'Condition', u'rd -> buf == NULL || pci_dma_mapping_error ( pdev , busaddr )']]","[[292196, None, u'OrExpression', u'rd -> buf == NULL || pci_dma_mapping_error ( pdev , busaddr )'], [292205, None, u'EqualityExpression', u'rd -> buf == NULL'], [292197, None, u'CallExpression', u'pci_dma_mapping_error ( pdev , busaddr )'], [292207, None, u'PtrMemberAccess', u'rd -> buf'], [292206, None, u'Identifier', u'NULL'], [292203, None, u'Callee', u'pci_dma_mapping_error'], [292198, None, u'ArgumentList', u'pdev'], [292209, None, u'Identifier', u'rd'], [292208, None, u'Identifier', u'buf'], [292204, None, u'Identifier', u'pci_dma_mapping_error'], [292201, None, u'Argument', u'pdev'], [292199, None, u'Argument', u'busaddr'], [292202, None, u'Identifier', u'pdev'], [292200, None, u'Identifier', u'busaddr'], [292195, u'True', u'Condition', u'rd -> buf == NULL || pci_dma_mapping_error ( pdev , busaddr )'], [292282, None, u'RelationalExpression', u'i < size'], [292284, None, u'Identifier', u'i'], [292283, None, u'Identifier', u'size'], [292281, u'True', u'Condition', u'i < size'], [292376, None, u'UnaryOp', u'! r'], [292378, None, u'UnaryOperator', u'!'], [292377, None, u'Identifier', u'r'], [292375, u'True', u'Condition', u'! r'], [292404, None, u'OrExpression', u'! size || ( ( size - 1 ) & size ) != 0'], [292412, None, u'UnaryOp', u'! size'], [292405, None, u'EqualityExpression', u'( ( size - 1 ) & size ) != 0'], [292414, None, u'UnaryOperator', u'!'], [292413, None, u'Identifier', u'size'], [292407, None, u'BitAndExpression', u'( size - 1 ) & size'], [292406, None, u'PrimaryExpression', u'0'], [292409, None, u'AdditiveExpression', u'size - 1'], [292408, None, u'Identifier', u'size'], [292411, None, u'Identifier', u'size'], [292410, None, u'PrimaryExpression', u'1'], [292403, u'True', u'Condition', u'! size || ( ( size - 1 ) & size ) != 0'], [292434, u'True', u'CFGEntryNode', u'ENTRY']]","[[292196, None, u'OrExpression', u'rd -> buf == NULL || pci_dma_mapping_error ( pdev , busaddr )'], [292205, None, u'EqualityExpression', u'rd -> buf == NULL'], [292197, None, u'CallExpression', u'pci_dma_mapping_error ( pdev , busaddr )'], [292207, None, u'PtrMemberAccess', u'rd -> buf'], [292206, None, u'Identifier', u'NULL'], [292203, None, u'Callee', u'pci_dma_mapping_error'], [292198, None, u'ArgumentList', u'pdev'], [292209, None, u'Identifier', u'rd'], [292208, None, u'Identifier', u'buf'], [292204, None, u'Identifier', u'pci_dma_mapping_error'], [292201, None, u'Argument', u'pdev'], [292199, None, u'Argument', u'busaddr'], [292202, None, u'Identifier', u'pdev'], [292200, None, u'Identifier', u'busaddr'], [292195, u'True', u'Condition', u'rd -> buf == NULL || pci_dma_mapping_error ( pdev , busaddr )'], [292233, None, u'AssignmentExpr', u'rd -> buf = kmalloc ( len , GFP_KERNEL | GFP_DMA )'], [292244, None, u'PtrMemberAccess', u'rd -> buf'], [292234, None, u'CallExpression', u'kmalloc ( len , GFP_KERNEL | GFP_DMA )'], [292246, None, u'Identifier', u'rd'], [292245, None, u'Identifier', u'buf'], [292242, None, u'Callee', u'kmalloc'], [292235, None, u'ArgumentList', u'len'], [292243, None, u'Identifier', u'kmalloc'], [292240, None, u'Argument', u'len'], [292236, None, u'Argument', u'GFP_KERNEL | GFP_DMA'], [292241, None, u'Identifier', u'len'], [292237, None, u'InclusiveOrExpression', u'GFP_KERNEL | GFP_DMA'], [292239, None, u'Identifier', u'GFP_KERNEL'], [292238, None, u'Identifier', u'GFP_DMA'], [292232, u'True', u'ExpressionStatement', u'rd -> buf = kmalloc ( len , GFP_KERNEL | GFP_DMA )'], [292057, None, u'ParameterType', u'struct pci_dev *'], [292056, None, u'Identifier', u'pdev'], [292055, u'True', u'Parameter', u'struct pci_dev * pdev'], [292271, None, u'AssignmentExpr', u'rd = r -> rd + i'], [292277, None, u'Identifier', u'rd'], [292272, None, u'AdditiveExpression', u'r -> rd + i'], [292274, None, u'PtrMemberAccess', u'r -> rd'], [292273, None, u'Identifier', u'i'], [292276, None, u'Identifier', u'r'], [292275, None, u'Identifier', u'rd'], [292270, u'True', u'ExpressionStatement', u'rd = r -> rd + i'], [292212, None, u'AssignmentExpr', u'busaddr = pci_map_single ( pdev , rd -> buf , len , dir )'], [292227, None, u'Identifier', u'busaddr'], [292213, None, u'CallExpression', u'pci_map_single ( pdev , rd -> buf , len , dir )'], [292225, None, u'Callee', u'pci_map_single'], [292214, None, u'ArgumentList', u'pdev'], [292226, None, u'Identifier', u'pci_map_single'], [292223, None, u'Argument', u'pdev'], [292219, None, u'Argument', u'rd -> buf'], [292217, None, u'Argument', u'len'], [292215, None, u'Argument', u'dir'], [292224, None, u'Identifier', u'pdev'], [292220, None, u'PtrMemberAccess', u'rd -> buf'], [292218, None, u'Identifier', u'len'], [292216, None, u'Identifier', u'dir'], [292222, None, u'Identifier', u'rd'], [292221, None, u'Identifier', u'buf'], [292211, u'True', u'ExpressionStatement', u'busaddr = pci_map_single ( pdev , rd -> buf , len , dir )'], [292416, None, u'IdentifierDecl', u'busaddr'], [292418, None, u'IdentifierDeclType', u'dma_addr_t'], [292417, None, u'Identifier', u'busaddr'], [292415, u'True', u'IdentifierDeclStatement', u'dma_addr_t busaddr ;'], [292048, None, u'ParameterType', u'unsigned'], [292047, None, u'Identifier', u'len'], [292046, u'True', u'Parameter', u'unsigned len'], [292330, None, u'AssignmentExpr', u'r -> rd = ( struct ring_descr * ) ( r + 1 )'], [292336, None, u'PtrMemberAccess', u'r -> rd'], [292331, None, u'CastExpression', u'( struct ring_descr * ) ( r + 1 )'], [292338, None, u'Identifier', u'r'], [292337, None, u'Identifier', u'rd'], [292335, None, u'CastTarget', u'struct ring_descr *'], [292332, None, u'AdditiveExpression', u'r + 1'], [292334, None, u'Identifier', u'r'], [292333, None, u'PrimaryExpression', u'1'], [292329, u'True', u'ExpressionStatement', u'r -> rd = ( struct ring_descr * ) ( r + 1 )'], [292380, None, u'AssignmentExpr', u'r = kmalloc ( sizeof ( * r ) + size * sizeof ( struct ring_descr ) , GFP_KERNEL )'], [292399, None, u'Identifier', u'r'], [292381, None, u'CallExpression', u'kmalloc ( sizeof ( * r ) + size * sizeof ( struct ring_descr ) , GFP_KERNEL )'], [292397, None, u'Callee', u'kmalloc'], [292382, None, u'ArgumentList', u'sizeof ( * r ) + size * sizeof ( struct ring_descr )'], [292398, None, u'Identifier', u'kmalloc'], [292385, None, u'Argument', u'sizeof ( * r ) + size * sizeof ( struct ring_descr )'], [292383, None, u'Argument', u'GFP_KERNEL'], [292386, None, u'AdditiveExpression', u'sizeof ( * r ) + size * sizeof ( struct ring_descr )'], [292384, None, u'Identifier', u'GFP_KERNEL'], [292392, None, u'SizeofExpr', u'sizeof ( * r )'], [292387, None, u'MultiplicativeExpression', u'size * sizeof ( struct ring_descr )'], [292396, None, u'Sizeof', u'sizeof'], [292393, None, u'UnaryOp', u'* r'], [292391, None, u'Identifier', u'size'], [292388, None, u'SizeofExpr', u'sizeof ( struct ring_descr )'], [292395, None, u'UnaryOperator', u'*'], [292394, None, u'Identifier', u'r'], [292390, None, u'Sizeof', u'sizeof'], [292389, None, u'SizeofOperand', u'struct ring_descr'], [292379, u'True', u'ExpressionStatement', u'r = kmalloc ( sizeof ( * r ) + size * sizeof ( struct ring_descr ) , GFP_KERNEL )'], [292280, None, u'Identifier', u'i'], [292279, None, u'IncDec', u'++'], [292278, u'True', u'IncDecOp', u'i ++'], [292286, None, u'AssignmentExpr', u'i = 0'], [292288, None, u'Identifier', u'i'], [292287, None, u'PrimaryExpression', u'0'], [292285, u'True', u'ForInit', u'i = 0 ;'], [292316, None, u'AssignmentExpr', u'r -> size = size'], [292318, None, u'PtrMemberAccess', u'r -> size'], [292317, None, u'Identifier', u'size'], [292320, None, u'Identifier', u'r'], [292319, None, u'Identifier', u'size'], [292315, u'True', u'ExpressionStatement', u'r -> size = size'], [292045, None, u'ParameterType', u'int'], [292044, None, u'Identifier', u'dir'], [292043, u'True', u'Parameter', u'int dir'], [292431, None, u'IdentifierDecl', u'* r'], [292433, None, u'IdentifierDeclType', u'struct vlsi_ring *'], [292432, None, u'Identifier', u'r'], [292430, u'True', u'IdentifierDeclStatement', u'struct vlsi_ring * r ;'], [292051, None, u'ParameterType', u'unsigned'], [292050, None, u'Identifier', u'size'], [292049, u'True', u'Parameter', u'unsigned size']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",net/ipv4/ping.c,+,"[[460273, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )']]","[[460274, None, u'CallExpression', u'write_lock_bh ( & ping_table . lock )'], [460282, None, u'Callee', u'write_lock_bh'], [460275, None, u'ArgumentList', u'& ping_table . lock'], [460283, None, u'Identifier', u'write_lock_bh'], [460276, None, u'Argument', u'& ping_table . lock'], [460277, None, u'UnaryOp', u'& ping_table . lock'], [460281, None, u'UnaryOperator', u'&'], [460278, None, u'MemberAccess', u'ping_table . lock'], [460280, None, u'Identifier', u'ping_table'], [460279, None, u'Identifier', u'lock'], [460273, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )'], [460309, u'True', u'CFGEntryNode', u'ENTRY']]","[[460274, None, u'CallExpression', u'write_lock_bh ( & ping_table . lock )'], [460282, None, u'Callee', u'write_lock_bh'], [460275, None, u'ArgumentList', u'& ping_table . lock'], [460283, None, u'Identifier', u'write_lock_bh'], [460276, None, u'Argument', u'& ping_table . lock'], [460277, None, u'UnaryOp', u'& ping_table . lock'], [460281, None, u'UnaryOperator', u'&'], [460278, None, u'MemberAccess', u'ping_table . lock'], [460280, None, u'Identifier', u'ping_table'], [460279, None, u'Identifier', u'lock'], [460273, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",net/ipv4/ping.c,-,"[[466805, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )']]","[[466806, None, u'CallExpression', u'write_lock_bh ( & ping_table . lock )'], [466814, None, u'Callee', u'write_lock_bh'], [466807, None, u'ArgumentList', u'& ping_table . lock'], [466815, None, u'Identifier', u'write_lock_bh'], [466808, None, u'Argument', u'& ping_table . lock'], [466809, None, u'UnaryOp', u'& ping_table . lock'], [466813, None, u'UnaryOperator', u'&'], [466810, None, u'MemberAccess', u'ping_table . lock'], [466812, None, u'Identifier', u'ping_table'], [466811, None, u'Identifier', u'lock'], [466805, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )'], [466817, None, u'CallExpression', u'sk_hashed ( sk )'], [466821, None, u'Callee', u'sk_hashed'], [466818, None, u'ArgumentList', u'sk'], [466822, None, u'Identifier', u'sk_hashed'], [466819, None, u'Argument', u'sk'], [466820, None, u'Identifier', u'sk'], [466816, u'True', u'Condition', u'sk_hashed ( sk )'], [466848, u'True', u'CFGEntryNode', u'ENTRY']]","[[466806, None, u'CallExpression', u'write_lock_bh ( & ping_table . lock )'], [466814, None, u'Callee', u'write_lock_bh'], [466807, None, u'ArgumentList', u'& ping_table . lock'], [466815, None, u'Identifier', u'write_lock_bh'], [466808, None, u'Argument', u'& ping_table . lock'], [466809, None, u'UnaryOp', u'& ping_table . lock'], [466813, None, u'UnaryOperator', u'&'], [466810, None, u'MemberAccess', u'ping_table . lock'], [466812, None, u'Identifier', u'ping_table'], [466811, None, u'Identifier', u'lock'], [466805, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",net/ipv4/ping.c,-,"[[466733, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )']]","[[466734, None, u'CallExpression', u'write_unlock_bh ( & ping_table . lock )'], [466742, None, u'Callee', u'write_unlock_bh'], [466735, None, u'ArgumentList', u'& ping_table . lock'], [466743, None, u'Identifier', u'write_unlock_bh'], [466736, None, u'Argument', u'& ping_table . lock'], [466737, None, u'UnaryOp', u'& ping_table . lock'], [466741, None, u'UnaryOperator', u'&'], [466738, None, u'MemberAccess', u'ping_table . lock'], [466740, None, u'Identifier', u'ping_table'], [466739, None, u'Identifier', u'lock'], [466733, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )'], [466817, None, u'CallExpression', u'sk_hashed ( sk )'], [466821, None, u'Callee', u'sk_hashed'], [466818, None, u'ArgumentList', u'sk'], [466822, None, u'Identifier', u'sk_hashed'], [466819, None, u'Argument', u'sk'], [466820, None, u'Identifier', u'sk'], [466816, u'True', u'Condition', u'sk_hashed ( sk )'], [466848, u'True', u'CFGEntryNode', u'ENTRY']]","[[466734, None, u'CallExpression', u'write_unlock_bh ( & ping_table . lock )'], [466742, None, u'Callee', u'write_unlock_bh'], [466735, None, u'ArgumentList', u'& ping_table . lock'], [466743, None, u'Identifier', u'write_unlock_bh'], [466736, None, u'Argument', u'& ping_table . lock'], [466737, None, u'UnaryOp', u'& ping_table . lock'], [466741, None, u'UnaryOperator', u'&'], [466738, None, u'MemberAccess', u'ping_table . lock'], [466740, None, u'Identifier', u'ping_table'], [466739, None, u'Identifier', u'lock'], [466733, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",net/ipv4/ping.c,+,"[[460192, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )']]","[[460193, None, u'CallExpression', u'write_unlock_bh ( & ping_table . lock )'], [460201, None, u'Callee', u'write_unlock_bh'], [460194, None, u'ArgumentList', u'& ping_table . lock'], [460202, None, u'Identifier', u'write_unlock_bh'], [460195, None, u'Argument', u'& ping_table . lock'], [460196, None, u'UnaryOp', u'& ping_table . lock'], [460200, None, u'UnaryOperator', u'&'], [460197, None, u'MemberAccess', u'ping_table . lock'], [460199, None, u'Identifier', u'ping_table'], [460198, None, u'Identifier', u'lock'], [460192, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )'], [460309, u'True', u'CFGEntryNode', u'ENTRY']]","[[460193, None, u'CallExpression', u'write_unlock_bh ( & ping_table . lock )'], [460201, None, u'Callee', u'write_unlock_bh'], [460194, None, u'ArgumentList', u'& ping_table . lock'], [460202, None, u'Identifier', u'write_unlock_bh'], [460195, None, u'Argument', u'& ping_table . lock'], [460196, None, u'UnaryOp', u'& ping_table . lock'], [460200, None, u'UnaryOperator', u'&'], [460197, None, u'MemberAccess', u'ping_table . lock'], [460199, None, u'Identifier', u'ping_table'], [460198, None, u'Identifier', u'lock'], [460192, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",net/l2tp/l2tp_core.c,+,"[[647000, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )']]","[[647001, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [647009, None, u'Callee', u'write_lock_bh'], [647002, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [647010, None, u'Identifier', u'write_lock_bh'], [647003, None, u'Argument', u'& tunnel -> hlist_lock'], [647004, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [647008, None, u'UnaryOperator', u'&'], [647005, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [647007, None, u'Identifier', u'tunnel'], [647006, None, u'Identifier', u'hlist_lock'], [647000, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [647040, u'True', u'CFGEntryNode', u'ENTRY']]","[[647001, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [647009, None, u'Callee', u'write_lock_bh'], [647002, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [647010, None, u'Identifier', u'write_lock_bh'], [647003, None, u'Argument', u'& tunnel -> hlist_lock'], [647004, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [647008, None, u'UnaryOperator', u'&'], [647005, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [647007, None, u'Identifier', u'tunnel'], [647006, None, u'Identifier', u'hlist_lock'], [647000, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [646829, None, u'ParameterType', u'struct l2tp_tunnel *'], [646828, None, u'Identifier', u'tunnel'], [646827, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",net/l2tp/l2tp_core.c,+,"[[646864, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )']]","[[646865, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [646873, None, u'Callee', u'write_unlock_bh'], [646866, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [646874, None, u'Identifier', u'write_unlock_bh'], [646867, None, u'Argument', u'& tunnel -> hlist_lock'], [646868, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [646872, None, u'UnaryOperator', u'&'], [646869, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [646871, None, u'Identifier', u'tunnel'], [646870, None, u'Identifier', u'hlist_lock'], [646864, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [646918, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [646922, None, u'PtrMemberAccess', u'session_walk -> session_id'], [646919, None, u'PtrMemberAccess', u'session -> session_id'], [646924, None, u'Identifier', u'session_walk'], [646923, None, u'Identifier', u'session_id'], [646921, None, u'Identifier', u'session'], [646920, None, u'Identifier', u'session_id'], [646917, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [646976, None, u'EqualityExpression', u'tunnel -> version == L2TP_HDR_VER_3'], [646978, None, u'PtrMemberAccess', u'tunnel -> version'], [646977, None, u'Identifier', u'L2TP_HDR_VER_3'], [646980, None, u'Identifier', u'tunnel'], [646979, None, u'Identifier', u'version'], [646975, u'True', u'Condition', u'tunnel -> version == L2TP_HDR_VER_3'], [646985, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [646989, None, u'PtrMemberAccess', u'session_walk -> session_id'], [646986, None, u'PtrMemberAccess', u'session -> session_id'], [646991, None, u'Identifier', u'session_walk'], [646990, None, u'Identifier', u'session_id'], [646988, None, u'Identifier', u'session'], [646987, None, u'Identifier', u'session_id'], [646984, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [647040, u'True', u'CFGEntryNode', u'ENTRY']]","[[646865, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [646873, None, u'Callee', u'write_unlock_bh'], [646866, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [646874, None, u'Identifier', u'write_unlock_bh'], [646867, None, u'Argument', u'& tunnel -> hlist_lock'], [646868, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [646872, None, u'UnaryOperator', u'&'], [646869, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [646871, None, u'Identifier', u'tunnel'], [646870, None, u'Identifier', u'hlist_lock'], [646864, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [646829, None, u'ParameterType', u'struct l2tp_tunnel *'], [646828, None, u'Identifier', u'tunnel'], [646827, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",net/l2tp/l2tp_core.c,+,"[[646836, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )']]","[[646837, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [646845, None, u'Callee', u'write_unlock_bh'], [646838, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [646846, None, u'Identifier', u'write_unlock_bh'], [646839, None, u'Argument', u'& tunnel -> hlist_lock'], [646840, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [646844, None, u'UnaryOperator', u'&'], [646841, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [646843, None, u'Identifier', u'tunnel'], [646842, None, u'Identifier', u'hlist_lock'], [646836, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [646918, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [646922, None, u'PtrMemberAccess', u'session_walk -> session_id'], [646919, None, u'PtrMemberAccess', u'session -> session_id'], [646924, None, u'Identifier', u'session_walk'], [646923, None, u'Identifier', u'session_id'], [646921, None, u'Identifier', u'session'], [646920, None, u'Identifier', u'session_id'], [646917, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [646985, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [646989, None, u'PtrMemberAccess', u'session_walk -> session_id'], [646986, None, u'PtrMemberAccess', u'session -> session_id'], [646991, None, u'Identifier', u'session_walk'], [646990, None, u'Identifier', u'session_id'], [646988, None, u'Identifier', u'session'], [646987, None, u'Identifier', u'session_id'], [646984, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [646976, None, u'EqualityExpression', u'tunnel -> version == L2TP_HDR_VER_3'], [646978, None, u'PtrMemberAccess', u'tunnel -> version'], [646977, None, u'Identifier', u'L2TP_HDR_VER_3'], [646980, None, u'Identifier', u'tunnel'], [646979, None, u'Identifier', u'version'], [646975, u'True', u'Condition', u'tunnel -> version == L2TP_HDR_VER_3'], [647040, u'True', u'CFGEntryNode', u'ENTRY']]","[[646837, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [646845, None, u'Callee', u'write_unlock_bh'], [646838, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [646846, None, u'Identifier', u'write_unlock_bh'], [646839, None, u'Argument', u'& tunnel -> hlist_lock'], [646840, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [646844, None, u'UnaryOperator', u'&'], [646841, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [646843, None, u'Identifier', u'tunnel'], [646842, None, u'Identifier', u'hlist_lock'], [646836, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [646829, None, u'ParameterType', u'struct l2tp_tunnel *'], [646828, None, u'Identifier', u'tunnel'], [646827, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",net/l2tp/l2tp_core.c,-,"[[662406, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )']]","[[662407, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [662415, None, u'Callee', u'write_lock_bh'], [662408, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [662416, None, u'Identifier', u'write_lock_bh'], [662409, None, u'Argument', u'& tunnel -> hlist_lock'], [662410, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [662414, None, u'UnaryOperator', u'&'], [662411, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [662413, None, u'Identifier', u'tunnel'], [662412, None, u'Identifier', u'hlist_lock'], [662406, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [662766, None, u'EqualityExpression', u'session != NULL'], [662768, None, u'Identifier', u'session'], [662767, None, u'Identifier', u'NULL'], [662765, u'True', u'Condition', u'session != NULL'], [662788, u'True', u'CFGEntryNode', u'ENTRY']]","[[662407, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [662415, None, u'Callee', u'write_lock_bh'], [662408, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [662416, None, u'Identifier', u'write_lock_bh'], [662409, None, u'Argument', u'& tunnel -> hlist_lock'], [662410, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [662414, None, u'UnaryOperator', u'&'], [662411, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [662413, None, u'Identifier', u'tunnel'], [662412, None, u'Identifier', u'hlist_lock'], [662406, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [662285, None, u'ParameterType', u'struct l2tp_tunnel *'], [662284, None, u'Identifier', u'tunnel'], [662283, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",net/l2tp/l2tp_core.c,-,"[[662375, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )']]","[[662376, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [662384, None, u'Callee', u'write_unlock_bh'], [662377, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [662385, None, u'Identifier', u'write_unlock_bh'], [662378, None, u'Argument', u'& tunnel -> hlist_lock'], [662379, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [662383, None, u'UnaryOperator', u'&'], [662380, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [662382, None, u'Identifier', u'tunnel'], [662381, None, u'Identifier', u'hlist_lock'], [662375, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [662766, None, u'EqualityExpression', u'session != NULL'], [662768, None, u'Identifier', u'session'], [662767, None, u'Identifier', u'NULL'], [662765, u'True', u'Condition', u'session != NULL'], [662788, u'True', u'CFGEntryNode', u'ENTRY']]","[[662376, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [662384, None, u'Callee', u'write_unlock_bh'], [662377, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [662385, None, u'Identifier', u'write_unlock_bh'], [662378, None, u'Argument', u'& tunnel -> hlist_lock'], [662379, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [662383, None, u'UnaryOperator', u'&'], [662380, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [662382, None, u'Identifier', u'tunnel'], [662381, None, u'Identifier', u'hlist_lock'], [662375, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [662285, None, u'ParameterType', u'struct l2tp_tunnel *'], [662284, None, u'Identifier', u'tunnel'], [662283, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",tools/testing/selftests/bpf/test_verifier.c,+,"[[814103, u'True', u'ExpressionStatement', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )']]","[[814104, None, u'CallExpression', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )'], [814115, None, u'Callee', u'printf'], [814105, None, u'ArgumentList', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [814116, None, u'Identifier', u'printf'], [814113, None, u'Argument', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [814106, None, u'Argument', u'strerror ( errno )'], [814114, None, u'PrimaryExpression', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [814107, None, u'CallExpression', u'strerror ( errno )'], [814111, None, u'Callee', u'strerror'], [814108, None, u'ArgumentList', u'errno'], [814112, None, u'Identifier', u'strerror'], [814109, None, u'Argument', u'errno'], [814110, None, u'Identifier', u'errno'], [814103, u'True', u'ExpressionStatement', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )'], [814118, None, u'Identifier', u'reject_from_alignment'], [814117, u'True', u'Condition', u'reject_from_alignment'], [814289, u'True', u'CFGEntryNode', u'ENTRY']]","[[814104, None, u'CallExpression', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )'], [814115, None, u'Callee', u'printf'], [814105, None, u'ArgumentList', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [814116, None, u'Identifier', u'printf'], [814113, None, u'Argument', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [814106, None, u'Argument', u'strerror ( errno )'], [814114, None, u'PrimaryExpression', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [814107, None, u'CallExpression', u'strerror ( errno )'], [814111, None, u'Callee', u'strerror'], [814108, None, u'ArgumentList', u'errno'], [814112, None, u'Identifier', u'strerror'], [814109, None, u'Argument', u'errno'], [814110, None, u'Identifier', u'errno'], [814103, u'True', u'ExpressionStatement', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",tools/testing/selftests/bpf/test_verifier.c,-,"[[815472, u'True', u'ExpressionStatement', u'printf ( ""OK\\n"" )']]","[[815473, None, u'CallExpression', u'printf ( ""OK\\n"" )'], [815477, None, u'Callee', u'printf'], [815474, None, u'ArgumentList', u'""OK\\n""'], [815478, None, u'Identifier', u'printf'], [815475, None, u'Argument', u'""OK\\n""'], [815476, None, u'PrimaryExpression', u'""OK\\n""'], [815472, u'True', u'ExpressionStatement', u'printf ( ""OK\\n"" )'], [815545, None, u'RelationalExpression', u'fd_prog < 0'], [815547, None, u'Identifier', u'fd_prog'], [815546, None, u'PrimaryExpression', u'0'], [815544, u'True', u'Condition', u'fd_prog < 0'], [815500, None, u'UnaryOp', u'! strstr ( bpf_vlog , expected_err )'], [815509, None, u'UnaryOperator', u'!'], [815501, None, u'CallExpression', u'strstr ( bpf_vlog , expected_err )'], [815507, None, u'Callee', u'strstr'], [815502, None, u'ArgumentList', u'bpf_vlog'], [815508, None, u'Identifier', u'strstr'], [815505, None, u'Argument', u'bpf_vlog'], [815503, None, u'Argument', u'expected_err'], [815506, None, u'Identifier', u'bpf_vlog'], [815504, None, u'Identifier', u'expected_err'], [815499, u'True', u'Condition', u'! strstr ( bpf_vlog , expected_err )'], [815549, None, u'EqualityExpression', u'expected_ret == ACCEPT'], [815551, None, u'Identifier', u'expected_ret'], [815550, None, u'Identifier', u'ACCEPT'], [815548, u'True', u'Condition', u'expected_ret == ACCEPT'], [815522, None, u'RelationalExpression', u'fd_prog >= 0'], [815524, None, u'Identifier', u'fd_prog'], [815523, None, u'PrimaryExpression', u'0'], [815521, u'True', u'Condition', u'fd_prog >= 0'], [815698, u'True', u'CFGEntryNode', u'ENTRY']]","[[815473, None, u'CallExpression', u'printf ( ""OK\\n"" )'], [815477, None, u'Callee', u'printf'], [815474, None, u'ArgumentList', u'""OK\\n""'], [815478, None, u'Identifier', u'printf'], [815475, None, u'Argument', u'""OK\\n""'], [815476, None, u'PrimaryExpression', u'""OK\\n""'], [815472, u'True', u'ExpressionStatement', u'printf ( ""OK\\n"" )']]"
"Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net

Pull networking fixes from David Miller:

 1) Reject invalid updates to netfilter expectation policies, from Pablo
    Neira Ayuso.

 2) Fix memory leak in nfnl_cthelper, from Jeffy Chen.

 3) Don't do stupid things if we get a neigh_probe() on a neigh entry
    whose ops lack a solicit method. From Eric Dumazet.

 4) Don't transmit packets in r8152 driver when the carrier is off, from
    Hayes Wang.

 5) Fix ipv6 packet type detection in aquantia driver, from Pavel
    Belous.

 6) Don't write uninitialized data into hw registers in bna driver, from
    Arnd Bergmann.

 7) Fix locking in ping_unhash(), from Eric Dumazet.

 8) Make BPF verifier range checks able to understand certain sequences
    emitted by LLVM, from Alexei Starovoitov.

 9) Fix use after free in ipconfig, from Mark Rutland.

10) Fix refcount leak on force commit in openvswitch, from Jarno
    Rajahalme.

11) Fix various overflow checks in AF_PACKET, from Andrey Konovalov.

12) Fix endianness bug in be2net driver, from Suresh Reddy.

13) Don't forget to wake TX queues when processing a timeout, from
    Grygorii Strashko.

14) ARP header on-stack storage is wrong in flow dissector, from Simon
    Horman.

15) Lost retransmit and reordering SNMP stats in TCP can be
    underreported. From Yuchung Cheng.

* git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (82 commits)
  nfp: fix potential use after free on xdp prog
  tcp: fix reordering SNMP under-counting
  tcp: fix lost retransmit SNMP under-counting
  sctp: get sock from transport in sctp_transport_update_pmtu
  net: ethernet: ti: cpsw: fix race condition during open()
  l2tp: fix PPP pseudo-wire auto-loading
  bnx2x: fix spelling mistake in macros HW_INTERRUT_ASSERT_SET_*
  l2tp: take reference on sessions being dumped
  tcp: minimize false-positives on TCP/GRO check
  sctp: check for dst and pathmtu update in sctp_packet_config
  flow dissector: correct size of storage for ARP
  net: ethernet: ti: cpsw: wake tx queues on ndo_tx_timeout
  l2tp: take a reference on sessions used in genetlink handlers
  l2tp: hold session while sending creation notifications
  l2tp: fix duplicate session creation
  l2tp: ensure session can't get removed during pppol2tp_session_ioctl()
  l2tp: fix race in l2tp_recv_common()
  sctp: use right in and out stream cnt
  bpf: add various verifier test cases for self-tests
  bpf, verifier: fix rejection of unaligned access checks for map_value_adj
  ...",tools/testing/selftests/bpf/test_verifier.c,+,"[[814005, u'True', u'ExpressionStatement', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )']]","[[814006, None, u'CallExpression', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [814016, None, u'Callee', u'printf'], [814007, None, u'ArgumentList', u'""OK%s\\n""'], [814017, None, u'Identifier', u'printf'], [814014, None, u'Argument', u'""OK%s\\n""'], [814008, None, u'Argument', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [814015, None, u'PrimaryExpression', u'""OK%s\\n""'], [814009, None, u'ConditionalExpression', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [814012, None, u'Condition', u'reject_from_alignment'], [814011, None, u'PrimaryExpression', u'"" (NOTE: reject due to unknown alignment)""'], [814010, None, u'PrimaryExpression', u'""""'], [814013, None, u'Identifier', u'reject_from_alignment'], [814005, u'True', u'ExpressionStatement', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [814039, None, u'AndExpression', u'! strstr ( bpf_vlog , expected_err ) && ! reject_from_alignment'], [814043, None, u'UnaryOp', u'! strstr ( bpf_vlog , expected_err )'], [814040, None, u'UnaryOp', u'! reject_from_alignment'], [814052, None, u'UnaryOperator', u'!'], [814044, None, u'CallExpression', u'strstr ( bpf_vlog , expected_err )'], [814042, None, u'UnaryOperator', u'!'], [814041, None, u'Identifier', u'reject_from_alignment'], [814050, None, u'Callee', u'strstr'], [814045, None, u'ArgumentList', u'bpf_vlog'], [814051, None, u'Identifier', u'strstr'], [814048, None, u'Argument', u'bpf_vlog'], [814046, None, u'Argument', u'expected_err'], [814049, None, u'Identifier', u'bpf_vlog'], [814047, None, u'Identifier', u'expected_err'], [814038, u'True', u'Condition', u'! strstr ( bpf_vlog , expected_err ) && ! reject_from_alignment'], [814088, None, u'AndExpression', u'fd_prog < 0 && ! reject_from_alignment'], [814092, None, u'RelationalExpression', u'fd_prog < 0'], [814089, None, u'UnaryOp', u'! reject_from_alignment'], [814094, None, u'Identifier', u'fd_prog'], [814093, None, u'PrimaryExpression', u'0'], [814091, None, u'UnaryOperator', u'!'], [814090, None, u'Identifier', u'reject_from_alignment'], [814087, u'True', u'Condition', u'fd_prog < 0 && ! reject_from_alignment'], [814065, None, u'RelationalExpression', u'fd_prog >= 0'], [814067, None, u'Identifier', u'fd_prog'], [814066, None, u'PrimaryExpression', u'0'], [814064, u'True', u'Condition', u'fd_prog >= 0'], [814096, None, u'EqualityExpression', u'expected_ret == ACCEPT'], [814098, None, u'Identifier', u'expected_ret'], [814097, None, u'Identifier', u'ACCEPT'], [814095, u'True', u'Condition', u'expected_ret == ACCEPT'], [814118, None, u'Identifier', u'reject_from_alignment'], [814117, u'True', u'Condition', u'reject_from_alignment'], [814289, u'True', u'CFGEntryNode', u'ENTRY']]","[[814006, None, u'CallExpression', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [814016, None, u'Callee', u'printf'], [814007, None, u'ArgumentList', u'""OK%s\\n""'], [814017, None, u'Identifier', u'printf'], [814014, None, u'Argument', u'""OK%s\\n""'], [814008, None, u'Argument', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [814015, None, u'PrimaryExpression', u'""OK%s\\n""'], [814009, None, u'ConditionalExpression', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [814012, None, u'Condition', u'reject_from_alignment'], [814011, None, u'PrimaryExpression', u'"" (NOTE: reject due to unknown alignment)""'], [814010, None, u'PrimaryExpression', u'""""'], [814013, None, u'Identifier', u'reject_from_alignment'], [814005, u'True', u'ExpressionStatement', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [814120, None, u'AssignmentExpr', u'reject_from_alignment = fd_prog < 0 && ( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [814139, None, u'Identifier', u'reject_from_alignment'], [814121, None, u'AndExpression', u'fd_prog < 0 && ( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [814136, None, u'RelationalExpression', u'fd_prog < 0'], [814122, None, u'AndExpression', u'( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [814138, None, u'Identifier', u'fd_prog'], [814137, None, u'PrimaryExpression', u'0'], [814131, None, u'BitAndExpression', u'test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS'], [814123, None, u'CallExpression', u'strstr ( bpf_vlog , ""Unknown alignment."" )'], [814133, None, u'PtrMemberAccess', u'test -> flags'], [814132, None, u'Identifier', u'F_NEEDS_EFFICIENT_UNALIGNED_ACCESS'], [814129, None, u'Callee', u'strstr'], [814124, None, u'ArgumentList', u'bpf_vlog'], [814135, None, u'Identifier', u'test'], [814134, None, u'Identifier', u'flags'], [814130, None, u'Identifier', u'strstr'], [814127, None, u'Argument', u'bpf_vlog'], [814125, None, u'Argument', u'""Unknown alignment.""'], [814128, None, u'Identifier', u'bpf_vlog'], [814126, None, u'PrimaryExpression', u'""Unknown alignment.""'], [814119, u'True', u'ExpressionStatement', u'reject_from_alignment = fd_prog < 0 && ( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [814286, None, u'IdentifierDecl', u'fd_prog'], [814283, None, u'IdentifierDecl', u'expected_ret'], [814280, None, u'IdentifierDecl', u'reject_from_alignment'], [814288, None, u'IdentifierDeclType', u'int'], [814287, None, u'Identifier', u'fd_prog'], [814285, None, u'IdentifierDeclType', u'int'], [814284, None, u'Identifier', u'expected_ret'], [814282, None, u'IdentifierDeclType', u'int'], [814281, None, u'Identifier', u'reject_from_alignment'], [814279, u'True', u'IdentifierDeclStatement', u'int fd_prog , expected_ret , reject_from_alignment ;'], [813947, None, u'ParameterType', u'struct bpf_test *'], [813946, None, u'Identifier', u'test'], [813945, u'True', u'Parameter', u'struct bpf_test * test']]"
"Merge tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux

Pull drm fixes from Dave Airlie:
 ""This is just mostly stuff that missed rc5, from vmwgfx and msm
  drivers""

* tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux:
  drm/msm: Make sure to detach the MMU during GPU cleanup
  drm/msm/hdmi: redefinitions of macros not required
  drm/msm/mdp5: Update SSPP_MAX value
  drm/msm/dsi: Fix bug in dsi_mgr_phy_enable
  drm/msm: Don't allow zero sized buffer objects
  drm/msm: Fix wrong pointer check in a5xx_destroy
  drm/msm: adreno: fix build error without debugfs
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_fence.c,-,"[[870209, u'True', u'Statement', u'""Wait invalid fence object handle ""'], [870210, u'True', u'Statement', u'KERN_ERR'], [870211, u'True', u'Statement', u'('], [870212, u'True', u'Statement', u'printk']]","[[870209, u'True', u'Statement', u'""Wait invalid fence object handle ""'], [870214, None, u'CallExpression', u'unlikely ( base == NULL )'], [870220, None, u'Callee', u'unlikely'], [870215, None, u'ArgumentList', u'base == NULL'], [870221, None, u'Identifier', u'unlikely'], [870216, None, u'Argument', u'base == NULL'], [870217, None, u'EqualityExpression', u'base == NULL'], [870219, None, u'Identifier', u'base'], [870218, None, u'Identifier', u'NULL'], [870213, u'True', u'Condition', u'unlikely ( base == NULL )'], [870323, u'True', u'CFGEntryNode', u'ENTRY'], [870210, u'True', u'Statement', u'KERN_ERR'], [870214, None, u'CallExpression', u'unlikely ( base == NULL )'], [870220, None, u'Callee', u'unlikely'], [870215, None, u'ArgumentList', u'base == NULL'], [870221, None, u'Identifier', u'unlikely'], [870216, None, u'Argument', u'base == NULL'], [870217, None, u'EqualityExpression', u'base == NULL'], [870219, None, u'Identifier', u'base'], [870218, None, u'Identifier', u'NULL'], [870213, u'True', u'Condition', u'unlikely ( base == NULL )'], [870323, u'True', u'CFGEntryNode', u'ENTRY'], [870211, u'True', u'Statement', u'('], [870214, None, u'CallExpression', u'unlikely ( base == NULL )'], [870220, None, u'Callee', u'unlikely'], [870215, None, u'ArgumentList', u'base == NULL'], [870221, None, u'Identifier', u'unlikely'], [870216, None, u'Argument', u'base == NULL'], [870217, None, u'EqualityExpression', u'base == NULL'], [870219, None, u'Identifier', u'base'], [870218, None, u'Identifier', u'NULL'], [870213, u'True', u'Condition', u'unlikely ( base == NULL )'], [870323, u'True', u'CFGEntryNode', u'ENTRY'], [870212, u'True', u'Statement', u'printk'], [870214, None, u'CallExpression', u'unlikely ( base == NULL )'], [870220, None, u'Callee', u'unlikely'], [870215, None, u'ArgumentList', u'base == NULL'], [870221, None, u'Identifier', u'unlikely'], [870216, None, u'Argument', u'base == NULL'], [870217, None, u'EqualityExpression', u'base == NULL'], [870219, None, u'Identifier', u'base'], [870218, None, u'Identifier', u'NULL'], [870213, u'True', u'Condition', u'unlikely ( base == NULL )'], [870323, u'True', u'CFGEntryNode', u'ENTRY']]","[[870209, u'True', u'Statement', u'""Wait invalid fence object handle ""'], [870210, u'True', u'Statement', u'KERN_ERR'], [870211, u'True', u'Statement', u'('], [870212, u'True', u'Statement', u'printk']]"
"Merge tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux

Pull drm fixes from Dave Airlie:
 ""This is just mostly stuff that missed rc5, from vmwgfx and msm
  drivers""

* tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux:
  drm/msm: Make sure to detach the MMU during GPU cleanup
  drm/msm/hdmi: redefinitions of macros not required
  drm/msm/mdp5: Update SSPP_MAX value
  drm/msm/dsi: Fix bug in dsi_mgr_phy_enable
  drm/msm: Don't allow zero sized buffer objects
  drm/msm: Fix wrong pointer check in a5xx_destroy
  drm/msm: adreno: fix build error without debugfs
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_fence.c,-,"[[870477, u'True', u'Statement', u'""Fence signaled invalid fence object handle ""'], [870478, u'True', u'Statement', u'KERN_ERR'], [870479, u'True', u'Statement', u'('], [870480, u'True', u'Statement', u'printk']]","[[870477, u'True', u'Statement', u'""Fence signaled invalid fence object handle ""'], [870482, None, u'CallExpression', u'unlikely ( base == NULL )'], [870488, None, u'Callee', u'unlikely'], [870483, None, u'ArgumentList', u'base == NULL'], [870489, None, u'Identifier', u'unlikely'], [870484, None, u'Argument', u'base == NULL'], [870485, None, u'EqualityExpression', u'base == NULL'], [870487, None, u'Identifier', u'base'], [870486, None, u'Identifier', u'NULL'], [870481, u'True', u'Condition', u'unlikely ( base == NULL )'], [870550, u'True', u'CFGEntryNode', u'ENTRY'], [870478, u'True', u'Statement', u'KERN_ERR'], [870482, None, u'CallExpression', u'unlikely ( base == NULL )'], [870488, None, u'Callee', u'unlikely'], [870483, None, u'ArgumentList', u'base == NULL'], [870489, None, u'Identifier', u'unlikely'], [870484, None, u'Argument', u'base == NULL'], [870485, None, u'EqualityExpression', u'base == NULL'], [870487, None, u'Identifier', u'base'], [870486, None, u'Identifier', u'NULL'], [870481, u'True', u'Condition', u'unlikely ( base == NULL )'], [870550, u'True', u'CFGEntryNode', u'ENTRY'], [870479, u'True', u'Statement', u'('], [870482, None, u'CallExpression', u'unlikely ( base == NULL )'], [870488, None, u'Callee', u'unlikely'], [870483, None, u'ArgumentList', u'base == NULL'], [870489, None, u'Identifier', u'unlikely'], [870484, None, u'Argument', u'base == NULL'], [870485, None, u'EqualityExpression', u'base == NULL'], [870487, None, u'Identifier', u'base'], [870486, None, u'Identifier', u'NULL'], [870481, u'True', u'Condition', u'unlikely ( base == NULL )'], [870550, u'True', u'CFGEntryNode', u'ENTRY'], [870480, u'True', u'Statement', u'printk'], [870482, None, u'CallExpression', u'unlikely ( base == NULL )'], [870488, None, u'Callee', u'unlikely'], [870483, None, u'ArgumentList', u'base == NULL'], [870489, None, u'Identifier', u'unlikely'], [870484, None, u'Argument', u'base == NULL'], [870485, None, u'EqualityExpression', u'base == NULL'], [870487, None, u'Identifier', u'base'], [870486, None, u'Identifier', u'NULL'], [870481, u'True', u'Condition', u'unlikely ( base == NULL )'], [870550, u'True', u'CFGEntryNode', u'ENTRY']]","[[870477, u'True', u'Statement', u'""Fence signaled invalid fence object handle ""'], [870478, u'True', u'Statement', u'KERN_ERR'], [870479, u'True', u'Statement', u'('], [870480, u'True', u'Statement', u'printk']]"
"Merge tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux

Pull drm fixes from Dave Airlie:
 ""This is just mostly stuff that missed rc5, from vmwgfx and msm
  drivers""

* tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux:
  drm/msm: Make sure to detach the MMU during GPU cleanup
  drm/msm/hdmi: redefinitions of macros not required
  drm/msm/mdp5: Update SSPP_MAX value
  drm/msm/dsi: Fix bug in dsi_mgr_phy_enable
  drm/msm: Don't allow zero sized buffer objects
  drm/msm: Fix wrong pointer check in a5xx_destroy
  drm/msm: adreno: fix build error without debugfs
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_fence.c,-,"[[871895, u'True', u'Statement', u'""Fence event invalid fence object handle ""'], [871896, u'True', u'Statement', u'('], [871897, u'True', u'Statement', u'DRM_ERROR']]","[[871895, u'True', u'Statement', u'""Fence event invalid fence object handle ""'], [871899, None, u'CallExpression', u'unlikely ( base == NULL )'], [871905, None, u'Callee', u'unlikely'], [871900, None, u'ArgumentList', u'base == NULL'], [871906, None, u'Identifier', u'unlikely'], [871901, None, u'Argument', u'base == NULL'], [871902, None, u'EqualityExpression', u'base == NULL'], [871904, None, u'Identifier', u'base'], [871903, None, u'Identifier', u'NULL'], [871898, u'True', u'Condition', u'unlikely ( base == NULL )'], [871926, None, u'PtrMemberAccess', u'arg -> handle'], [871928, None, u'Identifier', u'arg'], [871927, None, u'Identifier', u'handle'], [871925, u'True', u'Condition', u'arg -> handle'], [871990, u'True', u'CFGEntryNode', u'ENTRY'], [871896, u'True', u'Statement', u'('], [871899, None, u'CallExpression', u'unlikely ( base == NULL )'], [871905, None, u'Callee', u'unlikely'], [871900, None, u'ArgumentList', u'base == NULL'], [871906, None, u'Identifier', u'unlikely'], [871901, None, u'Argument', u'base == NULL'], [871902, None, u'EqualityExpression', u'base == NULL'], [871904, None, u'Identifier', u'base'], [871903, None, u'Identifier', u'NULL'], [871898, u'True', u'Condition', u'unlikely ( base == NULL )'], [871926, None, u'PtrMemberAccess', u'arg -> handle'], [871928, None, u'Identifier', u'arg'], [871927, None, u'Identifier', u'handle'], [871925, u'True', u'Condition', u'arg -> handle'], [871990, u'True', u'CFGEntryNode', u'ENTRY'], [871897, u'True', u'Statement', u'DRM_ERROR'], [871899, None, u'CallExpression', u'unlikely ( base == NULL )'], [871905, None, u'Callee', u'unlikely'], [871900, None, u'ArgumentList', u'base == NULL'], [871906, None, u'Identifier', u'unlikely'], [871901, None, u'Argument', u'base == NULL'], [871902, None, u'EqualityExpression', u'base == NULL'], [871904, None, u'Identifier', u'base'], [871903, None, u'Identifier', u'NULL'], [871898, u'True', u'Condition', u'unlikely ( base == NULL )'], [871926, None, u'PtrMemberAccess', u'arg -> handle'], [871928, None, u'Identifier', u'arg'], [871927, None, u'Identifier', u'handle'], [871925, u'True', u'Condition', u'arg -> handle'], [871990, u'True', u'CFGEntryNode', u'ENTRY']]","[[871895, u'True', u'Statement', u'""Fence event invalid fence object handle ""'], [871896, u'True', u'Statement', u'('], [871897, u'True', u'Statement', u'DRM_ERROR']]"
"Merge tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux

Pull drm fixes from Dave Airlie:
 ""This is just mostly stuff that missed rc5, from vmwgfx and msm
  drivers""

* tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux:
  drm/msm: Make sure to detach the MMU during GPU cleanup
  drm/msm/hdmi: redefinitions of macros not required
  drm/msm/mdp5: Update SSPP_MAX value
  drm/msm/dsi: Fix bug in dsi_mgr_phy_enable
  drm/msm: Don't allow zero sized buffer objects
  drm/msm: Fix wrong pointer check in a5xx_destroy
  drm/msm: adreno: fix build error without debugfs
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_ioctl.c,-,"[[874210, u'True', u'ExpressionStatement', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )']]","[[874211, None, u'CallExpression', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [874219, None, u'Callee', u'DRM_ERROR'], [874212, None, u'ArgumentList', u'""Illegal vmwgfx get param request: %d\\n""'], [874220, None, u'Identifier', u'DRM_ERROR'], [874217, None, u'Argument', u'""Illegal vmwgfx get param request: %d\\n""'], [874213, None, u'Argument', u'param -> param'], [874218, None, u'PrimaryExpression', u'""Illegal vmwgfx get param request: %d\\n""'], [874214, None, u'PtrMemberAccess', u'param -> param'], [874216, None, u'Identifier', u'param'], [874215, None, u'Identifier', u'param'], [874210, u'True', u'ExpressionStatement', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [874515, None, u'PtrMemberAccess', u'param -> param'], [874517, None, u'Identifier', u'param'], [874516, None, u'Identifier', u'param'], [874514, u'True', u'Condition', u'param -> param'], [874551, u'True', u'CFGEntryNode', u'ENTRY']]","[[874211, None, u'CallExpression', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [874219, None, u'Callee', u'DRM_ERROR'], [874212, None, u'ArgumentList', u'""Illegal vmwgfx get param request: %d\\n""'], [874220, None, u'Identifier', u'DRM_ERROR'], [874217, None, u'Argument', u'""Illegal vmwgfx get param request: %d\\n""'], [874213, None, u'Argument', u'param -> param'], [874218, None, u'PrimaryExpression', u'""Illegal vmwgfx get param request: %d\\n""'], [874214, None, u'PtrMemberAccess', u'param -> param'], [874216, None, u'Identifier', u'param'], [874215, None, u'Identifier', u'param'], [874210, u'True', u'ExpressionStatement', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [874531, None, u'IdentifierDecl', u'* param = ( struct drm_vmw_getparam_arg * ) data'], [874538, None, u'IdentifierDeclType', u'struct drm_vmw_getparam_arg *'], [874537, None, u'Identifier', u'param'], [874532, None, u'AssignmentExpr', u'* param = ( struct drm_vmw_getparam_arg * ) data'], [874536, None, u'Identifier', u'param'], [874533, None, u'CastExpression', u'( struct drm_vmw_getparam_arg * ) data'], [874535, None, u'CastTarget', u'struct drm_vmw_getparam_arg *'], [874534, None, u'Identifier', u'data'], [874530, u'True', u'IdentifierDeclStatement', u'struct drm_vmw_getparam_arg * param = ( struct drm_vmw_getparam_arg * ) data ;'], [874196, None, u'ParameterType', u'void *'], [874195, None, u'Identifier', u'data'], [874194, u'True', u'Parameter', u'void * data']]"
"Merge tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux

Pull drm fixes from Dave Airlie:
 ""This is just mostly stuff that missed rc5, from vmwgfx and msm
  drivers""

* tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux:
  drm/msm: Make sure to detach the MMU during GPU cleanup
  drm/msm/hdmi: redefinitions of macros not required
  drm/msm/mdp5: Update SSPP_MAX value
  drm/msm/dsi: Fix bug in dsi_mgr_phy_enable
  drm/msm: Don't allow zero sized buffer objects
  drm/msm: Fix wrong pointer check in a5xx_destroy
  drm/msm: adreno: fix build error without debugfs
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_surface.c,-,"[[887291, u'True', u'Statement', u'""Render client refused legacy ""'], [887292, u'True', u'Statement', u'('], [887293, u'True', u'Statement', u'DRM_ERROR']]","[[887291, u'True', u'Statement', u'""Render client refused legacy ""'], [887295, None, u'CallExpression', u'unlikely ( drm_is_render_client ( file_priv ) )'], [887304, None, u'Callee', u'unlikely'], [887296, None, u'ArgumentList', u'drm_is_render_client ( file_priv )'], [887305, None, u'Identifier', u'unlikely'], [887297, None, u'Argument', u'drm_is_render_client ( file_priv )'], [887298, None, u'CallExpression', u'drm_is_render_client ( file_priv )'], [887302, None, u'Callee', u'drm_is_render_client'], [887299, None, u'ArgumentList', u'file_priv'], [887303, None, u'Identifier', u'drm_is_render_client'], [887300, None, u'Argument', u'file_priv'], [887301, None, u'Identifier', u'file_priv'], [887294, u'True', u'Condition', u'unlikely ( drm_is_render_client ( file_priv ) )'], [887335, None, u'EqualityExpression', u'handle_type == DRM_VMW_HANDLE_PRIME'], [887337, None, u'Identifier', u'handle_type'], [887336, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [887334, u'True', u'Condition', u'handle_type == DRM_VMW_HANDLE_PRIME'], [887368, u'True', u'CFGEntryNode', u'ENTRY'], [887292, u'True', u'Statement', u'('], [887295, None, u'CallExpression', u'unlikely ( drm_is_render_client ( file_priv ) )'], [887304, None, u'Callee', u'unlikely'], [887296, None, u'ArgumentList', u'drm_is_render_client ( file_priv )'], [887305, None, u'Identifier', u'unlikely'], [887297, None, u'Argument', u'drm_is_render_client ( file_priv )'], [887298, None, u'CallExpression', u'drm_is_render_client ( file_priv )'], [887302, None, u'Callee', u'drm_is_render_client'], [887299, None, u'ArgumentList', u'file_priv'], [887303, None, u'Identifier', u'drm_is_render_client'], [887300, None, u'Argument', u'file_priv'], [887301, None, u'Identifier', u'file_priv'], [887294, u'True', u'Condition', u'unlikely ( drm_is_render_client ( file_priv ) )'], [887335, None, u'EqualityExpression', u'handle_type == DRM_VMW_HANDLE_PRIME'], [887337, None, u'Identifier', u'handle_type'], [887336, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [887334, u'True', u'Condition', u'handle_type == DRM_VMW_HANDLE_PRIME'], [887368, u'True', u'CFGEntryNode', u'ENTRY'], [887293, u'True', u'Statement', u'DRM_ERROR'], [887295, None, u'CallExpression', u'unlikely ( drm_is_render_client ( file_priv ) )'], [887304, None, u'Callee', u'unlikely'], [887296, None, u'ArgumentList', u'drm_is_render_client ( file_priv )'], [887305, None, u'Identifier', u'unlikely'], [887297, None, u'Argument', u'drm_is_render_client ( file_priv )'], [887298, None, u'CallExpression', u'drm_is_render_client ( file_priv )'], [887302, None, u'Callee', u'drm_is_render_client'], [887299, None, u'ArgumentList', u'file_priv'], [887303, None, u'Identifier', u'drm_is_render_client'], [887300, None, u'Argument', u'file_priv'], [887301, None, u'Identifier', u'file_priv'], [887294, u'True', u'Condition', u'unlikely ( drm_is_render_client ( file_priv ) )'], [887335, None, u'EqualityExpression', u'handle_type == DRM_VMW_HANDLE_PRIME'], [887337, None, u'Identifier', u'handle_type'], [887336, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [887334, u'True', u'Condition', u'handle_type == DRM_VMW_HANDLE_PRIME'], [887368, u'True', u'CFGEntryNode', u'ENTRY']]","[[887291, u'True', u'Statement', u'""Render client refused legacy ""'], [887292, u'True', u'Statement', u'('], [887293, u'True', u'Statement', u'DRM_ERROR']]"
"Merge tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux

Pull drm fixes from Dave Airlie:
 ""This is just mostly stuff that missed rc5, from vmwgfx and msm
  drivers""

* tag 'drm-fixes-for-v4.11-rc6' of git://people.freedesktop.org/~airlied/linux:
  drm/msm: Make sure to detach the MMU during GPU cleanup
  drm/msm/hdmi: redefinitions of macros not required
  drm/msm/mdp5: Update SSPP_MAX value
  drm/msm/dsi: Fix bug in dsi_mgr_phy_enable
  drm/msm: Don't allow zero sized buffer objects
  drm/msm: Fix wrong pointer check in a5xx_destroy
  drm/msm: adreno: fix build error without debugfs
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_surface.c,-,"[[887149, u'True', u'Statement', u'""Trying to reference surface outside of""'], [887150, u'True', u'Statement', u'('], [887151, u'True', u'Statement', u'DRM_ERROR']]","[[887149, u'True', u'Statement', u'""Trying to reference surface outside of""'], [887153, None, u'AndExpression', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [887161, None, u'CallExpression', u'drm_is_primary_client ( file_priv )'], [887154, None, u'EqualityExpression', u'user_srf -> master != file_priv -> master'], [887165, None, u'Callee', u'drm_is_primary_client'], [887162, None, u'ArgumentList', u'file_priv'], [887158, None, u'PtrMemberAccess', u'user_srf -> master'], [887155, None, u'PtrMemberAccess', u'file_priv -> master'], [887166, None, u'Identifier', u'drm_is_primary_client'], [887163, None, u'Argument', u'file_priv'], [887160, None, u'Identifier', u'user_srf'], [887159, None, u'Identifier', u'master'], [887157, None, u'Identifier', u'file_priv'], [887156, None, u'Identifier', u'master'], [887164, None, u'Identifier', u'file_priv'], [887152, u'True', u'Condition', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [887182, None, u'EqualityExpression', u'handle_type != DRM_VMW_HANDLE_PRIME'], [887184, None, u'Identifier', u'handle_type'], [887183, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [887181, u'True', u'Condition', u'handle_type != DRM_VMW_HANDLE_PRIME'], [887197, None, u'CallExpression', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [887208, None, u'Callee', u'unlikely'], [887198, None, u'ArgumentList', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [887209, None, u'Identifier', u'unlikely'], [887199, None, u'Argument', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [887200, None, u'EqualityExpression', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [887202, None, u'CallExpression', u'ttm_base_object_type ( base )'], [887201, None, u'Identifier', u'VMW_RES_SURFACE'], [887206, None, u'Callee', u'ttm_base_object_type'], [887203, None, u'ArgumentList', u'base'], [887207, None, u'Identifier', u'ttm_base_object_type'], [887204, None, u'Argument', u'base'], [887205, None, u'Identifier', u'base'], [887196, u'True', u'Condition', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [887222, None, u'CallExpression', u'unlikely ( ! base )'], [887228, None, u'Callee', u'unlikely'], [887223, None, u'ArgumentList', u'! base'], [887229, None, u'Identifier', u'unlikely'], [887224, None, u'Argument', u'! base'], [887225, None, u'UnaryOp', u'! base'], [887227, None, u'UnaryOperator', u'!'], [887226, None, u'Identifier', u'base'], [887221, u'True', u'Condition', u'unlikely ( ! base )'], [887311, None, u'CallExpression', u'unlikely ( ret != 0 )'], [887317, None, u'Callee', u'unlikely'], [887312, None, u'ArgumentList', u'ret != 0'], [887318, None, u'Identifier', u'unlikely'], [887313, None, u'Argument', u'ret != 0'], [887314, None, u'EqualityExpression', u'ret != 0'], [887316, None, u'Identifier', u'ret'], [887315, None, u'PrimaryExpression', u'0'], [887310, u'True', u'Condition', u'unlikely ( ret != 0 )'], [887269, None, u'CallExpression', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [887280, None, u'Callee', u'ACCESS_ONCE'], [887270, None, u'ArgumentList', u'vmw_fpriv ( file_priv ) -> locked_master'], [887281, None, u'Identifier', u'ACCESS_ONCE'], [887271, None, u'Argument', u'vmw_fpriv ( file_priv ) -> locked_master'], [887272, None, u'PtrMemberAccess', u'vmw_fpriv ( file_priv ) -> locked_master'], [887274, None, u'CallExpression', u'vmw_fpriv ( file_priv )'], [887273, None, u'Identifier', u'locked_master'], [887278, None, u'Callee', u'vmw_fpriv'], [887275, None, u'ArgumentList', u'file_priv'], [887279, None, u'Identifier', u'vmw_fpriv'], [887276, None, u'Argument', u'file_priv'], [887277, None, u'Identifier', u'file_priv'], [887268, u'True', u'Condition', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [887150, u'True', u'Statement', u'('], [887153, None, u'AndExpression', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [887161, None, u'CallExpression', u'drm_is_primary_client ( file_priv )'], [887154, None, u'EqualityExpression', u'user_srf -> master != file_priv -> master'], [887165, None, u'Callee', u'drm_is_primary_client'], [887162, None, u'ArgumentList', u'file_priv'], [887158, None, u'PtrMemberAccess', u'user_srf -> master'], [887155, None, u'PtrMemberAccess', u'file_priv -> master'], [887166, None, u'Identifier', u'drm_is_primary_client'], [887163, None, u'Argument', u'file_priv'], [887160, None, u'Identifier', u'user_srf'], [887159, None, u'Identifier', u'master'], [887157, None, u'Identifier', u'file_priv'], [887156, None, u'Identifier', u'master'], [887164, None, u'Identifier', u'file_priv'], [887152, u'True', u'Condition', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [887182, None, u'EqualityExpression', u'handle_type != DRM_VMW_HANDLE_PRIME'], [887184, None, u'Identifier', u'handle_type'], [887183, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [887181, u'True', u'Condition', u'handle_type != DRM_VMW_HANDLE_PRIME'], [887197, None, u'CallExpression', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [887208, None, u'Callee', u'unlikely'], [887198, None, u'ArgumentList', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [887209, None, u'Identifier', u'unlikely'], [887199, None, u'Argument', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [887200, None, u'EqualityExpression', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [887202, None, u'CallExpression', u'ttm_base_object_type ( base )'], [887201, None, u'Identifier', u'VMW_RES_SURFACE'], [887206, None, u'Callee', u'ttm_base_object_type'], [887203, None, u'ArgumentList', u'base'], [887207, None, u'Identifier', u'ttm_base_object_type'], [887204, None, u'Argument', u'base'], [887205, None, u'Identifier', u'base'], [887196, u'True', u'Condition', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [887222, None, u'CallExpression', u'unlikely ( ! base )'], [887228, None, u'Callee', u'unlikely'], [887223, None, u'ArgumentList', u'! base'], [887229, None, u'Identifier', u'unlikely'], [887224, None, u'Argument', u'! base'], [887225, None, u'UnaryOp', u'! base'], [887227, None, u'UnaryOperator', u'!'], [887226, None, u'Identifier', u'base'], [887221, u'True', u'Condition', u'unlikely ( ! base )'], [887311, None, u'CallExpression', u'unlikely ( ret != 0 )'], [887317, None, u'Callee', u'unlikely'], [887312, None, u'ArgumentList', u'ret != 0'], [887318, None, u'Identifier', u'unlikely'], [887313, None, u'Argument', u'ret != 0'], [887314, None, u'EqualityExpression', u'ret != 0'], [887316, None, u'Identifier', u'ret'], [887315, None, u'PrimaryExpression', u'0'], [887310, u'True', u'Condition', u'unlikely ( ret != 0 )'], [887269, None, u'CallExpression', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [887280, None, u'Callee', u'ACCESS_ONCE'], [887270, None, u'ArgumentList', u'vmw_fpriv ( file_priv ) -> locked_master'], [887281, None, u'Identifier', u'ACCESS_ONCE'], [887271, None, u'Argument', u'vmw_fpriv ( file_priv ) -> locked_master'], [887272, None, u'PtrMemberAccess', u'vmw_fpriv ( file_priv ) -> locked_master'], [887274, None, u'CallExpression', u'vmw_fpriv ( file_priv )'], [887273, None, u'Identifier', u'locked_master'], [887278, None, u'Callee', u'vmw_fpriv'], [887275, None, u'ArgumentList', u'file_priv'], [887279, None, u'Identifier', u'vmw_fpriv'], [887276, None, u'Argument', u'file_priv'], [887277, None, u'Identifier', u'file_priv'], [887268, u'True', u'Condition', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [887151, u'True', u'Statement', u'DRM_ERROR'], [887153, None, u'AndExpression', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [887161, None, u'CallExpression', u'drm_is_primary_client ( file_priv )'], [887154, None, u'EqualityExpression', u'user_srf -> master != file_priv -> master'], [887165, None, u'Callee', u'drm_is_primary_client'], [887162, None, u'ArgumentList', u'file_priv'], [887158, None, u'PtrMemberAccess', u'user_srf -> master'], [887155, None, u'PtrMemberAccess', u'file_priv -> master'], [887166, None, u'Identifier', u'drm_is_primary_client'], [887163, None, u'Argument', u'file_priv'], [887160, None, u'Identifier', u'user_srf'], [887159, None, u'Identifier', u'master'], [887157, None, u'Identifier', u'file_priv'], [887156, None, u'Identifier', u'master'], [887164, None, u'Identifier', u'file_priv'], [887152, u'True', u'Condition', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [887182, None, u'EqualityExpression', u'handle_type != DRM_VMW_HANDLE_PRIME'], [887184, None, u'Identifier', u'handle_type'], [887183, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [887181, u'True', u'Condition', u'handle_type != DRM_VMW_HANDLE_PRIME'], [887197, None, u'CallExpression', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [887208, None, u'Callee', u'unlikely'], [887198, None, u'ArgumentList', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [887209, None, u'Identifier', u'unlikely'], [887199, None, u'Argument', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [887200, None, u'EqualityExpression', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [887202, None, u'CallExpression', u'ttm_base_object_type ( base )'], [887201, None, u'Identifier', u'VMW_RES_SURFACE'], [887206, None, u'Callee', u'ttm_base_object_type'], [887203, None, u'ArgumentList', u'base'], [887207, None, u'Identifier', u'ttm_base_object_type'], [887204, None, u'Argument', u'base'], [887205, None, u'Identifier', u'base'], [887196, u'True', u'Condition', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [887222, None, u'CallExpression', u'unlikely ( ! base )'], [887228, None, u'Callee', u'unlikely'], [887223, None, u'ArgumentList', u'! base'], [887229, None, u'Identifier', u'unlikely'], [887224, None, u'Argument', u'! base'], [887225, None, u'UnaryOp', u'! base'], [887227, None, u'UnaryOperator', u'!'], [887226, None, u'Identifier', u'base'], [887221, u'True', u'Condition', u'unlikely ( ! base )'], [887311, None, u'CallExpression', u'unlikely ( ret != 0 )'], [887317, None, u'Callee', u'unlikely'], [887312, None, u'ArgumentList', u'ret != 0'], [887318, None, u'Identifier', u'unlikely'], [887313, None, u'Argument', u'ret != 0'], [887314, None, u'EqualityExpression', u'ret != 0'], [887316, None, u'Identifier', u'ret'], [887315, None, u'PrimaryExpression', u'0'], [887310, u'True', u'Condition', u'unlikely ( ret != 0 )'], [887269, None, u'CallExpression', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [887280, None, u'Callee', u'ACCESS_ONCE'], [887270, None, u'ArgumentList', u'vmw_fpriv ( file_priv ) -> locked_master'], [887281, None, u'Identifier', u'ACCESS_ONCE'], [887271, None, u'Argument', u'vmw_fpriv ( file_priv ) -> locked_master'], [887272, None, u'PtrMemberAccess', u'vmw_fpriv ( file_priv ) -> locked_master'], [887274, None, u'CallExpression', u'vmw_fpriv ( file_priv )'], [887273, None, u'Identifier', u'locked_master'], [887278, None, u'Callee', u'vmw_fpriv'], [887275, None, u'ArgumentList', u'file_priv'], [887279, None, u'Identifier', u'vmw_fpriv'], [887276, None, u'Argument', u'file_priv'], [887277, None, u'Identifier', u'file_priv'], [887268, u'True', u'Condition', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )']]","[[887149, u'True', u'Statement', u'""Trying to reference surface outside of""'], [887150, u'True', u'Statement', u'('], [887151, u'True', u'Statement', u'DRM_ERROR']]"
"Merge tag 'xtensa-20170403' of git://github.com/jcmvbkbc/linux-xtensa

Pull Xtensa fixes from Max Filippov:

 - make __pa work with uncached KSEG addresses, it fixes DMA memory
   mmapping and DMA debug

 - fix torn stack dump output

 - wire up statx syscall

* tag 'xtensa-20170403' of git://github.com/jcmvbkbc/linux-xtensa:
  xtensa: wire up statx system call
  xtensa: fix stack dump output
  xtensa: make __pa work with uncached KSEG addresses",arch/xtensa/kernel/traps.c,-,"[[894082, u'True', u'ExpressionStatement', u'print_symbol ( "" %s\\n"" , frame -> pc )']]","[[894083, None, u'CallExpression', u'print_symbol ( "" %s\\n"" , frame -> pc )'], [894091, None, u'Callee', u'print_symbol'], [894084, None, u'ArgumentList', u'"" %s\\n""'], [894092, None, u'Identifier', u'print_symbol'], [894089, None, u'Argument', u'"" %s\\n""'], [894085, None, u'Argument', u'frame -> pc'], [894090, None, u'PrimaryExpression', u'"" %s\\n""'], [894086, None, u'PtrMemberAccess', u'frame -> pc'], [894088, None, u'Identifier', u'frame'], [894087, None, u'Identifier', u'pc'], [894082, u'True', u'ExpressionStatement', u'print_symbol ( "" %s\\n"" , frame -> pc )'], [894105, None, u'CallExpression', u'kernel_text_address ( frame -> pc )'], [894111, None, u'Callee', u'kernel_text_address'], [894106, None, u'ArgumentList', u'frame -> pc'], [894112, None, u'Identifier', u'kernel_text_address'], [894107, None, u'Argument', u'frame -> pc'], [894108, None, u'PtrMemberAccess', u'frame -> pc'], [894110, None, u'Identifier', u'frame'], [894109, None, u'Identifier', u'pc'], [894104, u'True', u'Condition', u'kernel_text_address ( frame -> pc )'], [894113, u'True', u'CFGEntryNode', u'ENTRY']]","[[894083, None, u'CallExpression', u'print_symbol ( "" %s\\n"" , frame -> pc )'], [894091, None, u'Callee', u'print_symbol'], [894084, None, u'ArgumentList', u'"" %s\\n""'], [894092, None, u'Identifier', u'print_symbol'], [894089, None, u'Argument', u'"" %s\\n""'], [894085, None, u'Argument', u'frame -> pc'], [894090, None, u'PrimaryExpression', u'"" %s\\n""'], [894086, None, u'PtrMemberAccess', u'frame -> pc'], [894088, None, u'Identifier', u'frame'], [894087, None, u'Identifier', u'pc'], [894082, u'True', u'ExpressionStatement', u'print_symbol ( "" %s\\n"" , frame -> pc )'], [894075, None, u'ParameterType', u'struct stackframe *'], [894074, None, u'Identifier', u'frame'], [894073, u'True', u'Parameter', u'struct stackframe * frame']]"
"Merge branch 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux into drm-fixes

Set of vmwgfx fixes
* 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux:
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_fence.c,-,"[[20504, u'True', u'Statement', u'""Wait invalid fence object handle ""'], [20505, u'True', u'Statement', u'KERN_ERR'], [20506, u'True', u'Statement', u'('], [20507, u'True', u'Statement', u'printk']]","[[20504, u'True', u'Statement', u'""Wait invalid fence object handle ""'], [20509, None, u'CallExpression', u'unlikely ( base == NULL )'], [20515, None, u'Callee', u'unlikely'], [20510, None, u'ArgumentList', u'base == NULL'], [20516, None, u'Identifier', u'unlikely'], [20511, None, u'Argument', u'base == NULL'], [20512, None, u'EqualityExpression', u'base == NULL'], [20514, None, u'Identifier', u'base'], [20513, None, u'Identifier', u'NULL'], [20508, u'True', u'Condition', u'unlikely ( base == NULL )'], [20618, u'True', u'CFGEntryNode', u'ENTRY'], [20505, u'True', u'Statement', u'KERN_ERR'], [20509, None, u'CallExpression', u'unlikely ( base == NULL )'], [20515, None, u'Callee', u'unlikely'], [20510, None, u'ArgumentList', u'base == NULL'], [20516, None, u'Identifier', u'unlikely'], [20511, None, u'Argument', u'base == NULL'], [20512, None, u'EqualityExpression', u'base == NULL'], [20514, None, u'Identifier', u'base'], [20513, None, u'Identifier', u'NULL'], [20508, u'True', u'Condition', u'unlikely ( base == NULL )'], [20618, u'True', u'CFGEntryNode', u'ENTRY'], [20506, u'True', u'Statement', u'('], [20509, None, u'CallExpression', u'unlikely ( base == NULL )'], [20515, None, u'Callee', u'unlikely'], [20510, None, u'ArgumentList', u'base == NULL'], [20516, None, u'Identifier', u'unlikely'], [20511, None, u'Argument', u'base == NULL'], [20512, None, u'EqualityExpression', u'base == NULL'], [20514, None, u'Identifier', u'base'], [20513, None, u'Identifier', u'NULL'], [20508, u'True', u'Condition', u'unlikely ( base == NULL )'], [20618, u'True', u'CFGEntryNode', u'ENTRY'], [20507, u'True', u'Statement', u'printk'], [20509, None, u'CallExpression', u'unlikely ( base == NULL )'], [20515, None, u'Callee', u'unlikely'], [20510, None, u'ArgumentList', u'base == NULL'], [20516, None, u'Identifier', u'unlikely'], [20511, None, u'Argument', u'base == NULL'], [20512, None, u'EqualityExpression', u'base == NULL'], [20514, None, u'Identifier', u'base'], [20513, None, u'Identifier', u'NULL'], [20508, u'True', u'Condition', u'unlikely ( base == NULL )'], [20618, u'True', u'CFGEntryNode', u'ENTRY']]","[[20504, u'True', u'Statement', u'""Wait invalid fence object handle ""'], [20505, u'True', u'Statement', u'KERN_ERR'], [20506, u'True', u'Statement', u'('], [20507, u'True', u'Statement', u'printk']]"
"Merge branch 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux into drm-fixes

Set of vmwgfx fixes
* 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux:
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_fence.c,-,"[[20772, u'True', u'Statement', u'""Fence signaled invalid fence object handle ""'], [20773, u'True', u'Statement', u'KERN_ERR'], [20774, u'True', u'Statement', u'('], [20775, u'True', u'Statement', u'printk']]","[[20772, u'True', u'Statement', u'""Fence signaled invalid fence object handle ""'], [20777, None, u'CallExpression', u'unlikely ( base == NULL )'], [20783, None, u'Callee', u'unlikely'], [20778, None, u'ArgumentList', u'base == NULL'], [20784, None, u'Identifier', u'unlikely'], [20779, None, u'Argument', u'base == NULL'], [20780, None, u'EqualityExpression', u'base == NULL'], [20782, None, u'Identifier', u'base'], [20781, None, u'Identifier', u'NULL'], [20776, u'True', u'Condition', u'unlikely ( base == NULL )'], [20845, u'True', u'CFGEntryNode', u'ENTRY'], [20773, u'True', u'Statement', u'KERN_ERR'], [20777, None, u'CallExpression', u'unlikely ( base == NULL )'], [20783, None, u'Callee', u'unlikely'], [20778, None, u'ArgumentList', u'base == NULL'], [20784, None, u'Identifier', u'unlikely'], [20779, None, u'Argument', u'base == NULL'], [20780, None, u'EqualityExpression', u'base == NULL'], [20782, None, u'Identifier', u'base'], [20781, None, u'Identifier', u'NULL'], [20776, u'True', u'Condition', u'unlikely ( base == NULL )'], [20845, u'True', u'CFGEntryNode', u'ENTRY'], [20774, u'True', u'Statement', u'('], [20777, None, u'CallExpression', u'unlikely ( base == NULL )'], [20783, None, u'Callee', u'unlikely'], [20778, None, u'ArgumentList', u'base == NULL'], [20784, None, u'Identifier', u'unlikely'], [20779, None, u'Argument', u'base == NULL'], [20780, None, u'EqualityExpression', u'base == NULL'], [20782, None, u'Identifier', u'base'], [20781, None, u'Identifier', u'NULL'], [20776, u'True', u'Condition', u'unlikely ( base == NULL )'], [20845, u'True', u'CFGEntryNode', u'ENTRY'], [20775, u'True', u'Statement', u'printk'], [20777, None, u'CallExpression', u'unlikely ( base == NULL )'], [20783, None, u'Callee', u'unlikely'], [20778, None, u'ArgumentList', u'base == NULL'], [20784, None, u'Identifier', u'unlikely'], [20779, None, u'Argument', u'base == NULL'], [20780, None, u'EqualityExpression', u'base == NULL'], [20782, None, u'Identifier', u'base'], [20781, None, u'Identifier', u'NULL'], [20776, u'True', u'Condition', u'unlikely ( base == NULL )'], [20845, u'True', u'CFGEntryNode', u'ENTRY']]","[[20772, u'True', u'Statement', u'""Fence signaled invalid fence object handle ""'], [20773, u'True', u'Statement', u'KERN_ERR'], [20774, u'True', u'Statement', u'('], [20775, u'True', u'Statement', u'printk']]"
"Merge branch 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux into drm-fixes

Set of vmwgfx fixes
* 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux:
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_fence.c,-,"[[22190, u'True', u'Statement', u'""Fence event invalid fence object handle ""'], [22191, u'True', u'Statement', u'('], [22192, u'True', u'Statement', u'DRM_ERROR']]","[[22190, u'True', u'Statement', u'""Fence event invalid fence object handle ""'], [22194, None, u'CallExpression', u'unlikely ( base == NULL )'], [22200, None, u'Callee', u'unlikely'], [22195, None, u'ArgumentList', u'base == NULL'], [22201, None, u'Identifier', u'unlikely'], [22196, None, u'Argument', u'base == NULL'], [22197, None, u'EqualityExpression', u'base == NULL'], [22199, None, u'Identifier', u'base'], [22198, None, u'Identifier', u'NULL'], [22193, u'True', u'Condition', u'unlikely ( base == NULL )'], [22221, None, u'PtrMemberAccess', u'arg -> handle'], [22223, None, u'Identifier', u'arg'], [22222, None, u'Identifier', u'handle'], [22220, u'True', u'Condition', u'arg -> handle'], [22285, u'True', u'CFGEntryNode', u'ENTRY'], [22191, u'True', u'Statement', u'('], [22194, None, u'CallExpression', u'unlikely ( base == NULL )'], [22200, None, u'Callee', u'unlikely'], [22195, None, u'ArgumentList', u'base == NULL'], [22201, None, u'Identifier', u'unlikely'], [22196, None, u'Argument', u'base == NULL'], [22197, None, u'EqualityExpression', u'base == NULL'], [22199, None, u'Identifier', u'base'], [22198, None, u'Identifier', u'NULL'], [22193, u'True', u'Condition', u'unlikely ( base == NULL )'], [22221, None, u'PtrMemberAccess', u'arg -> handle'], [22223, None, u'Identifier', u'arg'], [22222, None, u'Identifier', u'handle'], [22220, u'True', u'Condition', u'arg -> handle'], [22285, u'True', u'CFGEntryNode', u'ENTRY'], [22192, u'True', u'Statement', u'DRM_ERROR'], [22194, None, u'CallExpression', u'unlikely ( base == NULL )'], [22200, None, u'Callee', u'unlikely'], [22195, None, u'ArgumentList', u'base == NULL'], [22201, None, u'Identifier', u'unlikely'], [22196, None, u'Argument', u'base == NULL'], [22197, None, u'EqualityExpression', u'base == NULL'], [22199, None, u'Identifier', u'base'], [22198, None, u'Identifier', u'NULL'], [22193, u'True', u'Condition', u'unlikely ( base == NULL )'], [22221, None, u'PtrMemberAccess', u'arg -> handle'], [22223, None, u'Identifier', u'arg'], [22222, None, u'Identifier', u'handle'], [22220, u'True', u'Condition', u'arg -> handle'], [22285, u'True', u'CFGEntryNode', u'ENTRY']]","[[22190, u'True', u'Statement', u'""Fence event invalid fence object handle ""'], [22191, u'True', u'Statement', u'('], [22192, u'True', u'Statement', u'DRM_ERROR']]"
"Merge branch 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux into drm-fixes

Set of vmwgfx fixes
* 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux:
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_ioctl.c,-,"[[24505, u'True', u'ExpressionStatement', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )']]","[[24506, None, u'CallExpression', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [24514, None, u'Callee', u'DRM_ERROR'], [24507, None, u'ArgumentList', u'""Illegal vmwgfx get param request: %d\\n""'], [24515, None, u'Identifier', u'DRM_ERROR'], [24512, None, u'Argument', u'""Illegal vmwgfx get param request: %d\\n""'], [24508, None, u'Argument', u'param -> param'], [24513, None, u'PrimaryExpression', u'""Illegal vmwgfx get param request: %d\\n""'], [24509, None, u'PtrMemberAccess', u'param -> param'], [24511, None, u'Identifier', u'param'], [24510, None, u'Identifier', u'param'], [24505, u'True', u'ExpressionStatement', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [24810, None, u'PtrMemberAccess', u'param -> param'], [24812, None, u'Identifier', u'param'], [24811, None, u'Identifier', u'param'], [24809, u'True', u'Condition', u'param -> param'], [24846, u'True', u'CFGEntryNode', u'ENTRY']]","[[24506, None, u'CallExpression', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [24514, None, u'Callee', u'DRM_ERROR'], [24507, None, u'ArgumentList', u'""Illegal vmwgfx get param request: %d\\n""'], [24515, None, u'Identifier', u'DRM_ERROR'], [24512, None, u'Argument', u'""Illegal vmwgfx get param request: %d\\n""'], [24508, None, u'Argument', u'param -> param'], [24513, None, u'PrimaryExpression', u'""Illegal vmwgfx get param request: %d\\n""'], [24509, None, u'PtrMemberAccess', u'param -> param'], [24511, None, u'Identifier', u'param'], [24510, None, u'Identifier', u'param'], [24505, u'True', u'ExpressionStatement', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [24826, None, u'IdentifierDecl', u'* param = ( struct drm_vmw_getparam_arg * ) data'], [24833, None, u'IdentifierDeclType', u'struct drm_vmw_getparam_arg *'], [24832, None, u'Identifier', u'param'], [24827, None, u'AssignmentExpr', u'* param = ( struct drm_vmw_getparam_arg * ) data'], [24831, None, u'Identifier', u'param'], [24828, None, u'CastExpression', u'( struct drm_vmw_getparam_arg * ) data'], [24830, None, u'CastTarget', u'struct drm_vmw_getparam_arg *'], [24829, None, u'Identifier', u'data'], [24825, u'True', u'IdentifierDeclStatement', u'struct drm_vmw_getparam_arg * param = ( struct drm_vmw_getparam_arg * ) data ;'], [24491, None, u'ParameterType', u'void *'], [24490, None, u'Identifier', u'data'], [24489, u'True', u'Parameter', u'void * data']]"
"Merge branch 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux into drm-fixes

Set of vmwgfx fixes
* 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux:
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_surface.c,-,"[[37586, u'True', u'Statement', u'""Render client refused legacy ""'], [37587, u'True', u'Statement', u'('], [37588, u'True', u'Statement', u'DRM_ERROR']]","[[37586, u'True', u'Statement', u'""Render client refused legacy ""'], [37590, None, u'CallExpression', u'unlikely ( drm_is_render_client ( file_priv ) )'], [37599, None, u'Callee', u'unlikely'], [37591, None, u'ArgumentList', u'drm_is_render_client ( file_priv )'], [37600, None, u'Identifier', u'unlikely'], [37592, None, u'Argument', u'drm_is_render_client ( file_priv )'], [37593, None, u'CallExpression', u'drm_is_render_client ( file_priv )'], [37597, None, u'Callee', u'drm_is_render_client'], [37594, None, u'ArgumentList', u'file_priv'], [37598, None, u'Identifier', u'drm_is_render_client'], [37595, None, u'Argument', u'file_priv'], [37596, None, u'Identifier', u'file_priv'], [37589, u'True', u'Condition', u'unlikely ( drm_is_render_client ( file_priv ) )'], [37630, None, u'EqualityExpression', u'handle_type == DRM_VMW_HANDLE_PRIME'], [37632, None, u'Identifier', u'handle_type'], [37631, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [37629, u'True', u'Condition', u'handle_type == DRM_VMW_HANDLE_PRIME'], [37663, u'True', u'CFGEntryNode', u'ENTRY'], [37587, u'True', u'Statement', u'('], [37590, None, u'CallExpression', u'unlikely ( drm_is_render_client ( file_priv ) )'], [37599, None, u'Callee', u'unlikely'], [37591, None, u'ArgumentList', u'drm_is_render_client ( file_priv )'], [37600, None, u'Identifier', u'unlikely'], [37592, None, u'Argument', u'drm_is_render_client ( file_priv )'], [37593, None, u'CallExpression', u'drm_is_render_client ( file_priv )'], [37597, None, u'Callee', u'drm_is_render_client'], [37594, None, u'ArgumentList', u'file_priv'], [37598, None, u'Identifier', u'drm_is_render_client'], [37595, None, u'Argument', u'file_priv'], [37596, None, u'Identifier', u'file_priv'], [37589, u'True', u'Condition', u'unlikely ( drm_is_render_client ( file_priv ) )'], [37630, None, u'EqualityExpression', u'handle_type == DRM_VMW_HANDLE_PRIME'], [37632, None, u'Identifier', u'handle_type'], [37631, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [37629, u'True', u'Condition', u'handle_type == DRM_VMW_HANDLE_PRIME'], [37663, u'True', u'CFGEntryNode', u'ENTRY'], [37588, u'True', u'Statement', u'DRM_ERROR'], [37590, None, u'CallExpression', u'unlikely ( drm_is_render_client ( file_priv ) )'], [37599, None, u'Callee', u'unlikely'], [37591, None, u'ArgumentList', u'drm_is_render_client ( file_priv )'], [37600, None, u'Identifier', u'unlikely'], [37592, None, u'Argument', u'drm_is_render_client ( file_priv )'], [37593, None, u'CallExpression', u'drm_is_render_client ( file_priv )'], [37597, None, u'Callee', u'drm_is_render_client'], [37594, None, u'ArgumentList', u'file_priv'], [37598, None, u'Identifier', u'drm_is_render_client'], [37595, None, u'Argument', u'file_priv'], [37596, None, u'Identifier', u'file_priv'], [37589, u'True', u'Condition', u'unlikely ( drm_is_render_client ( file_priv ) )'], [37630, None, u'EqualityExpression', u'handle_type == DRM_VMW_HANDLE_PRIME'], [37632, None, u'Identifier', u'handle_type'], [37631, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [37629, u'True', u'Condition', u'handle_type == DRM_VMW_HANDLE_PRIME'], [37663, u'True', u'CFGEntryNode', u'ENTRY']]","[[37586, u'True', u'Statement', u'""Render client refused legacy ""'], [37587, u'True', u'Statement', u'('], [37588, u'True', u'Statement', u'DRM_ERROR']]"
"Merge branch 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux into drm-fixes

Set of vmwgfx fixes
* 'vmwgfx-fixes-4.11' of git://people.freedesktop.org/~thomash/linux:
  drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
  drm/vmwgfx: Remove getparam error message
  drm/ttm: Avoid calling drm_ht_remove from atomic context
  drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces
  drm/vmwgfx: avoid calling vzalloc with a 0 size in vmw_get_cap_3d_ioctl()
  drm/vmwgfx: NULL pointer dereference in vmw_surface_define_ioctl()
  drm/vmwgfx: Type-check lookups of fence objects",drivers/gpu/drm/vmwgfx/vmwgfx_surface.c,-,"[[37444, u'True', u'Statement', u'""Trying to reference surface outside of""'], [37445, u'True', u'Statement', u'('], [37446, u'True', u'Statement', u'DRM_ERROR']]","[[37444, u'True', u'Statement', u'""Trying to reference surface outside of""'], [37448, None, u'AndExpression', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [37456, None, u'CallExpression', u'drm_is_primary_client ( file_priv )'], [37449, None, u'EqualityExpression', u'user_srf -> master != file_priv -> master'], [37460, None, u'Callee', u'drm_is_primary_client'], [37457, None, u'ArgumentList', u'file_priv'], [37453, None, u'PtrMemberAccess', u'user_srf -> master'], [37450, None, u'PtrMemberAccess', u'file_priv -> master'], [37461, None, u'Identifier', u'drm_is_primary_client'], [37458, None, u'Argument', u'file_priv'], [37455, None, u'Identifier', u'user_srf'], [37454, None, u'Identifier', u'master'], [37452, None, u'Identifier', u'file_priv'], [37451, None, u'Identifier', u'master'], [37459, None, u'Identifier', u'file_priv'], [37447, u'True', u'Condition', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [37477, None, u'EqualityExpression', u'handle_type != DRM_VMW_HANDLE_PRIME'], [37479, None, u'Identifier', u'handle_type'], [37478, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [37476, u'True', u'Condition', u'handle_type != DRM_VMW_HANDLE_PRIME'], [37492, None, u'CallExpression', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [37503, None, u'Callee', u'unlikely'], [37493, None, u'ArgumentList', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [37504, None, u'Identifier', u'unlikely'], [37494, None, u'Argument', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [37495, None, u'EqualityExpression', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [37497, None, u'CallExpression', u'ttm_base_object_type ( base )'], [37496, None, u'Identifier', u'VMW_RES_SURFACE'], [37501, None, u'Callee', u'ttm_base_object_type'], [37498, None, u'ArgumentList', u'base'], [37502, None, u'Identifier', u'ttm_base_object_type'], [37499, None, u'Argument', u'base'], [37500, None, u'Identifier', u'base'], [37491, u'True', u'Condition', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [37517, None, u'CallExpression', u'unlikely ( ! base )'], [37523, None, u'Callee', u'unlikely'], [37518, None, u'ArgumentList', u'! base'], [37524, None, u'Identifier', u'unlikely'], [37519, None, u'Argument', u'! base'], [37520, None, u'UnaryOp', u'! base'], [37522, None, u'UnaryOperator', u'!'], [37521, None, u'Identifier', u'base'], [37516, u'True', u'Condition', u'unlikely ( ! base )'], [37564, None, u'CallExpression', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [37575, None, u'Callee', u'ACCESS_ONCE'], [37565, None, u'ArgumentList', u'vmw_fpriv ( file_priv ) -> locked_master'], [37576, None, u'Identifier', u'ACCESS_ONCE'], [37566, None, u'Argument', u'vmw_fpriv ( file_priv ) -> locked_master'], [37567, None, u'PtrMemberAccess', u'vmw_fpriv ( file_priv ) -> locked_master'], [37569, None, u'CallExpression', u'vmw_fpriv ( file_priv )'], [37568, None, u'Identifier', u'locked_master'], [37573, None, u'Callee', u'vmw_fpriv'], [37570, None, u'ArgumentList', u'file_priv'], [37574, None, u'Identifier', u'vmw_fpriv'], [37571, None, u'Argument', u'file_priv'], [37572, None, u'Identifier', u'file_priv'], [37563, u'True', u'Condition', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [37606, None, u'CallExpression', u'unlikely ( ret != 0 )'], [37612, None, u'Callee', u'unlikely'], [37607, None, u'ArgumentList', u'ret != 0'], [37613, None, u'Identifier', u'unlikely'], [37608, None, u'Argument', u'ret != 0'], [37609, None, u'EqualityExpression', u'ret != 0'], [37611, None, u'Identifier', u'ret'], [37610, None, u'PrimaryExpression', u'0'], [37605, u'True', u'Condition', u'unlikely ( ret != 0 )'], [37445, u'True', u'Statement', u'('], [37448, None, u'AndExpression', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [37456, None, u'CallExpression', u'drm_is_primary_client ( file_priv )'], [37449, None, u'EqualityExpression', u'user_srf -> master != file_priv -> master'], [37460, None, u'Callee', u'drm_is_primary_client'], [37457, None, u'ArgumentList', u'file_priv'], [37453, None, u'PtrMemberAccess', u'user_srf -> master'], [37450, None, u'PtrMemberAccess', u'file_priv -> master'], [37461, None, u'Identifier', u'drm_is_primary_client'], [37458, None, u'Argument', u'file_priv'], [37455, None, u'Identifier', u'user_srf'], [37454, None, u'Identifier', u'master'], [37452, None, u'Identifier', u'file_priv'], [37451, None, u'Identifier', u'master'], [37459, None, u'Identifier', u'file_priv'], [37447, u'True', u'Condition', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [37477, None, u'EqualityExpression', u'handle_type != DRM_VMW_HANDLE_PRIME'], [37479, None, u'Identifier', u'handle_type'], [37478, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [37476, u'True', u'Condition', u'handle_type != DRM_VMW_HANDLE_PRIME'], [37492, None, u'CallExpression', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [37503, None, u'Callee', u'unlikely'], [37493, None, u'ArgumentList', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [37504, None, u'Identifier', u'unlikely'], [37494, None, u'Argument', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [37495, None, u'EqualityExpression', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [37497, None, u'CallExpression', u'ttm_base_object_type ( base )'], [37496, None, u'Identifier', u'VMW_RES_SURFACE'], [37501, None, u'Callee', u'ttm_base_object_type'], [37498, None, u'ArgumentList', u'base'], [37502, None, u'Identifier', u'ttm_base_object_type'], [37499, None, u'Argument', u'base'], [37500, None, u'Identifier', u'base'], [37491, u'True', u'Condition', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [37517, None, u'CallExpression', u'unlikely ( ! base )'], [37523, None, u'Callee', u'unlikely'], [37518, None, u'ArgumentList', u'! base'], [37524, None, u'Identifier', u'unlikely'], [37519, None, u'Argument', u'! base'], [37520, None, u'UnaryOp', u'! base'], [37522, None, u'UnaryOperator', u'!'], [37521, None, u'Identifier', u'base'], [37516, u'True', u'Condition', u'unlikely ( ! base )'], [37564, None, u'CallExpression', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [37575, None, u'Callee', u'ACCESS_ONCE'], [37565, None, u'ArgumentList', u'vmw_fpriv ( file_priv ) -> locked_master'], [37576, None, u'Identifier', u'ACCESS_ONCE'], [37566, None, u'Argument', u'vmw_fpriv ( file_priv ) -> locked_master'], [37567, None, u'PtrMemberAccess', u'vmw_fpriv ( file_priv ) -> locked_master'], [37569, None, u'CallExpression', u'vmw_fpriv ( file_priv )'], [37568, None, u'Identifier', u'locked_master'], [37573, None, u'Callee', u'vmw_fpriv'], [37570, None, u'ArgumentList', u'file_priv'], [37574, None, u'Identifier', u'vmw_fpriv'], [37571, None, u'Argument', u'file_priv'], [37572, None, u'Identifier', u'file_priv'], [37563, u'True', u'Condition', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [37606, None, u'CallExpression', u'unlikely ( ret != 0 )'], [37612, None, u'Callee', u'unlikely'], [37607, None, u'ArgumentList', u'ret != 0'], [37613, None, u'Identifier', u'unlikely'], [37608, None, u'Argument', u'ret != 0'], [37609, None, u'EqualityExpression', u'ret != 0'], [37611, None, u'Identifier', u'ret'], [37610, None, u'PrimaryExpression', u'0'], [37605, u'True', u'Condition', u'unlikely ( ret != 0 )'], [37446, u'True', u'Statement', u'DRM_ERROR'], [37448, None, u'AndExpression', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [37456, None, u'CallExpression', u'drm_is_primary_client ( file_priv )'], [37449, None, u'EqualityExpression', u'user_srf -> master != file_priv -> master'], [37460, None, u'Callee', u'drm_is_primary_client'], [37457, None, u'ArgumentList', u'file_priv'], [37453, None, u'PtrMemberAccess', u'user_srf -> master'], [37450, None, u'PtrMemberAccess', u'file_priv -> master'], [37461, None, u'Identifier', u'drm_is_primary_client'], [37458, None, u'Argument', u'file_priv'], [37455, None, u'Identifier', u'user_srf'], [37454, None, u'Identifier', u'master'], [37452, None, u'Identifier', u'file_priv'], [37451, None, u'Identifier', u'master'], [37459, None, u'Identifier', u'file_priv'], [37447, u'True', u'Condition', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [37477, None, u'EqualityExpression', u'handle_type != DRM_VMW_HANDLE_PRIME'], [37479, None, u'Identifier', u'handle_type'], [37478, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [37476, u'True', u'Condition', u'handle_type != DRM_VMW_HANDLE_PRIME'], [37492, None, u'CallExpression', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [37503, None, u'Callee', u'unlikely'], [37493, None, u'ArgumentList', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [37504, None, u'Identifier', u'unlikely'], [37494, None, u'Argument', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [37495, None, u'EqualityExpression', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [37497, None, u'CallExpression', u'ttm_base_object_type ( base )'], [37496, None, u'Identifier', u'VMW_RES_SURFACE'], [37501, None, u'Callee', u'ttm_base_object_type'], [37498, None, u'ArgumentList', u'base'], [37502, None, u'Identifier', u'ttm_base_object_type'], [37499, None, u'Argument', u'base'], [37500, None, u'Identifier', u'base'], [37491, u'True', u'Condition', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [37517, None, u'CallExpression', u'unlikely ( ! base )'], [37523, None, u'Callee', u'unlikely'], [37518, None, u'ArgumentList', u'! base'], [37524, None, u'Identifier', u'unlikely'], [37519, None, u'Argument', u'! base'], [37520, None, u'UnaryOp', u'! base'], [37522, None, u'UnaryOperator', u'!'], [37521, None, u'Identifier', u'base'], [37516, u'True', u'Condition', u'unlikely ( ! base )'], [37564, None, u'CallExpression', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [37575, None, u'Callee', u'ACCESS_ONCE'], [37565, None, u'ArgumentList', u'vmw_fpriv ( file_priv ) -> locked_master'], [37576, None, u'Identifier', u'ACCESS_ONCE'], [37566, None, u'Argument', u'vmw_fpriv ( file_priv ) -> locked_master'], [37567, None, u'PtrMemberAccess', u'vmw_fpriv ( file_priv ) -> locked_master'], [37569, None, u'CallExpression', u'vmw_fpriv ( file_priv )'], [37568, None, u'Identifier', u'locked_master'], [37573, None, u'Callee', u'vmw_fpriv'], [37570, None, u'ArgumentList', u'file_priv'], [37574, None, u'Identifier', u'vmw_fpriv'], [37571, None, u'Argument', u'file_priv'], [37572, None, u'Identifier', u'file_priv'], [37563, u'True', u'Condition', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [37606, None, u'CallExpression', u'unlikely ( ret != 0 )'], [37612, None, u'Callee', u'unlikely'], [37607, None, u'ArgumentList', u'ret != 0'], [37613, None, u'Identifier', u'unlikely'], [37608, None, u'Argument', u'ret != 0'], [37609, None, u'EqualityExpression', u'ret != 0'], [37611, None, u'Identifier', u'ret'], [37610, None, u'PrimaryExpression', u'0'], [37605, u'True', u'Condition', u'unlikely ( ret != 0 )']]","[[37444, u'True', u'Statement', u'""Trying to reference surface outside of""'], [37445, u'True', u'Statement', u'('], [37446, u'True', u'Statement', u'DRM_ERROR']]"
"xfs: rework the inline directory verifiers

The inline directory verifiers should be called on the inode fork data,
which means after iformat_local on the read side, and prior to
ifork_flush on the write side.  This makes the fork verifier more
consistent with the way buffer verifiers work -- i.e. they will operate
on the memory buffer that the code will be reading and writing directly.

Furthermore, revise the verifier function to return -EFSCORRUPTED so
that we don't flood the logs with corruption messages and assert
notices.  This has been a particular problem with xfs/348, which
triggers the XFS_WANT_CORRUPTED_RETURN assertions, which halts the
kernel when CONFIG_XFS_DEBUG=y.  Disk corruption isn't supposed to do
that, at least not in a verifier.

Reviewed-by: Brian Foster <bfoster@redhat.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>",fs/xfs/libxfs/xfs_dir2_sf.c,+,"[[44421, u'True', u'ExpressionStatement', u'ASSERT ( ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL )']]","[[44422, None, u'CallExpression', u'ASSERT ( ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL )'], [44432, None, u'Callee', u'ASSERT'], [44423, None, u'ArgumentList', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [44433, None, u'Identifier', u'ASSERT'], [44424, None, u'Argument', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [44425, None, u'EqualityExpression', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [44427, None, u'MemberAccess', u'ip -> i_d . di_format'], [44426, None, u'Identifier', u'XFS_DINODE_FMT_LOCAL'], [44429, None, u'PtrMemberAccess', u'ip -> i_d'], [44428, None, u'Identifier', u'di_format'], [44431, None, u'Identifier', u'ip'], [44430, None, u'Identifier', u'i_d'], [44421, u'True', u'ExpressionStatement', u'ASSERT ( ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL )'], [44495, u'True', u'CFGEntryNode', u'ENTRY']]","[[44422, None, u'CallExpression', u'ASSERT ( ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL )'], [44432, None, u'Callee', u'ASSERT'], [44423, None, u'ArgumentList', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [44433, None, u'Identifier', u'ASSERT'], [44424, None, u'Argument', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [44425, None, u'EqualityExpression', u'ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL'], [44427, None, u'MemberAccess', u'ip -> i_d . di_format'], [44426, None, u'Identifier', u'XFS_DINODE_FMT_LOCAL'], [44429, None, u'PtrMemberAccess', u'ip -> i_d'], [44428, None, u'Identifier', u'di_format'], [44431, None, u'Identifier', u'ip'], [44430, None, u'Identifier', u'i_d'], [44421, u'True', u'ExpressionStatement', u'ASSERT ( ip -> i_d . di_format == XFS_DINODE_FMT_LOCAL )'], [44082, None, u'ParameterType', u'struct xfs_inode *'], [44081, None, u'Identifier', u'ip'], [44080, u'True', u'Parameter', u'struct xfs_inode * ip']]"
"Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux

Pull s390 fixes from Martin Schwidefsky:
 ""Four bug fixes, two of them for stable:

   - avoid initrd corruptions in the kernel decompressor

   - prevent inconsistent dumps if the boot CPU does not have address
     zero

   - fix the new pkey interface added with the merge window for 4.11

   - a fix for a fix, another issue with user copy zero padding""

* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:
  s390/uaccess: get_user() should zero on failure (again)
  s390/pkey: Fix wrong handling of secure key with old MKVP
  s390/smp: fix ipl from cpu with non-zero address
  s390/decompressor: fix initrd corruption caused by bss clear",drivers/s390/crypto/pkey_api.c,+,"[[55222, u'True', u'ExpressionStatement', u'DEBUG_WARN ( ""pkey_sec2protkey unwrap secure key warning, card response %d/%d\\n"" , ( int ) prepcblk -> ccp_rtcode , ( int ) prepcblk -> ccp_rscode )']]","[[55223, None, u'CallExpression', u'DEBUG_WARN ( ""pkey_sec2protkey unwrap secure key warning, card response %d/%d\\n"" , ( int ) prepcblk -> ccp_rtcode , ( int ) prepcblk -> ccp_rscode )'], [55239, None, u'Callee', u'DEBUG_WARN'], [55224, None, u'ArgumentList', u'""pkey_sec2protkey unwrap secure key warning, card response %d/%d\\n""'], [55240, None, u'Identifier', u'DEBUG_WARN'], [55237, None, u'Argument', u'""pkey_sec2protkey unwrap secure key warning, card response %d/%d\\n""'], [55231, None, u'Argument', u'( int ) prepcblk -> ccp_rtcode'], [55225, None, u'Argument', u'( int ) prepcblk -> ccp_rscode'], [55238, None, u'PrimaryExpression', u'""pkey_sec2protkey unwrap secure key warning, card response %d/%d\\n""'], [55232, None, u'CastExpression', u'( int ) prepcblk -> ccp_rtcode'], [55226, None, u'CastExpression', u'( int ) prepcblk -> ccp_rscode'], [55236, None, u'CastTarget', u'int'], [55233, None, u'PtrMemberAccess', u'prepcblk -> ccp_rtcode'], [55230, None, u'CastTarget', u'int'], [55227, None, u'PtrMemberAccess', u'prepcblk -> ccp_rscode'], [55235, None, u'Identifier', u'prepcblk'], [55234, None, u'Identifier', u'ccp_rtcode'], [55229, None, u'Identifier', u'prepcblk'], [55228, None, u'Identifier', u'ccp_rscode'], [55222, u'True', u'ExpressionStatement', u'DEBUG_WARN ( ""pkey_sec2protkey unwrap secure key warning, card response %d/%d\\n"" , ( int ) prepcblk -> ccp_rtcode , ( int ) prepcblk -> ccp_rscode )'], [55242, None, u'EqualityExpression', u'prepcblk -> ccp_rscode != 0'], [55244, None, u'PtrMemberAccess', u'prepcblk -> ccp_rscode'], [55243, None, u'PrimaryExpression', u'0'], [55246, None, u'Identifier', u'prepcblk'], [55245, None, u'Identifier', u'ccp_rscode'], [55241, u'True', u'Condition', u'prepcblk -> ccp_rscode != 0'], [55277, None, u'EqualityExpression', u'prepcblk -> ccp_rtcode != 0'], [55279, None, u'PtrMemberAccess', u'prepcblk -> ccp_rtcode'], [55278, None, u'PrimaryExpression', u'0'], [55281, None, u'Identifier', u'prepcblk'], [55280, None, u'Identifier', u'ccp_rtcode'], [55276, u'True', u'Condition', u'prepcblk -> ccp_rtcode != 0'], [55304, None, u'Identifier', u'rc'], [55303, u'True', u'Condition', u'rc'], [55475, None, u'Identifier', u'rc'], [55474, u'True', u'Condition', u'rc'], [55524, u'True', u'CFGEntryNode', u'ENTRY']]","[[55223, None, u'CallExpression', u'DEBUG_WARN ( ""pkey_sec2protkey unwrap secure key warning, card response %d/%d\\n"" , ( int ) prepcblk -> ccp_rtcode , ( int ) prepcblk -> ccp_rscode )'], [55239, None, u'Callee', u'DEBUG_WARN'], [55224, None, u'ArgumentList', u'""pkey_sec2protkey unwrap secure key warning, card response %d/%d\\n""'], [55240, None, u'Identifier', u'DEBUG_WARN'], [55237, None, u'Argument', u'""pkey_sec2protkey unwrap secure key warning, card response %d/%d\\n""'], [55231, None, u'Argument', u'( int ) prepcblk -> ccp_rtcode'], [55225, None, u'Argument', u'( int ) prepcblk -> ccp_rscode'], [55238, None, u'PrimaryExpression', u'""pkey_sec2protkey unwrap secure key warning, card response %d/%d\\n""'], [55232, None, u'CastExpression', u'( int ) prepcblk -> ccp_rtcode'], [55226, None, u'CastExpression', u'( int ) prepcblk -> ccp_rscode'], [55236, None, u'CastTarget', u'int'], [55233, None, u'PtrMemberAccess', u'prepcblk -> ccp_rtcode'], [55230, None, u'CastTarget', u'int'], [55227, None, u'PtrMemberAccess', u'prepcblk -> ccp_rscode'], [55235, None, u'Identifier', u'prepcblk'], [55234, None, u'Identifier', u'ccp_rtcode'], [55229, None, u'Identifier', u'prepcblk'], [55228, None, u'Identifier', u'ccp_rscode'], [55222, u'True', u'ExpressionStatement', u'DEBUG_WARN ( ""pkey_sec2protkey unwrap secure key warning, card response %d/%d\\n"" , ( int ) prepcblk -> ccp_rtcode , ( int ) prepcblk -> ccp_rscode )'], [55513, None, u'IdentifierDecl', u'* preqcblk'], [55510, None, u'IdentifierDecl', u'* prepcblk'], [55515, None, u'IdentifierDeclType', u'struct CPRBX *'], [55514, None, u'Identifier', u'preqcblk'], [55512, None, u'IdentifierDeclType', u'struct CPRBX *'], [55511, None, u'Identifier', u'prepcblk'], [55509, u'True', u'IdentifierDeclStatement', u'struct CPRBX * preqcblk , * prepcblk ;']]"
"Merge branch 'l2tp_session_find-fixes'

Guillaume Nault says:

====================
l2tp: fix usage of l2tp_session_find()

l2tp_session_find() doesn't take a reference on the session returned to
its caller. Virtually all l2tp_session_find() users are racy, either
because the session can disappear from under them or because they take
a reference too late. This leads to bugs like 'use after free' or
failure to notice duplicate session creations.

In some cases, taking a reference on the session is not enough. The
special callbacks .ref() and .deref() also have to be called in cases
where the PPP pseudo-wire uses the socket associated with the session.
Therefore, when looking up a session, we also have to pass a flag
indicating if the .ref() callback has to be called.

In the future, we probably could drop the .ref() and .deref() callbacks
entirely by protecting the .sock field of struct pppol2tp_session with
RCU, thus allowing it to be freed and set to NULL even if the L2TP
session is still alive.
====================

Signed-off-by: David S. Miller <davem@davemloft.net>",net/l2tp/l2tp_core.c,+,"[[64405, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )']]","[[64406, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [64414, None, u'Callee', u'write_lock_bh'], [64407, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [64415, None, u'Identifier', u'write_lock_bh'], [64408, None, u'Argument', u'& tunnel -> hlist_lock'], [64409, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [64413, None, u'UnaryOperator', u'&'], [64410, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [64412, None, u'Identifier', u'tunnel'], [64411, None, u'Identifier', u'hlist_lock'], [64405, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [64445, u'True', u'CFGEntryNode', u'ENTRY']]","[[64406, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [64414, None, u'Callee', u'write_lock_bh'], [64407, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [64415, None, u'Identifier', u'write_lock_bh'], [64408, None, u'Argument', u'& tunnel -> hlist_lock'], [64409, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [64413, None, u'UnaryOperator', u'&'], [64410, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [64412, None, u'Identifier', u'tunnel'], [64411, None, u'Identifier', u'hlist_lock'], [64405, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [64234, None, u'ParameterType', u'struct l2tp_tunnel *'], [64233, None, u'Identifier', u'tunnel'], [64232, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"Merge branch 'l2tp_session_find-fixes'

Guillaume Nault says:

====================
l2tp: fix usage of l2tp_session_find()

l2tp_session_find() doesn't take a reference on the session returned to
its caller. Virtually all l2tp_session_find() users are racy, either
because the session can disappear from under them or because they take
a reference too late. This leads to bugs like 'use after free' or
failure to notice duplicate session creations.

In some cases, taking a reference on the session is not enough. The
special callbacks .ref() and .deref() also have to be called in cases
where the PPP pseudo-wire uses the socket associated with the session.
Therefore, when looking up a session, we also have to pass a flag
indicating if the .ref() callback has to be called.

In the future, we probably could drop the .ref() and .deref() callbacks
entirely by protecting the .sock field of struct pppol2tp_session with
RCU, thus allowing it to be freed and set to NULL even if the L2TP
session is still alive.
====================

Signed-off-by: David S. Miller <davem@davemloft.net>",net/l2tp/l2tp_core.c,+,"[[64269, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )']]","[[64270, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [64278, None, u'Callee', u'write_unlock_bh'], [64271, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [64279, None, u'Identifier', u'write_unlock_bh'], [64272, None, u'Argument', u'& tunnel -> hlist_lock'], [64273, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [64277, None, u'UnaryOperator', u'&'], [64274, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [64276, None, u'Identifier', u'tunnel'], [64275, None, u'Identifier', u'hlist_lock'], [64269, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [64381, None, u'EqualityExpression', u'tunnel -> version == L2TP_HDR_VER_3'], [64383, None, u'PtrMemberAccess', u'tunnel -> version'], [64382, None, u'Identifier', u'L2TP_HDR_VER_3'], [64385, None, u'Identifier', u'tunnel'], [64384, None, u'Identifier', u'version'], [64380, u'True', u'Condition', u'tunnel -> version == L2TP_HDR_VER_3'], [64323, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [64327, None, u'PtrMemberAccess', u'session_walk -> session_id'], [64324, None, u'PtrMemberAccess', u'session -> session_id'], [64329, None, u'Identifier', u'session_walk'], [64328, None, u'Identifier', u'session_id'], [64326, None, u'Identifier', u'session'], [64325, None, u'Identifier', u'session_id'], [64322, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [64390, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [64394, None, u'PtrMemberAccess', u'session_walk -> session_id'], [64391, None, u'PtrMemberAccess', u'session -> session_id'], [64396, None, u'Identifier', u'session_walk'], [64395, None, u'Identifier', u'session_id'], [64393, None, u'Identifier', u'session'], [64392, None, u'Identifier', u'session_id'], [64389, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [64445, u'True', u'CFGEntryNode', u'ENTRY']]","[[64270, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [64278, None, u'Callee', u'write_unlock_bh'], [64271, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [64279, None, u'Identifier', u'write_unlock_bh'], [64272, None, u'Argument', u'& tunnel -> hlist_lock'], [64273, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [64277, None, u'UnaryOperator', u'&'], [64274, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [64276, None, u'Identifier', u'tunnel'], [64275, None, u'Identifier', u'hlist_lock'], [64269, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [64234, None, u'ParameterType', u'struct l2tp_tunnel *'], [64233, None, u'Identifier', u'tunnel'], [64232, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"Merge branch 'l2tp_session_find-fixes'

Guillaume Nault says:

====================
l2tp: fix usage of l2tp_session_find()

l2tp_session_find() doesn't take a reference on the session returned to
its caller. Virtually all l2tp_session_find() users are racy, either
because the session can disappear from under them or because they take
a reference too late. This leads to bugs like 'use after free' or
failure to notice duplicate session creations.

In some cases, taking a reference on the session is not enough. The
special callbacks .ref() and .deref() also have to be called in cases
where the PPP pseudo-wire uses the socket associated with the session.
Therefore, when looking up a session, we also have to pass a flag
indicating if the .ref() callback has to be called.

In the future, we probably could drop the .ref() and .deref() callbacks
entirely by protecting the .sock field of struct pppol2tp_session with
RCU, thus allowing it to be freed and set to NULL even if the L2TP
session is still alive.
====================

Signed-off-by: David S. Miller <davem@davemloft.net>",net/l2tp/l2tp_core.c,+,"[[64241, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )']]","[[64242, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [64250, None, u'Callee', u'write_unlock_bh'], [64243, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [64251, None, u'Identifier', u'write_unlock_bh'], [64244, None, u'Argument', u'& tunnel -> hlist_lock'], [64245, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [64249, None, u'UnaryOperator', u'&'], [64246, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [64248, None, u'Identifier', u'tunnel'], [64247, None, u'Identifier', u'hlist_lock'], [64241, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [64390, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [64394, None, u'PtrMemberAccess', u'session_walk -> session_id'], [64391, None, u'PtrMemberAccess', u'session -> session_id'], [64396, None, u'Identifier', u'session_walk'], [64395, None, u'Identifier', u'session_id'], [64393, None, u'Identifier', u'session'], [64392, None, u'Identifier', u'session_id'], [64389, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [64323, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [64327, None, u'PtrMemberAccess', u'session_walk -> session_id'], [64324, None, u'PtrMemberAccess', u'session -> session_id'], [64329, None, u'Identifier', u'session_walk'], [64328, None, u'Identifier', u'session_id'], [64326, None, u'Identifier', u'session'], [64325, None, u'Identifier', u'session_id'], [64322, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [64445, u'True', u'CFGEntryNode', u'ENTRY'], [64381, None, u'EqualityExpression', u'tunnel -> version == L2TP_HDR_VER_3'], [64383, None, u'PtrMemberAccess', u'tunnel -> version'], [64382, None, u'Identifier', u'L2TP_HDR_VER_3'], [64385, None, u'Identifier', u'tunnel'], [64384, None, u'Identifier', u'version'], [64380, u'True', u'Condition', u'tunnel -> version == L2TP_HDR_VER_3']]","[[64242, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [64250, None, u'Callee', u'write_unlock_bh'], [64243, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [64251, None, u'Identifier', u'write_unlock_bh'], [64244, None, u'Argument', u'& tunnel -> hlist_lock'], [64245, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [64249, None, u'UnaryOperator', u'&'], [64246, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [64248, None, u'Identifier', u'tunnel'], [64247, None, u'Identifier', u'hlist_lock'], [64241, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [64234, None, u'ParameterType', u'struct l2tp_tunnel *'], [64233, None, u'Identifier', u'tunnel'], [64232, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"Merge branch 'l2tp_session_find-fixes'

Guillaume Nault says:

====================
l2tp: fix usage of l2tp_session_find()

l2tp_session_find() doesn't take a reference on the session returned to
its caller. Virtually all l2tp_session_find() users are racy, either
because the session can disappear from under them or because they take
a reference too late. This leads to bugs like 'use after free' or
failure to notice duplicate session creations.

In some cases, taking a reference on the session is not enough. The
special callbacks .ref() and .deref() also have to be called in cases
where the PPP pseudo-wire uses the socket associated with the session.
Therefore, when looking up a session, we also have to pass a flag
indicating if the .ref() callback has to be called.

In the future, we probably could drop the .ref() and .deref() callbacks
entirely by protecting the .sock field of struct pppol2tp_session with
RCU, thus allowing it to be freed and set to NULL even if the L2TP
session is still alive.
====================

Signed-off-by: David S. Miller <davem@davemloft.net>",net/l2tp/l2tp_core.c,-,"[[79811, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )']]","[[79812, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [79820, None, u'Callee', u'write_lock_bh'], [79813, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [79821, None, u'Identifier', u'write_lock_bh'], [79814, None, u'Argument', u'& tunnel -> hlist_lock'], [79815, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [79819, None, u'UnaryOperator', u'&'], [79816, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [79818, None, u'Identifier', u'tunnel'], [79817, None, u'Identifier', u'hlist_lock'], [79811, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [80171, None, u'EqualityExpression', u'session != NULL'], [80173, None, u'Identifier', u'session'], [80172, None, u'Identifier', u'NULL'], [80170, u'True', u'Condition', u'session != NULL'], [80193, u'True', u'CFGEntryNode', u'ENTRY']]","[[79812, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [79820, None, u'Callee', u'write_lock_bh'], [79813, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [79821, None, u'Identifier', u'write_lock_bh'], [79814, None, u'Argument', u'& tunnel -> hlist_lock'], [79815, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [79819, None, u'UnaryOperator', u'&'], [79816, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [79818, None, u'Identifier', u'tunnel'], [79817, None, u'Identifier', u'hlist_lock'], [79811, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [79690, None, u'ParameterType', u'struct l2tp_tunnel *'], [79689, None, u'Identifier', u'tunnel'], [79688, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"Merge branch 'l2tp_session_find-fixes'

Guillaume Nault says:

====================
l2tp: fix usage of l2tp_session_find()

l2tp_session_find() doesn't take a reference on the session returned to
its caller. Virtually all l2tp_session_find() users are racy, either
because the session can disappear from under them or because they take
a reference too late. This leads to bugs like 'use after free' or
failure to notice duplicate session creations.

In some cases, taking a reference on the session is not enough. The
special callbacks .ref() and .deref() also have to be called in cases
where the PPP pseudo-wire uses the socket associated with the session.
Therefore, when looking up a session, we also have to pass a flag
indicating if the .ref() callback has to be called.

In the future, we probably could drop the .ref() and .deref() callbacks
entirely by protecting the .sock field of struct pppol2tp_session with
RCU, thus allowing it to be freed and set to NULL even if the L2TP
session is still alive.
====================

Signed-off-by: David S. Miller <davem@davemloft.net>",net/l2tp/l2tp_core.c,-,"[[79780, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )']]","[[79781, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [79789, None, u'Callee', u'write_unlock_bh'], [79782, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [79790, None, u'Identifier', u'write_unlock_bh'], [79783, None, u'Argument', u'& tunnel -> hlist_lock'], [79784, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [79788, None, u'UnaryOperator', u'&'], [79785, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [79787, None, u'Identifier', u'tunnel'], [79786, None, u'Identifier', u'hlist_lock'], [79780, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [80171, None, u'EqualityExpression', u'session != NULL'], [80173, None, u'Identifier', u'session'], [80172, None, u'Identifier', u'NULL'], [80170, u'True', u'Condition', u'session != NULL'], [80193, u'True', u'CFGEntryNode', u'ENTRY']]","[[79781, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [79789, None, u'Callee', u'write_unlock_bh'], [79782, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [79790, None, u'Identifier', u'write_unlock_bh'], [79783, None, u'Argument', u'& tunnel -> hlist_lock'], [79784, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [79788, None, u'UnaryOperator', u'&'], [79785, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [79787, None, u'Identifier', u'tunnel'], [79786, None, u'Identifier', u'hlist_lock'], [79780, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [79690, None, u'ParameterType', u'struct l2tp_tunnel *'], [79689, None, u'Identifier', u'tunnel'], [79688, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"l2tp: fix duplicate session creation

l2tp_session_create() relies on its caller for checking for duplicate
sessions. This is racy since a session can be concurrently inserted
after the caller's verification.

Fix this by letting l2tp_session_create() verify sessions uniqueness
upon insertion. Callers need to be adapted to check for
l2tp_session_create()'s return code instead of calling
l2tp_session_find().

pppol2tp_connect() is a bit special because it has to work on existing
sessions (if they're not connected) or to create a new session if none
is found. When acting on a preexisting session, a reference must be
held or it could go away on us. So we have to use l2tp_session_get()
instead of l2tp_session_find() and drop the reference before exiting.

Fixes: d9e31d17ceba (""l2tp: Add L2TP ethernet pseudowire support"")
Fixes: fd558d186df2 (""l2tp: Split pppol2tp patch into separate l2tp and ppp parts"")
Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
Signed-off-by: David S. Miller <davem@davemloft.net>",net/l2tp/l2tp_core.c,+,"[[81779, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )']]","[[81780, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [81788, None, u'Callee', u'write_lock_bh'], [81781, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [81789, None, u'Identifier', u'write_lock_bh'], [81782, None, u'Argument', u'& tunnel -> hlist_lock'], [81783, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [81787, None, u'UnaryOperator', u'&'], [81784, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [81786, None, u'Identifier', u'tunnel'], [81785, None, u'Identifier', u'hlist_lock'], [81779, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [81819, u'True', u'CFGEntryNode', u'ENTRY']]","[[81780, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [81788, None, u'Callee', u'write_lock_bh'], [81781, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [81789, None, u'Identifier', u'write_lock_bh'], [81782, None, u'Argument', u'& tunnel -> hlist_lock'], [81783, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [81787, None, u'UnaryOperator', u'&'], [81784, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [81786, None, u'Identifier', u'tunnel'], [81785, None, u'Identifier', u'hlist_lock'], [81779, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [81608, None, u'ParameterType', u'struct l2tp_tunnel *'], [81607, None, u'Identifier', u'tunnel'], [81606, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"l2tp: fix duplicate session creation

l2tp_session_create() relies on its caller for checking for duplicate
sessions. This is racy since a session can be concurrently inserted
after the caller's verification.

Fix this by letting l2tp_session_create() verify sessions uniqueness
upon insertion. Callers need to be adapted to check for
l2tp_session_create()'s return code instead of calling
l2tp_session_find().

pppol2tp_connect() is a bit special because it has to work on existing
sessions (if they're not connected) or to create a new session if none
is found. When acting on a preexisting session, a reference must be
held or it could go away on us. So we have to use l2tp_session_get()
instead of l2tp_session_find() and drop the reference before exiting.

Fixes: d9e31d17ceba (""l2tp: Add L2TP ethernet pseudowire support"")
Fixes: fd558d186df2 (""l2tp: Split pppol2tp patch into separate l2tp and ppp parts"")
Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
Signed-off-by: David S. Miller <davem@davemloft.net>",net/l2tp/l2tp_core.c,+,"[[81643, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )']]","[[81644, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [81652, None, u'Callee', u'write_unlock_bh'], [81645, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [81653, None, u'Identifier', u'write_unlock_bh'], [81646, None, u'Argument', u'& tunnel -> hlist_lock'], [81647, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [81651, None, u'UnaryOperator', u'&'], [81648, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [81650, None, u'Identifier', u'tunnel'], [81649, None, u'Identifier', u'hlist_lock'], [81643, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [81697, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [81701, None, u'PtrMemberAccess', u'session_walk -> session_id'], [81698, None, u'PtrMemberAccess', u'session -> session_id'], [81703, None, u'Identifier', u'session_walk'], [81702, None, u'Identifier', u'session_id'], [81700, None, u'Identifier', u'session'], [81699, None, u'Identifier', u'session_id'], [81696, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [81755, None, u'EqualityExpression', u'tunnel -> version == L2TP_HDR_VER_3'], [81757, None, u'PtrMemberAccess', u'tunnel -> version'], [81756, None, u'Identifier', u'L2TP_HDR_VER_3'], [81759, None, u'Identifier', u'tunnel'], [81758, None, u'Identifier', u'version'], [81754, u'True', u'Condition', u'tunnel -> version == L2TP_HDR_VER_3'], [81764, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [81768, None, u'PtrMemberAccess', u'session_walk -> session_id'], [81765, None, u'PtrMemberAccess', u'session -> session_id'], [81770, None, u'Identifier', u'session_walk'], [81769, None, u'Identifier', u'session_id'], [81767, None, u'Identifier', u'session'], [81766, None, u'Identifier', u'session_id'], [81763, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [81819, u'True', u'CFGEntryNode', u'ENTRY']]","[[81644, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [81652, None, u'Callee', u'write_unlock_bh'], [81645, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [81653, None, u'Identifier', u'write_unlock_bh'], [81646, None, u'Argument', u'& tunnel -> hlist_lock'], [81647, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [81651, None, u'UnaryOperator', u'&'], [81648, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [81650, None, u'Identifier', u'tunnel'], [81649, None, u'Identifier', u'hlist_lock'], [81643, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [81608, None, u'ParameterType', u'struct l2tp_tunnel *'], [81607, None, u'Identifier', u'tunnel'], [81606, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"l2tp: fix duplicate session creation

l2tp_session_create() relies on its caller for checking for duplicate
sessions. This is racy since a session can be concurrently inserted
after the caller's verification.

Fix this by letting l2tp_session_create() verify sessions uniqueness
upon insertion. Callers need to be adapted to check for
l2tp_session_create()'s return code instead of calling
l2tp_session_find().

pppol2tp_connect() is a bit special because it has to work on existing
sessions (if they're not connected) or to create a new session if none
is found. When acting on a preexisting session, a reference must be
held or it could go away on us. So we have to use l2tp_session_get()
instead of l2tp_session_find() and drop the reference before exiting.

Fixes: d9e31d17ceba (""l2tp: Add L2TP ethernet pseudowire support"")
Fixes: fd558d186df2 (""l2tp: Split pppol2tp patch into separate l2tp and ppp parts"")
Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
Signed-off-by: David S. Miller <davem@davemloft.net>",net/l2tp/l2tp_core.c,+,"[[81615, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )']]","[[81616, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [81624, None, u'Callee', u'write_unlock_bh'], [81617, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [81625, None, u'Identifier', u'write_unlock_bh'], [81618, None, u'Argument', u'& tunnel -> hlist_lock'], [81619, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [81623, None, u'UnaryOperator', u'&'], [81620, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [81622, None, u'Identifier', u'tunnel'], [81621, None, u'Identifier', u'hlist_lock'], [81615, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [81764, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [81768, None, u'PtrMemberAccess', u'session_walk -> session_id'], [81765, None, u'PtrMemberAccess', u'session -> session_id'], [81770, None, u'Identifier', u'session_walk'], [81769, None, u'Identifier', u'session_id'], [81767, None, u'Identifier', u'session'], [81766, None, u'Identifier', u'session_id'], [81763, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [81697, None, u'EqualityExpression', u'session_walk -> session_id == session -> session_id'], [81701, None, u'PtrMemberAccess', u'session_walk -> session_id'], [81698, None, u'PtrMemberAccess', u'session -> session_id'], [81703, None, u'Identifier', u'session_walk'], [81702, None, u'Identifier', u'session_id'], [81700, None, u'Identifier', u'session'], [81699, None, u'Identifier', u'session_id'], [81696, u'True', u'Condition', u'session_walk -> session_id == session -> session_id'], [81819, u'True', u'CFGEntryNode', u'ENTRY'], [81755, None, u'EqualityExpression', u'tunnel -> version == L2TP_HDR_VER_3'], [81757, None, u'PtrMemberAccess', u'tunnel -> version'], [81756, None, u'Identifier', u'L2TP_HDR_VER_3'], [81759, None, u'Identifier', u'tunnel'], [81758, None, u'Identifier', u'version'], [81754, u'True', u'Condition', u'tunnel -> version == L2TP_HDR_VER_3']]","[[81616, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [81624, None, u'Callee', u'write_unlock_bh'], [81617, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [81625, None, u'Identifier', u'write_unlock_bh'], [81618, None, u'Argument', u'& tunnel -> hlist_lock'], [81619, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [81623, None, u'UnaryOperator', u'&'], [81620, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [81622, None, u'Identifier', u'tunnel'], [81621, None, u'Identifier', u'hlist_lock'], [81615, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [81608, None, u'ParameterType', u'struct l2tp_tunnel *'], [81607, None, u'Identifier', u'tunnel'], [81606, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"l2tp: fix duplicate session creation

l2tp_session_create() relies on its caller for checking for duplicate
sessions. This is racy since a session can be concurrently inserted
after the caller's verification.

Fix this by letting l2tp_session_create() verify sessions uniqueness
upon insertion. Callers need to be adapted to check for
l2tp_session_create()'s return code instead of calling
l2tp_session_find().

pppol2tp_connect() is a bit special because it has to work on existing
sessions (if they're not connected) or to create a new session if none
is found. When acting on a preexisting session, a reference must be
held or it could go away on us. So we have to use l2tp_session_get()
instead of l2tp_session_find() and drop the reference before exiting.

Fixes: d9e31d17ceba (""l2tp: Add L2TP ethernet pseudowire support"")
Fixes: fd558d186df2 (""l2tp: Split pppol2tp patch into separate l2tp and ppp parts"")
Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
Signed-off-by: David S. Miller <davem@davemloft.net>",net/l2tp/l2tp_core.c,-,"[[97402, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )']]","[[97403, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [97411, None, u'Callee', u'write_lock_bh'], [97404, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [97412, None, u'Identifier', u'write_lock_bh'], [97405, None, u'Argument', u'& tunnel -> hlist_lock'], [97406, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [97410, None, u'UnaryOperator', u'&'], [97407, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [97409, None, u'Identifier', u'tunnel'], [97408, None, u'Identifier', u'hlist_lock'], [97402, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [97762, None, u'EqualityExpression', u'session != NULL'], [97764, None, u'Identifier', u'session'], [97763, None, u'Identifier', u'NULL'], [97761, u'True', u'Condition', u'session != NULL'], [97784, u'True', u'CFGEntryNode', u'ENTRY']]","[[97403, None, u'CallExpression', u'write_lock_bh ( & tunnel -> hlist_lock )'], [97411, None, u'Callee', u'write_lock_bh'], [97404, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [97412, None, u'Identifier', u'write_lock_bh'], [97405, None, u'Argument', u'& tunnel -> hlist_lock'], [97406, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [97410, None, u'UnaryOperator', u'&'], [97407, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [97409, None, u'Identifier', u'tunnel'], [97408, None, u'Identifier', u'hlist_lock'], [97402, u'True', u'ExpressionStatement', u'write_lock_bh ( & tunnel -> hlist_lock )'], [97281, None, u'ParameterType', u'struct l2tp_tunnel *'], [97280, None, u'Identifier', u'tunnel'], [97279, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"l2tp: fix duplicate session creation

l2tp_session_create() relies on its caller for checking for duplicate
sessions. This is racy since a session can be concurrently inserted
after the caller's verification.

Fix this by letting l2tp_session_create() verify sessions uniqueness
upon insertion. Callers need to be adapted to check for
l2tp_session_create()'s return code instead of calling
l2tp_session_find().

pppol2tp_connect() is a bit special because it has to work on existing
sessions (if they're not connected) or to create a new session if none
is found. When acting on a preexisting session, a reference must be
held or it could go away on us. So we have to use l2tp_session_get()
instead of l2tp_session_find() and drop the reference before exiting.

Fixes: d9e31d17ceba (""l2tp: Add L2TP ethernet pseudowire support"")
Fixes: fd558d186df2 (""l2tp: Split pppol2tp patch into separate l2tp and ppp parts"")
Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
Signed-off-by: David S. Miller <davem@davemloft.net>",net/l2tp/l2tp_core.c,-,"[[97371, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )']]","[[97372, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [97380, None, u'Callee', u'write_unlock_bh'], [97373, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [97381, None, u'Identifier', u'write_unlock_bh'], [97374, None, u'Argument', u'& tunnel -> hlist_lock'], [97375, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [97379, None, u'UnaryOperator', u'&'], [97376, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [97378, None, u'Identifier', u'tunnel'], [97377, None, u'Identifier', u'hlist_lock'], [97371, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [97762, None, u'EqualityExpression', u'session != NULL'], [97764, None, u'Identifier', u'session'], [97763, None, u'Identifier', u'NULL'], [97761, u'True', u'Condition', u'session != NULL'], [97784, u'True', u'CFGEntryNode', u'ENTRY']]","[[97372, None, u'CallExpression', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [97380, None, u'Callee', u'write_unlock_bh'], [97373, None, u'ArgumentList', u'& tunnel -> hlist_lock'], [97381, None, u'Identifier', u'write_unlock_bh'], [97374, None, u'Argument', u'& tunnel -> hlist_lock'], [97375, None, u'UnaryOp', u'& tunnel -> hlist_lock'], [97379, None, u'UnaryOperator', u'&'], [97376, None, u'PtrMemberAccess', u'tunnel -> hlist_lock'], [97378, None, u'Identifier', u'tunnel'], [97377, None, u'Identifier', u'hlist_lock'], [97371, u'True', u'ExpressionStatement', u'write_unlock_bh ( & tunnel -> hlist_lock )'], [97281, None, u'ParameterType', u'struct l2tp_tunnel *'], [97280, None, u'Identifier', u'tunnel'], [97279, u'True', u'Parameter', u'struct l2tp_tunnel * tunnel']]"
"Merge branch 'parisc-4.11-3' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux

Pull parisc fixes from Helge Deller:
 ""Al Viro reported that - in case of read faults - our copy_from_user()
  implementation may claim to have copied more bytes than it actually
  did. In order to fix this bug and because of the way how gcc optimizes
  register usage for inline assembly in C code, we had to replace our
  pa_memcpy() function with a pure assembler implementation.

  While fixing the memcpy bug we noticed some other issues with our
  get_user() and put_user() functions, e.g. nested faults may return
  wrong data. This is now fixed by a common fixup handler for
  get_user/put_user in the exception handler which additionally makes
  generated code smaller and faster.

  The third patch is a trivial one-line fix for a patch which went in
  during 4.11-rc and which avoids stalled CPU warnings after power
  shutdown (for parisc machines which can't plug power off themselves).

  Due to the rewrite of pa_memcpy() into assembly this patch got bigger
  than what I wanted to have sent at this stage.

  Those patches have been running in production during the last few days
  on our debian build servers without any further issues""

* 'parisc-4.11-3' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:
  parisc: Avoid stalled CPU warnings after system shutdown
  parisc: Clean up fixup routines for get_user()/put_user()
  parisc: Fix access fault handling in pa_memcpy()",arch/parisc/lib/memcpy.c,-,"[[100355, u'True', u'ExpressionStatement', u'DPRINTF ( ""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n"" , ret , len , fault_addr , reference )']]","[[100356, None, u'CallExpression', u'DPRINTF ( ""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n"" , ret , len , fault_addr , reference )'], [100368, None, u'Callee', u'DPRINTF'], [100357, None, u'ArgumentList', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [100369, None, u'Identifier', u'DPRINTF'], [100366, None, u'Argument', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [100364, None, u'Argument', u'ret'], [100362, None, u'Argument', u'len'], [100360, None, u'Argument', u'fault_addr'], [100358, None, u'Argument', u'reference'], [100367, None, u'PrimaryExpression', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [100365, None, u'Identifier', u'ret'], [100363, None, u'Identifier', u'len'], [100361, None, u'Identifier', u'fault_addr'], [100359, None, u'Identifier', u'reference'], [100355, u'True', u'ExpressionStatement', u'DPRINTF ( ""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n"" , ret , len , fault_addr , reference )'], [100409, None, u'CallExpression', u'likely ( ret == PA_MEMCPY_OK )'], [100415, None, u'Callee', u'likely'], [100410, None, u'ArgumentList', u'ret == PA_MEMCPY_OK'], [100416, None, u'Identifier', u'likely'], [100411, None, u'Argument', u'ret == PA_MEMCPY_OK'], [100412, None, u'EqualityExpression', u'ret == PA_MEMCPY_OK'], [100414, None, u'Identifier', u'ret'], [100413, None, u'Identifier', u'PA_MEMCPY_OK'], [100408, u'True', u'Condition', u'likely ( ret == PA_MEMCPY_OK )'], [100444, u'True', u'CFGEntryNode', u'ENTRY']]","[[100356, None, u'CallExpression', u'DPRINTF ( ""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n"" , ret , len , fault_addr , reference )'], [100368, None, u'Callee', u'DPRINTF'], [100357, None, u'ArgumentList', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [100369, None, u'Identifier', u'DPRINTF'], [100366, None, u'Argument', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [100364, None, u'Argument', u'ret'], [100362, None, u'Argument', u'len'], [100360, None, u'Argument', u'fault_addr'], [100358, None, u'Argument', u'reference'], [100367, None, u'PrimaryExpression', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [100365, None, u'Identifier', u'ret'], [100363, None, u'Identifier', u'len'], [100361, None, u'Identifier', u'fault_addr'], [100359, None, u'Identifier', u'reference'], [100355, u'True', u'ExpressionStatement', u'DPRINTF ( ""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n"" , ret , len , fault_addr , reference )'], [100373, None, u'AssignmentExpr', u'reference = ( unsigned long ) dstp'], [100377, None, u'Identifier', u'reference'], [100374, None, u'CastExpression', u'( unsigned long ) dstp'], [100376, None, u'CastTarget', u'unsigned long'], [100375, None, u'Identifier', u'dstp'], [100372, u'True', u'ExpressionStatement', u'reference = ( unsigned long ) dstp'], [100379, None, u'AssignmentExpr', u'reference = ( unsigned long ) srcp'], [100383, None, u'Identifier', u'reference'], [100380, None, u'CastExpression', u'( unsigned long ) srcp'], [100382, None, u'CastTarget', u'unsigned long'], [100381, None, u'Identifier', u'srcp'], [100378, u'True', u'ExpressionStatement', u'reference = ( unsigned long ) srcp'], [100332, None, u'ParameterType', u'unsigned long'], [100331, None, u'Identifier', u'len'], [100330, u'True', u'Parameter', u'unsigned long len'], [100389, None, u'AssignmentExpr', u'fault_addr = d -> fault_addr'], [100393, None, u'Identifier', u'fault_addr'], [100390, None, u'PtrMemberAccess', u'd -> fault_addr'], [100392, None, u'Identifier', u'd'], [100391, None, u'Identifier', u'fault_addr'], [100388, u'True', u'ExpressionStatement', u'fault_addr = d -> fault_addr'], [100418, None, u'AssignmentExpr', u'ret = pa_memcpy_internal ( dstp , srcp , len )'], [100429, None, u'Identifier', u'ret'], [100419, None, u'CallExpression', u'pa_memcpy_internal ( dstp , srcp , len )'], [100427, None, u'Callee', u'pa_memcpy_internal'], [100420, None, u'ArgumentList', u'dstp'], [100428, None, u'Identifier', u'pa_memcpy_internal'], [100425, None, u'Argument', u'dstp'], [100423, None, u'Argument', u'srcp'], [100421, None, u'Argument', u'len'], [100426, None, u'Identifier', u'dstp'], [100424, None, u'Identifier', u'srcp'], [100422, None, u'Identifier', u'len'], [100417, u'True', u'ExpressionStatement', u'ret = pa_memcpy_internal ( dstp , srcp , len )'], [100338, None, u'ParameterType', u'void *'], [100337, None, u'Identifier', u'dstp'], [100336, u'True', u'Parameter', u'void * dstp'], [100335, None, u'ParameterType', u'const void *'], [100334, None, u'Identifier', u'srcp'], [100333, u'True', u'Parameter', u'const void * srcp'], [100395, None, u'AssignmentExpr', u'd = this_cpu_ptr ( & exception_data )'], [100404, None, u'Identifier', u'd'], [100396, None, u'CallExpression', u'this_cpu_ptr ( & exception_data )'], [100402, None, u'Callee', u'this_cpu_ptr'], [100397, None, u'ArgumentList', u'& exception_data'], [100403, None, u'Identifier', u'this_cpu_ptr'], [100398, None, u'Argument', u'& exception_data'], [100399, None, u'UnaryOp', u'& exception_data'], [100401, None, u'UnaryOperator', u'&'], [100400, None, u'Identifier', u'exception_data'], [100394, u'True', u'ExpressionStatement', u'd = this_cpu_ptr ( & exception_data )']]"
"Merge branch 'bpf-map_value_adj-reg-types-fixes'

Daniel Borkmann says:

====================
BPF fixes on map_value_adj reg types

This set adds two fixes for map_value_adj register type in the
verifier and user space tests along with them for the BPF self
test suite. For details, please see individual patches.
====================

Signed-off-by: David S. Miller <davem@davemloft.net>",tools/testing/selftests/bpf/test_verifier.c,+,"[[101043, u'True', u'ExpressionStatement', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )']]","[[101044, None, u'CallExpression', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )'], [101055, None, u'Callee', u'printf'], [101045, None, u'ArgumentList', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [101056, None, u'Identifier', u'printf'], [101053, None, u'Argument', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [101046, None, u'Argument', u'strerror ( errno )'], [101054, None, u'PrimaryExpression', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [101047, None, u'CallExpression', u'strerror ( errno )'], [101051, None, u'Callee', u'strerror'], [101048, None, u'ArgumentList', u'errno'], [101052, None, u'Identifier', u'strerror'], [101049, None, u'Argument', u'errno'], [101050, None, u'Identifier', u'errno'], [101043, u'True', u'ExpressionStatement', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )'], [101058, None, u'Identifier', u'reject_from_alignment'], [101057, u'True', u'Condition', u'reject_from_alignment'], [101229, u'True', u'CFGEntryNode', u'ENTRY']]","[[101044, None, u'CallExpression', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )'], [101055, None, u'Callee', u'printf'], [101045, None, u'ArgumentList', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [101056, None, u'Identifier', u'printf'], [101053, None, u'Argument', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [101046, None, u'Argument', u'strerror ( errno )'], [101054, None, u'PrimaryExpression', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [101047, None, u'CallExpression', u'strerror ( errno )'], [101051, None, u'Callee', u'strerror'], [101048, None, u'ArgumentList', u'errno'], [101052, None, u'Identifier', u'strerror'], [101049, None, u'Argument', u'errno'], [101050, None, u'Identifier', u'errno'], [101043, u'True', u'ExpressionStatement', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )']]"
"Merge branch 'bpf-map_value_adj-reg-types-fixes'

Daniel Borkmann says:

====================
BPF fixes on map_value_adj reg types

This set adds two fixes for map_value_adj register type in the
verifier and user space tests along with them for the BPF self
test suite. For details, please see individual patches.
====================

Signed-off-by: David S. Miller <davem@davemloft.net>",tools/testing/selftests/bpf/test_verifier.c,-,"[[102412, u'True', u'ExpressionStatement', u'printf ( ""OK\\n"" )']]","[[102413, None, u'CallExpression', u'printf ( ""OK\\n"" )'], [102417, None, u'Callee', u'printf'], [102414, None, u'ArgumentList', u'""OK\\n""'], [102418, None, u'Identifier', u'printf'], [102415, None, u'Argument', u'""OK\\n""'], [102416, None, u'PrimaryExpression', u'""OK\\n""'], [102412, u'True', u'ExpressionStatement', u'printf ( ""OK\\n"" )'], [102440, None, u'UnaryOp', u'! strstr ( bpf_vlog , expected_err )'], [102449, None, u'UnaryOperator', u'!'], [102441, None, u'CallExpression', u'strstr ( bpf_vlog , expected_err )'], [102447, None, u'Callee', u'strstr'], [102442, None, u'ArgumentList', u'bpf_vlog'], [102448, None, u'Identifier', u'strstr'], [102445, None, u'Argument', u'bpf_vlog'], [102443, None, u'Argument', u'expected_err'], [102446, None, u'Identifier', u'bpf_vlog'], [102444, None, u'Identifier', u'expected_err'], [102439, u'True', u'Condition', u'! strstr ( bpf_vlog , expected_err )'], [102485, None, u'RelationalExpression', u'fd_prog < 0'], [102487, None, u'Identifier', u'fd_prog'], [102486, None, u'PrimaryExpression', u'0'], [102484, u'True', u'Condition', u'fd_prog < 0'], [102462, None, u'RelationalExpression', u'fd_prog >= 0'], [102464, None, u'Identifier', u'fd_prog'], [102463, None, u'PrimaryExpression', u'0'], [102461, u'True', u'Condition', u'fd_prog >= 0'], [102489, None, u'EqualityExpression', u'expected_ret == ACCEPT'], [102491, None, u'Identifier', u'expected_ret'], [102490, None, u'Identifier', u'ACCEPT'], [102488, u'True', u'Condition', u'expected_ret == ACCEPT'], [102638, u'True', u'CFGEntryNode', u'ENTRY']]","[[102413, None, u'CallExpression', u'printf ( ""OK\\n"" )'], [102417, None, u'Callee', u'printf'], [102414, None, u'ArgumentList', u'""OK\\n""'], [102418, None, u'Identifier', u'printf'], [102415, None, u'Argument', u'""OK\\n""'], [102416, None, u'PrimaryExpression', u'""OK\\n""'], [102412, u'True', u'ExpressionStatement', u'printf ( ""OK\\n"" )']]"
"Merge branch 'bpf-map_value_adj-reg-types-fixes'

Daniel Borkmann says:

====================
BPF fixes on map_value_adj reg types

This set adds two fixes for map_value_adj register type in the
verifier and user space tests along with them for the BPF self
test suite. For details, please see individual patches.
====================

Signed-off-by: David S. Miller <davem@davemloft.net>",tools/testing/selftests/bpf/test_verifier.c,+,"[[100945, u'True', u'ExpressionStatement', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )']]","[[100946, None, u'CallExpression', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [100956, None, u'Callee', u'printf'], [100947, None, u'ArgumentList', u'""OK%s\\n""'], [100957, None, u'Identifier', u'printf'], [100954, None, u'Argument', u'""OK%s\\n""'], [100948, None, u'Argument', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [100955, None, u'PrimaryExpression', u'""OK%s\\n""'], [100949, None, u'ConditionalExpression', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [100952, None, u'Condition', u'reject_from_alignment'], [100951, None, u'PrimaryExpression', u'"" (NOTE: reject due to unknown alignment)""'], [100950, None, u'PrimaryExpression', u'""""'], [100953, None, u'Identifier', u'reject_from_alignment'], [100945, u'True', u'ExpressionStatement', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [101028, None, u'AndExpression', u'fd_prog < 0 && ! reject_from_alignment'], [101032, None, u'RelationalExpression', u'fd_prog < 0'], [101029, None, u'UnaryOp', u'! reject_from_alignment'], [101034, None, u'Identifier', u'fd_prog'], [101033, None, u'PrimaryExpression', u'0'], [101031, None, u'UnaryOperator', u'!'], [101030, None, u'Identifier', u'reject_from_alignment'], [101027, u'True', u'Condition', u'fd_prog < 0 && ! reject_from_alignment'], [100979, None, u'AndExpression', u'! strstr ( bpf_vlog , expected_err ) && ! reject_from_alignment'], [100983, None, u'UnaryOp', u'! strstr ( bpf_vlog , expected_err )'], [100980, None, u'UnaryOp', u'! reject_from_alignment'], [100992, None, u'UnaryOperator', u'!'], [100984, None, u'CallExpression', u'strstr ( bpf_vlog , expected_err )'], [100982, None, u'UnaryOperator', u'!'], [100981, None, u'Identifier', u'reject_from_alignment'], [100990, None, u'Callee', u'strstr'], [100985, None, u'ArgumentList', u'bpf_vlog'], [100991, None, u'Identifier', u'strstr'], [100988, None, u'Argument', u'bpf_vlog'], [100986, None, u'Argument', u'expected_err'], [100989, None, u'Identifier', u'bpf_vlog'], [100987, None, u'Identifier', u'expected_err'], [100978, u'True', u'Condition', u'! strstr ( bpf_vlog , expected_err ) && ! reject_from_alignment'], [101036, None, u'EqualityExpression', u'expected_ret == ACCEPT'], [101038, None, u'Identifier', u'expected_ret'], [101037, None, u'Identifier', u'ACCEPT'], [101035, u'True', u'Condition', u'expected_ret == ACCEPT'], [101005, None, u'RelationalExpression', u'fd_prog >= 0'], [101007, None, u'Identifier', u'fd_prog'], [101006, None, u'PrimaryExpression', u'0'], [101004, u'True', u'Condition', u'fd_prog >= 0'], [101058, None, u'Identifier', u'reject_from_alignment'], [101057, u'True', u'Condition', u'reject_from_alignment'], [101229, u'True', u'CFGEntryNode', u'ENTRY']]","[[100946, None, u'CallExpression', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [100956, None, u'Callee', u'printf'], [100947, None, u'ArgumentList', u'""OK%s\\n""'], [100957, None, u'Identifier', u'printf'], [100954, None, u'Argument', u'""OK%s\\n""'], [100948, None, u'Argument', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [100955, None, u'PrimaryExpression', u'""OK%s\\n""'], [100949, None, u'ConditionalExpression', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [100952, None, u'Condition', u'reject_from_alignment'], [100951, None, u'PrimaryExpression', u'"" (NOTE: reject due to unknown alignment)""'], [100950, None, u'PrimaryExpression', u'""""'], [100953, None, u'Identifier', u'reject_from_alignment'], [100945, u'True', u'ExpressionStatement', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [101060, None, u'AssignmentExpr', u'reject_from_alignment = fd_prog < 0 && ( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [101079, None, u'Identifier', u'reject_from_alignment'], [101061, None, u'AndExpression', u'fd_prog < 0 && ( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [101076, None, u'RelationalExpression', u'fd_prog < 0'], [101062, None, u'AndExpression', u'( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [101078, None, u'Identifier', u'fd_prog'], [101077, None, u'PrimaryExpression', u'0'], [101071, None, u'BitAndExpression', u'test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS'], [101063, None, u'CallExpression', u'strstr ( bpf_vlog , ""Unknown alignment."" )'], [101073, None, u'PtrMemberAccess', u'test -> flags'], [101072, None, u'Identifier', u'F_NEEDS_EFFICIENT_UNALIGNED_ACCESS'], [101069, None, u'Callee', u'strstr'], [101064, None, u'ArgumentList', u'bpf_vlog'], [101075, None, u'Identifier', u'test'], [101074, None, u'Identifier', u'flags'], [101070, None, u'Identifier', u'strstr'], [101067, None, u'Argument', u'bpf_vlog'], [101065, None, u'Argument', u'""Unknown alignment.""'], [101068, None, u'Identifier', u'bpf_vlog'], [101066, None, u'PrimaryExpression', u'""Unknown alignment.""'], [101059, u'True', u'ExpressionStatement', u'reject_from_alignment = fd_prog < 0 && ( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [101226, None, u'IdentifierDecl', u'fd_prog'], [101223, None, u'IdentifierDecl', u'expected_ret'], [101220, None, u'IdentifierDecl', u'reject_from_alignment'], [101228, None, u'IdentifierDeclType', u'int'], [101227, None, u'Identifier', u'fd_prog'], [101225, None, u'IdentifierDeclType', u'int'], [101224, None, u'Identifier', u'expected_ret'], [101222, None, u'IdentifierDeclType', u'int'], [101221, None, u'Identifier', u'reject_from_alignment'], [101219, u'True', u'IdentifierDeclStatement', u'int fd_prog , expected_ret , reject_from_alignment ;'], [100887, None, u'ParameterType', u'struct bpf_test *'], [100886, None, u'Identifier', u'test'], [100885, u'True', u'Parameter', u'struct bpf_test * test']]"
"bpf: add various verifier test cases for self-tests

Add a couple of test cases, for example, probing for xadd on a spilled
pointer to packet and map_value_adj register, various other map_value_adj
tests including the unaligned load/store, and trying out pointer arithmetic
on map_value_adj register itself. For the unaligned load/store, we need
to figure out whether the architecture has efficient unaligned access and
need to mark affected tests accordingly.

Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: David S. Miller <davem@davemloft.net>",tools/testing/selftests/bpf/test_verifier.c,+,"[[103918, u'True', u'ExpressionStatement', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )']]","[[103919, None, u'CallExpression', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )'], [103930, None, u'Callee', u'printf'], [103920, None, u'ArgumentList', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [103931, None, u'Identifier', u'printf'], [103928, None, u'Argument', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [103921, None, u'Argument', u'strerror ( errno )'], [103929, None, u'PrimaryExpression', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [103922, None, u'CallExpression', u'strerror ( errno )'], [103926, None, u'Callee', u'strerror'], [103923, None, u'ArgumentList', u'errno'], [103927, None, u'Identifier', u'strerror'], [103924, None, u'Argument', u'errno'], [103925, None, u'Identifier', u'errno'], [103918, u'True', u'ExpressionStatement', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )'], [103933, None, u'Identifier', u'reject_from_alignment'], [103932, u'True', u'Condition', u'reject_from_alignment'], [104104, u'True', u'CFGEntryNode', u'ENTRY']]","[[103919, None, u'CallExpression', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )'], [103930, None, u'Callee', u'printf'], [103920, None, u'ArgumentList', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [103931, None, u'Identifier', u'printf'], [103928, None, u'Argument', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [103921, None, u'Argument', u'strerror ( errno )'], [103929, None, u'PrimaryExpression', u'""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n""'], [103922, None, u'CallExpression', u'strerror ( errno )'], [103926, None, u'Callee', u'strerror'], [103923, None, u'ArgumentList', u'errno'], [103927, None, u'Identifier', u'strerror'], [103924, None, u'Argument', u'errno'], [103925, None, u'Identifier', u'errno'], [103918, u'True', u'ExpressionStatement', u'printf ( ""FAIL\\nFailed due to alignment despite having efficient unaligned access: \'%s\'!\\n"" , strerror ( errno ) )']]"
"bpf: add various verifier test cases for self-tests

Add a couple of test cases, for example, probing for xadd on a spilled
pointer to packet and map_value_adj register, various other map_value_adj
tests including the unaligned load/store, and trying out pointer arithmetic
on map_value_adj register itself. For the unaligned load/store, we need
to figure out whether the architecture has efficient unaligned access and
need to mark affected tests accordingly.

Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: David S. Miller <davem@davemloft.net>",tools/testing/selftests/bpf/test_verifier.c,-,"[[105287, u'True', u'ExpressionStatement', u'printf ( ""OK\\n"" )']]","[[105288, None, u'CallExpression', u'printf ( ""OK\\n"" )'], [105292, None, u'Callee', u'printf'], [105289, None, u'ArgumentList', u'""OK\\n""'], [105293, None, u'Identifier', u'printf'], [105290, None, u'Argument', u'""OK\\n""'], [105291, None, u'PrimaryExpression', u'""OK\\n""'], [105287, u'True', u'ExpressionStatement', u'printf ( ""OK\\n"" )'], [105315, None, u'UnaryOp', u'! strstr ( bpf_vlog , expected_err )'], [105324, None, u'UnaryOperator', u'!'], [105316, None, u'CallExpression', u'strstr ( bpf_vlog , expected_err )'], [105322, None, u'Callee', u'strstr'], [105317, None, u'ArgumentList', u'bpf_vlog'], [105323, None, u'Identifier', u'strstr'], [105320, None, u'Argument', u'bpf_vlog'], [105318, None, u'Argument', u'expected_err'], [105321, None, u'Identifier', u'bpf_vlog'], [105319, None, u'Identifier', u'expected_err'], [105314, u'True', u'Condition', u'! strstr ( bpf_vlog , expected_err )'], [105360, None, u'RelationalExpression', u'fd_prog < 0'], [105362, None, u'Identifier', u'fd_prog'], [105361, None, u'PrimaryExpression', u'0'], [105359, u'True', u'Condition', u'fd_prog < 0'], [105337, None, u'RelationalExpression', u'fd_prog >= 0'], [105339, None, u'Identifier', u'fd_prog'], [105338, None, u'PrimaryExpression', u'0'], [105336, u'True', u'Condition', u'fd_prog >= 0'], [105364, None, u'EqualityExpression', u'expected_ret == ACCEPT'], [105366, None, u'Identifier', u'expected_ret'], [105365, None, u'Identifier', u'ACCEPT'], [105363, u'True', u'Condition', u'expected_ret == ACCEPT'], [105513, u'True', u'CFGEntryNode', u'ENTRY']]","[[105288, None, u'CallExpression', u'printf ( ""OK\\n"" )'], [105292, None, u'Callee', u'printf'], [105289, None, u'ArgumentList', u'""OK\\n""'], [105293, None, u'Identifier', u'printf'], [105290, None, u'Argument', u'""OK\\n""'], [105291, None, u'PrimaryExpression', u'""OK\\n""'], [105287, u'True', u'ExpressionStatement', u'printf ( ""OK\\n"" )']]"
"bpf: add various verifier test cases for self-tests

Add a couple of test cases, for example, probing for xadd on a spilled
pointer to packet and map_value_adj register, various other map_value_adj
tests including the unaligned load/store, and trying out pointer arithmetic
on map_value_adj register itself. For the unaligned load/store, we need
to figure out whether the architecture has efficient unaligned access and
need to mark affected tests accordingly.

Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: David S. Miller <davem@davemloft.net>",tools/testing/selftests/bpf/test_verifier.c,+,"[[103820, u'True', u'ExpressionStatement', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )']]","[[103821, None, u'CallExpression', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [103831, None, u'Callee', u'printf'], [103822, None, u'ArgumentList', u'""OK%s\\n""'], [103832, None, u'Identifier', u'printf'], [103829, None, u'Argument', u'""OK%s\\n""'], [103823, None, u'Argument', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [103830, None, u'PrimaryExpression', u'""OK%s\\n""'], [103824, None, u'ConditionalExpression', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [103827, None, u'Condition', u'reject_from_alignment'], [103826, None, u'PrimaryExpression', u'"" (NOTE: reject due to unknown alignment)""'], [103825, None, u'PrimaryExpression', u'""""'], [103828, None, u'Identifier', u'reject_from_alignment'], [103820, u'True', u'ExpressionStatement', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [103903, None, u'AndExpression', u'fd_prog < 0 && ! reject_from_alignment'], [103907, None, u'RelationalExpression', u'fd_prog < 0'], [103904, None, u'UnaryOp', u'! reject_from_alignment'], [103909, None, u'Identifier', u'fd_prog'], [103908, None, u'PrimaryExpression', u'0'], [103906, None, u'UnaryOperator', u'!'], [103905, None, u'Identifier', u'reject_from_alignment'], [103902, u'True', u'Condition', u'fd_prog < 0 && ! reject_from_alignment'], [103854, None, u'AndExpression', u'! strstr ( bpf_vlog , expected_err ) && ! reject_from_alignment'], [103858, None, u'UnaryOp', u'! strstr ( bpf_vlog , expected_err )'], [103855, None, u'UnaryOp', u'! reject_from_alignment'], [103867, None, u'UnaryOperator', u'!'], [103859, None, u'CallExpression', u'strstr ( bpf_vlog , expected_err )'], [103857, None, u'UnaryOperator', u'!'], [103856, None, u'Identifier', u'reject_from_alignment'], [103865, None, u'Callee', u'strstr'], [103860, None, u'ArgumentList', u'bpf_vlog'], [103866, None, u'Identifier', u'strstr'], [103863, None, u'Argument', u'bpf_vlog'], [103861, None, u'Argument', u'expected_err'], [103864, None, u'Identifier', u'bpf_vlog'], [103862, None, u'Identifier', u'expected_err'], [103853, u'True', u'Condition', u'! strstr ( bpf_vlog , expected_err ) && ! reject_from_alignment'], [103911, None, u'EqualityExpression', u'expected_ret == ACCEPT'], [103913, None, u'Identifier', u'expected_ret'], [103912, None, u'Identifier', u'ACCEPT'], [103910, u'True', u'Condition', u'expected_ret == ACCEPT'], [103880, None, u'RelationalExpression', u'fd_prog >= 0'], [103882, None, u'Identifier', u'fd_prog'], [103881, None, u'PrimaryExpression', u'0'], [103879, u'True', u'Condition', u'fd_prog >= 0'], [103933, None, u'Identifier', u'reject_from_alignment'], [103932, u'True', u'Condition', u'reject_from_alignment'], [104104, u'True', u'CFGEntryNode', u'ENTRY']]","[[103821, None, u'CallExpression', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [103831, None, u'Callee', u'printf'], [103822, None, u'ArgumentList', u'""OK%s\\n""'], [103832, None, u'Identifier', u'printf'], [103829, None, u'Argument', u'""OK%s\\n""'], [103823, None, u'Argument', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [103830, None, u'PrimaryExpression', u'""OK%s\\n""'], [103824, None, u'ConditionalExpression', u'reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """"'], [103827, None, u'Condition', u'reject_from_alignment'], [103826, None, u'PrimaryExpression', u'"" (NOTE: reject due to unknown alignment)""'], [103825, None, u'PrimaryExpression', u'""""'], [103828, None, u'Identifier', u'reject_from_alignment'], [103820, u'True', u'ExpressionStatement', u'printf ( ""OK%s\\n"" , reject_from_alignment ? "" (NOTE: reject due to unknown alignment)"" : """" )'], [103935, None, u'AssignmentExpr', u'reject_from_alignment = fd_prog < 0 && ( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [103954, None, u'Identifier', u'reject_from_alignment'], [103936, None, u'AndExpression', u'fd_prog < 0 && ( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [103951, None, u'RelationalExpression', u'fd_prog < 0'], [103937, None, u'AndExpression', u'( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [103953, None, u'Identifier', u'fd_prog'], [103952, None, u'PrimaryExpression', u'0'], [103946, None, u'BitAndExpression', u'test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS'], [103938, None, u'CallExpression', u'strstr ( bpf_vlog , ""Unknown alignment."" )'], [103948, None, u'PtrMemberAccess', u'test -> flags'], [103947, None, u'Identifier', u'F_NEEDS_EFFICIENT_UNALIGNED_ACCESS'], [103944, None, u'Callee', u'strstr'], [103939, None, u'ArgumentList', u'bpf_vlog'], [103950, None, u'Identifier', u'test'], [103949, None, u'Identifier', u'flags'], [103945, None, u'Identifier', u'strstr'], [103942, None, u'Argument', u'bpf_vlog'], [103940, None, u'Argument', u'""Unknown alignment.""'], [103943, None, u'Identifier', u'bpf_vlog'], [103941, None, u'PrimaryExpression', u'""Unknown alignment.""'], [103934, u'True', u'ExpressionStatement', u'reject_from_alignment = fd_prog < 0 && ( test -> flags & F_NEEDS_EFFICIENT_UNALIGNED_ACCESS ) && strstr ( bpf_vlog , ""Unknown alignment."" )'], [104101, None, u'IdentifierDecl', u'fd_prog'], [104098, None, u'IdentifierDecl', u'expected_ret'], [104095, None, u'IdentifierDecl', u'reject_from_alignment'], [104103, None, u'IdentifierDeclType', u'int'], [104102, None, u'Identifier', u'fd_prog'], [104100, None, u'IdentifierDeclType', u'int'], [104099, None, u'Identifier', u'expected_ret'], [104097, None, u'IdentifierDeclType', u'int'], [104096, None, u'Identifier', u'reject_from_alignment'], [104094, u'True', u'IdentifierDeclStatement', u'int fd_prog , expected_ret , reject_from_alignment ;'], [103762, None, u'ParameterType', u'struct bpf_test *'], [103761, None, u'Identifier', u'test'], [103760, u'True', u'Parameter', u'struct bpf_test * test']]"
"Merge tag 'tty-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty

Pull tty/serial fixes from Greg KH:
 ""Here are some small fixes for some serial drivers and Kconfig help
  text for 4.11-rc5. Nothing major here at all, a few things resolving
  reported bugs in some random serial drivers.

  I don't think these made the last linux-next due to me getting to them
  yesterday, but I am not sure, they might have snuck in. The patches
  only affect drivers that the maintainers of sent me these patches for,
  so we should be safe here :)""

* tag 'tty-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty:
  tty: pl011: fix earlycon work-around for QDF2400 erratum 44
  serial: 8250_EXAR: fix duplicate Kconfig text and add missing help text
  tty/serial: atmel: fix TX path in atmel_console_write()
  tty/serial: atmel: fix race condition (TX+DMA)
  serial: mxs-auart: Fix baudrate calculation",drivers/tty/serial/atmel_serial.c,+,"[[144012, u'True', u'ExpressionStatement', u'atmel_uart_writel ( port , ATMEL_US_CR , ATMEL_US_TXEN )']]","[[144013, None, u'CallExpression', u'atmel_uart_writel ( port , ATMEL_US_CR , ATMEL_US_TXEN )'], [144021, None, u'Callee', u'atmel_uart_writel'], [144014, None, u'ArgumentList', u'port'], [144022, None, u'Identifier', u'atmel_uart_writel'], [144019, None, u'Argument', u'port'], [144017, None, u'Argument', u'ATMEL_US_CR'], [144015, None, u'Argument', u'ATMEL_US_TXEN'], [144020, None, u'Identifier', u'port'], [144018, None, u'Identifier', u'ATMEL_US_CR'], [144016, None, u'Identifier', u'ATMEL_US_TXEN'], [144012, u'True', u'ExpressionStatement', u'atmel_uart_writel ( port , ATMEL_US_CR , ATMEL_US_TXEN )'], [144111, u'True', u'CFGEntryNode', u'ENTRY']]","[[144013, None, u'CallExpression', u'atmel_uart_writel ( port , ATMEL_US_CR , ATMEL_US_TXEN )'], [144021, None, u'Callee', u'atmel_uart_writel'], [144014, None, u'ArgumentList', u'port'], [144022, None, u'Identifier', u'atmel_uart_writel'], [144019, None, u'Argument', u'port'], [144017, None, u'Argument', u'ATMEL_US_CR'], [144015, None, u'Argument', u'ATMEL_US_TXEN'], [144020, None, u'Identifier', u'port'], [144018, None, u'Identifier', u'ATMEL_US_CR'], [144016, None, u'Identifier', u'ATMEL_US_TXEN'], [144012, u'True', u'ExpressionStatement', u'atmel_uart_writel ( port , ATMEL_US_CR , ATMEL_US_TXEN )'], [144097, None, u'IdentifierDecl', u'* port = & atmel_ports [ co -> index ] . uart'], [144110, None, u'IdentifierDeclType', u'struct uart_port *'], [144109, None, u'Identifier', u'port'], [144098, None, u'AssignmentExpr', u'* port = & atmel_ports [ co -> index ] . uart'], [144108, None, u'Identifier', u'port'], [144099, None, u'UnaryOp', u'& atmel_ports [ co -> index ] . uart'], [144107, None, u'UnaryOperator', u'&'], [144100, None, u'MemberAccess', u'atmel_ports [ co -> index ] . uart'], [144102, None, u'ArrayIndexing', u'atmel_ports [ co -> index ]'], [144101, None, u'Identifier', u'uart'], [144106, None, u'Identifier', u'atmel_ports'], [144103, None, u'PtrMemberAccess', u'co -> index'], [144105, None, u'Identifier', u'co'], [144104, None, u'Identifier', u'index'], [144096, u'True', u'IdentifierDeclStatement', u'struct uart_port * port = & atmel_ports [ co -> index ] . uart ;'], [143952, None, u'ParameterType', u'struct console *'], [143951, None, u'Identifier', u'co'], [143950, u'True', u'Parameter', u'struct console * co']]"
"Merge tag 'pm-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm

Pull power management fixes from Rafael Wysocki:
 ""These fix a cpufreq core issue with the initialization of the cpufreq
  sysfs interface and a cpuidle powernv driver initialization issue.

  Specifics:

   - symbolic links from CPU directories to the corresponding cpufreq
     policy directories in sysfs are not created during initialization
     in some cases which confuses user space, so prevent that from
     happening (Rafael Wysocki).

   - the powernv cpuidle driver fails to pass a correct cpumaks to the
     cpuidle core in some cases which causes subsequent failures to
     occur, so fix it (Vaidyanathan Srinivasan)""

* tag 'pm-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:
  cpuidle: powernv: Pass correct drv->cpumask for registration
  cpufreq: Fix creation of symbolic links to policy directories",drivers/cpufreq/cpufreq.c,-,"[[175144, u'True', u'ExpressionStatement', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )']]","[[175145, None, u'CallExpression', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [175153, None, u'Callee', u'write_lock_irqsave'], [175146, None, u'ArgumentList', u'& cpufreq_driver_lock'], [175154, None, u'Identifier', u'write_lock_irqsave'], [175149, None, u'Argument', u'& cpufreq_driver_lock'], [175147, None, u'Argument', u'flags'], [175150, None, u'UnaryOp', u'& cpufreq_driver_lock'], [175148, None, u'Identifier', u'flags'], [175152, None, u'UnaryOperator', u'&'], [175151, None, u'Identifier', u'cpufreq_driver_lock'], [175144, u'True', u'ExpressionStatement', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [175176, None, u'Identifier', u'new_policy'], [175175, u'True', u'Condition', u'new_policy'], [175232, None, u'Identifier', u'ret'], [175231, u'True', u'Condition', u'ret'], [175269, None, u'UnaryOp', u'! policy'], [175271, None, u'UnaryOperator', u'!'], [175270, None, u'Identifier', u'policy'], [175268, u'True', u'Condition', u'! policy'], [175335, None, u'UnaryOp', u'! policy_is_inactive ( policy )'], [175342, None, u'UnaryOperator', u'!'], [175336, None, u'CallExpression', u'policy_is_inactive ( policy )'], [175340, None, u'Callee', u'policy_is_inactive'], [175337, None, u'ArgumentList', u'policy'], [175341, None, u'Identifier', u'policy_is_inactive'], [175338, None, u'Argument', u'policy'], [175339, None, u'Identifier', u'policy'], [175334, u'True', u'Condition', u'! policy_is_inactive ( policy )'], [175362, None, u'Identifier', u'policy'], [175361, u'True', u'Condition', u'policy'], [175405, u'True', u'CFGEntryNode', u'ENTRY']]","[[175145, None, u'CallExpression', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [175153, None, u'Callee', u'write_lock_irqsave'], [175146, None, u'ArgumentList', u'& cpufreq_driver_lock'], [175154, None, u'Identifier', u'write_lock_irqsave'], [175149, None, u'Argument', u'& cpufreq_driver_lock'], [175147, None, u'Argument', u'flags'], [175150, None, u'UnaryOp', u'& cpufreq_driver_lock'], [175148, None, u'Identifier', u'flags'], [175152, None, u'UnaryOperator', u'&'], [175151, None, u'Identifier', u'cpufreq_driver_lock'], [175144, u'True', u'ExpressionStatement', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [175394, None, u'IdentifierDecl', u'flags'], [175396, None, u'IdentifierDeclType', u'unsigned long'], [175395, None, u'Identifier', u'flags'], [175393, u'True', u'IdentifierDeclStatement', u'unsigned long flags ;']]"
"Merge tag 'pm-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm

Pull power management fixes from Rafael Wysocki:
 ""These fix a cpufreq core issue with the initialization of the cpufreq
  sysfs interface and a cpuidle powernv driver initialization issue.

  Specifics:

   - symbolic links from CPU directories to the corresponding cpufreq
     policy directories in sysfs are not created during initialization
     in some cases which confuses user space, so prevent that from
     happening (Rafael Wysocki).

   - the powernv cpuidle driver fails to pass a correct cpumaks to the
     cpuidle core in some cases which causes subsequent failures to
     occur, so fix it (Vaidyanathan Srinivasan)""

* tag 'pm-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm:
  cpuidle: powernv: Pass correct drv->cpumask for registration
  cpufreq: Fix creation of symbolic links to policy directories",drivers/cpufreq/cpufreq.c,-,"[[175114, u'True', u'ExpressionStatement', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )']]","[[175115, None, u'CallExpression', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [175123, None, u'Callee', u'write_unlock_irqrestore'], [175116, None, u'ArgumentList', u'& cpufreq_driver_lock'], [175124, None, u'Identifier', u'write_unlock_irqrestore'], [175119, None, u'Argument', u'& cpufreq_driver_lock'], [175117, None, u'Argument', u'flags'], [175120, None, u'UnaryOp', u'& cpufreq_driver_lock'], [175118, None, u'Identifier', u'flags'], [175122, None, u'UnaryOperator', u'&'], [175121, None, u'Identifier', u'cpufreq_driver_lock'], [175114, u'True', u'ExpressionStatement', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [175176, None, u'Identifier', u'new_policy'], [175175, u'True', u'Condition', u'new_policy'], [175232, None, u'Identifier', u'ret'], [175231, u'True', u'Condition', u'ret'], [175269, None, u'UnaryOp', u'! policy'], [175271, None, u'UnaryOperator', u'!'], [175270, None, u'Identifier', u'policy'], [175268, u'True', u'Condition', u'! policy'], [175335, None, u'UnaryOp', u'! policy_is_inactive ( policy )'], [175342, None, u'UnaryOperator', u'!'], [175336, None, u'CallExpression', u'policy_is_inactive ( policy )'], [175340, None, u'Callee', u'policy_is_inactive'], [175337, None, u'ArgumentList', u'policy'], [175341, None, u'Identifier', u'policy_is_inactive'], [175338, None, u'Argument', u'policy'], [175339, None, u'Identifier', u'policy'], [175334, u'True', u'Condition', u'! policy_is_inactive ( policy )'], [175362, None, u'Identifier', u'policy'], [175361, u'True', u'Condition', u'policy'], [175405, u'True', u'CFGEntryNode', u'ENTRY']]","[[175115, None, u'CallExpression', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [175123, None, u'Callee', u'write_unlock_irqrestore'], [175116, None, u'ArgumentList', u'& cpufreq_driver_lock'], [175124, None, u'Identifier', u'write_unlock_irqrestore'], [175119, None, u'Argument', u'& cpufreq_driver_lock'], [175117, None, u'Argument', u'flags'], [175120, None, u'UnaryOp', u'& cpufreq_driver_lock'], [175118, None, u'Identifier', u'flags'], [175122, None, u'UnaryOperator', u'&'], [175121, None, u'Identifier', u'cpufreq_driver_lock'], [175114, u'True', u'ExpressionStatement', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [175394, None, u'IdentifierDecl', u'flags'], [175396, None, u'IdentifierDeclType', u'unsigned long'], [175395, None, u'Identifier', u'flags'], [175393, u'True', u'IdentifierDeclStatement', u'unsigned long flags ;']]"
"Merge tag 'arc-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc

Pull ARC fixes from Vineet Gupta:
 ""Accumulated fixes for ARC which I've been been sitting on for a while:

   - reading clk from driver vs device tree [Vlad]

   - fix support for UIO in VDK platform [Alexey]

   - SLC busy bit reading workaround

   - build warning with kprobes header reorg""

* tag 'arc-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc:
  ARC: fix build warnings with !CONFIG_KPROBES
  ARCv2: SLC: Make sure busy bit is set properly on SLC flushing
  ARC: vdk: Fix support of UIO
  ARCv2: make unimplemented vectors as no-ops rather than halt core
  ARC: get rate from clk driver instead of reading device tree
  ARC: [dts] add cpu nodes to ARCHS SMP device tree
  ARC: [dts] add input clocks for cpu nodes",arch/arc/kernel/setup.c,+,"[[185913, u'True', u'ExpressionStatement', u'seq_printf ( m , ""CPU speed \\t: Cannot get clock for processor [%d]\\n"" , cpu_id )']]","[[185914, None, u'CallExpression', u'seq_printf ( m , ""CPU speed \\t: Cannot get clock for processor [%d]\\n"" , cpu_id )'], [185922, None, u'Callee', u'seq_printf'], [185915, None, u'ArgumentList', u'm'], [185923, None, u'Identifier', u'seq_printf'], [185920, None, u'Argument', u'm'], [185918, None, u'Argument', u'""CPU speed \\t: Cannot get clock for processor [%d]\\n""'], [185916, None, u'Argument', u'cpu_id'], [185921, None, u'Identifier', u'm'], [185919, None, u'PrimaryExpression', u'""CPU speed \\t: Cannot get clock for processor [%d]\\n""'], [185917, None, u'Identifier', u'cpu_id'], [185913, u'True', u'ExpressionStatement', u'seq_printf ( m , ""CPU speed \\t: Cannot get clock for processor [%d]\\n"" , cpu_id )'], [185925, None, u'CallExpression', u'IS_ERR ( cpu_clk )'], [185929, None, u'Callee', u'IS_ERR'], [185926, None, u'ArgumentList', u'cpu_clk'], [185930, None, u'Identifier', u'IS_ERR'], [185927, None, u'Argument', u'cpu_clk'], [185928, None, u'Identifier', u'cpu_clk'], [185924, u'True', u'Condition', u'IS_ERR ( cpu_clk )'], [185964, None, u'UnaryOp', u'! str'], [185966, None, u'UnaryOperator', u'!'], [185965, None, u'Identifier', u'str'], [185963, u'True', u'Condition', u'! str'], [185994, None, u'UnaryOp', u'! cpu_online ( cpu_id )'], [186001, None, u'UnaryOperator', u'!'], [185995, None, u'CallExpression', u'cpu_online ( cpu_id )'], [185999, None, u'Callee', u'cpu_online'], [185996, None, u'ArgumentList', u'cpu_id'], [186000, None, u'Identifier', u'cpu_online'], [185997, None, u'Argument', u'cpu_id'], [185998, None, u'Identifier', u'cpu_id'], [185993, u'True', u'Condition', u'! cpu_online ( cpu_id )'], [186041, u'True', u'CFGEntryNode', u'ENTRY']]","[[185914, None, u'CallExpression', u'seq_printf ( m , ""CPU speed \\t: Cannot get clock for processor [%d]\\n"" , cpu_id )'], [185922, None, u'Callee', u'seq_printf'], [185915, None, u'ArgumentList', u'm'], [185923, None, u'Identifier', u'seq_printf'], [185920, None, u'Argument', u'm'], [185918, None, u'Argument', u'""CPU speed \\t: Cannot get clock for processor [%d]\\n""'], [185916, None, u'Argument', u'cpu_id'], [185921, None, u'Identifier', u'm'], [185919, None, u'PrimaryExpression', u'""CPU speed \\t: Cannot get clock for processor [%d]\\n""'], [185917, None, u'Identifier', u'cpu_id'], [185913, u'True', u'ExpressionStatement', u'seq_printf ( m , ""CPU speed \\t: Cannot get clock for processor [%d]\\n"" , cpu_id )'], [185764, None, u'ParameterType', u'struct seq_file *'], [185763, None, u'Identifier', u'm'], [185762, u'True', u'Parameter', u'struct seq_file * m'], [186026, None, u'IdentifierDecl', u'cpu_id = ptr_to_cpu ( v )'], [186036, None, u'IdentifierDeclType', u'int'], [186035, None, u'Identifier', u'cpu_id'], [186027, None, u'AssignmentExpr', u'cpu_id = ptr_to_cpu ( v )'], [186034, None, u'Identifier', u'cpu_id'], [186028, None, u'CallExpression', u'ptr_to_cpu ( v )'], [186032, None, u'Callee', u'ptr_to_cpu'], [186029, None, u'ArgumentList', u'v'], [186033, None, u'Identifier', u'ptr_to_cpu'], [186030, None, u'Argument', u'v'], [186031, None, u'Identifier', u'v'], [186025, u'True', u'IdentifierDeclStatement', u'int cpu_id = ptr_to_cpu ( v ) ;'], [185761, None, u'ParameterType', u'void *'], [185760, None, u'Identifier', u'v'], [185759, u'True', u'Parameter', u'void * v']]"
"Merge tag 'arc-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc

Pull ARC fixes from Vineet Gupta:
 ""Accumulated fixes for ARC which I've been been sitting on for a while:

   - reading clk from driver vs device tree [Vlad]

   - fix support for UIO in VDK platform [Alexey]

   - SLC busy bit reading workaround

   - build warning with kprobes header reorg""

* tag 'arc-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc:
  ARC: fix build warnings with !CONFIG_KPROBES
  ARCv2: SLC: Make sure busy bit is set properly on SLC flushing
  ARC: vdk: Fix support of UIO
  ARCv2: make unimplemented vectors as no-ops rather than halt core
  ARC: get rate from clk driver instead of reading device tree
  ARC: [dts] add cpu nodes to ARCHS SMP device tree
  ARC: [dts] add input clocks for cpu nodes",arch/arc/kernel/setup.c,-,"[[188913, u'True', u'ExpressionStatement', u'seq_printf ( m , ""CPU speed\\t: %u.%02u Mhz\\n"" , freq / 1000000 , ( freq / 10000 ) % 100 )']]","[[188914, None, u'CallExpression', u'seq_printf ( m , ""CPU speed\\t: %u.%02u Mhz\\n"" , freq / 1000000 , ( freq / 10000 ) % 100 )'], [188930, None, u'Callee', u'seq_printf'], [188915, None, u'ArgumentList', u'm'], [188931, None, u'Identifier', u'seq_printf'], [188928, None, u'Argument', u'm'], [188926, None, u'Argument', u'""CPU speed\\t: %u.%02u Mhz\\n""'], [188922, None, u'Argument', u'freq / 1000000'], [188916, None, u'Argument', u'( freq / 10000 ) % 100'], [188929, None, u'Identifier', u'm'], [188927, None, u'PrimaryExpression', u'""CPU speed\\t: %u.%02u Mhz\\n""'], [188923, None, u'MultiplicativeExpression', u'freq / 1000000'], [188917, None, u'MultiplicativeExpression', u'( freq / 10000 ) % 100'], [188925, None, u'Identifier', u'freq'], [188924, None, u'PrimaryExpression', u'1000000'], [188919, None, u'MultiplicativeExpression', u'freq / 10000'], [188918, None, u'PrimaryExpression', u'100'], [188921, None, u'Identifier', u'freq'], [188920, None, u'PrimaryExpression', u'10000'], [188913, u'True', u'ExpressionStatement', u'seq_printf ( m , ""CPU speed\\t: %u.%02u Mhz\\n"" , freq / 1000000 , ( freq / 10000 ) % 100 )'], [188933, None, u'Identifier', u'freq'], [188932, u'True', u'Condition', u'freq'], [188969, None, u'UnaryOp', u'! str'], [188971, None, u'UnaryOperator', u'!'], [188970, None, u'Identifier', u'str'], [188968, u'True', u'Condition', u'! str'], [188999, None, u'UnaryOp', u'! cpu_online ( cpu_id )'], [189006, None, u'UnaryOperator', u'!'], [189000, None, u'CallExpression', u'cpu_online ( cpu_id )'], [189004, None, u'Callee', u'cpu_online'], [189001, None, u'ArgumentList', u'cpu_id'], [189005, None, u'Identifier', u'cpu_online'], [189002, None, u'Argument', u'cpu_id'], [189003, None, u'Identifier', u'cpu_id'], [188998, u'True', u'Condition', u'! cpu_online ( cpu_id )'], [189044, u'True', u'CFGEntryNode', u'ENTRY']]","[[188914, None, u'CallExpression', u'seq_printf ( m , ""CPU speed\\t: %u.%02u Mhz\\n"" , freq / 1000000 , ( freq / 10000 ) % 100 )'], [188930, None, u'Callee', u'seq_printf'], [188915, None, u'ArgumentList', u'm'], [188931, None, u'Identifier', u'seq_printf'], [188928, None, u'Argument', u'm'], [188926, None, u'Argument', u'""CPU speed\\t: %u.%02u Mhz\\n""'], [188922, None, u'Argument', u'freq / 1000000'], [188916, None, u'Argument', u'( freq / 10000 ) % 100'], [188929, None, u'Identifier', u'm'], [188927, None, u'PrimaryExpression', u'""CPU speed\\t: %u.%02u Mhz\\n""'], [188923, None, u'MultiplicativeExpression', u'freq / 1000000'], [188917, None, u'MultiplicativeExpression', u'( freq / 10000 ) % 100'], [188925, None, u'Identifier', u'freq'], [188924, None, u'PrimaryExpression', u'1000000'], [188919, None, u'MultiplicativeExpression', u'freq / 10000'], [188918, None, u'PrimaryExpression', u'100'], [188921, None, u'Identifier', u'freq'], [188920, None, u'PrimaryExpression', u'10000'], [188913, u'True', u'ExpressionStatement', u'seq_printf ( m , ""CPU speed\\t: %u.%02u Mhz\\n"" , freq / 1000000 , ( freq / 10000 ) % 100 )'], [188798, None, u'ParameterType', u'struct seq_file *'], [188797, None, u'Identifier', u'm'], [188796, u'True', u'Parameter', u'struct seq_file * m'], [189008, None, u'IdentifierDecl', u'freq = 0'], [189013, None, u'IdentifierDeclType', u'u32'], [189012, None, u'Identifier', u'freq'], [189009, None, u'AssignmentExpr', u'freq = 0'], [189011, None, u'Identifier', u'freq'], [189010, None, u'PrimaryExpression', u'0'], [189007, u'True', u'IdentifierDeclStatement', u'u32 freq = 0 ;']]"
"Merge tag 'arc-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc

Pull ARC fixes from Vineet Gupta:
 ""Accumulated fixes for ARC which I've been been sitting on for a while:

   - reading clk from driver vs device tree [Vlad]

   - fix support for UIO in VDK platform [Alexey]

   - SLC busy bit reading workaround

   - build warning with kprobes header reorg""

* tag 'arc-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/vgupta/arc:
  ARC: fix build warnings with !CONFIG_KPROBES
  ARCv2: SLC: Make sure busy bit is set properly on SLC flushing
  ARC: vdk: Fix support of UIO
  ARCv2: make unimplemented vectors as no-ops rather than halt core
  ARC: get rate from clk driver instead of reading device tree
  ARC: [dts] add cpu nodes to ARCHS SMP device tree
  ARC: [dts] add input clocks for cpu nodes",arch/arc/kernel/setup.c,+,"[[185879, u'True', u'ExpressionStatement', u'seq_printf ( m , ""CPU speed\\t: %lu.%02lu Mhz\\n"" , freq / 1000000 , ( freq / 10000 ) % 100 )']]","[[185880, None, u'CallExpression', u'seq_printf ( m , ""CPU speed\\t: %lu.%02lu Mhz\\n"" , freq / 1000000 , ( freq / 10000 ) % 100 )'], [185896, None, u'Callee', u'seq_printf'], [185881, None, u'ArgumentList', u'm'], [185897, None, u'Identifier', u'seq_printf'], [185894, None, u'Argument', u'm'], [185892, None, u'Argument', u'""CPU speed\\t: %lu.%02lu Mhz\\n""'], [185888, None, u'Argument', u'freq / 1000000'], [185882, None, u'Argument', u'( freq / 10000 ) % 100'], [185895, None, u'Identifier', u'm'], [185893, None, u'PrimaryExpression', u'""CPU speed\\t: %lu.%02lu Mhz\\n""'], [185889, None, u'MultiplicativeExpression', u'freq / 1000000'], [185883, None, u'MultiplicativeExpression', u'( freq / 10000 ) % 100'], [185891, None, u'Identifier', u'freq'], [185890, None, u'PrimaryExpression', u'1000000'], [185885, None, u'MultiplicativeExpression', u'freq / 10000'], [185884, None, u'PrimaryExpression', u'100'], [185887, None, u'Identifier', u'freq'], [185886, None, u'PrimaryExpression', u'10000'], [185879, u'True', u'ExpressionStatement', u'seq_printf ( m , ""CPU speed\\t: %lu.%02lu Mhz\\n"" , freq / 1000000 , ( freq / 10000 ) % 100 )'], [185899, None, u'Identifier', u'freq'], [185898, u'True', u'Condition', u'freq'], [185964, None, u'UnaryOp', u'! str'], [185966, None, u'UnaryOperator', u'!'], [185965, None, u'Identifier', u'str'], [185963, u'True', u'Condition', u'! str'], [185994, None, u'UnaryOp', u'! cpu_online ( cpu_id )'], [186001, None, u'UnaryOperator', u'!'], [185995, None, u'CallExpression', u'cpu_online ( cpu_id )'], [185999, None, u'Callee', u'cpu_online'], [185996, None, u'ArgumentList', u'cpu_id'], [186000, None, u'Identifier', u'cpu_online'], [185997, None, u'Argument', u'cpu_id'], [185998, None, u'Identifier', u'cpu_id'], [185993, u'True', u'Condition', u'! cpu_online ( cpu_id )'], [186041, u'True', u'CFGEntryNode', u'ENTRY']]","[[185880, None, u'CallExpression', u'seq_printf ( m , ""CPU speed\\t: %lu.%02lu Mhz\\n"" , freq / 1000000 , ( freq / 10000 ) % 100 )'], [185896, None, u'Callee', u'seq_printf'], [185881, None, u'ArgumentList', u'm'], [185897, None, u'Identifier', u'seq_printf'], [185894, None, u'Argument', u'm'], [185892, None, u'Argument', u'""CPU speed\\t: %lu.%02lu Mhz\\n""'], [185888, None, u'Argument', u'freq / 1000000'], [185882, None, u'Argument', u'( freq / 10000 ) % 100'], [185895, None, u'Identifier', u'm'], [185893, None, u'PrimaryExpression', u'""CPU speed\\t: %lu.%02lu Mhz\\n""'], [185889, None, u'MultiplicativeExpression', u'freq / 1000000'], [185883, None, u'MultiplicativeExpression', u'( freq / 10000 ) % 100'], [185891, None, u'Identifier', u'freq'], [185890, None, u'PrimaryExpression', u'1000000'], [185885, None, u'MultiplicativeExpression', u'freq / 10000'], [185884, None, u'PrimaryExpression', u'100'], [185887, None, u'Identifier', u'freq'], [185886, None, u'PrimaryExpression', u'10000'], [185879, u'True', u'ExpressionStatement', u'seq_printf ( m , ""CPU speed\\t: %lu.%02lu Mhz\\n"" , freq / 1000000 , ( freq / 10000 ) % 100 )'], [185764, None, u'ParameterType', u'struct seq_file *'], [185763, None, u'Identifier', u'm'], [185762, u'True', u'Parameter', u'struct seq_file * m'], [186003, None, u'IdentifierDecl', u'freq = 0'], [186008, None, u'IdentifierDeclType', u'unsigned long'], [186007, None, u'Identifier', u'freq'], [186004, None, u'AssignmentExpr', u'freq = 0'], [186006, None, u'Identifier', u'freq'], [186005, None, u'PrimaryExpression', u'0'], [186002, u'True', u'IdentifierDeclStatement', u'unsigned long freq = 0 ;'], [185904, None, u'AssignmentExpr', u'freq = clk_get_rate ( cpu_clk )'], [185911, None, u'Identifier', u'freq'], [185905, None, u'CallExpression', u'clk_get_rate ( cpu_clk )'], [185909, None, u'Callee', u'clk_get_rate'], [185906, None, u'ArgumentList', u'cpu_clk'], [185910, None, u'Identifier', u'clk_get_rate'], [185907, None, u'Argument', u'cpu_clk'], [185908, None, u'Identifier', u'cpu_clk'], [185903, u'True', u'ExpressionStatement', u'freq = clk_get_rate ( cpu_clk )'], [185932, None, u'AssignmentExpr', u'cpu_clk = clk_get ( cpu_dev , NULL )'], [185941, None, u'Identifier', u'cpu_clk'], [185933, None, u'CallExpression', u'clk_get ( cpu_dev , NULL )'], [185939, None, u'Callee', u'clk_get'], [185934, None, u'ArgumentList', u'cpu_dev'], [185940, None, u'Identifier', u'clk_get'], [185937, None, u'Argument', u'cpu_dev'], [185935, None, u'Argument', u'NULL'], [185938, None, u'Identifier', u'cpu_dev'], [185936, None, u'Identifier', u'NULL'], [185931, u'True', u'ExpressionStatement', u'cpu_clk = clk_get ( cpu_dev , NULL )'], [186014, None, u'IdentifierDecl', u'* cpu_dev = get_cpu_device ( cpu_id )'], [186024, None, u'IdentifierDeclType', u'struct device *'], [186023, None, u'Identifier', u'cpu_dev'], [186015, None, u'AssignmentExpr', u'* cpu_dev = get_cpu_device ( cpu_id )'], [186022, None, u'Identifier', u'cpu_dev'], [186016, None, u'CallExpression', u'get_cpu_device ( cpu_id )'], [186020, None, u'Callee', u'get_cpu_device'], [186017, None, u'ArgumentList', u'cpu_id'], [186021, None, u'Identifier', u'get_cpu_device'], [186018, None, u'Argument', u'cpu_id'], [186019, None, u'Identifier', u'cpu_id'], [186013, u'True', u'IdentifierDeclStatement', u'struct device * cpu_dev = get_cpu_device ( cpu_id ) ;'], [186026, None, u'IdentifierDecl', u'cpu_id = ptr_to_cpu ( v )'], [186036, None, u'IdentifierDeclType', u'int'], [186035, None, u'Identifier', u'cpu_id'], [186027, None, u'AssignmentExpr', u'cpu_id = ptr_to_cpu ( v )'], [186034, None, u'Identifier', u'cpu_id'], [186028, None, u'CallExpression', u'ptr_to_cpu ( v )'], [186032, None, u'Callee', u'ptr_to_cpu'], [186029, None, u'ArgumentList', u'v'], [186033, None, u'Identifier', u'ptr_to_cpu'], [186030, None, u'Argument', u'v'], [186031, None, u'Identifier', u'v'], [186025, u'True', u'IdentifierDeclStatement', u'int cpu_id = ptr_to_cpu ( v ) ;'], [185761, None, u'ParameterType', u'void *'], [185760, None, u'Identifier', u'v'], [185759, u'True', u'Parameter', u'void * v']]"
"Merge branch 'for-linus-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs

Pull btrfs fixes from Chris Mason:
 ""We have three small fixes queued up in my for-linus-4.11 branch""

* 'for-linus-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs:
  Btrfs: fix an integer overflow check
  btrfs: Change qgroup_meta_rsv to 64bit
  Btrfs: bring back repair during read",fs/btrfs/extent_io.c,+,"[[200787, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )']]","[[200788, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [200805, None, u'Identifier', u'ret'], [200789, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [200803, None, u'Callee', u'bio_readpage_error'], [200790, None, u'ArgumentList', u'bio'], [200804, None, u'Identifier', u'bio_readpage_error'], [200801, None, u'Argument', u'bio'], [200799, None, u'Argument', u'offset'], [200797, None, u'Argument', u'page'], [200795, None, u'Argument', u'start'], [200793, None, u'Argument', u'end'], [200791, None, u'Argument', u'mirror'], [200802, None, u'Identifier', u'bio'], [200800, None, u'Identifier', u'offset'], [200798, None, u'Identifier', u'page'], [200796, None, u'Identifier', u'start'], [200794, None, u'Identifier', u'end'], [200792, None, u'Identifier', u'mirror'], [200787, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [200807, None, u'EqualityExpression', u'ret == - EAGAIN'], [200811, None, u'Identifier', u'ret'], [200808, None, u'UnaryOp', u'- EAGAIN'], [200810, None, u'UnaryOperator', u'-'], [200809, None, u'Identifier', u'EAGAIN'], [200806, u'True', u'Condition', u'ret == - EAGAIN'], [200828, None, u'PtrMemberAccess', u'tree -> ops'], [200830, None, u'Identifier', u'tree'], [200829, None, u'Identifier', u'ops'], [200827, u'True', u'Condition', u'tree -> ops'], [200835, None, u'CallExpression', u'likely ( uptodate )'], [200839, None, u'Callee', u'likely'], [200836, None, u'ArgumentList', u'uptodate'], [200840, None, u'Identifier', u'likely'], [200837, None, u'Argument', u'uptodate'], [200838, None, u'Identifier', u'uptodate'], [200834, u'True', u'Condition', u'likely ( uptodate )'], [201152, u'True', u'CFGEntryNode', u'ENTRY']]","[[200788, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [200805, None, u'Identifier', u'ret'], [200789, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [200803, None, u'Callee', u'bio_readpage_error'], [200790, None, u'ArgumentList', u'bio'], [200804, None, u'Identifier', u'bio_readpage_error'], [200801, None, u'Argument', u'bio'], [200799, None, u'Argument', u'offset'], [200797, None, u'Argument', u'page'], [200795, None, u'Argument', u'start'], [200793, None, u'Argument', u'end'], [200791, None, u'Argument', u'mirror'], [200802, None, u'Identifier', u'bio'], [200800, None, u'Identifier', u'offset'], [200798, None, u'Identifier', u'page'], [200796, None, u'Identifier', u'start'], [200794, None, u'Identifier', u'end'], [200792, None, u'Identifier', u'mirror'], [200787, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [201115, None, u'IdentifierDecl', u'offset = 0'], [201120, None, u'IdentifierDeclType', u'u64'], [201119, None, u'Identifier', u'offset'], [201116, None, u'AssignmentExpr', u'offset = 0'], [201118, None, u'Identifier', u'offset'], [201117, None, u'PrimaryExpression', u'0'], [201114, u'True', u'IdentifierDeclStatement', u'u64 offset = 0 ;'], [200916, None, u'AssignmentExpr', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [200928, None, u'Identifier', u'end'], [200917, None, u'AdditiveExpression', u'start + bvec -> bv_offset + bvec -> bv_len - 1'], [200927, None, u'Identifier', u'start'], [200918, None, u'AdditiveExpression', u'bvec -> bv_offset + bvec -> bv_len - 1'], [200924, None, u'PtrMemberAccess', u'bvec -> bv_offset'], [200919, None, u'AdditiveExpression', u'bvec -> bv_len - 1'], [200926, None, u'Identifier', u'bvec'], [200925, None, u'Identifier', u'bv_offset'], [200921, None, u'PtrMemberAccess', u'bvec -> bv_len'], [200920, None, u'PrimaryExpression', u'1'], [200923, None, u'Identifier', u'bvec'], [200922, None, u'Identifier', u'bv_len'], [200915, u'True', u'ExpressionStatement', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [200904, None, u'AssignmentExpr', u'mirror = io_bio -> mirror_num'], [200908, None, u'Identifier', u'mirror'], [200905, None, u'PtrMemberAccess', u'io_bio -> mirror_num'], [200907, None, u'Identifier', u'io_bio'], [200906, None, u'Identifier', u'mirror_num'], [200903, u'True', u'ExpressionStatement', u'mirror = io_bio -> mirror_num'], [200930, None, u'AssignmentExpr', u'start = page_offset ( page )'], [200937, None, u'Identifier', u'start'], [200931, None, u'CallExpression', u'page_offset ( page )'], [200935, None, u'Callee', u'page_offset'], [200932, None, u'ArgumentList', u'page'], [200936, None, u'Identifier', u'page_offset'], [200933, None, u'Argument', u'page'], [200934, None, u'Identifier', u'page'], [200929, u'True', u'ExpressionStatement', u'start = page_offset ( page )'], [200494, None, u'ParameterType', u'struct bio *'], [200493, None, u'Identifier', u'bio'], [200492, u'True', u'Parameter', u'struct bio * bio'], [201060, None, u'IdentifierDecl', u'* page = bvec -> bv_page'], [201067, None, u'IdentifierDeclType', u'struct page *'], [201066, None, u'Identifier', u'page'], [201061, None, u'AssignmentExpr', u'* page = bvec -> bv_page'], [201065, None, u'Identifier', u'page'], [201062, None, u'PtrMemberAccess', u'bvec -> bv_page'], [201064, None, u'Identifier', u'bvec'], [201063, None, u'Identifier', u'bv_page'], [201059, u'True', u'IdentifierDeclStatement', u'struct page * page = bvec -> bv_page ;'], [201149, None, u'IdentifierDecl', u'* bvec'], [201151, None, u'IdentifierDeclType', u'struct bio_vec *'], [201150, None, u'Identifier', u'bvec'], [201148, u'True', u'IdentifierDeclStatement', u'struct bio_vec * bvec ;'], [201126, None, u'IdentifierDecl', u'* io_bio = btrfs_io_bio ( bio )'], [201136, None, u'IdentifierDeclType', u'struct btrfs_io_bio *'], [201135, None, u'Identifier', u'io_bio'], [201127, None, u'AssignmentExpr', u'* io_bio = btrfs_io_bio ( bio )'], [201134, None, u'Identifier', u'io_bio'], [201128, None, u'CallExpression', u'btrfs_io_bio ( bio )'], [201132, None, u'Callee', u'btrfs_io_bio'], [201129, None, u'ArgumentList', u'bio'], [201133, None, u'Identifier', u'btrfs_io_bio'], [201130, None, u'Argument', u'bio'], [201131, None, u'Identifier', u'bio'], [201125, u'True', u'IdentifierDeclStatement', u'struct btrfs_io_bio * io_bio = btrfs_io_bio ( bio ) ;']]"
"Merge branch 'for-linus-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs

Pull btrfs fixes from Chris Mason:
 ""We have three small fixes queued up in my for-linus-4.11 branch""

* 'for-linus-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs:
  Btrfs: fix an integer overflow check
  btrfs: Change qgroup_meta_rsv to 64bit
  Btrfs: bring back repair during read",fs/btrfs/extent_io.c,-,"[[230005, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )']]","[[230006, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [230023, None, u'Identifier', u'ret'], [230007, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [230021, None, u'Callee', u'bio_readpage_error'], [230008, None, u'ArgumentList', u'bio'], [230022, None, u'Identifier', u'bio_readpage_error'], [230019, None, u'Argument', u'bio'], [230017, None, u'Argument', u'offset'], [230015, None, u'Argument', u'page'], [230013, None, u'Argument', u'start'], [230011, None, u'Argument', u'end'], [230009, None, u'Argument', u'mirror'], [230020, None, u'Identifier', u'bio'], [230018, None, u'Identifier', u'offset'], [230016, None, u'Identifier', u'page'], [230014, None, u'Identifier', u'start'], [230012, None, u'Identifier', u'end'], [230010, None, u'Identifier', u'mirror'], [230005, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [230056, None, u'PtrMemberAccess', u'tree -> ops'], [230058, None, u'Identifier', u'tree'], [230057, None, u'Identifier', u'ops'], [230055, u'True', u'Condition', u'tree -> ops'], [230063, None, u'CallExpression', u'likely ( uptodate )'], [230067, None, u'Callee', u'likely'], [230064, None, u'ArgumentList', u'uptodate'], [230068, None, u'Identifier', u'likely'], [230065, None, u'Argument', u'uptodate'], [230066, None, u'Identifier', u'uptodate'], [230062, u'True', u'Condition', u'likely ( uptodate )'], [230380, u'True', u'CFGEntryNode', u'ENTRY']]","[[230006, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [230023, None, u'Identifier', u'ret'], [230007, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [230021, None, u'Callee', u'bio_readpage_error'], [230008, None, u'ArgumentList', u'bio'], [230022, None, u'Identifier', u'bio_readpage_error'], [230019, None, u'Argument', u'bio'], [230017, None, u'Argument', u'offset'], [230015, None, u'Argument', u'page'], [230013, None, u'Argument', u'start'], [230011, None, u'Argument', u'end'], [230009, None, u'Argument', u'mirror'], [230020, None, u'Identifier', u'bio'], [230018, None, u'Identifier', u'offset'], [230016, None, u'Identifier', u'page'], [230014, None, u'Identifier', u'start'], [230012, None, u'Identifier', u'end'], [230010, None, u'Identifier', u'mirror'], [230005, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [230343, None, u'IdentifierDecl', u'offset = 0'], [230348, None, u'IdentifierDeclType', u'u64'], [230347, None, u'Identifier', u'offset'], [230344, None, u'AssignmentExpr', u'offset = 0'], [230346, None, u'Identifier', u'offset'], [230345, None, u'PrimaryExpression', u'0'], [230342, u'True', u'IdentifierDeclStatement', u'u64 offset = 0 ;'], [230144, None, u'AssignmentExpr', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [230156, None, u'Identifier', u'end'], [230145, None, u'AdditiveExpression', u'start + bvec -> bv_offset + bvec -> bv_len - 1'], [230155, None, u'Identifier', u'start'], [230146, None, u'AdditiveExpression', u'bvec -> bv_offset + bvec -> bv_len - 1'], [230152, None, u'PtrMemberAccess', u'bvec -> bv_offset'], [230147, None, u'AdditiveExpression', u'bvec -> bv_len - 1'], [230154, None, u'Identifier', u'bvec'], [230153, None, u'Identifier', u'bv_offset'], [230149, None, u'PtrMemberAccess', u'bvec -> bv_len'], [230148, None, u'PrimaryExpression', u'1'], [230151, None, u'Identifier', u'bvec'], [230150, None, u'Identifier', u'bv_len'], [230143, u'True', u'ExpressionStatement', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [230132, None, u'AssignmentExpr', u'mirror = io_bio -> mirror_num'], [230136, None, u'Identifier', u'mirror'], [230133, None, u'PtrMemberAccess', u'io_bio -> mirror_num'], [230135, None, u'Identifier', u'io_bio'], [230134, None, u'Identifier', u'mirror_num'], [230131, u'True', u'ExpressionStatement', u'mirror = io_bio -> mirror_num'], [230158, None, u'AssignmentExpr', u'start = page_offset ( page )'], [230165, None, u'Identifier', u'start'], [230159, None, u'CallExpression', u'page_offset ( page )'], [230163, None, u'Callee', u'page_offset'], [230160, None, u'ArgumentList', u'page'], [230164, None, u'Identifier', u'page_offset'], [230161, None, u'Argument', u'page'], [230162, None, u'Identifier', u'page'], [230157, u'True', u'ExpressionStatement', u'start = page_offset ( page )'], [229724, None, u'ParameterType', u'struct bio *'], [229723, None, u'Identifier', u'bio'], [229722, u'True', u'Parameter', u'struct bio * bio'], [230288, None, u'IdentifierDecl', u'* page = bvec -> bv_page'], [230295, None, u'IdentifierDeclType', u'struct page *'], [230294, None, u'Identifier', u'page'], [230289, None, u'AssignmentExpr', u'* page = bvec -> bv_page'], [230293, None, u'Identifier', u'page'], [230290, None, u'PtrMemberAccess', u'bvec -> bv_page'], [230292, None, u'Identifier', u'bvec'], [230291, None, u'Identifier', u'bv_page'], [230287, u'True', u'IdentifierDeclStatement', u'struct page * page = bvec -> bv_page ;'], [230377, None, u'IdentifierDecl', u'* bvec'], [230379, None, u'IdentifierDeclType', u'struct bio_vec *'], [230378, None, u'Identifier', u'bvec'], [230376, u'True', u'IdentifierDeclStatement', u'struct bio_vec * bvec ;'], [230354, None, u'IdentifierDecl', u'* io_bio = btrfs_io_bio ( bio )'], [230364, None, u'IdentifierDeclType', u'struct btrfs_io_bio *'], [230363, None, u'Identifier', u'io_bio'], [230355, None, u'AssignmentExpr', u'* io_bio = btrfs_io_bio ( bio )'], [230362, None, u'Identifier', u'io_bio'], [230356, None, u'CallExpression', u'btrfs_io_bio ( bio )'], [230360, None, u'Callee', u'btrfs_io_bio'], [230357, None, u'ArgumentList', u'bio'], [230361, None, u'Identifier', u'btrfs_io_bio'], [230358, None, u'Argument', u'bio'], [230359, None, u'Identifier', u'bio'], [230353, u'True', u'IdentifierDeclStatement', u'struct btrfs_io_bio * io_bio = btrfs_io_bio ( bio ) ;']]"
"Merge branch 'for-linus-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs

Pull btrfs fixes from Chris Mason:
 ""We have three small fixes queued up in my for-linus-4.11 branch""

* 'for-linus-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs:
  Btrfs: fix an integer overflow check
  btrfs: Change qgroup_meta_rsv to 64bit
  Btrfs: bring back repair during read",fs/btrfs/extent_io.c,+,"[[200755, u'True', u'ExpressionStatement', u'ASSERT ( ret == - EIO )']]","[[200756, None, u'CallExpression', u'ASSERT ( ret == - EIO )'], [200764, None, u'Callee', u'ASSERT'], [200757, None, u'ArgumentList', u'ret == - EIO'], [200765, None, u'Identifier', u'ASSERT'], [200758, None, u'Argument', u'ret == - EIO'], [200759, None, u'EqualityExpression', u'ret == - EIO'], [200763, None, u'Identifier', u'ret'], [200760, None, u'UnaryOp', u'- EIO'], [200762, None, u'UnaryOperator', u'-'], [200761, None, u'Identifier', u'EIO'], [200755, u'True', u'ExpressionStatement', u'ASSERT ( ret == - EIO )'], [200828, None, u'PtrMemberAccess', u'tree -> ops'], [200830, None, u'Identifier', u'tree'], [200829, None, u'Identifier', u'ops'], [200827, u'True', u'Condition', u'tree -> ops'], [200835, None, u'CallExpression', u'likely ( uptodate )'], [200839, None, u'Callee', u'likely'], [200836, None, u'ArgumentList', u'uptodate'], [200840, None, u'Identifier', u'likely'], [200837, None, u'Argument', u'uptodate'], [200838, None, u'Identifier', u'uptodate'], [200834, u'True', u'Condition', u'likely ( uptodate )'], [201152, u'True', u'CFGEntryNode', u'ENTRY']]","[[200756, None, u'CallExpression', u'ASSERT ( ret == - EIO )'], [200764, None, u'Callee', u'ASSERT'], [200757, None, u'ArgumentList', u'ret == - EIO'], [200765, None, u'Identifier', u'ASSERT'], [200758, None, u'Argument', u'ret == - EIO'], [200759, None, u'EqualityExpression', u'ret == - EIO'], [200763, None, u'Identifier', u'ret'], [200760, None, u'UnaryOp', u'- EIO'], [200762, None, u'UnaryOperator', u'-'], [200761, None, u'Identifier', u'EIO'], [200755, u'True', u'ExpressionStatement', u'ASSERT ( ret == - EIO )'], [200788, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [200805, None, u'Identifier', u'ret'], [200789, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [200803, None, u'Callee', u'bio_readpage_error'], [200790, None, u'ArgumentList', u'bio'], [200804, None, u'Identifier', u'bio_readpage_error'], [200801, None, u'Argument', u'bio'], [200799, None, u'Argument', u'offset'], [200797, None, u'Argument', u'page'], [200795, None, u'Argument', u'start'], [200793, None, u'Argument', u'end'], [200791, None, u'Argument', u'mirror'], [200802, None, u'Identifier', u'bio'], [200800, None, u'Identifier', u'offset'], [200798, None, u'Identifier', u'page'], [200796, None, u'Identifier', u'start'], [200794, None, u'Identifier', u'end'], [200792, None, u'Identifier', u'mirror'], [200787, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [200813, None, u'AssignmentExpr', u'ret = tree -> ops -> readpage_io_failed_hook ( page , mirror )'], [200826, None, u'Identifier', u'ret'], [200814, None, u'CallExpression', u'tree -> ops -> readpage_io_failed_hook ( page , mirror )'], [200820, None, u'Callee', u'tree -> ops -> readpage_io_failed_hook'], [200815, None, u'ArgumentList', u'page'], [200821, None, u'PtrMemberAccess', u'tree -> ops -> readpage_io_failed_hook'], [200818, None, u'Argument', u'page'], [200816, None, u'Argument', u'mirror'], [200823, None, u'PtrMemberAccess', u'tree -> ops'], [200822, None, u'Identifier', u'readpage_io_failed_hook'], [200819, None, u'Identifier', u'page'], [200817, None, u'Identifier', u'mirror'], [200825, None, u'Identifier', u'tree'], [200824, None, u'Identifier', u'ops'], [200812, u'True', u'ExpressionStatement', u'ret = tree -> ops -> readpage_io_failed_hook ( page , mirror )'], [201115, None, u'IdentifierDecl', u'offset = 0'], [201120, None, u'IdentifierDeclType', u'u64'], [201119, None, u'Identifier', u'offset'], [201116, None, u'AssignmentExpr', u'offset = 0'], [201118, None, u'Identifier', u'offset'], [201117, None, u'PrimaryExpression', u'0'], [201114, u'True', u'IdentifierDeclStatement', u'u64 offset = 0 ;'], [200916, None, u'AssignmentExpr', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [200928, None, u'Identifier', u'end'], [200917, None, u'AdditiveExpression', u'start + bvec -> bv_offset + bvec -> bv_len - 1'], [200927, None, u'Identifier', u'start'], [200918, None, u'AdditiveExpression', u'bvec -> bv_offset + bvec -> bv_len - 1'], [200924, None, u'PtrMemberAccess', u'bvec -> bv_offset'], [200919, None, u'AdditiveExpression', u'bvec -> bv_len - 1'], [200926, None, u'Identifier', u'bvec'], [200925, None, u'Identifier', u'bv_offset'], [200921, None, u'PtrMemberAccess', u'bvec -> bv_len'], [200920, None, u'PrimaryExpression', u'1'], [200923, None, u'Identifier', u'bvec'], [200922, None, u'Identifier', u'bv_len'], [200915, u'True', u'ExpressionStatement', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [200904, None, u'AssignmentExpr', u'mirror = io_bio -> mirror_num'], [200908, None, u'Identifier', u'mirror'], [200905, None, u'PtrMemberAccess', u'io_bio -> mirror_num'], [200907, None, u'Identifier', u'io_bio'], [200906, None, u'Identifier', u'mirror_num'], [200903, u'True', u'ExpressionStatement', u'mirror = io_bio -> mirror_num'], [200930, None, u'AssignmentExpr', u'start = page_offset ( page )'], [200937, None, u'Identifier', u'start'], [200931, None, u'CallExpression', u'page_offset ( page )'], [200935, None, u'Callee', u'page_offset'], [200932, None, u'ArgumentList', u'page'], [200936, None, u'Identifier', u'page_offset'], [200933, None, u'Argument', u'page'], [200934, None, u'Identifier', u'page'], [200929, u'True', u'ExpressionStatement', u'start = page_offset ( page )'], [200494, None, u'ParameterType', u'struct bio *'], [200493, None, u'Identifier', u'bio'], [200492, u'True', u'Parameter', u'struct bio * bio'], [201060, None, u'IdentifierDecl', u'* page = bvec -> bv_page'], [201067, None, u'IdentifierDeclType', u'struct page *'], [201066, None, u'Identifier', u'page'], [201061, None, u'AssignmentExpr', u'* page = bvec -> bv_page'], [201065, None, u'Identifier', u'page'], [201062, None, u'PtrMemberAccess', u'bvec -> bv_page'], [201064, None, u'Identifier', u'bvec'], [201063, None, u'Identifier', u'bv_page'], [201059, u'True', u'IdentifierDeclStatement', u'struct page * page = bvec -> bv_page ;'], [200997, None, u'AssignmentExpr', u'tree = & BTRFS_I ( inode ) -> io_tree'], [201008, None, u'Identifier', u'tree'], [200998, None, u'UnaryOp', u'& BTRFS_I ( inode ) -> io_tree'], [201007, None, u'UnaryOperator', u'&'], [200999, None, u'PtrMemberAccess', u'BTRFS_I ( inode ) -> io_tree'], [201001, None, u'CallExpression', u'BTRFS_I ( inode )'], [201000, None, u'Identifier', u'io_tree'], [201005, None, u'Callee', u'BTRFS_I'], [201002, None, u'ArgumentList', u'inode'], [201006, None, u'Identifier', u'BTRFS_I'], [201003, None, u'Argument', u'inode'], [201004, None, u'Identifier', u'inode'], [200996, u'True', u'ExpressionStatement', u'tree = & BTRFS_I ( inode ) -> io_tree'], [201149, None, u'IdentifierDecl', u'* bvec'], [201151, None, u'IdentifierDeclType', u'struct bio_vec *'], [201150, None, u'Identifier', u'bvec'], [201148, u'True', u'IdentifierDeclStatement', u'struct bio_vec * bvec ;'], [201126, None, u'IdentifierDecl', u'* io_bio = btrfs_io_bio ( bio )'], [201136, None, u'IdentifierDeclType', u'struct btrfs_io_bio *'], [201135, None, u'Identifier', u'io_bio'], [201127, None, u'AssignmentExpr', u'* io_bio = btrfs_io_bio ( bio )'], [201134, None, u'Identifier', u'io_bio'], [201128, None, u'CallExpression', u'btrfs_io_bio ( bio )'], [201132, None, u'Callee', u'btrfs_io_bio'], [201129, None, u'ArgumentList', u'bio'], [201133, None, u'Identifier', u'btrfs_io_bio'], [201130, None, u'Argument', u'bio'], [201131, None, u'Identifier', u'bio'], [201125, u'True', u'IdentifierDeclStatement', u'struct btrfs_io_bio * io_bio = btrfs_io_bio ( bio ) ;'], [201049, None, u'IdentifierDecl', u'* inode = page -> mapping -> host'], [201058, None, u'IdentifierDeclType', u'struct inode *'], [201057, None, u'Identifier', u'inode'], [201050, None, u'AssignmentExpr', u'* inode = page -> mapping -> host'], [201056, None, u'Identifier', u'inode'], [201051, None, u'PtrMemberAccess', u'page -> mapping -> host'], [201053, None, u'PtrMemberAccess', u'page -> mapping'], [201052, None, u'Identifier', u'host'], [201055, None, u'Identifier', u'page'], [201054, None, u'Identifier', u'mapping'], [201048, u'True', u'IdentifierDeclStatement', u'struct inode * inode = page -> mapping -> host ;']]"
"xtensa: fix stack dump output

Use %pB in pr_cont format string instead of calling print_symbol
separately. It turns

  [   19.166249] Call Trace:
  [   19.167265]  [<a000e50a>]
  [   19.167843]  __warn+0x92/0xa0
  [   19.169656]  [<a000e554>]
  [   19.170059]  warn_slowpath_fmt+0x3c/0x40
  [   19.171934]  [<a02d5bd8>]

back into

  [   18.123240] Call Trace:
  [   18.125039]  [<a000e4f6>] __warn+0x92/0xa0
  [   18.126961]  [<a000e540>] warn_slowpath_fmt+0x3c/0x40

Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>",arch/xtensa/kernel/traps.c,-,"[[250763, u'True', u'ExpressionStatement', u'print_symbol ( "" %s\\n"" , frame -> pc )']]","[[250764, None, u'CallExpression', u'print_symbol ( "" %s\\n"" , frame -> pc )'], [250772, None, u'Callee', u'print_symbol'], [250765, None, u'ArgumentList', u'"" %s\\n""'], [250773, None, u'Identifier', u'print_symbol'], [250770, None, u'Argument', u'"" %s\\n""'], [250766, None, u'Argument', u'frame -> pc'], [250771, None, u'PrimaryExpression', u'"" %s\\n""'], [250767, None, u'PtrMemberAccess', u'frame -> pc'], [250769, None, u'Identifier', u'frame'], [250768, None, u'Identifier', u'pc'], [250763, u'True', u'ExpressionStatement', u'print_symbol ( "" %s\\n"" , frame -> pc )'], [250786, None, u'CallExpression', u'kernel_text_address ( frame -> pc )'], [250792, None, u'Callee', u'kernel_text_address'], [250787, None, u'ArgumentList', u'frame -> pc'], [250793, None, u'Identifier', u'kernel_text_address'], [250788, None, u'Argument', u'frame -> pc'], [250789, None, u'PtrMemberAccess', u'frame -> pc'], [250791, None, u'Identifier', u'frame'], [250790, None, u'Identifier', u'pc'], [250785, u'True', u'Condition', u'kernel_text_address ( frame -> pc )'], [250794, u'True', u'CFGEntryNode', u'ENTRY']]","[[250764, None, u'CallExpression', u'print_symbol ( "" %s\\n"" , frame -> pc )'], [250772, None, u'Callee', u'print_symbol'], [250765, None, u'ArgumentList', u'"" %s\\n""'], [250773, None, u'Identifier', u'print_symbol'], [250770, None, u'Argument', u'"" %s\\n""'], [250766, None, u'Argument', u'frame -> pc'], [250771, None, u'PrimaryExpression', u'"" %s\\n""'], [250767, None, u'PtrMemberAccess', u'frame -> pc'], [250769, None, u'Identifier', u'frame'], [250768, None, u'Identifier', u'pc'], [250763, u'True', u'ExpressionStatement', u'print_symbol ( "" %s\\n"" , frame -> pc )'], [250756, None, u'ParameterType', u'struct stackframe *'], [250755, None, u'Identifier', u'frame'], [250754, u'True', u'Parameter', u'struct stackframe * frame']]"
"Merge branches 'pm-cpufreq-fixes' and 'pm-cpuidle-fixes'

* pm-cpufreq-fixes:
  cpufreq: Fix creation of symbolic links to policy directories

* pm-cpuidle-fixes:
  cpuidle: powernv: Pass correct drv->cpumask for registration",drivers/cpufreq/cpufreq.c,-,"[[266248, u'True', u'ExpressionStatement', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )']]","[[266249, None, u'CallExpression', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [266257, None, u'Callee', u'write_lock_irqsave'], [266250, None, u'ArgumentList', u'& cpufreq_driver_lock'], [266258, None, u'Identifier', u'write_lock_irqsave'], [266253, None, u'Argument', u'& cpufreq_driver_lock'], [266251, None, u'Argument', u'flags'], [266254, None, u'UnaryOp', u'& cpufreq_driver_lock'], [266252, None, u'Identifier', u'flags'], [266256, None, u'UnaryOperator', u'&'], [266255, None, u'Identifier', u'cpufreq_driver_lock'], [266248, u'True', u'ExpressionStatement', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [266280, None, u'Identifier', u'new_policy'], [266279, u'True', u'Condition', u'new_policy'], [266336, None, u'Identifier', u'ret'], [266335, u'True', u'Condition', u'ret'], [266439, None, u'UnaryOp', u'! policy_is_inactive ( policy )'], [266446, None, u'UnaryOperator', u'!'], [266440, None, u'CallExpression', u'policy_is_inactive ( policy )'], [266444, None, u'Callee', u'policy_is_inactive'], [266441, None, u'ArgumentList', u'policy'], [266445, None, u'Identifier', u'policy_is_inactive'], [266442, None, u'Argument', u'policy'], [266443, None, u'Identifier', u'policy'], [266438, u'True', u'Condition', u'! policy_is_inactive ( policy )'], [266373, None, u'UnaryOp', u'! policy'], [266375, None, u'UnaryOperator', u'!'], [266374, None, u'Identifier', u'policy'], [266372, u'True', u'Condition', u'! policy'], [266466, None, u'Identifier', u'policy'], [266465, u'True', u'Condition', u'policy'], [266509, u'True', u'CFGEntryNode', u'ENTRY']]","[[266249, None, u'CallExpression', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [266257, None, u'Callee', u'write_lock_irqsave'], [266250, None, u'ArgumentList', u'& cpufreq_driver_lock'], [266258, None, u'Identifier', u'write_lock_irqsave'], [266253, None, u'Argument', u'& cpufreq_driver_lock'], [266251, None, u'Argument', u'flags'], [266254, None, u'UnaryOp', u'& cpufreq_driver_lock'], [266252, None, u'Identifier', u'flags'], [266256, None, u'UnaryOperator', u'&'], [266255, None, u'Identifier', u'cpufreq_driver_lock'], [266248, u'True', u'ExpressionStatement', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [266498, None, u'IdentifierDecl', u'flags'], [266500, None, u'IdentifierDeclType', u'unsigned long'], [266499, None, u'Identifier', u'flags'], [266497, u'True', u'IdentifierDeclStatement', u'unsigned long flags ;']]"
"Merge branches 'pm-cpufreq-fixes' and 'pm-cpuidle-fixes'

* pm-cpufreq-fixes:
  cpufreq: Fix creation of symbolic links to policy directories

* pm-cpuidle-fixes:
  cpuidle: powernv: Pass correct drv->cpumask for registration",drivers/cpufreq/cpufreq.c,-,"[[266218, u'True', u'ExpressionStatement', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )']]","[[266219, None, u'CallExpression', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [266227, None, u'Callee', u'write_unlock_irqrestore'], [266220, None, u'ArgumentList', u'& cpufreq_driver_lock'], [266228, None, u'Identifier', u'write_unlock_irqrestore'], [266223, None, u'Argument', u'& cpufreq_driver_lock'], [266221, None, u'Argument', u'flags'], [266224, None, u'UnaryOp', u'& cpufreq_driver_lock'], [266222, None, u'Identifier', u'flags'], [266226, None, u'UnaryOperator', u'&'], [266225, None, u'Identifier', u'cpufreq_driver_lock'], [266218, u'True', u'ExpressionStatement', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [266280, None, u'Identifier', u'new_policy'], [266279, u'True', u'Condition', u'new_policy'], [266336, None, u'Identifier', u'ret'], [266335, u'True', u'Condition', u'ret'], [266439, None, u'UnaryOp', u'! policy_is_inactive ( policy )'], [266446, None, u'UnaryOperator', u'!'], [266440, None, u'CallExpression', u'policy_is_inactive ( policy )'], [266444, None, u'Callee', u'policy_is_inactive'], [266441, None, u'ArgumentList', u'policy'], [266445, None, u'Identifier', u'policy_is_inactive'], [266442, None, u'Argument', u'policy'], [266443, None, u'Identifier', u'policy'], [266438, u'True', u'Condition', u'! policy_is_inactive ( policy )'], [266373, None, u'UnaryOp', u'! policy'], [266375, None, u'UnaryOperator', u'!'], [266374, None, u'Identifier', u'policy'], [266372, u'True', u'Condition', u'! policy'], [266466, None, u'Identifier', u'policy'], [266465, u'True', u'Condition', u'policy'], [266509, u'True', u'CFGEntryNode', u'ENTRY']]","[[266219, None, u'CallExpression', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [266227, None, u'Callee', u'write_unlock_irqrestore'], [266220, None, u'ArgumentList', u'& cpufreq_driver_lock'], [266228, None, u'Identifier', u'write_unlock_irqrestore'], [266223, None, u'Argument', u'& cpufreq_driver_lock'], [266221, None, u'Argument', u'flags'], [266224, None, u'UnaryOp', u'& cpufreq_driver_lock'], [266222, None, u'Identifier', u'flags'], [266226, None, u'UnaryOperator', u'&'], [266225, None, u'Identifier', u'cpufreq_driver_lock'], [266218, u'True', u'ExpressionStatement', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [266498, None, u'IdentifierDecl', u'flags'], [266500, None, u'IdentifierDeclType', u'unsigned long'], [266499, None, u'Identifier', u'flags'], [266497, u'True', u'IdentifierDeclStatement', u'unsigned long flags ;']]"
"Merge tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs

Pull NFS client fixes from Anna Schumaker:
 ""Here are a few more bugfixes that came in over the last couple of
  weeks. Most of these fix various hangs and loops that people found,
  but we also had a few error handling fixes.

  Stable Bugfixes:
   - fix infinite loop on BAD_STATEID error

  Other Bugfixes:
   - fix old dentry rehash after move
   - fix pnfs GETDEVINFO hangs
   - fix pnfs fallback to MDS on commit errors
   - fix flexfiles kernel oops""

* tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs:
  nfs: flexfiles: fix kernel OOPS if MDS returns unsupported DS type
  NFSv4.1 fix infinite loop on IO BAD_STATEID error
  PNFS fix fallback to MDS if got error on commit to DS
  NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes
  NFS store nfs4_deviceid in struct nfs4_filelayout_segment
  NFS cleanup struct nfs4_filelayout_segment
  NFS: Fix old dentry rehash after move",fs/nfs/filelayout/filelayout.c,+,"[[277223, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )']]","[[277224, None, u'CallExpression', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [277234, None, u'Callee', u'dprintk'], [277225, None, u'ArgumentList', u'""%s Bad first_stripe_index %u\\n""'], [277235, None, u'Identifier', u'dprintk'], [277232, None, u'Argument', u'""%s Bad first_stripe_index %u\\n""'], [277230, None, u'Argument', u'__func__'], [277226, None, u'Argument', u'fl -> first_stripe_index'], [277233, None, u'PrimaryExpression', u'""%s Bad first_stripe_index %u\\n""'], [277231, None, u'Identifier', u'__func__'], [277227, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [277229, None, u'Identifier', u'fl'], [277228, None, u'Identifier', u'first_stripe_index'], [277223, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [277237, None, u'RelationalExpression', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [277241, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [277238, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [277243, None, u'Identifier', u'fl'], [277242, None, u'Identifier', u'first_stripe_index'], [277240, None, u'Identifier', u'dsaddr'], [277239, None, u'Identifier', u'stripe_count'], [277236, u'True', u'Condition', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [277254, None, u'CallExpression', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [277262, None, u'Callee', u'filelayout_test_devid_unavailable'], [277255, None, u'ArgumentList', u'& dsaddr -> id_node'], [277263, None, u'Identifier', u'filelayout_test_devid_unavailable'], [277256, None, u'Argument', u'& dsaddr -> id_node'], [277257, None, u'UnaryOp', u'& dsaddr -> id_node'], [277261, None, u'UnaryOperator', u'&'], [277258, None, u'PtrMemberAccess', u'dsaddr -> id_node'], [277260, None, u'Identifier', u'dsaddr'], [277259, None, u'Identifier', u'id_node'], [277253, u'True', u'Condition', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [277280, None, u'EqualityExpression', u'd == NULL'], [277282, None, u'Identifier', u'd'], [277281, None, u'Identifier', u'NULL'], [277279, u'True', u'Condition', u'd == NULL'], [277328, u'True', u'CFGEntryNode', u'ENTRY']]","[[277224, None, u'CallExpression', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [277234, None, u'Callee', u'dprintk'], [277225, None, u'ArgumentList', u'""%s Bad first_stripe_index %u\\n""'], [277235, None, u'Identifier', u'dprintk'], [277232, None, u'Argument', u'""%s Bad first_stripe_index %u\\n""'], [277230, None, u'Argument', u'__func__'], [277226, None, u'Argument', u'fl -> first_stripe_index'], [277233, None, u'PrimaryExpression', u'""%s Bad first_stripe_index %u\\n""'], [277231, None, u'Identifier', u'__func__'], [277227, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [277229, None, u'Identifier', u'fl'], [277228, None, u'Identifier', u'first_stripe_index'], [277223, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [277143, None, u'ParameterType', u'struct nfs4_filelayout_segment *'], [277142, None, u'Identifier', u'fl'], [277141, u'True', u'Parameter', u'struct nfs4_filelayout_segment * fl'], [277245, None, u'AssignmentExpr', u'fl -> dsaddr = dsaddr'], [277247, None, u'PtrMemberAccess', u'fl -> dsaddr'], [277246, None, u'Identifier', u'dsaddr'], [277249, None, u'Identifier', u'fl'], [277248, None, u'Identifier', u'dsaddr'], [277244, u'True', u'ExpressionStatement', u'fl -> dsaddr = dsaddr'], [277321, None, u'IdentifierDecl', u'* dsaddr'], [277323, None, u'IdentifierDeclType', u'struct nfs4_file_layout_dsaddr *'], [277322, None, u'Identifier', u'dsaddr'], [277320, u'True', u'IdentifierDeclStatement', u'struct nfs4_file_layout_dsaddr * dsaddr ;']]"
"Merge tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs

Pull NFS client fixes from Anna Schumaker:
 ""Here are a few more bugfixes that came in over the last couple of
  weeks. Most of these fix various hangs and loops that people found,
  but we also had a few error handling fixes.

  Stable Bugfixes:
   - fix infinite loop on BAD_STATEID error

  Other Bugfixes:
   - fix old dentry rehash after move
   - fix pnfs GETDEVINFO hangs
   - fix pnfs fallback to MDS on commit errors
   - fix flexfiles kernel oops""

* tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs:
  nfs: flexfiles: fix kernel OOPS if MDS returns unsupported DS type
  NFSv4.1 fix infinite loop on IO BAD_STATEID error
  PNFS fix fallback to MDS if got error on commit to DS
  NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes
  NFS store nfs4_deviceid in struct nfs4_filelayout_segment
  NFS cleanup struct nfs4_filelayout_segment
  NFS: Fix old dentry rehash after move",fs/nfs/filelayout/filelayout.c,+,"[[277172, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )']]","[[277173, None, u'CallExpression', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [277183, None, u'Callee', u'dprintk'], [277174, None, u'ArgumentList', u'""%s num_fh %u not valid for given packing\\n""'], [277184, None, u'Identifier', u'dprintk'], [277181, None, u'Argument', u'""%s num_fh %u not valid for given packing\\n""'], [277179, None, u'Argument', u'__func__'], [277175, None, u'Argument', u'fl -> num_fh'], [277182, None, u'PrimaryExpression', u'""%s num_fh %u not valid for given packing\\n""'], [277180, None, u'Identifier', u'__func__'], [277176, None, u'PtrMemberAccess', u'fl -> num_fh'], [277178, None, u'Identifier', u'fl'], [277177, None, u'Identifier', u'num_fh'], [277172, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [277186, None, u'OrExpression', u'( fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num ) || ( fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count )'], [277200, None, u'AndExpression', u'fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num'], [277187, None, u'AndExpression', u'fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count'], [277214, None, u'EqualityExpression', u'fl -> stripe_type == STRIPE_SPARSE'], [277201, None, u'AndExpression', u'fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num'], [277195, None, u'EqualityExpression', u'fl -> stripe_type == STRIPE_DENSE'], [277188, None, u'EqualityExpression', u'fl -> num_fh != dsaddr -> stripe_count'], [277216, None, u'PtrMemberAccess', u'fl -> stripe_type'], [277215, None, u'Identifier', u'STRIPE_SPARSE'], [277209, None, u'RelationalExpression', u'fl -> num_fh > 1'], [277202, None, u'EqualityExpression', u'fl -> num_fh != dsaddr -> ds_num'], [277197, None, u'PtrMemberAccess', u'fl -> stripe_type'], [277196, None, u'Identifier', u'STRIPE_DENSE'], [277192, None, u'PtrMemberAccess', u'fl -> num_fh'], [277189, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [277218, None, u'Identifier', u'fl'], [277217, None, u'Identifier', u'stripe_type'], [277211, None, u'PtrMemberAccess', u'fl -> num_fh'], [277210, None, u'PrimaryExpression', u'1'], [277206, None, u'PtrMemberAccess', u'fl -> num_fh'], [277203, None, u'PtrMemberAccess', u'dsaddr -> ds_num'], [277199, None, u'Identifier', u'fl'], [277198, None, u'Identifier', u'stripe_type'], [277194, None, u'Identifier', u'fl'], [277193, None, u'Identifier', u'num_fh'], [277191, None, u'Identifier', u'dsaddr'], [277190, None, u'Identifier', u'stripe_count'], [277213, None, u'Identifier', u'fl'], [277212, None, u'Identifier', u'num_fh'], [277208, None, u'Identifier', u'fl'], [277207, None, u'Identifier', u'num_fh'], [277205, None, u'Identifier', u'dsaddr'], [277204, None, u'Identifier', u'ds_num'], [277185, u'True', u'Condition', u'( fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num ) || ( fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count )'], [277237, None, u'RelationalExpression', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [277241, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [277238, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [277243, None, u'Identifier', u'fl'], [277242, None, u'Identifier', u'first_stripe_index'], [277240, None, u'Identifier', u'dsaddr'], [277239, None, u'Identifier', u'stripe_count'], [277236, u'True', u'Condition', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [277254, None, u'CallExpression', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [277262, None, u'Callee', u'filelayout_test_devid_unavailable'], [277255, None, u'ArgumentList', u'& dsaddr -> id_node'], [277263, None, u'Identifier', u'filelayout_test_devid_unavailable'], [277256, None, u'Argument', u'& dsaddr -> id_node'], [277257, None, u'UnaryOp', u'& dsaddr -> id_node'], [277261, None, u'UnaryOperator', u'&'], [277258, None, u'PtrMemberAccess', u'dsaddr -> id_node'], [277260, None, u'Identifier', u'dsaddr'], [277259, None, u'Identifier', u'id_node'], [277253, u'True', u'Condition', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [277280, None, u'EqualityExpression', u'd == NULL'], [277282, None, u'Identifier', u'd'], [277281, None, u'Identifier', u'NULL'], [277279, u'True', u'Condition', u'd == NULL'], [277328, u'True', u'CFGEntryNode', u'ENTRY']]","[[277173, None, u'CallExpression', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [277183, None, u'Callee', u'dprintk'], [277174, None, u'ArgumentList', u'""%s num_fh %u not valid for given packing\\n""'], [277184, None, u'Identifier', u'dprintk'], [277181, None, u'Argument', u'""%s num_fh %u not valid for given packing\\n""'], [277179, None, u'Argument', u'__func__'], [277175, None, u'Argument', u'fl -> num_fh'], [277182, None, u'PrimaryExpression', u'""%s num_fh %u not valid for given packing\\n""'], [277180, None, u'Identifier', u'__func__'], [277176, None, u'PtrMemberAccess', u'fl -> num_fh'], [277178, None, u'Identifier', u'fl'], [277177, None, u'Identifier', u'num_fh'], [277172, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [277143, None, u'ParameterType', u'struct nfs4_filelayout_segment *'], [277142, None, u'Identifier', u'fl'], [277141, u'True', u'Parameter', u'struct nfs4_filelayout_segment * fl'], [277245, None, u'AssignmentExpr', u'fl -> dsaddr = dsaddr'], [277247, None, u'PtrMemberAccess', u'fl -> dsaddr'], [277246, None, u'Identifier', u'dsaddr'], [277249, None, u'Identifier', u'fl'], [277248, None, u'Identifier', u'dsaddr'], [277244, u'True', u'ExpressionStatement', u'fl -> dsaddr = dsaddr'], [277321, None, u'IdentifierDecl', u'* dsaddr'], [277323, None, u'IdentifierDeclType', u'struct nfs4_file_layout_dsaddr *'], [277322, None, u'Identifier', u'dsaddr'], [277320, u'True', u'IdentifierDeclStatement', u'struct nfs4_file_layout_dsaddr * dsaddr ;']]"
"Merge tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs

Pull NFS client fixes from Anna Schumaker:
 ""Here are a few more bugfixes that came in over the last couple of
  weeks. Most of these fix various hangs and loops that people found,
  but we also had a few error handling fixes.

  Stable Bugfixes:
   - fix infinite loop on BAD_STATEID error

  Other Bugfixes:
   - fix old dentry rehash after move
   - fix pnfs GETDEVINFO hangs
   - fix pnfs fallback to MDS on commit errors
   - fix flexfiles kernel oops""

* tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs:
  nfs: flexfiles: fix kernel OOPS if MDS returns unsupported DS type
  NFSv4.1 fix infinite loop on IO BAD_STATEID error
  PNFS fix fallback to MDS if got error on commit to DS
  NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes
  NFS store nfs4_deviceid in struct nfs4_filelayout_segment
  NFS cleanup struct nfs4_filelayout_segment
  NFS: Fix old dentry rehash after move",fs/nfs/filelayout/filelayout.c,-,"[[283452, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )']]","[[283453, None, u'CallExpression', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [283463, None, u'Callee', u'dprintk'], [283454, None, u'ArgumentList', u'""%s Bad first_stripe_index %u\\n""'], [283464, None, u'Identifier', u'dprintk'], [283461, None, u'Argument', u'""%s Bad first_stripe_index %u\\n""'], [283459, None, u'Argument', u'__func__'], [283455, None, u'Argument', u'fl -> first_stripe_index'], [283462, None, u'PrimaryExpression', u'""%s Bad first_stripe_index %u\\n""'], [283460, None, u'Identifier', u'__func__'], [283456, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [283458, None, u'Identifier', u'fl'], [283457, None, u'Identifier', u'first_stripe_index'], [283452, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [283466, None, u'RelationalExpression', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [283470, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [283467, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [283472, None, u'Identifier', u'fl'], [283471, None, u'Identifier', u'first_stripe_index'], [283469, None, u'Identifier', u'dsaddr'], [283468, None, u'Identifier', u'stripe_count'], [283465, u'True', u'Condition', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [283483, None, u'CallExpression', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [283491, None, u'Callee', u'filelayout_test_devid_unavailable'], [283484, None, u'ArgumentList', u'& dsaddr -> id_node'], [283492, None, u'Identifier', u'filelayout_test_devid_unavailable'], [283485, None, u'Argument', u'& dsaddr -> id_node'], [283486, None, u'UnaryOp', u'& dsaddr -> id_node'], [283490, None, u'UnaryOperator', u'&'], [283487, None, u'PtrMemberAccess', u'dsaddr -> id_node'], [283489, None, u'Identifier', u'dsaddr'], [283488, None, u'Identifier', u'id_node'], [283482, u'True', u'Condition', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [283509, None, u'EqualityExpression', u'd == NULL'], [283511, None, u'Identifier', u'd'], [283510, None, u'Identifier', u'NULL'], [283508, u'True', u'Condition', u'd == NULL'], [283554, None, u'UnaryOp', u'! fl -> stripe_unit'], [283558, None, u'UnaryOperator', u'!'], [283555, None, u'PtrMemberAccess', u'fl -> stripe_unit'], [283557, None, u'Identifier', u'fl'], [283556, None, u'Identifier', u'stripe_unit'], [283553, u'True', u'Condition', u'! fl -> stripe_unit'], [283577, None, u'RelationalExpression', u'fl -> pattern_offset > lgr -> range . offset'], [283583, None, u'PtrMemberAccess', u'fl -> pattern_offset'], [283578, None, u'MemberAccess', u'lgr -> range . offset'], [283585, None, u'Identifier', u'fl'], [283584, None, u'Identifier', u'pattern_offset'], [283580, None, u'PtrMemberAccess', u'lgr -> range'], [283579, None, u'Identifier', u'offset'], [283582, None, u'Identifier', u'lgr'], [283581, None, u'Identifier', u'range'], [283576, u'True', u'Condition', u'fl -> pattern_offset > lgr -> range . offset']]","[[283453, None, u'CallExpression', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [283463, None, u'Callee', u'dprintk'], [283454, None, u'ArgumentList', u'""%s Bad first_stripe_index %u\\n""'], [283464, None, u'Identifier', u'dprintk'], [283461, None, u'Argument', u'""%s Bad first_stripe_index %u\\n""'], [283459, None, u'Argument', u'__func__'], [283455, None, u'Argument', u'fl -> first_stripe_index'], [283462, None, u'PrimaryExpression', u'""%s Bad first_stripe_index %u\\n""'], [283460, None, u'Identifier', u'__func__'], [283456, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [283458, None, u'Identifier', u'fl'], [283457, None, u'Identifier', u'first_stripe_index'], [283452, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [283474, None, u'AssignmentExpr', u'fl -> dsaddr = dsaddr'], [283476, None, u'PtrMemberAccess', u'fl -> dsaddr'], [283475, None, u'Identifier', u'dsaddr'], [283478, None, u'Identifier', u'fl'], [283477, None, u'Identifier', u'dsaddr'], [283473, u'True', u'ExpressionStatement', u'fl -> dsaddr = dsaddr'], [283361, None, u'ParameterType', u'struct nfs4_filelayout_segment *'], [283360, None, u'Identifier', u'fl'], [283359, u'True', u'Parameter', u'struct nfs4_filelayout_segment * fl'], [283634, None, u'IdentifierDecl', u'* dsaddr'], [283636, None, u'IdentifierDeclType', u'struct nfs4_file_layout_dsaddr *'], [283635, None, u'Identifier', u'dsaddr'], [283633, u'True', u'IdentifierDeclStatement', u'struct nfs4_file_layout_dsaddr * dsaddr ;']]"
"Merge tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs

Pull NFS client fixes from Anna Schumaker:
 ""Here are a few more bugfixes that came in over the last couple of
  weeks. Most of these fix various hangs and loops that people found,
  but we also had a few error handling fixes.

  Stable Bugfixes:
   - fix infinite loop on BAD_STATEID error

  Other Bugfixes:
   - fix old dentry rehash after move
   - fix pnfs GETDEVINFO hangs
   - fix pnfs fallback to MDS on commit errors
   - fix flexfiles kernel oops""

* tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs:
  nfs: flexfiles: fix kernel OOPS if MDS returns unsupported DS type
  NFSv4.1 fix infinite loop on IO BAD_STATEID error
  PNFS fix fallback to MDS if got error on commit to DS
  NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes
  NFS store nfs4_deviceid in struct nfs4_filelayout_segment
  NFS cleanup struct nfs4_filelayout_segment
  NFS: Fix old dentry rehash after move",fs/nfs/filelayout/filelayout.c,-,"[[283401, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )']]","[[283402, None, u'CallExpression', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [283412, None, u'Callee', u'dprintk'], [283403, None, u'ArgumentList', u'""%s num_fh %u not valid for given packing\\n""'], [283413, None, u'Identifier', u'dprintk'], [283410, None, u'Argument', u'""%s num_fh %u not valid for given packing\\n""'], [283408, None, u'Argument', u'__func__'], [283404, None, u'Argument', u'fl -> num_fh'], [283411, None, u'PrimaryExpression', u'""%s num_fh %u not valid for given packing\\n""'], [283409, None, u'Identifier', u'__func__'], [283405, None, u'PtrMemberAccess', u'fl -> num_fh'], [283407, None, u'Identifier', u'fl'], [283406, None, u'Identifier', u'num_fh'], [283401, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [283415, None, u'OrExpression', u'( fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num ) || ( fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count )'], [283429, None, u'AndExpression', u'fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num'], [283416, None, u'AndExpression', u'fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count'], [283443, None, u'EqualityExpression', u'fl -> stripe_type == STRIPE_SPARSE'], [283430, None, u'AndExpression', u'fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num'], [283424, None, u'EqualityExpression', u'fl -> stripe_type == STRIPE_DENSE'], [283417, None, u'EqualityExpression', u'fl -> num_fh != dsaddr -> stripe_count'], [283445, None, u'PtrMemberAccess', u'fl -> stripe_type'], [283444, None, u'Identifier', u'STRIPE_SPARSE'], [283438, None, u'RelationalExpression', u'fl -> num_fh > 1'], [283431, None, u'EqualityExpression', u'fl -> num_fh != dsaddr -> ds_num'], [283426, None, u'PtrMemberAccess', u'fl -> stripe_type'], [283425, None, u'Identifier', u'STRIPE_DENSE'], [283421, None, u'PtrMemberAccess', u'fl -> num_fh'], [283418, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [283447, None, u'Identifier', u'fl'], [283446, None, u'Identifier', u'stripe_type'], [283440, None, u'PtrMemberAccess', u'fl -> num_fh'], [283439, None, u'PrimaryExpression', u'1'], [283435, None, u'PtrMemberAccess', u'fl -> num_fh'], [283432, None, u'PtrMemberAccess', u'dsaddr -> ds_num'], [283428, None, u'Identifier', u'fl'], [283427, None, u'Identifier', u'stripe_type'], [283423, None, u'Identifier', u'fl'], [283422, None, u'Identifier', u'num_fh'], [283420, None, u'Identifier', u'dsaddr'], [283419, None, u'Identifier', u'stripe_count'], [283442, None, u'Identifier', u'fl'], [283441, None, u'Identifier', u'num_fh'], [283437, None, u'Identifier', u'fl'], [283436, None, u'Identifier', u'num_fh'], [283434, None, u'Identifier', u'dsaddr'], [283433, None, u'Identifier', u'ds_num'], [283414, u'True', u'Condition', u'( fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num ) || ( fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count )'], [283466, None, u'RelationalExpression', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [283470, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [283467, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [283472, None, u'Identifier', u'fl'], [283471, None, u'Identifier', u'first_stripe_index'], [283469, None, u'Identifier', u'dsaddr'], [283468, None, u'Identifier', u'stripe_count'], [283465, u'True', u'Condition', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [283483, None, u'CallExpression', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [283491, None, u'Callee', u'filelayout_test_devid_unavailable'], [283484, None, u'ArgumentList', u'& dsaddr -> id_node'], [283492, None, u'Identifier', u'filelayout_test_devid_unavailable'], [283485, None, u'Argument', u'& dsaddr -> id_node'], [283486, None, u'UnaryOp', u'& dsaddr -> id_node'], [283490, None, u'UnaryOperator', u'&'], [283487, None, u'PtrMemberAccess', u'dsaddr -> id_node'], [283489, None, u'Identifier', u'dsaddr'], [283488, None, u'Identifier', u'id_node'], [283482, u'True', u'Condition', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [283509, None, u'EqualityExpression', u'd == NULL'], [283511, None, u'Identifier', u'd'], [283510, None, u'Identifier', u'NULL'], [283508, u'True', u'Condition', u'd == NULL'], [283554, None, u'UnaryOp', u'! fl -> stripe_unit'], [283558, None, u'UnaryOperator', u'!'], [283555, None, u'PtrMemberAccess', u'fl -> stripe_unit'], [283557, None, u'Identifier', u'fl'], [283556, None, u'Identifier', u'stripe_unit'], [283553, u'True', u'Condition', u'! fl -> stripe_unit']]","[[283402, None, u'CallExpression', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [283412, None, u'Callee', u'dprintk'], [283403, None, u'ArgumentList', u'""%s num_fh %u not valid for given packing\\n""'], [283413, None, u'Identifier', u'dprintk'], [283410, None, u'Argument', u'""%s num_fh %u not valid for given packing\\n""'], [283408, None, u'Argument', u'__func__'], [283404, None, u'Argument', u'fl -> num_fh'], [283411, None, u'PrimaryExpression', u'""%s num_fh %u not valid for given packing\\n""'], [283409, None, u'Identifier', u'__func__'], [283405, None, u'PtrMemberAccess', u'fl -> num_fh'], [283407, None, u'Identifier', u'fl'], [283406, None, u'Identifier', u'num_fh'], [283401, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [283474, None, u'AssignmentExpr', u'fl -> dsaddr = dsaddr'], [283476, None, u'PtrMemberAccess', u'fl -> dsaddr'], [283475, None, u'Identifier', u'dsaddr'], [283478, None, u'Identifier', u'fl'], [283477, None, u'Identifier', u'dsaddr'], [283473, u'True', u'ExpressionStatement', u'fl -> dsaddr = dsaddr'], [283361, None, u'ParameterType', u'struct nfs4_filelayout_segment *'], [283360, None, u'Identifier', u'fl'], [283359, u'True', u'Parameter', u'struct nfs4_filelayout_segment * fl'], [283634, None, u'IdentifierDecl', u'* dsaddr'], [283636, None, u'IdentifierDeclType', u'struct nfs4_file_layout_dsaddr *'], [283635, None, u'Identifier', u'dsaddr'], [283633, u'True', u'IdentifierDeclStatement', u'struct nfs4_file_layout_dsaddr * dsaddr ;']]"
"Merge tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs

Pull NFS client fixes from Anna Schumaker:
 ""Here are a few more bugfixes that came in over the last couple of
  weeks. Most of these fix various hangs and loops that people found,
  but we also had a few error handling fixes.

  Stable Bugfixes:
   - fix infinite loop on BAD_STATEID error

  Other Bugfixes:
   - fix old dentry rehash after move
   - fix pnfs GETDEVINFO hangs
   - fix pnfs fallback to MDS on commit errors
   - fix flexfiles kernel oops""

* tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs:
  nfs: flexfiles: fix kernel OOPS if MDS returns unsupported DS type
  NFSv4.1 fix infinite loop on IO BAD_STATEID error
  PNFS fix fallback to MDS if got error on commit to DS
  NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes
  NFS store nfs4_deviceid in struct nfs4_filelayout_segment
  NFS cleanup struct nfs4_filelayout_segment
  NFS: Fix old dentry rehash after move",fs/nfs/filelayout/filelayout.c,-,"[[284158, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( id )']]","[[284159, None, u'CallExpression', u'nfs4_print_deviceid ( id )'], [284163, None, u'Callee', u'nfs4_print_deviceid'], [284160, None, u'ArgumentList', u'id'], [284164, None, u'Identifier', u'nfs4_print_deviceid'], [284161, None, u'Argument', u'id'], [284162, None, u'Identifier', u'id'], [284158, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( id )'], [284193, None, u'CallExpression', u'unlikely ( ! p )'], [284199, None, u'Callee', u'unlikely'], [284194, None, u'ArgumentList', u'! p'], [284200, None, u'Identifier', u'unlikely'], [284195, None, u'Argument', u'! p'], [284196, None, u'UnaryOp', u'! p'], [284198, None, u'UnaryOperator', u'!'], [284197, None, u'Identifier', u'p'], [284192, u'True', u'Condition', u'unlikely ( ! p )'], [284265, None, u'UnaryOp', u'! scratch'], [284267, None, u'UnaryOperator', u'!'], [284266, None, u'Identifier', u'scratch'], [284264, u'True', u'Condition', u'! scratch'], [284310, u'True', u'CFGEntryNode', u'ENTRY']]","[[284159, None, u'CallExpression', u'nfs4_print_deviceid ( id )'], [284163, None, u'Callee', u'nfs4_print_deviceid'], [284160, None, u'ArgumentList', u'id'], [284164, None, u'Identifier', u'nfs4_print_deviceid'], [284161, None, u'Argument', u'id'], [284162, None, u'Identifier', u'id'], [284158, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( id )'], [283767, None, u'ParameterType', u'struct nfs4_deviceid *'], [283766, None, u'Identifier', u'id'], [283765, u'True', u'Parameter', u'struct nfs4_deviceid * id']]"
"Merge tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs

Pull NFS client fixes from Anna Schumaker:
 ""Here are a few more bugfixes that came in over the last couple of
  weeks. Most of these fix various hangs and loops that people found,
  but we also had a few error handling fixes.

  Stable Bugfixes:
   - fix infinite loop on BAD_STATEID error

  Other Bugfixes:
   - fix old dentry rehash after move
   - fix pnfs GETDEVINFO hangs
   - fix pnfs fallback to MDS on commit errors
   - fix flexfiles kernel oops""

* tag 'nfs-for-4.11-3' of git://git.linux-nfs.org/projects/anna/linux-nfs:
  nfs: flexfiles: fix kernel OOPS if MDS returns unsupported DS type
  NFSv4.1 fix infinite loop on IO BAD_STATEID error
  PNFS fix fallback to MDS if got error on commit to DS
  NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes
  NFS store nfs4_deviceid in struct nfs4_filelayout_segment
  NFS cleanup struct nfs4_filelayout_segment
  NFS: Fix old dentry rehash after move",fs/nfs/filelayout/filelayout.c,+,"[[277985, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( & fl -> deviceid )']]","[[277986, None, u'CallExpression', u'nfs4_print_deviceid ( & fl -> deviceid )'], [277994, None, u'Callee', u'nfs4_print_deviceid'], [277987, None, u'ArgumentList', u'& fl -> deviceid'], [277995, None, u'Identifier', u'nfs4_print_deviceid'], [277988, None, u'Argument', u'& fl -> deviceid'], [277989, None, u'UnaryOp', u'& fl -> deviceid'], [277993, None, u'UnaryOperator', u'&'], [277990, None, u'PtrMemberAccess', u'fl -> deviceid'], [277992, None, u'Identifier', u'fl'], [277991, None, u'Identifier', u'deviceid'], [277985, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( & fl -> deviceid )'], [278028, None, u'CallExpression', u'unlikely ( ! p )'], [278034, None, u'Callee', u'unlikely'], [278029, None, u'ArgumentList', u'! p'], [278035, None, u'Identifier', u'unlikely'], [278030, None, u'Argument', u'! p'], [278031, None, u'UnaryOp', u'! p'], [278033, None, u'UnaryOperator', u'!'], [278032, None, u'Identifier', u'p'], [278027, u'True', u'Condition', u'unlikely ( ! p )'], [278100, None, u'UnaryOp', u'! scratch'], [278102, None, u'UnaryOperator', u'!'], [278101, None, u'Identifier', u'scratch'], [278099, u'True', u'Condition', u'! scratch'], [278145, u'True', u'CFGEntryNode', u'ENTRY']]","[[277986, None, u'CallExpression', u'nfs4_print_deviceid ( & fl -> deviceid )'], [277994, None, u'Callee', u'nfs4_print_deviceid'], [277987, None, u'ArgumentList', u'& fl -> deviceid'], [277995, None, u'Identifier', u'nfs4_print_deviceid'], [277988, None, u'Argument', u'& fl -> deviceid'], [277989, None, u'UnaryOp', u'& fl -> deviceid'], [277993, None, u'UnaryOperator', u'&'], [277990, None, u'PtrMemberAccess', u'fl -> deviceid'], [277992, None, u'Identifier', u'fl'], [277991, None, u'Identifier', u'deviceid'], [277985, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( & fl -> deviceid )'], [277600, None, u'ParameterType', u'struct nfs4_filelayout_segment *'], [277599, None, u'Identifier', u'fl'], [277598, u'True', u'Parameter', u'struct nfs4_filelayout_segment * fl']]"
"Merge tag 'mmc-v4.11-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc

Pull MMC fixes from Ulf Hansson:
 ""Here are a couple of mmc fixes intended for v4.11 rc5.

  MMC host:
   - sdhci: Fix bug when using SDIO IRQ
   - sdhci-of-at91: Fix eMMC DDR52 card detection""

* tag 'mmc-v4.11-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc:
  mmc: sdhci-of-at91: fix MMC_DDR_52 timing selection
  mmc: sdhci: Disable runtime pm when the sdio_irq is enabled",drivers/mmc/host/sdhci-of-at91.c,+,"[[286793, u'True', u'ExpressionStatement', u'sdhci_writeb ( host , SDMMC_MC1R_DDR , SDMMC_MC1R )']]","[[286794, None, u'CallExpression', u'sdhci_writeb ( host , SDMMC_MC1R_DDR , SDMMC_MC1R )'], [286802, None, u'Callee', u'sdhci_writeb'], [286795, None, u'ArgumentList', u'host'], [286803, None, u'Identifier', u'sdhci_writeb'], [286800, None, u'Argument', u'host'], [286798, None, u'Argument', u'SDMMC_MC1R_DDR'], [286796, None, u'Argument', u'SDMMC_MC1R'], [286801, None, u'Identifier', u'host'], [286799, None, u'Identifier', u'SDMMC_MC1R_DDR'], [286797, None, u'Identifier', u'SDMMC_MC1R'], [286793, u'True', u'ExpressionStatement', u'sdhci_writeb ( host , SDMMC_MC1R_DDR , SDMMC_MC1R )'], [286805, None, u'EqualityExpression', u'timing == MMC_TIMING_MMC_DDR52'], [286807, None, u'Identifier', u'timing'], [286806, None, u'Identifier', u'MMC_TIMING_MMC_DDR52'], [286804, u'True', u'Condition', u'timing == MMC_TIMING_MMC_DDR52'], [286808, u'True', u'CFGEntryNode', u'ENTRY']]","[[286794, None, u'CallExpression', u'sdhci_writeb ( host , SDMMC_MC1R_DDR , SDMMC_MC1R )'], [286802, None, u'Callee', u'sdhci_writeb'], [286795, None, u'ArgumentList', u'host'], [286803, None, u'Identifier', u'sdhci_writeb'], [286800, None, u'Argument', u'host'], [286798, None, u'Argument', u'SDMMC_MC1R_DDR'], [286796, None, u'Argument', u'SDMMC_MC1R'], [286801, None, u'Identifier', u'host'], [286799, None, u'Identifier', u'SDMMC_MC1R_DDR'], [286797, None, u'Identifier', u'SDMMC_MC1R'], [286793, u'True', u'ExpressionStatement', u'sdhci_writeb ( host , SDMMC_MC1R_DDR , SDMMC_MC1R )'], [286780, None, u'ParameterType', u'struct sdhci_host *'], [286779, None, u'Identifier', u'host'], [286778, u'True', u'Parameter', u'struct sdhci_host * host']]"
"Merge tag 'sound-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound

Pull sound fixes from Takashi Iwai:
 ""At this time, most of changes are for ASoC, while we got one fix for
  yet another race of ALSA sequencer core and a usual HD-audio quirk.

  The ASoC changes are mostly small and device-specific fixes. A
  slightly large volume is seen in sun8i-codec, which is a new code in
  4.11, and we'd like to fix user-visible stuff before the official 4.1
  release""

* tag 'sound-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (27 commits)
  ALSA: hda - fix a problem for lineout on a Dell AIO machine
  ASoC: simple-card: fix simple_dai clk lookup
  ASoC: STI: Fix reader substream pointer set
  ALSA: seq: Fix race during FIFO resize
  ARM: dts: sun8i: Update audio-routing with renamed widgets
  ASoC: sun8i-codec: Convert to use SND_SOC_DAPM_AIF_IN
  ASoC: sun8i-codec: Fix space on audio-routing widget
  ASoC: sun8i-codec: Update mixer to use SOC_DAPM_DOUBLE
  ASoC: sun8i-codec: Remove analog ""HP"" widget
  ASoC: rt5665: fix wrong shift rt5665_if2_1_adc_in_enum
  ASoC: rt5665: fix define of RT5665_HP_DRIVER_5X
  ASoC: rcar: dma: remove unnecessary ""volatile""
  ASoC: rcar: clear DE bit only in PDMACHCR when it stops
  ASoC: rsnd: fix sound route path when using SRC6/SRC9
  ASoC: don't dereference NULL pcm_{new,free}
  ASoC: rt5665: CLKDET is also a power of ASRC
  ASoC: rt5665: Vref3 is necessary for Mono Amp
  ASoC: rt5665: increase LDO level
  ASoC: rt5665: fix getting wrong work handler container
  ASoC: atmel-classd: fix audio clock rate
  ...",sound/soc/sh/rcar/dma.c,+,"[[311183, u'True', u'ExpressionStatement', u'iowrite32 ( val , addr )']]","[[311184, None, u'CallExpression', u'iowrite32 ( val , addr )'], [311190, None, u'Callee', u'iowrite32'], [311185, None, u'ArgumentList', u'val'], [311191, None, u'Identifier', u'iowrite32'], [311188, None, u'Argument', u'val'], [311186, None, u'Argument', u'addr'], [311189, None, u'Identifier', u'val'], [311187, None, u'Identifier', u'addr'], [311183, u'True', u'ExpressionStatement', u'iowrite32 ( val , addr )'], [311266, u'True', u'CFGEntryNode', u'ENTRY']]","[[311184, None, u'CallExpression', u'iowrite32 ( val , addr )'], [311190, None, u'Callee', u'iowrite32'], [311185, None, u'ArgumentList', u'val'], [311191, None, u'Identifier', u'iowrite32'], [311188, None, u'Argument', u'val'], [311186, None, u'Argument', u'addr'], [311189, None, u'Identifier', u'val'], [311187, None, u'Identifier', u'addr'], [311183, u'True', u'ExpressionStatement', u'iowrite32 ( val , addr )'], [311215, None, u'IdentifierDecl', u'* addr = rsnd_dmapp_addr ( dmac , dma , reg )'], [311229, None, u'IdentifierDeclType', u'void __iomem *'], [311228, None, u'Identifier', u'addr'], [311216, None, u'AssignmentExpr', u'* addr = rsnd_dmapp_addr ( dmac , dma , reg )'], [311227, None, u'Identifier', u'addr'], [311217, None, u'CallExpression', u'rsnd_dmapp_addr ( dmac , dma , reg )'], [311225, None, u'Callee', u'rsnd_dmapp_addr'], [311218, None, u'ArgumentList', u'dmac'], [311226, None, u'Identifier', u'rsnd_dmapp_addr'], [311223, None, u'Argument', u'dmac'], [311221, None, u'Argument', u'dma'], [311219, None, u'Argument', u'reg'], [311224, None, u'Identifier', u'dmac'], [311222, None, u'Identifier', u'dma'], [311220, None, u'Identifier', u'reg'], [311214, u'True', u'IdentifierDeclStatement', u'void __iomem * addr = rsnd_dmapp_addr ( dmac , dma , reg ) ;'], [311193, None, u'AssignmentExpr', u'val |= ( data & mask )'], [311197, None, u'Identifier', u'val'], [311194, None, u'BitAndExpression', u'data & mask'], [311196, None, u'Identifier', u'data'], [311195, None, u'Identifier', u'mask'], [311192, u'True', u'ExpressionStatement', u'val |= ( data & mask )'], [311171, None, u'ParameterType', u'u32'], [311170, None, u'Identifier', u'reg'], [311169, u'True', u'Parameter', u'u32 reg'], [311180, None, u'ParameterType', u'struct rsnd_dma *'], [311179, None, u'Identifier', u'dma'], [311178, u'True', u'Parameter', u'struct rsnd_dma * dma'], [311231, None, u'IdentifierDecl', u'* dmac = rsnd_priv_to_dmac ( priv )'], [311241, None, u'IdentifierDeclType', u'struct rsnd_dma_ctrl *'], [311240, None, u'Identifier', u'dmac'], [311232, None, u'AssignmentExpr', u'* dmac = rsnd_priv_to_dmac ( priv )'], [311239, None, u'Identifier', u'dmac'], [311233, None, u'CallExpression', u'rsnd_priv_to_dmac ( priv )'], [311237, None, u'Callee', u'rsnd_priv_to_dmac'], [311234, None, u'ArgumentList', u'priv'], [311238, None, u'Identifier', u'rsnd_priv_to_dmac'], [311235, None, u'Argument', u'priv'], [311236, None, u'Identifier', u'priv'], [311230, u'True', u'IdentifierDeclStatement', u'struct rsnd_dma_ctrl * dmac = rsnd_priv_to_dmac ( priv ) ;'], [311174, None, u'ParameterType', u'u32'], [311173, None, u'Identifier', u'mask'], [311172, u'True', u'Parameter', u'u32 mask'], [311177, None, u'ParameterType', u'u32'], [311176, None, u'Identifier', u'data'], [311175, u'True', u'Parameter', u'u32 data'], [311199, None, u'AssignmentExpr', u'val &= ~mask'], [311201, None, u'Identifier', u'val'], [311200, None, u'Identifier', u'~mask'], [311198, u'True', u'ExpressionStatement', u'val &= ~mask'], [311243, None, u'IdentifierDecl', u'* priv = rsnd_mod_to_priv ( mod )'], [311253, None, u'IdentifierDeclType', u'struct rsnd_priv *'], [311252, None, u'Identifier', u'priv'], [311244, None, u'AssignmentExpr', u'* priv = rsnd_mod_to_priv ( mod )'], [311251, None, u'Identifier', u'priv'], [311245, None, u'CallExpression', u'rsnd_mod_to_priv ( mod )'], [311249, None, u'Callee', u'rsnd_mod_to_priv'], [311246, None, u'ArgumentList', u'mod'], [311250, None, u'Identifier', u'rsnd_mod_to_priv'], [311247, None, u'Argument', u'mod'], [311248, None, u'Identifier', u'mod'], [311242, u'True', u'IdentifierDeclStatement', u'struct rsnd_priv * priv = rsnd_mod_to_priv ( mod ) ;'], [311203, None, u'IdentifierDecl', u'val = ioread32 ( addr )'], [311213, None, u'IdentifierDeclType', u'u32'], [311212, None, u'Identifier', u'val'], [311204, None, u'AssignmentExpr', u'val = ioread32 ( addr )'], [311211, None, u'Identifier', u'val'], [311205, None, u'CallExpression', u'ioread32 ( addr )'], [311209, None, u'Callee', u'ioread32'], [311206, None, u'ArgumentList', u'addr'], [311210, None, u'Identifier', u'ioread32'], [311207, None, u'Argument', u'addr'], [311208, None, u'Identifier', u'addr'], [311202, u'True', u'IdentifierDeclStatement', u'u32 val = ioread32 ( addr ) ;'], [311255, None, u'IdentifierDecl', u'* mod = rsnd_mod_get ( dma )'], [311265, None, u'IdentifierDeclType', u'struct rsnd_mod *'], [311264, None, u'Identifier', u'mod'], [311256, None, u'AssignmentExpr', u'* mod = rsnd_mod_get ( dma )'], [311263, None, u'Identifier', u'mod'], [311257, None, u'CallExpression', u'rsnd_mod_get ( dma )'], [311261, None, u'Callee', u'rsnd_mod_get'], [311258, None, u'ArgumentList', u'dma'], [311262, None, u'Identifier', u'rsnd_mod_get'], [311259, None, u'Argument', u'dma'], [311260, None, u'Identifier', u'dma'], [311254, u'True', u'IdentifierDeclStatement', u'struct rsnd_mod * mod = rsnd_mod_get ( dma ) ;']]"
"Merge tag 'sound-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound

Pull sound fixes from Takashi Iwai:
 ""At this time, most of changes are for ASoC, while we got one fix for
  yet another race of ALSA sequencer core and a usual HD-audio quirk.

  The ASoC changes are mostly small and device-specific fixes. A
  slightly large volume is seen in sun8i-codec, which is a new code in
  4.11, and we'd like to fix user-visible stuff before the official 4.1
  release""

* tag 'sound-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (27 commits)
  ALSA: hda - fix a problem for lineout on a Dell AIO machine
  ASoC: simple-card: fix simple_dai clk lookup
  ASoC: STI: Fix reader substream pointer set
  ALSA: seq: Fix race during FIFO resize
  ARM: dts: sun8i: Update audio-routing with renamed widgets
  ASoC: sun8i-codec: Convert to use SND_SOC_DAPM_AIF_IN
  ASoC: sun8i-codec: Fix space on audio-routing widget
  ASoC: sun8i-codec: Update mixer to use SOC_DAPM_DOUBLE
  ASoC: sun8i-codec: Remove analog ""HP"" widget
  ASoC: rt5665: fix wrong shift rt5665_if2_1_adc_in_enum
  ASoC: rt5665: fix define of RT5665_HP_DRIVER_5X
  ASoC: rcar: dma: remove unnecessary ""volatile""
  ASoC: rcar: clear DE bit only in PDMACHCR when it stops
  ASoC: rsnd: fix sound route path when using SRC6/SRC9
  ASoC: don't dereference NULL pcm_{new,free}
  ASoC: rt5665: CLKDET is also a power of ASRC
  ASoC: rt5665: Vref3 is necessary for Mono Amp
  ASoC: rt5665: increase LDO level
  ASoC: rt5665: fix getting wrong work handler container
  ASoC: atmel-classd: fix audio clock rate
  ...",sound/soc/sh/rcar/dma.c,-,"[[315270, u'True', u'ExpressionStatement', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )']]","[[315271, None, u'CallExpression', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [315279, None, u'Callee', u'rsnd_dmapp_write'], [315272, None, u'ArgumentList', u'dma'], [315280, None, u'Identifier', u'rsnd_dmapp_write'], [315277, None, u'Argument', u'dma'], [315275, None, u'Argument', u'0'], [315273, None, u'Argument', u'PDMACHCR'], [315278, None, u'Identifier', u'dma'], [315276, None, u'PrimaryExpression', u'0'], [315274, None, u'Identifier', u'PDMACHCR'], [315270, u'True', u'ExpressionStatement', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [315297, u'True', u'CFGEntryNode', u'ENTRY']]","[[315271, None, u'CallExpression', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [315279, None, u'Callee', u'rsnd_dmapp_write'], [315272, None, u'ArgumentList', u'dma'], [315280, None, u'Identifier', u'rsnd_dmapp_write'], [315277, None, u'Argument', u'dma'], [315275, None, u'Argument', u'0'], [315273, None, u'Argument', u'PDMACHCR'], [315278, None, u'Identifier', u'dma'], [315276, None, u'PrimaryExpression', u'0'], [315274, None, u'Identifier', u'PDMACHCR'], [315270, u'True', u'ExpressionStatement', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [315286, None, u'IdentifierDecl', u'* dma = rsnd_mod_to_dma ( mod )'], [315296, None, u'IdentifierDeclType', u'struct rsnd_dma *'], [315295, None, u'Identifier', u'dma'], [315287, None, u'AssignmentExpr', u'* dma = rsnd_mod_to_dma ( mod )'], [315294, None, u'Identifier', u'dma'], [315288, None, u'CallExpression', u'rsnd_mod_to_dma ( mod )'], [315292, None, u'Callee', u'rsnd_mod_to_dma'], [315289, None, u'ArgumentList', u'mod'], [315293, None, u'Identifier', u'rsnd_mod_to_dma'], [315290, None, u'Argument', u'mod'], [315291, None, u'Identifier', u'mod'], [315285, u'True', u'IdentifierDeclStatement', u'struct rsnd_dma * dma = rsnd_mod_to_dma ( mod ) ;'], [315229, None, u'ParameterType', u'struct rsnd_mod *'], [315228, None, u'Identifier', u'mod'], [315227, u'True', u'Parameter', u'struct rsnd_mod * mod']]"
"Merge tag 'drm-fixes-for-v4.11-rc5' of git://people.freedesktop.org/~airlied/linux

Pull drm fixes from Dave Airlie:
 ""Seems to be quietening down, which means someone will make a liar of
  me for rc6.

  Just one vc4, one etnvaiv, one radeon, and a few i915 GVT fixes, and
  one i915 normal fixes""

* tag 'drm-fixes-for-v4.11-rc5' of git://people.freedesktop.org/~airlied/linux:
  drm/vc4: Allocate the right amount of space for boot-time CRTC state.
  drm/etnaviv: (re-)protect fence allocation with GPU mutex
  drm/radeon: Override fpfn for all VRAM placements in radeon_evict_flags
  drm/i915: Restore marking context objects as dirty on pinning
  drm/i915/gvt: Use force single submit flag to distinguish gvt request from i915 request
  drm/i915/gvt: set shadow entry to scratch page while p2m failed
  drm/i915/gvt: Fix guest fail to read EDID leading to black guest console issue.
  drm/i915/gvt: fix wrong offset when loading RCS mocs
  drm/i915/gvt: add write handler for mmio mbctl
  drm/i915/kvmgt: Hold struct kvm reference",drivers/gpu/drm/i915/gvt/handlers.c,+,"[[321983, u'True', u'Parameter', u'unsigned int offset'], [321986, u'True', u'Parameter', u'struct intel_vgpu * vgpu']]","[[321985, None, u'ParameterType', u'unsigned int'], [321984, None, u'Identifier', u'offset'], [321983, u'True', u'Parameter', u'unsigned int offset'], [322014, u'True', u'CFGEntryNode', u'ENTRY'], [321988, None, u'ParameterType', u'struct intel_vgpu *'], [321987, None, u'Identifier', u'vgpu'], [321986, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [322014, u'True', u'CFGEntryNode', u'ENTRY']]","[[321985, None, u'ParameterType', u'unsigned int'], [321984, None, u'Identifier', u'offset'], [321983, u'True', u'Parameter', u'unsigned int offset'], [321988, None, u'ParameterType', u'struct intel_vgpu *'], [321987, None, u'Identifier', u'vgpu'], [321986, u'True', u'Parameter', u'struct intel_vgpu * vgpu']]"
"Merge tag 'drm-fixes-for-v4.11-rc5' of git://people.freedesktop.org/~airlied/linux

Pull drm fixes from Dave Airlie:
 ""Seems to be quietening down, which means someone will make a liar of
  me for rc6.

  Just one vc4, one etnvaiv, one radeon, and a few i915 GVT fixes, and
  one i915 normal fixes""

* tag 'drm-fixes-for-v4.11-rc5' of git://people.freedesktop.org/~airlied/linux:
  drm/vc4: Allocate the right amount of space for boot-time CRTC state.
  drm/etnaviv: (re-)protect fence allocation with GPU mutex
  drm/radeon: Override fpfn for all VRAM placements in radeon_evict_flags
  drm/i915: Restore marking context objects as dirty on pinning
  drm/i915/gvt: Use force single submit flag to distinguish gvt request from i915 request
  drm/i915/gvt: set shadow entry to scratch page while p2m failed
  drm/i915/gvt: Fix guest fail to read EDID leading to black guest console issue.
  drm/i915/gvt: fix wrong offset when loading RCS mocs
  drm/i915/gvt: add write handler for mmio mbctl
  drm/i915/kvmgt: Hold struct kvm reference",drivers/gpu/drm/i915/gvt/handlers.c,+,"[[321993, u'True', u'ExpressionStatement', u'write_vreg ( vgpu , offset , p_data , bytes )']]","[[321994, None, u'CallExpression', u'write_vreg ( vgpu , offset , p_data , bytes )'], [322004, None, u'Callee', u'write_vreg'], [321995, None, u'ArgumentList', u'vgpu'], [322005, None, u'Identifier', u'write_vreg'], [322002, None, u'Argument', u'vgpu'], [322000, None, u'Argument', u'offset'], [321998, None, u'Argument', u'p_data'], [321996, None, u'Argument', u'bytes'], [322003, None, u'Identifier', u'vgpu'], [322001, None, u'Identifier', u'offset'], [321999, None, u'Identifier', u'p_data'], [321997, None, u'Identifier', u'bytes'], [321993, u'True', u'ExpressionStatement', u'write_vreg ( vgpu , offset , p_data , bytes )'], [322014, u'True', u'CFGEntryNode', u'ENTRY']]","[[321994, None, u'CallExpression', u'write_vreg ( vgpu , offset , p_data , bytes )'], [322004, None, u'Callee', u'write_vreg'], [321995, None, u'ArgumentList', u'vgpu'], [322005, None, u'Identifier', u'write_vreg'], [322002, None, u'Argument', u'vgpu'], [322000, None, u'Argument', u'offset'], [321998, None, u'Argument', u'p_data'], [321996, None, u'Argument', u'bytes'], [322003, None, u'Identifier', u'vgpu'], [322001, None, u'Identifier', u'offset'], [321999, None, u'Identifier', u'p_data'], [321997, None, u'Identifier', u'bytes'], [321993, u'True', u'ExpressionStatement', u'write_vreg ( vgpu , offset , p_data , bytes )'], [321982, None, u'ParameterType', u'void *'], [321981, None, u'Identifier', u'p_data'], [321980, u'True', u'Parameter', u'void * p_data'], [321985, None, u'ParameterType', u'unsigned int'], [321984, None, u'Identifier', u'offset'], [321983, u'True', u'Parameter', u'unsigned int offset'], [321988, None, u'ParameterType', u'struct intel_vgpu *'], [321987, None, u'Identifier', u'vgpu'], [321986, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [321979, None, u'ParameterType', u'unsigned int'], [321978, None, u'Identifier', u'bytes'], [321977, u'True', u'Parameter', u'unsigned int bytes']]"
"Merge tag 'drm-fixes-for-v4.11-rc5' of git://people.freedesktop.org/~airlied/linux

Pull drm fixes from Dave Airlie:
 ""Seems to be quietening down, which means someone will make a liar of
  me for rc6.

  Just one vc4, one etnvaiv, one radeon, and a few i915 GVT fixes, and
  one i915 normal fixes""

* tag 'drm-fixes-for-v4.11-rc5' of git://people.freedesktop.org/~airlied/linux:
  drm/vc4: Allocate the right amount of space for boot-time CRTC state.
  drm/etnaviv: (re-)protect fence allocation with GPU mutex
  drm/radeon: Override fpfn for all VRAM placements in radeon_evict_flags
  drm/i915: Restore marking context objects as dirty on pinning
  drm/i915/gvt: Use force single submit flag to distinguish gvt request from i915 request
  drm/i915/gvt: set shadow entry to scratch page while p2m failed
  drm/i915/gvt: Fix guest fail to read EDID leading to black guest console issue.
  drm/i915/gvt: fix wrong offset when loading RCS mocs
  drm/i915/gvt: add write handler for mmio mbctl
  drm/i915/kvmgt: Hold struct kvm reference",drivers/gpu/drm/i915/gvt/render.c,-,"[[364438, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )']]","[[364439, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [364452, None, u'Callee', u'I915_WRITE'], [364440, None, u'ArgumentList', u'l3_offset'], [364453, None, u'Identifier', u'I915_WRITE'], [364450, None, u'Argument', u'l3_offset'], [364441, None, u'Argument', u'vgpu_vreg ( vgpu , offset )'], [364451, None, u'Identifier', u'l3_offset'], [364442, None, u'CallExpression', u'vgpu_vreg ( vgpu , offset )'], [364448, None, u'Callee', u'vgpu_vreg'], [364443, None, u'ArgumentList', u'vgpu'], [364449, None, u'Identifier', u'vgpu_vreg'], [364446, None, u'Argument', u'vgpu'], [364444, None, u'Argument', u'offset'], [364447, None, u'Identifier', u'vgpu'], [364445, None, u'Identifier', u'offset'], [364438, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [364469, None, u'RelationalExpression', u'i < 32'], [364471, None, u'Identifier', u'i'], [364470, None, u'PrimaryExpression', u'32'], [364468, u'True', u'Condition', u'i < 32'], [364483, None, u'EqualityExpression', u'ring_id == RCS'], [364485, None, u'Identifier', u'ring_id'], [364484, None, u'Identifier', u'RCS'], [364482, u'True', u'Condition', u'ring_id == RCS'], [364552, None, u'UnaryOp', u'! IS_SKYLAKE ( dev_priv )'], [364559, None, u'UnaryOperator', u'!'], [364553, None, u'CallExpression', u'IS_SKYLAKE ( dev_priv )'], [364557, None, u'Callee', u'IS_SKYLAKE'], [364554, None, u'ArgumentList', u'dev_priv'], [364558, None, u'Identifier', u'IS_SKYLAKE'], [364555, None, u'Argument', u'dev_priv'], [364556, None, u'Identifier', u'dev_priv'], [364551, u'True', u'Condition', u'! IS_SKYLAKE ( dev_priv )'], [364563, None, u'CallExpression', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [364574, None, u'Callee', u'WARN_ON'], [364564, None, u'ArgumentList', u'ring_id >= ARRAY_SIZE ( regs )'], [364575, None, u'Identifier', u'WARN_ON'], [364565, None, u'Argument', u'ring_id >= ARRAY_SIZE ( regs )'], [364566, None, u'RelationalExpression', u'ring_id >= ARRAY_SIZE ( regs )'], [364573, None, u'Identifier', u'ring_id'], [364567, None, u'CallExpression', u'ARRAY_SIZE ( regs )'], [364571, None, u'Callee', u'ARRAY_SIZE'], [364568, None, u'ArgumentList', u'regs'], [364572, None, u'Identifier', u'ARRAY_SIZE'], [364569, None, u'Argument', u'regs'], [364570, None, u'Identifier', u'regs'], [364562, u'True', u'Condition', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [364635, u'True', u'CFGEntryNode', u'ENTRY']]","[[364439, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [364452, None, u'Callee', u'I915_WRITE'], [364440, None, u'ArgumentList', u'l3_offset'], [364453, None, u'Identifier', u'I915_WRITE'], [364450, None, u'Argument', u'l3_offset'], [364441, None, u'Argument', u'vgpu_vreg ( vgpu , offset )'], [364451, None, u'Identifier', u'l3_offset'], [364442, None, u'CallExpression', u'vgpu_vreg ( vgpu , offset )'], [364448, None, u'Callee', u'vgpu_vreg'], [364443, None, u'ArgumentList', u'vgpu'], [364449, None, u'Identifier', u'vgpu_vreg'], [364446, None, u'Argument', u'vgpu'], [364444, None, u'Argument', u'offset'], [364447, None, u'Identifier', u'vgpu'], [364445, None, u'Identifier', u'offset'], [364438, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [364542, None, u'AssignmentExpr', u'offset . reg = regs [ ring_id ]'], [364546, None, u'MemberAccess', u'offset . reg'], [364543, None, u'ArrayIndexing', u'regs [ ring_id ]'], [364548, None, u'Identifier', u'offset'], [364547, None, u'Identifier', u'reg'], [364545, None, u'Identifier', u'regs'], [364544, None, u'Identifier', u'ring_id'], [364541, u'True', u'ExpressionStatement', u'offset . reg = regs [ ring_id ]'], [364489, None, u'AssignmentExpr', u'offset . reg += 4'], [364491, None, u'MemberAccess', u'offset . reg'], [364490, None, u'PrimaryExpression', u'4'], [364493, None, u'Identifier', u'offset'], [364492, None, u'Identifier', u'reg'], [364488, u'True', u'ExpressionStatement', u'offset . reg += 4'], [364418, None, u'ParameterType', u'struct intel_vgpu *'], [364417, None, u'Identifier', u'vgpu'], [364416, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [364426, None, u'AssignmentExpr', u'l3_offset . reg += 4'], [364428, None, u'MemberAccess', u'l3_offset . reg'], [364427, None, u'PrimaryExpression', u'4'], [364430, None, u'Identifier', u'l3_offset'], [364429, None, u'Identifier', u'reg'], [364425, u'True', u'ExpressionStatement', u'l3_offset . reg += 4'], [364477, None, u'AssignmentExpr', u'l3_offset . reg = 0xb020'], [364479, None, u'MemberAccess', u'l3_offset . reg'], [364478, None, u'PrimaryExpression', u'0xb020'], [364481, None, u'Identifier', u'l3_offset'], [364480, None, u'Identifier', u'reg'], [364476, u'True', u'ExpressionStatement', u'l3_offset . reg = 0xb020'], [364621, None, u'IdentifierDecl', u'offset'], [364618, None, u'IdentifierDecl', u'l3_offset'], [364623, None, u'IdentifierDeclType', u'i915_reg_t'], [364622, None, u'Identifier', u'offset'], [364620, None, u'IdentifierDeclType', u'i915_reg_t'], [364619, None, u'Identifier', u'l3_offset'], [364617, u'True', u'IdentifierDeclStatement', u'i915_reg_t offset , l3_offset ;'], [364415, None, u'ParameterType', u'int'], [364414, None, u'Identifier', u'ring_id'], [364413, u'True', u'Parameter', u'int ring_id']]"
"Merge tag 'drm-fixes-for-v4.11-rc5' of git://people.freedesktop.org/~airlied/linux

Pull drm fixes from Dave Airlie:
 ""Seems to be quietening down, which means someone will make a liar of
  me for rc6.

  Just one vc4, one etnvaiv, one radeon, and a few i915 GVT fixes, and
  one i915 normal fixes""

* tag 'drm-fixes-for-v4.11-rc5' of git://people.freedesktop.org/~airlied/linux:
  drm/vc4: Allocate the right amount of space for boot-time CRTC state.
  drm/etnaviv: (re-)protect fence allocation with GPU mutex
  drm/radeon: Override fpfn for all VRAM placements in radeon_evict_flags
  drm/i915: Restore marking context objects as dirty on pinning
  drm/i915/gvt: Use force single submit flag to distinguish gvt request from i915 request
  drm/i915/gvt: set shadow entry to scratch page while p2m failed
  drm/i915/gvt: Fix guest fail to read EDID leading to black guest console issue.
  drm/i915/gvt: fix wrong offset when loading RCS mocs
  drm/i915/gvt: add write handler for mmio mbctl
  drm/i915/kvmgt: Hold struct kvm reference",drivers/gpu/drm/i915/gvt/render.c,+,"[[363110, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )']]","[[363111, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [363124, None, u'Callee', u'I915_WRITE'], [363112, None, u'ArgumentList', u'l3_offset'], [363125, None, u'Identifier', u'I915_WRITE'], [363122, None, u'Argument', u'l3_offset'], [363113, None, u'Argument', u'vgpu_vreg ( vgpu , l3_offset )'], [363123, None, u'Identifier', u'l3_offset'], [363114, None, u'CallExpression', u'vgpu_vreg ( vgpu , l3_offset )'], [363120, None, u'Callee', u'vgpu_vreg'], [363115, None, u'ArgumentList', u'vgpu'], [363121, None, u'Identifier', u'vgpu_vreg'], [363118, None, u'Argument', u'vgpu'], [363116, None, u'Argument', u'l3_offset'], [363119, None, u'Identifier', u'vgpu'], [363117, None, u'Identifier', u'l3_offset'], [363110, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [363141, None, u'RelationalExpression', u'i < 32'], [363143, None, u'Identifier', u'i'], [363142, None, u'PrimaryExpression', u'32'], [363140, u'True', u'Condition', u'i < 32'], [363155, None, u'EqualityExpression', u'ring_id == RCS'], [363157, None, u'Identifier', u'ring_id'], [363156, None, u'Identifier', u'RCS'], [363154, u'True', u'Condition', u'ring_id == RCS'], [363224, None, u'UnaryOp', u'! IS_SKYLAKE ( dev_priv )'], [363231, None, u'UnaryOperator', u'!'], [363225, None, u'CallExpression', u'IS_SKYLAKE ( dev_priv )'], [363229, None, u'Callee', u'IS_SKYLAKE'], [363226, None, u'ArgumentList', u'dev_priv'], [363230, None, u'Identifier', u'IS_SKYLAKE'], [363227, None, u'Argument', u'dev_priv'], [363228, None, u'Identifier', u'dev_priv'], [363223, u'True', u'Condition', u'! IS_SKYLAKE ( dev_priv )'], [363235, None, u'CallExpression', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [363246, None, u'Callee', u'WARN_ON'], [363236, None, u'ArgumentList', u'ring_id >= ARRAY_SIZE ( regs )'], [363247, None, u'Identifier', u'WARN_ON'], [363237, None, u'Argument', u'ring_id >= ARRAY_SIZE ( regs )'], [363238, None, u'RelationalExpression', u'ring_id >= ARRAY_SIZE ( regs )'], [363245, None, u'Identifier', u'ring_id'], [363239, None, u'CallExpression', u'ARRAY_SIZE ( regs )'], [363243, None, u'Callee', u'ARRAY_SIZE'], [363240, None, u'ArgumentList', u'regs'], [363244, None, u'Identifier', u'ARRAY_SIZE'], [363241, None, u'Argument', u'regs'], [363242, None, u'Identifier', u'regs'], [363234, u'True', u'Condition', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [363307, u'True', u'CFGEntryNode', u'ENTRY']]","[[363111, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [363124, None, u'Callee', u'I915_WRITE'], [363112, None, u'ArgumentList', u'l3_offset'], [363125, None, u'Identifier', u'I915_WRITE'], [363122, None, u'Argument', u'l3_offset'], [363113, None, u'Argument', u'vgpu_vreg ( vgpu , l3_offset )'], [363123, None, u'Identifier', u'l3_offset'], [363114, None, u'CallExpression', u'vgpu_vreg ( vgpu , l3_offset )'], [363120, None, u'Callee', u'vgpu_vreg'], [363115, None, u'ArgumentList', u'vgpu'], [363121, None, u'Identifier', u'vgpu_vreg'], [363118, None, u'Argument', u'vgpu'], [363116, None, u'Argument', u'l3_offset'], [363119, None, u'Identifier', u'vgpu'], [363117, None, u'Identifier', u'l3_offset'], [363110, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [363090, None, u'ParameterType', u'struct intel_vgpu *'], [363089, None, u'Identifier', u'vgpu'], [363088, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [363149, None, u'AssignmentExpr', u'l3_offset . reg = 0xb020'], [363151, None, u'MemberAccess', u'l3_offset . reg'], [363150, None, u'PrimaryExpression', u'0xb020'], [363153, None, u'Identifier', u'l3_offset'], [363152, None, u'Identifier', u'reg'], [363148, u'True', u'ExpressionStatement', u'l3_offset . reg = 0xb020'], [363098, None, u'AssignmentExpr', u'l3_offset . reg += 4'], [363100, None, u'MemberAccess', u'l3_offset . reg'], [363099, None, u'PrimaryExpression', u'4'], [363102, None, u'Identifier', u'l3_offset'], [363101, None, u'Identifier', u'reg'], [363097, u'True', u'ExpressionStatement', u'l3_offset . reg += 4'], [363293, None, u'IdentifierDecl', u'offset'], [363290, None, u'IdentifierDecl', u'l3_offset'], [363295, None, u'IdentifierDeclType', u'i915_reg_t'], [363294, None, u'Identifier', u'offset'], [363292, None, u'IdentifierDeclType', u'i915_reg_t'], [363291, None, u'Identifier', u'l3_offset'], [363289, u'True', u'IdentifierDeclStatement', u'i915_reg_t offset , l3_offset ;']]"
"tty/serial: atmel: fix TX path in atmel_console_write()

A side effect of 89d8232411a8 (""tty/serial: atmel_serial: BUG: stop DMA
from transmitting in stop_tx"") is that the console can be called with
TX path disabled. Then the system would hang trying to push charecters
out in atmel_console_putchar().

Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
Fixes: 89d8232411a8 (""tty/serial: atmel_serial: BUG: stop DMA from transmitting
in stop_tx"")
Cc: stable <stable@vger.kernel.org>	#4.4+
Acked-by: Richard Genoud <richard.genoud@gmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",drivers/tty/serial/atmel_serial.c,+,"[[376761, u'True', u'ExpressionStatement', u'atmel_uart_writel ( port , ATMEL_US_CR , ATMEL_US_TXEN )']]","[[376762, None, u'CallExpression', u'atmel_uart_writel ( port , ATMEL_US_CR , ATMEL_US_TXEN )'], [376770, None, u'Callee', u'atmel_uart_writel'], [376763, None, u'ArgumentList', u'port'], [376771, None, u'Identifier', u'atmel_uart_writel'], [376768, None, u'Argument', u'port'], [376766, None, u'Argument', u'ATMEL_US_CR'], [376764, None, u'Argument', u'ATMEL_US_TXEN'], [376769, None, u'Identifier', u'port'], [376767, None, u'Identifier', u'ATMEL_US_CR'], [376765, None, u'Identifier', u'ATMEL_US_TXEN'], [376761, u'True', u'ExpressionStatement', u'atmel_uart_writel ( port , ATMEL_US_CR , ATMEL_US_TXEN )'], [376860, u'True', u'CFGEntryNode', u'ENTRY']]","[[376762, None, u'CallExpression', u'atmel_uart_writel ( port , ATMEL_US_CR , ATMEL_US_TXEN )'], [376770, None, u'Callee', u'atmel_uart_writel'], [376763, None, u'ArgumentList', u'port'], [376771, None, u'Identifier', u'atmel_uart_writel'], [376768, None, u'Argument', u'port'], [376766, None, u'Argument', u'ATMEL_US_CR'], [376764, None, u'Argument', u'ATMEL_US_TXEN'], [376769, None, u'Identifier', u'port'], [376767, None, u'Identifier', u'ATMEL_US_CR'], [376765, None, u'Identifier', u'ATMEL_US_TXEN'], [376761, u'True', u'ExpressionStatement', u'atmel_uart_writel ( port , ATMEL_US_CR , ATMEL_US_TXEN )'], [376846, None, u'IdentifierDecl', u'* port = & atmel_ports [ co -> index ] . uart'], [376859, None, u'IdentifierDeclType', u'struct uart_port *'], [376858, None, u'Identifier', u'port'], [376847, None, u'AssignmentExpr', u'* port = & atmel_ports [ co -> index ] . uart'], [376857, None, u'Identifier', u'port'], [376848, None, u'UnaryOp', u'& atmel_ports [ co -> index ] . uart'], [376856, None, u'UnaryOperator', u'&'], [376849, None, u'MemberAccess', u'atmel_ports [ co -> index ] . uart'], [376851, None, u'ArrayIndexing', u'atmel_ports [ co -> index ]'], [376850, None, u'Identifier', u'uart'], [376855, None, u'Identifier', u'atmel_ports'], [376852, None, u'PtrMemberAccess', u'co -> index'], [376854, None, u'Identifier', u'co'], [376853, None, u'Identifier', u'index'], [376845, u'True', u'IdentifierDeclStatement', u'struct uart_port * port = & atmel_ports [ co -> index ] . uart ;'], [376701, None, u'ParameterType', u'struct console *'], [376700, None, u'Identifier', u'co'], [376699, u'True', u'Parameter', u'struct console * co']]"
"Merge tag 'drm-intel-fixes-2017-03-29' of git://anongit.freedesktop.org/git/drm-intel into drm-fixes

drm/i915 fixes for v4.11-rc5

* tag 'drm-intel-fixes-2017-03-29' of git://anongit.freedesktop.org/git/drm-intel:
  drm/i915: Restore marking context objects as dirty on pinning
  drm/i915/gvt: Use force single submit flag to distinguish gvt request from i915 request
  drm/i915/gvt: set shadow entry to scratch page while p2m failed
  drm/i915/gvt: Fix guest fail to read EDID leading to black guest console issue.
  drm/i915/gvt: fix wrong offset when loading RCS mocs
  drm/i915/gvt: add write handler for mmio mbctl
  drm/i915/kvmgt: Hold struct kvm reference",drivers/gpu/drm/i915/gvt/handlers.c,+,"[[397562, u'True', u'Parameter', u'unsigned int offset'], [397565, u'True', u'Parameter', u'struct intel_vgpu * vgpu']]","[[397564, None, u'ParameterType', u'unsigned int'], [397563, None, u'Identifier', u'offset'], [397562, u'True', u'Parameter', u'unsigned int offset'], [397593, u'True', u'CFGEntryNode', u'ENTRY'], [397567, None, u'ParameterType', u'struct intel_vgpu *'], [397566, None, u'Identifier', u'vgpu'], [397565, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [397593, u'True', u'CFGEntryNode', u'ENTRY']]","[[397564, None, u'ParameterType', u'unsigned int'], [397563, None, u'Identifier', u'offset'], [397562, u'True', u'Parameter', u'unsigned int offset'], [397567, None, u'ParameterType', u'struct intel_vgpu *'], [397566, None, u'Identifier', u'vgpu'], [397565, u'True', u'Parameter', u'struct intel_vgpu * vgpu']]"
"Merge tag 'drm-intel-fixes-2017-03-29' of git://anongit.freedesktop.org/git/drm-intel into drm-fixes

drm/i915 fixes for v4.11-rc5

* tag 'drm-intel-fixes-2017-03-29' of git://anongit.freedesktop.org/git/drm-intel:
  drm/i915: Restore marking context objects as dirty on pinning
  drm/i915/gvt: Use force single submit flag to distinguish gvt request from i915 request
  drm/i915/gvt: set shadow entry to scratch page while p2m failed
  drm/i915/gvt: Fix guest fail to read EDID leading to black guest console issue.
  drm/i915/gvt: fix wrong offset when loading RCS mocs
  drm/i915/gvt: add write handler for mmio mbctl
  drm/i915/kvmgt: Hold struct kvm reference",drivers/gpu/drm/i915/gvt/handlers.c,+,"[[397572, u'True', u'ExpressionStatement', u'write_vreg ( vgpu , offset , p_data , bytes )']]","[[397573, None, u'CallExpression', u'write_vreg ( vgpu , offset , p_data , bytes )'], [397583, None, u'Callee', u'write_vreg'], [397574, None, u'ArgumentList', u'vgpu'], [397584, None, u'Identifier', u'write_vreg'], [397581, None, u'Argument', u'vgpu'], [397579, None, u'Argument', u'offset'], [397577, None, u'Argument', u'p_data'], [397575, None, u'Argument', u'bytes'], [397582, None, u'Identifier', u'vgpu'], [397580, None, u'Identifier', u'offset'], [397578, None, u'Identifier', u'p_data'], [397576, None, u'Identifier', u'bytes'], [397572, u'True', u'ExpressionStatement', u'write_vreg ( vgpu , offset , p_data , bytes )'], [397593, u'True', u'CFGEntryNode', u'ENTRY']]","[[397573, None, u'CallExpression', u'write_vreg ( vgpu , offset , p_data , bytes )'], [397583, None, u'Callee', u'write_vreg'], [397574, None, u'ArgumentList', u'vgpu'], [397584, None, u'Identifier', u'write_vreg'], [397581, None, u'Argument', u'vgpu'], [397579, None, u'Argument', u'offset'], [397577, None, u'Argument', u'p_data'], [397575, None, u'Argument', u'bytes'], [397582, None, u'Identifier', u'vgpu'], [397580, None, u'Identifier', u'offset'], [397578, None, u'Identifier', u'p_data'], [397576, None, u'Identifier', u'bytes'], [397572, u'True', u'ExpressionStatement', u'write_vreg ( vgpu , offset , p_data , bytes )'], [397561, None, u'ParameterType', u'void *'], [397560, None, u'Identifier', u'p_data'], [397559, u'True', u'Parameter', u'void * p_data'], [397564, None, u'ParameterType', u'unsigned int'], [397563, None, u'Identifier', u'offset'], [397562, u'True', u'Parameter', u'unsigned int offset'], [397567, None, u'ParameterType', u'struct intel_vgpu *'], [397566, None, u'Identifier', u'vgpu'], [397565, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [397558, None, u'ParameterType', u'unsigned int'], [397557, None, u'Identifier', u'bytes'], [397556, u'True', u'Parameter', u'unsigned int bytes']]"
"Merge tag 'drm-intel-fixes-2017-03-29' of git://anongit.freedesktop.org/git/drm-intel into drm-fixes

drm/i915 fixes for v4.11-rc5

* tag 'drm-intel-fixes-2017-03-29' of git://anongit.freedesktop.org/git/drm-intel:
  drm/i915: Restore marking context objects as dirty on pinning
  drm/i915/gvt: Use force single submit flag to distinguish gvt request from i915 request
  drm/i915/gvt: set shadow entry to scratch page while p2m failed
  drm/i915/gvt: Fix guest fail to read EDID leading to black guest console issue.
  drm/i915/gvt: fix wrong offset when loading RCS mocs
  drm/i915/gvt: add write handler for mmio mbctl
  drm/i915/kvmgt: Hold struct kvm reference",drivers/gpu/drm/i915/gvt/render.c,-,"[[440017, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )']]","[[440018, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [440031, None, u'Callee', u'I915_WRITE'], [440019, None, u'ArgumentList', u'l3_offset'], [440032, None, u'Identifier', u'I915_WRITE'], [440029, None, u'Argument', u'l3_offset'], [440020, None, u'Argument', u'vgpu_vreg ( vgpu , offset )'], [440030, None, u'Identifier', u'l3_offset'], [440021, None, u'CallExpression', u'vgpu_vreg ( vgpu , offset )'], [440027, None, u'Callee', u'vgpu_vreg'], [440022, None, u'ArgumentList', u'vgpu'], [440028, None, u'Identifier', u'vgpu_vreg'], [440025, None, u'Argument', u'vgpu'], [440023, None, u'Argument', u'offset'], [440026, None, u'Identifier', u'vgpu'], [440024, None, u'Identifier', u'offset'], [440017, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [440048, None, u'RelationalExpression', u'i < 32'], [440050, None, u'Identifier', u'i'], [440049, None, u'PrimaryExpression', u'32'], [440047, u'True', u'Condition', u'i < 32'], [440062, None, u'EqualityExpression', u'ring_id == RCS'], [440064, None, u'Identifier', u'ring_id'], [440063, None, u'Identifier', u'RCS'], [440061, u'True', u'Condition', u'ring_id == RCS'], [440131, None, u'UnaryOp', u'! IS_SKYLAKE ( dev_priv )'], [440138, None, u'UnaryOperator', u'!'], [440132, None, u'CallExpression', u'IS_SKYLAKE ( dev_priv )'], [440136, None, u'Callee', u'IS_SKYLAKE'], [440133, None, u'ArgumentList', u'dev_priv'], [440137, None, u'Identifier', u'IS_SKYLAKE'], [440134, None, u'Argument', u'dev_priv'], [440135, None, u'Identifier', u'dev_priv'], [440130, u'True', u'Condition', u'! IS_SKYLAKE ( dev_priv )'], [440142, None, u'CallExpression', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [440153, None, u'Callee', u'WARN_ON'], [440143, None, u'ArgumentList', u'ring_id >= ARRAY_SIZE ( regs )'], [440154, None, u'Identifier', u'WARN_ON'], [440144, None, u'Argument', u'ring_id >= ARRAY_SIZE ( regs )'], [440145, None, u'RelationalExpression', u'ring_id >= ARRAY_SIZE ( regs )'], [440152, None, u'Identifier', u'ring_id'], [440146, None, u'CallExpression', u'ARRAY_SIZE ( regs )'], [440150, None, u'Callee', u'ARRAY_SIZE'], [440147, None, u'ArgumentList', u'regs'], [440151, None, u'Identifier', u'ARRAY_SIZE'], [440148, None, u'Argument', u'regs'], [440149, None, u'Identifier', u'regs'], [440141, u'True', u'Condition', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [440214, u'True', u'CFGEntryNode', u'ENTRY']]","[[440018, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [440031, None, u'Callee', u'I915_WRITE'], [440019, None, u'ArgumentList', u'l3_offset'], [440032, None, u'Identifier', u'I915_WRITE'], [440029, None, u'Argument', u'l3_offset'], [440020, None, u'Argument', u'vgpu_vreg ( vgpu , offset )'], [440030, None, u'Identifier', u'l3_offset'], [440021, None, u'CallExpression', u'vgpu_vreg ( vgpu , offset )'], [440027, None, u'Callee', u'vgpu_vreg'], [440022, None, u'ArgumentList', u'vgpu'], [440028, None, u'Identifier', u'vgpu_vreg'], [440025, None, u'Argument', u'vgpu'], [440023, None, u'Argument', u'offset'], [440026, None, u'Identifier', u'vgpu'], [440024, None, u'Identifier', u'offset'], [440017, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [440068, None, u'AssignmentExpr', u'offset . reg += 4'], [440070, None, u'MemberAccess', u'offset . reg'], [440069, None, u'PrimaryExpression', u'4'], [440072, None, u'Identifier', u'offset'], [440071, None, u'Identifier', u'reg'], [440067, u'True', u'ExpressionStatement', u'offset . reg += 4'], [440121, None, u'AssignmentExpr', u'offset . reg = regs [ ring_id ]'], [440125, None, u'MemberAccess', u'offset . reg'], [440122, None, u'ArrayIndexing', u'regs [ ring_id ]'], [440127, None, u'Identifier', u'offset'], [440126, None, u'Identifier', u'reg'], [440124, None, u'Identifier', u'regs'], [440123, None, u'Identifier', u'ring_id'], [440120, u'True', u'ExpressionStatement', u'offset . reg = regs [ ring_id ]'], [439997, None, u'ParameterType', u'struct intel_vgpu *'], [439996, None, u'Identifier', u'vgpu'], [439995, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [440056, None, u'AssignmentExpr', u'l3_offset . reg = 0xb020'], [440058, None, u'MemberAccess', u'l3_offset . reg'], [440057, None, u'PrimaryExpression', u'0xb020'], [440060, None, u'Identifier', u'l3_offset'], [440059, None, u'Identifier', u'reg'], [440055, u'True', u'ExpressionStatement', u'l3_offset . reg = 0xb020'], [440005, None, u'AssignmentExpr', u'l3_offset . reg += 4'], [440007, None, u'MemberAccess', u'l3_offset . reg'], [440006, None, u'PrimaryExpression', u'4'], [440009, None, u'Identifier', u'l3_offset'], [440008, None, u'Identifier', u'reg'], [440004, u'True', u'ExpressionStatement', u'l3_offset . reg += 4'], [440200, None, u'IdentifierDecl', u'offset'], [440197, None, u'IdentifierDecl', u'l3_offset'], [440202, None, u'IdentifierDeclType', u'i915_reg_t'], [440201, None, u'Identifier', u'offset'], [440199, None, u'IdentifierDeclType', u'i915_reg_t'], [440198, None, u'Identifier', u'l3_offset'], [440196, u'True', u'IdentifierDeclStatement', u'i915_reg_t offset , l3_offset ;'], [439994, None, u'ParameterType', u'int'], [439993, None, u'Identifier', u'ring_id'], [439992, u'True', u'Parameter', u'int ring_id']]"
"Merge tag 'drm-intel-fixes-2017-03-29' of git://anongit.freedesktop.org/git/drm-intel into drm-fixes

drm/i915 fixes for v4.11-rc5

* tag 'drm-intel-fixes-2017-03-29' of git://anongit.freedesktop.org/git/drm-intel:
  drm/i915: Restore marking context objects as dirty on pinning
  drm/i915/gvt: Use force single submit flag to distinguish gvt request from i915 request
  drm/i915/gvt: set shadow entry to scratch page while p2m failed
  drm/i915/gvt: Fix guest fail to read EDID leading to black guest console issue.
  drm/i915/gvt: fix wrong offset when loading RCS mocs
  drm/i915/gvt: add write handler for mmio mbctl
  drm/i915/kvmgt: Hold struct kvm reference",drivers/gpu/drm/i915/gvt/render.c,+,"[[438689, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )']]","[[438690, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [438703, None, u'Callee', u'I915_WRITE'], [438691, None, u'ArgumentList', u'l3_offset'], [438704, None, u'Identifier', u'I915_WRITE'], [438701, None, u'Argument', u'l3_offset'], [438692, None, u'Argument', u'vgpu_vreg ( vgpu , l3_offset )'], [438702, None, u'Identifier', u'l3_offset'], [438693, None, u'CallExpression', u'vgpu_vreg ( vgpu , l3_offset )'], [438699, None, u'Callee', u'vgpu_vreg'], [438694, None, u'ArgumentList', u'vgpu'], [438700, None, u'Identifier', u'vgpu_vreg'], [438697, None, u'Argument', u'vgpu'], [438695, None, u'Argument', u'l3_offset'], [438698, None, u'Identifier', u'vgpu'], [438696, None, u'Identifier', u'l3_offset'], [438689, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [438720, None, u'RelationalExpression', u'i < 32'], [438722, None, u'Identifier', u'i'], [438721, None, u'PrimaryExpression', u'32'], [438719, u'True', u'Condition', u'i < 32'], [438734, None, u'EqualityExpression', u'ring_id == RCS'], [438736, None, u'Identifier', u'ring_id'], [438735, None, u'Identifier', u'RCS'], [438733, u'True', u'Condition', u'ring_id == RCS'], [438803, None, u'UnaryOp', u'! IS_SKYLAKE ( dev_priv )'], [438810, None, u'UnaryOperator', u'!'], [438804, None, u'CallExpression', u'IS_SKYLAKE ( dev_priv )'], [438808, None, u'Callee', u'IS_SKYLAKE'], [438805, None, u'ArgumentList', u'dev_priv'], [438809, None, u'Identifier', u'IS_SKYLAKE'], [438806, None, u'Argument', u'dev_priv'], [438807, None, u'Identifier', u'dev_priv'], [438802, u'True', u'Condition', u'! IS_SKYLAKE ( dev_priv )'], [438814, None, u'CallExpression', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [438825, None, u'Callee', u'WARN_ON'], [438815, None, u'ArgumentList', u'ring_id >= ARRAY_SIZE ( regs )'], [438826, None, u'Identifier', u'WARN_ON'], [438816, None, u'Argument', u'ring_id >= ARRAY_SIZE ( regs )'], [438817, None, u'RelationalExpression', u'ring_id >= ARRAY_SIZE ( regs )'], [438824, None, u'Identifier', u'ring_id'], [438818, None, u'CallExpression', u'ARRAY_SIZE ( regs )'], [438822, None, u'Callee', u'ARRAY_SIZE'], [438819, None, u'ArgumentList', u'regs'], [438823, None, u'Identifier', u'ARRAY_SIZE'], [438820, None, u'Argument', u'regs'], [438821, None, u'Identifier', u'regs'], [438813, u'True', u'Condition', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [438886, u'True', u'CFGEntryNode', u'ENTRY']]","[[438690, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [438703, None, u'Callee', u'I915_WRITE'], [438691, None, u'ArgumentList', u'l3_offset'], [438704, None, u'Identifier', u'I915_WRITE'], [438701, None, u'Argument', u'l3_offset'], [438692, None, u'Argument', u'vgpu_vreg ( vgpu , l3_offset )'], [438702, None, u'Identifier', u'l3_offset'], [438693, None, u'CallExpression', u'vgpu_vreg ( vgpu , l3_offset )'], [438699, None, u'Callee', u'vgpu_vreg'], [438694, None, u'ArgumentList', u'vgpu'], [438700, None, u'Identifier', u'vgpu_vreg'], [438697, None, u'Argument', u'vgpu'], [438695, None, u'Argument', u'l3_offset'], [438698, None, u'Identifier', u'vgpu'], [438696, None, u'Identifier', u'l3_offset'], [438689, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [438669, None, u'ParameterType', u'struct intel_vgpu *'], [438668, None, u'Identifier', u'vgpu'], [438667, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [438677, None, u'AssignmentExpr', u'l3_offset . reg += 4'], [438679, None, u'MemberAccess', u'l3_offset . reg'], [438678, None, u'PrimaryExpression', u'4'], [438681, None, u'Identifier', u'l3_offset'], [438680, None, u'Identifier', u'reg'], [438676, u'True', u'ExpressionStatement', u'l3_offset . reg += 4'], [438728, None, u'AssignmentExpr', u'l3_offset . reg = 0xb020'], [438730, None, u'MemberAccess', u'l3_offset . reg'], [438729, None, u'PrimaryExpression', u'0xb020'], [438732, None, u'Identifier', u'l3_offset'], [438731, None, u'Identifier', u'reg'], [438727, u'True', u'ExpressionStatement', u'l3_offset . reg = 0xb020'], [438872, None, u'IdentifierDecl', u'offset'], [438869, None, u'IdentifierDecl', u'l3_offset'], [438874, None, u'IdentifierDeclType', u'i915_reg_t'], [438873, None, u'Identifier', u'offset'], [438871, None, u'IdentifierDeclType', u'i915_reg_t'], [438870, None, u'Identifier', u'l3_offset'], [438868, u'True', u'IdentifierDeclStatement', u'i915_reg_t offset , l3_offset ;']]"
"Merge tag 'pci-v4.11-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci

Pull PCI fixes from Bjorn Helgaas:

 - fix iProc memory corruption

 - fix ThunderX usage of unregistered PNP/ACPI ID

 - fix ThunderX resource reservation on early firmware

* tag 'pci-v4.11-fixes-3' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci:
  PCI: thunder-pem: Add legacy firmware support for Cavium ThunderX host controller
  PCI: thunder-pem: Use Cavium assigned hardware ID for ThunderX host controller
  PCI: iproc: Save host bridge window resource in struct iproc_pcie",drivers/pci/host/pci-thunder-pem.c,+,"[[442224, u'True', u'ExpressionStatement', u'regionid = kasprintf ( GFP_KERNEL , ""PEM RC:%d"" , seg )']]","[[442225, None, u'AssignmentExpr', u'regionid = kasprintf ( GFP_KERNEL , ""PEM RC:%d"" , seg )'], [442236, None, u'Identifier', u'regionid'], [442226, None, u'CallExpression', u'kasprintf ( GFP_KERNEL , ""PEM RC:%d"" , seg )'], [442234, None, u'Callee', u'kasprintf'], [442227, None, u'ArgumentList', u'GFP_KERNEL'], [442235, None, u'Identifier', u'kasprintf'], [442232, None, u'Argument', u'GFP_KERNEL'], [442230, None, u'Argument', u'""PEM RC:%d""'], [442228, None, u'Argument', u'seg'], [442233, None, u'Identifier', u'GFP_KERNEL'], [442231, None, u'PrimaryExpression', u'""PEM RC:%d""'], [442229, None, u'Identifier', u'seg'], [442224, u'True', u'ExpressionStatement', u'regionid = kasprintf ( GFP_KERNEL , ""PEM RC:%d"" , seg )'], [442262, u'True', u'CFGEntryNode', u'ENTRY']]","[[442225, None, u'AssignmentExpr', u'regionid = kasprintf ( GFP_KERNEL , ""PEM RC:%d"" , seg )'], [442236, None, u'Identifier', u'regionid'], [442226, None, u'CallExpression', u'kasprintf ( GFP_KERNEL , ""PEM RC:%d"" , seg )'], [442234, None, u'Callee', u'kasprintf'], [442227, None, u'ArgumentList', u'GFP_KERNEL'], [442235, None, u'Identifier', u'kasprintf'], [442232, None, u'Argument', u'GFP_KERNEL'], [442230, None, u'Argument', u'""PEM RC:%d""'], [442228, None, u'Argument', u'seg'], [442233, None, u'Identifier', u'GFP_KERNEL'], [442231, None, u'PrimaryExpression', u'""PEM RC:%d""'], [442229, None, u'Identifier', u'seg'], [442224, u'True', u'ExpressionStatement', u'regionid = kasprintf ( GFP_KERNEL , ""PEM RC:%d"" , seg )'], [442161, None, u'ParameterType', u'int'], [442160, None, u'Identifier', u'seg'], [442159, u'True', u'Parameter', u'int seg']]"
"mmc: sdhci-of-at91: fix MMC_DDR_52 timing selection

The controller has different timings for MMC_TIMING_UHS_DDR50 and
MMC_TIMING_MMC_DDR52. Configuring the controller with SDHCI_CTRL_UHS_DDR50,
when MMC_TIMING_MMC_DDR52 timings are requested, is not correct and can
lead to unexpected behavior.

Signed-off-by: Ludovic Desroches <ludovic.desroches@microchip.com>
Fixes: bb5f8ea4d514 (""mmc: sdhci-of-at91: introduce driver for the Atmel SDMMC"")
Cc: <stable@vger.kernel.org> # 4.4+
Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>",drivers/mmc/host/sdhci-of-at91.c,+,"[[444408, u'True', u'ExpressionStatement', u'sdhci_writeb ( host , SDMMC_MC1R_DDR , SDMMC_MC1R )']]","[[444409, None, u'CallExpression', u'sdhci_writeb ( host , SDMMC_MC1R_DDR , SDMMC_MC1R )'], [444417, None, u'Callee', u'sdhci_writeb'], [444410, None, u'ArgumentList', u'host'], [444418, None, u'Identifier', u'sdhci_writeb'], [444415, None, u'Argument', u'host'], [444413, None, u'Argument', u'SDMMC_MC1R_DDR'], [444411, None, u'Argument', u'SDMMC_MC1R'], [444416, None, u'Identifier', u'host'], [444414, None, u'Identifier', u'SDMMC_MC1R_DDR'], [444412, None, u'Identifier', u'SDMMC_MC1R'], [444408, u'True', u'ExpressionStatement', u'sdhci_writeb ( host , SDMMC_MC1R_DDR , SDMMC_MC1R )'], [444420, None, u'EqualityExpression', u'timing == MMC_TIMING_MMC_DDR52'], [444422, None, u'Identifier', u'timing'], [444421, None, u'Identifier', u'MMC_TIMING_MMC_DDR52'], [444419, u'True', u'Condition', u'timing == MMC_TIMING_MMC_DDR52'], [444423, u'True', u'CFGEntryNode', u'ENTRY']]","[[444409, None, u'CallExpression', u'sdhci_writeb ( host , SDMMC_MC1R_DDR , SDMMC_MC1R )'], [444417, None, u'Callee', u'sdhci_writeb'], [444410, None, u'ArgumentList', u'host'], [444418, None, u'Identifier', u'sdhci_writeb'], [444415, None, u'Argument', u'host'], [444413, None, u'Argument', u'SDMMC_MC1R_DDR'], [444411, None, u'Argument', u'SDMMC_MC1R'], [444416, None, u'Identifier', u'host'], [444414, None, u'Identifier', u'SDMMC_MC1R_DDR'], [444412, None, u'Identifier', u'SDMMC_MC1R'], [444408, u'True', u'ExpressionStatement', u'sdhci_writeb ( host , SDMMC_MC1R_DDR , SDMMC_MC1R )'], [444395, None, u'ParameterType', u'struct sdhci_host *'], [444394, None, u'Identifier', u'host'], [444393, u'True', u'Parameter', u'struct sdhci_host * host']]"
"Merge tag 'asoc-fix-v4.11-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into for-linus

ASoC: Fixes for v4.11

A relatively large pile of fixes for mainline, the first since the merge
window.  The biggest block of changes here by volume is the sun8i-codec
set, the driver was newly added in the merge window but it was realized
that renaming some of the user visible controls was required so these
are being pushed for v4.11 to avoid the original code appearing in a
release.  Otherwise it's all fairly standard bugfix stuff.",sound/soc/sh/rcar/dma.c,+,"[[449352, u'True', u'ExpressionStatement', u'iowrite32 ( val , addr )']]","[[449353, None, u'CallExpression', u'iowrite32 ( val , addr )'], [449359, None, u'Callee', u'iowrite32'], [449354, None, u'ArgumentList', u'val'], [449360, None, u'Identifier', u'iowrite32'], [449357, None, u'Argument', u'val'], [449355, None, u'Argument', u'addr'], [449358, None, u'Identifier', u'val'], [449356, None, u'Identifier', u'addr'], [449352, u'True', u'ExpressionStatement', u'iowrite32 ( val , addr )'], [449435, u'True', u'CFGEntryNode', u'ENTRY']]","[[449353, None, u'CallExpression', u'iowrite32 ( val , addr )'], [449359, None, u'Callee', u'iowrite32'], [449354, None, u'ArgumentList', u'val'], [449360, None, u'Identifier', u'iowrite32'], [449357, None, u'Argument', u'val'], [449355, None, u'Argument', u'addr'], [449358, None, u'Identifier', u'val'], [449356, None, u'Identifier', u'addr'], [449352, u'True', u'ExpressionStatement', u'iowrite32 ( val , addr )'], [449384, None, u'IdentifierDecl', u'* addr = rsnd_dmapp_addr ( dmac , dma , reg )'], [449398, None, u'IdentifierDeclType', u'void __iomem *'], [449397, None, u'Identifier', u'addr'], [449385, None, u'AssignmentExpr', u'* addr = rsnd_dmapp_addr ( dmac , dma , reg )'], [449396, None, u'Identifier', u'addr'], [449386, None, u'CallExpression', u'rsnd_dmapp_addr ( dmac , dma , reg )'], [449394, None, u'Callee', u'rsnd_dmapp_addr'], [449387, None, u'ArgumentList', u'dmac'], [449395, None, u'Identifier', u'rsnd_dmapp_addr'], [449392, None, u'Argument', u'dmac'], [449390, None, u'Argument', u'dma'], [449388, None, u'Argument', u'reg'], [449393, None, u'Identifier', u'dmac'], [449391, None, u'Identifier', u'dma'], [449389, None, u'Identifier', u'reg'], [449383, u'True', u'IdentifierDeclStatement', u'void __iomem * addr = rsnd_dmapp_addr ( dmac , dma , reg ) ;'], [449362, None, u'AssignmentExpr', u'val |= ( data & mask )'], [449366, None, u'Identifier', u'val'], [449363, None, u'BitAndExpression', u'data & mask'], [449365, None, u'Identifier', u'data'], [449364, None, u'Identifier', u'mask'], [449361, u'True', u'ExpressionStatement', u'val |= ( data & mask )'], [449340, None, u'ParameterType', u'u32'], [449339, None, u'Identifier', u'reg'], [449338, u'True', u'Parameter', u'u32 reg'], [449349, None, u'ParameterType', u'struct rsnd_dma *'], [449348, None, u'Identifier', u'dma'], [449347, u'True', u'Parameter', u'struct rsnd_dma * dma'], [449400, None, u'IdentifierDecl', u'* dmac = rsnd_priv_to_dmac ( priv )'], [449410, None, u'IdentifierDeclType', u'struct rsnd_dma_ctrl *'], [449409, None, u'Identifier', u'dmac'], [449401, None, u'AssignmentExpr', u'* dmac = rsnd_priv_to_dmac ( priv )'], [449408, None, u'Identifier', u'dmac'], [449402, None, u'CallExpression', u'rsnd_priv_to_dmac ( priv )'], [449406, None, u'Callee', u'rsnd_priv_to_dmac'], [449403, None, u'ArgumentList', u'priv'], [449407, None, u'Identifier', u'rsnd_priv_to_dmac'], [449404, None, u'Argument', u'priv'], [449405, None, u'Identifier', u'priv'], [449399, u'True', u'IdentifierDeclStatement', u'struct rsnd_dma_ctrl * dmac = rsnd_priv_to_dmac ( priv ) ;'], [449343, None, u'ParameterType', u'u32'], [449342, None, u'Identifier', u'mask'], [449341, u'True', u'Parameter', u'u32 mask'], [449346, None, u'ParameterType', u'u32'], [449345, None, u'Identifier', u'data'], [449344, u'True', u'Parameter', u'u32 data'], [449368, None, u'AssignmentExpr', u'val &= ~mask'], [449370, None, u'Identifier', u'val'], [449369, None, u'Identifier', u'~mask'], [449367, u'True', u'ExpressionStatement', u'val &= ~mask'], [449412, None, u'IdentifierDecl', u'* priv = rsnd_mod_to_priv ( mod )'], [449422, None, u'IdentifierDeclType', u'struct rsnd_priv *'], [449421, None, u'Identifier', u'priv'], [449413, None, u'AssignmentExpr', u'* priv = rsnd_mod_to_priv ( mod )'], [449420, None, u'Identifier', u'priv'], [449414, None, u'CallExpression', u'rsnd_mod_to_priv ( mod )'], [449418, None, u'Callee', u'rsnd_mod_to_priv'], [449415, None, u'ArgumentList', u'mod'], [449419, None, u'Identifier', u'rsnd_mod_to_priv'], [449416, None, u'Argument', u'mod'], [449417, None, u'Identifier', u'mod'], [449411, u'True', u'IdentifierDeclStatement', u'struct rsnd_priv * priv = rsnd_mod_to_priv ( mod ) ;'], [449372, None, u'IdentifierDecl', u'val = ioread32 ( addr )'], [449382, None, u'IdentifierDeclType', u'u32'], [449381, None, u'Identifier', u'val'], [449373, None, u'AssignmentExpr', u'val = ioread32 ( addr )'], [449380, None, u'Identifier', u'val'], [449374, None, u'CallExpression', u'ioread32 ( addr )'], [449378, None, u'Callee', u'ioread32'], [449375, None, u'ArgumentList', u'addr'], [449379, None, u'Identifier', u'ioread32'], [449376, None, u'Argument', u'addr'], [449377, None, u'Identifier', u'addr'], [449371, u'True', u'IdentifierDeclStatement', u'u32 val = ioread32 ( addr ) ;'], [449424, None, u'IdentifierDecl', u'* mod = rsnd_mod_get ( dma )'], [449434, None, u'IdentifierDeclType', u'struct rsnd_mod *'], [449433, None, u'Identifier', u'mod'], [449425, None, u'AssignmentExpr', u'* mod = rsnd_mod_get ( dma )'], [449432, None, u'Identifier', u'mod'], [449426, None, u'CallExpression', u'rsnd_mod_get ( dma )'], [449430, None, u'Callee', u'rsnd_mod_get'], [449427, None, u'ArgumentList', u'dma'], [449431, None, u'Identifier', u'rsnd_mod_get'], [449428, None, u'Argument', u'dma'], [449429, None, u'Identifier', u'dma'], [449423, u'True', u'IdentifierDeclStatement', u'struct rsnd_mod * mod = rsnd_mod_get ( dma ) ;']]"
"Merge tag 'asoc-fix-v4.11-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into for-linus

ASoC: Fixes for v4.11

A relatively large pile of fixes for mainline, the first since the merge
window.  The biggest block of changes here by volume is the sun8i-codec
set, the driver was newly added in the merge window but it was realized
that renaming some of the user visible controls was required so these
are being pushed for v4.11 to avoid the original code appearing in a
release.  Otherwise it's all fairly standard bugfix stuff.",sound/soc/sh/rcar/dma.c,-,"[[453439, u'True', u'ExpressionStatement', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )']]","[[453440, None, u'CallExpression', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [453448, None, u'Callee', u'rsnd_dmapp_write'], [453441, None, u'ArgumentList', u'dma'], [453449, None, u'Identifier', u'rsnd_dmapp_write'], [453446, None, u'Argument', u'dma'], [453444, None, u'Argument', u'0'], [453442, None, u'Argument', u'PDMACHCR'], [453447, None, u'Identifier', u'dma'], [453445, None, u'PrimaryExpression', u'0'], [453443, None, u'Identifier', u'PDMACHCR'], [453439, u'True', u'ExpressionStatement', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [453466, u'True', u'CFGEntryNode', u'ENTRY']]","[[453440, None, u'CallExpression', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [453448, None, u'Callee', u'rsnd_dmapp_write'], [453441, None, u'ArgumentList', u'dma'], [453449, None, u'Identifier', u'rsnd_dmapp_write'], [453446, None, u'Argument', u'dma'], [453444, None, u'Argument', u'0'], [453442, None, u'Argument', u'PDMACHCR'], [453447, None, u'Identifier', u'dma'], [453445, None, u'PrimaryExpression', u'0'], [453443, None, u'Identifier', u'PDMACHCR'], [453439, u'True', u'ExpressionStatement', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [453455, None, u'IdentifierDecl', u'* dma = rsnd_mod_to_dma ( mod )'], [453465, None, u'IdentifierDeclType', u'struct rsnd_dma *'], [453464, None, u'Identifier', u'dma'], [453456, None, u'AssignmentExpr', u'* dma = rsnd_mod_to_dma ( mod )'], [453463, None, u'Identifier', u'dma'], [453457, None, u'CallExpression', u'rsnd_mod_to_dma ( mod )'], [453461, None, u'Callee', u'rsnd_mod_to_dma'], [453458, None, u'ArgumentList', u'mod'], [453462, None, u'Identifier', u'rsnd_mod_to_dma'], [453459, None, u'Argument', u'mod'], [453460, None, u'Identifier', u'mod'], [453454, u'True', u'IdentifierDeclStatement', u'struct rsnd_dma * dma = rsnd_mod_to_dma ( mod ) ;'], [453398, None, u'ParameterType', u'struct rsnd_mod *'], [453397, None, u'Identifier', u'mod'], [453396, u'True', u'Parameter', u'struct rsnd_mod * mod']]"
"drm/vmwgfx: Remove getparam error message

The mesa winsys sometimes uses unimplemented parameter requests to
check for features. Remove the error message to avoid bloating the
kernel log.

Cc: <stable@vger.kernel.org>
Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
Reviewed-by: Brian Paul <brianp@vmware.com>
Reviewed-by: Sinclair Yeh <syeh@vmware.com>",drivers/gpu/drm/vmwgfx/vmwgfx_ioctl.c,-,"[[457552, u'True', u'ExpressionStatement', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )']]","[[457553, None, u'CallExpression', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [457561, None, u'Callee', u'DRM_ERROR'], [457554, None, u'ArgumentList', u'""Illegal vmwgfx get param request: %d\\n""'], [457562, None, u'Identifier', u'DRM_ERROR'], [457559, None, u'Argument', u'""Illegal vmwgfx get param request: %d\\n""'], [457555, None, u'Argument', u'param -> param'], [457560, None, u'PrimaryExpression', u'""Illegal vmwgfx get param request: %d\\n""'], [457556, None, u'PtrMemberAccess', u'param -> param'], [457558, None, u'Identifier', u'param'], [457557, None, u'Identifier', u'param'], [457552, u'True', u'ExpressionStatement', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [457857, None, u'PtrMemberAccess', u'param -> param'], [457859, None, u'Identifier', u'param'], [457858, None, u'Identifier', u'param'], [457856, u'True', u'Condition', u'param -> param'], [457893, u'True', u'CFGEntryNode', u'ENTRY']]","[[457553, None, u'CallExpression', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [457561, None, u'Callee', u'DRM_ERROR'], [457554, None, u'ArgumentList', u'""Illegal vmwgfx get param request: %d\\n""'], [457562, None, u'Identifier', u'DRM_ERROR'], [457559, None, u'Argument', u'""Illegal vmwgfx get param request: %d\\n""'], [457555, None, u'Argument', u'param -> param'], [457560, None, u'PrimaryExpression', u'""Illegal vmwgfx get param request: %d\\n""'], [457556, None, u'PtrMemberAccess', u'param -> param'], [457558, None, u'Identifier', u'param'], [457557, None, u'Identifier', u'param'], [457552, u'True', u'ExpressionStatement', u'DRM_ERROR ( ""Illegal vmwgfx get param request: %d\\n"" , param -> param )'], [457873, None, u'IdentifierDecl', u'* param = ( struct drm_vmw_getparam_arg * ) data'], [457880, None, u'IdentifierDeclType', u'struct drm_vmw_getparam_arg *'], [457879, None, u'Identifier', u'param'], [457874, None, u'AssignmentExpr', u'* param = ( struct drm_vmw_getparam_arg * ) data'], [457878, None, u'Identifier', u'param'], [457875, None, u'CastExpression', u'( struct drm_vmw_getparam_arg * ) data'], [457877, None, u'CastTarget', u'struct drm_vmw_getparam_arg *'], [457876, None, u'Identifier', u'data'], [457872, u'True', u'IdentifierDeclStatement', u'struct drm_vmw_getparam_arg * param = ( struct drm_vmw_getparam_arg * ) data ;'], [457538, None, u'ParameterType', u'void *'], [457537, None, u'Identifier', u'data'], [457536, u'True', u'Parameter', u'void * data']]"
"drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces

Previously, when a surface was opened using a legacy (non prime) handle,
it was verified to have been created by a client in the same master realm.
Relax this so that opening is also allowed recursively if the client
already has the surface open.

This works around a regression in svga mesa where opening of a shared
surface is used recursively to obtain surface information.

Cc: <stable@vger.kernel.org>
Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
Reviewed-by: Sinclair Yeh <syeh@vmware.com>",drivers/gpu/drm/vmwgfx/vmwgfx_surface.c,-,"[[483707, u'True', u'Statement', u'""Render client refused legacy ""'], [483708, u'True', u'Statement', u'('], [483709, u'True', u'Statement', u'DRM_ERROR']]","[[483707, u'True', u'Statement', u'""Render client refused legacy ""'], [483711, None, u'CallExpression', u'unlikely ( drm_is_render_client ( file_priv ) )'], [483720, None, u'Callee', u'unlikely'], [483712, None, u'ArgumentList', u'drm_is_render_client ( file_priv )'], [483721, None, u'Identifier', u'unlikely'], [483713, None, u'Argument', u'drm_is_render_client ( file_priv )'], [483714, None, u'CallExpression', u'drm_is_render_client ( file_priv )'], [483718, None, u'Callee', u'drm_is_render_client'], [483715, None, u'ArgumentList', u'file_priv'], [483719, None, u'Identifier', u'drm_is_render_client'], [483716, None, u'Argument', u'file_priv'], [483717, None, u'Identifier', u'file_priv'], [483710, u'True', u'Condition', u'unlikely ( drm_is_render_client ( file_priv ) )'], [483751, None, u'EqualityExpression', u'handle_type == DRM_VMW_HANDLE_PRIME'], [483753, None, u'Identifier', u'handle_type'], [483752, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [483750, u'True', u'Condition', u'handle_type == DRM_VMW_HANDLE_PRIME'], [483784, u'True', u'CFGEntryNode', u'ENTRY'], [483708, u'True', u'Statement', u'('], [483711, None, u'CallExpression', u'unlikely ( drm_is_render_client ( file_priv ) )'], [483720, None, u'Callee', u'unlikely'], [483712, None, u'ArgumentList', u'drm_is_render_client ( file_priv )'], [483721, None, u'Identifier', u'unlikely'], [483713, None, u'Argument', u'drm_is_render_client ( file_priv )'], [483714, None, u'CallExpression', u'drm_is_render_client ( file_priv )'], [483718, None, u'Callee', u'drm_is_render_client'], [483715, None, u'ArgumentList', u'file_priv'], [483719, None, u'Identifier', u'drm_is_render_client'], [483716, None, u'Argument', u'file_priv'], [483717, None, u'Identifier', u'file_priv'], [483710, u'True', u'Condition', u'unlikely ( drm_is_render_client ( file_priv ) )'], [483751, None, u'EqualityExpression', u'handle_type == DRM_VMW_HANDLE_PRIME'], [483753, None, u'Identifier', u'handle_type'], [483752, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [483750, u'True', u'Condition', u'handle_type == DRM_VMW_HANDLE_PRIME'], [483784, u'True', u'CFGEntryNode', u'ENTRY'], [483709, u'True', u'Statement', u'DRM_ERROR'], [483711, None, u'CallExpression', u'unlikely ( drm_is_render_client ( file_priv ) )'], [483720, None, u'Callee', u'unlikely'], [483712, None, u'ArgumentList', u'drm_is_render_client ( file_priv )'], [483721, None, u'Identifier', u'unlikely'], [483713, None, u'Argument', u'drm_is_render_client ( file_priv )'], [483714, None, u'CallExpression', u'drm_is_render_client ( file_priv )'], [483718, None, u'Callee', u'drm_is_render_client'], [483715, None, u'ArgumentList', u'file_priv'], [483719, None, u'Identifier', u'drm_is_render_client'], [483716, None, u'Argument', u'file_priv'], [483717, None, u'Identifier', u'file_priv'], [483710, u'True', u'Condition', u'unlikely ( drm_is_render_client ( file_priv ) )'], [483751, None, u'EqualityExpression', u'handle_type == DRM_VMW_HANDLE_PRIME'], [483753, None, u'Identifier', u'handle_type'], [483752, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [483750, u'True', u'Condition', u'handle_type == DRM_VMW_HANDLE_PRIME'], [483784, u'True', u'CFGEntryNode', u'ENTRY']]","[[483707, u'True', u'Statement', u'""Render client refused legacy ""'], [483708, u'True', u'Statement', u'('], [483709, u'True', u'Statement', u'DRM_ERROR']]"
"drm/ttm, drm/vmwgfx: Relax permission checking when opening surfaces

Previously, when a surface was opened using a legacy (non prime) handle,
it was verified to have been created by a client in the same master realm.
Relax this so that opening is also allowed recursively if the client
already has the surface open.

This works around a regression in svga mesa where opening of a shared
surface is used recursively to obtain surface information.

Cc: <stable@vger.kernel.org>
Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
Reviewed-by: Sinclair Yeh <syeh@vmware.com>",drivers/gpu/drm/vmwgfx/vmwgfx_surface.c,-,"[[483565, u'True', u'Statement', u'""Trying to reference surface outside of""'], [483566, u'True', u'Statement', u'('], [483567, u'True', u'Statement', u'DRM_ERROR']]","[[483565, u'True', u'Statement', u'""Trying to reference surface outside of""'], [483569, None, u'AndExpression', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [483577, None, u'CallExpression', u'drm_is_primary_client ( file_priv )'], [483570, None, u'EqualityExpression', u'user_srf -> master != file_priv -> master'], [483581, None, u'Callee', u'drm_is_primary_client'], [483578, None, u'ArgumentList', u'file_priv'], [483574, None, u'PtrMemberAccess', u'user_srf -> master'], [483571, None, u'PtrMemberAccess', u'file_priv -> master'], [483582, None, u'Identifier', u'drm_is_primary_client'], [483579, None, u'Argument', u'file_priv'], [483576, None, u'Identifier', u'user_srf'], [483575, None, u'Identifier', u'master'], [483573, None, u'Identifier', u'file_priv'], [483572, None, u'Identifier', u'master'], [483580, None, u'Identifier', u'file_priv'], [483568, u'True', u'Condition', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [483598, None, u'EqualityExpression', u'handle_type != DRM_VMW_HANDLE_PRIME'], [483600, None, u'Identifier', u'handle_type'], [483599, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [483597, u'True', u'Condition', u'handle_type != DRM_VMW_HANDLE_PRIME'], [483613, None, u'CallExpression', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [483624, None, u'Callee', u'unlikely'], [483614, None, u'ArgumentList', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [483625, None, u'Identifier', u'unlikely'], [483615, None, u'Argument', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [483616, None, u'EqualityExpression', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [483618, None, u'CallExpression', u'ttm_base_object_type ( base )'], [483617, None, u'Identifier', u'VMW_RES_SURFACE'], [483622, None, u'Callee', u'ttm_base_object_type'], [483619, None, u'ArgumentList', u'base'], [483623, None, u'Identifier', u'ttm_base_object_type'], [483620, None, u'Argument', u'base'], [483621, None, u'Identifier', u'base'], [483612, u'True', u'Condition', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [483638, None, u'CallExpression', u'unlikely ( ! base )'], [483644, None, u'Callee', u'unlikely'], [483639, None, u'ArgumentList', u'! base'], [483645, None, u'Identifier', u'unlikely'], [483640, None, u'Argument', u'! base'], [483641, None, u'UnaryOp', u'! base'], [483643, None, u'UnaryOperator', u'!'], [483642, None, u'Identifier', u'base'], [483637, u'True', u'Condition', u'unlikely ( ! base )'], [483727, None, u'CallExpression', u'unlikely ( ret != 0 )'], [483733, None, u'Callee', u'unlikely'], [483728, None, u'ArgumentList', u'ret != 0'], [483734, None, u'Identifier', u'unlikely'], [483729, None, u'Argument', u'ret != 0'], [483730, None, u'EqualityExpression', u'ret != 0'], [483732, None, u'Identifier', u'ret'], [483731, None, u'PrimaryExpression', u'0'], [483726, u'True', u'Condition', u'unlikely ( ret != 0 )'], [483685, None, u'CallExpression', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [483696, None, u'Callee', u'ACCESS_ONCE'], [483686, None, u'ArgumentList', u'vmw_fpriv ( file_priv ) -> locked_master'], [483697, None, u'Identifier', u'ACCESS_ONCE'], [483687, None, u'Argument', u'vmw_fpriv ( file_priv ) -> locked_master'], [483688, None, u'PtrMemberAccess', u'vmw_fpriv ( file_priv ) -> locked_master'], [483690, None, u'CallExpression', u'vmw_fpriv ( file_priv )'], [483689, None, u'Identifier', u'locked_master'], [483694, None, u'Callee', u'vmw_fpriv'], [483691, None, u'ArgumentList', u'file_priv'], [483695, None, u'Identifier', u'vmw_fpriv'], [483692, None, u'Argument', u'file_priv'], [483693, None, u'Identifier', u'file_priv'], [483684, u'True', u'Condition', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [483566, u'True', u'Statement', u'('], [483569, None, u'AndExpression', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [483577, None, u'CallExpression', u'drm_is_primary_client ( file_priv )'], [483570, None, u'EqualityExpression', u'user_srf -> master != file_priv -> master'], [483581, None, u'Callee', u'drm_is_primary_client'], [483578, None, u'ArgumentList', u'file_priv'], [483574, None, u'PtrMemberAccess', u'user_srf -> master'], [483571, None, u'PtrMemberAccess', u'file_priv -> master'], [483582, None, u'Identifier', u'drm_is_primary_client'], [483579, None, u'Argument', u'file_priv'], [483576, None, u'Identifier', u'user_srf'], [483575, None, u'Identifier', u'master'], [483573, None, u'Identifier', u'file_priv'], [483572, None, u'Identifier', u'master'], [483580, None, u'Identifier', u'file_priv'], [483568, u'True', u'Condition', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [483598, None, u'EqualityExpression', u'handle_type != DRM_VMW_HANDLE_PRIME'], [483600, None, u'Identifier', u'handle_type'], [483599, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [483597, u'True', u'Condition', u'handle_type != DRM_VMW_HANDLE_PRIME'], [483613, None, u'CallExpression', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [483624, None, u'Callee', u'unlikely'], [483614, None, u'ArgumentList', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [483625, None, u'Identifier', u'unlikely'], [483615, None, u'Argument', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [483616, None, u'EqualityExpression', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [483618, None, u'CallExpression', u'ttm_base_object_type ( base )'], [483617, None, u'Identifier', u'VMW_RES_SURFACE'], [483622, None, u'Callee', u'ttm_base_object_type'], [483619, None, u'ArgumentList', u'base'], [483623, None, u'Identifier', u'ttm_base_object_type'], [483620, None, u'Argument', u'base'], [483621, None, u'Identifier', u'base'], [483612, u'True', u'Condition', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [483638, None, u'CallExpression', u'unlikely ( ! base )'], [483644, None, u'Callee', u'unlikely'], [483639, None, u'ArgumentList', u'! base'], [483645, None, u'Identifier', u'unlikely'], [483640, None, u'Argument', u'! base'], [483641, None, u'UnaryOp', u'! base'], [483643, None, u'UnaryOperator', u'!'], [483642, None, u'Identifier', u'base'], [483637, u'True', u'Condition', u'unlikely ( ! base )'], [483727, None, u'CallExpression', u'unlikely ( ret != 0 )'], [483733, None, u'Callee', u'unlikely'], [483728, None, u'ArgumentList', u'ret != 0'], [483734, None, u'Identifier', u'unlikely'], [483729, None, u'Argument', u'ret != 0'], [483730, None, u'EqualityExpression', u'ret != 0'], [483732, None, u'Identifier', u'ret'], [483731, None, u'PrimaryExpression', u'0'], [483726, u'True', u'Condition', u'unlikely ( ret != 0 )'], [483685, None, u'CallExpression', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [483696, None, u'Callee', u'ACCESS_ONCE'], [483686, None, u'ArgumentList', u'vmw_fpriv ( file_priv ) -> locked_master'], [483697, None, u'Identifier', u'ACCESS_ONCE'], [483687, None, u'Argument', u'vmw_fpriv ( file_priv ) -> locked_master'], [483688, None, u'PtrMemberAccess', u'vmw_fpriv ( file_priv ) -> locked_master'], [483690, None, u'CallExpression', u'vmw_fpriv ( file_priv )'], [483689, None, u'Identifier', u'locked_master'], [483694, None, u'Callee', u'vmw_fpriv'], [483691, None, u'ArgumentList', u'file_priv'], [483695, None, u'Identifier', u'vmw_fpriv'], [483692, None, u'Argument', u'file_priv'], [483693, None, u'Identifier', u'file_priv'], [483684, u'True', u'Condition', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [483567, u'True', u'Statement', u'DRM_ERROR'], [483569, None, u'AndExpression', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [483577, None, u'CallExpression', u'drm_is_primary_client ( file_priv )'], [483570, None, u'EqualityExpression', u'user_srf -> master != file_priv -> master'], [483581, None, u'Callee', u'drm_is_primary_client'], [483578, None, u'ArgumentList', u'file_priv'], [483574, None, u'PtrMemberAccess', u'user_srf -> master'], [483571, None, u'PtrMemberAccess', u'file_priv -> master'], [483582, None, u'Identifier', u'drm_is_primary_client'], [483579, None, u'Argument', u'file_priv'], [483576, None, u'Identifier', u'user_srf'], [483575, None, u'Identifier', u'master'], [483573, None, u'Identifier', u'file_priv'], [483572, None, u'Identifier', u'master'], [483580, None, u'Identifier', u'file_priv'], [483568, u'True', u'Condition', u'drm_is_primary_client ( file_priv ) && user_srf -> master != file_priv -> master'], [483598, None, u'EqualityExpression', u'handle_type != DRM_VMW_HANDLE_PRIME'], [483600, None, u'Identifier', u'handle_type'], [483599, None, u'Identifier', u'DRM_VMW_HANDLE_PRIME'], [483597, u'True', u'Condition', u'handle_type != DRM_VMW_HANDLE_PRIME'], [483613, None, u'CallExpression', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [483624, None, u'Callee', u'unlikely'], [483614, None, u'ArgumentList', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [483625, None, u'Identifier', u'unlikely'], [483615, None, u'Argument', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [483616, None, u'EqualityExpression', u'ttm_base_object_type ( base ) != VMW_RES_SURFACE'], [483618, None, u'CallExpression', u'ttm_base_object_type ( base )'], [483617, None, u'Identifier', u'VMW_RES_SURFACE'], [483622, None, u'Callee', u'ttm_base_object_type'], [483619, None, u'ArgumentList', u'base'], [483623, None, u'Identifier', u'ttm_base_object_type'], [483620, None, u'Argument', u'base'], [483621, None, u'Identifier', u'base'], [483612, u'True', u'Condition', u'unlikely ( ttm_base_object_type ( base ) != VMW_RES_SURFACE )'], [483638, None, u'CallExpression', u'unlikely ( ! base )'], [483644, None, u'Callee', u'unlikely'], [483639, None, u'ArgumentList', u'! base'], [483645, None, u'Identifier', u'unlikely'], [483640, None, u'Argument', u'! base'], [483641, None, u'UnaryOp', u'! base'], [483643, None, u'UnaryOperator', u'!'], [483642, None, u'Identifier', u'base'], [483637, u'True', u'Condition', u'unlikely ( ! base )'], [483727, None, u'CallExpression', u'unlikely ( ret != 0 )'], [483733, None, u'Callee', u'unlikely'], [483728, None, u'ArgumentList', u'ret != 0'], [483734, None, u'Identifier', u'unlikely'], [483729, None, u'Argument', u'ret != 0'], [483730, None, u'EqualityExpression', u'ret != 0'], [483732, None, u'Identifier', u'ret'], [483731, None, u'PrimaryExpression', u'0'], [483726, u'True', u'Condition', u'unlikely ( ret != 0 )'], [483685, None, u'CallExpression', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )'], [483696, None, u'Callee', u'ACCESS_ONCE'], [483686, None, u'ArgumentList', u'vmw_fpriv ( file_priv ) -> locked_master'], [483697, None, u'Identifier', u'ACCESS_ONCE'], [483687, None, u'Argument', u'vmw_fpriv ( file_priv ) -> locked_master'], [483688, None, u'PtrMemberAccess', u'vmw_fpriv ( file_priv ) -> locked_master'], [483690, None, u'CallExpression', u'vmw_fpriv ( file_priv )'], [483689, None, u'Identifier', u'locked_master'], [483694, None, u'Callee', u'vmw_fpriv'], [483691, None, u'ArgumentList', u'file_priv'], [483695, None, u'Identifier', u'vmw_fpriv'], [483692, None, u'Argument', u'file_priv'], [483693, None, u'Identifier', u'file_priv'], [483684, u'True', u'Condition', u'ACCESS_ONCE ( vmw_fpriv ( file_priv ) -> locked_master )']]","[[483565, u'True', u'Statement', u'""Trying to reference surface outside of""'], [483566, u'True', u'Statement', u'('], [483567, u'True', u'Statement', u'DRM_ERROR']]"
"drm/vmwgfx: Type-check lookups of fence objects

A malicious caller could otherwise hand over handles to other objects
causing all sorts of interesting problems.

Testing done: Ran a Fedora 25 desktop using both Xorg and
gnome-shell/Wayland.

Cc: <stable@vger.kernel.org>
Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
Reviewed-by: Sinclair Yeh <syeh@vmware.com>",drivers/gpu/drm/vmwgfx/vmwgfx_fence.c,-,"[[495862, u'True', u'Statement', u'""Wait invalid fence object handle ""'], [495863, u'True', u'Statement', u'KERN_ERR'], [495864, u'True', u'Statement', u'('], [495865, u'True', u'Statement', u'printk']]","[[495862, u'True', u'Statement', u'""Wait invalid fence object handle ""'], [495867, None, u'CallExpression', u'unlikely ( base == NULL )'], [495873, None, u'Callee', u'unlikely'], [495868, None, u'ArgumentList', u'base == NULL'], [495874, None, u'Identifier', u'unlikely'], [495869, None, u'Argument', u'base == NULL'], [495870, None, u'EqualityExpression', u'base == NULL'], [495872, None, u'Identifier', u'base'], [495871, None, u'Identifier', u'NULL'], [495866, u'True', u'Condition', u'unlikely ( base == NULL )'], [495976, u'True', u'CFGEntryNode', u'ENTRY'], [495863, u'True', u'Statement', u'KERN_ERR'], [495867, None, u'CallExpression', u'unlikely ( base == NULL )'], [495873, None, u'Callee', u'unlikely'], [495868, None, u'ArgumentList', u'base == NULL'], [495874, None, u'Identifier', u'unlikely'], [495869, None, u'Argument', u'base == NULL'], [495870, None, u'EqualityExpression', u'base == NULL'], [495872, None, u'Identifier', u'base'], [495871, None, u'Identifier', u'NULL'], [495866, u'True', u'Condition', u'unlikely ( base == NULL )'], [495976, u'True', u'CFGEntryNode', u'ENTRY'], [495864, u'True', u'Statement', u'('], [495867, None, u'CallExpression', u'unlikely ( base == NULL )'], [495873, None, u'Callee', u'unlikely'], [495868, None, u'ArgumentList', u'base == NULL'], [495874, None, u'Identifier', u'unlikely'], [495869, None, u'Argument', u'base == NULL'], [495870, None, u'EqualityExpression', u'base == NULL'], [495872, None, u'Identifier', u'base'], [495871, None, u'Identifier', u'NULL'], [495866, u'True', u'Condition', u'unlikely ( base == NULL )'], [495976, u'True', u'CFGEntryNode', u'ENTRY'], [495865, u'True', u'Statement', u'printk'], [495867, None, u'CallExpression', u'unlikely ( base == NULL )'], [495873, None, u'Callee', u'unlikely'], [495868, None, u'ArgumentList', u'base == NULL'], [495874, None, u'Identifier', u'unlikely'], [495869, None, u'Argument', u'base == NULL'], [495870, None, u'EqualityExpression', u'base == NULL'], [495872, None, u'Identifier', u'base'], [495871, None, u'Identifier', u'NULL'], [495866, u'True', u'Condition', u'unlikely ( base == NULL )'], [495976, u'True', u'CFGEntryNode', u'ENTRY']]","[[495862, u'True', u'Statement', u'""Wait invalid fence object handle ""'], [495863, u'True', u'Statement', u'KERN_ERR'], [495864, u'True', u'Statement', u'('], [495865, u'True', u'Statement', u'printk']]"
"drm/vmwgfx: Type-check lookups of fence objects

A malicious caller could otherwise hand over handles to other objects
causing all sorts of interesting problems.

Testing done: Ran a Fedora 25 desktop using both Xorg and
gnome-shell/Wayland.

Cc: <stable@vger.kernel.org>
Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
Reviewed-by: Sinclair Yeh <syeh@vmware.com>",drivers/gpu/drm/vmwgfx/vmwgfx_fence.c,-,"[[496130, u'True', u'Statement', u'""Fence signaled invalid fence object handle ""'], [496131, u'True', u'Statement', u'KERN_ERR'], [496132, u'True', u'Statement', u'('], [496133, u'True', u'Statement', u'printk']]","[[496130, u'True', u'Statement', u'""Fence signaled invalid fence object handle ""'], [496135, None, u'CallExpression', u'unlikely ( base == NULL )'], [496141, None, u'Callee', u'unlikely'], [496136, None, u'ArgumentList', u'base == NULL'], [496142, None, u'Identifier', u'unlikely'], [496137, None, u'Argument', u'base == NULL'], [496138, None, u'EqualityExpression', u'base == NULL'], [496140, None, u'Identifier', u'base'], [496139, None, u'Identifier', u'NULL'], [496134, u'True', u'Condition', u'unlikely ( base == NULL )'], [496203, u'True', u'CFGEntryNode', u'ENTRY'], [496131, u'True', u'Statement', u'KERN_ERR'], [496135, None, u'CallExpression', u'unlikely ( base == NULL )'], [496141, None, u'Callee', u'unlikely'], [496136, None, u'ArgumentList', u'base == NULL'], [496142, None, u'Identifier', u'unlikely'], [496137, None, u'Argument', u'base == NULL'], [496138, None, u'EqualityExpression', u'base == NULL'], [496140, None, u'Identifier', u'base'], [496139, None, u'Identifier', u'NULL'], [496134, u'True', u'Condition', u'unlikely ( base == NULL )'], [496203, u'True', u'CFGEntryNode', u'ENTRY'], [496132, u'True', u'Statement', u'('], [496135, None, u'CallExpression', u'unlikely ( base == NULL )'], [496141, None, u'Callee', u'unlikely'], [496136, None, u'ArgumentList', u'base == NULL'], [496142, None, u'Identifier', u'unlikely'], [496137, None, u'Argument', u'base == NULL'], [496138, None, u'EqualityExpression', u'base == NULL'], [496140, None, u'Identifier', u'base'], [496139, None, u'Identifier', u'NULL'], [496134, u'True', u'Condition', u'unlikely ( base == NULL )'], [496203, u'True', u'CFGEntryNode', u'ENTRY'], [496133, u'True', u'Statement', u'printk'], [496135, None, u'CallExpression', u'unlikely ( base == NULL )'], [496141, None, u'Callee', u'unlikely'], [496136, None, u'ArgumentList', u'base == NULL'], [496142, None, u'Identifier', u'unlikely'], [496137, None, u'Argument', u'base == NULL'], [496138, None, u'EqualityExpression', u'base == NULL'], [496140, None, u'Identifier', u'base'], [496139, None, u'Identifier', u'NULL'], [496134, u'True', u'Condition', u'unlikely ( base == NULL )'], [496203, u'True', u'CFGEntryNode', u'ENTRY']]","[[496130, u'True', u'Statement', u'""Fence signaled invalid fence object handle ""'], [496131, u'True', u'Statement', u'KERN_ERR'], [496132, u'True', u'Statement', u'('], [496133, u'True', u'Statement', u'printk']]"
"drm/vmwgfx: Type-check lookups of fence objects

A malicious caller could otherwise hand over handles to other objects
causing all sorts of interesting problems.

Testing done: Ran a Fedora 25 desktop using both Xorg and
gnome-shell/Wayland.

Cc: <stable@vger.kernel.org>
Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
Reviewed-by: Sinclair Yeh <syeh@vmware.com>",drivers/gpu/drm/vmwgfx/vmwgfx_fence.c,-,"[[497548, u'True', u'Statement', u'""Fence event invalid fence object handle ""'], [497549, u'True', u'Statement', u'('], [497550, u'True', u'Statement', u'DRM_ERROR']]","[[497548, u'True', u'Statement', u'""Fence event invalid fence object handle ""'], [497552, None, u'CallExpression', u'unlikely ( base == NULL )'], [497558, None, u'Callee', u'unlikely'], [497553, None, u'ArgumentList', u'base == NULL'], [497559, None, u'Identifier', u'unlikely'], [497554, None, u'Argument', u'base == NULL'], [497555, None, u'EqualityExpression', u'base == NULL'], [497557, None, u'Identifier', u'base'], [497556, None, u'Identifier', u'NULL'], [497551, u'True', u'Condition', u'unlikely ( base == NULL )'], [497579, None, u'PtrMemberAccess', u'arg -> handle'], [497581, None, u'Identifier', u'arg'], [497580, None, u'Identifier', u'handle'], [497578, u'True', u'Condition', u'arg -> handle'], [497643, u'True', u'CFGEntryNode', u'ENTRY'], [497549, u'True', u'Statement', u'('], [497552, None, u'CallExpression', u'unlikely ( base == NULL )'], [497558, None, u'Callee', u'unlikely'], [497553, None, u'ArgumentList', u'base == NULL'], [497559, None, u'Identifier', u'unlikely'], [497554, None, u'Argument', u'base == NULL'], [497555, None, u'EqualityExpression', u'base == NULL'], [497557, None, u'Identifier', u'base'], [497556, None, u'Identifier', u'NULL'], [497551, u'True', u'Condition', u'unlikely ( base == NULL )'], [497579, None, u'PtrMemberAccess', u'arg -> handle'], [497581, None, u'Identifier', u'arg'], [497580, None, u'Identifier', u'handle'], [497578, u'True', u'Condition', u'arg -> handle'], [497643, u'True', u'CFGEntryNode', u'ENTRY'], [497550, u'True', u'Statement', u'DRM_ERROR'], [497552, None, u'CallExpression', u'unlikely ( base == NULL )'], [497558, None, u'Callee', u'unlikely'], [497553, None, u'ArgumentList', u'base == NULL'], [497559, None, u'Identifier', u'unlikely'], [497554, None, u'Argument', u'base == NULL'], [497555, None, u'EqualityExpression', u'base == NULL'], [497557, None, u'Identifier', u'base'], [497556, None, u'Identifier', u'NULL'], [497551, u'True', u'Condition', u'unlikely ( base == NULL )'], [497579, None, u'PtrMemberAccess', u'arg -> handle'], [497581, None, u'Identifier', u'arg'], [497580, None, u'Identifier', u'handle'], [497578, u'True', u'Condition', u'arg -> handle'], [497643, u'True', u'CFGEntryNode', u'ENTRY']]","[[497548, u'True', u'Statement', u'""Fence event invalid fence object handle ""'], [497549, u'True', u'Statement', u'('], [497550, u'True', u'Statement', u'DRM_ERROR']]"
Merge branch 'for-chris-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux into for-linus-4.11,fs/btrfs/extent_io.c,+,"[[512172, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )']]","[[512173, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [512190, None, u'Identifier', u'ret'], [512174, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [512188, None, u'Callee', u'bio_readpage_error'], [512175, None, u'ArgumentList', u'bio'], [512189, None, u'Identifier', u'bio_readpage_error'], [512186, None, u'Argument', u'bio'], [512184, None, u'Argument', u'offset'], [512182, None, u'Argument', u'page'], [512180, None, u'Argument', u'start'], [512178, None, u'Argument', u'end'], [512176, None, u'Argument', u'mirror'], [512187, None, u'Identifier', u'bio'], [512185, None, u'Identifier', u'offset'], [512183, None, u'Identifier', u'page'], [512181, None, u'Identifier', u'start'], [512179, None, u'Identifier', u'end'], [512177, None, u'Identifier', u'mirror'], [512172, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [512192, None, u'EqualityExpression', u'ret == - EAGAIN'], [512196, None, u'Identifier', u'ret'], [512193, None, u'UnaryOp', u'- EAGAIN'], [512195, None, u'UnaryOperator', u'-'], [512194, None, u'Identifier', u'EAGAIN'], [512191, u'True', u'Condition', u'ret == - EAGAIN'], [512213, None, u'PtrMemberAccess', u'tree -> ops'], [512215, None, u'Identifier', u'tree'], [512214, None, u'Identifier', u'ops'], [512212, u'True', u'Condition', u'tree -> ops'], [512220, None, u'CallExpression', u'likely ( uptodate )'], [512224, None, u'Callee', u'likely'], [512221, None, u'ArgumentList', u'uptodate'], [512225, None, u'Identifier', u'likely'], [512222, None, u'Argument', u'uptodate'], [512223, None, u'Identifier', u'uptodate'], [512219, u'True', u'Condition', u'likely ( uptodate )'], [512537, u'True', u'CFGEntryNode', u'ENTRY']]","[[512173, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [512190, None, u'Identifier', u'ret'], [512174, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [512188, None, u'Callee', u'bio_readpage_error'], [512175, None, u'ArgumentList', u'bio'], [512189, None, u'Identifier', u'bio_readpage_error'], [512186, None, u'Argument', u'bio'], [512184, None, u'Argument', u'offset'], [512182, None, u'Argument', u'page'], [512180, None, u'Argument', u'start'], [512178, None, u'Argument', u'end'], [512176, None, u'Argument', u'mirror'], [512187, None, u'Identifier', u'bio'], [512185, None, u'Identifier', u'offset'], [512183, None, u'Identifier', u'page'], [512181, None, u'Identifier', u'start'], [512179, None, u'Identifier', u'end'], [512177, None, u'Identifier', u'mirror'], [512172, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [512500, None, u'IdentifierDecl', u'offset = 0'], [512505, None, u'IdentifierDeclType', u'u64'], [512504, None, u'Identifier', u'offset'], [512501, None, u'AssignmentExpr', u'offset = 0'], [512503, None, u'Identifier', u'offset'], [512502, None, u'PrimaryExpression', u'0'], [512499, u'True', u'IdentifierDeclStatement', u'u64 offset = 0 ;'], [512301, None, u'AssignmentExpr', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [512313, None, u'Identifier', u'end'], [512302, None, u'AdditiveExpression', u'start + bvec -> bv_offset + bvec -> bv_len - 1'], [512312, None, u'Identifier', u'start'], [512303, None, u'AdditiveExpression', u'bvec -> bv_offset + bvec -> bv_len - 1'], [512309, None, u'PtrMemberAccess', u'bvec -> bv_offset'], [512304, None, u'AdditiveExpression', u'bvec -> bv_len - 1'], [512311, None, u'Identifier', u'bvec'], [512310, None, u'Identifier', u'bv_offset'], [512306, None, u'PtrMemberAccess', u'bvec -> bv_len'], [512305, None, u'PrimaryExpression', u'1'], [512308, None, u'Identifier', u'bvec'], [512307, None, u'Identifier', u'bv_len'], [512300, u'True', u'ExpressionStatement', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [512289, None, u'AssignmentExpr', u'mirror = io_bio -> mirror_num'], [512293, None, u'Identifier', u'mirror'], [512290, None, u'PtrMemberAccess', u'io_bio -> mirror_num'], [512292, None, u'Identifier', u'io_bio'], [512291, None, u'Identifier', u'mirror_num'], [512288, u'True', u'ExpressionStatement', u'mirror = io_bio -> mirror_num'], [512315, None, u'AssignmentExpr', u'start = page_offset ( page )'], [512322, None, u'Identifier', u'start'], [512316, None, u'CallExpression', u'page_offset ( page )'], [512320, None, u'Callee', u'page_offset'], [512317, None, u'ArgumentList', u'page'], [512321, None, u'Identifier', u'page_offset'], [512318, None, u'Argument', u'page'], [512319, None, u'Identifier', u'page'], [512314, u'True', u'ExpressionStatement', u'start = page_offset ( page )'], [511879, None, u'ParameterType', u'struct bio *'], [511878, None, u'Identifier', u'bio'], [511877, u'True', u'Parameter', u'struct bio * bio'], [512445, None, u'IdentifierDecl', u'* page = bvec -> bv_page'], [512452, None, u'IdentifierDeclType', u'struct page *'], [512451, None, u'Identifier', u'page'], [512446, None, u'AssignmentExpr', u'* page = bvec -> bv_page'], [512450, None, u'Identifier', u'page'], [512447, None, u'PtrMemberAccess', u'bvec -> bv_page'], [512449, None, u'Identifier', u'bvec'], [512448, None, u'Identifier', u'bv_page'], [512444, u'True', u'IdentifierDeclStatement', u'struct page * page = bvec -> bv_page ;'], [512534, None, u'IdentifierDecl', u'* bvec'], [512536, None, u'IdentifierDeclType', u'struct bio_vec *'], [512535, None, u'Identifier', u'bvec'], [512533, u'True', u'IdentifierDeclStatement', u'struct bio_vec * bvec ;'], [512511, None, u'IdentifierDecl', u'* io_bio = btrfs_io_bio ( bio )'], [512521, None, u'IdentifierDeclType', u'struct btrfs_io_bio *'], [512520, None, u'Identifier', u'io_bio'], [512512, None, u'AssignmentExpr', u'* io_bio = btrfs_io_bio ( bio )'], [512519, None, u'Identifier', u'io_bio'], [512513, None, u'CallExpression', u'btrfs_io_bio ( bio )'], [512517, None, u'Callee', u'btrfs_io_bio'], [512514, None, u'ArgumentList', u'bio'], [512518, None, u'Identifier', u'btrfs_io_bio'], [512515, None, u'Argument', u'bio'], [512516, None, u'Identifier', u'bio'], [512510, u'True', u'IdentifierDeclStatement', u'struct btrfs_io_bio * io_bio = btrfs_io_bio ( bio ) ;']]"
Merge branch 'for-chris-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux into for-linus-4.11,fs/btrfs/extent_io.c,-,"[[541390, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )']]","[[541391, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [541408, None, u'Identifier', u'ret'], [541392, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [541406, None, u'Callee', u'bio_readpage_error'], [541393, None, u'ArgumentList', u'bio'], [541407, None, u'Identifier', u'bio_readpage_error'], [541404, None, u'Argument', u'bio'], [541402, None, u'Argument', u'offset'], [541400, None, u'Argument', u'page'], [541398, None, u'Argument', u'start'], [541396, None, u'Argument', u'end'], [541394, None, u'Argument', u'mirror'], [541405, None, u'Identifier', u'bio'], [541403, None, u'Identifier', u'offset'], [541401, None, u'Identifier', u'page'], [541399, None, u'Identifier', u'start'], [541397, None, u'Identifier', u'end'], [541395, None, u'Identifier', u'mirror'], [541390, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [541441, None, u'PtrMemberAccess', u'tree -> ops'], [541443, None, u'Identifier', u'tree'], [541442, None, u'Identifier', u'ops'], [541440, u'True', u'Condition', u'tree -> ops'], [541448, None, u'CallExpression', u'likely ( uptodate )'], [541452, None, u'Callee', u'likely'], [541449, None, u'ArgumentList', u'uptodate'], [541453, None, u'Identifier', u'likely'], [541450, None, u'Argument', u'uptodate'], [541451, None, u'Identifier', u'uptodate'], [541447, u'True', u'Condition', u'likely ( uptodate )'], [541765, u'True', u'CFGEntryNode', u'ENTRY']]","[[541391, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [541408, None, u'Identifier', u'ret'], [541392, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [541406, None, u'Callee', u'bio_readpage_error'], [541393, None, u'ArgumentList', u'bio'], [541407, None, u'Identifier', u'bio_readpage_error'], [541404, None, u'Argument', u'bio'], [541402, None, u'Argument', u'offset'], [541400, None, u'Argument', u'page'], [541398, None, u'Argument', u'start'], [541396, None, u'Argument', u'end'], [541394, None, u'Argument', u'mirror'], [541405, None, u'Identifier', u'bio'], [541403, None, u'Identifier', u'offset'], [541401, None, u'Identifier', u'page'], [541399, None, u'Identifier', u'start'], [541397, None, u'Identifier', u'end'], [541395, None, u'Identifier', u'mirror'], [541390, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [541728, None, u'IdentifierDecl', u'offset = 0'], [541733, None, u'IdentifierDeclType', u'u64'], [541732, None, u'Identifier', u'offset'], [541729, None, u'AssignmentExpr', u'offset = 0'], [541731, None, u'Identifier', u'offset'], [541730, None, u'PrimaryExpression', u'0'], [541727, u'True', u'IdentifierDeclStatement', u'u64 offset = 0 ;'], [541529, None, u'AssignmentExpr', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [541541, None, u'Identifier', u'end'], [541530, None, u'AdditiveExpression', u'start + bvec -> bv_offset + bvec -> bv_len - 1'], [541540, None, u'Identifier', u'start'], [541531, None, u'AdditiveExpression', u'bvec -> bv_offset + bvec -> bv_len - 1'], [541537, None, u'PtrMemberAccess', u'bvec -> bv_offset'], [541532, None, u'AdditiveExpression', u'bvec -> bv_len - 1'], [541539, None, u'Identifier', u'bvec'], [541538, None, u'Identifier', u'bv_offset'], [541534, None, u'PtrMemberAccess', u'bvec -> bv_len'], [541533, None, u'PrimaryExpression', u'1'], [541536, None, u'Identifier', u'bvec'], [541535, None, u'Identifier', u'bv_len'], [541528, u'True', u'ExpressionStatement', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [541517, None, u'AssignmentExpr', u'mirror = io_bio -> mirror_num'], [541521, None, u'Identifier', u'mirror'], [541518, None, u'PtrMemberAccess', u'io_bio -> mirror_num'], [541520, None, u'Identifier', u'io_bio'], [541519, None, u'Identifier', u'mirror_num'], [541516, u'True', u'ExpressionStatement', u'mirror = io_bio -> mirror_num'], [541543, None, u'AssignmentExpr', u'start = page_offset ( page )'], [541550, None, u'Identifier', u'start'], [541544, None, u'CallExpression', u'page_offset ( page )'], [541548, None, u'Callee', u'page_offset'], [541545, None, u'ArgumentList', u'page'], [541549, None, u'Identifier', u'page_offset'], [541546, None, u'Argument', u'page'], [541547, None, u'Identifier', u'page'], [541542, u'True', u'ExpressionStatement', u'start = page_offset ( page )'], [541109, None, u'ParameterType', u'struct bio *'], [541108, None, u'Identifier', u'bio'], [541107, u'True', u'Parameter', u'struct bio * bio'], [541673, None, u'IdentifierDecl', u'* page = bvec -> bv_page'], [541680, None, u'IdentifierDeclType', u'struct page *'], [541679, None, u'Identifier', u'page'], [541674, None, u'AssignmentExpr', u'* page = bvec -> bv_page'], [541678, None, u'Identifier', u'page'], [541675, None, u'PtrMemberAccess', u'bvec -> bv_page'], [541677, None, u'Identifier', u'bvec'], [541676, None, u'Identifier', u'bv_page'], [541672, u'True', u'IdentifierDeclStatement', u'struct page * page = bvec -> bv_page ;'], [541762, None, u'IdentifierDecl', u'* bvec'], [541764, None, u'IdentifierDeclType', u'struct bio_vec *'], [541763, None, u'Identifier', u'bvec'], [541761, u'True', u'IdentifierDeclStatement', u'struct bio_vec * bvec ;'], [541739, None, u'IdentifierDecl', u'* io_bio = btrfs_io_bio ( bio )'], [541749, None, u'IdentifierDeclType', u'struct btrfs_io_bio *'], [541748, None, u'Identifier', u'io_bio'], [541740, None, u'AssignmentExpr', u'* io_bio = btrfs_io_bio ( bio )'], [541747, None, u'Identifier', u'io_bio'], [541741, None, u'CallExpression', u'btrfs_io_bio ( bio )'], [541745, None, u'Callee', u'btrfs_io_bio'], [541742, None, u'ArgumentList', u'bio'], [541746, None, u'Identifier', u'btrfs_io_bio'], [541743, None, u'Argument', u'bio'], [541744, None, u'Identifier', u'bio'], [541738, u'True', u'IdentifierDeclStatement', u'struct btrfs_io_bio * io_bio = btrfs_io_bio ( bio ) ;']]"
Merge branch 'for-chris-4.11-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux into for-linus-4.11,fs/btrfs/extent_io.c,+,"[[512140, u'True', u'ExpressionStatement', u'ASSERT ( ret == - EIO )']]","[[512141, None, u'CallExpression', u'ASSERT ( ret == - EIO )'], [512149, None, u'Callee', u'ASSERT'], [512142, None, u'ArgumentList', u'ret == - EIO'], [512150, None, u'Identifier', u'ASSERT'], [512143, None, u'Argument', u'ret == - EIO'], [512144, None, u'EqualityExpression', u'ret == - EIO'], [512148, None, u'Identifier', u'ret'], [512145, None, u'UnaryOp', u'- EIO'], [512147, None, u'UnaryOperator', u'-'], [512146, None, u'Identifier', u'EIO'], [512140, u'True', u'ExpressionStatement', u'ASSERT ( ret == - EIO )'], [512213, None, u'PtrMemberAccess', u'tree -> ops'], [512215, None, u'Identifier', u'tree'], [512214, None, u'Identifier', u'ops'], [512212, u'True', u'Condition', u'tree -> ops'], [512220, None, u'CallExpression', u'likely ( uptodate )'], [512224, None, u'Callee', u'likely'], [512221, None, u'ArgumentList', u'uptodate'], [512225, None, u'Identifier', u'likely'], [512222, None, u'Argument', u'uptodate'], [512223, None, u'Identifier', u'uptodate'], [512219, u'True', u'Condition', u'likely ( uptodate )'], [512537, u'True', u'CFGEntryNode', u'ENTRY']]","[[512141, None, u'CallExpression', u'ASSERT ( ret == - EIO )'], [512149, None, u'Callee', u'ASSERT'], [512142, None, u'ArgumentList', u'ret == - EIO'], [512150, None, u'Identifier', u'ASSERT'], [512143, None, u'Argument', u'ret == - EIO'], [512144, None, u'EqualityExpression', u'ret == - EIO'], [512148, None, u'Identifier', u'ret'], [512145, None, u'UnaryOp', u'- EIO'], [512147, None, u'UnaryOperator', u'-'], [512146, None, u'Identifier', u'EIO'], [512140, u'True', u'ExpressionStatement', u'ASSERT ( ret == - EIO )'], [512173, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [512190, None, u'Identifier', u'ret'], [512174, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [512188, None, u'Callee', u'bio_readpage_error'], [512175, None, u'ArgumentList', u'bio'], [512189, None, u'Identifier', u'bio_readpage_error'], [512186, None, u'Argument', u'bio'], [512184, None, u'Argument', u'offset'], [512182, None, u'Argument', u'page'], [512180, None, u'Argument', u'start'], [512178, None, u'Argument', u'end'], [512176, None, u'Argument', u'mirror'], [512187, None, u'Identifier', u'bio'], [512185, None, u'Identifier', u'offset'], [512183, None, u'Identifier', u'page'], [512181, None, u'Identifier', u'start'], [512179, None, u'Identifier', u'end'], [512177, None, u'Identifier', u'mirror'], [512172, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [512198, None, u'AssignmentExpr', u'ret = tree -> ops -> readpage_io_failed_hook ( page , mirror )'], [512211, None, u'Identifier', u'ret'], [512199, None, u'CallExpression', u'tree -> ops -> readpage_io_failed_hook ( page , mirror )'], [512205, None, u'Callee', u'tree -> ops -> readpage_io_failed_hook'], [512200, None, u'ArgumentList', u'page'], [512206, None, u'PtrMemberAccess', u'tree -> ops -> readpage_io_failed_hook'], [512203, None, u'Argument', u'page'], [512201, None, u'Argument', u'mirror'], [512208, None, u'PtrMemberAccess', u'tree -> ops'], [512207, None, u'Identifier', u'readpage_io_failed_hook'], [512204, None, u'Identifier', u'page'], [512202, None, u'Identifier', u'mirror'], [512210, None, u'Identifier', u'tree'], [512209, None, u'Identifier', u'ops'], [512197, u'True', u'ExpressionStatement', u'ret = tree -> ops -> readpage_io_failed_hook ( page , mirror )'], [512500, None, u'IdentifierDecl', u'offset = 0'], [512505, None, u'IdentifierDeclType', u'u64'], [512504, None, u'Identifier', u'offset'], [512501, None, u'AssignmentExpr', u'offset = 0'], [512503, None, u'Identifier', u'offset'], [512502, None, u'PrimaryExpression', u'0'], [512499, u'True', u'IdentifierDeclStatement', u'u64 offset = 0 ;'], [512301, None, u'AssignmentExpr', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [512313, None, u'Identifier', u'end'], [512302, None, u'AdditiveExpression', u'start + bvec -> bv_offset + bvec -> bv_len - 1'], [512312, None, u'Identifier', u'start'], [512303, None, u'AdditiveExpression', u'bvec -> bv_offset + bvec -> bv_len - 1'], [512309, None, u'PtrMemberAccess', u'bvec -> bv_offset'], [512304, None, u'AdditiveExpression', u'bvec -> bv_len - 1'], [512311, None, u'Identifier', u'bvec'], [512310, None, u'Identifier', u'bv_offset'], [512306, None, u'PtrMemberAccess', u'bvec -> bv_len'], [512305, None, u'PrimaryExpression', u'1'], [512308, None, u'Identifier', u'bvec'], [512307, None, u'Identifier', u'bv_len'], [512300, u'True', u'ExpressionStatement', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [512289, None, u'AssignmentExpr', u'mirror = io_bio -> mirror_num'], [512293, None, u'Identifier', u'mirror'], [512290, None, u'PtrMemberAccess', u'io_bio -> mirror_num'], [512292, None, u'Identifier', u'io_bio'], [512291, None, u'Identifier', u'mirror_num'], [512288, u'True', u'ExpressionStatement', u'mirror = io_bio -> mirror_num'], [512315, None, u'AssignmentExpr', u'start = page_offset ( page )'], [512322, None, u'Identifier', u'start'], [512316, None, u'CallExpression', u'page_offset ( page )'], [512320, None, u'Callee', u'page_offset'], [512317, None, u'ArgumentList', u'page'], [512321, None, u'Identifier', u'page_offset'], [512318, None, u'Argument', u'page'], [512319, None, u'Identifier', u'page'], [512314, u'True', u'ExpressionStatement', u'start = page_offset ( page )'], [511879, None, u'ParameterType', u'struct bio *'], [511878, None, u'Identifier', u'bio'], [511877, u'True', u'Parameter', u'struct bio * bio'], [512445, None, u'IdentifierDecl', u'* page = bvec -> bv_page'], [512452, None, u'IdentifierDeclType', u'struct page *'], [512451, None, u'Identifier', u'page'], [512446, None, u'AssignmentExpr', u'* page = bvec -> bv_page'], [512450, None, u'Identifier', u'page'], [512447, None, u'PtrMemberAccess', u'bvec -> bv_page'], [512449, None, u'Identifier', u'bvec'], [512448, None, u'Identifier', u'bv_page'], [512444, u'True', u'IdentifierDeclStatement', u'struct page * page = bvec -> bv_page ;'], [512382, None, u'AssignmentExpr', u'tree = & BTRFS_I ( inode ) -> io_tree'], [512393, None, u'Identifier', u'tree'], [512383, None, u'UnaryOp', u'& BTRFS_I ( inode ) -> io_tree'], [512392, None, u'UnaryOperator', u'&'], [512384, None, u'PtrMemberAccess', u'BTRFS_I ( inode ) -> io_tree'], [512386, None, u'CallExpression', u'BTRFS_I ( inode )'], [512385, None, u'Identifier', u'io_tree'], [512390, None, u'Callee', u'BTRFS_I'], [512387, None, u'ArgumentList', u'inode'], [512391, None, u'Identifier', u'BTRFS_I'], [512388, None, u'Argument', u'inode'], [512389, None, u'Identifier', u'inode'], [512381, u'True', u'ExpressionStatement', u'tree = & BTRFS_I ( inode ) -> io_tree'], [512534, None, u'IdentifierDecl', u'* bvec'], [512536, None, u'IdentifierDeclType', u'struct bio_vec *'], [512535, None, u'Identifier', u'bvec'], [512533, u'True', u'IdentifierDeclStatement', u'struct bio_vec * bvec ;'], [512511, None, u'IdentifierDecl', u'* io_bio = btrfs_io_bio ( bio )'], [512521, None, u'IdentifierDeclType', u'struct btrfs_io_bio *'], [512520, None, u'Identifier', u'io_bio'], [512512, None, u'AssignmentExpr', u'* io_bio = btrfs_io_bio ( bio )'], [512519, None, u'Identifier', u'io_bio'], [512513, None, u'CallExpression', u'btrfs_io_bio ( bio )'], [512517, None, u'Callee', u'btrfs_io_bio'], [512514, None, u'ArgumentList', u'bio'], [512518, None, u'Identifier', u'btrfs_io_bio'], [512515, None, u'Argument', u'bio'], [512516, None, u'Identifier', u'bio'], [512510, u'True', u'IdentifierDeclStatement', u'struct btrfs_io_bio * io_bio = btrfs_io_bio ( bio ) ;'], [512434, None, u'IdentifierDecl', u'* inode = page -> mapping -> host'], [512443, None, u'IdentifierDeclType', u'struct inode *'], [512442, None, u'Identifier', u'inode'], [512435, None, u'AssignmentExpr', u'* inode = page -> mapping -> host'], [512441, None, u'Identifier', u'inode'], [512436, None, u'PtrMemberAccess', u'page -> mapping -> host'], [512438, None, u'PtrMemberAccess', u'page -> mapping'], [512437, None, u'Identifier', u'host'], [512440, None, u'Identifier', u'page'], [512439, None, u'Identifier', u'mapping'], [512433, u'True', u'IdentifierDeclStatement', u'struct inode * inode = page -> mapping -> host ;']]"
"parisc: Fix access fault handling in pa_memcpy()

pa_memcpy() is the major memcpy implementation in the parisc kernel which is
used to do any kind of userspace/kernel memory copies.

Al Viro noticed various bugs in the implementation of pa_mempcy(), most notably
that in case of faults it may report back to have copied more bytes than it
actually did.

Fixing those bugs is quite hard in the C-implementation, because the compiler
is messing around with the registers and we are not guaranteed that specific
variables are always in the same processor registers. This makes proper fault
handling complicated.

This patch implements pa_memcpy() in assembler. That way we have correct fault
handling and adding a 64-bit copy routine was quite easy.

Runtime tested with 32- and 64bit kernels.

Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
Cc: <stable@vger.kernel.org> # v4.9+
Signed-off-by: John David Anglin <dave.anglin@bell.net>
Signed-off-by: Helge Deller <deller@gmx.de>",arch/parisc/lib/memcpy.c,-,"[[561209, u'True', u'ExpressionStatement', u'DPRINTF ( ""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n"" , ret , len , fault_addr , reference )']]","[[561210, None, u'CallExpression', u'DPRINTF ( ""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n"" , ret , len , fault_addr , reference )'], [561222, None, u'Callee', u'DPRINTF'], [561211, None, u'ArgumentList', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [561223, None, u'Identifier', u'DPRINTF'], [561220, None, u'Argument', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [561218, None, u'Argument', u'ret'], [561216, None, u'Argument', u'len'], [561214, None, u'Argument', u'fault_addr'], [561212, None, u'Argument', u'reference'], [561221, None, u'PrimaryExpression', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [561219, None, u'Identifier', u'ret'], [561217, None, u'Identifier', u'len'], [561215, None, u'Identifier', u'fault_addr'], [561213, None, u'Identifier', u'reference'], [561209, u'True', u'ExpressionStatement', u'DPRINTF ( ""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n"" , ret , len , fault_addr , reference )'], [561263, None, u'CallExpression', u'likely ( ret == PA_MEMCPY_OK )'], [561269, None, u'Callee', u'likely'], [561264, None, u'ArgumentList', u'ret == PA_MEMCPY_OK'], [561270, None, u'Identifier', u'likely'], [561265, None, u'Argument', u'ret == PA_MEMCPY_OK'], [561266, None, u'EqualityExpression', u'ret == PA_MEMCPY_OK'], [561268, None, u'Identifier', u'ret'], [561267, None, u'Identifier', u'PA_MEMCPY_OK'], [561262, u'True', u'Condition', u'likely ( ret == PA_MEMCPY_OK )'], [561298, u'True', u'CFGEntryNode', u'ENTRY']]","[[561210, None, u'CallExpression', u'DPRINTF ( ""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n"" , ret , len , fault_addr , reference )'], [561222, None, u'Callee', u'DPRINTF'], [561211, None, u'ArgumentList', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [561223, None, u'Identifier', u'DPRINTF'], [561220, None, u'Argument', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [561218, None, u'Argument', u'ret'], [561216, None, u'Argument', u'len'], [561214, None, u'Argument', u'fault_addr'], [561212, None, u'Argument', u'reference'], [561221, None, u'PrimaryExpression', u'""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n""'], [561219, None, u'Identifier', u'ret'], [561217, None, u'Identifier', u'len'], [561215, None, u'Identifier', u'fault_addr'], [561213, None, u'Identifier', u'reference'], [561209, u'True', u'ExpressionStatement', u'DPRINTF ( ""pa_memcpy: fault type = %lu, len=%lu fault_addr=%lu ref=%lu\\n"" , ret , len , fault_addr , reference )'], [561233, None, u'AssignmentExpr', u'reference = ( unsigned long ) srcp'], [561237, None, u'Identifier', u'reference'], [561234, None, u'CastExpression', u'( unsigned long ) srcp'], [561236, None, u'CastTarget', u'unsigned long'], [561235, None, u'Identifier', u'srcp'], [561232, u'True', u'ExpressionStatement', u'reference = ( unsigned long ) srcp'], [561227, None, u'AssignmentExpr', u'reference = ( unsigned long ) dstp'], [561231, None, u'Identifier', u'reference'], [561228, None, u'CastExpression', u'( unsigned long ) dstp'], [561230, None, u'CastTarget', u'unsigned long'], [561229, None, u'Identifier', u'dstp'], [561226, u'True', u'ExpressionStatement', u'reference = ( unsigned long ) dstp'], [561186, None, u'ParameterType', u'unsigned long'], [561185, None, u'Identifier', u'len'], [561184, u'True', u'Parameter', u'unsigned long len'], [561243, None, u'AssignmentExpr', u'fault_addr = d -> fault_addr'], [561247, None, u'Identifier', u'fault_addr'], [561244, None, u'PtrMemberAccess', u'd -> fault_addr'], [561246, None, u'Identifier', u'd'], [561245, None, u'Identifier', u'fault_addr'], [561242, u'True', u'ExpressionStatement', u'fault_addr = d -> fault_addr'], [561272, None, u'AssignmentExpr', u'ret = pa_memcpy_internal ( dstp , srcp , len )'], [561283, None, u'Identifier', u'ret'], [561273, None, u'CallExpression', u'pa_memcpy_internal ( dstp , srcp , len )'], [561281, None, u'Callee', u'pa_memcpy_internal'], [561274, None, u'ArgumentList', u'dstp'], [561282, None, u'Identifier', u'pa_memcpy_internal'], [561279, None, u'Argument', u'dstp'], [561277, None, u'Argument', u'srcp'], [561275, None, u'Argument', u'len'], [561280, None, u'Identifier', u'dstp'], [561278, None, u'Identifier', u'srcp'], [561276, None, u'Identifier', u'len'], [561271, u'True', u'ExpressionStatement', u'ret = pa_memcpy_internal ( dstp , srcp , len )'], [561189, None, u'ParameterType', u'const void *'], [561188, None, u'Identifier', u'srcp'], [561187, u'True', u'Parameter', u'const void * srcp'], [561192, None, u'ParameterType', u'void *'], [561191, None, u'Identifier', u'dstp'], [561190, u'True', u'Parameter', u'void * dstp'], [561249, None, u'AssignmentExpr', u'd = this_cpu_ptr ( & exception_data )'], [561258, None, u'Identifier', u'd'], [561250, None, u'CallExpression', u'this_cpu_ptr ( & exception_data )'], [561256, None, u'Callee', u'this_cpu_ptr'], [561251, None, u'ArgumentList', u'& exception_data'], [561257, None, u'Identifier', u'this_cpu_ptr'], [561252, None, u'Argument', u'& exception_data'], [561253, None, u'UnaryOp', u'& exception_data'], [561255, None, u'UnaryOperator', u'&'], [561254, None, u'Identifier', u'exception_data'], [561248, u'True', u'ExpressionStatement', u'd = this_cpu_ptr ( & exception_data )']]"
"Btrfs: bring back repair during read

Commit 20a7db8ab3f2 (""btrfs: add dummy callback for readpage_io_failed
and drop checks"") made a cleanup around readpage_io_failed_hook, and
it was supposed to keep the original sematics, but it also
unexpectedly disabled repair during read for dup, raid1 and raid10.

This fixes the problem by letting data's inode call the generic
readpage_io_failed callback by returning -EAGAIN from its
readpage_io_failed_hook in order to notify end_bio_extent_readpage to
do the rest.  We don't call it directly because the generic one takes
an offset from end_bio_extent_readpage() to calculate the index in the
checksum array and inode's readpage_io_failed_hook doesn't offer that
offset.

Cc: David Sterba <dsterba@suse.cz>
Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
Reviewed-by: David Sterba <dsterba@suse.com>
[ keep the const function attribute ]
Signed-off-by: David Sterba <dsterba@suse.com>",fs/btrfs/extent_io.c,+,"[[572910, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )']]","[[572911, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [572928, None, u'Identifier', u'ret'], [572912, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [572926, None, u'Callee', u'bio_readpage_error'], [572913, None, u'ArgumentList', u'bio'], [572927, None, u'Identifier', u'bio_readpage_error'], [572924, None, u'Argument', u'bio'], [572922, None, u'Argument', u'offset'], [572920, None, u'Argument', u'page'], [572918, None, u'Argument', u'start'], [572916, None, u'Argument', u'end'], [572914, None, u'Argument', u'mirror'], [572925, None, u'Identifier', u'bio'], [572923, None, u'Identifier', u'offset'], [572921, None, u'Identifier', u'page'], [572919, None, u'Identifier', u'start'], [572917, None, u'Identifier', u'end'], [572915, None, u'Identifier', u'mirror'], [572910, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [572930, None, u'EqualityExpression', u'ret == - EAGAIN'], [572934, None, u'Identifier', u'ret'], [572931, None, u'UnaryOp', u'- EAGAIN'], [572933, None, u'UnaryOperator', u'-'], [572932, None, u'Identifier', u'EAGAIN'], [572929, u'True', u'Condition', u'ret == - EAGAIN'], [572951, None, u'PtrMemberAccess', u'tree -> ops'], [572953, None, u'Identifier', u'tree'], [572952, None, u'Identifier', u'ops'], [572950, u'True', u'Condition', u'tree -> ops'], [572958, None, u'CallExpression', u'likely ( uptodate )'], [572962, None, u'Callee', u'likely'], [572959, None, u'ArgumentList', u'uptodate'], [572963, None, u'Identifier', u'likely'], [572960, None, u'Argument', u'uptodate'], [572961, None, u'Identifier', u'uptodate'], [572957, u'True', u'Condition', u'likely ( uptodate )'], [573275, u'True', u'CFGEntryNode', u'ENTRY']]","[[572911, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [572928, None, u'Identifier', u'ret'], [572912, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [572926, None, u'Callee', u'bio_readpage_error'], [572913, None, u'ArgumentList', u'bio'], [572927, None, u'Identifier', u'bio_readpage_error'], [572924, None, u'Argument', u'bio'], [572922, None, u'Argument', u'offset'], [572920, None, u'Argument', u'page'], [572918, None, u'Argument', u'start'], [572916, None, u'Argument', u'end'], [572914, None, u'Argument', u'mirror'], [572925, None, u'Identifier', u'bio'], [572923, None, u'Identifier', u'offset'], [572921, None, u'Identifier', u'page'], [572919, None, u'Identifier', u'start'], [572917, None, u'Identifier', u'end'], [572915, None, u'Identifier', u'mirror'], [572910, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [573238, None, u'IdentifierDecl', u'offset = 0'], [573243, None, u'IdentifierDeclType', u'u64'], [573242, None, u'Identifier', u'offset'], [573239, None, u'AssignmentExpr', u'offset = 0'], [573241, None, u'Identifier', u'offset'], [573240, None, u'PrimaryExpression', u'0'], [573237, u'True', u'IdentifierDeclStatement', u'u64 offset = 0 ;'], [573039, None, u'AssignmentExpr', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [573051, None, u'Identifier', u'end'], [573040, None, u'AdditiveExpression', u'start + bvec -> bv_offset + bvec -> bv_len - 1'], [573050, None, u'Identifier', u'start'], [573041, None, u'AdditiveExpression', u'bvec -> bv_offset + bvec -> bv_len - 1'], [573047, None, u'PtrMemberAccess', u'bvec -> bv_offset'], [573042, None, u'AdditiveExpression', u'bvec -> bv_len - 1'], [573049, None, u'Identifier', u'bvec'], [573048, None, u'Identifier', u'bv_offset'], [573044, None, u'PtrMemberAccess', u'bvec -> bv_len'], [573043, None, u'PrimaryExpression', u'1'], [573046, None, u'Identifier', u'bvec'], [573045, None, u'Identifier', u'bv_len'], [573038, u'True', u'ExpressionStatement', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [573027, None, u'AssignmentExpr', u'mirror = io_bio -> mirror_num'], [573031, None, u'Identifier', u'mirror'], [573028, None, u'PtrMemberAccess', u'io_bio -> mirror_num'], [573030, None, u'Identifier', u'io_bio'], [573029, None, u'Identifier', u'mirror_num'], [573026, u'True', u'ExpressionStatement', u'mirror = io_bio -> mirror_num'], [573053, None, u'AssignmentExpr', u'start = page_offset ( page )'], [573060, None, u'Identifier', u'start'], [573054, None, u'CallExpression', u'page_offset ( page )'], [573058, None, u'Callee', u'page_offset'], [573055, None, u'ArgumentList', u'page'], [573059, None, u'Identifier', u'page_offset'], [573056, None, u'Argument', u'page'], [573057, None, u'Identifier', u'page'], [573052, u'True', u'ExpressionStatement', u'start = page_offset ( page )'], [572617, None, u'ParameterType', u'struct bio *'], [572616, None, u'Identifier', u'bio'], [572615, u'True', u'Parameter', u'struct bio * bio'], [573183, None, u'IdentifierDecl', u'* page = bvec -> bv_page'], [573190, None, u'IdentifierDeclType', u'struct page *'], [573189, None, u'Identifier', u'page'], [573184, None, u'AssignmentExpr', u'* page = bvec -> bv_page'], [573188, None, u'Identifier', u'page'], [573185, None, u'PtrMemberAccess', u'bvec -> bv_page'], [573187, None, u'Identifier', u'bvec'], [573186, None, u'Identifier', u'bv_page'], [573182, u'True', u'IdentifierDeclStatement', u'struct page * page = bvec -> bv_page ;'], [573272, None, u'IdentifierDecl', u'* bvec'], [573274, None, u'IdentifierDeclType', u'struct bio_vec *'], [573273, None, u'Identifier', u'bvec'], [573271, u'True', u'IdentifierDeclStatement', u'struct bio_vec * bvec ;'], [573249, None, u'IdentifierDecl', u'* io_bio = btrfs_io_bio ( bio )'], [573259, None, u'IdentifierDeclType', u'struct btrfs_io_bio *'], [573258, None, u'Identifier', u'io_bio'], [573250, None, u'AssignmentExpr', u'* io_bio = btrfs_io_bio ( bio )'], [573257, None, u'Identifier', u'io_bio'], [573251, None, u'CallExpression', u'btrfs_io_bio ( bio )'], [573255, None, u'Callee', u'btrfs_io_bio'], [573252, None, u'ArgumentList', u'bio'], [573256, None, u'Identifier', u'btrfs_io_bio'], [573253, None, u'Argument', u'bio'], [573254, None, u'Identifier', u'bio'], [573248, u'True', u'IdentifierDeclStatement', u'struct btrfs_io_bio * io_bio = btrfs_io_bio ( bio ) ;']]"
"Btrfs: bring back repair during read

Commit 20a7db8ab3f2 (""btrfs: add dummy callback for readpage_io_failed
and drop checks"") made a cleanup around readpage_io_failed_hook, and
it was supposed to keep the original sematics, but it also
unexpectedly disabled repair during read for dup, raid1 and raid10.

This fixes the problem by letting data's inode call the generic
readpage_io_failed callback by returning -EAGAIN from its
readpage_io_failed_hook in order to notify end_bio_extent_readpage to
do the rest.  We don't call it directly because the generic one takes
an offset from end_bio_extent_readpage() to calculate the index in the
checksum array and inode's readpage_io_failed_hook doesn't offer that
offset.

Cc: David Sterba <dsterba@suse.cz>
Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
Reviewed-by: David Sterba <dsterba@suse.com>
[ keep the const function attribute ]
Signed-off-by: David Sterba <dsterba@suse.com>",fs/btrfs/extent_io.c,-,"[[602128, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )']]","[[602129, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [602146, None, u'Identifier', u'ret'], [602130, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [602144, None, u'Callee', u'bio_readpage_error'], [602131, None, u'ArgumentList', u'bio'], [602145, None, u'Identifier', u'bio_readpage_error'], [602142, None, u'Argument', u'bio'], [602140, None, u'Argument', u'offset'], [602138, None, u'Argument', u'page'], [602136, None, u'Argument', u'start'], [602134, None, u'Argument', u'end'], [602132, None, u'Argument', u'mirror'], [602143, None, u'Identifier', u'bio'], [602141, None, u'Identifier', u'offset'], [602139, None, u'Identifier', u'page'], [602137, None, u'Identifier', u'start'], [602135, None, u'Identifier', u'end'], [602133, None, u'Identifier', u'mirror'], [602128, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [602179, None, u'PtrMemberAccess', u'tree -> ops'], [602181, None, u'Identifier', u'tree'], [602180, None, u'Identifier', u'ops'], [602178, u'True', u'Condition', u'tree -> ops'], [602186, None, u'CallExpression', u'likely ( uptodate )'], [602190, None, u'Callee', u'likely'], [602187, None, u'ArgumentList', u'uptodate'], [602191, None, u'Identifier', u'likely'], [602188, None, u'Argument', u'uptodate'], [602189, None, u'Identifier', u'uptodate'], [602185, u'True', u'Condition', u'likely ( uptodate )'], [602503, u'True', u'CFGEntryNode', u'ENTRY']]","[[602129, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [602146, None, u'Identifier', u'ret'], [602130, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [602144, None, u'Callee', u'bio_readpage_error'], [602131, None, u'ArgumentList', u'bio'], [602145, None, u'Identifier', u'bio_readpage_error'], [602142, None, u'Argument', u'bio'], [602140, None, u'Argument', u'offset'], [602138, None, u'Argument', u'page'], [602136, None, u'Argument', u'start'], [602134, None, u'Argument', u'end'], [602132, None, u'Argument', u'mirror'], [602143, None, u'Identifier', u'bio'], [602141, None, u'Identifier', u'offset'], [602139, None, u'Identifier', u'page'], [602137, None, u'Identifier', u'start'], [602135, None, u'Identifier', u'end'], [602133, None, u'Identifier', u'mirror'], [602128, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [602466, None, u'IdentifierDecl', u'offset = 0'], [602471, None, u'IdentifierDeclType', u'u64'], [602470, None, u'Identifier', u'offset'], [602467, None, u'AssignmentExpr', u'offset = 0'], [602469, None, u'Identifier', u'offset'], [602468, None, u'PrimaryExpression', u'0'], [602465, u'True', u'IdentifierDeclStatement', u'u64 offset = 0 ;'], [602267, None, u'AssignmentExpr', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [602279, None, u'Identifier', u'end'], [602268, None, u'AdditiveExpression', u'start + bvec -> bv_offset + bvec -> bv_len - 1'], [602278, None, u'Identifier', u'start'], [602269, None, u'AdditiveExpression', u'bvec -> bv_offset + bvec -> bv_len - 1'], [602275, None, u'PtrMemberAccess', u'bvec -> bv_offset'], [602270, None, u'AdditiveExpression', u'bvec -> bv_len - 1'], [602277, None, u'Identifier', u'bvec'], [602276, None, u'Identifier', u'bv_offset'], [602272, None, u'PtrMemberAccess', u'bvec -> bv_len'], [602271, None, u'PrimaryExpression', u'1'], [602274, None, u'Identifier', u'bvec'], [602273, None, u'Identifier', u'bv_len'], [602266, u'True', u'ExpressionStatement', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [602255, None, u'AssignmentExpr', u'mirror = io_bio -> mirror_num'], [602259, None, u'Identifier', u'mirror'], [602256, None, u'PtrMemberAccess', u'io_bio -> mirror_num'], [602258, None, u'Identifier', u'io_bio'], [602257, None, u'Identifier', u'mirror_num'], [602254, u'True', u'ExpressionStatement', u'mirror = io_bio -> mirror_num'], [602281, None, u'AssignmentExpr', u'start = page_offset ( page )'], [602288, None, u'Identifier', u'start'], [602282, None, u'CallExpression', u'page_offset ( page )'], [602286, None, u'Callee', u'page_offset'], [602283, None, u'ArgumentList', u'page'], [602287, None, u'Identifier', u'page_offset'], [602284, None, u'Argument', u'page'], [602285, None, u'Identifier', u'page'], [602280, u'True', u'ExpressionStatement', u'start = page_offset ( page )'], [601847, None, u'ParameterType', u'struct bio *'], [601846, None, u'Identifier', u'bio'], [601845, u'True', u'Parameter', u'struct bio * bio'], [602411, None, u'IdentifierDecl', u'* page = bvec -> bv_page'], [602418, None, u'IdentifierDeclType', u'struct page *'], [602417, None, u'Identifier', u'page'], [602412, None, u'AssignmentExpr', u'* page = bvec -> bv_page'], [602416, None, u'Identifier', u'page'], [602413, None, u'PtrMemberAccess', u'bvec -> bv_page'], [602415, None, u'Identifier', u'bvec'], [602414, None, u'Identifier', u'bv_page'], [602410, u'True', u'IdentifierDeclStatement', u'struct page * page = bvec -> bv_page ;'], [602500, None, u'IdentifierDecl', u'* bvec'], [602502, None, u'IdentifierDeclType', u'struct bio_vec *'], [602501, None, u'Identifier', u'bvec'], [602499, u'True', u'IdentifierDeclStatement', u'struct bio_vec * bvec ;'], [602477, None, u'IdentifierDecl', u'* io_bio = btrfs_io_bio ( bio )'], [602487, None, u'IdentifierDeclType', u'struct btrfs_io_bio *'], [602486, None, u'Identifier', u'io_bio'], [602478, None, u'AssignmentExpr', u'* io_bio = btrfs_io_bio ( bio )'], [602485, None, u'Identifier', u'io_bio'], [602479, None, u'CallExpression', u'btrfs_io_bio ( bio )'], [602483, None, u'Callee', u'btrfs_io_bio'], [602480, None, u'ArgumentList', u'bio'], [602484, None, u'Identifier', u'btrfs_io_bio'], [602481, None, u'Argument', u'bio'], [602482, None, u'Identifier', u'bio'], [602476, u'True', u'IdentifierDeclStatement', u'struct btrfs_io_bio * io_bio = btrfs_io_bio ( bio ) ;']]"
"Btrfs: bring back repair during read

Commit 20a7db8ab3f2 (""btrfs: add dummy callback for readpage_io_failed
and drop checks"") made a cleanup around readpage_io_failed_hook, and
it was supposed to keep the original sematics, but it also
unexpectedly disabled repair during read for dup, raid1 and raid10.

This fixes the problem by letting data's inode call the generic
readpage_io_failed callback by returning -EAGAIN from its
readpage_io_failed_hook in order to notify end_bio_extent_readpage to
do the rest.  We don't call it directly because the generic one takes
an offset from end_bio_extent_readpage() to calculate the index in the
checksum array and inode's readpage_io_failed_hook doesn't offer that
offset.

Cc: David Sterba <dsterba@suse.cz>
Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
Reviewed-by: David Sterba <dsterba@suse.com>
[ keep the const function attribute ]
Signed-off-by: David Sterba <dsterba@suse.com>",fs/btrfs/extent_io.c,+,"[[572878, u'True', u'ExpressionStatement', u'ASSERT ( ret == - EIO )']]","[[572879, None, u'CallExpression', u'ASSERT ( ret == - EIO )'], [572887, None, u'Callee', u'ASSERT'], [572880, None, u'ArgumentList', u'ret == - EIO'], [572888, None, u'Identifier', u'ASSERT'], [572881, None, u'Argument', u'ret == - EIO'], [572882, None, u'EqualityExpression', u'ret == - EIO'], [572886, None, u'Identifier', u'ret'], [572883, None, u'UnaryOp', u'- EIO'], [572885, None, u'UnaryOperator', u'-'], [572884, None, u'Identifier', u'EIO'], [572878, u'True', u'ExpressionStatement', u'ASSERT ( ret == - EIO )'], [572951, None, u'PtrMemberAccess', u'tree -> ops'], [572953, None, u'Identifier', u'tree'], [572952, None, u'Identifier', u'ops'], [572950, u'True', u'Condition', u'tree -> ops'], [572958, None, u'CallExpression', u'likely ( uptodate )'], [572962, None, u'Callee', u'likely'], [572959, None, u'ArgumentList', u'uptodate'], [572963, None, u'Identifier', u'likely'], [572960, None, u'Argument', u'uptodate'], [572961, None, u'Identifier', u'uptodate'], [572957, u'True', u'Condition', u'likely ( uptodate )'], [573275, u'True', u'CFGEntryNode', u'ENTRY']]","[[572879, None, u'CallExpression', u'ASSERT ( ret == - EIO )'], [572887, None, u'Callee', u'ASSERT'], [572880, None, u'ArgumentList', u'ret == - EIO'], [572888, None, u'Identifier', u'ASSERT'], [572881, None, u'Argument', u'ret == - EIO'], [572882, None, u'EqualityExpression', u'ret == - EIO'], [572886, None, u'Identifier', u'ret'], [572883, None, u'UnaryOp', u'- EIO'], [572885, None, u'UnaryOperator', u'-'], [572884, None, u'Identifier', u'EIO'], [572878, u'True', u'ExpressionStatement', u'ASSERT ( ret == - EIO )'], [572911, None, u'AssignmentExpr', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [572928, None, u'Identifier', u'ret'], [572912, None, u'CallExpression', u'bio_readpage_error ( bio , offset , page , start , end , mirror )'], [572926, None, u'Callee', u'bio_readpage_error'], [572913, None, u'ArgumentList', u'bio'], [572927, None, u'Identifier', u'bio_readpage_error'], [572924, None, u'Argument', u'bio'], [572922, None, u'Argument', u'offset'], [572920, None, u'Argument', u'page'], [572918, None, u'Argument', u'start'], [572916, None, u'Argument', u'end'], [572914, None, u'Argument', u'mirror'], [572925, None, u'Identifier', u'bio'], [572923, None, u'Identifier', u'offset'], [572921, None, u'Identifier', u'page'], [572919, None, u'Identifier', u'start'], [572917, None, u'Identifier', u'end'], [572915, None, u'Identifier', u'mirror'], [572910, u'True', u'ExpressionStatement', u'ret = bio_readpage_error ( bio , offset , page , start , end , mirror )'], [572936, None, u'AssignmentExpr', u'ret = tree -> ops -> readpage_io_failed_hook ( page , mirror )'], [572949, None, u'Identifier', u'ret'], [572937, None, u'CallExpression', u'tree -> ops -> readpage_io_failed_hook ( page , mirror )'], [572943, None, u'Callee', u'tree -> ops -> readpage_io_failed_hook'], [572938, None, u'ArgumentList', u'page'], [572944, None, u'PtrMemberAccess', u'tree -> ops -> readpage_io_failed_hook'], [572941, None, u'Argument', u'page'], [572939, None, u'Argument', u'mirror'], [572946, None, u'PtrMemberAccess', u'tree -> ops'], [572945, None, u'Identifier', u'readpage_io_failed_hook'], [572942, None, u'Identifier', u'page'], [572940, None, u'Identifier', u'mirror'], [572948, None, u'Identifier', u'tree'], [572947, None, u'Identifier', u'ops'], [572935, u'True', u'ExpressionStatement', u'ret = tree -> ops -> readpage_io_failed_hook ( page , mirror )'], [573238, None, u'IdentifierDecl', u'offset = 0'], [573243, None, u'IdentifierDeclType', u'u64'], [573242, None, u'Identifier', u'offset'], [573239, None, u'AssignmentExpr', u'offset = 0'], [573241, None, u'Identifier', u'offset'], [573240, None, u'PrimaryExpression', u'0'], [573237, u'True', u'IdentifierDeclStatement', u'u64 offset = 0 ;'], [573039, None, u'AssignmentExpr', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [573051, None, u'Identifier', u'end'], [573040, None, u'AdditiveExpression', u'start + bvec -> bv_offset + bvec -> bv_len - 1'], [573050, None, u'Identifier', u'start'], [573041, None, u'AdditiveExpression', u'bvec -> bv_offset + bvec -> bv_len - 1'], [573047, None, u'PtrMemberAccess', u'bvec -> bv_offset'], [573042, None, u'AdditiveExpression', u'bvec -> bv_len - 1'], [573049, None, u'Identifier', u'bvec'], [573048, None, u'Identifier', u'bv_offset'], [573044, None, u'PtrMemberAccess', u'bvec -> bv_len'], [573043, None, u'PrimaryExpression', u'1'], [573046, None, u'Identifier', u'bvec'], [573045, None, u'Identifier', u'bv_len'], [573038, u'True', u'ExpressionStatement', u'end = start + bvec -> bv_offset + bvec -> bv_len - 1'], [573027, None, u'AssignmentExpr', u'mirror = io_bio -> mirror_num'], [573031, None, u'Identifier', u'mirror'], [573028, None, u'PtrMemberAccess', u'io_bio -> mirror_num'], [573030, None, u'Identifier', u'io_bio'], [573029, None, u'Identifier', u'mirror_num'], [573026, u'True', u'ExpressionStatement', u'mirror = io_bio -> mirror_num'], [573053, None, u'AssignmentExpr', u'start = page_offset ( page )'], [573060, None, u'Identifier', u'start'], [573054, None, u'CallExpression', u'page_offset ( page )'], [573058, None, u'Callee', u'page_offset'], [573055, None, u'ArgumentList', u'page'], [573059, None, u'Identifier', u'page_offset'], [573056, None, u'Argument', u'page'], [573057, None, u'Identifier', u'page'], [573052, u'True', u'ExpressionStatement', u'start = page_offset ( page )'], [572617, None, u'ParameterType', u'struct bio *'], [572616, None, u'Identifier', u'bio'], [572615, u'True', u'Parameter', u'struct bio * bio'], [573183, None, u'IdentifierDecl', u'* page = bvec -> bv_page'], [573190, None, u'IdentifierDeclType', u'struct page *'], [573189, None, u'Identifier', u'page'], [573184, None, u'AssignmentExpr', u'* page = bvec -> bv_page'], [573188, None, u'Identifier', u'page'], [573185, None, u'PtrMemberAccess', u'bvec -> bv_page'], [573187, None, u'Identifier', u'bvec'], [573186, None, u'Identifier', u'bv_page'], [573182, u'True', u'IdentifierDeclStatement', u'struct page * page = bvec -> bv_page ;'], [573120, None, u'AssignmentExpr', u'tree = & BTRFS_I ( inode ) -> io_tree'], [573131, None, u'Identifier', u'tree'], [573121, None, u'UnaryOp', u'& BTRFS_I ( inode ) -> io_tree'], [573130, None, u'UnaryOperator', u'&'], [573122, None, u'PtrMemberAccess', u'BTRFS_I ( inode ) -> io_tree'], [573124, None, u'CallExpression', u'BTRFS_I ( inode )'], [573123, None, u'Identifier', u'io_tree'], [573128, None, u'Callee', u'BTRFS_I'], [573125, None, u'ArgumentList', u'inode'], [573129, None, u'Identifier', u'BTRFS_I'], [573126, None, u'Argument', u'inode'], [573127, None, u'Identifier', u'inode'], [573119, u'True', u'ExpressionStatement', u'tree = & BTRFS_I ( inode ) -> io_tree'], [573272, None, u'IdentifierDecl', u'* bvec'], [573274, None, u'IdentifierDeclType', u'struct bio_vec *'], [573273, None, u'Identifier', u'bvec'], [573271, u'True', u'IdentifierDeclStatement', u'struct bio_vec * bvec ;'], [573249, None, u'IdentifierDecl', u'* io_bio = btrfs_io_bio ( bio )'], [573259, None, u'IdentifierDeclType', u'struct btrfs_io_bio *'], [573258, None, u'Identifier', u'io_bio'], [573250, None, u'AssignmentExpr', u'* io_bio = btrfs_io_bio ( bio )'], [573257, None, u'Identifier', u'io_bio'], [573251, None, u'CallExpression', u'btrfs_io_bio ( bio )'], [573255, None, u'Callee', u'btrfs_io_bio'], [573252, None, u'ArgumentList', u'bio'], [573256, None, u'Identifier', u'btrfs_io_bio'], [573253, None, u'Argument', u'bio'], [573254, None, u'Identifier', u'bio'], [573248, u'True', u'IdentifierDeclStatement', u'struct btrfs_io_bio * io_bio = btrfs_io_bio ( bio ) ;'], [573172, None, u'IdentifierDecl', u'* inode = page -> mapping -> host'], [573181, None, u'IdentifierDeclType', u'struct inode *'], [573180, None, u'Identifier', u'inode'], [573173, None, u'AssignmentExpr', u'* inode = page -> mapping -> host'], [573179, None, u'Identifier', u'inode'], [573174, None, u'PtrMemberAccess', u'page -> mapping -> host'], [573176, None, u'PtrMemberAccess', u'page -> mapping'], [573175, None, u'Identifier', u'host'], [573178, None, u'Identifier', u'page'], [573177, None, u'Identifier', u'mapping'], [573171, u'True', u'IdentifierDeclStatement', u'struct inode * inode = page -> mapping -> host ;']]"
Merge remote-tracking branch 'asoc/fix/rcar' into asoc-linus,sound/soc/sh/rcar/dma.c,+,"[[621729, u'True', u'ExpressionStatement', u'iowrite32 ( val , addr )']]","[[621730, None, u'CallExpression', u'iowrite32 ( val , addr )'], [621736, None, u'Callee', u'iowrite32'], [621731, None, u'ArgumentList', u'val'], [621737, None, u'Identifier', u'iowrite32'], [621734, None, u'Argument', u'val'], [621732, None, u'Argument', u'addr'], [621735, None, u'Identifier', u'val'], [621733, None, u'Identifier', u'addr'], [621729, u'True', u'ExpressionStatement', u'iowrite32 ( val , addr )'], [621812, u'True', u'CFGEntryNode', u'ENTRY']]","[[621730, None, u'CallExpression', u'iowrite32 ( val , addr )'], [621736, None, u'Callee', u'iowrite32'], [621731, None, u'ArgumentList', u'val'], [621737, None, u'Identifier', u'iowrite32'], [621734, None, u'Argument', u'val'], [621732, None, u'Argument', u'addr'], [621735, None, u'Identifier', u'val'], [621733, None, u'Identifier', u'addr'], [621729, u'True', u'ExpressionStatement', u'iowrite32 ( val , addr )'], [621761, None, u'IdentifierDecl', u'* addr = rsnd_dmapp_addr ( dmac , dma , reg )'], [621775, None, u'IdentifierDeclType', u'void __iomem *'], [621774, None, u'Identifier', u'addr'], [621762, None, u'AssignmentExpr', u'* addr = rsnd_dmapp_addr ( dmac , dma , reg )'], [621773, None, u'Identifier', u'addr'], [621763, None, u'CallExpression', u'rsnd_dmapp_addr ( dmac , dma , reg )'], [621771, None, u'Callee', u'rsnd_dmapp_addr'], [621764, None, u'ArgumentList', u'dmac'], [621772, None, u'Identifier', u'rsnd_dmapp_addr'], [621769, None, u'Argument', u'dmac'], [621767, None, u'Argument', u'dma'], [621765, None, u'Argument', u'reg'], [621770, None, u'Identifier', u'dmac'], [621768, None, u'Identifier', u'dma'], [621766, None, u'Identifier', u'reg'], [621760, u'True', u'IdentifierDeclStatement', u'void __iomem * addr = rsnd_dmapp_addr ( dmac , dma , reg ) ;'], [621739, None, u'AssignmentExpr', u'val |= ( data & mask )'], [621743, None, u'Identifier', u'val'], [621740, None, u'BitAndExpression', u'data & mask'], [621742, None, u'Identifier', u'data'], [621741, None, u'Identifier', u'mask'], [621738, u'True', u'ExpressionStatement', u'val |= ( data & mask )'], [621717, None, u'ParameterType', u'u32'], [621716, None, u'Identifier', u'reg'], [621715, u'True', u'Parameter', u'u32 reg'], [621726, None, u'ParameterType', u'struct rsnd_dma *'], [621725, None, u'Identifier', u'dma'], [621724, u'True', u'Parameter', u'struct rsnd_dma * dma'], [621777, None, u'IdentifierDecl', u'* dmac = rsnd_priv_to_dmac ( priv )'], [621787, None, u'IdentifierDeclType', u'struct rsnd_dma_ctrl *'], [621786, None, u'Identifier', u'dmac'], [621778, None, u'AssignmentExpr', u'* dmac = rsnd_priv_to_dmac ( priv )'], [621785, None, u'Identifier', u'dmac'], [621779, None, u'CallExpression', u'rsnd_priv_to_dmac ( priv )'], [621783, None, u'Callee', u'rsnd_priv_to_dmac'], [621780, None, u'ArgumentList', u'priv'], [621784, None, u'Identifier', u'rsnd_priv_to_dmac'], [621781, None, u'Argument', u'priv'], [621782, None, u'Identifier', u'priv'], [621776, u'True', u'IdentifierDeclStatement', u'struct rsnd_dma_ctrl * dmac = rsnd_priv_to_dmac ( priv ) ;'], [621720, None, u'ParameterType', u'u32'], [621719, None, u'Identifier', u'mask'], [621718, u'True', u'Parameter', u'u32 mask'], [621723, None, u'ParameterType', u'u32'], [621722, None, u'Identifier', u'data'], [621721, u'True', u'Parameter', u'u32 data'], [621745, None, u'AssignmentExpr', u'val &= ~mask'], [621747, None, u'Identifier', u'val'], [621746, None, u'Identifier', u'~mask'], [621744, u'True', u'ExpressionStatement', u'val &= ~mask'], [621789, None, u'IdentifierDecl', u'* priv = rsnd_mod_to_priv ( mod )'], [621799, None, u'IdentifierDeclType', u'struct rsnd_priv *'], [621798, None, u'Identifier', u'priv'], [621790, None, u'AssignmentExpr', u'* priv = rsnd_mod_to_priv ( mod )'], [621797, None, u'Identifier', u'priv'], [621791, None, u'CallExpression', u'rsnd_mod_to_priv ( mod )'], [621795, None, u'Callee', u'rsnd_mod_to_priv'], [621792, None, u'ArgumentList', u'mod'], [621796, None, u'Identifier', u'rsnd_mod_to_priv'], [621793, None, u'Argument', u'mod'], [621794, None, u'Identifier', u'mod'], [621788, u'True', u'IdentifierDeclStatement', u'struct rsnd_priv * priv = rsnd_mod_to_priv ( mod ) ;'], [621749, None, u'IdentifierDecl', u'val = ioread32 ( addr )'], [621759, None, u'IdentifierDeclType', u'u32'], [621758, None, u'Identifier', u'val'], [621750, None, u'AssignmentExpr', u'val = ioread32 ( addr )'], [621757, None, u'Identifier', u'val'], [621751, None, u'CallExpression', u'ioread32 ( addr )'], [621755, None, u'Callee', u'ioread32'], [621752, None, u'ArgumentList', u'addr'], [621756, None, u'Identifier', u'ioread32'], [621753, None, u'Argument', u'addr'], [621754, None, u'Identifier', u'addr'], [621748, u'True', u'IdentifierDeclStatement', u'u32 val = ioread32 ( addr ) ;'], [621801, None, u'IdentifierDecl', u'* mod = rsnd_mod_get ( dma )'], [621811, None, u'IdentifierDeclType', u'struct rsnd_mod *'], [621810, None, u'Identifier', u'mod'], [621802, None, u'AssignmentExpr', u'* mod = rsnd_mod_get ( dma )'], [621809, None, u'Identifier', u'mod'], [621803, None, u'CallExpression', u'rsnd_mod_get ( dma )'], [621807, None, u'Callee', u'rsnd_mod_get'], [621804, None, u'ArgumentList', u'dma'], [621808, None, u'Identifier', u'rsnd_mod_get'], [621805, None, u'Argument', u'dma'], [621806, None, u'Identifier', u'dma'], [621800, u'True', u'IdentifierDeclStatement', u'struct rsnd_mod * mod = rsnd_mod_get ( dma ) ;']]"
Merge remote-tracking branch 'asoc/fix/rcar' into asoc-linus,sound/soc/sh/rcar/dma.c,-,"[[625816, u'True', u'ExpressionStatement', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )']]","[[625817, None, u'CallExpression', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [625825, None, u'Callee', u'rsnd_dmapp_write'], [625818, None, u'ArgumentList', u'dma'], [625826, None, u'Identifier', u'rsnd_dmapp_write'], [625823, None, u'Argument', u'dma'], [625821, None, u'Argument', u'0'], [625819, None, u'Argument', u'PDMACHCR'], [625824, None, u'Identifier', u'dma'], [625822, None, u'PrimaryExpression', u'0'], [625820, None, u'Identifier', u'PDMACHCR'], [625816, u'True', u'ExpressionStatement', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [625843, u'True', u'CFGEntryNode', u'ENTRY']]","[[625817, None, u'CallExpression', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [625825, None, u'Callee', u'rsnd_dmapp_write'], [625818, None, u'ArgumentList', u'dma'], [625826, None, u'Identifier', u'rsnd_dmapp_write'], [625823, None, u'Argument', u'dma'], [625821, None, u'Argument', u'0'], [625819, None, u'Argument', u'PDMACHCR'], [625824, None, u'Identifier', u'dma'], [625822, None, u'PrimaryExpression', u'0'], [625820, None, u'Identifier', u'PDMACHCR'], [625816, u'True', u'ExpressionStatement', u'rsnd_dmapp_write ( dma , 0 , PDMACHCR )'], [625832, None, u'IdentifierDecl', u'* dma = rsnd_mod_to_dma ( mod )'], [625842, None, u'IdentifierDeclType', u'struct rsnd_dma *'], [625841, None, u'Identifier', u'dma'], [625833, None, u'AssignmentExpr', u'* dma = rsnd_mod_to_dma ( mod )'], [625840, None, u'Identifier', u'dma'], [625834, None, u'CallExpression', u'rsnd_mod_to_dma ( mod )'], [625838, None, u'Callee', u'rsnd_mod_to_dma'], [625835, None, u'ArgumentList', u'mod'], [625839, None, u'Identifier', u'rsnd_mod_to_dma'], [625836, None, u'Argument', u'mod'], [625837, None, u'Identifier', u'mod'], [625831, u'True', u'IdentifierDeclStatement', u'struct rsnd_dma * dma = rsnd_mod_to_dma ( mod ) ;'], [625775, None, u'ParameterType', u'struct rsnd_mod *'], [625774, None, u'Identifier', u'mod'], [625773, u'True', u'Parameter', u'struct rsnd_mod * mod']]"
"NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes

Fix a filelayout GETDEVICEINFO call hang triggered from the LAYOUTGET
pnfs_layout_process where the GETDEVICEINFO call is waiting for a
session slot, and the LAYOUGET call is waiting for pnfs_layout_process
to complete before freeing the slot GETDEVICEINFO is waiting for..

This occurs in testing against the pynfs pNFS server where the
the on-wire reply highest_slotid and slot id are zero, and the
target high slot id is 8 (negotiated in CREATE_SESSION).

The internal fore channel slot table max_slotid, the maximum allowed
table slotid value, has been reduced via nfs41_set_max_slotid_locked
 from 8 to 1.  Thus there is one slot (slotid 0) available for use but
it has not been freed by LAYOUTGET  proir to the GETDEVICEINFO request.

In order to ensure that layoutrecall callbacks are processed in the
correct order, nfs4_proc_layoutget processing needs to be finished
e.g. pnfs_layout_process) before giving up the slot that identifies
the layoutget (see referring_call_exists).

Move the filelayout_check_layout nfs4_find_get_device call outside of
the pnfs_layout_process call tree.

Signed-off-by: Andy Adamson <andros@netapp.com>
Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>",fs/nfs/filelayout/filelayout.c,+,"[[636508, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )']]","[[636509, None, u'CallExpression', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [636519, None, u'Callee', u'dprintk'], [636510, None, u'ArgumentList', u'""%s Bad first_stripe_index %u\\n""'], [636520, None, u'Identifier', u'dprintk'], [636517, None, u'Argument', u'""%s Bad first_stripe_index %u\\n""'], [636515, None, u'Argument', u'__func__'], [636511, None, u'Argument', u'fl -> first_stripe_index'], [636518, None, u'PrimaryExpression', u'""%s Bad first_stripe_index %u\\n""'], [636516, None, u'Identifier', u'__func__'], [636512, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [636514, None, u'Identifier', u'fl'], [636513, None, u'Identifier', u'first_stripe_index'], [636508, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [636522, None, u'RelationalExpression', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [636526, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [636523, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [636528, None, u'Identifier', u'fl'], [636527, None, u'Identifier', u'first_stripe_index'], [636525, None, u'Identifier', u'dsaddr'], [636524, None, u'Identifier', u'stripe_count'], [636521, u'True', u'Condition', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [636539, None, u'CallExpression', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [636547, None, u'Callee', u'filelayout_test_devid_unavailable'], [636540, None, u'ArgumentList', u'& dsaddr -> id_node'], [636548, None, u'Identifier', u'filelayout_test_devid_unavailable'], [636541, None, u'Argument', u'& dsaddr -> id_node'], [636542, None, u'UnaryOp', u'& dsaddr -> id_node'], [636546, None, u'UnaryOperator', u'&'], [636543, None, u'PtrMemberAccess', u'dsaddr -> id_node'], [636545, None, u'Identifier', u'dsaddr'], [636544, None, u'Identifier', u'id_node'], [636538, u'True', u'Condition', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [636565, None, u'EqualityExpression', u'd == NULL'], [636567, None, u'Identifier', u'd'], [636566, None, u'Identifier', u'NULL'], [636564, u'True', u'Condition', u'd == NULL'], [636613, u'True', u'CFGEntryNode', u'ENTRY']]","[[636509, None, u'CallExpression', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [636519, None, u'Callee', u'dprintk'], [636510, None, u'ArgumentList', u'""%s Bad first_stripe_index %u\\n""'], [636520, None, u'Identifier', u'dprintk'], [636517, None, u'Argument', u'""%s Bad first_stripe_index %u\\n""'], [636515, None, u'Argument', u'__func__'], [636511, None, u'Argument', u'fl -> first_stripe_index'], [636518, None, u'PrimaryExpression', u'""%s Bad first_stripe_index %u\\n""'], [636516, None, u'Identifier', u'__func__'], [636512, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [636514, None, u'Identifier', u'fl'], [636513, None, u'Identifier', u'first_stripe_index'], [636508, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [636428, None, u'ParameterType', u'struct nfs4_filelayout_segment *'], [636427, None, u'Identifier', u'fl'], [636426, u'True', u'Parameter', u'struct nfs4_filelayout_segment * fl'], [636530, None, u'AssignmentExpr', u'fl -> dsaddr = dsaddr'], [636532, None, u'PtrMemberAccess', u'fl -> dsaddr'], [636531, None, u'Identifier', u'dsaddr'], [636534, None, u'Identifier', u'fl'], [636533, None, u'Identifier', u'dsaddr'], [636529, u'True', u'ExpressionStatement', u'fl -> dsaddr = dsaddr'], [636606, None, u'IdentifierDecl', u'* dsaddr'], [636608, None, u'IdentifierDeclType', u'struct nfs4_file_layout_dsaddr *'], [636607, None, u'Identifier', u'dsaddr'], [636605, u'True', u'IdentifierDeclStatement', u'struct nfs4_file_layout_dsaddr * dsaddr ;']]"
"NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes

Fix a filelayout GETDEVICEINFO call hang triggered from the LAYOUTGET
pnfs_layout_process where the GETDEVICEINFO call is waiting for a
session slot, and the LAYOUGET call is waiting for pnfs_layout_process
to complete before freeing the slot GETDEVICEINFO is waiting for..

This occurs in testing against the pynfs pNFS server where the
the on-wire reply highest_slotid and slot id are zero, and the
target high slot id is 8 (negotiated in CREATE_SESSION).

The internal fore channel slot table max_slotid, the maximum allowed
table slotid value, has been reduced via nfs41_set_max_slotid_locked
 from 8 to 1.  Thus there is one slot (slotid 0) available for use but
it has not been freed by LAYOUTGET  proir to the GETDEVICEINFO request.

In order to ensure that layoutrecall callbacks are processed in the
correct order, nfs4_proc_layoutget processing needs to be finished
e.g. pnfs_layout_process) before giving up the slot that identifies
the layoutget (see referring_call_exists).

Move the filelayout_check_layout nfs4_find_get_device call outside of
the pnfs_layout_process call tree.

Signed-off-by: Andy Adamson <andros@netapp.com>
Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>",fs/nfs/filelayout/filelayout.c,+,"[[636457, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )']]","[[636458, None, u'CallExpression', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [636468, None, u'Callee', u'dprintk'], [636459, None, u'ArgumentList', u'""%s num_fh %u not valid for given packing\\n""'], [636469, None, u'Identifier', u'dprintk'], [636466, None, u'Argument', u'""%s num_fh %u not valid for given packing\\n""'], [636464, None, u'Argument', u'__func__'], [636460, None, u'Argument', u'fl -> num_fh'], [636467, None, u'PrimaryExpression', u'""%s num_fh %u not valid for given packing\\n""'], [636465, None, u'Identifier', u'__func__'], [636461, None, u'PtrMemberAccess', u'fl -> num_fh'], [636463, None, u'Identifier', u'fl'], [636462, None, u'Identifier', u'num_fh'], [636457, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [636471, None, u'OrExpression', u'( fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num ) || ( fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count )'], [636485, None, u'AndExpression', u'fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num'], [636472, None, u'AndExpression', u'fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count'], [636499, None, u'EqualityExpression', u'fl -> stripe_type == STRIPE_SPARSE'], [636486, None, u'AndExpression', u'fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num'], [636480, None, u'EqualityExpression', u'fl -> stripe_type == STRIPE_DENSE'], [636473, None, u'EqualityExpression', u'fl -> num_fh != dsaddr -> stripe_count'], [636501, None, u'PtrMemberAccess', u'fl -> stripe_type'], [636500, None, u'Identifier', u'STRIPE_SPARSE'], [636494, None, u'RelationalExpression', u'fl -> num_fh > 1'], [636487, None, u'EqualityExpression', u'fl -> num_fh != dsaddr -> ds_num'], [636482, None, u'PtrMemberAccess', u'fl -> stripe_type'], [636481, None, u'Identifier', u'STRIPE_DENSE'], [636477, None, u'PtrMemberAccess', u'fl -> num_fh'], [636474, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [636503, None, u'Identifier', u'fl'], [636502, None, u'Identifier', u'stripe_type'], [636496, None, u'PtrMemberAccess', u'fl -> num_fh'], [636495, None, u'PrimaryExpression', u'1'], [636491, None, u'PtrMemberAccess', u'fl -> num_fh'], [636488, None, u'PtrMemberAccess', u'dsaddr -> ds_num'], [636484, None, u'Identifier', u'fl'], [636483, None, u'Identifier', u'stripe_type'], [636479, None, u'Identifier', u'fl'], [636478, None, u'Identifier', u'num_fh'], [636476, None, u'Identifier', u'dsaddr'], [636475, None, u'Identifier', u'stripe_count'], [636498, None, u'Identifier', u'fl'], [636497, None, u'Identifier', u'num_fh'], [636493, None, u'Identifier', u'fl'], [636492, None, u'Identifier', u'num_fh'], [636490, None, u'Identifier', u'dsaddr'], [636489, None, u'Identifier', u'ds_num'], [636470, u'True', u'Condition', u'( fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num ) || ( fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count )'], [636522, None, u'RelationalExpression', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [636526, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [636523, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [636528, None, u'Identifier', u'fl'], [636527, None, u'Identifier', u'first_stripe_index'], [636525, None, u'Identifier', u'dsaddr'], [636524, None, u'Identifier', u'stripe_count'], [636521, u'True', u'Condition', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [636539, None, u'CallExpression', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [636547, None, u'Callee', u'filelayout_test_devid_unavailable'], [636540, None, u'ArgumentList', u'& dsaddr -> id_node'], [636548, None, u'Identifier', u'filelayout_test_devid_unavailable'], [636541, None, u'Argument', u'& dsaddr -> id_node'], [636542, None, u'UnaryOp', u'& dsaddr -> id_node'], [636546, None, u'UnaryOperator', u'&'], [636543, None, u'PtrMemberAccess', u'dsaddr -> id_node'], [636545, None, u'Identifier', u'dsaddr'], [636544, None, u'Identifier', u'id_node'], [636538, u'True', u'Condition', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [636565, None, u'EqualityExpression', u'd == NULL'], [636567, None, u'Identifier', u'd'], [636566, None, u'Identifier', u'NULL'], [636564, u'True', u'Condition', u'd == NULL'], [636613, u'True', u'CFGEntryNode', u'ENTRY']]","[[636458, None, u'CallExpression', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [636468, None, u'Callee', u'dprintk'], [636459, None, u'ArgumentList', u'""%s num_fh %u not valid for given packing\\n""'], [636469, None, u'Identifier', u'dprintk'], [636466, None, u'Argument', u'""%s num_fh %u not valid for given packing\\n""'], [636464, None, u'Argument', u'__func__'], [636460, None, u'Argument', u'fl -> num_fh'], [636467, None, u'PrimaryExpression', u'""%s num_fh %u not valid for given packing\\n""'], [636465, None, u'Identifier', u'__func__'], [636461, None, u'PtrMemberAccess', u'fl -> num_fh'], [636463, None, u'Identifier', u'fl'], [636462, None, u'Identifier', u'num_fh'], [636457, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [636428, None, u'ParameterType', u'struct nfs4_filelayout_segment *'], [636427, None, u'Identifier', u'fl'], [636426, u'True', u'Parameter', u'struct nfs4_filelayout_segment * fl'], [636530, None, u'AssignmentExpr', u'fl -> dsaddr = dsaddr'], [636532, None, u'PtrMemberAccess', u'fl -> dsaddr'], [636531, None, u'Identifier', u'dsaddr'], [636534, None, u'Identifier', u'fl'], [636533, None, u'Identifier', u'dsaddr'], [636529, u'True', u'ExpressionStatement', u'fl -> dsaddr = dsaddr'], [636606, None, u'IdentifierDecl', u'* dsaddr'], [636608, None, u'IdentifierDeclType', u'struct nfs4_file_layout_dsaddr *'], [636607, None, u'Identifier', u'dsaddr'], [636605, u'True', u'IdentifierDeclStatement', u'struct nfs4_file_layout_dsaddr * dsaddr ;']]"
"NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes

Fix a filelayout GETDEVICEINFO call hang triggered from the LAYOUTGET
pnfs_layout_process where the GETDEVICEINFO call is waiting for a
session slot, and the LAYOUGET call is waiting for pnfs_layout_process
to complete before freeing the slot GETDEVICEINFO is waiting for..

This occurs in testing against the pynfs pNFS server where the
the on-wire reply highest_slotid and slot id are zero, and the
target high slot id is 8 (negotiated in CREATE_SESSION).

The internal fore channel slot table max_slotid, the maximum allowed
table slotid value, has been reduced via nfs41_set_max_slotid_locked
 from 8 to 1.  Thus there is one slot (slotid 0) available for use but
it has not been freed by LAYOUTGET  proir to the GETDEVICEINFO request.

In order to ensure that layoutrecall callbacks are processed in the
correct order, nfs4_proc_layoutget processing needs to be finished
e.g. pnfs_layout_process) before giving up the slot that identifies
the layoutget (see referring_call_exists).

Move the filelayout_check_layout nfs4_find_get_device call outside of
the pnfs_layout_process call tree.

Signed-off-by: Andy Adamson <andros@netapp.com>
Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>",fs/nfs/filelayout/filelayout.c,-,"[[642734, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )']]","[[642735, None, u'CallExpression', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [642745, None, u'Callee', u'dprintk'], [642736, None, u'ArgumentList', u'""%s Bad first_stripe_index %u\\n""'], [642746, None, u'Identifier', u'dprintk'], [642743, None, u'Argument', u'""%s Bad first_stripe_index %u\\n""'], [642741, None, u'Argument', u'__func__'], [642737, None, u'Argument', u'fl -> first_stripe_index'], [642744, None, u'PrimaryExpression', u'""%s Bad first_stripe_index %u\\n""'], [642742, None, u'Identifier', u'__func__'], [642738, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [642740, None, u'Identifier', u'fl'], [642739, None, u'Identifier', u'first_stripe_index'], [642734, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [642748, None, u'RelationalExpression', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [642752, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [642749, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [642754, None, u'Identifier', u'fl'], [642753, None, u'Identifier', u'first_stripe_index'], [642751, None, u'Identifier', u'dsaddr'], [642750, None, u'Identifier', u'stripe_count'], [642747, u'True', u'Condition', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [642765, None, u'CallExpression', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [642773, None, u'Callee', u'filelayout_test_devid_unavailable'], [642766, None, u'ArgumentList', u'& dsaddr -> id_node'], [642774, None, u'Identifier', u'filelayout_test_devid_unavailable'], [642767, None, u'Argument', u'& dsaddr -> id_node'], [642768, None, u'UnaryOp', u'& dsaddr -> id_node'], [642772, None, u'UnaryOperator', u'&'], [642769, None, u'PtrMemberAccess', u'dsaddr -> id_node'], [642771, None, u'Identifier', u'dsaddr'], [642770, None, u'Identifier', u'id_node'], [642764, u'True', u'Condition', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [642791, None, u'EqualityExpression', u'd == NULL'], [642793, None, u'Identifier', u'd'], [642792, None, u'Identifier', u'NULL'], [642790, u'True', u'Condition', u'd == NULL'], [642840, None, u'UnaryOp', u'! fl -> stripe_unit'], [642844, None, u'UnaryOperator', u'!'], [642841, None, u'PtrMemberAccess', u'fl -> stripe_unit'], [642843, None, u'Identifier', u'fl'], [642842, None, u'Identifier', u'stripe_unit'], [642839, u'True', u'Condition', u'! fl -> stripe_unit'], [642863, None, u'RelationalExpression', u'fl -> pattern_offset > lgr -> range . offset'], [642869, None, u'PtrMemberAccess', u'fl -> pattern_offset'], [642864, None, u'MemberAccess', u'lgr -> range . offset'], [642871, None, u'Identifier', u'fl'], [642870, None, u'Identifier', u'pattern_offset'], [642866, None, u'PtrMemberAccess', u'lgr -> range'], [642865, None, u'Identifier', u'offset'], [642868, None, u'Identifier', u'lgr'], [642867, None, u'Identifier', u'range'], [642862, u'True', u'Condition', u'fl -> pattern_offset > lgr -> range . offset']]","[[642735, None, u'CallExpression', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [642745, None, u'Callee', u'dprintk'], [642736, None, u'ArgumentList', u'""%s Bad first_stripe_index %u\\n""'], [642746, None, u'Identifier', u'dprintk'], [642743, None, u'Argument', u'""%s Bad first_stripe_index %u\\n""'], [642741, None, u'Argument', u'__func__'], [642737, None, u'Argument', u'fl -> first_stripe_index'], [642744, None, u'PrimaryExpression', u'""%s Bad first_stripe_index %u\\n""'], [642742, None, u'Identifier', u'__func__'], [642738, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [642740, None, u'Identifier', u'fl'], [642739, None, u'Identifier', u'first_stripe_index'], [642734, u'True', u'ExpressionStatement', u'dprintk ( ""%s Bad first_stripe_index %u\\n"" , __func__ , fl -> first_stripe_index )'], [642756, None, u'AssignmentExpr', u'fl -> dsaddr = dsaddr'], [642758, None, u'PtrMemberAccess', u'fl -> dsaddr'], [642757, None, u'Identifier', u'dsaddr'], [642760, None, u'Identifier', u'fl'], [642759, None, u'Identifier', u'dsaddr'], [642755, u'True', u'ExpressionStatement', u'fl -> dsaddr = dsaddr'], [642643, None, u'ParameterType', u'struct nfs4_filelayout_segment *'], [642642, None, u'Identifier', u'fl'], [642641, u'True', u'Parameter', u'struct nfs4_filelayout_segment * fl'], [642920, None, u'IdentifierDecl', u'* dsaddr'], [642922, None, u'IdentifierDeclType', u'struct nfs4_file_layout_dsaddr *'], [642921, None, u'Identifier', u'dsaddr'], [642919, u'True', u'IdentifierDeclStatement', u'struct nfs4_file_layout_dsaddr * dsaddr ;']]"
"NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes

Fix a filelayout GETDEVICEINFO call hang triggered from the LAYOUTGET
pnfs_layout_process where the GETDEVICEINFO call is waiting for a
session slot, and the LAYOUGET call is waiting for pnfs_layout_process
to complete before freeing the slot GETDEVICEINFO is waiting for..

This occurs in testing against the pynfs pNFS server where the
the on-wire reply highest_slotid and slot id are zero, and the
target high slot id is 8 (negotiated in CREATE_SESSION).

The internal fore channel slot table max_slotid, the maximum allowed
table slotid value, has been reduced via nfs41_set_max_slotid_locked
 from 8 to 1.  Thus there is one slot (slotid 0) available for use but
it has not been freed by LAYOUTGET  proir to the GETDEVICEINFO request.

In order to ensure that layoutrecall callbacks are processed in the
correct order, nfs4_proc_layoutget processing needs to be finished
e.g. pnfs_layout_process) before giving up the slot that identifies
the layoutget (see referring_call_exists).

Move the filelayout_check_layout nfs4_find_get_device call outside of
the pnfs_layout_process call tree.

Signed-off-by: Andy Adamson <andros@netapp.com>
Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>",fs/nfs/filelayout/filelayout.c,-,"[[642683, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )']]","[[642684, None, u'CallExpression', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [642694, None, u'Callee', u'dprintk'], [642685, None, u'ArgumentList', u'""%s num_fh %u not valid for given packing\\n""'], [642695, None, u'Identifier', u'dprintk'], [642692, None, u'Argument', u'""%s num_fh %u not valid for given packing\\n""'], [642690, None, u'Argument', u'__func__'], [642686, None, u'Argument', u'fl -> num_fh'], [642693, None, u'PrimaryExpression', u'""%s num_fh %u not valid for given packing\\n""'], [642691, None, u'Identifier', u'__func__'], [642687, None, u'PtrMemberAccess', u'fl -> num_fh'], [642689, None, u'Identifier', u'fl'], [642688, None, u'Identifier', u'num_fh'], [642683, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [642697, None, u'OrExpression', u'( fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num ) || ( fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count )'], [642711, None, u'AndExpression', u'fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num'], [642698, None, u'AndExpression', u'fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count'], [642725, None, u'EqualityExpression', u'fl -> stripe_type == STRIPE_SPARSE'], [642712, None, u'AndExpression', u'fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num'], [642706, None, u'EqualityExpression', u'fl -> stripe_type == STRIPE_DENSE'], [642699, None, u'EqualityExpression', u'fl -> num_fh != dsaddr -> stripe_count'], [642727, None, u'PtrMemberAccess', u'fl -> stripe_type'], [642726, None, u'Identifier', u'STRIPE_SPARSE'], [642720, None, u'RelationalExpression', u'fl -> num_fh > 1'], [642713, None, u'EqualityExpression', u'fl -> num_fh != dsaddr -> ds_num'], [642708, None, u'PtrMemberAccess', u'fl -> stripe_type'], [642707, None, u'Identifier', u'STRIPE_DENSE'], [642703, None, u'PtrMemberAccess', u'fl -> num_fh'], [642700, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [642729, None, u'Identifier', u'fl'], [642728, None, u'Identifier', u'stripe_type'], [642722, None, u'PtrMemberAccess', u'fl -> num_fh'], [642721, None, u'PrimaryExpression', u'1'], [642717, None, u'PtrMemberAccess', u'fl -> num_fh'], [642714, None, u'PtrMemberAccess', u'dsaddr -> ds_num'], [642710, None, u'Identifier', u'fl'], [642709, None, u'Identifier', u'stripe_type'], [642705, None, u'Identifier', u'fl'], [642704, None, u'Identifier', u'num_fh'], [642702, None, u'Identifier', u'dsaddr'], [642701, None, u'Identifier', u'stripe_count'], [642724, None, u'Identifier', u'fl'], [642723, None, u'Identifier', u'num_fh'], [642719, None, u'Identifier', u'fl'], [642718, None, u'Identifier', u'num_fh'], [642716, None, u'Identifier', u'dsaddr'], [642715, None, u'Identifier', u'ds_num'], [642696, u'True', u'Condition', u'( fl -> stripe_type == STRIPE_SPARSE && fl -> num_fh > 1 && fl -> num_fh != dsaddr -> ds_num ) || ( fl -> stripe_type == STRIPE_DENSE && fl -> num_fh != dsaddr -> stripe_count )'], [642748, None, u'RelationalExpression', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [642752, None, u'PtrMemberAccess', u'fl -> first_stripe_index'], [642749, None, u'PtrMemberAccess', u'dsaddr -> stripe_count'], [642754, None, u'Identifier', u'fl'], [642753, None, u'Identifier', u'first_stripe_index'], [642751, None, u'Identifier', u'dsaddr'], [642750, None, u'Identifier', u'stripe_count'], [642747, u'True', u'Condition', u'fl -> first_stripe_index >= dsaddr -> stripe_count'], [642765, None, u'CallExpression', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [642773, None, u'Callee', u'filelayout_test_devid_unavailable'], [642766, None, u'ArgumentList', u'& dsaddr -> id_node'], [642774, None, u'Identifier', u'filelayout_test_devid_unavailable'], [642767, None, u'Argument', u'& dsaddr -> id_node'], [642768, None, u'UnaryOp', u'& dsaddr -> id_node'], [642772, None, u'UnaryOperator', u'&'], [642769, None, u'PtrMemberAccess', u'dsaddr -> id_node'], [642771, None, u'Identifier', u'dsaddr'], [642770, None, u'Identifier', u'id_node'], [642764, u'True', u'Condition', u'filelayout_test_devid_unavailable ( & dsaddr -> id_node )'], [642791, None, u'EqualityExpression', u'd == NULL'], [642793, None, u'Identifier', u'd'], [642792, None, u'Identifier', u'NULL'], [642790, u'True', u'Condition', u'd == NULL'], [642840, None, u'UnaryOp', u'! fl -> stripe_unit'], [642844, None, u'UnaryOperator', u'!'], [642841, None, u'PtrMemberAccess', u'fl -> stripe_unit'], [642843, None, u'Identifier', u'fl'], [642842, None, u'Identifier', u'stripe_unit'], [642839, u'True', u'Condition', u'! fl -> stripe_unit']]","[[642684, None, u'CallExpression', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [642694, None, u'Callee', u'dprintk'], [642685, None, u'ArgumentList', u'""%s num_fh %u not valid for given packing\\n""'], [642695, None, u'Identifier', u'dprintk'], [642692, None, u'Argument', u'""%s num_fh %u not valid for given packing\\n""'], [642690, None, u'Argument', u'__func__'], [642686, None, u'Argument', u'fl -> num_fh'], [642693, None, u'PrimaryExpression', u'""%s num_fh %u not valid for given packing\\n""'], [642691, None, u'Identifier', u'__func__'], [642687, None, u'PtrMemberAccess', u'fl -> num_fh'], [642689, None, u'Identifier', u'fl'], [642688, None, u'Identifier', u'num_fh'], [642683, u'True', u'ExpressionStatement', u'dprintk ( ""%s num_fh %u not valid for given packing\\n"" , __func__ , fl -> num_fh )'], [642756, None, u'AssignmentExpr', u'fl -> dsaddr = dsaddr'], [642758, None, u'PtrMemberAccess', u'fl -> dsaddr'], [642757, None, u'Identifier', u'dsaddr'], [642760, None, u'Identifier', u'fl'], [642759, None, u'Identifier', u'dsaddr'], [642755, u'True', u'ExpressionStatement', u'fl -> dsaddr = dsaddr'], [642643, None, u'ParameterType', u'struct nfs4_filelayout_segment *'], [642642, None, u'Identifier', u'fl'], [642641, u'True', u'Parameter', u'struct nfs4_filelayout_segment * fl'], [642920, None, u'IdentifierDecl', u'* dsaddr'], [642922, None, u'IdentifierDeclType', u'struct nfs4_file_layout_dsaddr *'], [642921, None, u'Identifier', u'dsaddr'], [642919, u'True', u'IdentifierDeclStatement', u'struct nfs4_file_layout_dsaddr * dsaddr ;']]"
"NFS store nfs4_deviceid in struct nfs4_filelayout_segment

In preparation for moving the filelayout getdeviceinfo call from
filelayout_alloc_lseg called by pnfs_process_layout

Signed-off-by: Andy Adamson <andros@netapp.com>
Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>",fs/nfs/filelayout/filelayout.c,-,"[[672860, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( id )']]","[[672861, None, u'CallExpression', u'nfs4_print_deviceid ( id )'], [672865, None, u'Callee', u'nfs4_print_deviceid'], [672862, None, u'ArgumentList', u'id'], [672866, None, u'Identifier', u'nfs4_print_deviceid'], [672863, None, u'Argument', u'id'], [672864, None, u'Identifier', u'id'], [672860, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( id )'], [672895, None, u'CallExpression', u'unlikely ( ! p )'], [672901, None, u'Callee', u'unlikely'], [672896, None, u'ArgumentList', u'! p'], [672902, None, u'Identifier', u'unlikely'], [672897, None, u'Argument', u'! p'], [672898, None, u'UnaryOp', u'! p'], [672900, None, u'UnaryOperator', u'!'], [672899, None, u'Identifier', u'p'], [672894, u'True', u'Condition', u'unlikely ( ! p )'], [672967, None, u'UnaryOp', u'! scratch'], [672969, None, u'UnaryOperator', u'!'], [672968, None, u'Identifier', u'scratch'], [672966, u'True', u'Condition', u'! scratch'], [673012, u'True', u'CFGEntryNode', u'ENTRY']]","[[672861, None, u'CallExpression', u'nfs4_print_deviceid ( id )'], [672865, None, u'Callee', u'nfs4_print_deviceid'], [672862, None, u'ArgumentList', u'id'], [672866, None, u'Identifier', u'nfs4_print_deviceid'], [672863, None, u'Argument', u'id'], [672864, None, u'Identifier', u'id'], [672860, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( id )'], [672469, None, u'ParameterType', u'struct nfs4_deviceid *'], [672468, None, u'Identifier', u'id'], [672467, u'True', u'Parameter', u'struct nfs4_deviceid * id']]"
"NFS store nfs4_deviceid in struct nfs4_filelayout_segment

In preparation for moving the filelayout getdeviceinfo call from
filelayout_alloc_lseg called by pnfs_process_layout

Signed-off-by: Andy Adamson <andros@netapp.com>
Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>",fs/nfs/filelayout/filelayout.c,+,"[[666866, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( & fl -> deviceid )']]","[[666867, None, u'CallExpression', u'nfs4_print_deviceid ( & fl -> deviceid )'], [666875, None, u'Callee', u'nfs4_print_deviceid'], [666868, None, u'ArgumentList', u'& fl -> deviceid'], [666876, None, u'Identifier', u'nfs4_print_deviceid'], [666869, None, u'Argument', u'& fl -> deviceid'], [666870, None, u'UnaryOp', u'& fl -> deviceid'], [666874, None, u'UnaryOperator', u'&'], [666871, None, u'PtrMemberAccess', u'fl -> deviceid'], [666873, None, u'Identifier', u'fl'], [666872, None, u'Identifier', u'deviceid'], [666866, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( & fl -> deviceid )'], [666909, None, u'CallExpression', u'unlikely ( ! p )'], [666915, None, u'Callee', u'unlikely'], [666910, None, u'ArgumentList', u'! p'], [666916, None, u'Identifier', u'unlikely'], [666911, None, u'Argument', u'! p'], [666912, None, u'UnaryOp', u'! p'], [666914, None, u'UnaryOperator', u'!'], [666913, None, u'Identifier', u'p'], [666908, u'True', u'Condition', u'unlikely ( ! p )'], [666981, None, u'UnaryOp', u'! scratch'], [666983, None, u'UnaryOperator', u'!'], [666982, None, u'Identifier', u'scratch'], [666980, u'True', u'Condition', u'! scratch'], [667026, u'True', u'CFGEntryNode', u'ENTRY']]","[[666867, None, u'CallExpression', u'nfs4_print_deviceid ( & fl -> deviceid )'], [666875, None, u'Callee', u'nfs4_print_deviceid'], [666868, None, u'ArgumentList', u'& fl -> deviceid'], [666876, None, u'Identifier', u'nfs4_print_deviceid'], [666869, None, u'Argument', u'& fl -> deviceid'], [666870, None, u'UnaryOp', u'& fl -> deviceid'], [666874, None, u'UnaryOperator', u'&'], [666871, None, u'PtrMemberAccess', u'fl -> deviceid'], [666873, None, u'Identifier', u'fl'], [666872, None, u'Identifier', u'deviceid'], [666866, u'True', u'ExpressionStatement', u'nfs4_print_deviceid ( & fl -> deviceid )'], [666481, None, u'ParameterType', u'struct nfs4_filelayout_segment *'], [666480, None, u'Identifier', u'fl'], [666479, u'True', u'Parameter', u'struct nfs4_filelayout_segment * fl']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[675454, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_DEBUG , ""%s=%x%08x ret=%d\\n"" , name , sz == 8 ? * ( ( u32 * ) ( data + 4 ) ) : 0 , * ( ( u32 * ) data ) , ret )']]","[[675455, None, u'CallExpression', u'pnd2_printk ( KERN_DEBUG , ""%s=%x%08x ret=%d\\n"" , name , sz == 8 ? * ( ( u32 * ) ( data + 4 ) ) : 0 , * ( ( u32 * ) data ) , ret )'], [675485, None, u'Callee', u'pnd2_printk'], [675456, None, u'ArgumentList', u'KERN_DEBUG'], [675486, None, u'Identifier', u'pnd2_printk'], [675483, None, u'Argument', u'KERN_DEBUG'], [675481, None, u'Argument', u'""%s=%x%08x ret=%d\\n""'], [675479, None, u'Argument', u'name'], [675465, None, u'Argument', u'sz == 8 ? * ( ( u32 * ) ( data + 4 ) ) : 0'], [675459, None, u'Argument', u'* ( ( u32 * ) data )'], [675457, None, u'Argument', u'ret'], [675484, None, u'Identifier', u'KERN_DEBUG'], [675482, None, u'PrimaryExpression', u'""%s=%x%08x ret=%d\\n""'], [675480, None, u'Identifier', u'name'], [675466, None, u'ConditionalExpression', u'sz == 8 ? * ( ( u32 * ) ( data + 4 ) ) : 0'], [675460, None, u'UnaryOp', u'* ( ( u32 * ) data )'], [675458, None, u'Identifier', u'ret'], [675475, None, u'Condition', u'sz == 8'], [675468, None, u'UnaryOp', u'* ( ( u32 * ) ( data + 4 ) )'], [675467, None, u'PrimaryExpression', u'0'], [675464, None, u'UnaryOperator', u'*'], [675461, None, u'CastExpression', u'( u32 * ) data'], [675476, None, u'EqualityExpression', u'sz == 8'], [675474, None, u'UnaryOperator', u'*'], [675469, None, u'CastExpression', u'( u32 * ) ( data + 4 )'], [675463, None, u'CastTarget', u'u32 *'], [675462, None, u'Identifier', u'data'], [675478, None, u'Identifier', u'sz'], [675477, None, u'PrimaryExpression', u'8'], [675473, None, u'CastTarget', u'u32 *'], [675470, None, u'AdditiveExpression', u'data + 4'], [675472, None, u'Identifier', u'data'], [675471, None, u'PrimaryExpression', u'4'], [675454, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_DEBUG , ""%s=%x%08x ret=%d\\n"" , name , sz == 8 ? * ( ( u32 * ) ( data + 4 ) ) : 0 , * ( ( u32 * ) data ) , ret )'], [675528, None, u'Identifier', u'sz'], [675527, u'True', u'Condition', u'sz'], [675553, u'True', u'CFGEntryNode', u'ENTRY']]","[[675455, None, u'CallExpression', u'pnd2_printk ( KERN_DEBUG , ""%s=%x%08x ret=%d\\n"" , name , sz == 8 ? * ( ( u32 * ) ( data + 4 ) ) : 0 , * ( ( u32 * ) data ) , ret )'], [675485, None, u'Callee', u'pnd2_printk'], [675456, None, u'ArgumentList', u'KERN_DEBUG'], [675486, None, u'Identifier', u'pnd2_printk'], [675483, None, u'Argument', u'KERN_DEBUG'], [675481, None, u'Argument', u'""%s=%x%08x ret=%d\\n""'], [675479, None, u'Argument', u'name'], [675465, None, u'Argument', u'sz == 8 ? * ( ( u32 * ) ( data + 4 ) ) : 0'], [675459, None, u'Argument', u'* ( ( u32 * ) data )'], [675457, None, u'Argument', u'ret'], [675484, None, u'Identifier', u'KERN_DEBUG'], [675482, None, u'PrimaryExpression', u'""%s=%x%08x ret=%d\\n""'], [675480, None, u'Identifier', u'name'], [675466, None, u'ConditionalExpression', u'sz == 8 ? * ( ( u32 * ) ( data + 4 ) ) : 0'], [675460, None, u'UnaryOp', u'* ( ( u32 * ) data )'], [675458, None, u'Identifier', u'ret'], [675475, None, u'Condition', u'sz == 8'], [675468, None, u'UnaryOp', u'* ( ( u32 * ) ( data + 4 ) )'], [675467, None, u'PrimaryExpression', u'0'], [675464, None, u'UnaryOperator', u'*'], [675461, None, u'CastExpression', u'( u32 * ) data'], [675476, None, u'EqualityExpression', u'sz == 8'], [675474, None, u'UnaryOperator', u'*'], [675469, None, u'CastExpression', u'( u32 * ) ( data + 4 )'], [675463, None, u'CastTarget', u'u32 *'], [675462, None, u'Identifier', u'data'], [675478, None, u'Identifier', u'sz'], [675477, None, u'PrimaryExpression', u'8'], [675473, None, u'CastTarget', u'u32 *'], [675470, None, u'AdditiveExpression', u'data + 4'], [675472, None, u'Identifier', u'data'], [675471, None, u'PrimaryExpression', u'4'], [675454, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_DEBUG , ""%s=%x%08x ret=%d\\n"" , name , sz == 8 ? * ( ( u32 * ) ( data + 4 ) ) : 0 , * ( ( u32 * ) data ) , ret )'], [675434, None, u'ParameterType', u'size_t'], [675433, None, u'Identifier', u'sz'], [675432, u'True', u'Parameter', u'size_t sz'], [675431, None, u'ParameterType', u'char *'], [675430, None, u'Identifier', u'name'], [675429, u'True', u'Parameter', u'char * name'], [675437, None, u'ParameterType', u'void *'], [675436, None, u'Identifier', u'data'], [675435, u'True', u'Parameter', u'void * data'], [675488, None, u'AssignmentExpr', u'ret = sbi_send ( port , off , op , ( u32 * ) data )'], [675503, None, u'Identifier', u'ret'], [675489, None, u'CallExpression', u'sbi_send ( port , off , op , ( u32 * ) data )'], [675501, None, u'Callee', u'sbi_send'], [675490, None, u'ArgumentList', u'port'], [675502, None, u'Identifier', u'sbi_send'], [675499, None, u'Argument', u'port'], [675497, None, u'Argument', u'off'], [675495, None, u'Argument', u'op'], [675491, None, u'Argument', u'( u32 * ) data'], [675500, None, u'Identifier', u'port'], [675498, None, u'Identifier', u'off'], [675496, None, u'Identifier', u'op'], [675492, None, u'CastExpression', u'( u32 * ) data'], [675494, None, u'CastTarget', u'u32 *'], [675493, None, u'Identifier', u'data'], [675487, u'True', u'ExpressionStatement', u'ret = sbi_send ( port , off , op , ( u32 * ) data )'], [675443, None, u'ParameterType', u'int'], [675442, None, u'Identifier', u'off'], [675441, u'True', u'Parameter', u'int off'], [675440, None, u'ParameterType', u'int'], [675439, None, u'Identifier', u'op'], [675438, u'True', u'Parameter', u'int op'], [675446, None, u'ParameterType', u'int'], [675445, None, u'Identifier', u'port'], [675444, u'True', u'Parameter', u'int port']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[678257, u'True', u'ExpressionStatement', u'snprintf ( msg , PND2_MSG_SIZE , ""Error address 0x%llx is not DRAM"" , addr )']]","[[678258, None, u'CallExpression', u'snprintf ( msg , PND2_MSG_SIZE , ""Error address 0x%llx is not DRAM"" , addr )'], [678268, None, u'Callee', u'snprintf'], [678259, None, u'ArgumentList', u'msg'], [678269, None, u'Identifier', u'snprintf'], [678266, None, u'Argument', u'msg'], [678264, None, u'Argument', u'PND2_MSG_SIZE'], [678262, None, u'Argument', u'""Error address 0x%llx is not DRAM""'], [678260, None, u'Argument', u'addr'], [678267, None, u'Identifier', u'msg'], [678265, None, u'Identifier', u'PND2_MSG_SIZE'], [678263, None, u'PrimaryExpression', u'""Error address 0x%llx is not DRAM""'], [678261, None, u'Identifier', u'addr'], [678257, u'True', u'ExpressionStatement', u'snprintf ( msg , PND2_MSG_SIZE , ""Error address 0x%llx is not DRAM"" , addr )'], [678271, None, u'OrExpression', u'addr >= ( 1ul << PND_MAX_PHYS_BIT ) || ( addr >= top_lm && addr < _4GB ) || addr >= top_hm'], [678283, None, u'RelationalExpression', u'addr >= ( 1ul << PND_MAX_PHYS_BIT )'], [678272, None, u'OrExpression', u'( addr >= top_lm && addr < _4GB ) || addr >= top_hm'], [678287, None, u'Identifier', u'addr'], [678284, None, u'ShiftExpression', u'1ul << PND_MAX_PHYS_BIT'], [678276, None, u'AndExpression', u'addr >= top_lm && addr < _4GB'], [678273, None, u'RelationalExpression', u'addr >= top_hm'], [678286, None, u'PrimaryExpression', u'1ul'], [678285, None, u'Identifier', u'PND_MAX_PHYS_BIT'], [678280, None, u'RelationalExpression', u'addr >= top_lm'], [678277, None, u'RelationalExpression', u'addr < _4GB'], [678275, None, u'Identifier', u'addr'], [678274, None, u'Identifier', u'top_hm'], [678282, None, u'Identifier', u'addr'], [678281, None, u'Identifier', u'top_lm'], [678279, None, u'Identifier', u'addr'], [678278, None, u'Identifier', u'_4GB'], [678270, u'True', u'Condition', u'addr >= ( 1ul << PND_MAX_PHYS_BIT ) || ( addr >= top_lm && addr < _4GB ) || addr >= top_hm'], [678363, u'True', u'CFGEntryNode', u'ENTRY']]","[[678258, None, u'CallExpression', u'snprintf ( msg , PND2_MSG_SIZE , ""Error address 0x%llx is not DRAM"" , addr )'], [678268, None, u'Callee', u'snprintf'], [678259, None, u'ArgumentList', u'msg'], [678269, None, u'Identifier', u'snprintf'], [678266, None, u'Argument', u'msg'], [678264, None, u'Argument', u'PND2_MSG_SIZE'], [678262, None, u'Argument', u'""Error address 0x%llx is not DRAM""'], [678260, None, u'Argument', u'addr'], [678267, None, u'Identifier', u'msg'], [678265, None, u'Identifier', u'PND2_MSG_SIZE'], [678263, None, u'PrimaryExpression', u'""Error address 0x%llx is not DRAM""'], [678261, None, u'Identifier', u'addr'], [678257, u'True', u'ExpressionStatement', u'snprintf ( msg , PND2_MSG_SIZE , ""Error address 0x%llx is not DRAM"" , addr )'], [677822, None, u'ParameterType', u'char *'], [677821, None, u'Identifier', u'msg'], [677820, u'True', u'Parameter', u'char * msg'], [677831, None, u'ParameterType', u'const u64'], [677830, None, u'Identifier', u'addr'], [677829, u'True', u'Parameter', u'const u64 addr']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[678798, u'True', u'ExpressionStatement', u'snprintf ( msg , PND2_MSG_SIZE , ""Bad dimm_geometry[] table\\n"" )']]","[[678799, None, u'CallExpression', u'snprintf ( msg , PND2_MSG_SIZE , ""Bad dimm_geometry[] table\\n"" )'], [678807, None, u'Callee', u'snprintf'], [678800, None, u'ArgumentList', u'msg'], [678808, None, u'Identifier', u'snprintf'], [678805, None, u'Argument', u'msg'], [678803, None, u'Argument', u'PND2_MSG_SIZE'], [678801, None, u'Argument', u'""Bad dimm_geometry[] table\\n""'], [678806, None, u'Identifier', u'msg'], [678804, None, u'Identifier', u'PND2_MSG_SIZE'], [678802, None, u'PrimaryExpression', u'""Bad dimm_geometry[] table\\n""'], [678798, u'True', u'ExpressionStatement', u'snprintf ( msg , PND2_MSG_SIZE , ""Bad dimm_geometry[] table\\n"" )'], [678810, None, u'RelationalExpression', u'i + skiprs >= PMI_ADDRESS_WIDTH'], [678812, None, u'AdditiveExpression', u'i + skiprs'], [678811, None, u'Identifier', u'PMI_ADDRESS_WIDTH'], [678814, None, u'Identifier', u'i'], [678813, None, u'Identifier', u'skiprs'], [678809, u'True', u'Condition', u'i + skiprs >= PMI_ADDRESS_WIDTH'], [678830, None, u'RelationalExpression', u'i < PMI_ADDRESS_WIDTH'], [678832, None, u'Identifier', u'i'], [678831, None, u'Identifier', u'PMI_ADDRESS_WIDTH'], [678829, u'True', u'Condition', u'i < PMI_ADDRESS_WIDTH'], [678920, u'True', u'CFGEntryNode', u'ENTRY'], [678723, None, u'Identifier', u'type'], [678722, u'True', u'Condition', u'type']]","[[678799, None, u'CallExpression', u'snprintf ( msg , PND2_MSG_SIZE , ""Bad dimm_geometry[] table\\n"" )'], [678807, None, u'Callee', u'snprintf'], [678800, None, u'ArgumentList', u'msg'], [678808, None, u'Identifier', u'snprintf'], [678805, None, u'Argument', u'msg'], [678803, None, u'Argument', u'PND2_MSG_SIZE'], [678801, None, u'Argument', u'""Bad dimm_geometry[] table\\n""'], [678806, None, u'Identifier', u'msg'], [678804, None, u'Identifier', u'PND2_MSG_SIZE'], [678802, None, u'PrimaryExpression', u'""Bad dimm_geometry[] table\\n""'], [678798, u'True', u'ExpressionStatement', u'snprintf ( msg , PND2_MSG_SIZE , ""Bad dimm_geometry[] table\\n"" )'], [678566, None, u'ParameterType', u'char *'], [678565, None, u'Identifier', u'msg'], [678564, u'True', u'Parameter', u'char * msg']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[678627, u'True', u'ExpressionStatement', u'snprintf ( msg , PND2_MSG_SIZE , ""Bad translation\\n"" )']]","[[678628, None, u'CallExpression', u'snprintf ( msg , PND2_MSG_SIZE , ""Bad translation\\n"" )'], [678636, None, u'Callee', u'snprintf'], [678629, None, u'ArgumentList', u'msg'], [678637, None, u'Identifier', u'snprintf'], [678634, None, u'Argument', u'msg'], [678632, None, u'Argument', u'PND2_MSG_SIZE'], [678630, None, u'Argument', u'""Bad translation\\n""'], [678635, None, u'Identifier', u'msg'], [678633, None, u'Identifier', u'PND2_MSG_SIZE'], [678631, None, u'PrimaryExpression', u'""Bad translation\\n""'], [678627, u'True', u'ExpressionStatement', u'snprintf ( msg , PND2_MSG_SIZE , ""Bad translation\\n"" )'], [678639, None, u'Identifier', u'bit'], [678638, u'True', u'Condition', u'bit'], [678723, None, u'Identifier', u'type'], [678722, u'True', u'Condition', u'type'], [678810, None, u'RelationalExpression', u'i + skiprs >= PMI_ADDRESS_WIDTH'], [678812, None, u'AdditiveExpression', u'i + skiprs'], [678811, None, u'Identifier', u'PMI_ADDRESS_WIDTH'], [678814, None, u'Identifier', u'i'], [678813, None, u'Identifier', u'skiprs'], [678809, u'True', u'Condition', u'i + skiprs >= PMI_ADDRESS_WIDTH'], [678830, None, u'RelationalExpression', u'i < PMI_ADDRESS_WIDTH'], [678832, None, u'Identifier', u'i'], [678831, None, u'Identifier', u'PMI_ADDRESS_WIDTH'], [678829, u'True', u'Condition', u'i < PMI_ADDRESS_WIDTH'], [678920, u'True', u'CFGEntryNode', u'ENTRY']]","[[678628, None, u'CallExpression', u'snprintf ( msg , PND2_MSG_SIZE , ""Bad translation\\n"" )'], [678636, None, u'Callee', u'snprintf'], [678629, None, u'ArgumentList', u'msg'], [678637, None, u'Identifier', u'snprintf'], [678634, None, u'Argument', u'msg'], [678632, None, u'Argument', u'PND2_MSG_SIZE'], [678630, None, u'Argument', u'""Bad translation\\n""'], [678635, None, u'Identifier', u'msg'], [678633, None, u'Identifier', u'PND2_MSG_SIZE'], [678631, None, u'PrimaryExpression', u'""Bad translation\\n""'], [678627, u'True', u'ExpressionStatement', u'snprintf ( msg , PND2_MSG_SIZE , ""Bad translation\\n"" )'], [678566, None, u'ParameterType', u'char *'], [678565, None, u'Identifier', u'msg'], [678564, u'True', u'Parameter', u'char * msg']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[680069, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_INFO , ""Unsupported DIMM in channel %d\\n"" , ch )']]","[[680070, None, u'CallExpression', u'pnd2_printk ( KERN_INFO , ""Unsupported DIMM in channel %d\\n"" , ch )'], [680078, None, u'Callee', u'pnd2_printk'], [680071, None, u'ArgumentList', u'KERN_INFO'], [680079, None, u'Identifier', u'pnd2_printk'], [680076, None, u'Argument', u'KERN_INFO'], [680074, None, u'Argument', u'""Unsupported DIMM in channel %d\\n""'], [680072, None, u'Argument', u'ch'], [680077, None, u'Identifier', u'KERN_INFO'], [680075, None, u'PrimaryExpression', u'""Unsupported DIMM in channel %d\\n""'], [680073, None, u'Identifier', u'ch'], [680069, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_INFO , ""Unsupported DIMM in channel %d\\n"" , ch )'], [680081, None, u'EqualityExpression', u'drp0 [ ch ] . dramtype != 0'], [680083, None, u'MemberAccess', u'drp0 [ ch ] . dramtype'], [680082, None, u'PrimaryExpression', u'0'], [680085, None, u'ArrayIndexing', u'drp0 [ ch ]'], [680084, None, u'Identifier', u'dramtype'], [680087, None, u'Identifier', u'drp0'], [680086, None, u'Identifier', u'ch'], [680080, u'True', u'Condition', u'drp0 [ ch ] . dramtype != 0'], [680088, u'True', u'CFGEntryNode', u'ENTRY']]","[[680070, None, u'CallExpression', u'pnd2_printk ( KERN_INFO , ""Unsupported DIMM in channel %d\\n"" , ch )'], [680078, None, u'Callee', u'pnd2_printk'], [680071, None, u'ArgumentList', u'KERN_INFO'], [680079, None, u'Identifier', u'pnd2_printk'], [680076, None, u'Argument', u'KERN_INFO'], [680074, None, u'Argument', u'""Unsupported DIMM in channel %d\\n""'], [680072, None, u'Argument', u'ch'], [680077, None, u'Identifier', u'KERN_INFO'], [680075, None, u'PrimaryExpression', u'""Unsupported DIMM in channel %d\\n""'], [680073, None, u'Identifier', u'ch'], [680069, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_INFO , ""Unsupported DIMM in channel %d\\n"" , ch )'], [680036, None, u'ParameterType', u'int'], [680035, None, u'Identifier', u'ch'], [680034, u'True', u'Parameter', u'int ch']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[680047, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_INFO , ""ECC disabled on channel %d\\n"" , ch )']]","[[680048, None, u'CallExpression', u'pnd2_printk ( KERN_INFO , ""ECC disabled on channel %d\\n"" , ch )'], [680056, None, u'Callee', u'pnd2_printk'], [680049, None, u'ArgumentList', u'KERN_INFO'], [680057, None, u'Identifier', u'pnd2_printk'], [680054, None, u'Argument', u'KERN_INFO'], [680052, None, u'Argument', u'""ECC disabled on channel %d\\n""'], [680050, None, u'Argument', u'ch'], [680055, None, u'Identifier', u'KERN_INFO'], [680053, None, u'PrimaryExpression', u'""ECC disabled on channel %d\\n""'], [680051, None, u'Identifier', u'ch'], [680047, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_INFO , ""ECC disabled on channel %d\\n"" , ch )'], [680059, None, u'EqualityExpression', u'drp0 [ ch ] . eccen == 0'], [680061, None, u'MemberAccess', u'drp0 [ ch ] . eccen'], [680060, None, u'PrimaryExpression', u'0'], [680063, None, u'ArrayIndexing', u'drp0 [ ch ]'], [680062, None, u'Identifier', u'eccen'], [680065, None, u'Identifier', u'drp0'], [680064, None, u'Identifier', u'ch'], [680058, u'True', u'Condition', u'drp0 [ ch ] . eccen == 0'], [680081, None, u'EqualityExpression', u'drp0 [ ch ] . dramtype != 0'], [680083, None, u'MemberAccess', u'drp0 [ ch ] . dramtype'], [680082, None, u'PrimaryExpression', u'0'], [680085, None, u'ArrayIndexing', u'drp0 [ ch ]'], [680084, None, u'Identifier', u'dramtype'], [680087, None, u'Identifier', u'drp0'], [680086, None, u'Identifier', u'ch'], [680080, u'True', u'Condition', u'drp0 [ ch ] . dramtype != 0'], [680088, u'True', u'CFGEntryNode', u'ENTRY']]","[[680048, None, u'CallExpression', u'pnd2_printk ( KERN_INFO , ""ECC disabled on channel %d\\n"" , ch )'], [680056, None, u'Callee', u'pnd2_printk'], [680049, None, u'ArgumentList', u'KERN_INFO'], [680057, None, u'Identifier', u'pnd2_printk'], [680054, None, u'Argument', u'KERN_INFO'], [680052, None, u'Argument', u'""ECC disabled on channel %d\\n""'], [680050, None, u'Argument', u'ch'], [680055, None, u'Identifier', u'KERN_INFO'], [680053, None, u'PrimaryExpression', u'""ECC disabled on channel %d\\n""'], [680051, None, u'Identifier', u'ch'], [680047, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_INFO , ""ECC disabled on channel %d\\n"" , ch )'], [680036, None, u'ParameterType', u'int'], [680035, None, u'Identifier', u'ch'], [680034, u'True', u'Parameter', u'int ch']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[680174, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_INFO , ""ECC disabled on channel %d\\n"" , ch )']]","[[680175, None, u'CallExpression', u'pnd2_printk ( KERN_INFO , ""ECC disabled on channel %d\\n"" , ch )'], [680183, None, u'Callee', u'pnd2_printk'], [680176, None, u'ArgumentList', u'KERN_INFO'], [680184, None, u'Identifier', u'pnd2_printk'], [680181, None, u'Argument', u'KERN_INFO'], [680179, None, u'Argument', u'""ECC disabled on channel %d\\n""'], [680177, None, u'Argument', u'ch'], [680182, None, u'Identifier', u'KERN_INFO'], [680180, None, u'PrimaryExpression', u'""ECC disabled on channel %d\\n""'], [680178, None, u'Identifier', u'ch'], [680174, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_INFO , ""ECC disabled on channel %d\\n"" , ch )'], [680186, None, u'AndExpression', u'DIMMS_PRESENT ( d ) && ! ecc_ctrl [ ch ] . eccen'], [680194, None, u'CallExpression', u'DIMMS_PRESENT ( d )'], [680187, None, u'UnaryOp', u'! ecc_ctrl [ ch ] . eccen'], [680198, None, u'Callee', u'DIMMS_PRESENT'], [680195, None, u'ArgumentList', u'd'], [680193, None, u'UnaryOperator', u'!'], [680188, None, u'MemberAccess', u'ecc_ctrl [ ch ] . eccen'], [680199, None, u'Identifier', u'DIMMS_PRESENT'], [680196, None, u'Argument', u'd'], [680190, None, u'ArrayIndexing', u'ecc_ctrl [ ch ]'], [680189, None, u'Identifier', u'eccen'], [680197, None, u'Identifier', u'd'], [680192, None, u'Identifier', u'ecc_ctrl'], [680191, None, u'Identifier', u'ch'], [680185, u'True', u'Condition', u'DIMMS_PRESENT ( d ) && ! ecc_ctrl [ ch ] . eccen'], [680211, u'True', u'CFGEntryNode', u'ENTRY']]","[[680175, None, u'CallExpression', u'pnd2_printk ( KERN_INFO , ""ECC disabled on channel %d\\n"" , ch )'], [680183, None, u'Callee', u'pnd2_printk'], [680176, None, u'ArgumentList', u'KERN_INFO'], [680184, None, u'Identifier', u'pnd2_printk'], [680181, None, u'Argument', u'KERN_INFO'], [680179, None, u'Argument', u'""ECC disabled on channel %d\\n""'], [680177, None, u'Argument', u'ch'], [680182, None, u'Identifier', u'KERN_INFO'], [680180, None, u'PrimaryExpression', u'""ECC disabled on channel %d\\n""'], [680178, None, u'Identifier', u'ch'], [680174, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_INFO , ""ECC disabled on channel %d\\n"" , ch )'], [680165, None, u'ParameterType', u'int'], [680164, None, u'Identifier', u'ch'], [680163, u'True', u'Parameter', u'int ch']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[680284, u'True', u'Parameter', u'u64 addr'], [680287, u'True', u'Parameter', u'struct mem_ctl_info * mci']]","[[680286, None, u'ParameterType', u'u64'], [680285, None, u'Identifier', u'addr'], [680284, u'True', u'Parameter', u'u64 addr'], [680409, u'True', u'CFGEntryNode', u'ENTRY'], [680289, None, u'ParameterType', u'struct mem_ctl_info *'], [680288, None, u'Identifier', u'mci'], [680287, u'True', u'Parameter', u'struct mem_ctl_info * mci'], [680409, u'True', u'CFGEntryNode', u'ENTRY']]","[[680286, None, u'ParameterType', u'u64'], [680285, None, u'Identifier', u'addr'], [680284, u'True', u'Parameter', u'u64 addr'], [680289, None, u'ParameterType', u'struct mem_ctl_info *'], [680288, None, u'Identifier', u'mci'], [680287, u'True', u'Parameter', u'struct mem_ctl_info * mci']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[680439, u'True', u'Parameter', u'const struct mce * m'], [680442, u'True', u'Parameter', u'struct mem_ctl_info * mci']]","[[680441, None, u'ParameterType', u'const struct mce *'], [680440, None, u'Identifier', u'm'], [680439, u'True', u'Parameter', u'const struct mce * m'], [680823, u'True', u'CFGEntryNode', u'ENTRY'], [680444, None, u'ParameterType', u'struct mem_ctl_info *'], [680443, None, u'Identifier', u'mci'], [680442, u'True', u'Parameter', u'struct mem_ctl_info * mci'], [680823, u'True', u'CFGEntryNode', u'ENTRY']]","[[680441, None, u'ParameterType', u'const struct mce *'], [680440, None, u'Identifier', u'm'], [680439, u'True', u'Parameter', u'const struct mce * m'], [680444, None, u'ParameterType', u'struct mem_ctl_info *'], [680443, None, u'Identifier', u'mci'], [680442, u'True', u'Parameter', u'struct mem_ctl_info * mci']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[680595, u'True', u'ExpressionStatement', u'rc = get_memory_error_data ( mci , m -> addr , daddr , msg )']]","[[680596, None, u'AssignmentExpr', u'rc = get_memory_error_data ( mci , m -> addr , daddr , msg )'], [680611, None, u'Identifier', u'rc'], [680597, None, u'CallExpression', u'get_memory_error_data ( mci , m -> addr , daddr , msg )'], [680609, None, u'Callee', u'get_memory_error_data'], [680598, None, u'ArgumentList', u'mci'], [680610, None, u'Identifier', u'get_memory_error_data'], [680607, None, u'Argument', u'mci'], [680603, None, u'Argument', u'm -> addr'], [680601, None, u'Argument', u'daddr'], [680599, None, u'Argument', u'msg'], [680608, None, u'Identifier', u'mci'], [680604, None, u'PtrMemberAccess', u'm -> addr'], [680602, None, u'Identifier', u'daddr'], [680600, None, u'Identifier', u'msg'], [680606, None, u'Identifier', u'm'], [680605, None, u'Identifier', u'addr'], [680595, u'True', u'ExpressionStatement', u'rc = get_memory_error_data ( mci , m -> addr , daddr , msg )'], [680615, None, u'UnaryOp', u'! ( m -> status & MCI_STATUS_ADDRV )'], [680621, None, u'UnaryOperator', u'!'], [680616, None, u'BitAndExpression', u'm -> status & MCI_STATUS_ADDRV'], [680618, None, u'PtrMemberAccess', u'm -> status'], [680617, None, u'Identifier', u'MCI_STATUS_ADDRV'], [680620, None, u'Identifier', u'm'], [680619, None, u'Identifier', u'status'], [680614, u'True', u'Condition', u'! ( m -> status & MCI_STATUS_ADDRV )'], [680823, u'True', u'CFGEntryNode', u'ENTRY']]","[[680596, None, u'AssignmentExpr', u'rc = get_memory_error_data ( mci , m -> addr , daddr , msg )'], [680611, None, u'Identifier', u'rc'], [680597, None, u'CallExpression', u'get_memory_error_data ( mci , m -> addr , daddr , msg )'], [680609, None, u'Callee', u'get_memory_error_data'], [680598, None, u'ArgumentList', u'mci'], [680610, None, u'Identifier', u'get_memory_error_data'], [680607, None, u'Argument', u'mci'], [680603, None, u'Argument', u'm -> addr'], [680601, None, u'Argument', u'daddr'], [680599, None, u'Argument', u'msg'], [680608, None, u'Identifier', u'mci'], [680604, None, u'PtrMemberAccess', u'm -> addr'], [680602, None, u'Identifier', u'daddr'], [680600, None, u'Identifier', u'msg'], [680606, None, u'Identifier', u'm'], [680605, None, u'Identifier', u'addr'], [680595, u'True', u'ExpressionStatement', u'rc = get_memory_error_data ( mci , m -> addr , daddr , msg )'], [680816, None, u'IdentifierDecl', u'* optype'], [680812, None, u'IdentifierDecl', u'msg [ PND2_MSG_SIZE ]'], [680818, None, u'IdentifierDeclType', u'char *'], [680817, None, u'Identifier', u'optype'], [680815, None, u'IdentifierDeclType', u'char [ PND2_MSG_SIZE ]'], [680814, None, u'Identifier', u'msg'], [680813, None, u'Identifier', u'PND2_MSG_SIZE'], [680811, u'True', u'IdentifierDeclStatement', u'char * optype , msg [ PND2_MSG_SIZE ] ;'], [680441, None, u'ParameterType', u'const struct mce *'], [680440, None, u'Identifier', u'm'], [680439, u'True', u'Parameter', u'const struct mce * m'], [680444, None, u'ParameterType', u'struct mem_ctl_info *'], [680443, None, u'Identifier', u'mci'], [680442, u'True', u'Parameter', u'struct mem_ctl_info * mci'], [680438, None, u'ParameterType', u'struct dram_addr *'], [680437, None, u'Identifier', u'daddr'], [680436, u'True', u'Parameter', u'struct dram_addr * daddr']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[680535, u'True', u'ExpressionStatement', u'snprintf ( msg , sizeof ( msg ) , ""%s%s err_code:%04x:%04x channel:%d DIMM:%d rank:%d row:%d bank:%d col:%d"" , overflow ? "" OVERFLOW"" : """" , ( uc_err && recov ) ? "" recoverable"" : """" , mscod , errcode , daddr -> chan , daddr -> dimm , daddr -> rank , daddr -> row , daddr -> bank , daddr -> col )']]","[[680536, None, u'CallExpression', u'snprintf ( msg , sizeof ( msg ) , ""%s%s err_code:%04x:%04x channel:%d DIMM:%d rank:%d row:%d bank:%d col:%d"" , overflow ? "" OVERFLOW"" : """" , ( uc_err && recov ) ? "" recoverable"" : """" , mscod , errcode , daddr -> chan , daddr -> dimm , daddr -> rank , daddr -> row , daddr -> bank , daddr -> col )'], [680588, None, u'Callee', u'snprintf'], [680537, None, u'ArgumentList', u'msg'], [680589, None, u'Identifier', u'snprintf'], [680586, None, u'Argument', u'msg'], [680582, None, u'Argument', u'sizeof ( msg )'], [680580, None, u'Argument', u'""%s%s err_code:%04x:%04x channel:%d DIMM:%d rank:%d row:%d bank:%d col:%d""'], [680574, None, u'Argument', u'overflow ? "" OVERFLOW"" : """"'], [680566, None, u'Argument', u'( uc_err && recov ) ? "" recoverable"" : """"'], [680564, None, u'Argument', u'mscod'], [680562, None, u'Argument', u'errcode'], [680558, None, u'Argument', u'daddr -> chan'], [680554, None, u'Argument', u'daddr -> dimm'], [680550, None, u'Argument', u'daddr -> rank'], [680546, None, u'Argument', u'daddr -> row'], [680542, None, u'Argument', u'daddr -> bank'], [680538, None, u'Argument', u'daddr -> col'], [680587, None, u'Identifier', u'msg'], [680583, None, u'SizeofExpr', u'sizeof ( msg )'], [680581, None, u'PrimaryExpression', u'""%s%s err_code:%04x:%04x channel:%d DIMM:%d rank:%d row:%d bank:%d col:%d""'], [680575, None, u'ConditionalExpression', u'overflow ? "" OVERFLOW"" : """"'], [680567, None, u'ConditionalExpression', u'( uc_err && recov ) ? "" recoverable"" : """"'], [680565, None, u'Identifier', u'mscod'], [680563, None, u'Identifier', u'errcode'], [680559, None, u'PtrMemberAccess', u'daddr -> chan'], [680555, None, u'PtrMemberAccess', u'daddr -> dimm'], [680551, None, u'PtrMemberAccess', u'daddr -> rank'], [680547, None, u'PtrMemberAccess', u'daddr -> row'], [680543, None, u'PtrMemberAccess', u'daddr -> bank'], [680539, None, u'PtrMemberAccess', u'daddr -> col'], [680585, None, u'Sizeof', u'sizeof'], [680584, None, u'SizeofOperand', u'msg'], [680578, None, u'Condition', u'overflow'], [680577, None, u'PrimaryExpression', u'"" OVERFLOW""'], [680576, None, u'PrimaryExpression', u'""""'], [680570, None, u'Condition', u'uc_err && recov'], [680569, None, u'PrimaryExpression', u'"" recoverable""'], [680568, None, u'PrimaryExpression', u'""""'], [680561, None, u'Identifier', u'daddr'], [680560, None, u'Identifier', u'chan'], [680557, None, u'Identifier', u'daddr'], [680556, None, u'Identifier', u'dimm'], [680553, None, u'Identifier', u'daddr'], [680552, None, u'Identifier', u'rank'], [680549, None, u'Identifier', u'daddr'], [680548, None, u'Identifier', u'row'], [680545, None, u'Identifier', u'daddr'], [680544, None, u'Identifier', u'bank'], [680541, None, u'Identifier', u'daddr'], [680540, None, u'Identifier', u'col'], [680579, None, u'Identifier', u'overflow'], [680571, None, u'AndExpression', u'uc_err && recov'], [680573, None, u'Identifier', u'uc_err'], [680572, None, u'Identifier', u'recov'], [680535, u'True', u'ExpressionStatement', u'snprintf ( msg , sizeof ( msg ) , ""%s%s err_code:%04x:%04x channel:%d DIMM:%d rank:%d row:%d bank:%d col:%d"" , overflow ? "" OVERFLOW"" : """" , ( uc_err && recov ) ? "" recoverable"" : """" , mscod , errcode , daddr -> chan , daddr -> dimm , daddr -> rank , daddr -> row , daddr -> bank , daddr -> col )'], [680594, None, u'Identifier', u'rc'], [680593, u'True', u'Condition', u'rc'], [680615, None, u'UnaryOp', u'! ( m -> status & MCI_STATUS_ADDRV )'], [680621, None, u'UnaryOperator', u'!'], [680616, None, u'BitAndExpression', u'm -> status & MCI_STATUS_ADDRV'], [680618, None, u'PtrMemberAccess', u'm -> status'], [680617, None, u'Identifier', u'MCI_STATUS_ADDRV'], [680620, None, u'Identifier', u'm'], [680619, None, u'Identifier', u'status'], [680614, u'True', u'Condition', u'! ( m -> status & MCI_STATUS_ADDRV )'], [680823, u'True', u'CFGEntryNode', u'ENTRY']]","[[680536, None, u'CallExpression', u'snprintf ( msg , sizeof ( msg ) , ""%s%s err_code:%04x:%04x channel:%d DIMM:%d rank:%d row:%d bank:%d col:%d"" , overflow ? "" OVERFLOW"" : """" , ( uc_err && recov ) ? "" recoverable"" : """" , mscod , errcode , daddr -> chan , daddr -> dimm , daddr -> rank , daddr -> row , daddr -> bank , daddr -> col )'], [680588, None, u'Callee', u'snprintf'], [680537, None, u'ArgumentList', u'msg'], [680589, None, u'Identifier', u'snprintf'], [680586, None, u'Argument', u'msg'], [680582, None, u'Argument', u'sizeof ( msg )'], [680580, None, u'Argument', u'""%s%s err_code:%04x:%04x channel:%d DIMM:%d rank:%d row:%d bank:%d col:%d""'], [680574, None, u'Argument', u'overflow ? "" OVERFLOW"" : """"'], [680566, None, u'Argument', u'( uc_err && recov ) ? "" recoverable"" : """"'], [680564, None, u'Argument', u'mscod'], [680562, None, u'Argument', u'errcode'], [680558, None, u'Argument', u'daddr -> chan'], [680554, None, u'Argument', u'daddr -> dimm'], [680550, None, u'Argument', u'daddr -> rank'], [680546, None, u'Argument', u'daddr -> row'], [680542, None, u'Argument', u'daddr -> bank'], [680538, None, u'Argument', u'daddr -> col'], [680587, None, u'Identifier', u'msg'], [680583, None, u'SizeofExpr', u'sizeof ( msg )'], [680581, None, u'PrimaryExpression', u'""%s%s err_code:%04x:%04x channel:%d DIMM:%d rank:%d row:%d bank:%d col:%d""'], [680575, None, u'ConditionalExpression', u'overflow ? "" OVERFLOW"" : """"'], [680567, None, u'ConditionalExpression', u'( uc_err && recov ) ? "" recoverable"" : """"'], [680565, None, u'Identifier', u'mscod'], [680563, None, u'Identifier', u'errcode'], [680559, None, u'PtrMemberAccess', u'daddr -> chan'], [680555, None, u'PtrMemberAccess', u'daddr -> dimm'], [680551, None, u'PtrMemberAccess', u'daddr -> rank'], [680547, None, u'PtrMemberAccess', u'daddr -> row'], [680543, None, u'PtrMemberAccess', u'daddr -> bank'], [680539, None, u'PtrMemberAccess', u'daddr -> col'], [680585, None, u'Sizeof', u'sizeof'], [680584, None, u'SizeofOperand', u'msg'], [680578, None, u'Condition', u'overflow'], [680577, None, u'PrimaryExpression', u'"" OVERFLOW""'], [680576, None, u'PrimaryExpression', u'""""'], [680570, None, u'Condition', u'uc_err && recov'], [680569, None, u'PrimaryExpression', u'"" recoverable""'], [680568, None, u'PrimaryExpression', u'""""'], [680561, None, u'Identifier', u'daddr'], [680560, None, u'Identifier', u'chan'], [680557, None, u'Identifier', u'daddr'], [680556, None, u'Identifier', u'dimm'], [680553, None, u'Identifier', u'daddr'], [680552, None, u'Identifier', u'rank'], [680549, None, u'Identifier', u'daddr'], [680548, None, u'Identifier', u'row'], [680545, None, u'Identifier', u'daddr'], [680544, None, u'Identifier', u'bank'], [680541, None, u'Identifier', u'daddr'], [680540, None, u'Identifier', u'col'], [680579, None, u'Identifier', u'overflow'], [680571, None, u'AndExpression', u'uc_err && recov'], [680573, None, u'Identifier', u'uc_err'], [680572, None, u'Identifier', u'recov'], [680535, u'True', u'ExpressionStatement', u'snprintf ( msg , sizeof ( msg ) , ""%s%s err_code:%04x:%04x channel:%d DIMM:%d rank:%d row:%d bank:%d col:%d"" , overflow ? "" OVERFLOW"" : """" , ( uc_err && recov ) ? "" recoverable"" : """" , mscod , errcode , daddr -> chan , daddr -> dimm , daddr -> rank , daddr -> row , daddr -> bank , daddr -> col )'], [680790, None, u'IdentifierDecl', u'overflow = m -> status & MCI_STATUS_OVER'], [680799, None, u'IdentifierDeclType', u'bool'], [680798, None, u'Identifier', u'overflow'], [680791, None, u'AssignmentExpr', u'overflow = m -> status & MCI_STATUS_OVER'], [680797, None, u'Identifier', u'overflow'], [680792, None, u'BitAndExpression', u'm -> status & MCI_STATUS_OVER'], [680794, None, u'PtrMemberAccess', u'm -> status'], [680793, None, u'Identifier', u'MCI_STATUS_OVER'], [680796, None, u'Identifier', u'm'], [680795, None, u'Identifier', u'status'], [680789, u'True', u'IdentifierDeclStatement', u'bool overflow = m -> status & MCI_STATUS_OVER ;'], [680714, None, u'IdentifierDecl', u'errcode = GET_BITFIELD ( m -> status , 0 , 15 )'], [680730, None, u'IdentifierDeclType', u'u32'], [680729, None, u'Identifier', u'errcode'], [680715, None, u'AssignmentExpr', u'errcode = GET_BITFIELD ( m -> status , 0 , 15 )'], [680728, None, u'Identifier', u'errcode'], [680716, None, u'CallExpression', u'GET_BITFIELD ( m -> status , 0 , 15 )'], [680726, None, u'Callee', u'GET_BITFIELD'], [680717, None, u'ArgumentList', u'm -> status'], [680727, None, u'Identifier', u'GET_BITFIELD'], [680722, None, u'Argument', u'm -> status'], [680720, None, u'Argument', u'0'], [680718, None, u'Argument', u'15'], [680723, None, u'PtrMemberAccess', u'm -> status'], [680721, None, u'PrimaryExpression', u'0'], [680719, None, u'PrimaryExpression', u'15'], [680725, None, u'Identifier', u'm'], [680724, None, u'Identifier', u'status'], [680713, u'True', u'IdentifierDeclStatement', u'u32 errcode = GET_BITFIELD ( m -> status , 0 , 15 ) ;'], [680816, None, u'IdentifierDecl', u'* optype'], [680812, None, u'IdentifierDecl', u'msg [ PND2_MSG_SIZE ]'], [680818, None, u'IdentifierDeclType', u'char *'], [680817, None, u'Identifier', u'optype'], [680815, None, u'IdentifierDeclType', u'char [ PND2_MSG_SIZE ]'], [680814, None, u'Identifier', u'msg'], [680813, None, u'Identifier', u'PND2_MSG_SIZE'], [680811, u'True', u'IdentifierDeclStatement', u'char * optype , msg [ PND2_MSG_SIZE ] ;'], [680732, None, u'IdentifierDecl', u'mscod = GET_BITFIELD ( m -> status , 16 , 31 )'], [680748, None, u'IdentifierDeclType', u'u32'], [680747, None, u'Identifier', u'mscod'], [680733, None, u'AssignmentExpr', u'mscod = GET_BITFIELD ( m -> status , 16 , 31 )'], [680746, None, u'Identifier', u'mscod'], [680734, None, u'CallExpression', u'GET_BITFIELD ( m -> status , 16 , 31 )'], [680744, None, u'Callee', u'GET_BITFIELD'], [680735, None, u'ArgumentList', u'm -> status'], [680745, None, u'Identifier', u'GET_BITFIELD'], [680740, None, u'Argument', u'm -> status'], [680738, None, u'Argument', u'16'], [680736, None, u'Argument', u'31'], [680741, None, u'PtrMemberAccess', u'm -> status'], [680739, None, u'PrimaryExpression', u'16'], [680737, None, u'PrimaryExpression', u'31'], [680743, None, u'Identifier', u'm'], [680742, None, u'Identifier', u'status'], [680731, u'True', u'IdentifierDeclStatement', u'u32 mscod = GET_BITFIELD ( m -> status , 16 , 31 ) ;'], [680779, None, u'IdentifierDecl', u'uc_err = m -> status & MCI_STATUS_UC'], [680788, None, u'IdentifierDeclType', u'bool'], [680787, None, u'Identifier', u'uc_err'], [680780, None, u'AssignmentExpr', u'uc_err = m -> status & MCI_STATUS_UC'], [680786, None, u'Identifier', u'uc_err'], [680781, None, u'BitAndExpression', u'm -> status & MCI_STATUS_UC'], [680783, None, u'PtrMemberAccess', u'm -> status'], [680782, None, u'Identifier', u'MCI_STATUS_UC'], [680785, None, u'Identifier', u'm'], [680784, None, u'Identifier', u'status'], [680778, u'True', u'IdentifierDeclStatement', u'bool uc_err = m -> status & MCI_STATUS_UC ;'], [680768, None, u'IdentifierDecl', u'recov = m -> status & MCI_STATUS_S'], [680777, None, u'IdentifierDeclType', u'bool'], [680776, None, u'Identifier', u'recov'], [680769, None, u'AssignmentExpr', u'recov = m -> status & MCI_STATUS_S'], [680775, None, u'Identifier', u'recov'], [680770, None, u'BitAndExpression', u'm -> status & MCI_STATUS_S'], [680772, None, u'PtrMemberAccess', u'm -> status'], [680771, None, u'Identifier', u'MCI_STATUS_S'], [680774, None, u'Identifier', u'm'], [680773, None, u'Identifier', u'status'], [680767, u'True', u'IdentifierDeclStatement', u'bool recov = m -> status & MCI_STATUS_S ;'], [680438, None, u'ParameterType', u'struct dram_addr *'], [680437, None, u'Identifier', u'daddr'], [680436, u'True', u'Parameter', u'struct dram_addr * daddr'], [680441, None, u'ParameterType', u'const struct mce *'], [680440, None, u'Identifier', u'm'], [680439, u'True', u'Parameter', u'const struct mce * m']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[680483, u'True', u'ExpressionStatement', u'edac_mc_handle_error ( tp_event , mci , core_err_cnt , m -> addr >> PAGE_SHIFT , m -> addr & ~PAGE_MASK , 0 , daddr -> chan , daddr -> dimm , - 1 , optype , msg )']]","[[680484, None, u'CallExpression', u'edac_mc_handle_error ( tp_event , mci , core_err_cnt , m -> addr >> PAGE_SHIFT , m -> addr & ~PAGE_MASK , 0 , daddr -> chan , daddr -> dimm , - 1 , optype , msg )'], [680522, None, u'Callee', u'edac_mc_handle_error'], [680485, None, u'ArgumentList', u'tp_event'], [680523, None, u'Identifier', u'edac_mc_handle_error'], [680520, None, u'Argument', u'tp_event'], [680518, None, u'Argument', u'mci'], [680516, None, u'Argument', u'core_err_cnt'], [680510, None, u'Argument', u'm -> addr >> PAGE_SHIFT'], [680504, None, u'Argument', u'm -> addr & ~PAGE_MASK'], [680502, None, u'Argument', u'0'], [680498, None, u'Argument', u'daddr -> chan'], [680494, None, u'Argument', u'daddr -> dimm'], [680490, None, u'Argument', u'- 1'], [680488, None, u'Argument', u'optype'], [680486, None, u'Argument', u'msg'], [680521, None, u'Identifier', u'tp_event'], [680519, None, u'Identifier', u'mci'], [680517, None, u'Identifier', u'core_err_cnt'], [680511, None, u'ShiftExpression', u'm -> addr >> PAGE_SHIFT'], [680505, None, u'BitAndExpression', u'm -> addr & ~PAGE_MASK'], [680503, None, u'PrimaryExpression', u'0'], [680499, None, u'PtrMemberAccess', u'daddr -> chan'], [680495, None, u'PtrMemberAccess', u'daddr -> dimm'], [680491, None, u'UnaryOp', u'- 1'], [680489, None, u'Identifier', u'optype'], [680487, None, u'Identifier', u'msg'], [680513, None, u'PtrMemberAccess', u'm -> addr'], [680512, None, u'Identifier', u'PAGE_SHIFT'], [680507, None, u'PtrMemberAccess', u'm -> addr'], [680506, None, u'Identifier', u'~PAGE_MASK'], [680501, None, u'Identifier', u'daddr'], [680500, None, u'Identifier', u'chan'], [680497, None, u'Identifier', u'daddr'], [680496, None, u'Identifier', u'dimm'], [680493, None, u'UnaryOperator', u'-'], [680492, None, u'PrimaryExpression', u'1'], [680515, None, u'Identifier', u'm'], [680514, None, u'Identifier', u'addr'], [680509, None, u'Identifier', u'm'], [680508, None, u'Identifier', u'addr'], [680483, u'True', u'ExpressionStatement', u'edac_mc_handle_error ( tp_event , mci , core_err_cnt , m -> addr >> PAGE_SHIFT , m -> addr & ~PAGE_MASK , 0 , daddr -> chan , daddr -> dimm , - 1 , optype , msg )'], [680594, None, u'Identifier', u'rc'], [680593, u'True', u'Condition', u'rc'], [680615, None, u'UnaryOp', u'! ( m -> status & MCI_STATUS_ADDRV )'], [680621, None, u'UnaryOperator', u'!'], [680616, None, u'BitAndExpression', u'm -> status & MCI_STATUS_ADDRV'], [680618, None, u'PtrMemberAccess', u'm -> status'], [680617, None, u'Identifier', u'MCI_STATUS_ADDRV'], [680620, None, u'Identifier', u'm'], [680619, None, u'Identifier', u'status'], [680614, u'True', u'Condition', u'! ( m -> status & MCI_STATUS_ADDRV )'], [680823, u'True', u'CFGEntryNode', u'ENTRY']]","[[680484, None, u'CallExpression', u'edac_mc_handle_error ( tp_event , mci , core_err_cnt , m -> addr >> PAGE_SHIFT , m -> addr & ~PAGE_MASK , 0 , daddr -> chan , daddr -> dimm , - 1 , optype , msg )'], [680522, None, u'Callee', u'edac_mc_handle_error'], [680485, None, u'ArgumentList', u'tp_event'], [680523, None, u'Identifier', u'edac_mc_handle_error'], [680520, None, u'Argument', u'tp_event'], [680518, None, u'Argument', u'mci'], [680516, None, u'Argument', u'core_err_cnt'], [680510, None, u'Argument', u'm -> addr >> PAGE_SHIFT'], [680504, None, u'Argument', u'm -> addr & ~PAGE_MASK'], [680502, None, u'Argument', u'0'], [680498, None, u'Argument', u'daddr -> chan'], [680494, None, u'Argument', u'daddr -> dimm'], [680490, None, u'Argument', u'- 1'], [680488, None, u'Argument', u'optype'], [680486, None, u'Argument', u'msg'], [680521, None, u'Identifier', u'tp_event'], [680519, None, u'Identifier', u'mci'], [680517, None, u'Identifier', u'core_err_cnt'], [680511, None, u'ShiftExpression', u'm -> addr >> PAGE_SHIFT'], [680505, None, u'BitAndExpression', u'm -> addr & ~PAGE_MASK'], [680503, None, u'PrimaryExpression', u'0'], [680499, None, u'PtrMemberAccess', u'daddr -> chan'], [680495, None, u'PtrMemberAccess', u'daddr -> dimm'], [680491, None, u'UnaryOp', u'- 1'], [680489, None, u'Identifier', u'optype'], [680487, None, u'Identifier', u'msg'], [680513, None, u'PtrMemberAccess', u'm -> addr'], [680512, None, u'Identifier', u'PAGE_SHIFT'], [680507, None, u'PtrMemberAccess', u'm -> addr'], [680506, None, u'Identifier', u'~PAGE_MASK'], [680501, None, u'Identifier', u'daddr'], [680500, None, u'Identifier', u'chan'], [680497, None, u'Identifier', u'daddr'], [680496, None, u'Identifier', u'dimm'], [680493, None, u'UnaryOperator', u'-'], [680492, None, u'PrimaryExpression', u'1'], [680515, None, u'Identifier', u'm'], [680514, None, u'Identifier', u'addr'], [680509, None, u'Identifier', u'm'], [680508, None, u'Identifier', u'addr'], [680483, u'True', u'ExpressionStatement', u'edac_mc_handle_error ( tp_event , mci , core_err_cnt , m -> addr >> PAGE_SHIFT , m -> addr & ~PAGE_MASK , 0 , daddr -> chan , daddr -> dimm , - 1 , optype , msg )'], [680750, None, u'IdentifierDecl', u'core_err_cnt = GET_BITFIELD ( m -> status , 38 , 52 )'], [680766, None, u'IdentifierDeclType', u'u32'], [680765, None, u'Identifier', u'core_err_cnt'], [680751, None, u'AssignmentExpr', u'core_err_cnt = GET_BITFIELD ( m -> status , 38 , 52 )'], [680764, None, u'Identifier', u'core_err_cnt'], [680752, None, u'CallExpression', u'GET_BITFIELD ( m -> status , 38 , 52 )'], [680762, None, u'Callee', u'GET_BITFIELD'], [680753, None, u'ArgumentList', u'm -> status'], [680763, None, u'Identifier', u'GET_BITFIELD'], [680758, None, u'Argument', u'm -> status'], [680756, None, u'Argument', u'38'], [680754, None, u'Argument', u'52'], [680759, None, u'PtrMemberAccess', u'm -> status'], [680757, None, u'PrimaryExpression', u'38'], [680755, None, u'PrimaryExpression', u'52'], [680761, None, u'Identifier', u'm'], [680760, None, u'Identifier', u'status'], [680749, u'True', u'IdentifierDeclStatement', u'u32 core_err_cnt = GET_BITFIELD ( m -> status , 38 , 52 ) ;'], [680816, None, u'IdentifierDecl', u'* optype'], [680812, None, u'IdentifierDecl', u'msg [ PND2_MSG_SIZE ]'], [680818, None, u'IdentifierDeclType', u'char *'], [680817, None, u'Identifier', u'optype'], [680815, None, u'IdentifierDeclType', u'char [ PND2_MSG_SIZE ]'], [680814, None, u'Identifier', u'msg'], [680813, None, u'Identifier', u'PND2_MSG_SIZE'], [680811, u'True', u'IdentifierDeclStatement', u'char * optype , msg [ PND2_MSG_SIZE ] ;'], [680441, None, u'ParameterType', u'const struct mce *'], [680440, None, u'Identifier', u'm'], [680439, u'True', u'Parameter', u'const struct mce * m'], [680648, None, u'AssignmentExpr', u'optype = ""memory write error""'], [680650, None, u'Identifier', u'optype'], [680649, None, u'PrimaryExpression', u'""memory write error""'], [680647, u'True', u'ExpressionStatement', u'optype = ""memory write error""'], [680629, None, u'AssignmentExpr', u'optype = ""reserved""'], [680631, None, u'Identifier', u'optype'], [680630, None, u'PrimaryExpression', u'""reserved""'], [680628, u'True', u'ExpressionStatement', u'optype = ""reserved""'], [680642, None, u'AssignmentExpr', u'optype = ""addr/cmd error""'], [680644, None, u'Identifier', u'optype'], [680643, None, u'PrimaryExpression', u'""addr/cmd error""'], [680641, u'True', u'ExpressionStatement', u'optype = ""addr/cmd error""'], [680668, None, u'AssignmentExpr', u'optype = ""Can\'t parse: it is not a mem""'], [680670, None, u'Identifier', u'optype'], [680669, None, u'PrimaryExpression', u'""Can\'t parse: it is not a mem""'], [680667, u'True', u'ExpressionStatement', u'optype = ""Can\'t parse: it is not a mem""'], [680636, None, u'AssignmentExpr', u'optype = ""memory scrubbing error""'], [680638, None, u'Identifier', u'optype'], [680637, None, u'PrimaryExpression', u'""memory scrubbing error""'], [680635, u'True', u'ExpressionStatement', u'optype = ""memory scrubbing error""'], [680654, None, u'AssignmentExpr', u'optype = ""memory read error""'], [680656, None, u'Identifier', u'optype'], [680655, None, u'PrimaryExpression', u'""memory read error""'], [680653, u'True', u'ExpressionStatement', u'optype = ""memory read error""'], [680660, None, u'AssignmentExpr', u'optype = ""generic undef request error""'], [680662, None, u'Identifier', u'optype'], [680661, None, u'PrimaryExpression', u'""generic undef request error""'], [680659, u'True', u'ExpressionStatement', u'optype = ""generic undef request error""'], [680444, None, u'ParameterType', u'struct mem_ctl_info *'], [680443, None, u'Identifier', u'mci'], [680442, u'True', u'Parameter', u'struct mem_ctl_info * mci'], [680438, None, u'ParameterType', u'struct dram_addr *'], [680437, None, u'Identifier', u'daddr'], [680436, u'True', u'Parameter', u'struct dram_addr * daddr'], [680680, None, u'AssignmentExpr', u'tp_event = uc_err ? ( ripv ? HW_EVENT_ERR_FATAL : HW_EVENT_ERR_UNCORRECTED ) : HW_EVENT_ERR_CORRECTED'], [680690, None, u'Identifier', u'tp_event'], [680681, None, u'ConditionalExpression', u'uc_err ? ( ripv ? HW_EVENT_ERR_FATAL : HW_EVENT_ERR_UNCORRECTED ) : HW_EVENT_ERR_CORRECTED'], [680688, None, u'Condition', u'uc_err'], [680683, None, u'ConditionalExpression', u'ripv ? HW_EVENT_ERR_FATAL : HW_EVENT_ERR_UNCORRECTED'], [680682, None, u'Identifier', u'HW_EVENT_ERR_CORRECTED'], [680689, None, u'Identifier', u'uc_err'], [680686, None, u'Condition', u'ripv'], [680685, None, u'Identifier', u'HW_EVENT_ERR_FATAL'], [680684, None, u'Identifier', u'HW_EVENT_ERR_UNCORRECTED'], [680687, None, u'Identifier', u'ripv'], [680679, u'True', u'ExpressionStatement', u'tp_event = uc_err ? ( ripv ? HW_EVENT_ERR_FATAL : HW_EVENT_ERR_UNCORRECTED ) : HW_EVENT_ERR_CORRECTED'], [680801, None, u'IdentifierDecl', u'ripv = m -> mcgstatus & MCG_STATUS_RIPV'], [680810, None, u'IdentifierDeclType', u'bool'], [680809, None, u'Identifier', u'ripv'], [680802, None, u'AssignmentExpr', u'ripv = m -> mcgstatus & MCG_STATUS_RIPV'], [680808, None, u'Identifier', u'ripv'], [680803, None, u'BitAndExpression', u'm -> mcgstatus & MCG_STATUS_RIPV'], [680805, None, u'PtrMemberAccess', u'm -> mcgstatus'], [680804, None, u'Identifier', u'MCG_STATUS_RIPV'], [680807, None, u'Identifier', u'm'], [680806, None, u'Identifier', u'mcgstatus'], [680800, u'True', u'IdentifierDeclStatement', u'bool ripv = m -> mcgstatus & MCG_STATUS_RIPV ;'], [680779, None, u'IdentifierDecl', u'uc_err = m -> status & MCI_STATUS_UC'], [680788, None, u'IdentifierDeclType', u'bool'], [680787, None, u'Identifier', u'uc_err'], [680780, None, u'AssignmentExpr', u'uc_err = m -> status & MCI_STATUS_UC'], [680786, None, u'Identifier', u'uc_err'], [680781, None, u'BitAndExpression', u'm -> status & MCI_STATUS_UC'], [680783, None, u'PtrMemberAccess', u'm -> status'], [680782, None, u'Identifier', u'MCI_STATUS_UC'], [680785, None, u'Identifier', u'm'], [680784, None, u'Identifier', u'status'], [680778, u'True', u'IdentifierDeclStatement', u'bool uc_err = m -> status & MCI_STATUS_UC ;']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[680447, u'True', u'ExpressionStatement', u'edac_mc_handle_error ( tp_event , mci , core_err_cnt , 0 , 0 , 0 , - 1 , - 1 , - 1 , msg , """" )']]","[[680448, None, u'CallExpression', u'edac_mc_handle_error ( tp_event , mci , core_err_cnt , 0 , 0 , 0 , - 1 , - 1 , - 1 , msg , """" )'], [680478, None, u'Callee', u'edac_mc_handle_error'], [680449, None, u'ArgumentList', u'tp_event'], [680479, None, u'Identifier', u'edac_mc_handle_error'], [680476, None, u'Argument', u'tp_event'], [680474, None, u'Argument', u'mci'], [680472, None, u'Argument', u'core_err_cnt'], [680470, None, u'Argument', u'0'], [680468, None, u'Argument', u'0'], [680466, None, u'Argument', u'0'], [680462, None, u'Argument', u'- 1'], [680458, None, u'Argument', u'- 1'], [680454, None, u'Argument', u'- 1'], [680452, None, u'Argument', u'msg'], [680450, None, u'Argument', u'""""'], [680477, None, u'Identifier', u'tp_event'], [680475, None, u'Identifier', u'mci'], [680473, None, u'Identifier', u'core_err_cnt'], [680471, None, u'PrimaryExpression', u'0'], [680469, None, u'PrimaryExpression', u'0'], [680467, None, u'PrimaryExpression', u'0'], [680463, None, u'UnaryOp', u'- 1'], [680459, None, u'UnaryOp', u'- 1'], [680455, None, u'UnaryOp', u'- 1'], [680453, None, u'Identifier', u'msg'], [680451, None, u'PrimaryExpression', u'""""'], [680465, None, u'UnaryOperator', u'-'], [680464, None, u'PrimaryExpression', u'1'], [680461, None, u'UnaryOperator', u'-'], [680460, None, u'PrimaryExpression', u'1'], [680457, None, u'UnaryOperator', u'-'], [680456, None, u'PrimaryExpression', u'1'], [680447, u'True', u'ExpressionStatement', u'edac_mc_handle_error ( tp_event , mci , core_err_cnt , 0 , 0 , 0 , - 1 , - 1 , - 1 , msg , """" )'], [680594, None, u'Identifier', u'rc'], [680593, u'True', u'Condition', u'rc'], [680615, None, u'UnaryOp', u'! ( m -> status & MCI_STATUS_ADDRV )'], [680621, None, u'UnaryOperator', u'!'], [680616, None, u'BitAndExpression', u'm -> status & MCI_STATUS_ADDRV'], [680618, None, u'PtrMemberAccess', u'm -> status'], [680617, None, u'Identifier', u'MCI_STATUS_ADDRV'], [680620, None, u'Identifier', u'm'], [680619, None, u'Identifier', u'status'], [680614, u'True', u'Condition', u'! ( m -> status & MCI_STATUS_ADDRV )'], [680823, u'True', u'CFGEntryNode', u'ENTRY']]","[[680448, None, u'CallExpression', u'edac_mc_handle_error ( tp_event , mci , core_err_cnt , 0 , 0 , 0 , - 1 , - 1 , - 1 , msg , """" )'], [680478, None, u'Callee', u'edac_mc_handle_error'], [680449, None, u'ArgumentList', u'tp_event'], [680479, None, u'Identifier', u'edac_mc_handle_error'], [680476, None, u'Argument', u'tp_event'], [680474, None, u'Argument', u'mci'], [680472, None, u'Argument', u'core_err_cnt'], [680470, None, u'Argument', u'0'], [680468, None, u'Argument', u'0'], [680466, None, u'Argument', u'0'], [680462, None, u'Argument', u'- 1'], [680458, None, u'Argument', u'- 1'], [680454, None, u'Argument', u'- 1'], [680452, None, u'Argument', u'msg'], [680450, None, u'Argument', u'""""'], [680477, None, u'Identifier', u'tp_event'], [680475, None, u'Identifier', u'mci'], [680473, None, u'Identifier', u'core_err_cnt'], [680471, None, u'PrimaryExpression', u'0'], [680469, None, u'PrimaryExpression', u'0'], [680467, None, u'PrimaryExpression', u'0'], [680463, None, u'UnaryOp', u'- 1'], [680459, None, u'UnaryOp', u'- 1'], [680455, None, u'UnaryOp', u'- 1'], [680453, None, u'Identifier', u'msg'], [680451, None, u'PrimaryExpression', u'""""'], [680465, None, u'UnaryOperator', u'-'], [680464, None, u'PrimaryExpression', u'1'], [680461, None, u'UnaryOperator', u'-'], [680460, None, u'PrimaryExpression', u'1'], [680457, None, u'UnaryOperator', u'-'], [680456, None, u'PrimaryExpression', u'1'], [680447, u'True', u'ExpressionStatement', u'edac_mc_handle_error ( tp_event , mci , core_err_cnt , 0 , 0 , 0 , - 1 , - 1 , - 1 , msg , """" )'], [680750, None, u'IdentifierDecl', u'core_err_cnt = GET_BITFIELD ( m -> status , 38 , 52 )'], [680766, None, u'IdentifierDeclType', u'u32'], [680765, None, u'Identifier', u'core_err_cnt'], [680751, None, u'AssignmentExpr', u'core_err_cnt = GET_BITFIELD ( m -> status , 38 , 52 )'], [680764, None, u'Identifier', u'core_err_cnt'], [680752, None, u'CallExpression', u'GET_BITFIELD ( m -> status , 38 , 52 )'], [680762, None, u'Callee', u'GET_BITFIELD'], [680753, None, u'ArgumentList', u'm -> status'], [680763, None, u'Identifier', u'GET_BITFIELD'], [680758, None, u'Argument', u'm -> status'], [680756, None, u'Argument', u'38'], [680754, None, u'Argument', u'52'], [680759, None, u'PtrMemberAccess', u'm -> status'], [680757, None, u'PrimaryExpression', u'38'], [680755, None, u'PrimaryExpression', u'52'], [680761, None, u'Identifier', u'm'], [680760, None, u'Identifier', u'status'], [680749, u'True', u'IdentifierDeclStatement', u'u32 core_err_cnt = GET_BITFIELD ( m -> status , 38 , 52 ) ;'], [680816, None, u'IdentifierDecl', u'* optype'], [680812, None, u'IdentifierDecl', u'msg [ PND2_MSG_SIZE ]'], [680818, None, u'IdentifierDeclType', u'char *'], [680817, None, u'Identifier', u'optype'], [680815, None, u'IdentifierDeclType', u'char [ PND2_MSG_SIZE ]'], [680814, None, u'Identifier', u'msg'], [680813, None, u'Identifier', u'PND2_MSG_SIZE'], [680811, u'True', u'IdentifierDeclStatement', u'char * optype , msg [ PND2_MSG_SIZE ] ;'], [680444, None, u'ParameterType', u'struct mem_ctl_info *'], [680443, None, u'Identifier', u'mci'], [680442, u'True', u'Parameter', u'struct mem_ctl_info * mci'], [680680, None, u'AssignmentExpr', u'tp_event = uc_err ? ( ripv ? HW_EVENT_ERR_FATAL : HW_EVENT_ERR_UNCORRECTED ) : HW_EVENT_ERR_CORRECTED'], [680690, None, u'Identifier', u'tp_event'], [680681, None, u'ConditionalExpression', u'uc_err ? ( ripv ? HW_EVENT_ERR_FATAL : HW_EVENT_ERR_UNCORRECTED ) : HW_EVENT_ERR_CORRECTED'], [680688, None, u'Condition', u'uc_err'], [680683, None, u'ConditionalExpression', u'ripv ? HW_EVENT_ERR_FATAL : HW_EVENT_ERR_UNCORRECTED'], [680682, None, u'Identifier', u'HW_EVENT_ERR_CORRECTED'], [680689, None, u'Identifier', u'uc_err'], [680686, None, u'Condition', u'ripv'], [680685, None, u'Identifier', u'HW_EVENT_ERR_FATAL'], [680684, None, u'Identifier', u'HW_EVENT_ERR_UNCORRECTED'], [680687, None, u'Identifier', u'ripv'], [680679, u'True', u'ExpressionStatement', u'tp_event = uc_err ? ( ripv ? HW_EVENT_ERR_FATAL : HW_EVENT_ERR_UNCORRECTED ) : HW_EVENT_ERR_CORRECTED'], [680441, None, u'ParameterType', u'const struct mce *'], [680440, None, u'Identifier', u'm'], [680439, u'True', u'Parameter', u'const struct mce * m'], [680801, None, u'IdentifierDecl', u'ripv = m -> mcgstatus & MCG_STATUS_RIPV'], [680810, None, u'IdentifierDeclType', u'bool'], [680809, None, u'Identifier', u'ripv'], [680802, None, u'AssignmentExpr', u'ripv = m -> mcgstatus & MCG_STATUS_RIPV'], [680808, None, u'Identifier', u'ripv'], [680803, None, u'BitAndExpression', u'm -> mcgstatus & MCG_STATUS_RIPV'], [680805, None, u'PtrMemberAccess', u'm -> mcgstatus'], [680804, None, u'Identifier', u'MCG_STATUS_RIPV'], [680807, None, u'Identifier', u'm'], [680806, None, u'Identifier', u'mcgstatus'], [680800, u'True', u'IdentifierDeclStatement', u'bool ripv = m -> mcgstatus & MCG_STATUS_RIPV ;'], [680779, None, u'IdentifierDecl', u'uc_err = m -> status & MCI_STATUS_UC'], [680788, None, u'IdentifierDeclType', u'bool'], [680787, None, u'Identifier', u'uc_err'], [680780, None, u'AssignmentExpr', u'uc_err = m -> status & MCI_STATUS_UC'], [680786, None, u'Identifier', u'uc_err'], [680781, None, u'BitAndExpression', u'm -> status & MCI_STATUS_UC'], [680783, None, u'PtrMemberAccess', u'm -> status'], [680782, None, u'Identifier', u'MCI_STATUS_UC'], [680785, None, u'Identifier', u'm'], [680784, None, u'Identifier', u'status'], [680778, u'True', u'IdentifierDeclStatement', u'bool uc_err = m -> status & MCI_STATUS_UC ;']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[680873, u'True', u'ExpressionStatement', u'snprintf ( dimm -> label , sizeof ( dimm -> label ) , ""Slice#%d_Chan#%d"" , i / 2 , i % 2 )']]","[[680874, None, u'CallExpression', u'snprintf ( dimm -> label , sizeof ( dimm -> label ) , ""Slice#%d_Chan#%d"" , i / 2 , i % 2 )'], [680896, None, u'Callee', u'snprintf'], [680875, None, u'ArgumentList', u'dimm -> label'], [680897, None, u'Identifier', u'snprintf'], [680892, None, u'Argument', u'dimm -> label'], [680886, None, u'Argument', u'sizeof ( dimm -> label )'], [680884, None, u'Argument', u'""Slice#%d_Chan#%d""'], [680880, None, u'Argument', u'i / 2'], [680876, None, u'Argument', u'i % 2'], [680893, None, u'PtrMemberAccess', u'dimm -> label'], [680887, None, u'SizeofExpr', u'sizeof ( dimm -> label )'], [680885, None, u'PrimaryExpression', u'""Slice#%d_Chan#%d""'], [680881, None, u'MultiplicativeExpression', u'i / 2'], [680877, None, u'MultiplicativeExpression', u'i % 2'], [680895, None, u'Identifier', u'dimm'], [680894, None, u'Identifier', u'label'], [680891, None, u'Sizeof', u'sizeof'], [680888, None, u'PtrMemberAccess', u'dimm -> label'], [680883, None, u'Identifier', u'i'], [680882, None, u'PrimaryExpression', u'2'], [680879, None, u'Identifier', u'i'], [680878, None, u'PrimaryExpression', u'2'], [680890, None, u'Identifier', u'dimm'], [680889, None, u'Identifier', u'label'], [680873, u'True', u'ExpressionStatement', u'snprintf ( dimm -> label , sizeof ( dimm -> label ) , ""Slice#%d_Chan#%d"" , i / 2 , i % 2 )'], [681013, None, u'EqualityExpression', u'g == ARRAY_SIZE ( dimms )'], [681020, None, u'Identifier', u'g'], [681014, None, u'CallExpression', u'ARRAY_SIZE ( dimms )'], [681018, None, u'Callee', u'ARRAY_SIZE'], [681015, None, u'ArgumentList', u'dimms'], [681019, None, u'Identifier', u'ARRAY_SIZE'], [681016, None, u'Argument', u'dimms'], [681017, None, u'Identifier', u'dimms'], [681012, u'True', u'Condition', u'g == ARRAY_SIZE ( dimms )'], [681093, None, u'UnaryOp', u'! dimm'], [681095, None, u'UnaryOperator', u'!'], [681094, None, u'Identifier', u'dimm'], [681092, u'True', u'Condition', u'! dimm'], [681124, None, u'UnaryOp', u'! ( chan_mask & BIT ( i ) )'], [681133, None, u'UnaryOperator', u'!'], [681125, None, u'BitAndExpression', u'chan_mask & BIT ( i )'], [681132, None, u'Identifier', u'chan_mask'], [681126, None, u'CallExpression', u'BIT ( i )'], [681130, None, u'Callee', u'BIT'], [681127, None, u'ArgumentList', u'i'], [681131, None, u'Identifier', u'BIT'], [681128, None, u'Argument', u'i'], [681129, None, u'Identifier', u'i'], [681123, u'True', u'Condition', u'! ( chan_mask & BIT ( i ) )'], [681138, None, u'RelationalExpression', u'i < APL_NUM_CHANNELS'], [681140, None, u'Identifier', u'i'], [681139, None, u'Identifier', u'APL_NUM_CHANNELS'], [681137, u'True', u'Condition', u'i < APL_NUM_CHANNELS'], [681173, u'True', u'CFGEntryNode', u'ENTRY']]","[[680874, None, u'CallExpression', u'snprintf ( dimm -> label , sizeof ( dimm -> label ) , ""Slice#%d_Chan#%d"" , i / 2 , i % 2 )'], [680896, None, u'Callee', u'snprintf'], [680875, None, u'ArgumentList', u'dimm -> label'], [680897, None, u'Identifier', u'snprintf'], [680892, None, u'Argument', u'dimm -> label'], [680886, None, u'Argument', u'sizeof ( dimm -> label )'], [680884, None, u'Argument', u'""Slice#%d_Chan#%d""'], [680880, None, u'Argument', u'i / 2'], [680876, None, u'Argument', u'i % 2'], [680893, None, u'PtrMemberAccess', u'dimm -> label'], [680887, None, u'SizeofExpr', u'sizeof ( dimm -> label )'], [680885, None, u'PrimaryExpression', u'""Slice#%d_Chan#%d""'], [680881, None, u'MultiplicativeExpression', u'i / 2'], [680877, None, u'MultiplicativeExpression', u'i % 2'], [680895, None, u'Identifier', u'dimm'], [680894, None, u'Identifier', u'label'], [680891, None, u'Sizeof', u'sizeof'], [680888, None, u'PtrMemberAccess', u'dimm -> label'], [680883, None, u'Identifier', u'i'], [680882, None, u'PrimaryExpression', u'2'], [680879, None, u'Identifier', u'i'], [680878, None, u'PrimaryExpression', u'2'], [680890, None, u'Identifier', u'dimm'], [680889, None, u'Identifier', u'label'], [680873, u'True', u'ExpressionStatement', u'snprintf ( dimm -> label , sizeof ( dimm -> label ) , ""Slice#%d_Chan#%d"" , i / 2 , i % 2 )'], [681142, None, u'AssignmentExpr', u'i = 0'], [681144, None, u'Identifier', u'i'], [681143, None, u'PrimaryExpression', u'0'], [681141, u'True', u'ForInit', u'i = 0 ;'], [681136, None, u'Identifier', u'i'], [681135, None, u'IncDec', u'++'], [681134, u'True', u'IncDecOp', u'i ++'], [681097, None, u'AssignmentExpr', u'dimm = EDAC_DIMM_PTR ( mci -> layers , mci -> dimms , mci -> n_layers , i , 0 , 0 )'], [681120, None, u'Identifier', u'dimm'], [681098, None, u'CallExpression', u'EDAC_DIMM_PTR ( mci -> layers , mci -> dimms , mci -> n_layers , i , 0 , 0 )'], [681118, None, u'Callee', u'EDAC_DIMM_PTR'], [681099, None, u'ArgumentList', u'mci -> layers'], [681119, None, u'Identifier', u'EDAC_DIMM_PTR'], [681114, None, u'Argument', u'mci -> layers'], [681110, None, u'Argument', u'mci -> dimms'], [681106, None, u'Argument', u'mci -> n_layers'], [681104, None, u'Argument', u'i'], [681102, None, u'Argument', u'0'], [681100, None, u'Argument', u'0'], [681115, None, u'PtrMemberAccess', u'mci -> layers'], [681111, None, u'PtrMemberAccess', u'mci -> dimms'], [681107, None, u'PtrMemberAccess', u'mci -> n_layers'], [681105, None, u'Identifier', u'i'], [681103, None, u'PrimaryExpression', u'0'], [681101, None, u'PrimaryExpression', u'0'], [681117, None, u'Identifier', u'mci'], [681116, None, u'Identifier', u'layers'], [681113, None, u'Identifier', u'mci'], [681112, None, u'Identifier', u'dimms'], [681109, None, u'Identifier', u'mci'], [681108, None, u'Identifier', u'n_layers'], [681096, u'True', u'ExpressionStatement', u'dimm = EDAC_DIMM_PTR ( mci -> layers , mci -> dimms , mci -> n_layers , i , 0 , 0 )'], [680899, None, u'AssignmentExpr', u'dimm -> edac_mode = EDAC_SECDED'], [680901, None, u'PtrMemberAccess', u'dimm -> edac_mode'], [680900, None, u'Identifier', u'EDAC_SECDED'], [680903, None, u'Identifier', u'dimm'], [680902, None, u'Identifier', u'edac_mode'], [680898, u'True', u'ExpressionStatement', u'dimm -> edac_mode = EDAC_SECDED'], [680868, None, u'ParameterType', u'struct mem_ctl_info *'], [680867, None, u'Identifier', u'mci'], [680866, u'True', u'Parameter', u'struct mem_ctl_info * mci']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[681240, u'True', u'ExpressionStatement', u'snprintf ( dimm -> label , sizeof ( dimm -> label ) , ""Chan#%d_DIMM#%d"" , i , j )']]","[[681241, None, u'CallExpression', u'snprintf ( dimm -> label , sizeof ( dimm -> label ) , ""Chan#%d_DIMM#%d"" , i , j )'], [681259, None, u'Callee', u'snprintf'], [681242, None, u'ArgumentList', u'dimm -> label'], [681260, None, u'Identifier', u'snprintf'], [681255, None, u'Argument', u'dimm -> label'], [681249, None, u'Argument', u'sizeof ( dimm -> label )'], [681247, None, u'Argument', u'""Chan#%d_DIMM#%d""'], [681245, None, u'Argument', u'i'], [681243, None, u'Argument', u'j'], [681256, None, u'PtrMemberAccess', u'dimm -> label'], [681250, None, u'SizeofExpr', u'sizeof ( dimm -> label )'], [681248, None, u'PrimaryExpression', u'""Chan#%d_DIMM#%d""'], [681246, None, u'Identifier', u'i'], [681244, None, u'Identifier', u'j'], [681258, None, u'Identifier', u'dimm'], [681257, None, u'Identifier', u'label'], [681254, None, u'Sizeof', u'sizeof'], [681251, None, u'PtrMemberAccess', u'dimm -> label'], [681253, None, u'Identifier', u'dimm'], [681252, None, u'Identifier', u'label'], [681240, u'True', u'ExpressionStatement', u'snprintf ( dimm -> label , sizeof ( dimm -> label ) , ""Chan#%d_DIMM#%d"" , i , j )'], [681362, None, u'UnaryOp', u'! dimm'], [681364, None, u'UnaryOperator', u'!'], [681363, None, u'Identifier', u'dimm'], [681361, u'True', u'Condition', u'! dimm'], [681393, None, u'UnaryOp', u'! ranks_of_dimm [ j ]'], [681397, None, u'UnaryOperator', u'!'], [681394, None, u'ArrayIndexing', u'ranks_of_dimm [ j ]'], [681396, None, u'Identifier', u'ranks_of_dimm'], [681395, None, u'Identifier', u'j'], [681392, u'True', u'Condition', u'! ranks_of_dimm [ j ]'], [681402, None, u'RelationalExpression', u'j < DNV_MAX_DIMMS'], [681404, None, u'Identifier', u'j'], [681403, None, u'Identifier', u'DNV_MAX_DIMMS'], [681401, u'True', u'Condition', u'j < DNV_MAX_DIMMS'], [681529, None, u'RelationalExpression', u'i < DNV_NUM_CHANNELS'], [681531, None, u'Identifier', u'i'], [681530, None, u'Identifier', u'DNV_NUM_CHANNELS'], [681528, u'True', u'Condition', u'i < DNV_NUM_CHANNELS'], [681599, u'True', u'CFGEntryNode', u'ENTRY']]","[[681241, None, u'CallExpression', u'snprintf ( dimm -> label , sizeof ( dimm -> label ) , ""Chan#%d_DIMM#%d"" , i , j )'], [681259, None, u'Callee', u'snprintf'], [681242, None, u'ArgumentList', u'dimm -> label'], [681260, None, u'Identifier', u'snprintf'], [681255, None, u'Argument', u'dimm -> label'], [681249, None, u'Argument', u'sizeof ( dimm -> label )'], [681247, None, u'Argument', u'""Chan#%d_DIMM#%d""'], [681245, None, u'Argument', u'i'], [681243, None, u'Argument', u'j'], [681256, None, u'PtrMemberAccess', u'dimm -> label'], [681250, None, u'SizeofExpr', u'sizeof ( dimm -> label )'], [681248, None, u'PrimaryExpression', u'""Chan#%d_DIMM#%d""'], [681246, None, u'Identifier', u'i'], [681244, None, u'Identifier', u'j'], [681258, None, u'Identifier', u'dimm'], [681257, None, u'Identifier', u'label'], [681254, None, u'Sizeof', u'sizeof'], [681251, None, u'PtrMemberAccess', u'dimm -> label'], [681253, None, u'Identifier', u'dimm'], [681252, None, u'Identifier', u'label'], [681240, u'True', u'ExpressionStatement', u'snprintf ( dimm -> label , sizeof ( dimm -> label ) , ""Chan#%d_DIMM#%d"" , i , j )'], [681527, None, u'Identifier', u'i'], [681526, None, u'IncDec', u'++'], [681525, u'True', u'IncDecOp', u'i ++'], [681533, None, u'AssignmentExpr', u'i = 0'], [681535, None, u'Identifier', u'i'], [681534, None, u'PrimaryExpression', u'0'], [681532, u'True', u'ForInit', u'i = 0 ;'], [681400, None, u'Identifier', u'j'], [681399, None, u'IncDec', u'++'], [681398, u'True', u'IncDecOp', u'j ++'], [681406, None, u'AssignmentExpr', u'j = 0'], [681408, None, u'Identifier', u'j'], [681407, None, u'PrimaryExpression', u'0'], [681405, u'True', u'ForInit', u'j = 0 ;'], [681366, None, u'AssignmentExpr', u'dimm = EDAC_DIMM_PTR ( mci -> layers , mci -> dimms , mci -> n_layers , i , j , 0 )'], [681389, None, u'Identifier', u'dimm'], [681367, None, u'CallExpression', u'EDAC_DIMM_PTR ( mci -> layers , mci -> dimms , mci -> n_layers , i , j , 0 )'], [681387, None, u'Callee', u'EDAC_DIMM_PTR'], [681368, None, u'ArgumentList', u'mci -> layers'], [681388, None, u'Identifier', u'EDAC_DIMM_PTR'], [681383, None, u'Argument', u'mci -> layers'], [681379, None, u'Argument', u'mci -> dimms'], [681375, None, u'Argument', u'mci -> n_layers'], [681373, None, u'Argument', u'i'], [681371, None, u'Argument', u'j'], [681369, None, u'Argument', u'0'], [681384, None, u'PtrMemberAccess', u'mci -> layers'], [681380, None, u'PtrMemberAccess', u'mci -> dimms'], [681376, None, u'PtrMemberAccess', u'mci -> n_layers'], [681374, None, u'Identifier', u'i'], [681372, None, u'Identifier', u'j'], [681370, None, u'PrimaryExpression', u'0'], [681386, None, u'Identifier', u'mci'], [681385, None, u'Identifier', u'layers'], [681382, None, u'Identifier', u'mci'], [681381, None, u'Identifier', u'dimms'], [681378, None, u'Identifier', u'mci'], [681377, None, u'Identifier', u'n_layers'], [681365, u'True', u'ExpressionStatement', u'dimm = EDAC_DIMM_PTR ( mci -> layers , mci -> dimms , mci -> n_layers , i , j , 0 )'], [681262, None, u'AssignmentExpr', u'dimm -> edac_mode = EDAC_SECDED'], [681264, None, u'PtrMemberAccess', u'dimm -> edac_mode'], [681263, None, u'Identifier', u'EDAC_SECDED'], [681266, None, u'Identifier', u'dimm'], [681265, None, u'Identifier', u'edac_mode'], [681261, u'True', u'ExpressionStatement', u'dimm -> edac_mode = EDAC_SECDED'], [681233, None, u'ParameterType', u'struct mem_ctl_info *'], [681232, None, u'Identifier', u'mci'], [681231, u'True', u'Parameter', u'struct mem_ctl_info * mci']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[681946, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_ERR , ""Couldn\'t find mci handler\\n"" )']]","[[681947, None, u'CallExpression', u'pnd2_printk ( KERN_ERR , ""Couldn\'t find mci handler\\n"" )'], [681953, None, u'Callee', u'pnd2_printk'], [681948, None, u'ArgumentList', u'KERN_ERR'], [681954, None, u'Identifier', u'pnd2_printk'], [681951, None, u'Argument', u'KERN_ERR'], [681949, None, u'Argument', u'""Couldn\'t find mci handler\\n""'], [681952, None, u'Identifier', u'KERN_ERR'], [681950, None, u'PrimaryExpression', u'""Couldn\'t find mci handler\\n""'], [681946, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_ERR , ""Couldn\'t find mci handler\\n"" )'], [681956, None, u'CallExpression', u'unlikely ( ! mci || ! mci -> pvt_info )'], [681968, None, u'Callee', u'unlikely'], [681957, None, u'ArgumentList', u'! mci || ! mci -> pvt_info'], [681969, None, u'Identifier', u'unlikely'], [681958, None, u'Argument', u'! mci || ! mci -> pvt_info'], [681959, None, u'OrExpression', u'! mci || ! mci -> pvt_info'], [681965, None, u'UnaryOp', u'! mci'], [681960, None, u'UnaryOp', u'! mci -> pvt_info'], [681967, None, u'UnaryOperator', u'!'], [681966, None, u'Identifier', u'mci'], [681964, None, u'UnaryOperator', u'!'], [681961, None, u'PtrMemberAccess', u'mci -> pvt_info'], [681963, None, u'Identifier', u'mci'], [681962, None, u'Identifier', u'pvt_info'], [681955, u'True', u'Condition', u'unlikely ( ! mci || ! mci -> pvt_info )'], [681970, u'True', u'CFGEntryNode', u'ENTRY']]","[[681947, None, u'CallExpression', u'pnd2_printk ( KERN_ERR , ""Couldn\'t find mci handler\\n"" )'], [681953, None, u'Callee', u'pnd2_printk'], [681948, None, u'ArgumentList', u'KERN_ERR'], [681954, None, u'Identifier', u'pnd2_printk'], [681951, None, u'Argument', u'KERN_ERR'], [681949, None, u'Argument', u'""Couldn\'t find mci handler\\n""'], [681952, None, u'Identifier', u'KERN_ERR'], [681950, None, u'PrimaryExpression', u'""Couldn\'t find mci handler\\n""'], [681946, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_ERR , ""Couldn\'t find mci handler\\n"" )']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[681982, u'True', u'Parameter', u'void * data'], [681985, u'True', u'Parameter', u'unsigned long val'], [681988, u'True', u'Parameter', u'struct notifier_block * nb']]","[[681984, None, u'ParameterType', u'void *'], [681983, None, u'Identifier', u'data'], [681982, u'True', u'Parameter', u'void * data'], [682195, u'True', u'CFGEntryNode', u'ENTRY'], [681987, None, u'ParameterType', u'unsigned long'], [681986, None, u'Identifier', u'val'], [681985, u'True', u'Parameter', u'unsigned long val'], [682195, u'True', u'CFGEntryNode', u'ENTRY'], [681990, None, u'ParameterType', u'struct notifier_block *'], [681989, None, u'Identifier', u'nb'], [681988, u'True', u'Parameter', u'struct notifier_block * nb'], [682195, u'True', u'CFGEntryNode', u'ENTRY']]","[[681984, None, u'ParameterType', u'void *'], [681983, None, u'Identifier', u'data'], [681982, u'True', u'Parameter', u'void * data'], [681987, None, u'ParameterType', u'unsigned long'], [681986, None, u'Identifier', u'val'], [681985, u'True', u'Parameter', u'unsigned long val'], [681990, None, u'ParameterType', u'struct notifier_block *'], [681989, None, u'Identifier', u'nb'], [681988, u'True', u'Parameter', u'struct notifier_block * nb']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682113, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""HANDLING MCE MEMORY ERROR\\n"" )']]","[[682114, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""HANDLING MCE MEMORY ERROR\\n"" )'], [682122, None, u'Callee', u'pnd2_mc_printk'], [682115, None, u'ArgumentList', u'mci'], [682123, None, u'Identifier', u'pnd2_mc_printk'], [682120, None, u'Argument', u'mci'], [682118, None, u'Argument', u'KERN_INFO'], [682116, None, u'Argument', u'""HANDLING MCE MEMORY ERROR\\n""'], [682121, None, u'Identifier', u'mci'], [682119, None, u'Identifier', u'KERN_INFO'], [682117, None, u'PrimaryExpression', u'""HANDLING MCE MEMORY ERROR\\n""'], [682113, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""HANDLING MCE MEMORY ERROR\\n"" )'], [682144, None, u'EqualityExpression', u'( mce -> status & 0xefff ) >> 7 != 1'], [682146, None, u'ShiftExpression', u'( mce -> status & 0xefff ) >> 7'], [682145, None, u'PrimaryExpression', u'1'], [682148, None, u'BitAndExpression', u'mce -> status & 0xefff'], [682147, None, u'PrimaryExpression', u'7'], [682150, None, u'PtrMemberAccess', u'mce -> status'], [682149, None, u'PrimaryExpression', u'0xefff'], [682152, None, u'Identifier', u'mce'], [682151, None, u'Identifier', u'status'], [682143, u'True', u'Condition', u'( mce -> status & 0xefff ) >> 7 != 1'], [682157, None, u'UnaryOp', u'! mci'], [682159, None, u'UnaryOperator', u'!'], [682158, None, u'Identifier', u'mci'], [682156, u'True', u'Condition', u'! mci'], [682168, None, u'EqualityExpression', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682170, None, u'CallExpression', u'get_edac_report_status ( )'], [682169, None, u'Identifier', u'EDAC_REPORTING_DISABLED'], [682172, None, u'Callee', u'get_edac_report_status'], [682171, None, u'ArgumentList', u''], [682173, None, u'Identifier', u'get_edac_report_status'], [682167, u'True', u'Condition', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682195, u'True', u'CFGEntryNode', u'ENTRY']]","[[682114, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""HANDLING MCE MEMORY ERROR\\n"" )'], [682122, None, u'Callee', u'pnd2_mc_printk'], [682115, None, u'ArgumentList', u'mci'], [682123, None, u'Identifier', u'pnd2_mc_printk'], [682120, None, u'Argument', u'mci'], [682118, None, u'Argument', u'KERN_INFO'], [682116, None, u'Argument', u'""HANDLING MCE MEMORY ERROR\\n""'], [682121, None, u'Identifier', u'mci'], [682119, None, u'Identifier', u'KERN_INFO'], [682117, None, u'PrimaryExpression', u'""HANDLING MCE MEMORY ERROR\\n""'], [682113, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""HANDLING MCE MEMORY ERROR\\n"" )'], [682161, None, u'AssignmentExpr', u'mci = pnd2_mci'], [682163, None, u'Identifier', u'mci'], [682162, None, u'Identifier', u'pnd2_mci'], [682160, u'True', u'ExpressionStatement', u'mci = pnd2_mci']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682084, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""CPU %u: Machine Check %s: %llx Bank %u: %llx\\n"" , mce -> extcpu , type , mce -> mcgstatus , mce -> bank , mce -> status )']]","[[682085, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""CPU %u: Machine Check %s: %llx Bank %u: %llx\\n"" , mce -> extcpu , type , mce -> mcgstatus , mce -> bank , mce -> status )'], [682111, None, u'Callee', u'pnd2_mc_printk'], [682086, None, u'ArgumentList', u'mci'], [682112, None, u'Identifier', u'pnd2_mc_printk'], [682109, None, u'Argument', u'mci'], [682107, None, u'Argument', u'KERN_INFO'], [682105, None, u'Argument', u'""CPU %u: Machine Check %s: %llx Bank %u: %llx\\n""'], [682101, None, u'Argument', u'mce -> extcpu'], [682099, None, u'Argument', u'type'], [682095, None, u'Argument', u'mce -> mcgstatus'], [682091, None, u'Argument', u'mce -> bank'], [682087, None, u'Argument', u'mce -> status'], [682110, None, u'Identifier', u'mci'], [682108, None, u'Identifier', u'KERN_INFO'], [682106, None, u'PrimaryExpression', u'""CPU %u: Machine Check %s: %llx Bank %u: %llx\\n""'], [682102, None, u'PtrMemberAccess', u'mce -> extcpu'], [682100, None, u'Identifier', u'type'], [682096, None, u'PtrMemberAccess', u'mce -> mcgstatus'], [682092, None, u'PtrMemberAccess', u'mce -> bank'], [682088, None, u'PtrMemberAccess', u'mce -> status'], [682104, None, u'Identifier', u'mce'], [682103, None, u'Identifier', u'extcpu'], [682098, None, u'Identifier', u'mce'], [682097, None, u'Identifier', u'mcgstatus'], [682094, None, u'Identifier', u'mce'], [682093, None, u'Identifier', u'bank'], [682090, None, u'Identifier', u'mce'], [682089, None, u'Identifier', u'status'], [682084, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""CPU %u: Machine Check %s: %llx Bank %u: %llx\\n"" , mce -> extcpu , type , mce -> mcgstatus , mce -> bank , mce -> status )'], [682144, None, u'EqualityExpression', u'( mce -> status & 0xefff ) >> 7 != 1'], [682146, None, u'ShiftExpression', u'( mce -> status & 0xefff ) >> 7'], [682145, None, u'PrimaryExpression', u'1'], [682148, None, u'BitAndExpression', u'mce -> status & 0xefff'], [682147, None, u'PrimaryExpression', u'7'], [682150, None, u'PtrMemberAccess', u'mce -> status'], [682149, None, u'PrimaryExpression', u'0xefff'], [682152, None, u'Identifier', u'mce'], [682151, None, u'Identifier', u'status'], [682143, u'True', u'Condition', u'( mce -> status & 0xefff ) >> 7 != 1'], [682157, None, u'UnaryOp', u'! mci'], [682159, None, u'UnaryOperator', u'!'], [682158, None, u'Identifier', u'mci'], [682156, u'True', u'Condition', u'! mci'], [682168, None, u'EqualityExpression', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682170, None, u'CallExpression', u'get_edac_report_status ( )'], [682169, None, u'Identifier', u'EDAC_REPORTING_DISABLED'], [682172, None, u'Callee', u'get_edac_report_status'], [682171, None, u'ArgumentList', u''], [682173, None, u'Identifier', u'get_edac_report_status'], [682167, u'True', u'Condition', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682195, u'True', u'CFGEntryNode', u'ENTRY']]","[[682085, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""CPU %u: Machine Check %s: %llx Bank %u: %llx\\n"" , mce -> extcpu , type , mce -> mcgstatus , mce -> bank , mce -> status )'], [682111, None, u'Callee', u'pnd2_mc_printk'], [682086, None, u'ArgumentList', u'mci'], [682112, None, u'Identifier', u'pnd2_mc_printk'], [682109, None, u'Argument', u'mci'], [682107, None, u'Argument', u'KERN_INFO'], [682105, None, u'Argument', u'""CPU %u: Machine Check %s: %llx Bank %u: %llx\\n""'], [682101, None, u'Argument', u'mce -> extcpu'], [682099, None, u'Argument', u'type'], [682095, None, u'Argument', u'mce -> mcgstatus'], [682091, None, u'Argument', u'mce -> bank'], [682087, None, u'Argument', u'mce -> status'], [682110, None, u'Identifier', u'mci'], [682108, None, u'Identifier', u'KERN_INFO'], [682106, None, u'PrimaryExpression', u'""CPU %u: Machine Check %s: %llx Bank %u: %llx\\n""'], [682102, None, u'PtrMemberAccess', u'mce -> extcpu'], [682100, None, u'Identifier', u'type'], [682096, None, u'PtrMemberAccess', u'mce -> mcgstatus'], [682092, None, u'PtrMemberAccess', u'mce -> bank'], [682088, None, u'PtrMemberAccess', u'mce -> status'], [682104, None, u'Identifier', u'mce'], [682103, None, u'Identifier', u'extcpu'], [682098, None, u'Identifier', u'mce'], [682097, None, u'Identifier', u'mcgstatus'], [682094, None, u'Identifier', u'mce'], [682093, None, u'Identifier', u'bank'], [682090, None, u'Identifier', u'mce'], [682089, None, u'Identifier', u'status'], [682084, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""CPU %u: Machine Check %s: %llx Bank %u: %llx\\n"" , mce -> extcpu , type , mce -> mcgstatus , mce -> bank , mce -> status )'], [682161, None, u'AssignmentExpr', u'mci = pnd2_mci'], [682163, None, u'Identifier', u'mci'], [682162, None, u'Identifier', u'pnd2_mci'], [682160, u'True', u'ExpressionStatement', u'mci = pnd2_mci'], [682127, None, u'AssignmentExpr', u'type = ""Event""'], [682129, None, u'Identifier', u'type'], [682128, None, u'PrimaryExpression', u'""Event""'], [682126, u'True', u'ExpressionStatement', u'type = ""Event""'], [682131, None, u'AssignmentExpr', u'type = ""Exception""'], [682133, None, u'Identifier', u'type'], [682132, None, u'PrimaryExpression', u'""Exception""'], [682130, u'True', u'ExpressionStatement', u'type = ""Exception""'], [682187, None, u'IdentifierDecl', u'* mce = ( struct mce * ) data'], [682194, None, u'IdentifierDeclType', u'struct mce *'], [682193, None, u'Identifier', u'mce'], [682188, None, u'AssignmentExpr', u'* mce = ( struct mce * ) data'], [682192, None, u'Identifier', u'mce'], [682189, None, u'CastExpression', u'( struct mce * ) data'], [682191, None, u'CastTarget', u'struct mce *'], [682190, None, u'Identifier', u'data'], [682186, u'True', u'IdentifierDeclStatement', u'struct mce * mce = ( struct mce * ) data ;'], [681984, None, u'ParameterType', u'void *'], [681983, None, u'Identifier', u'data'], [681982, u'True', u'Parameter', u'void * data']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682069, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""TSC %llx "" , mce -> tsc )']]","[[682070, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""TSC %llx "" , mce -> tsc )'], [682082, None, u'Callee', u'pnd2_mc_printk'], [682071, None, u'ArgumentList', u'mci'], [682083, None, u'Identifier', u'pnd2_mc_printk'], [682080, None, u'Argument', u'mci'], [682078, None, u'Argument', u'KERN_INFO'], [682076, None, u'Argument', u'""TSC %llx ""'], [682072, None, u'Argument', u'mce -> tsc'], [682081, None, u'Identifier', u'mci'], [682079, None, u'Identifier', u'KERN_INFO'], [682077, None, u'PrimaryExpression', u'""TSC %llx ""'], [682073, None, u'PtrMemberAccess', u'mce -> tsc'], [682075, None, u'Identifier', u'mce'], [682074, None, u'Identifier', u'tsc'], [682069, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""TSC %llx "" , mce -> tsc )'], [682144, None, u'EqualityExpression', u'( mce -> status & 0xefff ) >> 7 != 1'], [682146, None, u'ShiftExpression', u'( mce -> status & 0xefff ) >> 7'], [682145, None, u'PrimaryExpression', u'1'], [682148, None, u'BitAndExpression', u'mce -> status & 0xefff'], [682147, None, u'PrimaryExpression', u'7'], [682150, None, u'PtrMemberAccess', u'mce -> status'], [682149, None, u'PrimaryExpression', u'0xefff'], [682152, None, u'Identifier', u'mce'], [682151, None, u'Identifier', u'status'], [682143, u'True', u'Condition', u'( mce -> status & 0xefff ) >> 7 != 1'], [682157, None, u'UnaryOp', u'! mci'], [682159, None, u'UnaryOperator', u'!'], [682158, None, u'Identifier', u'mci'], [682156, u'True', u'Condition', u'! mci'], [682168, None, u'EqualityExpression', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682170, None, u'CallExpression', u'get_edac_report_status ( )'], [682169, None, u'Identifier', u'EDAC_REPORTING_DISABLED'], [682172, None, u'Callee', u'get_edac_report_status'], [682171, None, u'ArgumentList', u''], [682173, None, u'Identifier', u'get_edac_report_status'], [682167, u'True', u'Condition', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682195, u'True', u'CFGEntryNode', u'ENTRY']]","[[682070, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""TSC %llx "" , mce -> tsc )'], [682082, None, u'Callee', u'pnd2_mc_printk'], [682071, None, u'ArgumentList', u'mci'], [682083, None, u'Identifier', u'pnd2_mc_printk'], [682080, None, u'Argument', u'mci'], [682078, None, u'Argument', u'KERN_INFO'], [682076, None, u'Argument', u'""TSC %llx ""'], [682072, None, u'Argument', u'mce -> tsc'], [682081, None, u'Identifier', u'mci'], [682079, None, u'Identifier', u'KERN_INFO'], [682077, None, u'PrimaryExpression', u'""TSC %llx ""'], [682073, None, u'PtrMemberAccess', u'mce -> tsc'], [682075, None, u'Identifier', u'mce'], [682074, None, u'Identifier', u'tsc'], [682069, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""TSC %llx "" , mce -> tsc )'], [682161, None, u'AssignmentExpr', u'mci = pnd2_mci'], [682163, None, u'Identifier', u'mci'], [682162, None, u'Identifier', u'pnd2_mci'], [682160, u'True', u'ExpressionStatement', u'mci = pnd2_mci'], [682187, None, u'IdentifierDecl', u'* mce = ( struct mce * ) data'], [682194, None, u'IdentifierDeclType', u'struct mce *'], [682193, None, u'Identifier', u'mce'], [682188, None, u'AssignmentExpr', u'* mce = ( struct mce * ) data'], [682192, None, u'Identifier', u'mce'], [682189, None, u'CastExpression', u'( struct mce * ) data'], [682191, None, u'CastTarget', u'struct mce *'], [682190, None, u'Identifier', u'data'], [682186, u'True', u'IdentifierDeclStatement', u'struct mce * mce = ( struct mce * ) data ;'], [681984, None, u'ParameterType', u'void *'], [681983, None, u'Identifier', u'data'], [681982, u'True', u'Parameter', u'void * data']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682054, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""ADDR %llx "" , mce -> addr )']]","[[682055, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""ADDR %llx "" , mce -> addr )'], [682067, None, u'Callee', u'pnd2_mc_printk'], [682056, None, u'ArgumentList', u'mci'], [682068, None, u'Identifier', u'pnd2_mc_printk'], [682065, None, u'Argument', u'mci'], [682063, None, u'Argument', u'KERN_INFO'], [682061, None, u'Argument', u'""ADDR %llx ""'], [682057, None, u'Argument', u'mce -> addr'], [682066, None, u'Identifier', u'mci'], [682064, None, u'Identifier', u'KERN_INFO'], [682062, None, u'PrimaryExpression', u'""ADDR %llx ""'], [682058, None, u'PtrMemberAccess', u'mce -> addr'], [682060, None, u'Identifier', u'mce'], [682059, None, u'Identifier', u'addr'], [682054, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""ADDR %llx "" , mce -> addr )'], [682144, None, u'EqualityExpression', u'( mce -> status & 0xefff ) >> 7 != 1'], [682146, None, u'ShiftExpression', u'( mce -> status & 0xefff ) >> 7'], [682145, None, u'PrimaryExpression', u'1'], [682148, None, u'BitAndExpression', u'mce -> status & 0xefff'], [682147, None, u'PrimaryExpression', u'7'], [682150, None, u'PtrMemberAccess', u'mce -> status'], [682149, None, u'PrimaryExpression', u'0xefff'], [682152, None, u'Identifier', u'mce'], [682151, None, u'Identifier', u'status'], [682143, u'True', u'Condition', u'( mce -> status & 0xefff ) >> 7 != 1'], [682157, None, u'UnaryOp', u'! mci'], [682159, None, u'UnaryOperator', u'!'], [682158, None, u'Identifier', u'mci'], [682156, u'True', u'Condition', u'! mci'], [682168, None, u'EqualityExpression', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682170, None, u'CallExpression', u'get_edac_report_status ( )'], [682169, None, u'Identifier', u'EDAC_REPORTING_DISABLED'], [682172, None, u'Callee', u'get_edac_report_status'], [682171, None, u'ArgumentList', u''], [682173, None, u'Identifier', u'get_edac_report_status'], [682167, u'True', u'Condition', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682195, u'True', u'CFGEntryNode', u'ENTRY']]","[[682055, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""ADDR %llx "" , mce -> addr )'], [682067, None, u'Callee', u'pnd2_mc_printk'], [682056, None, u'ArgumentList', u'mci'], [682068, None, u'Identifier', u'pnd2_mc_printk'], [682065, None, u'Argument', u'mci'], [682063, None, u'Argument', u'KERN_INFO'], [682061, None, u'Argument', u'""ADDR %llx ""'], [682057, None, u'Argument', u'mce -> addr'], [682066, None, u'Identifier', u'mci'], [682064, None, u'Identifier', u'KERN_INFO'], [682062, None, u'PrimaryExpression', u'""ADDR %llx ""'], [682058, None, u'PtrMemberAccess', u'mce -> addr'], [682060, None, u'Identifier', u'mce'], [682059, None, u'Identifier', u'addr'], [682054, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""ADDR %llx "" , mce -> addr )'], [682161, None, u'AssignmentExpr', u'mci = pnd2_mci'], [682163, None, u'Identifier', u'mci'], [682162, None, u'Identifier', u'pnd2_mci'], [682160, u'True', u'ExpressionStatement', u'mci = pnd2_mci'], [682187, None, u'IdentifierDecl', u'* mce = ( struct mce * ) data'], [682194, None, u'IdentifierDeclType', u'struct mce *'], [682193, None, u'Identifier', u'mce'], [682188, None, u'AssignmentExpr', u'* mce = ( struct mce * ) data'], [682192, None, u'Identifier', u'mce'], [682189, None, u'CastExpression', u'( struct mce * ) data'], [682191, None, u'CastTarget', u'struct mce *'], [682190, None, u'Identifier', u'data'], [682186, u'True', u'IdentifierDeclStatement', u'struct mce * mce = ( struct mce * ) data ;'], [681984, None, u'ParameterType', u'void *'], [681983, None, u'Identifier', u'data'], [681982, u'True', u'Parameter', u'void * data']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682039, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""MISC %llx "" , mce -> misc )']]","[[682040, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""MISC %llx "" , mce -> misc )'], [682052, None, u'Callee', u'pnd2_mc_printk'], [682041, None, u'ArgumentList', u'mci'], [682053, None, u'Identifier', u'pnd2_mc_printk'], [682050, None, u'Argument', u'mci'], [682048, None, u'Argument', u'KERN_INFO'], [682046, None, u'Argument', u'""MISC %llx ""'], [682042, None, u'Argument', u'mce -> misc'], [682051, None, u'Identifier', u'mci'], [682049, None, u'Identifier', u'KERN_INFO'], [682047, None, u'PrimaryExpression', u'""MISC %llx ""'], [682043, None, u'PtrMemberAccess', u'mce -> misc'], [682045, None, u'Identifier', u'mce'], [682044, None, u'Identifier', u'misc'], [682039, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""MISC %llx "" , mce -> misc )'], [682144, None, u'EqualityExpression', u'( mce -> status & 0xefff ) >> 7 != 1'], [682146, None, u'ShiftExpression', u'( mce -> status & 0xefff ) >> 7'], [682145, None, u'PrimaryExpression', u'1'], [682148, None, u'BitAndExpression', u'mce -> status & 0xefff'], [682147, None, u'PrimaryExpression', u'7'], [682150, None, u'PtrMemberAccess', u'mce -> status'], [682149, None, u'PrimaryExpression', u'0xefff'], [682152, None, u'Identifier', u'mce'], [682151, None, u'Identifier', u'status'], [682143, u'True', u'Condition', u'( mce -> status & 0xefff ) >> 7 != 1'], [682157, None, u'UnaryOp', u'! mci'], [682159, None, u'UnaryOperator', u'!'], [682158, None, u'Identifier', u'mci'], [682156, u'True', u'Condition', u'! mci'], [682168, None, u'EqualityExpression', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682170, None, u'CallExpression', u'get_edac_report_status ( )'], [682169, None, u'Identifier', u'EDAC_REPORTING_DISABLED'], [682172, None, u'Callee', u'get_edac_report_status'], [682171, None, u'ArgumentList', u''], [682173, None, u'Identifier', u'get_edac_report_status'], [682167, u'True', u'Condition', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682195, u'True', u'CFGEntryNode', u'ENTRY']]","[[682040, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""MISC %llx "" , mce -> misc )'], [682052, None, u'Callee', u'pnd2_mc_printk'], [682041, None, u'ArgumentList', u'mci'], [682053, None, u'Identifier', u'pnd2_mc_printk'], [682050, None, u'Argument', u'mci'], [682048, None, u'Argument', u'KERN_INFO'], [682046, None, u'Argument', u'""MISC %llx ""'], [682042, None, u'Argument', u'mce -> misc'], [682051, None, u'Identifier', u'mci'], [682049, None, u'Identifier', u'KERN_INFO'], [682047, None, u'PrimaryExpression', u'""MISC %llx ""'], [682043, None, u'PtrMemberAccess', u'mce -> misc'], [682045, None, u'Identifier', u'mce'], [682044, None, u'Identifier', u'misc'], [682039, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""MISC %llx "" , mce -> misc )'], [682161, None, u'AssignmentExpr', u'mci = pnd2_mci'], [682163, None, u'Identifier', u'mci'], [682162, None, u'Identifier', u'pnd2_mci'], [682160, u'True', u'ExpressionStatement', u'mci = pnd2_mci'], [682187, None, u'IdentifierDecl', u'* mce = ( struct mce * ) data'], [682194, None, u'IdentifierDeclType', u'struct mce *'], [682193, None, u'Identifier', u'mce'], [682188, None, u'AssignmentExpr', u'* mce = ( struct mce * ) data'], [682192, None, u'Identifier', u'mce'], [682189, None, u'CastExpression', u'( struct mce * ) data'], [682191, None, u'CastTarget', u'struct mce *'], [682190, None, u'Identifier', u'data'], [682186, u'True', u'IdentifierDeclStatement', u'struct mce * mce = ( struct mce * ) data ;'], [681984, None, u'ParameterType', u'void *'], [681983, None, u'Identifier', u'data'], [681982, u'True', u'Parameter', u'void * data']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682008, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""PROCESSOR %u:%x TIME %llu SOCKET %u APIC %x\\n"" , mce -> cpuvendor , mce -> cpuid , mce -> time , mce -> socketid , mce -> apicid )']]","[[682009, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""PROCESSOR %u:%x TIME %llu SOCKET %u APIC %x\\n"" , mce -> cpuvendor , mce -> cpuid , mce -> time , mce -> socketid , mce -> apicid )'], [682037, None, u'Callee', u'pnd2_mc_printk'], [682010, None, u'ArgumentList', u'mci'], [682038, None, u'Identifier', u'pnd2_mc_printk'], [682035, None, u'Argument', u'mci'], [682033, None, u'Argument', u'KERN_INFO'], [682031, None, u'Argument', u'""PROCESSOR %u:%x TIME %llu SOCKET %u APIC %x\\n""'], [682027, None, u'Argument', u'mce -> cpuvendor'], [682023, None, u'Argument', u'mce -> cpuid'], [682019, None, u'Argument', u'mce -> time'], [682015, None, u'Argument', u'mce -> socketid'], [682011, None, u'Argument', u'mce -> apicid'], [682036, None, u'Identifier', u'mci'], [682034, None, u'Identifier', u'KERN_INFO'], [682032, None, u'PrimaryExpression', u'""PROCESSOR %u:%x TIME %llu SOCKET %u APIC %x\\n""'], [682028, None, u'PtrMemberAccess', u'mce -> cpuvendor'], [682024, None, u'PtrMemberAccess', u'mce -> cpuid'], [682020, None, u'PtrMemberAccess', u'mce -> time'], [682016, None, u'PtrMemberAccess', u'mce -> socketid'], [682012, None, u'PtrMemberAccess', u'mce -> apicid'], [682030, None, u'Identifier', u'mce'], [682029, None, u'Identifier', u'cpuvendor'], [682026, None, u'Identifier', u'mce'], [682025, None, u'Identifier', u'cpuid'], [682022, None, u'Identifier', u'mce'], [682021, None, u'Identifier', u'time'], [682018, None, u'Identifier', u'mce'], [682017, None, u'Identifier', u'socketid'], [682014, None, u'Identifier', u'mce'], [682013, None, u'Identifier', u'apicid'], [682008, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""PROCESSOR %u:%x TIME %llu SOCKET %u APIC %x\\n"" , mce -> cpuvendor , mce -> cpuid , mce -> time , mce -> socketid , mce -> apicid )'], [682144, None, u'EqualityExpression', u'( mce -> status & 0xefff ) >> 7 != 1'], [682146, None, u'ShiftExpression', u'( mce -> status & 0xefff ) >> 7'], [682145, None, u'PrimaryExpression', u'1'], [682148, None, u'BitAndExpression', u'mce -> status & 0xefff'], [682147, None, u'PrimaryExpression', u'7'], [682150, None, u'PtrMemberAccess', u'mce -> status'], [682149, None, u'PrimaryExpression', u'0xefff'], [682152, None, u'Identifier', u'mce'], [682151, None, u'Identifier', u'status'], [682143, u'True', u'Condition', u'( mce -> status & 0xefff ) >> 7 != 1'], [682157, None, u'UnaryOp', u'! mci'], [682159, None, u'UnaryOperator', u'!'], [682158, None, u'Identifier', u'mci'], [682156, u'True', u'Condition', u'! mci'], [682168, None, u'EqualityExpression', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682170, None, u'CallExpression', u'get_edac_report_status ( )'], [682169, None, u'Identifier', u'EDAC_REPORTING_DISABLED'], [682172, None, u'Callee', u'get_edac_report_status'], [682171, None, u'ArgumentList', u''], [682173, None, u'Identifier', u'get_edac_report_status'], [682167, u'True', u'Condition', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682195, u'True', u'CFGEntryNode', u'ENTRY']]","[[682009, None, u'CallExpression', u'pnd2_mc_printk ( mci , KERN_INFO , ""PROCESSOR %u:%x TIME %llu SOCKET %u APIC %x\\n"" , mce -> cpuvendor , mce -> cpuid , mce -> time , mce -> socketid , mce -> apicid )'], [682037, None, u'Callee', u'pnd2_mc_printk'], [682010, None, u'ArgumentList', u'mci'], [682038, None, u'Identifier', u'pnd2_mc_printk'], [682035, None, u'Argument', u'mci'], [682033, None, u'Argument', u'KERN_INFO'], [682031, None, u'Argument', u'""PROCESSOR %u:%x TIME %llu SOCKET %u APIC %x\\n""'], [682027, None, u'Argument', u'mce -> cpuvendor'], [682023, None, u'Argument', u'mce -> cpuid'], [682019, None, u'Argument', u'mce -> time'], [682015, None, u'Argument', u'mce -> socketid'], [682011, None, u'Argument', u'mce -> apicid'], [682036, None, u'Identifier', u'mci'], [682034, None, u'Identifier', u'KERN_INFO'], [682032, None, u'PrimaryExpression', u'""PROCESSOR %u:%x TIME %llu SOCKET %u APIC %x\\n""'], [682028, None, u'PtrMemberAccess', u'mce -> cpuvendor'], [682024, None, u'PtrMemberAccess', u'mce -> cpuid'], [682020, None, u'PtrMemberAccess', u'mce -> time'], [682016, None, u'PtrMemberAccess', u'mce -> socketid'], [682012, None, u'PtrMemberAccess', u'mce -> apicid'], [682030, None, u'Identifier', u'mce'], [682029, None, u'Identifier', u'cpuvendor'], [682026, None, u'Identifier', u'mce'], [682025, None, u'Identifier', u'cpuid'], [682022, None, u'Identifier', u'mce'], [682021, None, u'Identifier', u'time'], [682018, None, u'Identifier', u'mce'], [682017, None, u'Identifier', u'socketid'], [682014, None, u'Identifier', u'mce'], [682013, None, u'Identifier', u'apicid'], [682008, u'True', u'ExpressionStatement', u'pnd2_mc_printk ( mci , KERN_INFO , ""PROCESSOR %u:%x TIME %llu SOCKET %u APIC %x\\n"" , mce -> cpuvendor , mce -> cpuid , mce -> time , mce -> socketid , mce -> apicid )'], [682161, None, u'AssignmentExpr', u'mci = pnd2_mci'], [682163, None, u'Identifier', u'mci'], [682162, None, u'Identifier', u'pnd2_mci'], [682160, u'True', u'ExpressionStatement', u'mci = pnd2_mci'], [682187, None, u'IdentifierDecl', u'* mce = ( struct mce * ) data'], [682194, None, u'IdentifierDeclType', u'struct mce *'], [682193, None, u'Identifier', u'mce'], [682188, None, u'AssignmentExpr', u'* mce = ( struct mce * ) data'], [682192, None, u'Identifier', u'mce'], [682189, None, u'CastExpression', u'( struct mce * ) data'], [682191, None, u'CastTarget', u'struct mce *'], [682190, None, u'Identifier', u'data'], [682186, u'True', u'IdentifierDeclStatement', u'struct mce * mce = ( struct mce * ) data ;'], [681984, None, u'ParameterType', u'void *'], [681983, None, u'Identifier', u'data'], [681982, u'True', u'Parameter', u'void * data']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[681995, u'True', u'ExpressionStatement', u'pnd2_mce_output_error ( mci , mce , & daddr )']]","[[681996, None, u'CallExpression', u'pnd2_mce_output_error ( mci , mce , & daddr )'], [682006, None, u'Callee', u'pnd2_mce_output_error'], [681997, None, u'ArgumentList', u'mci'], [682007, None, u'Identifier', u'pnd2_mce_output_error'], [682004, None, u'Argument', u'mci'], [682002, None, u'Argument', u'mce'], [681998, None, u'Argument', u'& daddr'], [682005, None, u'Identifier', u'mci'], [682003, None, u'Identifier', u'mce'], [681999, None, u'UnaryOp', u'& daddr'], [682001, None, u'UnaryOperator', u'&'], [682000, None, u'Identifier', u'daddr'], [681995, u'True', u'ExpressionStatement', u'pnd2_mce_output_error ( mci , mce , & daddr )'], [682144, None, u'EqualityExpression', u'( mce -> status & 0xefff ) >> 7 != 1'], [682146, None, u'ShiftExpression', u'( mce -> status & 0xefff ) >> 7'], [682145, None, u'PrimaryExpression', u'1'], [682148, None, u'BitAndExpression', u'mce -> status & 0xefff'], [682147, None, u'PrimaryExpression', u'7'], [682150, None, u'PtrMemberAccess', u'mce -> status'], [682149, None, u'PrimaryExpression', u'0xefff'], [682152, None, u'Identifier', u'mce'], [682151, None, u'Identifier', u'status'], [682143, u'True', u'Condition', u'( mce -> status & 0xefff ) >> 7 != 1'], [682157, None, u'UnaryOp', u'! mci'], [682159, None, u'UnaryOperator', u'!'], [682158, None, u'Identifier', u'mci'], [682156, u'True', u'Condition', u'! mci'], [682168, None, u'EqualityExpression', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682170, None, u'CallExpression', u'get_edac_report_status ( )'], [682169, None, u'Identifier', u'EDAC_REPORTING_DISABLED'], [682172, None, u'Callee', u'get_edac_report_status'], [682171, None, u'ArgumentList', u''], [682173, None, u'Identifier', u'get_edac_report_status'], [682167, u'True', u'Condition', u'get_edac_report_status ( ) == EDAC_REPORTING_DISABLED'], [682195, u'True', u'CFGEntryNode', u'ENTRY']]","[[681996, None, u'CallExpression', u'pnd2_mce_output_error ( mci , mce , & daddr )'], [682006, None, u'Callee', u'pnd2_mce_output_error'], [681997, None, u'ArgumentList', u'mci'], [682007, None, u'Identifier', u'pnd2_mce_output_error'], [682004, None, u'Argument', u'mci'], [682002, None, u'Argument', u'mce'], [681998, None, u'Argument', u'& daddr'], [682005, None, u'Identifier', u'mci'], [682003, None, u'Identifier', u'mce'], [681999, None, u'UnaryOp', u'& daddr'], [682001, None, u'UnaryOperator', u'&'], [682000, None, u'Identifier', u'daddr'], [681995, u'True', u'ExpressionStatement', u'pnd2_mce_output_error ( mci , mce , & daddr )'], [682161, None, u'AssignmentExpr', u'mci = pnd2_mci'], [682163, None, u'Identifier', u'mci'], [682162, None, u'Identifier', u'pnd2_mci'], [682160, u'True', u'ExpressionStatement', u'mci = pnd2_mci'], [682187, None, u'IdentifierDecl', u'* mce = ( struct mce * ) data'], [682194, None, u'IdentifierDeclType', u'struct mce *'], [682193, None, u'Identifier', u'mce'], [682188, None, u'AssignmentExpr', u'* mce = ( struct mce * ) data'], [682192, None, u'Identifier', u'mce'], [682189, None, u'CastExpression', u'( struct mce * ) data'], [682191, None, u'CastTarget', u'struct mce *'], [682190, None, u'Identifier', u'data'], [682186, u'True', u'IdentifierDeclStatement', u'struct mce * mce = ( struct mce * ) data ;'], [681984, None, u'ParameterType', u'void *'], [681983, None, u'Identifier', u'data'], [681982, u'True', u'Parameter', u'void * data']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682238, u'True', u'Parameter', u'u64 val'], [682241, u'True', u'Parameter', u'void * data']]","[[682240, None, u'ParameterType', u'u64'], [682239, None, u'Identifier', u'val'], [682238, u'True', u'Parameter', u'u64 val'], [682353, u'True', u'CFGEntryNode', u'ENTRY'], [682243, None, u'ParameterType', u'void *'], [682242, None, u'Identifier', u'data'], [682241, u'True', u'Parameter', u'void * data'], [682353, u'True', u'CFGEntryNode', u'ENTRY']]","[[682240, None, u'ParameterType', u'u64'], [682239, None, u'Identifier', u'val'], [682238, u'True', u'Parameter', u'u64 val'], [682243, None, u'ParameterType', u'void *'], [682242, None, u'Identifier', u'data'], [682241, u'True', u'Parameter', u'void * data']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682302, u'True', u'ExpressionStatement', u'pnd2_mce_output_error ( pnd2_mci , & m , & daddr )']]","[[682303, None, u'CallExpression', u'pnd2_mce_output_error ( pnd2_mci , & m , & daddr )'], [682315, None, u'Callee', u'pnd2_mce_output_error'], [682304, None, u'ArgumentList', u'pnd2_mci'], [682316, None, u'Identifier', u'pnd2_mce_output_error'], [682313, None, u'Argument', u'pnd2_mci'], [682309, None, u'Argument', u'& m'], [682305, None, u'Argument', u'& daddr'], [682314, None, u'Identifier', u'pnd2_mci'], [682310, None, u'UnaryOp', u'& m'], [682306, None, u'UnaryOp', u'& daddr'], [682312, None, u'UnaryOperator', u'&'], [682311, None, u'Identifier', u'm'], [682308, None, u'UnaryOperator', u'&'], [682307, None, u'Identifier', u'daddr'], [682302, u'True', u'ExpressionStatement', u'pnd2_mce_output_error ( pnd2_mci , & m , & daddr )'], [682353, u'True', u'CFGEntryNode', u'ENTRY']]","[[682303, None, u'CallExpression', u'pnd2_mce_output_error ( pnd2_mci , & m , & daddr )'], [682315, None, u'Callee', u'pnd2_mce_output_error'], [682304, None, u'ArgumentList', u'pnd2_mci'], [682316, None, u'Identifier', u'pnd2_mce_output_error'], [682313, None, u'Argument', u'pnd2_mci'], [682309, None, u'Argument', u'& m'], [682305, None, u'Argument', u'& daddr'], [682314, None, u'Identifier', u'pnd2_mci'], [682310, None, u'UnaryOp', u'& m'], [682306, None, u'UnaryOp', u'& daddr'], [682312, None, u'UnaryOperator', u'&'], [682311, None, u'Identifier', u'm'], [682308, None, u'UnaryOperator', u'&'], [682307, None, u'Identifier', u'daddr'], [682302, u'True', u'ExpressionStatement', u'pnd2_mce_output_error ( pnd2_mci , & m , & daddr )']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682261, u'True', u'ExpressionStatement', u'snprintf ( pnd2_blob . data , PND2_BLOB_SIZE , ""SysAddr=%llx Channel=%d DIMM=%d Rank=%d Bank=%d Row=%d Column=%d\\n"" , m . addr , daddr . chan , daddr . dimm , daddr . rank , daddr . bank , daddr . row , daddr . col )']]","[[682262, None, u'CallExpression', u'snprintf ( pnd2_blob . data , PND2_BLOB_SIZE , ""SysAddr=%llx Channel=%d DIMM=%d Rank=%d Bank=%d Row=%d Column=%d\\n"" , m . addr , daddr . chan , daddr . dimm , daddr . rank , daddr . bank , daddr . row , daddr . col )'], [682300, None, u'Callee', u'snprintf'], [682263, None, u'ArgumentList', u'pnd2_blob . data'], [682301, None, u'Identifier', u'snprintf'], [682296, None, u'Argument', u'pnd2_blob . data'], [682294, None, u'Argument', u'PND2_BLOB_SIZE'], [682292, None, u'Argument', u'""SysAddr=%llx Channel=%d DIMM=%d Rank=%d Bank=%d Row=%d Column=%d\\n""'], [682288, None, u'Argument', u'm . addr'], [682284, None, u'Argument', u'daddr . chan'], [682280, None, u'Argument', u'daddr . dimm'], [682276, None, u'Argument', u'daddr . rank'], [682272, None, u'Argument', u'daddr . bank'], [682268, None, u'Argument', u'daddr . row'], [682264, None, u'Argument', u'daddr . col'], [682297, None, u'MemberAccess', u'pnd2_blob . data'], [682295, None, u'Identifier', u'PND2_BLOB_SIZE'], [682293, None, u'PrimaryExpression', u'""SysAddr=%llx Channel=%d DIMM=%d Rank=%d Bank=%d Row=%d Column=%d\\n""'], [682289, None, u'MemberAccess', u'm . addr'], [682285, None, u'MemberAccess', u'daddr . chan'], [682281, None, u'MemberAccess', u'daddr . dimm'], [682277, None, u'MemberAccess', u'daddr . rank'], [682273, None, u'MemberAccess', u'daddr . bank'], [682269, None, u'MemberAccess', u'daddr . row'], [682265, None, u'MemberAccess', u'daddr . col'], [682299, None, u'Identifier', u'pnd2_blob'], [682298, None, u'Identifier', u'data'], [682291, None, u'Identifier', u'm'], [682290, None, u'Identifier', u'addr'], [682287, None, u'Identifier', u'daddr'], [682286, None, u'Identifier', u'chan'], [682283, None, u'Identifier', u'daddr'], [682282, None, u'Identifier', u'dimm'], [682279, None, u'Identifier', u'daddr'], [682278, None, u'Identifier', u'rank'], [682275, None, u'Identifier', u'daddr'], [682274, None, u'Identifier', u'bank'], [682271, None, u'Identifier', u'daddr'], [682270, None, u'Identifier', u'row'], [682267, None, u'Identifier', u'daddr'], [682266, None, u'Identifier', u'col'], [682261, u'True', u'ExpressionStatement', u'snprintf ( pnd2_blob . data , PND2_BLOB_SIZE , ""SysAddr=%llx Channel=%d DIMM=%d Rank=%d Bank=%d Row=%d Column=%d\\n"" , m . addr , daddr . chan , daddr . dimm , daddr . rank , daddr . bank , daddr . row , daddr . col )'], [682353, u'True', u'CFGEntryNode', u'ENTRY']]","[[682262, None, u'CallExpression', u'snprintf ( pnd2_blob . data , PND2_BLOB_SIZE , ""SysAddr=%llx Channel=%d DIMM=%d Rank=%d Bank=%d Row=%d Column=%d\\n"" , m . addr , daddr . chan , daddr . dimm , daddr . rank , daddr . bank , daddr . row , daddr . col )'], [682300, None, u'Callee', u'snprintf'], [682263, None, u'ArgumentList', u'pnd2_blob . data'], [682301, None, u'Identifier', u'snprintf'], [682296, None, u'Argument', u'pnd2_blob . data'], [682294, None, u'Argument', u'PND2_BLOB_SIZE'], [682292, None, u'Argument', u'""SysAddr=%llx Channel=%d DIMM=%d Rank=%d Bank=%d Row=%d Column=%d\\n""'], [682288, None, u'Argument', u'm . addr'], [682284, None, u'Argument', u'daddr . chan'], [682280, None, u'Argument', u'daddr . dimm'], [682276, None, u'Argument', u'daddr . rank'], [682272, None, u'Argument', u'daddr . bank'], [682268, None, u'Argument', u'daddr . row'], [682264, None, u'Argument', u'daddr . col'], [682297, None, u'MemberAccess', u'pnd2_blob . data'], [682295, None, u'Identifier', u'PND2_BLOB_SIZE'], [682293, None, u'PrimaryExpression', u'""SysAddr=%llx Channel=%d DIMM=%d Rank=%d Bank=%d Row=%d Column=%d\\n""'], [682289, None, u'MemberAccess', u'm . addr'], [682285, None, u'MemberAccess', u'daddr . chan'], [682281, None, u'MemberAccess', u'daddr . dimm'], [682277, None, u'MemberAccess', u'daddr . rank'], [682273, None, u'MemberAccess', u'daddr . bank'], [682269, None, u'MemberAccess', u'daddr . row'], [682265, None, u'MemberAccess', u'daddr . col'], [682299, None, u'Identifier', u'pnd2_blob'], [682298, None, u'Identifier', u'data'], [682291, None, u'Identifier', u'm'], [682290, None, u'Identifier', u'addr'], [682287, None, u'Identifier', u'daddr'], [682286, None, u'Identifier', u'chan'], [682283, None, u'Identifier', u'daddr'], [682282, None, u'Identifier', u'dimm'], [682279, None, u'Identifier', u'daddr'], [682278, None, u'Identifier', u'rank'], [682275, None, u'Identifier', u'daddr'], [682274, None, u'Identifier', u'bank'], [682271, None, u'Identifier', u'daddr'], [682270, None, u'Identifier', u'row'], [682267, None, u'Identifier', u'daddr'], [682266, None, u'Identifier', u'col'], [682261, u'True', u'ExpressionStatement', u'snprintf ( pnd2_blob . data , PND2_BLOB_SIZE , ""SysAddr=%llx Channel=%d DIMM=%d Rank=%d Bank=%d Row=%d Column=%d\\n"" , m . addr , daddr . chan , daddr . dimm , daddr . rank , daddr . bank , daddr . row , daddr . col )'], [682318, None, u'AssignmentExpr', u'm . addr = val'], [682320, None, u'MemberAccess', u'm . addr'], [682319, None, u'Identifier', u'val'], [682322, None, u'Identifier', u'm'], [682321, None, u'Identifier', u'addr'], [682317, u'True', u'ExpressionStatement', u'm . addr = val'], [682350, None, u'IdentifierDecl', u'daddr'], [682352, None, u'IdentifierDeclType', u'struct dram_addr'], [682351, None, u'Identifier', u'daddr'], [682349, u'True', u'IdentifierDeclStatement', u'struct dram_addr daddr ;'], [682324, None, u'AssignmentExpr', u'm . status = MCI_STATUS_ADDRV + 0x9f'], [682328, None, u'MemberAccess', u'm . status'], [682325, None, u'AdditiveExpression', u'MCI_STATUS_ADDRV + 0x9f'], [682330, None, u'Identifier', u'm'], [682329, None, u'Identifier', u'status'], [682327, None, u'Identifier', u'MCI_STATUS_ADDRV'], [682326, None, u'PrimaryExpression', u'0x9f'], [682323, u'True', u'ExpressionStatement', u'm . status = MCI_STATUS_ADDRV + 0x9f'], [682240, None, u'ParameterType', u'u64'], [682239, None, u'Identifier', u'val'], [682238, u'True', u'Parameter', u'u64 val'], [682332, None, u'AssignmentExpr', u'm . mcgstatus = 0'], [682334, None, u'MemberAccess', u'm . mcgstatus'], [682333, None, u'PrimaryExpression', u'0'], [682336, None, u'Identifier', u'm'], [682335, None, u'Identifier', u'mcgstatus'], [682331, u'True', u'ExpressionStatement', u'm . mcgstatus = 0'], [682346, None, u'IdentifierDecl', u'm'], [682348, None, u'IdentifierDeclType', u'struct mce'], [682347, None, u'Identifier', u'm'], [682345, u'True', u'IdentifierDeclStatement', u'struct mce m ;']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682418, u'True', u'ExpressionStatement', u'pnd2_test = edac_debugfs_create_dir ( ""pnd2_test"" )']]","[[682419, None, u'AssignmentExpr', u'pnd2_test = edac_debugfs_create_dir ( ""pnd2_test"" )'], [682426, None, u'Identifier', u'pnd2_test'], [682420, None, u'CallExpression', u'edac_debugfs_create_dir ( ""pnd2_test"" )'], [682424, None, u'Callee', u'edac_debugfs_create_dir'], [682421, None, u'ArgumentList', u'""pnd2_test""'], [682425, None, u'Identifier', u'edac_debugfs_create_dir'], [682422, None, u'Argument', u'""pnd2_test""'], [682423, None, u'PrimaryExpression', u'""pnd2_test""'], [682418, u'True', u'ExpressionStatement', u'pnd2_test = edac_debugfs_create_dir ( ""pnd2_test"" )'], [682427, u'True', u'CFGEntryNode', u'ENTRY']]","[[682419, None, u'AssignmentExpr', u'pnd2_test = edac_debugfs_create_dir ( ""pnd2_test"" )'], [682426, None, u'Identifier', u'pnd2_test'], [682420, None, u'CallExpression', u'edac_debugfs_create_dir ( ""pnd2_test"" )'], [682424, None, u'Callee', u'edac_debugfs_create_dir'], [682421, None, u'ArgumentList', u'""pnd2_test""'], [682425, None, u'Identifier', u'edac_debugfs_create_dir'], [682422, None, u'Argument', u'""pnd2_test""'], [682423, None, u'PrimaryExpression', u'""pnd2_test""'], [682418, u'True', u'ExpressionStatement', u'pnd2_test = edac_debugfs_create_dir ( ""pnd2_test"" )']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682399, u'True', u'ExpressionStatement', u'edac_debugfs_create_file ( ""pnd2_debug_addr"" , 0200 , pnd2_test , & pnd2_fake_addr , & fops_u64_wo )']]","[[682400, None, u'CallExpression', u'edac_debugfs_create_file ( ""pnd2_debug_addr"" , 0200 , pnd2_test , & pnd2_fake_addr , & fops_u64_wo )'], [682416, None, u'Callee', u'edac_debugfs_create_file'], [682401, None, u'ArgumentList', u'""pnd2_debug_addr""'], [682417, None, u'Identifier', u'edac_debugfs_create_file'], [682414, None, u'Argument', u'""pnd2_debug_addr""'], [682412, None, u'Argument', u'0200'], [682410, None, u'Argument', u'pnd2_test'], [682406, None, u'Argument', u'& pnd2_fake_addr'], [682402, None, u'Argument', u'& fops_u64_wo'], [682415, None, u'PrimaryExpression', u'""pnd2_debug_addr""'], [682413, None, u'PrimaryExpression', u'0200'], [682411, None, u'Identifier', u'pnd2_test'], [682407, None, u'UnaryOp', u'& pnd2_fake_addr'], [682403, None, u'UnaryOp', u'& fops_u64_wo'], [682409, None, u'UnaryOperator', u'&'], [682408, None, u'Identifier', u'pnd2_fake_addr'], [682405, None, u'UnaryOperator', u'&'], [682404, None, u'Identifier', u'fops_u64_wo'], [682399, u'True', u'ExpressionStatement', u'edac_debugfs_create_file ( ""pnd2_debug_addr"" , 0200 , pnd2_test , & pnd2_fake_addr , & fops_u64_wo )'], [682427, u'True', u'CFGEntryNode', u'ENTRY']]","[[682400, None, u'CallExpression', u'edac_debugfs_create_file ( ""pnd2_debug_addr"" , 0200 , pnd2_test , & pnd2_fake_addr , & fops_u64_wo )'], [682416, None, u'Callee', u'edac_debugfs_create_file'], [682401, None, u'ArgumentList', u'""pnd2_debug_addr""'], [682417, None, u'Identifier', u'edac_debugfs_create_file'], [682414, None, u'Argument', u'""pnd2_debug_addr""'], [682412, None, u'Argument', u'0200'], [682410, None, u'Argument', u'pnd2_test'], [682406, None, u'Argument', u'& pnd2_fake_addr'], [682402, None, u'Argument', u'& fops_u64_wo'], [682415, None, u'PrimaryExpression', u'""pnd2_debug_addr""'], [682413, None, u'PrimaryExpression', u'0200'], [682411, None, u'Identifier', u'pnd2_test'], [682407, None, u'UnaryOp', u'& pnd2_fake_addr'], [682403, None, u'UnaryOp', u'& fops_u64_wo'], [682409, None, u'UnaryOperator', u'&'], [682408, None, u'Identifier', u'pnd2_fake_addr'], [682405, None, u'UnaryOperator', u'&'], [682404, None, u'Identifier', u'fops_u64_wo'], [682399, u'True', u'ExpressionStatement', u'edac_debugfs_create_file ( ""pnd2_debug_addr"" , 0200 , pnd2_test , & pnd2_fake_addr , & fops_u64_wo )'], [682419, None, u'AssignmentExpr', u'pnd2_test = edac_debugfs_create_dir ( ""pnd2_test"" )'], [682426, None, u'Identifier', u'pnd2_test'], [682420, None, u'CallExpression', u'edac_debugfs_create_dir ( ""pnd2_test"" )'], [682424, None, u'Callee', u'edac_debugfs_create_dir'], [682421, None, u'ArgumentList', u'""pnd2_test""'], [682425, None, u'Identifier', u'edac_debugfs_create_dir'], [682422, None, u'Argument', u'""pnd2_test""'], [682423, None, u'PrimaryExpression', u'""pnd2_test""'], [682418, u'True', u'ExpressionStatement', u'pnd2_test = edac_debugfs_create_dir ( ""pnd2_test"" )']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682384, u'True', u'ExpressionStatement', u'debugfs_create_blob ( ""pnd2_debug_results"" , 0400 , pnd2_test , & pnd2_blob )']]","[[682385, None, u'CallExpression', u'debugfs_create_blob ( ""pnd2_debug_results"" , 0400 , pnd2_test , & pnd2_blob )'], [682397, None, u'Callee', u'debugfs_create_blob'], [682386, None, u'ArgumentList', u'""pnd2_debug_results""'], [682398, None, u'Identifier', u'debugfs_create_blob'], [682395, None, u'Argument', u'""pnd2_debug_results""'], [682393, None, u'Argument', u'0400'], [682391, None, u'Argument', u'pnd2_test'], [682387, None, u'Argument', u'& pnd2_blob'], [682396, None, u'PrimaryExpression', u'""pnd2_debug_results""'], [682394, None, u'PrimaryExpression', u'0400'], [682392, None, u'Identifier', u'pnd2_test'], [682388, None, u'UnaryOp', u'& pnd2_blob'], [682390, None, u'UnaryOperator', u'&'], [682389, None, u'Identifier', u'pnd2_blob'], [682384, u'True', u'ExpressionStatement', u'debugfs_create_blob ( ""pnd2_debug_results"" , 0400 , pnd2_test , & pnd2_blob )'], [682427, u'True', u'CFGEntryNode', u'ENTRY']]","[[682385, None, u'CallExpression', u'debugfs_create_blob ( ""pnd2_debug_results"" , 0400 , pnd2_test , & pnd2_blob )'], [682397, None, u'Callee', u'debugfs_create_blob'], [682386, None, u'ArgumentList', u'""pnd2_debug_results""'], [682398, None, u'Identifier', u'debugfs_create_blob'], [682395, None, u'Argument', u'""pnd2_debug_results""'], [682393, None, u'Argument', u'0400'], [682391, None, u'Argument', u'pnd2_test'], [682387, None, u'Argument', u'& pnd2_blob'], [682396, None, u'PrimaryExpression', u'""pnd2_debug_results""'], [682394, None, u'PrimaryExpression', u'0400'], [682392, None, u'Identifier', u'pnd2_test'], [682388, None, u'UnaryOp', u'& pnd2_blob'], [682390, None, u'UnaryOperator', u'&'], [682389, None, u'Identifier', u'pnd2_blob'], [682384, u'True', u'ExpressionStatement', u'debugfs_create_blob ( ""pnd2_debug_results"" , 0400 , pnd2_test , & pnd2_blob )'], [682419, None, u'AssignmentExpr', u'pnd2_test = edac_debugfs_create_dir ( ""pnd2_test"" )'], [682426, None, u'Identifier', u'pnd2_test'], [682420, None, u'CallExpression', u'edac_debugfs_create_dir ( ""pnd2_test"" )'], [682424, None, u'Callee', u'edac_debugfs_create_dir'], [682421, None, u'ArgumentList', u'""pnd2_test""'], [682425, None, u'Identifier', u'edac_debugfs_create_dir'], [682422, None, u'Argument', u'""pnd2_test""'], [682423, None, u'PrimaryExpression', u'""pnd2_test""'], [682418, u'True', u'ExpressionStatement', u'pnd2_test = edac_debugfs_create_dir ( ""pnd2_test"" )']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682439, u'True', u'ExpressionStatement', u'debugfs_remove_recursive ( pnd2_test )']]","[[682440, None, u'CallExpression', u'debugfs_remove_recursive ( pnd2_test )'], [682444, None, u'Callee', u'debugfs_remove_recursive'], [682441, None, u'ArgumentList', u'pnd2_test'], [682445, None, u'Identifier', u'debugfs_remove_recursive'], [682442, None, u'Argument', u'pnd2_test'], [682443, None, u'Identifier', u'pnd2_test'], [682439, u'True', u'ExpressionStatement', u'debugfs_remove_recursive ( pnd2_test )'], [682446, u'True', u'CFGEntryNode', u'ENTRY']]","[[682440, None, u'CallExpression', u'debugfs_remove_recursive ( pnd2_test )'], [682444, None, u'Callee', u'debugfs_remove_recursive'], [682441, None, u'ArgumentList', u'pnd2_test'], [682445, None, u'Identifier', u'debugfs_remove_recursive'], [682442, None, u'Argument', u'pnd2_test'], [682443, None, u'Identifier', u'pnd2_test'], [682439, u'True', u'ExpressionStatement', u'debugfs_remove_recursive ( pnd2_test )']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682572, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_ERR , ""Failed to register device with error %d.\\n"" , rc )']]","[[682573, None, u'CallExpression', u'pnd2_printk ( KERN_ERR , ""Failed to register device with error %d.\\n"" , rc )'], [682581, None, u'Callee', u'pnd2_printk'], [682574, None, u'ArgumentList', u'KERN_ERR'], [682582, None, u'Identifier', u'pnd2_printk'], [682579, None, u'Argument', u'KERN_ERR'], [682577, None, u'Argument', u'""Failed to register device with error %d.\\n""'], [682575, None, u'Argument', u'rc'], [682580, None, u'Identifier', u'KERN_ERR'], [682578, None, u'PrimaryExpression', u'""Failed to register device with error %d.\\n""'], [682576, None, u'Identifier', u'rc'], [682572, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_ERR , ""Failed to register device with error %d.\\n"" , rc )'], [682584, None, u'RelationalExpression', u'rc < 0'], [682586, None, u'Identifier', u'rc'], [682585, None, u'PrimaryExpression', u'0'], [682583, u'True', u'Condition', u'rc < 0'], [682613, None, u'UnaryOp', u'! id'], [682615, None, u'UnaryOperator', u'!'], [682614, None, u'Identifier', u'id'], [682612, u'True', u'Condition', u'! id'], [682642, u'True', u'CFGEntryNode', u'ENTRY']]","[[682573, None, u'CallExpression', u'pnd2_printk ( KERN_ERR , ""Failed to register device with error %d.\\n"" , rc )'], [682581, None, u'Callee', u'pnd2_printk'], [682574, None, u'ArgumentList', u'KERN_ERR'], [682582, None, u'Identifier', u'pnd2_printk'], [682579, None, u'Argument', u'KERN_ERR'], [682577, None, u'Argument', u'""Failed to register device with error %d.\\n""'], [682575, None, u'Argument', u'rc'], [682580, None, u'Identifier', u'KERN_ERR'], [682578, None, u'PrimaryExpression', u'""Failed to register device with error %d.\\n""'], [682576, None, u'Identifier', u'rc'], [682572, u'True', u'ExpressionStatement', u'pnd2_printk ( KERN_ERR , ""Failed to register device with error %d.\\n"" , rc )'], [682588, None, u'AssignmentExpr', u'rc = pnd2_probe ( )'], [682593, None, u'Identifier', u'rc'], [682589, None, u'CallExpression', u'pnd2_probe ( )'], [682591, None, u'Callee', u'pnd2_probe'], [682590, None, u'ArgumentList', u''], [682592, None, u'Identifier', u'pnd2_probe'], [682587, u'True', u'ExpressionStatement', u'rc = pnd2_probe ( )']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682545, u'True', u'ExpressionStatement', u'setup_pnd2_debug ( )']]","[[682546, None, u'CallExpression', u'setup_pnd2_debug ( )'], [682548, None, u'Callee', u'setup_pnd2_debug'], [682547, None, u'ArgumentList', u''], [682549, None, u'Identifier', u'setup_pnd2_debug'], [682545, u'True', u'ExpressionStatement', u'setup_pnd2_debug ( )'], [682565, None, u'UnaryOp', u'! pnd2_mci'], [682567, None, u'UnaryOperator', u'!'], [682566, None, u'Identifier', u'pnd2_mci'], [682564, u'True', u'Condition', u'! pnd2_mci'], [682584, None, u'RelationalExpression', u'rc < 0'], [682586, None, u'Identifier', u'rc'], [682585, None, u'PrimaryExpression', u'0'], [682583, u'True', u'Condition', u'rc < 0'], [682613, None, u'UnaryOp', u'! id'], [682615, None, u'UnaryOperator', u'!'], [682614, None, u'Identifier', u'id'], [682612, u'True', u'Condition', u'! id'], [682642, u'True', u'CFGEntryNode', u'ENTRY']]","[[682546, None, u'CallExpression', u'setup_pnd2_debug ( )'], [682548, None, u'Callee', u'setup_pnd2_debug'], [682547, None, u'ArgumentList', u''], [682549, None, u'Identifier', u'setup_pnd2_debug'], [682545, u'True', u'ExpressionStatement', u'setup_pnd2_debug ( )']]"
"Merge tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp

Pull EDAC updates from Borislav Petkov:
 ""A new EDAC driver for the Pondicherry2 memory controller IP found in
  the Intel Apollo Lake platform and the Denverton microserver.

  Plus small fixlets.

  Normally I had this queued for 4.12 but Tony requested for the
  pnd2_edac driver to possibly land in 4.11 therefore I'm sending it to
  you now.

  It is a driver for new hardware which people don't have yet so it
  shouldn't cause any regressions.

  The couple of patches ontop of it show that Qiuxu actually did test it
  on the hardware he has access to :)""

* tag 'edac_for_4.11_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp:
  EDAC, pnd2_edac: Fix reported DIMM number
  EDAC, pnd2_edac: Fix !EDAC_DEBUG build
  EDAC: Select DEBUG_FS
  EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
  EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
  EDAC, xgene: Fix wrongly spelled ""procesing""",drivers/edac/pnd2_edac.c,+,"[[682675, u'True', u'ExpressionStatement', u'teardown_pnd2_debug ( )']]","[[682676, None, u'CallExpression', u'teardown_pnd2_debug ( )'], [682678, None, u'Callee', u'teardown_pnd2_debug'], [682677, None, u'ArgumentList', u''], [682679, None, u'Identifier', u'teardown_pnd2_debug'], [682675, u'True', u'ExpressionStatement', u'teardown_pnd2_debug ( )'], [682689, u'True', u'CFGEntryNode', u'ENTRY']]","[[682676, None, u'CallExpression', u'teardown_pnd2_debug ( )'], [682678, None, u'Callee', u'teardown_pnd2_debug'], [682677, None, u'ArgumentList', u''], [682679, None, u'Identifier', u'teardown_pnd2_debug'], [682675, u'True', u'ExpressionStatement', u'teardown_pnd2_debug ( )']]"
"Merge tag 'pinctrl-v4.11-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl

Pull more pin control fixes from Linus Walleij:
 ""Here is a bunch of pin control fixes again

  A bit more than I'd like for this subsystem at this point, but what
  can I do. They are all driver fixes for hardware issues, as like ""we
  forgot"", ""we didn't think of the fact that this could happen"", ""oops
  that one goes there"" etc

   - Kconfig fixup for the TI IOdelay pinctrl-single add-on

   - fix up a typo in the meson i2c ao groups

   - switch a remapping back to use devm_ioremap() as
     devm_ioremap_resource() does not allow for sharing memory regions

   - do not clear the Qualcomm irq status bit in irq_unmask(), as this
     can lead to missing interrupts while the irq handler is executing

   - add irq_request/release_resources() on the ST driver

   - add a bunch of mysteriously missing pingroups for high numbered
     pins in the Qualcomm ipq4019 driver""

* tag 'pinctrl-v4.11-3' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl:
  pinctrl: qcom: ipq4019: add missing pingroups for pins > 70
  pinctrl: st: add irq_request/release_resources callbacks
  pinctrl: qcom: Don't clear status bit on irq_unmask
  pinctrl: samsung: Fix memory mapping code
  pinctrl: meson-gxbb: Fix typo in i2c ao groups
  pinctrl: ti: The IODelay driver is a DRA7xxx feature so depend on that SoC",drivers/pinctrl/qcom/pinctrl-msm.c,-,"[[690314, u'True', u'ExpressionStatement', u'writel ( val , pctrl -> regs + g -> intr_status_reg )']]","[[690315, None, u'CallExpression', u'writel ( val , pctrl -> regs + g -> intr_status_reg )'], [690327, None, u'Callee', u'writel'], [690316, None, u'ArgumentList', u'val'], [690328, None, u'Identifier', u'writel'], [690325, None, u'Argument', u'val'], [690317, None, u'Argument', u'pctrl -> regs + g -> intr_status_reg'], [690326, None, u'Identifier', u'val'], [690318, None, u'AdditiveExpression', u'pctrl -> regs + g -> intr_status_reg'], [690322, None, u'PtrMemberAccess', u'pctrl -> regs'], [690319, None, u'PtrMemberAccess', u'g -> intr_status_reg'], [690324, None, u'Identifier', u'pctrl'], [690323, None, u'Identifier', u'regs'], [690321, None, u'Identifier', u'g'], [690320, None, u'Identifier', u'intr_status_reg'], [690314, u'True', u'ExpressionStatement', u'writel ( val , pctrl -> regs + g -> intr_status_reg )'], [690418, u'True', u'CFGEntryNode', u'ENTRY']]","[[690315, None, u'CallExpression', u'writel ( val , pctrl -> regs + g -> intr_status_reg )'], [690327, None, u'Callee', u'writel'], [690316, None, u'ArgumentList', u'val'], [690328, None, u'Identifier', u'writel'], [690325, None, u'Argument', u'val'], [690317, None, u'Argument', u'pctrl -> regs + g -> intr_status_reg'], [690326, None, u'Identifier', u'val'], [690318, None, u'AdditiveExpression', u'pctrl -> regs + g -> intr_status_reg'], [690322, None, u'PtrMemberAccess', u'pctrl -> regs'], [690319, None, u'PtrMemberAccess', u'g -> intr_status_reg'], [690324, None, u'Identifier', u'pctrl'], [690323, None, u'Identifier', u'regs'], [690321, None, u'Identifier', u'g'], [690320, None, u'Identifier', u'intr_status_reg'], [690314, u'True', u'ExpressionStatement', u'writel ( val , pctrl -> regs + g -> intr_status_reg )'], [690395, None, u'IdentifierDecl', u'* pctrl = gpiochip_get_data ( gc )'], [690405, None, u'IdentifierDeclType', u'struct msm_pinctrl *'], [690404, None, u'Identifier', u'pctrl'], [690396, None, u'AssignmentExpr', u'* pctrl = gpiochip_get_data ( gc )'], [690403, None, u'Identifier', u'pctrl'], [690397, None, u'CallExpression', u'gpiochip_get_data ( gc )'], [690401, None, u'Callee', u'gpiochip_get_data'], [690398, None, u'ArgumentList', u'gc'], [690402, None, u'Identifier', u'gpiochip_get_data'], [690399, None, u'Argument', u'gc'], [690400, None, u'Identifier', u'gc'], [690394, u'True', u'IdentifierDeclStatement', u'struct msm_pinctrl * pctrl = gpiochip_get_data ( gc ) ;'], [690369, None, u'AssignmentExpr', u'g = & pctrl -> soc -> groups [ d -> hwirq ]'], [690381, None, u'Identifier', u'g'], [690370, None, u'UnaryOp', u'& pctrl -> soc -> groups [ d -> hwirq ]'], [690380, None, u'UnaryOperator', u'&'], [690371, None, u'ArrayIndexing', u'pctrl -> soc -> groups [ d -> hwirq ]'], [690375, None, u'PtrMemberAccess', u'pctrl -> soc -> groups'], [690372, None, u'PtrMemberAccess', u'd -> hwirq'], [690377, None, u'PtrMemberAccess', u'pctrl -> soc'], [690376, None, u'Identifier', u'groups'], [690374, None, u'Identifier', u'd'], [690373, None, u'Identifier', u'hwirq'], [690379, None, u'Identifier', u'pctrl'], [690378, None, u'Identifier', u'soc'], [690368, u'True', u'ExpressionStatement', u'g = & pctrl -> soc -> groups [ d -> hwirq ]'], [690330, None, u'AssignmentExpr', u'val &= ~BIT ( g -> intr_status_bit )'], [690339, None, u'Identifier', u'val'], [690331, None, u'CallExpression', u'~BIT ( g -> intr_status_bit )'], [690337, None, u'Callee', u'~BIT'], [690332, None, u'ArgumentList', u'g -> intr_status_bit'], [690338, None, u'Identifier', u'~BIT'], [690333, None, u'Argument', u'g -> intr_status_bit'], [690334, None, u'PtrMemberAccess', u'g -> intr_status_bit'], [690336, None, u'Identifier', u'g'], [690335, None, u'Identifier', u'intr_status_bit'], [690329, u'True', u'ExpressionStatement', u'val &= ~BIT ( g -> intr_status_bit )'], [690407, None, u'IdentifierDecl', u'* gc = irq_data_get_irq_chip_data ( d )'], [690417, None, u'IdentifierDeclType', u'struct gpio_chip *'], [690416, None, u'Identifier', u'gc'], [690408, None, u'AssignmentExpr', u'* gc = irq_data_get_irq_chip_data ( d )'], [690415, None, u'Identifier', u'gc'], [690409, None, u'CallExpression', u'irq_data_get_irq_chip_data ( d )'], [690413, None, u'Callee', u'irq_data_get_irq_chip_data'], [690410, None, u'ArgumentList', u'd'], [690414, None, u'Identifier', u'irq_data_get_irq_chip_data'], [690411, None, u'Argument', u'd'], [690412, None, u'Identifier', u'd'], [690406, u'True', u'IdentifierDeclStatement', u'struct gpio_chip * gc = irq_data_get_irq_chip_data ( d ) ;'], [690244, None, u'ParameterType', u'struct irq_data *'], [690243, None, u'Identifier', u'd'], [690242, u'True', u'Parameter', u'struct irq_data * d'], [690341, None, u'AssignmentExpr', u'val = readl ( pctrl -> regs + g -> intr_status_reg )'], [690354, None, u'Identifier', u'val'], [690342, None, u'CallExpression', u'readl ( pctrl -> regs + g -> intr_status_reg )'], [690352, None, u'Callee', u'readl'], [690343, None, u'ArgumentList', u'pctrl -> regs + g -> intr_status_reg'], [690353, None, u'Identifier', u'readl'], [690344, None, u'Argument', u'pctrl -> regs + g -> intr_status_reg'], [690345, None, u'AdditiveExpression', u'pctrl -> regs + g -> intr_status_reg'], [690349, None, u'PtrMemberAccess', u'pctrl -> regs'], [690346, None, u'PtrMemberAccess', u'g -> intr_status_reg'], [690351, None, u'Identifier', u'pctrl'], [690350, None, u'Identifier', u'regs'], [690348, None, u'Identifier', u'g'], [690347, None, u'Identifier', u'intr_status_reg'], [690340, u'True', u'ExpressionStatement', u'val = readl ( pctrl -> regs + g -> intr_status_reg )']]"
"cpufreq: Fix creation of symbolic links to policy directories

The cpufreq core only tries to create symbolic links from CPU
directories in sysfs to policy directories in cpufreq_add_dev(),
either when a given CPU is registered or when the cpufreq driver
is registered, whichever happens first.  That is not sufficient,
however, because cpufreq_add_dev() may be called for an offline CPU
whose policy object has not been created yet and, quite obviously,
the symbolic cannot be added in that case.

Fix that by making cpufreq_online() attempt to add symbolic links to
policy objects for the CPUs in the related_cpus mask of every new
policy object created by it.

The cpufreq_driver_lock locking around the for_each_cpu() loop
in cpufreq_online() is dropped, because it is not necessary and the
code is somewhat simpler without it.  Moreover, failures to create
a symbolic link will not be regarded as hard errors any more and
the CPUs without those links will not be taken offline automatically,
but that should not be problematic in practice.

Reported-and-tested-by: Prashanth Prakash <pprakash@codeaurora.org>
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Cc: 4.9+ <stable@vger.kernel.org> # 4.9+",drivers/cpufreq/cpufreq.c,-,"[[707551, u'True', u'ExpressionStatement', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )']]","[[707552, None, u'CallExpression', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [707560, None, u'Callee', u'write_lock_irqsave'], [707553, None, u'ArgumentList', u'& cpufreq_driver_lock'], [707561, None, u'Identifier', u'write_lock_irqsave'], [707556, None, u'Argument', u'& cpufreq_driver_lock'], [707554, None, u'Argument', u'flags'], [707557, None, u'UnaryOp', u'& cpufreq_driver_lock'], [707555, None, u'Identifier', u'flags'], [707559, None, u'UnaryOperator', u'&'], [707558, None, u'Identifier', u'cpufreq_driver_lock'], [707551, u'True', u'ExpressionStatement', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [707583, None, u'Identifier', u'new_policy'], [707582, u'True', u'Condition', u'new_policy'], [707639, None, u'Identifier', u'ret'], [707638, u'True', u'Condition', u'ret'], [707676, None, u'UnaryOp', u'! policy'], [707678, None, u'UnaryOperator', u'!'], [707677, None, u'Identifier', u'policy'], [707675, u'True', u'Condition', u'! policy'], [707742, None, u'UnaryOp', u'! policy_is_inactive ( policy )'], [707749, None, u'UnaryOperator', u'!'], [707743, None, u'CallExpression', u'policy_is_inactive ( policy )'], [707747, None, u'Callee', u'policy_is_inactive'], [707744, None, u'ArgumentList', u'policy'], [707748, None, u'Identifier', u'policy_is_inactive'], [707745, None, u'Argument', u'policy'], [707746, None, u'Identifier', u'policy'], [707741, u'True', u'Condition', u'! policy_is_inactive ( policy )'], [707769, None, u'Identifier', u'policy'], [707768, u'True', u'Condition', u'policy'], [707812, u'True', u'CFGEntryNode', u'ENTRY']]","[[707552, None, u'CallExpression', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [707560, None, u'Callee', u'write_lock_irqsave'], [707553, None, u'ArgumentList', u'& cpufreq_driver_lock'], [707561, None, u'Identifier', u'write_lock_irqsave'], [707556, None, u'Argument', u'& cpufreq_driver_lock'], [707554, None, u'Argument', u'flags'], [707557, None, u'UnaryOp', u'& cpufreq_driver_lock'], [707555, None, u'Identifier', u'flags'], [707559, None, u'UnaryOperator', u'&'], [707558, None, u'Identifier', u'cpufreq_driver_lock'], [707551, u'True', u'ExpressionStatement', u'write_lock_irqsave ( & cpufreq_driver_lock , flags )'], [707801, None, u'IdentifierDecl', u'flags'], [707803, None, u'IdentifierDeclType', u'unsigned long'], [707802, None, u'Identifier', u'flags'], [707800, u'True', u'IdentifierDeclStatement', u'unsigned long flags ;']]"
"cpufreq: Fix creation of symbolic links to policy directories

The cpufreq core only tries to create symbolic links from CPU
directories in sysfs to policy directories in cpufreq_add_dev(),
either when a given CPU is registered or when the cpufreq driver
is registered, whichever happens first.  That is not sufficient,
however, because cpufreq_add_dev() may be called for an offline CPU
whose policy object has not been created yet and, quite obviously,
the symbolic cannot be added in that case.

Fix that by making cpufreq_online() attempt to add symbolic links to
policy objects for the CPUs in the related_cpus mask of every new
policy object created by it.

The cpufreq_driver_lock locking around the for_each_cpu() loop
in cpufreq_online() is dropped, because it is not necessary and the
code is somewhat simpler without it.  Moreover, failures to create
a symbolic link will not be regarded as hard errors any more and
the CPUs without those links will not be taken offline automatically,
but that should not be problematic in practice.

Reported-and-tested-by: Prashanth Prakash <pprakash@codeaurora.org>
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Cc: 4.9+ <stable@vger.kernel.org> # 4.9+",drivers/cpufreq/cpufreq.c,-,"[[707521, u'True', u'ExpressionStatement', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )']]","[[707522, None, u'CallExpression', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [707530, None, u'Callee', u'write_unlock_irqrestore'], [707523, None, u'ArgumentList', u'& cpufreq_driver_lock'], [707531, None, u'Identifier', u'write_unlock_irqrestore'], [707526, None, u'Argument', u'& cpufreq_driver_lock'], [707524, None, u'Argument', u'flags'], [707527, None, u'UnaryOp', u'& cpufreq_driver_lock'], [707525, None, u'Identifier', u'flags'], [707529, None, u'UnaryOperator', u'&'], [707528, None, u'Identifier', u'cpufreq_driver_lock'], [707521, u'True', u'ExpressionStatement', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [707583, None, u'Identifier', u'new_policy'], [707582, u'True', u'Condition', u'new_policy'], [707639, None, u'Identifier', u'ret'], [707638, u'True', u'Condition', u'ret'], [707676, None, u'UnaryOp', u'! policy'], [707678, None, u'UnaryOperator', u'!'], [707677, None, u'Identifier', u'policy'], [707675, u'True', u'Condition', u'! policy'], [707742, None, u'UnaryOp', u'! policy_is_inactive ( policy )'], [707749, None, u'UnaryOperator', u'!'], [707743, None, u'CallExpression', u'policy_is_inactive ( policy )'], [707747, None, u'Callee', u'policy_is_inactive'], [707744, None, u'ArgumentList', u'policy'], [707748, None, u'Identifier', u'policy_is_inactive'], [707745, None, u'Argument', u'policy'], [707746, None, u'Identifier', u'policy'], [707741, u'True', u'Condition', u'! policy_is_inactive ( policy )'], [707769, None, u'Identifier', u'policy'], [707768, u'True', u'Condition', u'policy'], [707812, u'True', u'CFGEntryNode', u'ENTRY']]","[[707522, None, u'CallExpression', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [707530, None, u'Callee', u'write_unlock_irqrestore'], [707523, None, u'ArgumentList', u'& cpufreq_driver_lock'], [707531, None, u'Identifier', u'write_unlock_irqrestore'], [707526, None, u'Argument', u'& cpufreq_driver_lock'], [707524, None, u'Argument', u'flags'], [707527, None, u'UnaryOp', u'& cpufreq_driver_lock'], [707525, None, u'Identifier', u'flags'], [707529, None, u'UnaryOperator', u'&'], [707528, None, u'Identifier', u'cpufreq_driver_lock'], [707521, u'True', u'ExpressionStatement', u'write_unlock_irqrestore ( & cpufreq_driver_lock , flags )'], [707801, None, u'IdentifierDecl', u'flags'], [707803, None, u'IdentifierDeclType', u'unsigned long'], [707802, None, u'Identifier', u'flags'], [707800, u'True', u'IdentifierDeclStatement', u'unsigned long flags ;']]"
"Merge tag 'gvt-fixes-2017-03-23' of https://github.com/01org/gvt-linux into drm-intel-fixes

gvt-fixes-2017-03-23

- KVM reference fix from Alex
- shadow gtt entry partial update fix from Xiaoguang
- gvt context notification check (Changbin)
- other misc fixes.

Signed-off-by: Jani Nikula <jani.nikula@intel.com>",drivers/gpu/drm/i915/gvt/handlers.c,+,"[[717451, u'True', u'Parameter', u'unsigned int offset'], [717454, u'True', u'Parameter', u'struct intel_vgpu * vgpu']]","[[717453, None, u'ParameterType', u'unsigned int'], [717452, None, u'Identifier', u'offset'], [717451, u'True', u'Parameter', u'unsigned int offset'], [717482, u'True', u'CFGEntryNode', u'ENTRY'], [717456, None, u'ParameterType', u'struct intel_vgpu *'], [717455, None, u'Identifier', u'vgpu'], [717454, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [717482, u'True', u'CFGEntryNode', u'ENTRY']]","[[717453, None, u'ParameterType', u'unsigned int'], [717452, None, u'Identifier', u'offset'], [717451, u'True', u'Parameter', u'unsigned int offset'], [717456, None, u'ParameterType', u'struct intel_vgpu *'], [717455, None, u'Identifier', u'vgpu'], [717454, u'True', u'Parameter', u'struct intel_vgpu * vgpu']]"
"Merge tag 'gvt-fixes-2017-03-23' of https://github.com/01org/gvt-linux into drm-intel-fixes

gvt-fixes-2017-03-23

- KVM reference fix from Alex
- shadow gtt entry partial update fix from Xiaoguang
- gvt context notification check (Changbin)
- other misc fixes.

Signed-off-by: Jani Nikula <jani.nikula@intel.com>",drivers/gpu/drm/i915/gvt/handlers.c,+,"[[717461, u'True', u'ExpressionStatement', u'write_vreg ( vgpu , offset , p_data , bytes )']]","[[717462, None, u'CallExpression', u'write_vreg ( vgpu , offset , p_data , bytes )'], [717472, None, u'Callee', u'write_vreg'], [717463, None, u'ArgumentList', u'vgpu'], [717473, None, u'Identifier', u'write_vreg'], [717470, None, u'Argument', u'vgpu'], [717468, None, u'Argument', u'offset'], [717466, None, u'Argument', u'p_data'], [717464, None, u'Argument', u'bytes'], [717471, None, u'Identifier', u'vgpu'], [717469, None, u'Identifier', u'offset'], [717467, None, u'Identifier', u'p_data'], [717465, None, u'Identifier', u'bytes'], [717461, u'True', u'ExpressionStatement', u'write_vreg ( vgpu , offset , p_data , bytes )'], [717482, u'True', u'CFGEntryNode', u'ENTRY']]","[[717462, None, u'CallExpression', u'write_vreg ( vgpu , offset , p_data , bytes )'], [717472, None, u'Callee', u'write_vreg'], [717463, None, u'ArgumentList', u'vgpu'], [717473, None, u'Identifier', u'write_vreg'], [717470, None, u'Argument', u'vgpu'], [717468, None, u'Argument', u'offset'], [717466, None, u'Argument', u'p_data'], [717464, None, u'Argument', u'bytes'], [717471, None, u'Identifier', u'vgpu'], [717469, None, u'Identifier', u'offset'], [717467, None, u'Identifier', u'p_data'], [717465, None, u'Identifier', u'bytes'], [717461, u'True', u'ExpressionStatement', u'write_vreg ( vgpu , offset , p_data , bytes )'], [717450, None, u'ParameterType', u'void *'], [717449, None, u'Identifier', u'p_data'], [717448, u'True', u'Parameter', u'void * p_data'], [717453, None, u'ParameterType', u'unsigned int'], [717452, None, u'Identifier', u'offset'], [717451, u'True', u'Parameter', u'unsigned int offset'], [717456, None, u'ParameterType', u'struct intel_vgpu *'], [717455, None, u'Identifier', u'vgpu'], [717454, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [717447, None, u'ParameterType', u'unsigned int'], [717446, None, u'Identifier', u'bytes'], [717445, u'True', u'Parameter', u'unsigned int bytes']]"
"Merge tag 'gvt-fixes-2017-03-23' of https://github.com/01org/gvt-linux into drm-intel-fixes

gvt-fixes-2017-03-23

- KVM reference fix from Alex
- shadow gtt entry partial update fix from Xiaoguang
- gvt context notification check (Changbin)
- other misc fixes.

Signed-off-by: Jani Nikula <jani.nikula@intel.com>",drivers/gpu/drm/i915/gvt/render.c,-,"[[759906, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )']]","[[759907, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [759920, None, u'Callee', u'I915_WRITE'], [759908, None, u'ArgumentList', u'l3_offset'], [759921, None, u'Identifier', u'I915_WRITE'], [759918, None, u'Argument', u'l3_offset'], [759909, None, u'Argument', u'vgpu_vreg ( vgpu , offset )'], [759919, None, u'Identifier', u'l3_offset'], [759910, None, u'CallExpression', u'vgpu_vreg ( vgpu , offset )'], [759916, None, u'Callee', u'vgpu_vreg'], [759911, None, u'ArgumentList', u'vgpu'], [759917, None, u'Identifier', u'vgpu_vreg'], [759914, None, u'Argument', u'vgpu'], [759912, None, u'Argument', u'offset'], [759915, None, u'Identifier', u'vgpu'], [759913, None, u'Identifier', u'offset'], [759906, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [759937, None, u'RelationalExpression', u'i < 32'], [759939, None, u'Identifier', u'i'], [759938, None, u'PrimaryExpression', u'32'], [759936, u'True', u'Condition', u'i < 32'], [759951, None, u'EqualityExpression', u'ring_id == RCS'], [759953, None, u'Identifier', u'ring_id'], [759952, None, u'Identifier', u'RCS'], [759950, u'True', u'Condition', u'ring_id == RCS'], [760020, None, u'UnaryOp', u'! IS_SKYLAKE ( dev_priv )'], [760027, None, u'UnaryOperator', u'!'], [760021, None, u'CallExpression', u'IS_SKYLAKE ( dev_priv )'], [760025, None, u'Callee', u'IS_SKYLAKE'], [760022, None, u'ArgumentList', u'dev_priv'], [760026, None, u'Identifier', u'IS_SKYLAKE'], [760023, None, u'Argument', u'dev_priv'], [760024, None, u'Identifier', u'dev_priv'], [760019, u'True', u'Condition', u'! IS_SKYLAKE ( dev_priv )'], [760031, None, u'CallExpression', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [760042, None, u'Callee', u'WARN_ON'], [760032, None, u'ArgumentList', u'ring_id >= ARRAY_SIZE ( regs )'], [760043, None, u'Identifier', u'WARN_ON'], [760033, None, u'Argument', u'ring_id >= ARRAY_SIZE ( regs )'], [760034, None, u'RelationalExpression', u'ring_id >= ARRAY_SIZE ( regs )'], [760041, None, u'Identifier', u'ring_id'], [760035, None, u'CallExpression', u'ARRAY_SIZE ( regs )'], [760039, None, u'Callee', u'ARRAY_SIZE'], [760036, None, u'ArgumentList', u'regs'], [760040, None, u'Identifier', u'ARRAY_SIZE'], [760037, None, u'Argument', u'regs'], [760038, None, u'Identifier', u'regs'], [760030, u'True', u'Condition', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [760103, u'True', u'CFGEntryNode', u'ENTRY']]","[[759907, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [759920, None, u'Callee', u'I915_WRITE'], [759908, None, u'ArgumentList', u'l3_offset'], [759921, None, u'Identifier', u'I915_WRITE'], [759918, None, u'Argument', u'l3_offset'], [759909, None, u'Argument', u'vgpu_vreg ( vgpu , offset )'], [759919, None, u'Identifier', u'l3_offset'], [759910, None, u'CallExpression', u'vgpu_vreg ( vgpu , offset )'], [759916, None, u'Callee', u'vgpu_vreg'], [759911, None, u'ArgumentList', u'vgpu'], [759917, None, u'Identifier', u'vgpu_vreg'], [759914, None, u'Argument', u'vgpu'], [759912, None, u'Argument', u'offset'], [759915, None, u'Identifier', u'vgpu'], [759913, None, u'Identifier', u'offset'], [759906, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , offset ) )'], [760010, None, u'AssignmentExpr', u'offset . reg = regs [ ring_id ]'], [760014, None, u'MemberAccess', u'offset . reg'], [760011, None, u'ArrayIndexing', u'regs [ ring_id ]'], [760016, None, u'Identifier', u'offset'], [760015, None, u'Identifier', u'reg'], [760013, None, u'Identifier', u'regs'], [760012, None, u'Identifier', u'ring_id'], [760009, u'True', u'ExpressionStatement', u'offset . reg = regs [ ring_id ]'], [759957, None, u'AssignmentExpr', u'offset . reg += 4'], [759959, None, u'MemberAccess', u'offset . reg'], [759958, None, u'PrimaryExpression', u'4'], [759961, None, u'Identifier', u'offset'], [759960, None, u'Identifier', u'reg'], [759956, u'True', u'ExpressionStatement', u'offset . reg += 4'], [759886, None, u'ParameterType', u'struct intel_vgpu *'], [759885, None, u'Identifier', u'vgpu'], [759884, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [759945, None, u'AssignmentExpr', u'l3_offset . reg = 0xb020'], [759947, None, u'MemberAccess', u'l3_offset . reg'], [759946, None, u'PrimaryExpression', u'0xb020'], [759949, None, u'Identifier', u'l3_offset'], [759948, None, u'Identifier', u'reg'], [759944, u'True', u'ExpressionStatement', u'l3_offset . reg = 0xb020'], [759894, None, u'AssignmentExpr', u'l3_offset . reg += 4'], [759896, None, u'MemberAccess', u'l3_offset . reg'], [759895, None, u'PrimaryExpression', u'4'], [759898, None, u'Identifier', u'l3_offset'], [759897, None, u'Identifier', u'reg'], [759893, u'True', u'ExpressionStatement', u'l3_offset . reg += 4'], [760089, None, u'IdentifierDecl', u'offset'], [760086, None, u'IdentifierDecl', u'l3_offset'], [760091, None, u'IdentifierDeclType', u'i915_reg_t'], [760090, None, u'Identifier', u'offset'], [760088, None, u'IdentifierDeclType', u'i915_reg_t'], [760087, None, u'Identifier', u'l3_offset'], [760085, u'True', u'IdentifierDeclStatement', u'i915_reg_t offset , l3_offset ;'], [759883, None, u'ParameterType', u'int'], [759882, None, u'Identifier', u'ring_id'], [759881, u'True', u'Parameter', u'int ring_id']]"
"Merge tag 'gvt-fixes-2017-03-23' of https://github.com/01org/gvt-linux into drm-intel-fixes

gvt-fixes-2017-03-23

- KVM reference fix from Alex
- shadow gtt entry partial update fix from Xiaoguang
- gvt context notification check (Changbin)
- other misc fixes.

Signed-off-by: Jani Nikula <jani.nikula@intel.com>",drivers/gpu/drm/i915/gvt/render.c,+,"[[758578, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )']]","[[758579, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [758592, None, u'Callee', u'I915_WRITE'], [758580, None, u'ArgumentList', u'l3_offset'], [758593, None, u'Identifier', u'I915_WRITE'], [758590, None, u'Argument', u'l3_offset'], [758581, None, u'Argument', u'vgpu_vreg ( vgpu , l3_offset )'], [758591, None, u'Identifier', u'l3_offset'], [758582, None, u'CallExpression', u'vgpu_vreg ( vgpu , l3_offset )'], [758588, None, u'Callee', u'vgpu_vreg'], [758583, None, u'ArgumentList', u'vgpu'], [758589, None, u'Identifier', u'vgpu_vreg'], [758586, None, u'Argument', u'vgpu'], [758584, None, u'Argument', u'l3_offset'], [758587, None, u'Identifier', u'vgpu'], [758585, None, u'Identifier', u'l3_offset'], [758578, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [758609, None, u'RelationalExpression', u'i < 32'], [758611, None, u'Identifier', u'i'], [758610, None, u'PrimaryExpression', u'32'], [758608, u'True', u'Condition', u'i < 32'], [758623, None, u'EqualityExpression', u'ring_id == RCS'], [758625, None, u'Identifier', u'ring_id'], [758624, None, u'Identifier', u'RCS'], [758622, u'True', u'Condition', u'ring_id == RCS'], [758692, None, u'UnaryOp', u'! IS_SKYLAKE ( dev_priv )'], [758699, None, u'UnaryOperator', u'!'], [758693, None, u'CallExpression', u'IS_SKYLAKE ( dev_priv )'], [758697, None, u'Callee', u'IS_SKYLAKE'], [758694, None, u'ArgumentList', u'dev_priv'], [758698, None, u'Identifier', u'IS_SKYLAKE'], [758695, None, u'Argument', u'dev_priv'], [758696, None, u'Identifier', u'dev_priv'], [758691, u'True', u'Condition', u'! IS_SKYLAKE ( dev_priv )'], [758703, None, u'CallExpression', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [758714, None, u'Callee', u'WARN_ON'], [758704, None, u'ArgumentList', u'ring_id >= ARRAY_SIZE ( regs )'], [758715, None, u'Identifier', u'WARN_ON'], [758705, None, u'Argument', u'ring_id >= ARRAY_SIZE ( regs )'], [758706, None, u'RelationalExpression', u'ring_id >= ARRAY_SIZE ( regs )'], [758713, None, u'Identifier', u'ring_id'], [758707, None, u'CallExpression', u'ARRAY_SIZE ( regs )'], [758711, None, u'Callee', u'ARRAY_SIZE'], [758708, None, u'ArgumentList', u'regs'], [758712, None, u'Identifier', u'ARRAY_SIZE'], [758709, None, u'Argument', u'regs'], [758710, None, u'Identifier', u'regs'], [758702, u'True', u'Condition', u'WARN_ON ( ring_id >= ARRAY_SIZE ( regs ) )'], [758775, u'True', u'CFGEntryNode', u'ENTRY']]","[[758579, None, u'CallExpression', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [758592, None, u'Callee', u'I915_WRITE'], [758580, None, u'ArgumentList', u'l3_offset'], [758593, None, u'Identifier', u'I915_WRITE'], [758590, None, u'Argument', u'l3_offset'], [758581, None, u'Argument', u'vgpu_vreg ( vgpu , l3_offset )'], [758591, None, u'Identifier', u'l3_offset'], [758582, None, u'CallExpression', u'vgpu_vreg ( vgpu , l3_offset )'], [758588, None, u'Callee', u'vgpu_vreg'], [758583, None, u'ArgumentList', u'vgpu'], [758589, None, u'Identifier', u'vgpu_vreg'], [758586, None, u'Argument', u'vgpu'], [758584, None, u'Argument', u'l3_offset'], [758587, None, u'Identifier', u'vgpu'], [758585, None, u'Identifier', u'l3_offset'], [758578, u'True', u'ExpressionStatement', u'I915_WRITE ( l3_offset , vgpu_vreg ( vgpu , l3_offset ) )'], [758558, None, u'ParameterType', u'struct intel_vgpu *'], [758557, None, u'Identifier', u'vgpu'], [758556, u'True', u'Parameter', u'struct intel_vgpu * vgpu'], [758566, None, u'AssignmentExpr', u'l3_offset . reg += 4'], [758568, None, u'MemberAccess', u'l3_offset . reg'], [758567, None, u'PrimaryExpression', u'4'], [758570, None, u'Identifier', u'l3_offset'], [758569, None, u'Identifier', u'reg'], [758565, u'True', u'ExpressionStatement', u'l3_offset . reg += 4'], [758617, None, u'AssignmentExpr', u'l3_offset . reg = 0xb020'], [758619, None, u'MemberAccess', u'l3_offset . reg'], [758618, None, u'PrimaryExpression', u'0xb020'], [758621, None, u'Identifier', u'l3_offset'], [758620, None, u'Identifier', u'reg'], [758616, u'True', u'ExpressionStatement', u'l3_offset . reg = 0xb020'], [758761, None, u'IdentifierDecl', u'offset'], [758758, None, u'IdentifierDecl', u'l3_offset'], [758763, None, u'IdentifierDeclType', u'i915_reg_t'], [758762, None, u'Identifier', u'offset'], [758760, None, u'IdentifierDeclType', u'i915_reg_t'], [758759, None, u'Identifier', u'l3_offset'], [758757, u'True', u'IdentifierDeclStatement', u'i915_reg_t offset , l3_offset ;']]"
"Merge tag 'powerpc-4.11-6' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux

Pull more powerpc fixes from Michael Ellerman:
 ""These are all pretty minor. The fix for idle wakeup would be a bad bug
  but has not been observed in practice.

  The update to the gcc-plugins docs was Cc'ed to Kees and Jon, Kees
  OK'ed it going via powerpc and I didn't hear from Jon.

   - cxl: Route eeh events to all slices for pci_channel_io_perm_failure state

   - powerpc/64s: Fix idle wakeup potential to clobber registers

   - Revert ""powerpc/64: Disable use of radix under a hypervisor""

   - gcc-plugins: update architecture list in documentation

  Thanks to: Andrew Donnellan, Nicholas Piggin, Paul Mackerras, Vaibhav
  Jain""

* tag 'powerpc-4.11-6' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:
  gcc-plugins: update architecture list in documentation
  Revert ""powerpc/64: Disable use of radix under a hypervisor""
  powerpc/64s: Fix idle wakeup potential to clobber registers
  cxl: Route eeh events to all slices for pci_channel_io_perm_failure state",drivers/misc/cxl/pci.c,-,"[[780658, u'True', u'ExpressionStatement', u'cxl_vphb_error_detected ( afu , state )']]","[[780659, None, u'CallExpression', u'cxl_vphb_error_detected ( afu , state )'], [780665, None, u'Callee', u'cxl_vphb_error_detected'], [780660, None, u'ArgumentList', u'afu'], [780666, None, u'Identifier', u'cxl_vphb_error_detected'], [780663, None, u'Argument', u'afu'], [780661, None, u'Argument', u'state'], [780664, None, u'Identifier', u'afu'], [780662, None, u'Identifier', u'state'], [780658, u'True', u'ExpressionStatement', u'cxl_vphb_error_detected ( afu , state )'], [780671, None, u'EqualityExpression', u'afu -> phb == NULL'], [780673, None, u'PtrMemberAccess', u'afu -> phb'], [780672, None, u'Identifier', u'NULL'], [780675, None, u'Identifier', u'afu'], [780674, None, u'Identifier', u'phb'], [780670, u'True', u'Condition', u'afu -> phb == NULL'], [780688, None, u'RelationalExpression', u'i < adapter -> slices'], [780692, None, u'Identifier', u'i'], [780689, None, u'PtrMemberAccess', u'adapter -> slices'], [780691, None, u'Identifier', u'adapter'], [780690, None, u'Identifier', u'slices'], [780687, u'True', u'Condition', u'i < adapter -> slices'], [780698, None, u'EqualityExpression', u'state == pci_channel_io_perm_failure'], [780700, None, u'Identifier', u'state'], [780699, None, u'Identifier', u'pci_channel_io_perm_failure'], [780697, u'True', u'Condition', u'state == pci_channel_io_perm_failure'], [780733, u'True', u'CFGEntryNode', u'ENTRY']]","[[780659, None, u'CallExpression', u'cxl_vphb_error_detected ( afu , state )'], [780665, None, u'Callee', u'cxl_vphb_error_detected'], [780660, None, u'ArgumentList', u'afu'], [780666, None, u'Identifier', u'cxl_vphb_error_detected'], [780663, None, u'Argument', u'afu'], [780661, None, u'Argument', u'state'], [780664, None, u'Identifier', u'afu'], [780662, None, u'Identifier', u'state'], [780658, u'True', u'ExpressionStatement', u'cxl_vphb_error_detected ( afu , state )'], [780677, None, u'AssignmentExpr', u'afu = adapter -> afu [ i ]'], [780683, None, u'Identifier', u'afu'], [780678, None, u'ArrayIndexing', u'adapter -> afu [ i ]'], [780680, None, u'PtrMemberAccess', u'adapter -> afu'], [780679, None, u'Identifier', u'i'], [780682, None, u'Identifier', u'adapter'], [780681, None, u'Identifier', u'afu'], [780676, u'True', u'ExpressionStatement', u'afu = adapter -> afu [ i ]'], [780542, None, u'ParameterType', u'pci_channel_state_t'], [780541, None, u'Identifier', u'state'], [780540, u'True', u'Parameter', u'pci_channel_state_t state'], [780694, None, u'AssignmentExpr', u'i = 0'], [780696, None, u'Identifier', u'i'], [780695, None, u'PrimaryExpression', u'0'], [780693, u'True', u'ForInit', u'i = 0 ;'], [780686, None, u'Identifier', u'i'], [780685, None, u'IncDec', u'++'], [780684, u'True', u'IncDecOp', u'i ++'], [780722, None, u'IdentifierDecl', u'* adapter = pci_get_drvdata ( pdev )'], [780732, None, u'IdentifierDeclType', u'struct cxl *'], [780731, None, u'Identifier', u'adapter'], [780723, None, u'AssignmentExpr', u'* adapter = pci_get_drvdata ( pdev )'], [780730, None, u'Identifier', u'adapter'], [780724, None, u'CallExpression', u'pci_get_drvdata ( pdev )'], [780728, None, u'Callee', u'pci_get_drvdata'], [780725, None, u'ArgumentList', u'pdev'], [780729, None, u'Identifier', u'pci_get_drvdata'], [780726, None, u'Argument', u'pdev'], [780727, None, u'Identifier', u'pdev'], [780721, u'True', u'IdentifierDeclStatement', u'struct cxl * adapter = pci_get_drvdata ( pdev ) ;'], [780545, None, u'ParameterType', u'struct pci_dev *'], [780544, None, u'Identifier', u'pdev'], [780543, u'True', u'Parameter', u'struct pci_dev * pdev']]"
"Merge tag 'powerpc-4.11-6' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux

Pull more powerpc fixes from Michael Ellerman:
 ""These are all pretty minor. The fix for idle wakeup would be a bad bug
  but has not been observed in practice.

  The update to the gcc-plugins docs was Cc'ed to Kees and Jon, Kees
  OK'ed it going via powerpc and I didn't hear from Jon.

   - cxl: Route eeh events to all slices for pci_channel_io_perm_failure state

   - powerpc/64s: Fix idle wakeup potential to clobber registers

   - Revert ""powerpc/64: Disable use of radix under a hypervisor""

   - gcc-plugins: update architecture list in documentation

  Thanks to: Andrew Donnellan, Nicholas Piggin, Paul Mackerras, Vaibhav
  Jain""

* tag 'powerpc-4.11-6' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:
  gcc-plugins: update architecture list in documentation
  Revert ""powerpc/64: Disable use of radix under a hypervisor""
  powerpc/64s: Fix idle wakeup potential to clobber registers
  cxl: Route eeh events to all slices for pci_channel_io_perm_failure state",drivers/misc/cxl/pci.c,+,"[[770839, u'True', u'ExpressionStatement', u'cxl_vphb_error_detected ( afu , state )']]","[[770840, None, u'CallExpression', u'cxl_vphb_error_detected ( afu , state )'], [770846, None, u'Callee', u'cxl_vphb_error_detected'], [770841, None, u'ArgumentList', u'afu'], [770847, None, u'Identifier', u'cxl_vphb_error_detected'], [770844, None, u'Argument', u'afu'], [770842, None, u'Argument', u'state'], [770845, None, u'Identifier', u'afu'], [770843, None, u'Identifier', u'state'], [770839, u'True', u'ExpressionStatement', u'cxl_vphb_error_detected ( afu , state )'], [770849, None, u'EqualityExpression', u'afu -> phb != NULL'], [770851, None, u'PtrMemberAccess', u'afu -> phb'], [770850, None, u'Identifier', u'NULL'], [770853, None, u'Identifier', u'afu'], [770852, None, u'Identifier', u'phb'], [770848, u'True', u'Condition', u'afu -> phb != NULL'], [770866, None, u'RelationalExpression', u'i < adapter -> slices'], [770870, None, u'Identifier', u'i'], [770867, None, u'PtrMemberAccess', u'adapter -> slices'], [770869, None, u'Identifier', u'adapter'], [770868, None, u'Identifier', u'slices'], [770865, u'True', u'Condition', u'i < adapter -> slices'], [770876, None, u'EqualityExpression', u'state == pci_channel_io_perm_failure'], [770878, None, u'Identifier', u'state'], [770877, None, u'Identifier', u'pci_channel_io_perm_failure'], [770875, u'True', u'Condition', u'state == pci_channel_io_perm_failure'], [770911, u'True', u'CFGEntryNode', u'ENTRY']]","[[770840, None, u'CallExpression', u'cxl_vphb_error_detected ( afu , state )'], [770846, None, u'Callee', u'cxl_vphb_error_detected'], [770841, None, u'ArgumentList', u'afu'], [770847, None, u'Identifier', u'cxl_vphb_error_detected'], [770844, None, u'Argument', u'afu'], [770842, None, u'Argument', u'state'], [770845, None, u'Identifier', u'afu'], [770843, None, u'Identifier', u'state'], [770839, u'True', u'ExpressionStatement', u'cxl_vphb_error_detected ( afu , state )'], [770855, None, u'AssignmentExpr', u'afu = adapter -> afu [ i ]'], [770861, None, u'Identifier', u'afu'], [770856, None, u'ArrayIndexing', u'adapter -> afu [ i ]'], [770858, None, u'PtrMemberAccess', u'adapter -> afu'], [770857, None, u'Identifier', u'i'], [770860, None, u'Identifier', u'adapter'], [770859, None, u'Identifier', u'afu'], [770854, u'True', u'ExpressionStatement', u'afu = adapter -> afu [ i ]'], [770722, None, u'ParameterType', u'pci_channel_state_t'], [770721, None, u'Identifier', u'state'], [770720, u'True', u'Parameter', u'pci_channel_state_t state'], [770872, None, u'AssignmentExpr', u'i = 0'], [770874, None, u'Identifier', u'i'], [770873, None, u'PrimaryExpression', u'0'], [770871, u'True', u'ForInit', u'i = 0 ;'], [770864, None, u'Identifier', u'i'], [770863, None, u'IncDec', u'++'], [770862, u'True', u'IncDecOp', u'i ++'], [770900, None, u'IdentifierDecl', u'* adapter = pci_get_drvdata ( pdev )'], [770910, None, u'IdentifierDeclType', u'struct cxl *'], [770909, None, u'Identifier', u'adapter'], [770901, None, u'AssignmentExpr', u'* adapter = pci_get_drvdata ( pdev )'], [770908, None, u'Identifier', u'adapter'], [770902, None, u'CallExpression', u'pci_get_drvdata ( pdev )'], [770906, None, u'Callee', u'pci_get_drvdata'], [770903, None, u'ArgumentList', u'pdev'], [770907, None, u'Identifier', u'pci_get_drvdata'], [770904, None, u'Argument', u'pdev'], [770905, None, u'Identifier', u'pdev'], [770899, u'True', u'IdentifierDeclStatement', u'struct cxl * adapter = pci_get_drvdata ( pdev ) ;'], [770725, None, u'ParameterType', u'struct pci_dev *'], [770724, None, u'Identifier', u'pdev'], [770723, u'True', u'Parameter', u'struct pci_dev * pdev']]"
"irda: vlsi_ir: fix check for DMA mapping errors

vlsi_alloc_ring() checks for DMA mapping errors by comparing
returned address with zero, while pci_dma_mapping_error() should be used.

Found by Linux Driver Verification project (linuxtesting.org).

Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
Signed-off-by: David S. Miller <davem@davemloft.net>",drivers/net/irda/vlsi_ir.c,+,"[[783612, u'True', u'Condition', u'rd -> buf == NULL || pci_dma_mapping_error ( pdev , busaddr )']]","[[783613, None, u'OrExpression', u'rd -> buf == NULL || pci_dma_mapping_error ( pdev , busaddr )'], [783622, None, u'EqualityExpression', u'rd -> buf == NULL'], [783614, None, u'CallExpression', u'pci_dma_mapping_error ( pdev , busaddr )'], [783624, None, u'PtrMemberAccess', u'rd -> buf'], [783623, None, u'Identifier', u'NULL'], [783620, None, u'Callee', u'pci_dma_mapping_error'], [783615, None, u'ArgumentList', u'pdev'], [783626, None, u'Identifier', u'rd'], [783625, None, u'Identifier', u'buf'], [783621, None, u'Identifier', u'pci_dma_mapping_error'], [783618, None, u'Argument', u'pdev'], [783616, None, u'Argument', u'busaddr'], [783619, None, u'Identifier', u'pdev'], [783617, None, u'Identifier', u'busaddr'], [783612, u'True', u'Condition', u'rd -> buf == NULL || pci_dma_mapping_error ( pdev , busaddr )'], [783699, None, u'RelationalExpression', u'i < size'], [783701, None, u'Identifier', u'i'], [783700, None, u'Identifier', u'size'], [783698, u'True', u'Condition', u'i < size'], [783793, None, u'UnaryOp', u'! r'], [783795, None, u'UnaryOperator', u'!'], [783794, None, u'Identifier', u'r'], [783792, u'True', u'Condition', u'! r'], [783821, None, u'OrExpression', u'! size || ( ( size - 1 ) & size ) != 0'], [783829, None, u'UnaryOp', u'! size'], [783822, None, u'EqualityExpression', u'( ( size - 1 ) & size ) != 0'], [783831, None, u'UnaryOperator', u'!'], [783830, None, u'Identifier', u'size'], [783824, None, u'BitAndExpression', u'( size - 1 ) & size'], [783823, None, u'PrimaryExpression', u'0'], [783826, None, u'AdditiveExpression', u'size - 1'], [783825, None, u'Identifier', u'size'], [783828, None, u'Identifier', u'size'], [783827, None, u'PrimaryExpression', u'1'], [783820, u'True', u'Condition', u'! size || ( ( size - 1 ) & size ) != 0'], [783851, u'True', u'CFGEntryNode', u'ENTRY']]","[[783613, None, u'OrExpression', u'rd -> buf == NULL || pci_dma_mapping_error ( pdev , busaddr )'], [783622, None, u'EqualityExpression', u'rd -> buf == NULL'], [783614, None, u'CallExpression', u'pci_dma_mapping_error ( pdev , busaddr )'], [783624, None, u'PtrMemberAccess', u'rd -> buf'], [783623, None, u'Identifier', u'NULL'], [783620, None, u'Callee', u'pci_dma_mapping_error'], [783615, None, u'ArgumentList', u'pdev'], [783626, None, u'Identifier', u'rd'], [783625, None, u'Identifier', u'buf'], [783621, None, u'Identifier', u'pci_dma_mapping_error'], [783618, None, u'Argument', u'pdev'], [783616, None, u'Argument', u'busaddr'], [783619, None, u'Identifier', u'pdev'], [783617, None, u'Identifier', u'busaddr'], [783612, u'True', u'Condition', u'rd -> buf == NULL || pci_dma_mapping_error ( pdev , busaddr )'], [783650, None, u'AssignmentExpr', u'rd -> buf = kmalloc ( len , GFP_KERNEL | GFP_DMA )'], [783661, None, u'PtrMemberAccess', u'rd -> buf'], [783651, None, u'CallExpression', u'kmalloc ( len , GFP_KERNEL | GFP_DMA )'], [783663, None, u'Identifier', u'rd'], [783662, None, u'Identifier', u'buf'], [783659, None, u'Callee', u'kmalloc'], [783652, None, u'ArgumentList', u'len'], [783660, None, u'Identifier', u'kmalloc'], [783657, None, u'Argument', u'len'], [783653, None, u'Argument', u'GFP_KERNEL | GFP_DMA'], [783658, None, u'Identifier', u'len'], [783654, None, u'InclusiveOrExpression', u'GFP_KERNEL | GFP_DMA'], [783656, None, u'Identifier', u'GFP_KERNEL'], [783655, None, u'Identifier', u'GFP_DMA'], [783649, u'True', u'ExpressionStatement', u'rd -> buf = kmalloc ( len , GFP_KERNEL | GFP_DMA )'], [783474, None, u'ParameterType', u'struct pci_dev *'], [783473, None, u'Identifier', u'pdev'], [783472, u'True', u'Parameter', u'struct pci_dev * pdev'], [783688, None, u'AssignmentExpr', u'rd = r -> rd + i'], [783694, None, u'Identifier', u'rd'], [783689, None, u'AdditiveExpression', u'r -> rd + i'], [783691, None, u'PtrMemberAccess', u'r -> rd'], [783690, None, u'Identifier', u'i'], [783693, None, u'Identifier', u'r'], [783692, None, u'Identifier', u'rd'], [783687, u'True', u'ExpressionStatement', u'rd = r -> rd + i'], [783833, None, u'IdentifierDecl', u'busaddr'], [783835, None, u'IdentifierDeclType', u'dma_addr_t'], [783834, None, u'Identifier', u'busaddr'], [783832, u'True', u'IdentifierDeclStatement', u'dma_addr_t busaddr ;'], [783629, None, u'AssignmentExpr', u'busaddr = pci_map_single ( pdev , rd -> buf , len , dir )'], [783644, None, u'Identifier', u'busaddr'], [783630, None, u'CallExpression', u'pci_map_single ( pdev , rd -> buf , len , dir )'], [783642, None, u'Callee', u'pci_map_single'], [783631, None, u'ArgumentList', u'pdev'], [783643, None, u'Identifier', u'pci_map_single'], [783640, None, u'Argument', u'pdev'], [783636, None, u'Argument', u'rd -> buf'], [783634, None, u'Argument', u'len'], [783632, None, u'Argument', u'dir'], [783641, None, u'Identifier', u'pdev'], [783637, None, u'PtrMemberAccess', u'rd -> buf'], [783635, None, u'Identifier', u'len'], [783633, None, u'Identifier', u'dir'], [783639, None, u'Identifier', u'rd'], [783638, None, u'Identifier', u'buf'], [783628, u'True', u'ExpressionStatement', u'busaddr = pci_map_single ( pdev , rd -> buf , len , dir )'], [783465, None, u'ParameterType', u'unsigned'], [783464, None, u'Identifier', u'len'], [783463, u'True', u'Parameter', u'unsigned len'], [783747, None, u'AssignmentExpr', u'r -> rd = ( struct ring_descr * ) ( r + 1 )'], [783753, None, u'PtrMemberAccess', u'r -> rd'], [783748, None, u'CastExpression', u'( struct ring_descr * ) ( r + 1 )'], [783755, None, u'Identifier', u'r'], [783754, None, u'Identifier', u'rd'], [783752, None, u'CastTarget', u'struct ring_descr *'], [783749, None, u'AdditiveExpression', u'r + 1'], [783751, None, u'Identifier', u'r'], [783750, None, u'PrimaryExpression', u'1'], [783746, u'True', u'ExpressionStatement', u'r -> rd = ( struct ring_descr * ) ( r + 1 )'], [783797, None, u'AssignmentExpr', u'r = kmalloc ( sizeof ( * r ) + size * sizeof ( struct ring_descr ) , GFP_KERNEL )'], [783816, None, u'Identifier', u'r'], [783798, None, u'CallExpression', u'kmalloc ( sizeof ( * r ) + size * sizeof ( struct ring_descr ) , GFP_KERNEL )'], [783814, None, u'Callee', u'kmalloc'], [783799, None, u'ArgumentList', u'sizeof ( * r ) + size * sizeof ( struct ring_descr )'], [783815, None, u'Identifier', u'kmalloc'], [783802, None, u'Argument', u'sizeof ( * r ) + size * sizeof ( struct ring_descr )'], [783800, None, u'Argument', u'GFP_KERNEL'], [783803, None, u'AdditiveExpression', u'sizeof ( * r ) + size * sizeof ( struct ring_descr )'], [783801, None, u'Identifier', u'GFP_KERNEL'], [783809, None, u'SizeofExpr', u'sizeof ( * r )'], [783804, None, u'MultiplicativeExpression', u'size * sizeof ( struct ring_descr )'], [783813, None, u'Sizeof', u'sizeof'], [783810, None, u'UnaryOp', u'* r'], [783808, None, u'Identifier', u'size'], [783805, None, u'SizeofExpr', u'sizeof ( struct ring_descr )'], [783812, None, u'UnaryOperator', u'*'], [783811, None, u'Identifier', u'r'], [783807, None, u'Sizeof', u'sizeof'], [783806, None, u'SizeofOperand', u'struct ring_descr'], [783796, u'True', u'ExpressionStatement', u'r = kmalloc ( sizeof ( * r ) + size * sizeof ( struct ring_descr ) , GFP_KERNEL )'], [783697, None, u'Identifier', u'i'], [783696, None, u'IncDec', u'++'], [783695, u'True', u'IncDecOp', u'i ++'], [783703, None, u'AssignmentExpr', u'i = 0'], [783705, None, u'Identifier', u'i'], [783704, None, u'PrimaryExpression', u'0'], [783702, u'True', u'ForInit', u'i = 0 ;'], [783733, None, u'AssignmentExpr', u'r -> size = size'], [783735, None, u'PtrMemberAccess', u'r -> size'], [783734, None, u'Identifier', u'size'], [783737, None, u'Identifier', u'r'], [783736, None, u'Identifier', u'size'], [783732, u'True', u'ExpressionStatement', u'r -> size = size'], [783462, None, u'ParameterType', u'int'], [783461, None, u'Identifier', u'dir'], [783460, u'True', u'Parameter', u'int dir'], [783848, None, u'IdentifierDecl', u'* r'], [783850, None, u'IdentifierDeclType', u'struct vlsi_ring *'], [783849, None, u'Identifier', u'r'], [783847, u'True', u'IdentifierDeclStatement', u'struct vlsi_ring * r ;'], [783468, None, u'ParameterType', u'unsigned'], [783467, None, u'Identifier', u'size'], [783466, u'True', u'Parameter', u'unsigned size']]"
"Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma

Pull rdma fixes from Doug Ledford:
 ""This has been a slow -rc cycle for the RDMA subsystem. We really
  haven't had a lot of rc fixes come in. This pull request is the first
  of this entire rc cycle and it has all of the suitable fixes so far
  and it's still only about 20 patches. The fix for the minor breakage
  cause by the dma mapping patchset is in here, as well as a couple
  other potential oops fixes, but the rest is more minor.

  Summary:

   - fix for dma_ops change in this kernel, resolving the s390, powerpc,
     and IOMMU operation

   - a few other oops fixes

   - the rest are all minor fixes""

* tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma:
  IB/qib: fix false-postive maybe-uninitialized warning
  RDMA/iser: Fix possible mr leak on device removal event
  IB/device: Convert ib-comp-wq to be CPU-bound
  IB/cq: Don't process more than the given budget
  IB/rxe: increment msn only when completing a request
  uapi: fix rdma/mlx5-abi.h userspace compilation errors
  IB/core: Restore I/O MMU, s390 and powerpc support
  IB/rxe: Update documentation link
  RDMA/ocrdma: fix a type issue in ocrdma_put_pd_num()
  IB/rxe: double free on error
  RDMA/vmw_pvrdma: Activate device on ethernet link up
  RDMA/vmw_pvrdma: Dont hardcode QP header page
  RDMA/vmw_pvrdma: Cleanup unused variables
  infiniband: Fix alignment of mmap cookies to support VIPT caching
  IB/core: Protect against self-requeue of a cq work item
  i40iw: Receive netdev events post INET_NOTIFIER state",drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c,+,"[[804503, u'True', u'ExpressionStatement', u'pvrdma_write_reg ( dev , PVRDMA_REG_CTL , PVRDMA_DEVICE_CTL_UNQUIESCE )']]","[[804504, None, u'CallExpression', u'pvrdma_write_reg ( dev , PVRDMA_REG_CTL , PVRDMA_DEVICE_CTL_UNQUIESCE )'], [804512, None, u'Callee', u'pvrdma_write_reg'], [804505, None, u'ArgumentList', u'dev'], [804513, None, u'Identifier', u'pvrdma_write_reg'], [804510, None, u'Argument', u'dev'], [804508, None, u'Argument', u'PVRDMA_REG_CTL'], [804506, None, u'Argument', u'PVRDMA_DEVICE_CTL_UNQUIESCE'], [804511, None, u'Identifier', u'dev'], [804509, None, u'Identifier', u'PVRDMA_REG_CTL'], [804507, None, u'Identifier', u'PVRDMA_DEVICE_CTL_UNQUIESCE'], [804503, u'True', u'ExpressionStatement', u'pvrdma_write_reg ( dev , PVRDMA_REG_CTL , PVRDMA_DEVICE_CTL_UNQUIESCE )'], [804533, None, u'Identifier', u'event'], [804532, u'True', u'Condition', u'event'], [804534, u'True', u'CFGEntryNode', u'ENTRY']]","[[804504, None, u'CallExpression', u'pvrdma_write_reg ( dev , PVRDMA_REG_CTL , PVRDMA_DEVICE_CTL_UNQUIESCE )'], [804512, None, u'Callee', u'pvrdma_write_reg'], [804505, None, u'ArgumentList', u'dev'], [804513, None, u'Identifier', u'pvrdma_write_reg'], [804510, None, u'Argument', u'dev'], [804508, None, u'Argument', u'PVRDMA_REG_CTL'], [804506, None, u'Argument', u'PVRDMA_DEVICE_CTL_UNQUIESCE'], [804511, None, u'Identifier', u'dev'], [804509, None, u'Identifier', u'PVRDMA_REG_CTL'], [804507, None, u'Identifier', u'PVRDMA_DEVICE_CTL_UNQUIESCE'], [804503, u'True', u'ExpressionStatement', u'pvrdma_write_reg ( dev , PVRDMA_REG_CTL , PVRDMA_DEVICE_CTL_UNQUIESCE )'], [804429, None, u'ParameterType', u'struct pvrdma_dev *'], [804428, None, u'Identifier', u'dev'], [804427, u'True', u'Parameter', u'struct pvrdma_dev * dev']]"
"Merge branch 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit

Pull audit fix from Paul Moore:
 ""We've got an audit fix, and unfortunately it is big.

  While I'm not excited that we need to be sending you something this
  large during the -rcX phase, it does fix some very real, and very
  tangled, problems relating to locking, backlog queues, and the audit
  daemon connection.

  This code has passed our testsuite without problem and it has held up
  to my ad-hoc stress tests (arguably better than the existing code),
  please consider pulling this as fix for the next v4.11-rcX tag""

* 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit:
  audit: fix auditd/kernel connection state tracking",kernel/audit.c,-,"[[826598, u'True', u'Condition', u'printk_ratelimit ( )']]","[[826599, None, u'CallExpression', u'printk_ratelimit ( )'], [826601, None, u'Callee', u'printk_ratelimit'], [826600, None, u'ArgumentList', u''], [826602, None, u'Identifier', u'printk_ratelimit'], [826598, u'True', u'Condition', u'printk_ratelimit ( )'], [826604, None, u'EqualityExpression', u'nlh -> nlmsg_type != AUDIT_EOE'], [826606, None, u'PtrMemberAccess', u'nlh -> nlmsg_type'], [826605, None, u'Identifier', u'AUDIT_EOE'], [826608, None, u'Identifier', u'nlh'], [826607, None, u'Identifier', u'nlmsg_type'], [826603, u'True', u'Condition', u'nlh -> nlmsg_type != AUDIT_EOE'], [826633, u'True', u'CFGEntryNode', u'ENTRY']]","[[826599, None, u'CallExpression', u'printk_ratelimit ( )'], [826601, None, u'Callee', u'printk_ratelimit'], [826600, None, u'ArgumentList', u''], [826602, None, u'Identifier', u'printk_ratelimit'], [826598, u'True', u'Condition', u'printk_ratelimit ( )']]"
"Merge branch 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit

Pull audit fix from Paul Moore:
 ""We've got an audit fix, and unfortunately it is big.

  While I'm not excited that we need to be sending you something this
  large during the -rcX phase, it does fix some very real, and very
  tangled, problems relating to locking, backlog queues, and the audit
  daemon connection.

  This code has passed our testsuite without problem and it has held up
  to my ad-hoc stress tests (arguably better than the existing code),
  please consider pulling this as fix for the next v4.11-rcX tag""

* 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit:
  audit: fix auditd/kernel connection state tracking",kernel/audit.c,-,"[[826578, u'True', u'ExpressionStatement', u'audit_log_lost ( ""printk limit exceeded"" )']]","[[826579, None, u'CallExpression', u'audit_log_lost ( ""printk limit exceeded"" )'], [826583, None, u'Callee', u'audit_log_lost'], [826580, None, u'ArgumentList', u'""printk limit exceeded""'], [826584, None, u'Identifier', u'audit_log_lost'], [826581, None, u'Argument', u'""printk limit exceeded""'], [826582, None, u'PrimaryExpression', u'""printk limit exceeded""'], [826578, u'True', u'ExpressionStatement', u'audit_log_lost ( ""printk limit exceeded"" )'], [826599, None, u'CallExpression', u'printk_ratelimit ( )'], [826601, None, u'Callee', u'printk_ratelimit'], [826600, None, u'ArgumentList', u''], [826602, None, u'Identifier', u'printk_ratelimit'], [826598, u'True', u'Condition', u'printk_ratelimit ( )'], [826604, None, u'EqualityExpression', u'nlh -> nlmsg_type != AUDIT_EOE'], [826606, None, u'PtrMemberAccess', u'nlh -> nlmsg_type'], [826605, None, u'Identifier', u'AUDIT_EOE'], [826608, None, u'Identifier', u'nlh'], [826607, None, u'Identifier', u'nlmsg_type'], [826603, u'True', u'Condition', u'nlh -> nlmsg_type != AUDIT_EOE'], [826633, u'True', u'CFGEntryNode', u'ENTRY']]","[[826579, None, u'CallExpression', u'audit_log_lost ( ""printk limit exceeded"" )'], [826583, None, u'Callee', u'audit_log_lost'], [826580, None, u'ArgumentList', u'""printk limit exceeded""'], [826584, None, u'Identifier', u'audit_log_lost'], [826581, None, u'Argument', u'""printk limit exceeded""'], [826582, None, u'PrimaryExpression', u'""printk limit exceeded""'], [826578, u'True', u'ExpressionStatement', u'audit_log_lost ( ""printk limit exceeded"" )']]"
"Merge branch 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit

Pull audit fix from Paul Moore:
 ""We've got an audit fix, and unfortunately it is big.

  While I'm not excited that we need to be sending you something this
  large during the -rcX phase, it does fix some very real, and very
  tangled, problems relating to locking, backlog queues, and the audit
  daemon connection.

  This code has passed our testsuite without problem and it has held up
  to my ad-hoc stress tests (arguably better than the existing code),
  please consider pulling this as fix for the next v4.11-rcX tag""

* 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit:
  audit: fix auditd/kernel connection state tracking",kernel/audit.c,+,"[[817354, u'True', u'Condition', u'nlh -> nlmsg_type != AUDIT_EOE && printk_ratelimit ( )']]","[[817355, None, u'AndExpression', u'nlh -> nlmsg_type != AUDIT_EOE && printk_ratelimit ( )'], [817360, None, u'EqualityExpression', u'nlh -> nlmsg_type != AUDIT_EOE'], [817356, None, u'CallExpression', u'printk_ratelimit ( )'], [817362, None, u'PtrMemberAccess', u'nlh -> nlmsg_type'], [817361, None, u'Identifier', u'AUDIT_EOE'], [817358, None, u'Callee', u'printk_ratelimit'], [817357, None, u'ArgumentList', u''], [817364, None, u'Identifier', u'nlh'], [817363, None, u'Identifier', u'nlmsg_type'], [817359, None, u'Identifier', u'printk_ratelimit'], [817354, u'True', u'Condition', u'nlh -> nlmsg_type != AUDIT_EOE && printk_ratelimit ( )'], [817389, u'True', u'CFGEntryNode', u'ENTRY']]","[[817355, None, u'AndExpression', u'nlh -> nlmsg_type != AUDIT_EOE && printk_ratelimit ( )'], [817360, None, u'EqualityExpression', u'nlh -> nlmsg_type != AUDIT_EOE'], [817356, None, u'CallExpression', u'printk_ratelimit ( )'], [817362, None, u'PtrMemberAccess', u'nlh -> nlmsg_type'], [817361, None, u'Identifier', u'AUDIT_EOE'], [817358, None, u'Callee', u'printk_ratelimit'], [817357, None, u'ArgumentList', u''], [817364, None, u'Identifier', u'nlh'], [817363, None, u'Identifier', u'nlmsg_type'], [817359, None, u'Identifier', u'printk_ratelimit'], [817354, u'True', u'Condition', u'nlh -> nlmsg_type != AUDIT_EOE && printk_ratelimit ( )'], [817378, None, u'IdentifierDecl', u'* nlh = nlmsg_hdr ( skb )'], [817388, None, u'IdentifierDeclType', u'struct nlmsghdr *'], [817387, None, u'Identifier', u'nlh'], [817379, None, u'AssignmentExpr', u'* nlh = nlmsg_hdr ( skb )'], [817386, None, u'Identifier', u'nlh'], [817380, None, u'CallExpression', u'nlmsg_hdr ( skb )'], [817384, None, u'Callee', u'nlmsg_hdr'], [817381, None, u'ArgumentList', u'skb'], [817385, None, u'Identifier', u'nlmsg_hdr'], [817382, None, u'Argument', u'skb'], [817383, None, u'Identifier', u'skb'], [817377, u'True', u'IdentifierDeclStatement', u'struct nlmsghdr * nlh = nlmsg_hdr ( skb ) ;'], [817337, None, u'ParameterType', u'struct sk_buff *'], [817336, None, u'Identifier', u'skb'], [817335, u'True', u'Parameter', u'struct sk_buff * skb']]"
"Merge branch 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit

Pull audit fix from Paul Moore:
 ""We've got an audit fix, and unfortunately it is big.

  While I'm not excited that we need to be sending you something this
  large during the -rcX phase, it does fix some very real, and very
  tangled, problems relating to locking, backlog queues, and the audit
  daemon connection.

  This code has passed our testsuite without problem and it has held up
  to my ad-hoc stress tests (arguably better than the existing code),
  please consider pulling this as fix for the next v4.11-rcX tag""

* 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit:
  audit: fix auditd/kernel connection state tracking",kernel/audit.c,-,"[[830356, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 0 )']]","[[830357, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 0 )'], [830367, None, u'Callee', u'audit_log_config_change'], [830358, None, u'ArgumentList', u'""audit_pid""'], [830368, None, u'Identifier', u'audit_log_config_change'], [830365, None, u'Argument', u'""audit_pid""'], [830363, None, u'Argument', u'new_pid'], [830361, None, u'Argument', u'audit_pid'], [830359, None, u'Argument', u'0'], [830366, None, u'PrimaryExpression', u'""audit_pid""'], [830364, None, u'Identifier', u'new_pid'], [830362, None, u'Identifier', u'audit_pid'], [830360, None, u'PrimaryExpression', u'0'], [830356, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 0 )'], [830370, None, u'AndExpression', u'( ! new_pid ) && ( requesting_pid != audit_pid )'], [830374, None, u'UnaryOp', u'! new_pid'], [830371, None, u'EqualityExpression', u'requesting_pid != audit_pid'], [830376, None, u'UnaryOperator', u'!'], [830375, None, u'Identifier', u'new_pid'], [830373, None, u'Identifier', u'requesting_pid'], [830372, None, u'Identifier', u'audit_pid'], [830369, u'True', u'Condition', u'( ! new_pid ) && ( requesting_pid != audit_pid )'], [830399, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_PID'], [830401, None, u'MemberAccess', u's . mask'], [830400, None, u'Identifier', u'AUDIT_STATUS_PID'], [830403, None, u'Identifier', u's'], [830402, None, u'Identifier', u'mask'], [830398, u'True', u'Condition', u's . mask & AUDIT_STATUS_PID'], [830425, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_FAILURE'], [830427, None, u'MemberAccess', u's . mask'], [830426, None, u'Identifier', u'AUDIT_STATUS_FAILURE'], [830429, None, u'Identifier', u's'], [830428, None, u'Identifier', u'mask'], [830424, u'True', u'Condition', u's . mask & AUDIT_STATUS_FAILURE'], [830410, None, u'RelationalExpression', u'err < 0'], [830412, None, u'Identifier', u'err'], [830411, None, u'PrimaryExpression', u'0'], [830409, u'True', u'Condition', u'err < 0'], [830451, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_ENABLED'], [830453, None, u'MemberAccess', u's . mask'], [830452, None, u'Identifier', u'AUDIT_STATUS_ENABLED'], [830455, None, u'Identifier', u's'], [830454, None, u'Identifier', u'mask'], [830450, u'True', u'Condition', u's . mask & AUDIT_STATUS_ENABLED'], [830436, None, u'RelationalExpression', u'err < 0'], [830438, None, u'Identifier', u'err'], [830437, None, u'PrimaryExpression', u'0'], [830435, u'True', u'Condition', u'err < 0'], [830621, None, u'Identifier', u'msg_type'], [830620, u'True', u'Condition', u'msg_type']]","[[830357, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 0 )'], [830367, None, u'Callee', u'audit_log_config_change'], [830358, None, u'ArgumentList', u'""audit_pid""'], [830368, None, u'Identifier', u'audit_log_config_change'], [830365, None, u'Argument', u'""audit_pid""'], [830363, None, u'Argument', u'new_pid'], [830361, None, u'Argument', u'audit_pid'], [830359, None, u'Argument', u'0'], [830366, None, u'PrimaryExpression', u'""audit_pid""'], [830364, None, u'Identifier', u'new_pid'], [830362, None, u'Identifier', u'audit_pid'], [830360, None, u'PrimaryExpression', u'0'], [830356, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 0 )'], [830390, None, u'IdentifierDecl', u'new_pid = s . pid'], [830397, None, u'IdentifierDeclType', u'int'], [830396, None, u'Identifier', u'new_pid'], [830391, None, u'AssignmentExpr', u'new_pid = s . pid'], [830395, None, u'Identifier', u'new_pid'], [830392, None, u'MemberAccess', u's . pid'], [830394, None, u'Identifier', u's'], [830393, None, u'Identifier', u'pid'], [830389, u'True', u'IdentifierDeclStatement', u'int new_pid = s . pid ;'], [830501, None, u'IdentifierDecl', u's'], [830503, None, u'IdentifierDeclType', u'struct audit_status'], [830502, None, u'Identifier', u's'], [830500, u'True', u'IdentifierDeclStatement', u'struct audit_status s ;']]"
"Merge branch 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit

Pull audit fix from Paul Moore:
 ""We've got an audit fix, and unfortunately it is big.

  While I'm not excited that we need to be sending you something this
  large during the -rcX phase, it does fix some very real, and very
  tangled, problems relating to locking, backlog queues, and the audit
  daemon connection.

  This code has passed our testsuite without problem and it has held up
  to my ad-hoc stress tests (arguably better than the existing code),
  please consider pulling this as fix for the next v4.11-rcX tag""

* 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit:
  audit: fix auditd/kernel connection state tracking",kernel/audit.c,+,"[[821025, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 0 )']]","[[821026, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 0 )'], [821036, None, u'Callee', u'audit_log_config_change'], [821027, None, u'ArgumentList', u'""audit_pid""'], [821037, None, u'Identifier', u'audit_log_config_change'], [821034, None, u'Argument', u'""audit_pid""'], [821032, None, u'Argument', u'new_pid'], [821030, None, u'Argument', u'auditd_pid'], [821028, None, u'Argument', u'0'], [821035, None, u'PrimaryExpression', u'""audit_pid""'], [821033, None, u'Identifier', u'new_pid'], [821031, None, u'Identifier', u'auditd_pid'], [821029, None, u'PrimaryExpression', u'0'], [821025, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 0 )'], [821044, None, u'AndExpression', u'( ! new_pid ) && ( requesting_pid != auditd_pid )'], [821048, None, u'UnaryOp', u'! new_pid'], [821045, None, u'EqualityExpression', u'requesting_pid != auditd_pid'], [821050, None, u'UnaryOperator', u'!'], [821049, None, u'Identifier', u'new_pid'], [821047, None, u'Identifier', u'requesting_pid'], [821046, None, u'Identifier', u'auditd_pid'], [821043, u'True', u'Condition', u'( ! new_pid ) && ( requesting_pid != auditd_pid )'], [821095, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_PID'], [821097, None, u'MemberAccess', u's . mask'], [821096, None, u'Identifier', u'AUDIT_STATUS_PID'], [821099, None, u'Identifier', u's'], [821098, None, u'Identifier', u'mask'], [821094, u'True', u'Condition', u's . mask & AUDIT_STATUS_PID'], [821121, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_FAILURE'], [821123, None, u'MemberAccess', u's . mask'], [821122, None, u'Identifier', u'AUDIT_STATUS_FAILURE'], [821125, None, u'Identifier', u's'], [821124, None, u'Identifier', u'mask'], [821120, u'True', u'Condition', u's . mask & AUDIT_STATUS_FAILURE'], [821106, None, u'RelationalExpression', u'err < 0'], [821108, None, u'Identifier', u'err'], [821107, None, u'PrimaryExpression', u'0'], [821105, u'True', u'Condition', u'err < 0'], [821147, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_ENABLED'], [821149, None, u'MemberAccess', u's . mask'], [821148, None, u'Identifier', u'AUDIT_STATUS_ENABLED'], [821151, None, u'Identifier', u's'], [821150, None, u'Identifier', u'mask'], [821146, u'True', u'Condition', u's . mask & AUDIT_STATUS_ENABLED'], [821132, None, u'RelationalExpression', u'err < 0'], [821134, None, u'Identifier', u'err'], [821133, None, u'PrimaryExpression', u'0'], [821131, u'True', u'Condition', u'err < 0'], [821329, None, u'Identifier', u'msg_type'], [821328, u'True', u'Condition', u'msg_type']]","[[821026, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 0 )'], [821036, None, u'Callee', u'audit_log_config_change'], [821027, None, u'ArgumentList', u'""audit_pid""'], [821037, None, u'Identifier', u'audit_log_config_change'], [821034, None, u'Argument', u'""audit_pid""'], [821032, None, u'Argument', u'new_pid'], [821030, None, u'Argument', u'auditd_pid'], [821028, None, u'Argument', u'0'], [821035, None, u'PrimaryExpression', u'""audit_pid""'], [821033, None, u'Identifier', u'new_pid'], [821031, None, u'Identifier', u'auditd_pid'], [821029, None, u'PrimaryExpression', u'0'], [821025, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 0 )'], [821086, None, u'IdentifierDecl', u'new_pid = s . pid'], [821093, None, u'IdentifierDeclType', u'int'], [821092, None, u'Identifier', u'new_pid'], [821087, None, u'AssignmentExpr', u'new_pid = s . pid'], [821091, None, u'Identifier', u'new_pid'], [821088, None, u'MemberAccess', u's . pid'], [821090, None, u'Identifier', u's'], [821089, None, u'Identifier', u'pid'], [821085, u'True', u'IdentifierDeclStatement', u'int new_pid = s . pid ;'], [821052, None, u'AssignmentExpr', u'auditd_pid = auditd_conn . pid'], [821056, None, u'Identifier', u'auditd_pid'], [821053, None, u'MemberAccess', u'auditd_conn . pid'], [821055, None, u'Identifier', u'auditd_conn'], [821054, None, u'Identifier', u'pid'], [821051, u'True', u'ExpressionStatement', u'auditd_pid = auditd_conn . pid'], [821197, None, u'IdentifierDecl', u's'], [821199, None, u'IdentifierDeclType', u'struct audit_status'], [821198, None, u'Identifier', u's'], [821196, u'True', u'IdentifierDeclStatement', u'struct audit_status s ;']]"
"Merge branch 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit

Pull audit fix from Paul Moore:
 ""We've got an audit fix, and unfortunately it is big.

  While I'm not excited that we need to be sending you something this
  large during the -rcX phase, it does fix some very real, and very
  tangled, problems relating to locking, backlog queues, and the audit
  daemon connection.

  This code has passed our testsuite without problem and it has held up
  to my ad-hoc stress tests (arguably better than the existing code),
  please consider pulling this as fix for the next v4.11-rcX tag""

* 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit:
  audit: fix auditd/kernel connection state tracking",kernel/audit.c,-,"[[830322, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 0 )']]","[[830323, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 0 )'], [830333, None, u'Callee', u'audit_log_config_change'], [830324, None, u'ArgumentList', u'""audit_pid""'], [830334, None, u'Identifier', u'audit_log_config_change'], [830331, None, u'Argument', u'""audit_pid""'], [830329, None, u'Argument', u'new_pid'], [830327, None, u'Argument', u'audit_pid'], [830325, None, u'Argument', u'0'], [830332, None, u'PrimaryExpression', u'""audit_pid""'], [830330, None, u'Identifier', u'new_pid'], [830328, None, u'Identifier', u'audit_pid'], [830326, None, u'PrimaryExpression', u'0'], [830322, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 0 )'], [830336, None, u'AndExpression', u'audit_pid && new_pid && audit_replace ( requesting_pid ) != - ECONNREFUSED'], [830349, None, u'Identifier', u'audit_pid'], [830337, None, u'AndExpression', u'new_pid && audit_replace ( requesting_pid ) != - ECONNREFUSED'], [830348, None, u'Identifier', u'new_pid'], [830338, None, u'EqualityExpression', u'audit_replace ( requesting_pid ) != - ECONNREFUSED'], [830342, None, u'CallExpression', u'audit_replace ( requesting_pid )'], [830339, None, u'UnaryOp', u'- ECONNREFUSED'], [830346, None, u'Callee', u'audit_replace'], [830343, None, u'ArgumentList', u'requesting_pid'], [830341, None, u'UnaryOperator', u'-'], [830340, None, u'Identifier', u'ECONNREFUSED'], [830347, None, u'Identifier', u'audit_replace'], [830344, None, u'Argument', u'requesting_pid'], [830345, None, u'Identifier', u'requesting_pid'], [830335, u'True', u'Condition', u'audit_pid && new_pid && audit_replace ( requesting_pid ) != - ECONNREFUSED'], [830370, None, u'AndExpression', u'( ! new_pid ) && ( requesting_pid != audit_pid )'], [830374, None, u'UnaryOp', u'! new_pid'], [830371, None, u'EqualityExpression', u'requesting_pid != audit_pid'], [830376, None, u'UnaryOperator', u'!'], [830375, None, u'Identifier', u'new_pid'], [830373, None, u'Identifier', u'requesting_pid'], [830372, None, u'Identifier', u'audit_pid'], [830369, u'True', u'Condition', u'( ! new_pid ) && ( requesting_pid != audit_pid )'], [830399, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_PID'], [830401, None, u'MemberAccess', u's . mask'], [830400, None, u'Identifier', u'AUDIT_STATUS_PID'], [830403, None, u'Identifier', u's'], [830402, None, u'Identifier', u'mask'], [830398, u'True', u'Condition', u's . mask & AUDIT_STATUS_PID'], [830425, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_FAILURE'], [830427, None, u'MemberAccess', u's . mask'], [830426, None, u'Identifier', u'AUDIT_STATUS_FAILURE'], [830429, None, u'Identifier', u's'], [830428, None, u'Identifier', u'mask'], [830424, u'True', u'Condition', u's . mask & AUDIT_STATUS_FAILURE'], [830410, None, u'RelationalExpression', u'err < 0'], [830412, None, u'Identifier', u'err'], [830411, None, u'PrimaryExpression', u'0'], [830409, u'True', u'Condition', u'err < 0'], [830451, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_ENABLED'], [830453, None, u'MemberAccess', u's . mask'], [830452, None, u'Identifier', u'AUDIT_STATUS_ENABLED'], [830455, None, u'Identifier', u's'], [830454, None, u'Identifier', u'mask'], [830450, u'True', u'Condition', u's . mask & AUDIT_STATUS_ENABLED'], [830436, None, u'RelationalExpression', u'err < 0'], [830438, None, u'Identifier', u'err'], [830437, None, u'PrimaryExpression', u'0'], [830435, u'True', u'Condition', u'err < 0']]","[[830323, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 0 )'], [830333, None, u'Callee', u'audit_log_config_change'], [830324, None, u'ArgumentList', u'""audit_pid""'], [830334, None, u'Identifier', u'audit_log_config_change'], [830331, None, u'Argument', u'""audit_pid""'], [830329, None, u'Argument', u'new_pid'], [830327, None, u'Argument', u'audit_pid'], [830325, None, u'Argument', u'0'], [830332, None, u'PrimaryExpression', u'""audit_pid""'], [830330, None, u'Identifier', u'new_pid'], [830328, None, u'Identifier', u'audit_pid'], [830326, None, u'PrimaryExpression', u'0'], [830322, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 0 )'], [830390, None, u'IdentifierDecl', u'new_pid = s . pid'], [830397, None, u'IdentifierDeclType', u'int'], [830396, None, u'Identifier', u'new_pid'], [830391, None, u'AssignmentExpr', u'new_pid = s . pid'], [830395, None, u'Identifier', u'new_pid'], [830392, None, u'MemberAccess', u's . pid'], [830394, None, u'Identifier', u's'], [830393, None, u'Identifier', u'pid'], [830389, u'True', u'IdentifierDeclStatement', u'int new_pid = s . pid ;'], [830501, None, u'IdentifierDecl', u's'], [830503, None, u'IdentifierDeclType', u'struct audit_status'], [830502, None, u'Identifier', u's'], [830500, u'True', u'IdentifierDeclStatement', u'struct audit_status s ;']]"
"Merge branch 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit

Pull audit fix from Paul Moore:
 ""We've got an audit fix, and unfortunately it is big.

  While I'm not excited that we need to be sending you something this
  large during the -rcX phase, it does fix some very real, and very
  tangled, problems relating to locking, backlog queues, and the audit
  daemon connection.

  This code has passed our testsuite without problem and it has held up
  to my ad-hoc stress tests (arguably better than the existing code),
  please consider pulling this as fix for the next v4.11-rcX tag""

* 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit:
  audit: fix auditd/kernel connection state tracking",kernel/audit.c,+,"[[820997, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 0 )']]","[[820998, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 0 )'], [821008, None, u'Callee', u'audit_log_config_change'], [820999, None, u'ArgumentList', u'""audit_pid""'], [821009, None, u'Identifier', u'audit_log_config_change'], [821006, None, u'Argument', u'""audit_pid""'], [821004, None, u'Argument', u'new_pid'], [821002, None, u'Argument', u'auditd_pid'], [821000, None, u'Argument', u'0'], [821007, None, u'PrimaryExpression', u'""audit_pid""'], [821005, None, u'Identifier', u'new_pid'], [821003, None, u'Identifier', u'auditd_pid'], [821001, None, u'PrimaryExpression', u'0'], [820997, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 0 )'], [821016, None, u'AndExpression', u'auditd_pid && new_pid'], [821018, None, u'Identifier', u'auditd_pid'], [821017, None, u'Identifier', u'new_pid'], [821015, u'True', u'Condition', u'auditd_pid && new_pid'], [821044, None, u'AndExpression', u'( ! new_pid ) && ( requesting_pid != auditd_pid )'], [821048, None, u'UnaryOp', u'! new_pid'], [821045, None, u'EqualityExpression', u'requesting_pid != auditd_pid'], [821050, None, u'UnaryOperator', u'!'], [821049, None, u'Identifier', u'new_pid'], [821047, None, u'Identifier', u'requesting_pid'], [821046, None, u'Identifier', u'auditd_pid'], [821043, u'True', u'Condition', u'( ! new_pid ) && ( requesting_pid != auditd_pid )'], [821095, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_PID'], [821097, None, u'MemberAccess', u's . mask'], [821096, None, u'Identifier', u'AUDIT_STATUS_PID'], [821099, None, u'Identifier', u's'], [821098, None, u'Identifier', u'mask'], [821094, u'True', u'Condition', u's . mask & AUDIT_STATUS_PID'], [821121, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_FAILURE'], [821123, None, u'MemberAccess', u's . mask'], [821122, None, u'Identifier', u'AUDIT_STATUS_FAILURE'], [821125, None, u'Identifier', u's'], [821124, None, u'Identifier', u'mask'], [821120, u'True', u'Condition', u's . mask & AUDIT_STATUS_FAILURE'], [821106, None, u'RelationalExpression', u'err < 0'], [821108, None, u'Identifier', u'err'], [821107, None, u'PrimaryExpression', u'0'], [821105, u'True', u'Condition', u'err < 0'], [821147, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_ENABLED'], [821149, None, u'MemberAccess', u's . mask'], [821148, None, u'Identifier', u'AUDIT_STATUS_ENABLED'], [821151, None, u'Identifier', u's'], [821150, None, u'Identifier', u'mask'], [821146, u'True', u'Condition', u's . mask & AUDIT_STATUS_ENABLED'], [821132, None, u'RelationalExpression', u'err < 0'], [821134, None, u'Identifier', u'err'], [821133, None, u'PrimaryExpression', u'0'], [821131, u'True', u'Condition', u'err < 0']]","[[820998, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 0 )'], [821008, None, u'Callee', u'audit_log_config_change'], [820999, None, u'ArgumentList', u'""audit_pid""'], [821009, None, u'Identifier', u'audit_log_config_change'], [821006, None, u'Argument', u'""audit_pid""'], [821004, None, u'Argument', u'new_pid'], [821002, None, u'Argument', u'auditd_pid'], [821000, None, u'Argument', u'0'], [821007, None, u'PrimaryExpression', u'""audit_pid""'], [821005, None, u'Identifier', u'new_pid'], [821003, None, u'Identifier', u'auditd_pid'], [821001, None, u'PrimaryExpression', u'0'], [820997, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 0 )'], [821086, None, u'IdentifierDecl', u'new_pid = s . pid'], [821093, None, u'IdentifierDeclType', u'int'], [821092, None, u'Identifier', u'new_pid'], [821087, None, u'AssignmentExpr', u'new_pid = s . pid'], [821091, None, u'Identifier', u'new_pid'], [821088, None, u'MemberAccess', u's . pid'], [821090, None, u'Identifier', u's'], [821089, None, u'Identifier', u'pid'], [821085, u'True', u'IdentifierDeclStatement', u'int new_pid = s . pid ;'], [821052, None, u'AssignmentExpr', u'auditd_pid = auditd_conn . pid'], [821056, None, u'Identifier', u'auditd_pid'], [821053, None, u'MemberAccess', u'auditd_conn . pid'], [821055, None, u'Identifier', u'auditd_conn'], [821054, None, u'Identifier', u'pid'], [821051, u'True', u'ExpressionStatement', u'auditd_pid = auditd_conn . pid'], [821197, None, u'IdentifierDecl', u's'], [821199, None, u'IdentifierDeclType', u'struct audit_status'], [821198, None, u'Identifier', u's'], [821196, u'True', u'IdentifierDeclStatement', u'struct audit_status s ;']]"
"Merge branch 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit

Pull audit fix from Paul Moore:
 ""We've got an audit fix, and unfortunately it is big.

  While I'm not excited that we need to be sending you something this
  large during the -rcX phase, it does fix some very real, and very
  tangled, problems relating to locking, backlog queues, and the audit
  daemon connection.

  This code has passed our testsuite without problem and it has held up
  to my ad-hoc stress tests (arguably better than the existing code),
  please consider pulling this as fix for the next v4.11-rcX tag""

* 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit:
  audit: fix auditd/kernel connection state tracking",kernel/audit.c,-,"[[830299, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 1 )']]","[[830300, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 1 )'], [830310, None, u'Callee', u'audit_log_config_change'], [830301, None, u'ArgumentList', u'""audit_pid""'], [830311, None, u'Identifier', u'audit_log_config_change'], [830308, None, u'Argument', u'""audit_pid""'], [830306, None, u'Argument', u'new_pid'], [830304, None, u'Argument', u'audit_pid'], [830302, None, u'Argument', u'1'], [830309, None, u'PrimaryExpression', u'""audit_pid""'], [830307, None, u'Identifier', u'new_pid'], [830305, None, u'Identifier', u'audit_pid'], [830303, None, u'PrimaryExpression', u'1'], [830299, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 1 )'], [830313, None, u'EqualityExpression', u'audit_enabled != AUDIT_OFF'], [830315, None, u'Identifier', u'audit_enabled'], [830314, None, u'Identifier', u'AUDIT_OFF'], [830312, u'True', u'Condition', u'audit_enabled != AUDIT_OFF'], [830336, None, u'AndExpression', u'audit_pid && new_pid && audit_replace ( requesting_pid ) != - ECONNREFUSED'], [830349, None, u'Identifier', u'audit_pid'], [830337, None, u'AndExpression', u'new_pid && audit_replace ( requesting_pid ) != - ECONNREFUSED'], [830348, None, u'Identifier', u'new_pid'], [830338, None, u'EqualityExpression', u'audit_replace ( requesting_pid ) != - ECONNREFUSED'], [830342, None, u'CallExpression', u'audit_replace ( requesting_pid )'], [830339, None, u'UnaryOp', u'- ECONNREFUSED'], [830346, None, u'Callee', u'audit_replace'], [830343, None, u'ArgumentList', u'requesting_pid'], [830341, None, u'UnaryOperator', u'-'], [830340, None, u'Identifier', u'ECONNREFUSED'], [830347, None, u'Identifier', u'audit_replace'], [830344, None, u'Argument', u'requesting_pid'], [830345, None, u'Identifier', u'requesting_pid'], [830335, u'True', u'Condition', u'audit_pid && new_pid && audit_replace ( requesting_pid ) != - ECONNREFUSED'], [830370, None, u'AndExpression', u'( ! new_pid ) && ( requesting_pid != audit_pid )'], [830374, None, u'UnaryOp', u'! new_pid'], [830371, None, u'EqualityExpression', u'requesting_pid != audit_pid'], [830376, None, u'UnaryOperator', u'!'], [830375, None, u'Identifier', u'new_pid'], [830373, None, u'Identifier', u'requesting_pid'], [830372, None, u'Identifier', u'audit_pid'], [830369, u'True', u'Condition', u'( ! new_pid ) && ( requesting_pid != audit_pid )'], [830399, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_PID'], [830401, None, u'MemberAccess', u's . mask'], [830400, None, u'Identifier', u'AUDIT_STATUS_PID'], [830403, None, u'Identifier', u's'], [830402, None, u'Identifier', u'mask'], [830398, u'True', u'Condition', u's . mask & AUDIT_STATUS_PID'], [830425, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_FAILURE'], [830427, None, u'MemberAccess', u's . mask'], [830426, None, u'Identifier', u'AUDIT_STATUS_FAILURE'], [830429, None, u'Identifier', u's'], [830428, None, u'Identifier', u'mask'], [830424, u'True', u'Condition', u's . mask & AUDIT_STATUS_FAILURE'], [830410, None, u'RelationalExpression', u'err < 0'], [830412, None, u'Identifier', u'err'], [830411, None, u'PrimaryExpression', u'0'], [830409, u'True', u'Condition', u'err < 0']]","[[830300, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 1 )'], [830310, None, u'Callee', u'audit_log_config_change'], [830301, None, u'ArgumentList', u'""audit_pid""'], [830311, None, u'Identifier', u'audit_log_config_change'], [830308, None, u'Argument', u'""audit_pid""'], [830306, None, u'Argument', u'new_pid'], [830304, None, u'Argument', u'audit_pid'], [830302, None, u'Argument', u'1'], [830309, None, u'PrimaryExpression', u'""audit_pid""'], [830307, None, u'Identifier', u'new_pid'], [830305, None, u'Identifier', u'audit_pid'], [830303, None, u'PrimaryExpression', u'1'], [830299, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , audit_pid , 1 )'], [830390, None, u'IdentifierDecl', u'new_pid = s . pid'], [830397, None, u'IdentifierDeclType', u'int'], [830396, None, u'Identifier', u'new_pid'], [830391, None, u'AssignmentExpr', u'new_pid = s . pid'], [830395, None, u'Identifier', u'new_pid'], [830392, None, u'MemberAccess', u's . pid'], [830394, None, u'Identifier', u's'], [830393, None, u'Identifier', u'pid'], [830389, u'True', u'IdentifierDeclStatement', u'int new_pid = s . pid ;'], [830501, None, u'IdentifierDecl', u's'], [830503, None, u'IdentifierDeclType', u'struct audit_status'], [830502, None, u'Identifier', u's'], [830500, u'True', u'IdentifierDeclStatement', u'struct audit_status s ;']]"
"Merge branch 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit

Pull audit fix from Paul Moore:
 ""We've got an audit fix, and unfortunately it is big.

  While I'm not excited that we need to be sending you something this
  large during the -rcX phase, it does fix some very real, and very
  tangled, problems relating to locking, backlog queues, and the audit
  daemon connection.

  This code has passed our testsuite without problem and it has held up
  to my ad-hoc stress tests (arguably better than the existing code),
  please consider pulling this as fix for the next v4.11-rcX tag""

* 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit:
  audit: fix auditd/kernel connection state tracking",kernel/audit.c,+,"[[820969, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 1 )']]","[[820970, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 1 )'], [820980, None, u'Callee', u'audit_log_config_change'], [820971, None, u'ArgumentList', u'""audit_pid""'], [820981, None, u'Identifier', u'audit_log_config_change'], [820978, None, u'Argument', u'""audit_pid""'], [820976, None, u'Argument', u'new_pid'], [820974, None, u'Argument', u'auditd_pid'], [820972, None, u'Argument', u'1'], [820979, None, u'PrimaryExpression', u'""audit_pid""'], [820977, None, u'Identifier', u'new_pid'], [820975, None, u'Identifier', u'auditd_pid'], [820973, None, u'PrimaryExpression', u'1'], [820969, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 1 )'], [820983, None, u'EqualityExpression', u'audit_enabled != AUDIT_OFF'], [820985, None, u'Identifier', u'audit_enabled'], [820984, None, u'Identifier', u'AUDIT_OFF'], [820982, u'True', u'Condition', u'audit_enabled != AUDIT_OFF'], [821016, None, u'AndExpression', u'auditd_pid && new_pid'], [821018, None, u'Identifier', u'auditd_pid'], [821017, None, u'Identifier', u'new_pid'], [821015, u'True', u'Condition', u'auditd_pid && new_pid'], [821044, None, u'AndExpression', u'( ! new_pid ) && ( requesting_pid != auditd_pid )'], [821048, None, u'UnaryOp', u'! new_pid'], [821045, None, u'EqualityExpression', u'requesting_pid != auditd_pid'], [821050, None, u'UnaryOperator', u'!'], [821049, None, u'Identifier', u'new_pid'], [821047, None, u'Identifier', u'requesting_pid'], [821046, None, u'Identifier', u'auditd_pid'], [821043, u'True', u'Condition', u'( ! new_pid ) && ( requesting_pid != auditd_pid )'], [821095, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_PID'], [821097, None, u'MemberAccess', u's . mask'], [821096, None, u'Identifier', u'AUDIT_STATUS_PID'], [821099, None, u'Identifier', u's'], [821098, None, u'Identifier', u'mask'], [821094, u'True', u'Condition', u's . mask & AUDIT_STATUS_PID'], [821121, None, u'BitAndExpression', u's . mask & AUDIT_STATUS_FAILURE'], [821123, None, u'MemberAccess', u's . mask'], [821122, None, u'Identifier', u'AUDIT_STATUS_FAILURE'], [821125, None, u'Identifier', u's'], [821124, None, u'Identifier', u'mask'], [821120, u'True', u'Condition', u's . mask & AUDIT_STATUS_FAILURE'], [821106, None, u'RelationalExpression', u'err < 0'], [821108, None, u'Identifier', u'err'], [821107, None, u'PrimaryExpression', u'0'], [821105, u'True', u'Condition', u'err < 0']]","[[820970, None, u'CallExpression', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 1 )'], [820980, None, u'Callee', u'audit_log_config_change'], [820971, None, u'ArgumentList', u'""audit_pid""'], [820981, None, u'Identifier', u'audit_log_config_change'], [820978, None, u'Argument', u'""audit_pid""'], [820976, None, u'Argument', u'new_pid'], [820974, None, u'Argument', u'auditd_pid'], [820972, None, u'Argument', u'1'], [820979, None, u'PrimaryExpression', u'""audit_pid""'], [820977, None, u'Identifier', u'new_pid'], [820975, None, u'Identifier', u'auditd_pid'], [820973, None, u'PrimaryExpression', u'1'], [820969, u'True', u'ExpressionStatement', u'audit_log_config_change ( ""audit_pid"" , new_pid , auditd_pid , 1 )'], [821086, None, u'IdentifierDecl', u'new_pid = s . pid'], [821093, None, u'IdentifierDeclType', u'int'], [821092, None, u'Identifier', u'new_pid'], [821087, None, u'AssignmentExpr', u'new_pid = s . pid'], [821091, None, u'Identifier', u'new_pid'], [821088, None, u'MemberAccess', u's . pid'], [821090, None, u'Identifier', u's'], [821089, None, u'Identifier', u'pid'], [821085, u'True', u'IdentifierDeclStatement', u'int new_pid = s . pid ;'], [821052, None, u'AssignmentExpr', u'auditd_pid = auditd_conn . pid'], [821056, None, u'Identifier', u'auditd_pid'], [821053, None, u'MemberAccess', u'auditd_conn . pid'], [821055, None, u'Identifier', u'auditd_conn'], [821054, None, u'Identifier', u'pid'], [821051, u'True', u'ExpressionStatement', u'auditd_pid = auditd_conn . pid'], [821197, None, u'IdentifierDecl', u's'], [821199, None, u'IdentifierDeclType', u'struct audit_status'], [821198, None, u'Identifier', u's'], [821196, u'True', u'IdentifierDeclStatement', u'struct audit_status s ;']]"
"Merge branch 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit

Pull audit fix from Paul Moore:
 ""We've got an audit fix, and unfortunately it is big.

  While I'm not excited that we need to be sending you something this
  large during the -rcX phase, it does fix some very real, and very
  tangled, problems relating to locking, backlog queues, and the audit
  daemon connection.

  This code has passed our testsuite without problem and it has held up
  to my ad-hoc stress tests (arguably better than the existing code),
  please consider pulling this as fix for the next v4.11-rcX tag""

* 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit:
  audit: fix auditd/kernel connection state tracking",kernel/audit.c,-,"[[834976, u'True', u'ExpressionStatement', u'audit_log_lost ( ""rate limit exceeded"" )']]","[[834977, None, u'CallExpression', u'audit_log_lost ( ""rate limit exceeded"" )'], [834981, None, u'Callee', u'audit_log_lost'], [834978, None, u'ArgumentList', u'""rate limit exceeded""'], [834982, None, u'Identifier', u'audit_log_lost'], [834979, None, u'Argument', u'""rate limit exceeded""'], [834980, None, u'PrimaryExpression', u'""rate limit exceeded""'], [834976, u'True', u'ExpressionStatement', u'audit_log_lost ( ""rate limit exceeded"" )'], [834984, None, u'UnaryOp', u'! audit_rate_check ( )'], [834989, None, u'UnaryOperator', u'!'], [834985, None, u'CallExpression', u'audit_rate_check ( )'], [834987, None, u'Callee', u'audit_rate_check'], [834986, None, u'ArgumentList', u''], [834988, None, u'Identifier', u'audit_rate_check'], [834983, u'True', u'Condition', u'! audit_rate_check ( )'], [834993, None, u'UnaryOp', u'! ab'], [834995, None, u'UnaryOperator', u'!'], [834994, None, u'Identifier', u'ab'], [834992, u'True', u'Condition', u'! ab'], [834996, u'True', u'CFGEntryNode', u'ENTRY']]","[[834977, None, u'CallExpression', u'audit_log_lost ( ""rate limit exceeded"" )'], [834981, None, u'Callee', u'audit_log_lost'], [834978, None, u'ArgumentList', u'""rate limit exceeded""'], [834982, None, u'Identifier', u'audit_log_lost'], [834979, None, u'Argument', u'""rate limit exceeded""'], [834980, None, u'PrimaryExpression', u'""rate limit exceeded""'], [834976, u'True', u'ExpressionStatement', u'audit_log_lost ( ""rate limit exceeded"" )']]"
"Merge branch 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit

Pull audit fix from Paul Moore:
 ""We've got an audit fix, and unfortunately it is big.

  While I'm not excited that we need to be sending you something this
  large during the -rcX phase, it does fix some very real, and very
  tangled, problems relating to locking, backlog queues, and the audit
  daemon connection.

  This code has passed our testsuite without problem and it has held up
  to my ad-hoc stress tests (arguably better than the existing code),
  please consider pulling this as fix for the next v4.11-rcX tag""

* 'stable-4.11' of git://git.infradead.org/users/pcmoore/audit:
  audit: fix auditd/kernel connection state tracking",kernel/audit.c,+,"[[825662, u'True', u'ExpressionStatement', u'audit_log_lost ( ""rate limit exceeded"" )']]","[[825663, None, u'CallExpression', u'audit_log_lost ( ""rate limit exceeded"" )'], [825667, None, u'Callee', u'audit_log_lost'], [825664, None, u'ArgumentList', u'""rate limit exceeded""'], [825668, None, u'Identifier', u'audit_log_lost'], [825665, None, u'Argument', u'""rate limit exceeded""'], [825666, None, u'PrimaryExpression', u'""rate limit exceeded""'], [825662, u'True', u'ExpressionStatement', u'audit_log_lost ( ""rate limit exceeded"" )'], [825722, None, u'CallExpression', u'audit_rate_check ( )'], [825724, None, u'Callee', u'audit_rate_check'], [825723, None, u'ArgumentList', u''], [825725, None, u'Identifier', u'audit_rate_check'], [825721, u'True', u'Condition', u'audit_rate_check ( )'], [825729, None, u'UnaryOp', u'! ab'], [825731, None, u'UnaryOperator', u'!'], [825730, None, u'Identifier', u'ab'], [825728, u'True', u'Condition', u'! ab'], [825740, u'True', u'CFGEntryNode', u'ENTRY']]","[[825663, None, u'CallExpression', u'audit_log_lost ( ""rate limit exceeded"" )'], [825667, None, u'Callee', u'audit_log_lost'], [825664, None, u'ArgumentList', u'""rate limit exceeded""'], [825668, None, u'Identifier', u'audit_log_lost'], [825665, None, u'Argument', u'""rate limit exceeded""'], [825666, None, u'PrimaryExpression', u'""rate limit exceeded""'], [825662, u'True', u'ExpressionStatement', u'audit_log_lost ( ""rate limit exceeded"" )']]"
"Merge tag 'clk-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux

Pull clk fixes from Stephen Boyd:
 ""A handful of Sunxi and Rockchip clk driver fixes and a core framework
  one where we need to copy a string because we can't guarantee it isn't
  freed sometime later""

* tag 'clk-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux:
  clk: sunxi-ng: fix recalc_rate formula of NKMP clocks
  clk: sunxi-ng: Fix div/mult settings for osc12M on A64
  clk: rockchip: Make uartpll a child of the gpll on rk3036
  clk: rockchip: add "","" to mux_pll_src_apll_dpll_gpll_usb480m_p on rk3036
  clk: core: Copy connection id
  dt-bindings: arm: update Armada CP110 system controller binding
  clk: sunxi-ng: sun6i: Fix enable bit offset for hdmi-ddc module clock
  clk: sunxi: ccu-sun5i needs nkmp
  clk: sunxi-ng: mp: Adjust parent rate for pre-dividers",drivers/clk/rockchip/clk-rk3036.c,+,"[[835391, u'True', u'ExpressionStatement', u'writel_relaxed ( HIWORD_UPDATE ( 0x2 , 0x3 , 10 ) , reg_base + RK2928_CLKSEL_CON ( 13 ) )']]","[[835392, None, u'CallExpression', u'writel_relaxed ( HIWORD_UPDATE ( 0x2 , 0x3 , 10 ) , reg_base + RK2928_CLKSEL_CON ( 13 ) )'], [835414, None, u'Callee', u'writel_relaxed'], [835393, None, u'ArgumentList', u'HIWORD_UPDATE ( 0x2 , 0x3 , 10 )'], [835415, None, u'Identifier', u'writel_relaxed'], [835403, None, u'Argument', u'HIWORD_UPDATE ( 0x2 , 0x3 , 10 )'], [835394, None, u'Argument', u'reg_base + RK2928_CLKSEL_CON ( 13 )'], [835404, None, u'CallExpression', u'HIWORD_UPDATE ( 0x2 , 0x3 , 10 )'], [835395, None, u'AdditiveExpression', u'reg_base + RK2928_CLKSEL_CON ( 13 )'], [835412, None, u'Callee', u'HIWORD_UPDATE'], [835405, None, u'ArgumentList', u'0x2'], [835402, None, u'Identifier', u'reg_base'], [835396, None, u'CallExpression', u'RK2928_CLKSEL_CON ( 13 )'], [835413, None, u'Identifier', u'HIWORD_UPDATE'], [835410, None, u'Argument', u'0x2'], [835408, None, u'Argument', u'0x3'], [835406, None, u'Argument', u'10'], [835400, None, u'Callee', u'RK2928_CLKSEL_CON'], [835397, None, u'ArgumentList', u'13'], [835411, None, u'PrimaryExpression', u'0x2'], [835409, None, u'PrimaryExpression', u'0x3'], [835407, None, u'PrimaryExpression', u'10'], [835401, None, u'Identifier', u'RK2928_CLKSEL_CON'], [835398, None, u'Argument', u'13'], [835399, None, u'PrimaryExpression', u'13'], [835391, u'True', u'ExpressionStatement', u'writel_relaxed ( HIWORD_UPDATE ( 0x2 , 0x3 , 10 ) , reg_base + RK2928_CLKSEL_CON ( 13 ) )'], [835429, None, u'UnaryOp', u'! reg_base'], [835431, None, u'UnaryOperator', u'!'], [835430, None, u'Identifier', u'reg_base'], [835428, u'True', u'Condition', u'! reg_base'], [835455, u'True', u'CFGEntryNode', u'ENTRY']]","[[835392, None, u'CallExpression', u'writel_relaxed ( HIWORD_UPDATE ( 0x2 , 0x3 , 10 ) , reg_base + RK2928_CLKSEL_CON ( 13 ) )'], [835414, None, u'Callee', u'writel_relaxed'], [835393, None, u'ArgumentList', u'HIWORD_UPDATE ( 0x2 , 0x3 , 10 )'], [835415, None, u'Identifier', u'writel_relaxed'], [835403, None, u'Argument', u'HIWORD_UPDATE ( 0x2 , 0x3 , 10 )'], [835394, None, u'Argument', u'reg_base + RK2928_CLKSEL_CON ( 13 )'], [835404, None, u'CallExpression', u'HIWORD_UPDATE ( 0x2 , 0x3 , 10 )'], [835395, None, u'AdditiveExpression', u'reg_base + RK2928_CLKSEL_CON ( 13 )'], [835412, None, u'Callee', u'HIWORD_UPDATE'], [835405, None, u'ArgumentList', u'0x2'], [835402, None, u'Identifier', u'reg_base'], [835396, None, u'CallExpression', u'RK2928_CLKSEL_CON ( 13 )'], [835413, None, u'Identifier', u'HIWORD_UPDATE'], [835410, None, u'Argument', u'0x2'], [835408, None, u'Argument', u'0x3'], [835406, None, u'Argument', u'10'], [835400, None, u'Callee', u'RK2928_CLKSEL_CON'], [835397, None, u'ArgumentList', u'13'], [835411, None, u'PrimaryExpression', u'0x2'], [835409, None, u'PrimaryExpression', u'0x3'], [835407, None, u'PrimaryExpression', u'10'], [835401, None, u'Identifier', u'RK2928_CLKSEL_CON'], [835398, None, u'Argument', u'13'], [835399, None, u'PrimaryExpression', u'13'], [835391, u'True', u'ExpressionStatement', u'writel_relaxed ( HIWORD_UPDATE ( 0x2 , 0x3 , 10 ) , reg_base + RK2928_CLKSEL_CON ( 13 ) )'], [835433, None, u'AssignmentExpr', u'reg_base = of_iomap ( np , 0 )'], [835442, None, u'Identifier', u'reg_base'], [835434, None, u'CallExpression', u'of_iomap ( np , 0 )'], [835440, None, u'Callee', u'of_iomap'], [835435, None, u'ArgumentList', u'np'], [835441, None, u'Identifier', u'of_iomap'], [835438, None, u'Argument', u'np'], [835436, None, u'Argument', u'0'], [835439, None, u'Identifier', u'np'], [835437, None, u'PrimaryExpression', u'0'], [835432, u'True', u'ExpressionStatement', u'reg_base = of_iomap ( np , 0 )'], [835185, None, u'ParameterType', u'struct device_node *'], [835184, None, u'Identifier', u'np'], [835183, u'True', u'Parameter', u'struct device_node * np']]"
"ping: implement proper locking

We got a report of yet another bug in ping

http://www.openwall.com/lists/oss-security/2017/03/24/6

->disconnect() is not called with socket lock held.

Fix this by acquiring ping rwlock earlier.

Thanks to Daniel, Alexander and Andrey for letting us know this problem.

Fixes: c319b4d76b9e (""net: ipv4: add IPPROTO_ICMP socket kind"")
Signed-off-by: Eric Dumazet <edumazet@google.com>
Reported-by: Daniel Jiang <danieljiang0415@gmail.com>
Reported-by: Solar Designer <solar@openwall.com>
Reported-by: Andrey Konovalov <andreyknvl@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>",net/ipv4/ping.c,+,"[[836365, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )']]","[[836366, None, u'CallExpression', u'write_lock_bh ( & ping_table . lock )'], [836374, None, u'Callee', u'write_lock_bh'], [836367, None, u'ArgumentList', u'& ping_table . lock'], [836375, None, u'Identifier', u'write_lock_bh'], [836368, None, u'Argument', u'& ping_table . lock'], [836369, None, u'UnaryOp', u'& ping_table . lock'], [836373, None, u'UnaryOperator', u'&'], [836370, None, u'MemberAccess', u'ping_table . lock'], [836372, None, u'Identifier', u'ping_table'], [836371, None, u'Identifier', u'lock'], [836365, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )'], [836401, u'True', u'CFGEntryNode', u'ENTRY']]","[[836366, None, u'CallExpression', u'write_lock_bh ( & ping_table . lock )'], [836374, None, u'Callee', u'write_lock_bh'], [836367, None, u'ArgumentList', u'& ping_table . lock'], [836375, None, u'Identifier', u'write_lock_bh'], [836368, None, u'Argument', u'& ping_table . lock'], [836369, None, u'UnaryOp', u'& ping_table . lock'], [836373, None, u'UnaryOperator', u'&'], [836370, None, u'MemberAccess', u'ping_table . lock'], [836372, None, u'Identifier', u'ping_table'], [836371, None, u'Identifier', u'lock'], [836365, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )']]"
"ping: implement proper locking

We got a report of yet another bug in ping

http://www.openwall.com/lists/oss-security/2017/03/24/6

->disconnect() is not called with socket lock held.

Fix this by acquiring ping rwlock earlier.

Thanks to Daniel, Alexander and Andrey for letting us know this problem.

Fixes: c319b4d76b9e (""net: ipv4: add IPPROTO_ICMP socket kind"")
Signed-off-by: Eric Dumazet <edumazet@google.com>
Reported-by: Daniel Jiang <danieljiang0415@gmail.com>
Reported-by: Solar Designer <solar@openwall.com>
Reported-by: Andrey Konovalov <andreyknvl@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>",net/ipv4/ping.c,-,"[[842897, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )']]","[[842898, None, u'CallExpression', u'write_lock_bh ( & ping_table . lock )'], [842906, None, u'Callee', u'write_lock_bh'], [842899, None, u'ArgumentList', u'& ping_table . lock'], [842907, None, u'Identifier', u'write_lock_bh'], [842900, None, u'Argument', u'& ping_table . lock'], [842901, None, u'UnaryOp', u'& ping_table . lock'], [842905, None, u'UnaryOperator', u'&'], [842902, None, u'MemberAccess', u'ping_table . lock'], [842904, None, u'Identifier', u'ping_table'], [842903, None, u'Identifier', u'lock'], [842897, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )'], [842909, None, u'CallExpression', u'sk_hashed ( sk )'], [842913, None, u'Callee', u'sk_hashed'], [842910, None, u'ArgumentList', u'sk'], [842914, None, u'Identifier', u'sk_hashed'], [842911, None, u'Argument', u'sk'], [842912, None, u'Identifier', u'sk'], [842908, u'True', u'Condition', u'sk_hashed ( sk )'], [842940, u'True', u'CFGEntryNode', u'ENTRY']]","[[842898, None, u'CallExpression', u'write_lock_bh ( & ping_table . lock )'], [842906, None, u'Callee', u'write_lock_bh'], [842899, None, u'ArgumentList', u'& ping_table . lock'], [842907, None, u'Identifier', u'write_lock_bh'], [842900, None, u'Argument', u'& ping_table . lock'], [842901, None, u'UnaryOp', u'& ping_table . lock'], [842905, None, u'UnaryOperator', u'&'], [842902, None, u'MemberAccess', u'ping_table . lock'], [842904, None, u'Identifier', u'ping_table'], [842903, None, u'Identifier', u'lock'], [842897, u'True', u'ExpressionStatement', u'write_lock_bh ( & ping_table . lock )']]"
"ping: implement proper locking

We got a report of yet another bug in ping

http://www.openwall.com/lists/oss-security/2017/03/24/6

->disconnect() is not called with socket lock held.

Fix this by acquiring ping rwlock earlier.

Thanks to Daniel, Alexander and Andrey for letting us know this problem.

Fixes: c319b4d76b9e (""net: ipv4: add IPPROTO_ICMP socket kind"")
Signed-off-by: Eric Dumazet <edumazet@google.com>
Reported-by: Daniel Jiang <danieljiang0415@gmail.com>
Reported-by: Solar Designer <solar@openwall.com>
Reported-by: Andrey Konovalov <andreyknvl@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>",net/ipv4/ping.c,-,"[[842825, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )']]","[[842826, None, u'CallExpression', u'write_unlock_bh ( & ping_table . lock )'], [842834, None, u'Callee', u'write_unlock_bh'], [842827, None, u'ArgumentList', u'& ping_table . lock'], [842835, None, u'Identifier', u'write_unlock_bh'], [842828, None, u'Argument', u'& ping_table . lock'], [842829, None, u'UnaryOp', u'& ping_table . lock'], [842833, None, u'UnaryOperator', u'&'], [842830, None, u'MemberAccess', u'ping_table . lock'], [842832, None, u'Identifier', u'ping_table'], [842831, None, u'Identifier', u'lock'], [842825, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )'], [842909, None, u'CallExpression', u'sk_hashed ( sk )'], [842913, None, u'Callee', u'sk_hashed'], [842910, None, u'ArgumentList', u'sk'], [842914, None, u'Identifier', u'sk_hashed'], [842911, None, u'Argument', u'sk'], [842912, None, u'Identifier', u'sk'], [842908, u'True', u'Condition', u'sk_hashed ( sk )'], [842940, u'True', u'CFGEntryNode', u'ENTRY']]","[[842826, None, u'CallExpression', u'write_unlock_bh ( & ping_table . lock )'], [842834, None, u'Callee', u'write_unlock_bh'], [842827, None, u'ArgumentList', u'& ping_table . lock'], [842835, None, u'Identifier', u'write_unlock_bh'], [842828, None, u'Argument', u'& ping_table . lock'], [842829, None, u'UnaryOp', u'& ping_table . lock'], [842833, None, u'UnaryOperator', u'&'], [842830, None, u'MemberAccess', u'ping_table . lock'], [842832, None, u'Identifier', u'ping_table'], [842831, None, u'Identifier', u'lock'], [842825, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )']]"
"ping: implement proper locking

We got a report of yet another bug in ping

http://www.openwall.com/lists/oss-security/2017/03/24/6

->disconnect() is not called with socket lock held.

Fix this by acquiring ping rwlock earlier.

Thanks to Daniel, Alexander and Andrey for letting us know this problem.

Fixes: c319b4d76b9e (""net: ipv4: add IPPROTO_ICMP socket kind"")
Signed-off-by: Eric Dumazet <edumazet@google.com>
Reported-by: Daniel Jiang <danieljiang0415@gmail.com>
Reported-by: Solar Designer <solar@openwall.com>
Reported-by: Andrey Konovalov <andreyknvl@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>",net/ipv4/ping.c,+,"[[836284, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )']]","[[836285, None, u'CallExpression', u'write_unlock_bh ( & ping_table . lock )'], [836293, None, u'Callee', u'write_unlock_bh'], [836286, None, u'ArgumentList', u'& ping_table . lock'], [836294, None, u'Identifier', u'write_unlock_bh'], [836287, None, u'Argument', u'& ping_table . lock'], [836288, None, u'UnaryOp', u'& ping_table . lock'], [836292, None, u'UnaryOperator', u'&'], [836289, None, u'MemberAccess', u'ping_table . lock'], [836291, None, u'Identifier', u'ping_table'], [836290, None, u'Identifier', u'lock'], [836284, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )'], [836401, u'True', u'CFGEntryNode', u'ENTRY']]","[[836285, None, u'CallExpression', u'write_unlock_bh ( & ping_table . lock )'], [836293, None, u'Callee', u'write_unlock_bh'], [836286, None, u'ArgumentList', u'& ping_table . lock'], [836294, None, u'Identifier', u'write_unlock_bh'], [836287, None, u'Argument', u'& ping_table . lock'], [836288, None, u'UnaryOp', u'& ping_table . lock'], [836292, None, u'UnaryOperator', u'&'], [836289, None, u'MemberAccess', u'ping_table . lock'], [836291, None, u'Identifier', u'ping_table'], [836290, None, u'Identifier', u'lock'], [836284, u'True', u'ExpressionStatement', u'write_unlock_bh ( & ping_table . lock )']]"
"RDMA/vmw_pvrdma: Activate device on ethernet link up

Restore device state when ethernet link changes to active.

Acked-by: George Zhang <georgezhang@vmware.com>
Acked-by: Jorgen Hansen <jhansen@vmware.com>
Acked-by: Bryan Tan <bryantan@vmware.com>
Signed-off-by: Aditya Sarwade <asarwade@vmware.com>
Signed-off-by: Adit Ranadive <aditr@vmware.com>
Signed-off-by: Doug Ledford <dledford@redhat.com>",drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c,+,"[[852714, u'True', u'ExpressionStatement', u'pvrdma_write_reg ( dev , PVRDMA_REG_CTL , PVRDMA_DEVICE_CTL_UNQUIESCE )']]","[[852715, None, u'CallExpression', u'pvrdma_write_reg ( dev , PVRDMA_REG_CTL , PVRDMA_DEVICE_CTL_UNQUIESCE )'], [852723, None, u'Callee', u'pvrdma_write_reg'], [852716, None, u'ArgumentList', u'dev'], [852724, None, u'Identifier', u'pvrdma_write_reg'], [852721, None, u'Argument', u'dev'], [852719, None, u'Argument', u'PVRDMA_REG_CTL'], [852717, None, u'Argument', u'PVRDMA_DEVICE_CTL_UNQUIESCE'], [852722, None, u'Identifier', u'dev'], [852720, None, u'Identifier', u'PVRDMA_REG_CTL'], [852718, None, u'Identifier', u'PVRDMA_DEVICE_CTL_UNQUIESCE'], [852714, u'True', u'ExpressionStatement', u'pvrdma_write_reg ( dev , PVRDMA_REG_CTL , PVRDMA_DEVICE_CTL_UNQUIESCE )'], [852744, None, u'Identifier', u'event'], [852743, u'True', u'Condition', u'event'], [852745, u'True', u'CFGEntryNode', u'ENTRY']]","[[852715, None, u'CallExpression', u'pvrdma_write_reg ( dev , PVRDMA_REG_CTL , PVRDMA_DEVICE_CTL_UNQUIESCE )'], [852723, None, u'Callee', u'pvrdma_write_reg'], [852716, None, u'ArgumentList', u'dev'], [852724, None, u'Identifier', u'pvrdma_write_reg'], [852721, None, u'Argument', u'dev'], [852719, None, u'Argument', u'PVRDMA_REG_CTL'], [852717, None, u'Argument', u'PVRDMA_DEVICE_CTL_UNQUIESCE'], [852722, None, u'Identifier', u'dev'], [852720, None, u'Identifier', u'PVRDMA_REG_CTL'], [852718, None, u'Identifier', u'PVRDMA_DEVICE_CTL_UNQUIESCE'], [852714, u'True', u'ExpressionStatement', u'pvrdma_write_reg ( dev , PVRDMA_REG_CTL , PVRDMA_DEVICE_CTL_UNQUIESCE )'], [852640, None, u'ParameterType', u'struct pvrdma_dev *'], [852639, None, u'Identifier', u'dev'], [852638, u'True', u'Parameter', u'struct pvrdma_dev * dev']]"

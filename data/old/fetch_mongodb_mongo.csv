commit_sha,commit_message,file_name,change_type,log_statement,log_loc,store_name
5c182c1d5e8a141e6dcd156173f802f4e44b3610,SERVER-28098 Get rid of DBConfig::getAllShardIds,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, confIn->getPrimaryId()));",296,download/mongodb_mongo1.cpp
5c182c1d5e8a141e6dcd156173f802f4e44b3610,SERVER-28098 Get rid of DBConfig::getAllShardIds,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, mrResult.shardTargetId));",356,download/mongodb_mongo1.cpp
5c182c1d5e8a141e6dcd156173f802f4e44b3610,SERVER-28098 Get rid of DBConfig::getAllShardIds,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, confOut->getPrimaryId()));",450,download/mongodb_mongo1.cpp
5c182c1d5e8a141e6dcd156173f802f4e44b3610,SERVER-28098 Get rid of DBConfig::getAllShardIds,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"uassert(ErrorCodes::ShardNotFound,",510,download/mongodb_mongo1.cpp
9301066134ca391c6b0f26a0b535c164f13922ed,SERVER-27749 Refactor ShardingEgressMetadataHook,src/mongo/s/sharding_egress_metadata_hook.cpp,+,"return writeRequestMetadata(true, txn, target.toString(), metadataBob);",79,download/mongodb_mongo2.cpp
f725e5137561ba5a521d0f5eb6a60bdeebf34c24,SERVER-27863 Reschedule early alarms in NetworkInterfaceASIO,src/mongo/executor/network_interface_asio.cpp,+,"fassertFailedWithStatus(40383, status);",476,download/mongodb_mongo3.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/mechanism_scram.cpp,+,uassertStatusOK(clientProofSHA1Status);,236,download/mongodb_mongo4.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/sha1_block_test.cpp,+,"ASSERT(sha1Tests[i].hash == result) << ""Failed SHA1 iteration "" << i;",65,download/mongodb_mongo5.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/sha1_block_test.cpp,+,"ASSERT(hmacSha1Tests[i].hash == result) << ""Failed HMAC-SHA1 iteration "" << i;",133,download/mongodb_mongo5.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/sha1_block_test.cpp,+,"ASSERT_EQ(BinData, hashElem.type());",151,download/mongodb_mongo5.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/sha1_block_test.cpp,+,"ASSERT_EQ(BinDataGeneral, hashElem.binDataType());",152,download/mongodb_mongo5.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/sha1_block_test.cpp,+,"ASSERT_EQ(SHA1Block::kHashLength, static_cast<size_t>(binLen));",156,download/mongodb_mongo5.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/sha1_block_test.cpp,+,ASSERT_OK(newHashStatus.getStatus());,160,download/mongodb_mongo5.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/sha1_block_test.cpp,+,ASSERT_TRUE(testHash == newHashStatus.getValue());,161,download/mongodb_mongo5.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/sha1_block_test.cpp,+,"ASSERT_EQ(ErrorCodes::UnsupportedFormat, newHashStatus.getStatus());",168,download/mongodb_mongo5.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/sha1_block_test.cpp,+,"ASSERT_EQ(ErrorCodes::UnsupportedFormat, newHashStatus.getStatus());",176,download/mongodb_mongo5.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/sha1_block_test.cpp,+,"ASSERT_EQ(ErrorCodes::InvalidLength, newHashStatus.getStatus());",184,download/mongodb_mongo5.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,ASSERT_TRUE(*secret.clientKey == *cachedSecret->clientKey);,466,download/mongodb_mongo6.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,ASSERT_TRUE(*secret.serverKey == *cachedSecret->serverKey);,467,download/mongodb_mongo6.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,ASSERT_TRUE(*secret.storedKey == *cachedSecret->storedKey);,468,download/mongodb_mongo6.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,ASSERT_TRUE(*newSecret.clientKey == *cachedSecret->clientKey);,508,download/mongodb_mongo6.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,ASSERT_TRUE(*newSecret.serverKey == *cachedSecret->serverKey);,509,download/mongodb_mongo6.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,ASSERT_TRUE(*newSecret.storedKey == *cachedSecret->storedKey);,510,download/mongodb_mongo6.cpp
73d37b8fc33a3c429dfd21ad305b2c355c2a9828,"SERVER-2104 add support for covered projections with dotted field paths

For example, suppose you have index {""a.b"": 1}. The
projection {_id: 0, ""a.b"": 1} will now result in a covered
plan when this index is used.",src/mongo/db/exec/projection_exec_test.cpp,+,ASSERT_OK(projExec.transform(wsm));,187,download/mongodb_mongo7.cpp
73d37b8fc33a3c429dfd21ad305b2c355c2a9828,"SERVER-2104 add support for covered projections with dotted field paths

For example, suppose you have index {""a.b"": 1}. The
projection {_id: 0, ""a.b"": 1} will now result in a covered
plan when this index is used.",src/mongo/db/exec/projection_exec_test.cpp,+,"ASSERT_BSONOBJ_EQ(result, fromjson(""{b: {c: 2, d: 3, f: {g: 4, h: 5}}}""));",273,download/mongodb_mongo7.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/dur_journal_writer.cpp,+,"void WRITETODATAFILES(OperationContext* txn,",59,download/mongodb_mongo8.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/dur_journal_writer.cpp,+,"WRITETODATAFILES(cc().makeOperationContext().get(), buffer->_header, buffer->_builder);",249,download/mongodb_mongo8.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/dur_recover.cpp,+,LockMongoFilesShared::assertAtLeastReadLocked(txn);,293,download/mongodb_mongo9.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/durable_mapped_file.cpp,+,"error() << ""exception in DurableMappedFile::close"";",305,download/mongodb_mongo10.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/mmap.cpp,+,LockMongoFilesShared::assertExclusivelyLocked(txn);,155,download/mongodb_mongo11.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/mmap_posix.cpp,+,void printMemInfo() {,59,download/mongodb_mongo12.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/mmap_posix.cpp,+,LogstreamBuilder out = log();,60,download/mongodb_mongo12.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/mmap_windows.cpp,+,LockMongoFilesShared::assertExclusivelyLocked(txn);,153,download/mongodb_mongo13.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOp(createCollection()));,1194,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOps(ops));,1201,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOps(ops));,1203,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,"ASSERT_EQUALS(hash, validate());",1204,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,"ASSERT_EQ(status.code(), 17261);",1208,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOp(createCollection()));,1214,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOps(ops));,1221,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOps(ops));,1223,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,"ASSERT_EQUALS(hash, validate());",1224,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,"ASSERT_EQ(status.code(), 17261);",1228,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOp(createCollection()));,1234,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOps(ops));,1241,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOps(ops));,1243,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,"ASSERT_EQUALS(hash, validate());",1244,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,"ASSERT_EQ(status.code(), 17261);",1248,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOp(createCollection()));,1254,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOps(ops));,1261,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOps(ops));,1263,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,"ASSERT_EQUALS(hash, validate());",1264,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,"ASSERT_EQ(status.code(), 17261);",1268,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOp(createCollection()));,1274,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOps(ops));,1281,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,ASSERT_OK(runOps(ops));,1283,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,"ASSERT_EQUALS(hash, validate());",1284,download/mongodb_mongo14.cpp
a2ff6ec6b8f88e5d79e6c09c333033f151a59961,SERVER-28071 add missing FTS indexing error codes to replication whitelist,src/mongo/db/repl/sync_tail_test.cpp,+,"ASSERT_EQ(status.code(), 17262);",1288,download/mongodb_mongo14.cpp
fff6d490ce43a6d3952cf2352f81c524b20e6f49,SERVER-3181 Add nameOnly option to listDatabases,src/mongo/client/dbclient.cpp,+,uassert(,590,download/mongodb_mongo15.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, primaryShardId));",139,download/mongodb_mongo16.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,auto result = uassertStatusOK(primaryShard->runCommandWithFixedRetryAttempts(,141,download/mongodb_mongo16.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,uassertStatusOK(result.commandStatus);,149,download/mongodb_mongo16.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"uassertStatusOK(bsonExtractIntegerField(result.response, ""n"", &numObjects));",150,download/mongodb_mongo16.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,splitPoints = uassertStatusOK(shardutil::selectChunkSplitPoints(,153,download/mongodb_mongo16.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"log() << ""going to create "" << splitPoints.size() + 1 << "" chunk(s) for: "" << nss",190,download/mongodb_mongo16.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,Status status = Grid::get(txn)->catalogClient(txn)->insertConfigDocument(,210,download/mongodb_mongo16.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/chunk_manager.cpp,+,uassertStatusOK(Grid::get(txn)->catalogClient(txn)->getChunks(,271,download/mongodb_mongo17.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/chunk_manager_test.cpp,+,"ASSERT_BSONOBJ_EQ(expectedBuilder.arr(), actualBuilder.arr());",308,download/mongodb_mongo18.cpp
41729cec076164077f13571e35596934477d7110,SERVER-28030 Remove writes from Chunk,src/mongo/db/s/balancer/balancer.cpp,+,"log() << ""Marking chunk "" << redact(chunk->toString()) << "" as jumbo."";",642,download/mongodb_mongo19.cpp
41729cec076164077f13571e35596934477d7110,SERVER-28030 Remove writes from Chunk,src/mongo/db/s/balancer/balancer.cpp,+,auto status = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,648,download/mongodb_mongo19.cpp
41729cec076164077f13571e35596934477d7110,SERVER-28030 Remove writes from Chunk,src/mongo/db/s/balancer/balancer.cpp,+,"log() << ""Couldn't set jumbo for chunk: "" << redact(chunkName)",656,download/mongodb_mongo19.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list.cpp,+,"Status EgressMetadataHookList::writeRequestMetadata(OperationContext* txn,",43,download/mongodb_mongo20.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list.cpp,+,"auto status = hook->writeRequestMetadata(txn, requestDestination, metadataBob);",47,download/mongodb_mongo20.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"Status writeRequestMetadata(OperationContext* txn,",54,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"Status writeRequestMetadata(OperationContext* txn,",77,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_OK(hookList.writeRequestMetadata(nullptr, emptyHost, nullptr));",94,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_OK(hookList.readReplyMetadata(emptyHost, emptyObj));",97,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_OK(hookList.writeRequestMetadata(nullptr, HostAndPort(""a:123""), &builder));",107,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""h1""",108,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_OK(hookList.readReplyMetadata(testHost, testObj));",114,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_EQ(testHost, hook1Args.replySource);",115,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_BSONOBJ_EQ(testObj, hook1Args.metadataObj);",116,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_OK(hookList.writeRequestMetadata(nullptr, HostAndPort(""a:123""), &builder));",130,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""foo""",131,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_OK(hookList.readReplyMetadata(testHost, testObj));",139,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_EQ(testHost, hook1Args.replySource);",141,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_BSONOBJ_EQ(testObj, hook1Args.metadataObj);",142,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_EQ(testHost, hook2Args.replySource);",144,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_BSONOBJ_EQ(testObj, hook2Args.metadataObj);",145,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_NOT_OK(hookList.writeRequestMetadata(nullptr, HostAndPort(""a:123""), &builder));",159,download/mongodb_mongo21.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list_test.cpp,+,"ASSERT_NOT_OK(hookList.readReplyMetadata(HostAndPort(""b:456""), BSON(""x"" << 1)));",160,download/mongodb_mongo21.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/plan_cache_test.cpp,+,assertPlanCacheRecoversSolution(,1285,download/mongodb_mongo22.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2);,1461,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1462,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",1469,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2);,1477,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1478,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",1485,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2);,1493,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1494,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",1501,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2);,1510,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1511,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",1518,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2);,1526,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1527,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",1534,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2);,1542,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1543,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",1550,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2);,1558,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1559,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",1567,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2);,1576,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1577,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",1584,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2);,1592,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1593,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",1602,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2);,1611,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1612,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",1621,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(4);,1630,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1631,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1637,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1642,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",1651,download/mongodb_mongo23.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_geo_test.cpp,+,assertNumSolutions(3U);,250,download/mongodb_mongo24.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_geo_test.cpp,+,assertSolutionExists(,251,download/mongodb_mongo24.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_geo_test.cpp,+,assertSolutionExists(,256,download/mongodb_mongo24.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_geo_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",261,download/mongodb_mongo24.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_geo_test.cpp,+,assertNumSolutions(3U);,273,download/mongodb_mongo24.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_geo_test.cpp,+,assertSolutionExists(,274,download/mongodb_mongo24.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_geo_test.cpp,+,assertSolutionExists(,281,download/mongodb_mongo24.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_geo_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",286,download/mongodb_mongo24.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_geo_test.cpp,+,assertNumSolutions(1U);,298,download/mongodb_mongo24.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_geo_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",299,download/mongodb_mongo24.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2);,4373,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4374,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4381,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2);,4389,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4390,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4396,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2);,4404,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4405,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4412,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2);,4422,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4423,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4434,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2);,4446,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4447,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4460,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2);,4470,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4471,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4480,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2);,4488,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4489,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4496,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2);,4504,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4505,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4512,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2);,4521,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4522,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4529,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2);,4537,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4538,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4545,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2);,4553,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4554,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4561,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(4);,4569,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4570,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4577,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4582,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4587,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(3);,4595,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4596,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4603,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4608,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(3);,4616,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4617,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4623,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4628,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(4);,4636,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4637,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4644,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4649,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4654,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(4);,4662,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4663,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4670,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4675,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4680,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(3);,4688,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4689,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4695,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4699,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(4);,4707,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4708,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4715,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4720,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4725,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(4);,4733,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4734,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4742,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4747,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4752,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(4);,4761,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4762,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4769,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4774,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4779,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(4);,4787,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4788,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4795,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4801,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4806,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(3);,4815,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4816,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4823,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4828,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(4);,4837,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4838,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4844,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4849,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4858,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(6);,4867,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4868,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4875,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4880,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4887,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4897,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4907,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(4);,4916,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4919,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4926,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4931,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4940,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(6);,4949,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4952,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4960,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4965,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4972,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,4982,download/mongodb_mongo25.cpp
f77527a942347313e2848e050e89480bc3cadb95,SERVER-13732 Index access plan for contained OR should consider top-level predicates,src/mongo/db/query/query_planner_test.cpp,+,"assertSolutionExists(""{cscan: {dir: 1}}}}"");",4992,download/mongodb_mongo25.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/bench/wtperf/config.c,+,"fprintf(stderr,",797,download/mongodb_mongo26.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/bench/wtperf/config.c,+,"fprintf(stderr,",804,download/mongodb_mongo26.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,"lprintf(wtperf, ret, 0, ""worker: WT_CONNECTION.open_session"");",495,download/mongodb_mongo27.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,"lprintf(wtperf, ret, 0,",501,download/mongodb_mongo27.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,"err:		lprintf(wtperf, ret, 0, ""Pre-workload traverse error"");",515,download/mongodb_mongo27.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,"lprintf(wtperf, ret, 0,",585,download/mongodb_mongo27.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,"lprintf(wtperf, ret, 0,",595,download/mongodb_mongo27.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,"lprintf(wtperf, EINVAL, 0, ""no operations scheduled"");",967,download/mongodb_mongo27.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,"lprintf(wtperf, ret, 0, ""worker: rand next failed"");",2909,download/mongodb_mongo27.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,"lprintf(wtperf, ret, 0,",2914,download/mongodb_mongo27.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,"lprintf(wtperf, ret, 0,",2924,download/mongodb_mongo27.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,static int fail_file_write(,101,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"assert(pthread_rwlock_init(lockp, NULL) == 0);",130,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,assert(pthread_rwlock_destroy(lockp) == 0);,136,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,assert(pthread_rwlock_wrlock(lockp) == 0);,142,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,assert(pthread_rwlock_unlock(lockp) == 0);,148,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"(void)wtext->err_printf(wtext, session,",266,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"wtext->strerror(wtext, NULL, errno));",271,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"fail_file_write(WT_FILE_HANDLE *file_handle, WT_SESSION *session,",337,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"if ((nr = pwrite(fail_fh->fd, addr, chunk, offset)) <= 0) {",382,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"(void)wtext->err_printf(wtext, session,",383,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"wtext->strerror(wtext, NULL, errno));",388,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"(void)wtext->msg_printf(wtext, session, ""fail_fs: open: %s"",",569,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"(void)wtext->msg_printf(wtext, session,",697,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"(void)wtext->msg_printf(wtext, session, ""  %s"",",707,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"(void)wtext->err_printf(wtext, NULL,",775,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"wtext->strerror(wtext, NULL, ENOMEM));",777,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"(void)wtext->err_printf(wtext, NULL,",786,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"wtext->strerror(wtext, NULL, ret));",788,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"(void)wtext->err_printf(wtext, NULL,",805,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"wtext->strerror(wtext, NULL, ret));",809,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"(void)wtext->err_printf(wtext, NULL,",813,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"wtext->strerror(wtext, NULL, ret));",815,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"(void)wtext->err_printf(wtext, NULL,",819,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"wtext->strerror(wtext, NULL, ret));",821,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"(void)wtext->err_printf(wtext, NULL,",838,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/ext/test/fail_fs/fail_fs.c,+,"wtext->strerror(wtext, NULL, ret));",840,download/mongodb_mongo28.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/conn/conn_dhandle.c,+,"WT_ASSERT(session,",483,download/mongodb_mongo29.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/conn/conn_dhandle.c,+,"WT_ASSERT(session,",545,download/mongodb_mongo29.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/conn/conn_dhandle.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",596,download/mongodb_mongo29.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/conn/conn_stat.c,+,__statlog_server_run_chk(WT_SESSION_IMPL *session),500,download/mongodb_mongo30.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/conn/conn_stat.c,+,if (!__statlog_server_run_chk(session)),542,download/mongodb_mongo30.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/conn/conn_sweep.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",237,download/mongodb_mongo31.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"WT_ASSERT(session, !F_ISSET_ATOMIC(ref->page, WT_PAGE_EVICT_LRU));",202,download/mongodb_mongo32.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log.c,+,"if ((ret = __wt_write(session, slot->slot_fh, offset, len, buf)) != 0)",76,download/mongodb_mongo33.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log.c,+,"WT_ERR(__wt_log_slot_join(session, rdup_len, flags, &myslot));",2139,download/mongodb_mongo33.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log.c,+,"WT_ASSERT(session, ret != 0 || !LF_ISSET(WT_LOG_FLUSH) ||",2217,download/mongodb_mongo33.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log.c,+,"WT_ASSERT(session, ret != 0 || !LF_ISSET(WT_LOG_FSYNC) ||",2219,download/mongodb_mongo33.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log.c,+,"__wt_log_cmp(&log->sync_lsn, &lsn) >= 0);",2220,download/mongodb_mongo33.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log_slot.c,+,__log_slot_dump(WT_SESSION_IMPL *session),17,download/mongodb_mongo34.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log_slot.c,+,"if (__wt_log_cmp(&slot->slot_release_lsn,",29,download/mongodb_mongo34.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log_slot.c,+,if (WT_LOG_SLOT_UNBUFFERED_ISSET(old_state)) {,163,download/mongodb_mongo34.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log_slot.c,+,__log_slot_dump(session);,178,download/mongodb_mongo34.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log_slot.c,+,__log_slot_dump(session);,363,download/mongodb_mongo34.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log_slot.c,+,"WT_ASSERT(session, mysize != 0);",486,download/mongodb_mongo34.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log_slot.c,+,if (WT_LOG_SLOT_OPEN(old_state)) {,532,download/mongodb_mongo34.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log_slot.c,+,flag_state = WT_LOG_SLOT_FLAGS(old_state);,537,download/mongodb_mongo34.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log_slot.c,+,released = WT_LOG_SLOT_RELEASED(old_state);,538,download/mongodb_mongo34.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log_slot.c,+,join_offset = WT_LOG_SLOT_JOINED(old_state);,539,download/mongodb_mongo34.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/log/log_slot.c,+,new_state = (int64_t)WT_LOG_SLOT_JOIN_REL(,544,download/mongodb_mongo34.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",341,download/mongodb_mongo35.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_ASSERT(session, lsm_tree->excl_session ==",406,download/mongodb_mongo35.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_ASSERT(session,",460,download/mongodb_mongo35.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",533,download/mongodb_mongo35.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",540,download/mongodb_mongo35.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",943,download/mongodb_mongo35.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",1014,download/mongodb_mongo35.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",1073,download/mongodb_mongo35.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",280,download/mongodb_mongo36.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",521,download/mongodb_mongo36.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/os_posix/os_mtx_cond.c,+,"WT_ASSERT(session, run_func != NULL || usecs <= WT_MILLION);",77,download/mongodb_mongo37.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/os_win/os_mtx_cond.c,+,"WT_ASSERT(session, run_func != NULL || usecs <= WT_MILLION);",74,download/mongodb_mongo38.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/schema/schema_drop.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",34,download/mongodb_mongo39.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/schema/schema_rename.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",37,download/mongodb_mongo40.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/schema/schema_worker.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",53,download/mongodb_mongo41.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/session/session_api.c,+,"WT_WITH_TABLE_WRITE_LOCK(session,",166,download/mongodb_mongo42.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/session/session_api.c,+,"WT_WITH_TABLE_WRITE_LOCK(session,",522,download/mongodb_mongo42.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/session/session_api.c,+,"WT_WITH_TABLE_WRITE_LOCK(session,",770,download/mongodb_mongo42.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/session/session_api.c,+,"WT_WITH_TABLE_WRITE_LOCK(session, ret =",859,download/mongodb_mongo42.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/session/session_api.c,+,"WT_WITH_TABLE_WRITE_LOCK_NOWAIT(session, ret,",865,download/mongodb_mongo42.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/session/session_api.c,+,"WT_WITH_TABLE_WRITE_LOCK(session,",872,download/mongodb_mongo42.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/session/session_api.c,+,"WT_WITH_TABLE_WRITE_LOCK_NOWAIT(session, ret,",877,download/mongodb_mongo42.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/session/session_dhandle.c,+,"WT_WITH_HANDLE_LIST_WRITE_LOCK(session,",436,download/mongodb_mongo43.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/utilities/util_dump.c,+,"progname, uri, session->strerror(session, ret));",119,download/mongodb_mongo44.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/utilities/util_list.c,+,"ret = list_print(session, uri, cflag, vflag);",55,download/mongodb_mongo45.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/utilities/util_list.c,+,"list_print(WT_SESSION *session, const char *uri, bool cflag, bool vflag)",101,download/mongodb_mongo45.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/utilities/util_list.c,+,"fprintf(stderr, ""%s: %s: not found\n"", progname, uri);",163,download/mongodb_mongo45.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/utilities/util_printlog.c,+,"if ((ret = __wt_txn_printlog(session, flags)) != 0)",48,download/mongodb_mongo46.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/utilities/util_rebalance.c,+,"printf(""\n"");",47,download/mongodb_mongo47.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/utilities/util_salvage.c,+,"printf(""\n"");",52,download/mongodb_mongo48.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/utilities/util_upgrade.c,+,"printf(""\n"");",47,download/mongodb_mongo49.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/src/utilities/util_verify.c,+,"printf(""\n"");",95,download/mongodb_mongo50.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(key == key_got);,147,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(key == key_got);,151,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""checked %"" PRIu64 ""/%"" PRIu64 ""\n"", count,",167,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""checked %"" PRIu64 ""/%"" PRIu64 ""\n"", count, nrecords);",171,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(count > 0);,177,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(ret == WT_NOTFOUND);,178,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(maincur2->next(maincur2) == WT_NOTFOUND);,179,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(count == idxcount);,181,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(count == idxcount);,183,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(count == idxcount);,185,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(v0 == v0_got);,207,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(v1 == v1_got);,208,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(v2 == v2_got);,209,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"testutil_assert(strcmp(big, big_got) == 0);",210,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(ret == WT_NOTFOUND);,248,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"snprintf(value, sizeof(value), ""%"" PRIu64, allow_writes);",271,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"snprintf(value, sizeof(value), ""%"" PRIu64, allow_reads);",273,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"snprintf(sarg, sizeof(sarg), ""%"" PRIu64, nops);",329,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"snprintf(rarg, sizeof(rarg), ""%"" PRIu64, opts->nrecords);",332,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(narg <= MAX_ARGS);,335,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""running a separate process with %"" PRIu64",337,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""process exited %d\n"", estatus);",344,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""Determining best range of operations until failure, """,372,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(mid > 1 && mid < MAX_OP_RANGE - 1);,395,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""Retesting around %"" PRIu64 "" operations.\n"",",397,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(got_failure);,415,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(got_success);,416,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""running: "");",430,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""%s "", *arg);",432,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""\n"");",433,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"sprintf(filename, ""%s/%s"", opts->home, STDERR_FILE);",469,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"testutil_assert(freopen(filename, ""a"", stderr) != NULL);",470,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"sprintf(filename, ""%s/%s"", opts->home, STDOUT_FILE);",471,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"testutil_assert(freopen(filename, ""a"", stdout) != NULL);",472,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"snprintf(config, sizeof(config),",473,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"fprintf(stderr, ""  BAD RETURN %d for \""%s\""\n"", \",517,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""  %"" PRIu64 ""/%"" PRIu64 ""\n"",",578,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""checkpoint failed (expected).\n"");",588,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"fprintf(stderr, ""exit early.\n"");",600,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"fprintf(stderr, ""closing after failure.\n"");",603,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,testutil_assert(false);,645,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""Number of operations until failure: %"" PRIu64",650,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt2909_checkpoint_integrity/main.c,+,"printf(""Number of records: %"" PRIu64",652,download/mongodb_mongo51.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3120_filesys/main.c,+,"snprintf(buf, sizeof(buf),",55,download/mongodb_mongo52.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3120_filesys/main.c,+,"testutil_assert(strcmp(kstr, ""a"") == 0);",85,download/mongodb_mongo52.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3120_filesys/main.c,+,"testutil_assert(strcmp(vstr, ""0"") == 0);",86,download/mongodb_mongo52.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3120_filesys/main.c,+,"testutil_assert(strcmp(kstr, ""b"") == 0);",90,download/mongodb_mongo52.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3120_filesys/main.c,+,"testutil_assert(strcmp(vstr, ""1"") == 0);",91,download/mongodb_mongo52.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3120_filesys/main.c,+,testutil_assert(cursor->next(cursor) == WT_NOTFOUND);,92,download/mongodb_mongo52.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3120_filesys/main.c,+,"printf(""Success\n"");",95,download/mongodb_mongo52.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,testutil_assert(test_index >= 0 && test_index <= 4);,164,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,"testutil_assert(strcmp(result, str_01) == 0 && exact > 0);",174,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,"testutil_assert(strcmp(result, str_01) == 0 && exact == 0);",176,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,"testutil_assert((strcmp(result, str_0123) == 0 && exact > 0) ||",178,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,"testutil_assert(strcmp(result, str_0123) == 0 && exact == 0);",181,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,"testutil_assert(strcmp(result, str_0123) == 0 && exact < 0);",183,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,testutil_assert(ret == WT_NOTFOUND);,189,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,testutil_assert(ret == 0);,191,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,testutil_assert(test_index >= 0 && test_index <= 4);,206,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,"testutil_assert(item_str_equal(&item, str_01) && exact > 0);",219,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,"testutil_assert(item_str_equal(&item, str_01) && exact == 0);",221,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,"testutil_assert((item_str_equal(&item, str_0123) && exact > 0)",223,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,"testutil_assert(item_str_equal(&item, str_0123) && exact == 0);",226,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,"testutil_assert(item_str_equal(&item, str_0123) && exact < 0);",228,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,testutil_assert(ret == WT_NOTFOUND);,236,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,testutil_assert(ret == 0);,238,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3135_search_near_collator/main.c,+,"printf(""test set %"" WT_SIZET_FMT ""\n"", i);",353,download/mongodb_mongo53.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,testutil_assert(item->size == sizeof(int32_t));,51,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,testutil_assert(itema->size == sizeof(int32_t));,58,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,testutil_assert(itemb->size == sizeof(int32_t));,59,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,"print_int_item(const char *str, const WT_ITEM *item)",64,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,testutil_assert(item->size == sizeof(int32_t));,67,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,"printf(""%s%"" PRId32, str, *(int32_t *)item->data);",68,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,"printf(""%s<empty>"", str);",70,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,"print_int_item(""index_compare: index key1 = "", &ikey1);",85,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,"print_int_item("", primary key1 = "", &pkey1);",86,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,"print_int_item("", index key2 = "", &ikey2);",87,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,"print_int_item("", primary key2 = "", &pkey2);",88,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,"printf(""\n"");",89,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,"printf(""adding new record\n"");",135,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,"printf(""positioning index cursor\n"");",150,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,"printf(""duplicating cursor\n"");",157,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,testutil_assert(item_to_int(&got) == 17);,161,download/mongodb_mongo54.cpp
9c8c662a9213b16ae206f495c875594f5f0454f0,"Import wiredtiger: e1bcc30da91eedd0b17cebb725cc7e607ffa2340 from branch mongodb-3.6

ref: 48a3cbc17f..e1bcc30da9
for: 3.5.4

WT-2790       Fix a text case false positive in test_sweep01
WT-2909       Create automatable test verifying checkpoint integrity after errors
WT-3088       bug: Don't evict a page with refs visible to readers after a split
WT-3097       Race on reconfigure or shutdown can lead to waiting for statistics log server
WT-3111       util_create() doesnt free memory assigned to ""uri""
WT-3113       Add a verbose mode to dump the cache when eviction is stuck
WT-3115       Change the dhandle lock to a read/write lock
WT-3120       Fix ordering problem in connection_close for filesystem loaded in an extension
WT-3135       search_near() for index with custom collator
WT-3137       Hang in __log_slot_join/__log_slot_switch_internal
WT-3139       Enhance wtperf to support periodic table scans
WT-3144       bug fix: random cursor returns not-found when descending to an empty page
WT-3148       Improve eviction efficiency with many small trees
WT-3149       Change eviction to start new walks from a random place in the tree
WT-3150       Reduce impact of checkpoints on eviction server
WT-3152       Convert table lock from a spinlock to a read write lock
WT-3156       Assertion in log_write fires after write failure
WT-3157       checkpoint/transaction integrity issue when writes fail.
WT-3159       Incorrect key for index containing multiple variable sized entries
WT-3161       checkpoint hang after write failure injection.
WT-3164       Ensure all relevant btree fields are reset on checkpoint error
WT-3170       Clear the eviction walk point while populating from a tree
WT-3173       Add runtime detection for s390x CRC32 hardware support
WT-3174       Coverity/lint cleanup
WT-3175       New hang in internal page split
WT-3179       Test bug: clang sanitizer failure in fail_fs
WT-3180       Fault injection tests should only run as ""long"" tests and should not create core files
WT-3184       Problem duplicating index cursor with custom collator
WT-3186       Fix error path and panic detection in logging loops",src/third_party/wiredtiger/test/csuite/wt3184_dup_index_collator/main.c,+,testutil_assert(item_to_int(&got) == 17);,163,download/mongodb_mongo54.cpp
3352feab5733189d732cfc73053f874011d1cb86,SERVER-27973 make ClusterClientCursor own ClusterClientCursorParams and pass the params by reference to RouterStageMerge/ARM,src/mongo/s/query/async_results_merger_test.cpp,+,ASSERT(!statusWithNext.isOK());,629,download/mongodb_mongo55.cpp
3352feab5733189d732cfc73053f874011d1cb86,SERVER-27973 make ClusterClientCursor own ClusterClientCursorParams and pass the params by reference to RouterStageMerge/ARM,src/mongo/s/query/async_results_merger_test.cpp,+,"ASSERT_EQ(statusWithNext.getStatus().code(),",630,download/mongodb_mongo55.cpp
3352feab5733189d732cfc73053f874011d1cb86,SERVER-27973 make ClusterClientCursor own ClusterClientCursorParams and pass the params by reference to RouterStageMerge/ARM,src/mongo/s/query/async_results_merger_test.cpp,+,ASSERT(_params->viewDefinition);,634,download/mongodb_mongo55.cpp
3352feab5733189d732cfc73053f874011d1cb86,SERVER-27973 make ClusterClientCursor own ClusterClientCursorParams and pass the params by reference to RouterStageMerge/ARM,src/mongo/s/query/cluster_find.cpp,+,<< ErrorCodes::errorString(next.getStatus().code())};,248,download/mongodb_mongo56.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/member_config_test.cpp,+,"ASSERT_EQUALS(0.0, mc.getPriority());",129,download/mongodb_mongo57.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/member_config_test.cpp,+,"ASSERT_EQUALS(1.0, mc.getPriority());",136,download/mongodb_mongo57.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(zeroConfig.initialize(BSON(""_id""",143,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(oneConfig.initialize(BSON(""_id""",159,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(twoConfig.initialize(BSON(""_id""",175,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_OK(,193,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_OK(,196,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_EQUALS(,199,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(oldConfig.initialize(BSON(""_id""",687,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(zeroConfig.initialize(BSON(""_id""",701,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(oneConfig.initialize(BSON(""_id""",716,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(twoConfig.initialize(BSON(""_id""",731,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_OK(oldConfig.validate());,747,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_OK(zeroConfig.validate());,748,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_OK(oneConfig.validate());,749,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_OK(twoConfig.validate());,750,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_OK(validateConfigForReconfig(,751,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_OK(validateConfigForReconfig(,754,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_EQUALS(ErrorCodes::InvalidReplicaSetConfig,",757,download/mongodb_mongo58.cpp
babffe27e6e60d55519d2d1822e462bdcffdc34a,"SERVER-19491 Require that arbiters have priority 0 or 1.

Configurations with arbiters having priority 1 will be silently changed to 0.
Configurations with arbiters having priority other than 0 or 1 will be
rejected during initiate or reconfigure.",src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_EQUALS(ErrorCodes::InvalidReplicaSetConfig,",762,download/mongodb_mongo58.cpp
89d37b751cb9404a81a33f4effc5c4657a17b359,SERVER-28017 ne should respect the collection default collation,src/mongo/db/matcher/expression_array_test.cpp,+,"ASSERT(eq->init(""b"", baseOperand[""b""]).isOK());",165,download/mongodb_mongo59.cpp
89d37b751cb9404a81a33f4effc5c4657a17b359,SERVER-28017 ne should respect the collection default collation,src/mongo/db/matcher/expression_array_test.cpp,+,"ASSERT(op.init(""a"", eq.release()).isOK());",167,download/mongodb_mongo59.cpp
89d37b751cb9404a81a33f4effc5c4657a17b359,SERVER-28017 ne should respect the collection default collation,src/mongo/db/matcher/expression_array_test.cpp,+,"ASSERT(op.matchesSingleElement(match[""a""]));",170,download/mongodb_mongo59.cpp
89d37b751cb9404a81a33f4effc5c4657a17b359,SERVER-28017 ne should respect the collection default collation,src/mongo/db/matcher/expression_array_test.cpp,+,"ASSERT(op.matchesSingleElement(notMatch[""a""]));",171,download/mongodb_mongo59.cpp
89d37b751cb9404a81a33f4effc5c4657a17b359,SERVER-28017 ne should respect the collection default collation,src/mongo/db/matcher/expression_tree_test.cpp,+,"ASSERT(eq->init(""a"", baseOperand[""a""]).isOK());",87,download/mongodb_mongo60.cpp
89d37b751cb9404a81a33f4effc5c4657a17b359,SERVER-28017 ne should respect the collection default collation,src/mongo/db/matcher/expression_tree_test.cpp,+,ASSERT(notOp.init(eq.release()).isOK());,89,download/mongodb_mongo60.cpp
89d37b751cb9404a81a33f4effc5c4657a17b359,SERVER-28017 ne should respect the collection default collation,src/mongo/db/matcher/expression_tree_test.cpp,+,"ASSERT(!notOp.matchesBSON(BSON(""a""",92,download/mongodb_mongo60.cpp
38c0eb538d0fd390c6cb9ce9ae9894153f6e8ef5,"SERVER-28004 Add build system support for iOS-related Darwin variants

Use a SCons invocation like the following to attach to the correct SDK
and targeting options.

// macOS native build:
> python buildscripts/scons.py CCFLAGS=""-isysroot `xcrun --sdk macosx --show-sdk-path` -mmacosx-version-min=10.10"" LINKFLAGS=""-Wl,-syslibroot,`xcrun --sdk macosx --show-sdk-path` -mmacosx-version-min=10.10"" CC=`xcrun -f --sdk macosx clang` CXX=`xcrun -f --sdk macosx clang++`all

// iOS Cross:
> python buildscripts/scons.py CCFLAGS=""-arch arm64 -isysroot `xcrun --sdk iphoneos --show-sdk-path` -miphoneos-version-min=10.2"" LINKFLAGS=""-arch arm64 -Wl,-syslibroot,`xcrun --sdk iphoneos --show-sdk-path` -miphoneos-version-min=10.2"" CC=`xcrun -f --sdk iphoneos clang` CXX=`xcrun -f --sdk iphoneos clang++` TARGET_OS=iOS TARGET_ARCH=aarch64 all

// iOS Simulator Cross:
> python buildscripts/scons.py CCFLAGS=""-isysroot `xcrun --sdk iphonesimulator --show-sdk-path` -miphoneos-version-min=10.2"" LINKFLAGS=""-Wl,-syslibroot,`xcrun --sdk iphonesimulator --show-sdk-path` -miphoneos-version-min=10.2"" CC=`xcrun -f --sdk iphonesimulator clang` CXX=`xcrun -f --sdk iphonesimulator clang++` TARGET_OS=iOS-sim all

// tvOS Cross:
> python buildscripts/scons.py CCFLAGS=""-arch arm64 -isysroot `xcrun --sdk appletvos --show-sdk-path` -mtvos-version-min=10.1"" LINKFLAGS=""-arch arm64 -Wl,-syslibroot,`xcrun --sdk appletvos --show-sdk-path` -mtvos-version-min=10.1"" CC=`xcrun -f --sdk appletvos clang` CXX=`xcrun -f --sdk appletvos clang++` TARGET_OS=tvOS TARGET_ARCH=aarch64 all

// tvOS Simulator Cross:
> python buildscripts/scons.py CCFLAGS=""-isysroot `xcrun --sdk appletvsimulator --show-sdk-path` -mtvos-version-min=10.1"" LINKFLAGS=""-Wl,-syslibroot,`xcrun --sdk appletvsimulator --show-sdk-path` -mtvos-version-min=10.1"" CC=`xcrun -f --sdk appletvsimulator clang` CXX=`xcrun -f --sdk appletvsimulator clang++` TARGET_OS=tvOS-sim

To run the resulting binaries under the simulator, boot a particular
target machine with 'xcrun simctl':

> xcrun simctl boot 'Apple TV 1080p'

Find the ID of the instance that was booted:

> xcrun simctl list | grep 'Apple TV 1080p'

And then spawn the intended binary inside the simulator with that ID:

> xcrun simctl spawn CEEC6346-6D21-4092-A091-E5A3862A357F build/opt/mongo/mongod --dbpath=tmp",src/mongo/unittest/death_test.cpp,+,"log() << ""Skipping death test on tvOS"";",70,download/mongodb_mongo61.cpp
7d36244539cff23adb813f9cc006b1e9fe4305e0,SERVER-27746: Integrate LogicalClock with oplog,src/mongo/db/logical_clock.cpp,+,_clusterTime = _makeSignedLogicalTime(newTime);,96,download/mongodb_mongo62.cpp
7d36244539cff23adb813f9cc006b1e9fe4305e0,SERVER-27746: Integrate LogicalClock with oplog,src/mongo/db/logical_clock.cpp,+,fassertFailed(17449);,126,download/mongodb_mongo62.cpp
7d36244539cff23adb813f9cc006b1e9fe4305e0,SERVER-27746: Integrate LogicalClock with oplog,src/mongo/db/repl/oplog.cpp,+,LogicalClock::get(service)->advanceClusterTimeFromTrustedSource(LogicalTime(newTime));,1115,download/mongodb_mongo63.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/data_replicator_external_state_impl.cpp,+,"log() << ""Canceling oplog query due to OplogQueryMetadata. We have to choose a new """,101,download/mongodb_mongo64.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/data_replicator_external_state_impl.cpp,+,"log() << ""Canceling oplog query due to ReplSetMetadata. We have to choose a new sync """,107,download/mongodb_mongo64.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher.cpp,+,StatusWith<boost::optional<rpc::OplogQueryMetadata>> parseOplogQueryMetadata(,196,download/mongodb_mongo65.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher.cpp,+,auto oqMetadataResult = parseOplogQueryMetadata(queryResponse);,472,download/mongodb_mongo65.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher.cpp,+,"error() << ""invalid oplog query metadata from sync source "" << _fetcher->getSource() << "": """,474,download/mongodb_mongo65.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"{makeCursorResponse(0, {makeNoopOplogEntry(lastFetched)}),",553,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(ErrorCodes::NoSuchKey, shutdownState->getStatus());",557,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(-1, dataReplicatorExternalState->oqMetadataProcessed.getPrimaryIndex());",573,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_OK(replMetadata.writeToMetadata(&bob));,581,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_OK(oqMetadata.writeToMetadata(&bob));,582,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_OK(processSingleBatch({makeCursorResponse(0, {makeNoopOplogEntry(lastFetched)}),",584,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_TRUE(dataReplicatorExternalState->metadataWasProcessed);,588,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(replMetadata.getPrimaryIndex(),",589,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(oqMetadata.getPrimaryIndex(),",591,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_OK(replMetadata.writeToMetadata(&bob));,612,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_OK(oqMetadata.writeToMetadata(&bob));,613,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(ErrorCodes::OplogStartMissing,",615,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"{makeCursorResponse(0, {makeNoopOplogEntry(Seconds(456), lastFetched.value)}),",617,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_FALSE(dataReplicatorExternalState->metadataWasProcessed);,621,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_OK(processSingleBatch({makeCursorResponse(0, {makeNoopOplogEntry(lastFetched)}),",625,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_FALSE(dataReplicatorExternalState->metadataWasProcessed);,629,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_OK(replMetadata->writeToMetadata(&bob));,746,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_OK(oqMetadata->writeToMetadata(&bob));,749,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(source, dataReplicatorExternalState->lastSyncSourceChecked);",799,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(oqMetadata.getLastOpApplied(), dataReplicatorExternalState->syncSourceLastOpTime);",800,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_TRUE(dataReplicatorExternalState->syncSourceHasSyncSource);,801,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(source, dataReplicatorExternalState->lastSyncSourceChecked);",837,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(oqMetadata.getLastOpApplied(), dataReplicatorExternalState->syncSourceLastOpTime);",838,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_FALSE(dataReplicatorExternalState->syncSourceHasSyncSource);,839,download/mongodb_mongo66.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(0, getReplCoord()->getTerm());",3842,download/mongodb_mongo67.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(0, getReplCoord()->getTerm());",3858,download/mongodb_mongo67.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(time, getReplCoord()->getLastCommittedOpTime());",3908,download/mongodb_mongo67.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(time, getReplCoord()->getCurrentCommittedSnapshotOpTime());",3909,download/mongodb_mongo67.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(time, getReplCoord()->getLastCommittedOpTime());",3926,download/mongodb_mongo67.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(time, getReplCoord()->getCurrentCommittedSnapshotOpTime());",3927,download/mongodb_mongo67.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(OpTime(Timestamp(0, 0), 0), getReplCoord()->getLastCommittedOpTime());",3948,download/mongodb_mongo67.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(OpTime(Timestamp(0, 0), 0), getReplCoord()->getLastCommittedOpTime());",3966,download/mongodb_mongo67.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(OpTime(Timestamp(0, 0), 0), getReplCoord()->getLastCommittedOpTime());",3984,download/mongodb_mongo67.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(replMetadata.getValue().getTerm(), 0);",4108,download/mongodb_mongo67.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(oqMetadataStatus.getStatus(), ErrorCodes::NoSuchKey);",4863,download/mongodb_mongo67.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,OplogQueryMetadata makeOplogQueryMetadata(OpTime lastAppliedOpTime = OpTime()) {,167,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"return OplogQueryMetadata(OpTime(), lastAppliedOpTime, -1, -1, -1);",168,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(,737,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""h2""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",738,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(,739,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""h3""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",740,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(,5366,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""host4""), OpTime(), metadata, makeOplogQueryMetadata(), now()));",5367,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""host2""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",5376,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",5406,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied),",5409,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,stopCapturingLogMessages();,5411,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",5412,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,startCapturingLogMessages();,5415,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",5416,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"makeOplogQueryMetadata(fresherLastOpTimeApplied),",5456,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,stopCapturingLogMessages();,5458,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",5459,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,startCapturingLogMessages();,5462,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,ASSERT_FALSE(,5463,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""host2""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",5499,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""host2""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",5533,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""host2""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",5539,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""host2""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",5546,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""host2""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",5578,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""host2""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",5608,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""host2""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",5653,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"HostAndPort(""host2""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",5704,download/mongodb_mongo68.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"OplogQueryMetadata makeOplogQueryMetadata(OpTime lastAppliedOpTime = OpTime(),",175,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"return OplogQueryMetadata(OpTime(), lastAppliedOpTime, -1, primaryIndex, syncSourceIndex);",178,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""h2""),",784,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(oldOpTime),",787,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""h3""),",789,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(newOpTime),",792,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3253,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied),",3256,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,stopCapturingLogMessages();,3258,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",3259,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,startCapturingLogMessages();,3262,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3263,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3308,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied, 1),",3311,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3313,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,ASSERT_FALSE(,3327,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied, 2, 2),",3331,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3333,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3348,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied),",3351,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3353,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,makeOplogQueryMetadata(,3365,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(,3368,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,ASSERT_FALSE(,3383,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(newerThanLastOpTimeApplied),",3387,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,ASSERT_FALSE(,3389,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3425,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied),",3428,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3431,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3466,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied),",3469,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3471,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3480,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied),",3483,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3485,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3495,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied),",3498,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,stopCapturingLogMessages();,3500,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",3501,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,startCapturingLogMessages();,3503,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3504,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3538,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied),",3541,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,stopCapturingLogMessages();,3543,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",3544,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,startCapturingLogMessages();,3546,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3547,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,ASSERT_FALSE(,3583,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(fresherLastOpTimeApplied),",3587,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,stopCapturingLogMessages();,3589,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",3590,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,startCapturingLogMessages();,3592,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,ASSERT_FALSE(,3593,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3629,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied),",3632,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,stopCapturingLogMessages();,3634,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",3635,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,startCapturingLogMessages();,3638,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",3639,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"HostAndPort(""host2""), OpTime(), makeReplSetMetadata(), makeOplogQueryMetadata(), now()));",3652,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,ASSERT_TRUE(getTopoCoord().shouldChangeSyncSource(,3661,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"HostAndPort(""host4""), OpTime(), replMetadata, makeOplogQueryMetadata(), now()));",3662,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",4589,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied),",4592,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",4595,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",4628,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"makeOplogQueryMetadata(lastOpTimeApplied),",4631,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_FALSE(getTopoCoord().shouldChangeSyncSource(HostAndPort(""host2""),",4635,download/mongodb_mongo69.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/rpc/metadata/repl_set_metadata_test.cpp,+,ASSERT_OK(status.getStatus());,97,download/mongodb_mongo70.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/rpc/metadata/repl_set_metadata_test.cpp,+,"ASSERT_EQ(metadata.getConfigVersion(), 6);",100,download/mongodb_mongo70.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/rpc/metadata/repl_set_metadata_test.cpp,+,"ASSERT_EQ(metadata.getReplicaSetId(), id);",101,download/mongodb_mongo70.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/rpc/metadata/repl_set_metadata_test.cpp,+,"ASSERT_EQ(metadata.getTerm(), 3);",102,download/mongodb_mongo70.cpp
e02c45b789458bb5bb3ba8350f4fd91305933deb,SERVER-27935 Fix serialization of concurrent fsyncLock executions,src/mongo/db/commands/fsync.cpp,+,"log() << ""mongod is locked and no writes are allowed. db.fsyncUnlock() to unlock"";",193,download/mongodb_mongo71.cpp
e02c45b789458bb5bb3ba8350f4fd91305933deb,SERVER-27935 Fix serialization of concurrent fsyncLock executions,src/mongo/db/commands/fsync.cpp,+,"log() << ""Lock count is "" << getLockCount();",194,download/mongodb_mongo71.cpp
e02c45b789458bb5bb3ba8350f4fd91305933deb,SERVER-27935 Fix serialization of concurrent fsyncLock executions,src/mongo/db/commands/fsync.cpp,+,"log() << ""    For more info see "" << FSyncCommand::url();",195,download/mongodb_mongo71.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks.cpp,+,status = newConfig.checkIfWriteConcernCanBeSatisfied(newConfig.getDefaultWriteConcern());,266,download/mongodb_mongo72.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks.cpp,+,status = newConfig.checkIfWriteConcernCanBeSatisfied(newConfig.getDefaultWriteConcern());,293,download/mongodb_mongo72.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_OK(,120,download/mongodb_mongo73.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_EQUALS(,133,download/mongodb_mongo73.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(oldConfig.initialize(BSON(""_id""",723,download/mongodb_mongo73.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(newConfig.initialize(BSON(""_id""",732,download/mongodb_mongo73.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_EQUALS(,744,download/mongodb_mongo73.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_EQUALS(,750,download/mongodb_mongo73.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(oldConfig.initialize(BSON(""_id""",865,download/mongodb_mongo73.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(newConfig.initialize(BSON(""_id""",874,download/mongodb_mongo73.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_OK(validateConfigForStartUp(,886,download/mongodb_mongo73.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks_test.cpp,+,"ASSERT_OK(newConfig.initialize(BSON(""_id""",939,download/mongodb_mongo73.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks_test.cpp,+,ASSERT_OK(validateConfigForHeartbeatReconfig(,953,download/mongodb_mongo73.cpp
489cd07d2a3711286debae56f28416d7ba290648,"SERVER-27860 remove invariants to prevent ShardLocal running on shards and remove ""-OnConfig"" function name suffixes",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"configShard->runBatchWriteCommand(txn, batchRequest, Shard::RetryPolicy::kNotIdempotent);",1402,download/mongodb_mongo74.cpp
489cd07d2a3711286debae56f28416d7ba290648,"SERVER-27860 remove invariants to prevent ShardLocal running on shards and remove ""-OnConfig"" function name suffixes",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"configShard->runBatchWriteCommand(txn, request, Shard::RetryPolicy::kNoRetry);",1424,download/mongodb_mongo74.cpp
489cd07d2a3711286debae56f28416d7ba290648,"SERVER-27860 remove invariants to prevent ShardLocal running on shards and remove ""-OnConfig"" function name suffixes",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"configShard->runBatchWriteCommand(txn, request, Shard::RetryPolicy::kIdempotent);",1507,download/mongodb_mongo74.cpp
489cd07d2a3711286debae56f28416d7ba290648,"SERVER-27860 remove invariants to prevent ShardLocal running on shards and remove ""-OnConfig"" function name suffixes",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"configShard->runBatchWriteCommand(txn, request, Shard::RetryPolicy::kIdempotent);",1539,download/mongodb_mongo74.cpp
489cd07d2a3711286debae56f28416d7ba290648,"SERVER-27860 remove invariants to prevent ShardLocal running on shards and remove ""-OnConfig"" function name suffixes",src/mongo/s/client/shard.cpp,+,"BatchedCommandResponse Shard::runBatchWriteCommand(OperationContext* txn,",191,download/mongodb_mongo75.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/commands/cluster_aggregate.cpp,+,"uassertStatusOK(storePossibleCursor(txn,",212,download/mongodb_mongo76.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/commands/cluster_aggregate.cpp,+,"result = uassertStatusOK(storePossibleCursor(txn,",414,download/mongodb_mongo76.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,231,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,279,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,307,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,333,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,356,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,399,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,429,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,451,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,480,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,523,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,552,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,577,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,607,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,637,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,667,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,689,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,708,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,736,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,754,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,778,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,805,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,834,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,ASSERT_NOT_OK(arm->nextEvent(nullptr).getStatus());,837,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,"ASSERT_EQ(ErrorCodes::ShutdownInProgress, arm->nextEvent(nullptr).getStatus());",863,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,872,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,902,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,926,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,966,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,982,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1013,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,ASSERT_NOT_OK(arm->nextEvent(nullptr).getStatus());,1025,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1045,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1065,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1091,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1116,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1138,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1158,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1181,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1204,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1227,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1246,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1266,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1281,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1298,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1303,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1310,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1329,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1337,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1343,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1349,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1368,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1382,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1388,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1394,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1398,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1413,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1423,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1461,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1478,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1522,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,"ASSERT_EQ(ErrorCodes::BadValue, arm->nextEvent(nullptr).getStatus());",1525,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1539,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent(nullptr));,1543,download/mongodb_mongo77.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/cluster_cursor_manager_test.cpp,+,"assertGet(getManager()->registerCursor(nullptr,",509,download/mongodb_mongo78.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/cluster_cursor_manager_test.cpp,+,"assertGet(getManager()->registerCursor(nullptr,",546,download/mongodb_mongo78.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/cluster_cursor_manager_test.cpp,+,"assertGet(getManager()->registerCursor(nullptr,",572,download/mongodb_mongo78.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/cluster_cursor_manager_test.cpp,+,"assertGet(getManager()->registerCursor(nullptr,",586,download/mongodb_mongo78.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/cluster_cursor_manager_test.cpp,+,ASSERT_OK(pinnedCursor.getValue().next(nullptr).getStatus());,593,download/mongodb_mongo78.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/cluster_cursor_manager_test.cpp,+,ASSERT_OK(pinnedCursor.getValue().next(nullptr).getStatus());,610,download/mongodb_mongo78.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/cluster_cursor_manager_test.cpp,+,ASSERT_OK(pinnedCursor.getValue().next(nullptr).getStatus());,627,download/mongodb_mongo78.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/cluster_cursor_manager_test.cpp,+,ASSERT_OK(pinnedCursor.getValue().next(nullptr).getStatus());,644,download/mongodb_mongo78.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/cluster_cursor_manager_test.cpp,+,ASSERT_OK(registeredCursor.getValue().next(nullptr).getStatus());,752,download/mongodb_mongo78.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/cluster_cursor_manager_test.cpp,+,ASSERT_OK(registeredCursor.getValue().next(nullptr).getStatus());,784,download/mongodb_mongo78.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/query/cluster_cursor_manager_test.cpp,+,"ASSERT_OK(getManager()->registerCursor(nullptr,",868,download/mongodb_mongo78.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/db/logical_clock.cpp,+,"LogicalClock::LogicalClock(ServiceContext* service,",56,download/mongodb_mongo79.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/db/repl/replication_coordinator_test_fixture.cpp,+,ASSERT_TRUE(storageInterface == StorageInterface::get(service));,121,download/mongodb_mongo80.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/db/repl/rs_rollback_test.cpp,+,void resetLastOpTimesFromOplog(OperationContext* txn) override {},83,download/mongodb_mongo81.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/dbtests/pdfiletests.cpp,+,"ASSERT(fixDocumentForInsert(_txn.getServiceContext(), BSON(""_id"" << 5)).isOK());",146,download/mongodb_mongo82.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/dbtests/pdfiletests.cpp,+,ASSERT(,147,download/mongodb_mongo82.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/dbtests/pdfiletests.cpp,+,ASSERT(,149,download/mongodb_mongo82.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/dbtests/pdfiletests.cpp,+,"ASSERT(!fixDocumentForInsert(_txn.getServiceContext(), BSON(""_id"" << BSON(""$oid"" << 5)))",151,download/mongodb_mongo82.cpp
b65f66e20f7ba380b2202947b68db89d42c45931,SERVER-27940: fix deadlock in ReplicaSetMonitorManager on shutdown,src/mongo/client/replica_set_monitor_manager.cpp,+,"LOG(1) << ""Shutting down task executor used for monitoring replica sets"";",173,download/mongodb_mongo83.cpp
b65f66e20f7ba380b2202947b68db89d42c45931,SERVER-27940: fix deadlock in ReplicaSetMonitorManager on shutdown,src/mongo/client/replica_set_monitor_manager.cpp,+,"LOG(1) << ""Shutting down task executor used for monitoring replica sets"";",190,download/mongodb_mongo83.cpp
bae38e4ebedfe66f66f3cef6ee0e9d12ad79b116,SERVER-27382 Get rid of the DBConfig::reload method,src/mongo/s/config.cpp,+,Grid::get(txn)->catalogCache()->invalidate(_name);,216,download/mongodb_mongo84.cpp
92b04fe8dc31e7ec90bc97ad8722768d7732717e,SERVER-27382 Get rid of DBConfig::reload from ParallelSortClusteredCursor,src/mongo/client/parallel.cpp,+,Grid::get(txn)->catalogCache()->invalidate(staleNS.db());,343,download/mongodb_mongo85.cpp
92b04fe8dc31e7ec90bc97ad8722768d7732717e,SERVER-27382 Get rid of DBConfig::reload from ParallelSortClusteredCursor,src/mongo/client/parallel.cpp,+,"log() << ""cannot reload database info for stale namespace "" << staleNS.ns();",366,download/mongodb_mongo85.cpp
92b04fe8dc31e7ec90bc97ad8722768d7732717e,SERVER-27382 Get rid of DBConfig::reload from ParallelSortClusteredCursor,src/mongo/client/parallel.cpp,+,"LOG(1) << ""stale config of ns "" << staleNS",662,download/mongodb_mongo85.cpp
92b04fe8dc31e7ec90bc97ad8722768d7732717e,SERVER-27382 Get rid of DBConfig::reload from ParallelSortClusteredCursor,src/mongo/client/parallel.cpp,+,"LOG(1) << ""stale config of ns "" << staleNS",889,download/mongodb_mongo85.cpp
7f71474649f01b8914b4284be44cbe325c1458d0,SERVER-27382 Get rid of DBConfig::getChunkManagerOrPrimary,src/mongo/s/commands/cluster_write.cpp,+,"updateChunkWriteStatsAndSplitIfNeeded(txn, scopedCM.cm().get(), chunk.get(), it->second);",209,download/mongodb_mongo86.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter.cpp,+,dassert(collectionShardingState != nullptr);  // every collection gets one,104,download/mongodb_mongo87.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter.cpp,+,if (!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(_nss)) {,228,download/mongodb_mongo87.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_FALSE(rangeDeleter.cleanupNextRange(operationContext(), 1));",107,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_BSONOBJ_EQ(insertedDoc,",116,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_FALSE(rangeDeleter.cleanupNextRange(operationContext(), 1));",120,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_BSONOBJ_EQ(insertedDoc,",122,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_BSONOBJ_EQ(insertedDoc,",132,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 1));",137,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,ASSERT_TRUE(,138,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_FALSE(rangeDeleter.cleanupNextRange(operationContext(), 1));",141,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(3ULL,",150,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 100));",155,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(0ULL,",156,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_FALSE(rangeDeleter.cleanupNextRange(operationContext(), 100));",159,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(3ULL,",169,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 1));",174,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(2ULL,",175,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 1));",178,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(1ULL,",179,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 1));",182,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(0ULL,",183,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_FALSE(rangeDeleter.cleanupNextRange(operationContext(), 1));",186,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(6ULL,",199,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 100));",207,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(0ULL,",208,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(3ULL,",210,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 100));",213,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 100));",214,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(0ULL,",215,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_FALSE(rangeDeleter.cleanupNextRange(operationContext(), 1));",218,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(5ULL,",231,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 2));",236,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(3ULL,",237,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 2));",244,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(1ULL,",245,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 2));",248,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(1ULL,",249,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_FALSE(rangeDeleter.cleanupNextRange(operationContext(), 2));",252,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,ASSERT_BSONOBJ_EQ(,254,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(4ULL,",265,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_TRUE(rangeDeleter.cleanupNextRange(operationContext(), 2));",270,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(2ULL,",271,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_FALSE(rangeDeleter.cleanupNextRange(operationContext(), 2));",276,download/mongodb_mongo88.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter_test.cpp,+,"ASSERT_EQUALS(2ULL,",278,download/mongodb_mongo88.cpp
ad9f558ae842b34a5d4a38a87ac603f1aabab560,SERVER-27297 always log CollectionCloner failure statuses,src/mongo/db/repl/collection_cloner.cpp,+,"log() << ""CollectionCloner ns:"" << _destNss",573,download/mongodb_mongo89.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/client/parallel.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, staleNS.db());",359,download/mongodb_mongo90.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/client/parallel.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",399,download/mongodb_mongo90.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/client/parallel.cpp,+,uassertStatusOK(scopedCMStatus.getStatus());,488,download/mongodb_mongo90.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/client/parallel.cpp,+,"uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, i->first));",952,download/mongodb_mongo90.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/db/s/balancer/balancer.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",616,download/mongodb_mongo91.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/catalog/catalog_cache.cpp,+,CatalogCache::CatalogCache() = default;,44,download/mongodb_mongo92.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/catalog/catalog_cache.cpp,+,CatalogCache::~CatalogCache() = default;,46,download/mongodb_mongo92.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/catalog/catalog_cache.cpp,+,"auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName.toString());",58,download/mongodb_mongo92.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/chunk_manager.cpp,+,"auto config = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db()));",522,download/mongodb_mongo93.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/client/version_manager.cpp,+,Grid::get(txn)->catalogCache()->invalidate(nss.db());,392,download/mongodb_mongo94.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/commands/cluster_commands_common.cpp,+,Grid::get(txn)->catalogCache()->invalidate(nss.db());,58,download/mongodb_mongo95.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db());,480,download/mongodb_mongo96.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",1015,download/mongodb_mongo97.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/commands/strategy.cpp,+,Grid::get(txn)->catalogCache()->invalidate(NamespaceString(staleNS).db());,336,download/mongodb_mongo98.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/commands/strategy.cpp,+,"auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",390,download/mongodb_mongo98.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,ASSERT_FALSE(arm->ready());,1521,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent());,1522,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,"scheduleErrorResponse({ErrorCodes::BadValue, ""bad thing happened""});",1523,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,"ASSERT_EQ(ErrorCodes::BadValue, arm->nextEvent().getStatus());",1525,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,ASSERT_FALSE(arm->ready());,1536,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,auto readyEvent = unittest::assertGet(arm->nextEvent());,1539,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,"scheduleErrorResponse({ErrorCodes::NotMasterNoSlaveOk, ""not master and not slave""});",1540,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,readyEvent = unittest::assertGet(arm->nextEvent());,1543,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,ASSERT_TRUE(arm->ready());,1550,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,"ASSERT_BSONOBJ_EQ(fromjson(""{_id: 1}""), *unittest::assertGet(arm->nextReady()).getResult());",1551,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,ASSERT_TRUE(arm->ready());,1552,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,"ASSERT_BSONOBJ_EQ(fromjson(""{_id: 2}""), *unittest::assertGet(arm->nextReady()).getResult());",1553,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,ASSERT_TRUE(arm->ready());,1554,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,ASSERT_TRUE(arm->remotesExhausted());,1555,download/mongodb_mongo99.cpp
5a35a6c425b815ecf7795d8e2706b9f3e82c7ce6,SERVER-27701 fix race in AsyncResultsMerger error handling,src/mongo/s/query/async_results_merger_test.cpp,+,ASSERT_TRUE(unittest::assertGet(arm->nextReady()).isEOF());,1556,download/mongodb_mongo99.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,+,"auto status = grid.catalogCache()->getDatabase(txn, staleNS.db().toString());",360,download/mongodb_mongo100.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,+,"const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, shardId));",400,download/mongodb_mongo100.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,+,"auto status = grid.catalogCache()->getDatabase(txn, nss.db().toString());",493,download/mongodb_mongo100.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,+,config = uassertStatusOK(status);,495,download/mongodb_mongo100.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,+,"const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, i->first));",953,download/mongodb_mongo100.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/db/s/balancer/balancer.cpp,+,"auto scopedChunkManager = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",617,download/mongodb_mongo101.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/catalog/catalog_cache.cpp,+,CatalogCache::CatalogCache() {},45,download/mongodb_mongo102.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/catalog/catalog_cache.cpp,+,"auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName);",57,download/mongodb_mongo102.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/chunk_manager.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString()));",522,download/mongodb_mongo103.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/client/version_manager.cpp,+,"auto status = grid.catalogCache()->getDatabase(txn, nsToDatabase(ns));",256,download/mongodb_mongo104.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/client/version_manager.cpp,+,grid.catalogCache()->invalidate(nss.db().toString());,433,download/mongodb_mongo104.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/client/version_manager.cpp,+,"auto status = grid.catalogCache()->getDatabase(txn, nss.db().toString());",435,download/mongodb_mongo104.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db().toString());,480,download/mongodb_mongo105.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",1015,download/mongodb_mongo106.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/strategy.cpp,+,"LOG(1) << ""Database does not exist or collection no longer sharded after a """,335,download/mongodb_mongo107.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/strategy.cpp,+,"auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",390,download/mongodb_mongo107.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,return getLogicalClock(service).get();,44,download/mongodb_mongo108.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,auto& clock = getLogicalClock(service);,52,download/mongodb_mongo108.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,"LogicalClock::LogicalClock(ServiceContext* serviceContext,",56,download/mongodb_mongo108.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,SignedLogicalTime LogicalClock::_makeSignedLogicalTime(LogicalTime logicalTime) {,68,download/mongodb_mongo108.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,"return SignedLogicalTime(logicalTime, _timeProofService->getProof(logicalTime));",69,download/mongodb_mongo108.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,"clusterTimestamp = LogicalTime(Timestamp(wallClockSecs, 1));",102,download/mongodb_mongo108.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,_clusterTime = _makeSignedLogicalTime(clusterTimestamp);,109,download/mongodb_mongo108.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,_clusterTime = _makeSignedLogicalTime(newTime);,115,download/mongodb_mongo108.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,SignedLogicalTime makeSignedLogicalTime(LogicalTime logicalTime) {,63,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,"return SignedLogicalTime(logicalTime, _timeProofService->getProof(logicalTime));",64,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,auto time = LogicalTime(tX);,79,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,"LogicalClock logicalClock(&serviceContext, std::move(pTps), true);",81,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,ASSERT_TRUE(storedTime.getTime() == time);,85,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,ASSERT_TRUE(t1 == t2.getTime());,92,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,ASSERT_TRUE(t3 == t1);,96,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,ASSERT_TRUE(t3 == t1);,100,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,ASSERT_TRUE(t3 == t1);,104,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,SignedLogicalTime l1 = makeSignedLogicalTime(t1);,111,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,ASSERT_OK(getClock()->advanceClusterTime(l1));,112,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock_test.cpp,+,ASSERT_TRUE(l1.getTime() == l2.getTime());,114,download/mongodb_mongo109.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_time.cpp,+,const LogicalTime LogicalTime::kUninitialized = LogicalTime();,36,download/mongodb_mongo110.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(tX == lT.asTimestamp());,92,download/mongodb_mongo111.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, staleNS.db());",359,download/mongodb_mongo112.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",399,download/mongodb_mongo112.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,+,uassertStatusOK(scopedCMStatus.getStatus());,488,download/mongodb_mongo112.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,+,"uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, i->first));",952,download/mongodb_mongo112.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/db/s/balancer/balancer.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",616,download/mongodb_mongo113.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/catalog/catalog_cache.cpp,+,CatalogCache::CatalogCache() = default;,44,download/mongodb_mongo114.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/catalog/catalog_cache.cpp,+,CatalogCache::~CatalogCache() = default;,46,download/mongodb_mongo114.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/catalog/catalog_cache.cpp,+,"auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName.toString());",58,download/mongodb_mongo114.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/chunk_manager.cpp,+,"auto config = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db()));",522,download/mongodb_mongo115.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/client/version_manager.cpp,+,Grid::get(txn)->catalogCache()->invalidate(nss.db());,388,download/mongodb_mongo116.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/cluster_commands_common.cpp,+,Grid::get(txn)->catalogCache()->invalidate(nss.db());,58,download/mongodb_mongo117.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db());,480,download/mongodb_mongo118.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",1015,download/mongodb_mongo119.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/strategy.cpp,+,Grid::get(txn)->catalogCache()->invalidate(NamespaceString(staleNS).db());,336,download/mongodb_mongo120.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/strategy.cpp,+,"auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",390,download/mongodb_mongo120.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/pipeline/aggregation_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(request.getHint(), BSON(""a"" << 1));",67,download/mongodb_mongo121.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/pipeline/aggregation_request_test.cpp,+,ASSERT_OK(request.getStatus());,156,download/mongodb_mongo121.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/pipeline/aggregation_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(request.getValue().getHint(),",157,download/mongodb_mongo121.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/pipeline/aggregation_request_test.cpp,+,ASSERT_NOT_OK(,192,download/mongodb_mongo121.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/pipeline/aggregation_request_test.cpp,+,ASSERT_NOT_OK(,200,download/mongodb_mongo121.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/count_request_test.cpp,+,ASSERT_OK(agg);,217,download/mongodb_mongo122.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/count_request_test.cpp,+,ASSERT_OK(ar.getStatus());,220,download/mongodb_mongo122.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/count_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(ar.getValue().getHint(), BSON(""x"" << 1));",221,download/mongodb_mongo122.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/count_request_test.cpp,+,"ASSERT(std::equal(expectedPipeline.begin(),",225,download/mongodb_mongo122.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Planner: outputting soln that uses hinted index as scan."";",851,download/mongodb_mongo123.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(0U);,2404,download/mongodb_mongo124.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(0U);,2413,download/mongodb_mongo124.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_request_test.cpp,+,ASSERT_OK(aggCmd);,1130,download/mongodb_mongo125.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_request_test.cpp,+,ASSERT_OK(ar.getStatus());,1133,download/mongodb_mongo125.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(qr.getHint(), ar.getValue().getHint());",1134,download/mongodb_mongo125.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/client/authenticate_test.cpp,+,[this](auth::AuthResponse response) { ASSERT(response.isOK()); });,195,download/mongodb_mongo126.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/client/authenticate_test.cpp,+,[this](auth::AuthResponse response) { ASSERT(response.isOK()); });,214,download/mongodb_mongo126.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_openssl.cpp,+,"fassert(40379,",66,download/mongodb_mongo127.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_openssl.cpp,+,"fassert(40380, HMAC(EVP_sha1(), key, keyLen, input, inputLen, output.data(), NULL) != NULL);",88,download/mongodb_mongo127.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_test.cpp,+,"ASSERT(0 == memcmp(sha1Tests[i].hash.data(), result.data(), result.size()))",54,download/mongodb_mongo128.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_test.cpp,+,"ASSERT(0 == memcmp(hmacSha1Tests[i].hash.data(), result.data(), result.size()))",131,download/mongodb_mongo128.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_tom.cpp,+,"fassert(40381,",62,download/mongodb_mongo129.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_tom.cpp,+,"fassert(40382,",80,download/mongodb_mongo129.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,+,"uassert(17450, ""invalid salt length provided"", saltLen + 4 == startKey.size());",98,download/mongodb_mongo130.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,"ASSERT_FALSE(cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", salt, 10000)));",447,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,ASSERT_TRUE(cachedSecret);,462,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,ASSERT_TRUE(std::equal(,463,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,ASSERT_TRUE(std::equal(,465,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,ASSERT_TRUE(std::equal(,467,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,"ASSERT_FALSE(cache.getCachedSecrets(HostAndPort(""localhost:27018""),",483,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,"ASSERT_FALSE(cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aab"", salt, 10000)));",485,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,"ASSERT_FALSE(cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", badSalt, 10000)));",486,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,"ASSERT_FALSE(cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", salt, 10001)));",487,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,"ASSERT_FALSE(cache.getCachedSecrets(host, scram::SCRAMPresecrets(""aaa"", salt, 10000)));",502,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,ASSERT_TRUE(cachedSecret);,504,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,"ASSERT_TRUE(std::equal(newSecret.clientKey->begin(),",505,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,"ASSERT_TRUE(std::equal(newSecret.serverKey->begin(),",508,download/mongodb_mongo131.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/db/auth/sasl_scramsha1_test.cpp,+,"ASSERT_TRUE(std::equal(newSecret.storedKey->begin(),",511,download/mongodb_mongo131.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time.cpp,+,LogicalTime::LogicalTime(Timestamp ts) : _time(ts.asULL()) {},36,download/mongodb_mongo132.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time.cpp,+,return LogicalTime(Timestamp(_time + ticks));,43,download/mongodb_mongo132.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(tX < tY);,44,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(LogicalTime(tX) < LogicalTime(tY));,46,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(LogicalTime(tX) <= LogicalTime(tY));,47,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(LogicalTime(tY) > LogicalTime(tX));,48,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(LogicalTime(tY) >= LogicalTime(tX));,49,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(LogicalTime(tX) != LogicalTime(tY));,50,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(LogicalTime(tX) == LogicalTime(tX));,51,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_FALSE(LogicalTime(tX) > LogicalTime(tY));,53,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_FALSE(LogicalTime(tX) >= LogicalTime(tY));,54,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_FALSE(LogicalTime(tY) < LogicalTime(tX));,55,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_FALSE(LogicalTime(tY) <= LogicalTime(tX));,56,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_FALSE(LogicalTime(tX) == LogicalTime(tY));,57,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_FALSE(LogicalTime(tX) != LogicalTime(tX));,58,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,auto tY = LogicalTime(tX).asTimestamp();,63,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(tX == tY);,65,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,auto lT = LogicalTime(tX);,72,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(tY == lT.asTimestamp());,75,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,const auto lT = LogicalTime(tX);,82,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(tX == lT.asTimestamp());,85,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(tY == lQ.asTimestamp());,86,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,auto time = LogicalTime(tX);,92,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(time == signedTime.getTime());,96,download/mongodb_mongo133.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time_test.cpp,+,ASSERT_TRUE(proof == signedTime.getProof());,97,download/mongodb_mongo133.cpp
970fdd08aa92e5393d3f616fd6270ea1fb688640,SERVER-27382 Remove usage of DBConfig::reload from ClusterFind,src/mongo/s/query/cluster_find.cpp,+,Grid::get(txn)->catalogCache()->invalidate(query.nss().db().toString());,371,download/mongodb_mongo134.cpp
a82df5012ee9c1d48197af81abc921f717227323,SERVER-27382 Remove usage of DBConfig::reload from ChunkManagerTargeter,src/mongo/s/chunk_manager_targeter.cpp,+,Grid::get(txn)->catalogCache()->invalidate(_nss.db().toString());,767,download/mongodb_mongo135.cpp
81901db84f0245dcf616e638366def74e4169c69,SERVER-27889 Handle case in catchup.js where stepUp fails due to node already being a candidate.,src/mongo/db/repl/replset_commands.cpp,+,"log() << ""Received replSetStepUp request"";",875,download/mongodb_mongo136.cpp
81901db84f0245dcf616e638366def74e4169c69,SERVER-27889 Handle case in catchup.js where stepUp fails due to node already being a candidate.,src/mongo/db/repl/replset_commands.cpp,+,"log() << ""replSetStepUp request failed "" << causedBy(status);",880,download/mongodb_mongo136.cpp
6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad,SERVER-26126 Remove broken lockState caching,src/mongo/db/concurrency/lock_state.cpp,+,invariant(!inAWriteUnitOfWork());,275,download/mongodb_mongo137.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,+,"ASSERT_BSONELT_EQ(resultElt, fromjson(""{c: [1, 2, 3]}"").firstElement());",578,download/mongodb_mongo138.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,+,ASSERT(StringData(pathData).empty());,579,download/mongodb_mongo138.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,+,"ASSERT_BSONELT_EQ(resultElt, fromjson(""{b: [{c: 1}, {c: 2}]}"").firstElement());",587,download/mongodb_mongo138.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,+,"ASSERT_EQ(StringData(pathData), StringData(""c""));",588,download/mongodb_mongo138.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,+,"ASSERT_BSONELT_EQ(resultElt, obj.firstElement());",596,download/mongodb_mongo138.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,+,"ASSERT_EQ(StringData(pathData), StringData(""0""));",597,download/mongodb_mongo138.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,+,"ASSERT_BSONELT_EQ(resultElt, fromjson(""{'0': 'foo'}"").firstElement());",605,download/mongodb_mongo138.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/bson/dotted_path_support_test.cpp,+,ASSERT(StringData(pathData).empty());,606,download/mongodb_mongo138.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format.cpp,+,"uassert(ErrorCodes::CannotBuildIndexKeys,",119,download/mongodb_mongo139.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",256,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_THROWS_CODE(FTSIndexFormat::getKeys(spec, objToIndex, &keys),",259,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",266,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_THROWS_CODE(FTSIndexFormat::getKeys(spec, objToIndex, &keys),",269,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",276,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_THROWS_CODE(FTSIndexFormat::getKeys(spec, objToIndex, &keys),",279,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",286,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_THROWS_CODE(FTSIndexFormat::getKeys(spec, objToIndex, &keys),",289,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",296,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_THROWS_CODE(FTSIndexFormat::getKeys(spec, objToIndex, &keys),",299,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"FTSSpec spec(assertGet(FTSSpec::fixSpec(BSON(""key"" << keyPattern << ""textIndexVersion"" << 3))));",306,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_EQ(2U, keys.size());",310,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_EQ(3, key.nFields());",314,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_BSONELT_EQ(it.next(), fromjson(""{'': {b: 'foo'}}"").firstElement());",316,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_BSONELT_EQ(it.next(), fromjson(""{'': 'bar'}"").firstElement());",317,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_EQ(3, key.nFields());",322,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_BSONELT_EQ(it.next(), fromjson(""{'': {b: 'foo'}}"").firstElement());",324,download/mongodb_mongo140.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format_test.cpp,+,"ASSERT_BSONELT_EQ(it.next(), fromjson(""{'': 'foo'}"").firstElement());",325,download/mongodb_mongo140.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,+,auto status = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,130,download/mongodb_mongo141.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk_manager.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",111,download/mongodb_mongo142.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_find_and_modify_cmd.cpp,+,updateChunkWriteStatsAndSplitIfNeeded(,229,download/mongodb_mongo143.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"updateChunkWriteStatsAndSplitIfNeeded(txn, cm.get(), c.get(), size);",619,download/mongodb_mongo144.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,request.setWriteConcern(WriteConcernOptions::Acknowledged);,138,download/mongodb_mongo145.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"ClusterWriter writer(false, 0);",142,download/mongodb_mongo145.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"writer.write(txn, request, &response);",143,download/mongodb_mongo145.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"uassertStatusOK(catalogClient->shardCollection(txn,",586,download/mongodb_mongo145.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"void toBatchError(const Status& status, BatchedCommandResponse* response) {",78,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,dassert(response->isValid(NULL));,83,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"auto config = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",87,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"uassert(10163, ""can only handle numbers here - which i think is correct"", e.isNumber());",170,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",185,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"uassert(28736,",202,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",234,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"updateChunkWriteStatsAndSplitIfNeeded(txn, chunkManager.get(), chunk.get(), it->second);",207,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"ClusterWriter::ClusterWriter(bool autoSplit, int timeoutMillis)",233,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"Grid::get(txn)->catalogClient(txn)->writeConfigServerDirect(txn, *request, response);",301,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"void updateChunkWriteStatsAndSplitIfNeeded(OperationContext* txn,",338,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"LOG(1) << ""won't auto split because not enough tickets: "" << nss;",372,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,uassertStatusOK(balancerConfig->refreshAndCheck(txn));,382,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"LOG(1) << ""about to initiate autosplit: "" << redact(chunk->toString())",388,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"uassertStatusOK(shardutil::selectChunkSplitPoints(txn,",405,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"uassertStatusOK(shardutil::splitChunkAtMultiplePoints(txn,",451,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"Grid::get(txn)->catalogClient(txn)->getCollection(txn, manager->getns());",466,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"log() << ""Auto-split for "" << nss << "" failed to load collection metadata""",468,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"log() << ""autosplitted "" << nss << "" chunk: "" << redact(chunk->toString()) << "" into """,476,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",494,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"uassertStatusOK(configsvr_client::rebalanceChunk(txn, chunkToMove));",505,download/mongodb_mongo146.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"log() << ""Unable to auto-split chunk "" << redact(chunkRange.toString()) << causedBy(ex);",511,download/mongodb_mongo146.cpp
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/balancer/balancer.cpp,+,const auto splitPoints = uassertStatusOK(shardutil::selectChunkSplitPoints(,624,download/mongodb_mongo147.cpp
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/balancer/balancer.cpp,+,"uassert(ErrorCodes::CannotSplit, ""No split points found"", !splitPoints.empty());",633,download/mongodb_mongo147.cpp
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/balancer/balancer.cpp,+,uassertStatusOK(,635,download/mongodb_mongo147.cpp
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/split_vector_command.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,79,download/mongodb_mongo148.cpp
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/s/chunk.cpp,+,"log() << ""Marking chunk "" << toString() << "" as jumbo."";",433,download/mongodb_mongo149.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/db/s/balancer/scoped_migration_request_test.cpp,+,ChunkType chunkType = assertGet(ChunkType::fromConfigBSON(chunkBuilder.obj()));,104,download/mongodb_mongo150.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/db/s/balancer/type_migration_test.cpp,+,ChunkType chunkType = assertGet(ChunkType::fromConfigBSON(chunkBuilder.obj()));,62,download/mongodb_mongo151.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+,auto mergedChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.front()));,89,download/mongodb_mongo152.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+,auto mergedChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.front()));,152,download/mongodb_mongo152.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+,auto mergedChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.front()));,219,download/mongodb_mongo152.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+,auto mergedChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.front()));,282,download/mongodb_mongo152.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+,auto foundOtherChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.back()));,293,download/mongodb_mongo152.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+,ChunkType foundChunk = uassertStatusOK(ChunkType::fromConfigBSON(chunksVector.front()));,418,download/mongodb_mongo152.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_merge_chunks_test.cpp,+,"ASSERT_BSONOBJ_EQ(mergedChunk.toConfigBSON(), foundChunk.toConfigBSON());",419,download/mongodb_mongo152.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,+,"ASSERT_BSONOBJ_EQ(kReplSecondaryOkMetadata,",503,download/mongodb_mongo153.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,+,"ASSERT_EQ(nss.ns(), ChunkType::ConfigNS);",508,download/mongodb_mongo153.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,+,"auto query = assertGet(QueryRequest::makeFromFindCommand(nss, request.cmdObj, false));",510,download/mongodb_mongo153.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,+,"ASSERT_EQ(query->ns(), ChunkType::ConfigNS);",512,download/mongodb_mongo153.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,+,"ASSERT_BSONOBJ_EQ(query->getFilter(), chunksQuery);",513,download/mongodb_mongo153.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,+,"ASSERT_BSONOBJ_EQ(query->getSort(), BSON(ChunkType::DEPRECATED_lastmod() << -1));",514,download/mongodb_mongo153.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,+,"ASSERT_EQ(query->getLimit().get(), 1);",515,download/mongodb_mongo153.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,+,metadata.writeToMetadata(&builder);,524,download/mongodb_mongo153.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,+,"ASSERT_BSONOBJ_EQ(chunkA.toConfigBSON(), chunks[0].toConfigBSON());",533,download/mongodb_mongo153.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/sharding_catalog_test.cpp,+,"ASSERT_BSONOBJ_EQ(chunkB.toConfigBSON(), chunks[1].toConfigBSON());",534,download/mongodb_mongo153.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,ASSERT_FALSE(chunkRes.isOK());,81,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_EQUALS(chunkRes.getStatus(), ErrorCodes::NoSuchKey);",100,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_STRING_CONTAINS(chunkRes.getStatus().reason(), ChunkType::minShardID.name());",101,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_EQUALS(chunkRes.getStatus(), ErrorCodes::NoSuchKey);",106,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_STRING_CONTAINS(chunkRes.getStatus().reason(), ChunkType::max.name());",107,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_EQUALS(chunkRes.getStatus(), ErrorCodes::NoSuchKey);",112,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_STRING_CONTAINS(chunkRes.getStatus().reason(), ChunkType::shard.name());",113,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_EQUALS(chunkRes.getStatus(), ErrorCodes::BadValue);",118,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ChunkType shardChunk = assertGet(ChunkType::fromShardBSON(obj, epoch));",130,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_BSONOBJ_EQ(obj, shardChunk.toShardBSON());",132,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_BSONOBJ_EQ(kMin, shardChunk.getMin());",134,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_BSONOBJ_EQ(kMax, shardChunk.getMax());",135,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_EQUALS(kShard, shardChunk.getShard());",136,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_EQUALS(chunkVersion, shardChunk.getVersion());",137,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ASSERT_BSONOBJ_EQ(chunk.toConfigBSON(), obj);",209,download/mongodb_mongo154.cpp
03028591aec8f6e8f08c8c2be2f829772822d7dd,SERVER-27804 add additional parsers to ChunkType for shard's config.chunks.uuid collections,src/mongo/s/catalog/type_chunk_test.cpp,+,"ChunkType chunk = assertGet(ChunkType::fromConfigBSON(BSON(""_id""",221,download/mongodb_mongo154.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""migrate failed: "" << redact(e.what());",407,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""migrate failed with unknown exception"";",415,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"error() << ""Migration abort requested before it started"";",458,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,log() << _errmsg;,641,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""Migration aborted while copying documents"";",653,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""_transferMods failed: "" << redact(res);",731,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""Migration aborted while waiting for replication at catch up stage"";",748,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""secondaries having hard time keeping up with migrate"";",758,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,log() << _errmsg;,767,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""Migration aborted while waiting for replication"";",783,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,log() << _errmsg;,799,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""_transferMods failed in STEADY state: "" << redact(res);",826,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""Migration aborted while transferring mods"";",835,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,log() << _errmsg;,855,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"OCCASIONALLY log() << ""migrate commit waiting for a majority of slaves for '"" << ns << ""' """,975,download/mongodb_mongo155.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,auto const sessionId = uassertStatusOK(MigrationSessionId::extractFromBSON(cmdObj));,255,download/mongodb_mongo156.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,log() << status.reason();,260,download/mongodb_mongo156.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,log() << status.reason();,307,download/mongodb_mongo156.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual(std::set<size_t>{1U}, actualArrayComponents);",197,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << BSONArray())}, actualElements);",209,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual(std::set<size_t>{1U}, actualArrayComponents);",223,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << BSON_ARRAY(3))}, actualElements);",235,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",517,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",518,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 1), BSON("""" << 2)}, actualElements);",530,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({2U}, actualArrayComponents);",531,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << BSON_ARRAY(1 << 2))}, actualElements);",543,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",544,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual(std::vector<BSONObj>{}, actualElements);",556,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({0U, 1U}, actualArrayComponents);",557,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 3)}, actualElements);",569,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({1U}, actualArrayComponents);",570,download/mongodb_mongo157.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/btree_key_generator_test.cpp,+,"ASSERT(testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));",687,download/mongodb_mongo158.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/btree_key_generator_test.cpp,+,"ASSERT(testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));",697,download/mongodb_mongo158.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/btree_key_generator_test.cpp,+,"ASSERT(testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));",706,download/mongodb_mongo158.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/btree_key_generator_test.cpp,+,"ASSERT(testKeygen(keyPattern, genKeysFrom, expectedKeys, expectedMultikeyPaths));",715,download/mongodb_mongo158.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,+,"assertKeysetsEqual(expectedKeys, actualKeys);",435,download/mongodb_mongo159.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,+,"assertMultikeyPathsEqual(MultikeyPaths{{0U}, std::set<size_t>{}}, actualMultikeyPaths);",436,download/mongodb_mongo159.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,+,"assertKeysetsEqual(expectedKeys, actualKeys);",454,download/mongodb_mongo159.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,+,"assertMultikeyPathsEqual(MultikeyPaths{std::set<size_t>{}, {0U}}, actualMultikeyPaths);",455,download/mongodb_mongo159.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,+,"assertKeysetsEqual(expectedKeys, actualKeys);",473,download/mongodb_mongo159.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,+,"assertMultikeyPathsEqual(MultikeyPaths{{1U}, std::set<size_t>{}}, actualMultikeyPaths);",474,download/mongodb_mongo159.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,+,"assertKeysetsEqual(expectedKeys, actualKeys);",492,download/mongodb_mongo159.cpp
c7c8e4151ddc745aea9c0f07ed1890518d00723d,"SERVER-5580 track paths containing empty or single-element arrays as multikey

This is required in order for the planner to enforce correct
covering behavior.",src/mongo/db/index/s2_key_generator_test.cpp,+,"assertMultikeyPathsEqual(MultikeyPaths{{0U}, std::set<size_t>{}}, actualMultikeyPaths);",493,download/mongodb_mongo159.cpp
310ce16e32d0f2c110a0f8e2b11e0e0cbc1617ad,SERVER-26213 Remove MigrationManager::CollectionMigrationsState::distLockHandle variable,src/mongo/db/s/balancer/migration_manager.cpp,+,Grid::get(txn)->catalogClient(txn)->getDistLockManager()->lockWithSessionID(,487,download/mongodb_mongo160.cpp
94b37aac060bcc8b10c3eb41f178d84008136f9c,"SERVER-4786 Allow specifying sample rate of slow queries

Adds a sampleRate parameter to the profile command, a value
on the interval [0, 1] which indicates which fraction of
operations should be randomly sampled for profiling and
logging. This allows users to reduce their slowms threshold
or increase their profiling level with less performance
impact on the system.

Closes #1099

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(bsonExtractDoubleFieldWithDefault(,415,download/mongodb_mongo161.cpp
94b37aac060bcc8b10c3eb41f178d84008136f9c,"SERVER-4786 Allow specifying sample rate of slow queries

Adds a sampleRate parameter to the profile command, a value
on the interval [0, 1] which indicates which fraction of
operations should be randomly sampled for profiling and
logging. This allows users to reduce their slowms threshold
or increase their profiling level with less performance
impact on the system.

Closes #1099

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/db/commands/dbcommands.cpp,+,"uassert(ErrorCodes::BadValue,",417,download/mongodb_mongo161.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/chunk.cpp,+,"uassertStatusOK(shardutil::selectChunkSplitPoints(txn,",262,download/mongodb_mongo162.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,+,"auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",73,download/mongodb_mongo163.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,+,auto cmdResponse = uassertStatusOK(,75,download/mongodb_mongo163.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,+,uassertStatusOK(cmdResponse.commandStatus);,82,download/mongodb_mongo163.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,+,"uasserted(ErrorCodes::CannotSplit,",90,download/mongodb_mongo163.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,+,uassertStatusOK(,282,download/mongodb_mongo163.cpp
97718a410d3d40f5c3f01dfae76e7ddd910897af,SERVER-27125 Arbiters in PV1 vote no if they can see a healthy primary of equal or greater priority to the candidate,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(""can see a healthy primary of equal or greater priority"", response.getReason());",6081,download/mongodb_mongo164.cpp
97718a410d3d40f5c3f01dfae76e7ddd910897af,SERVER-27125 Arbiters in PV1 vote no if they can see a healthy primary of equal or greater priority to the candidate,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,ASSERT_FALSE(response.getVoteGranted());,6082,download/mongodb_mongo164.cpp
c54d665229604e6fd6bfc0e73c171524604e296b,SERVER-27050 jstest that rollback detects upstream node rolling back,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""rollback - rollbackHangThenFailAfterWritingMinValid fail point """,365,download/mongodb_mongo165.cpp
c54d665229604e6fd6bfc0e73c171524604e296b,SERVER-27050 jstest that rollback detects upstream node rolling back,src/mongo/db/repl/rs_rollback.cpp,+,"uasserted(40378,",371,download/mongodb_mongo165.cpp
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,+,"ASSERT_EQUALS(lock.getName(), ""dummy"");",62,download/mongodb_mongo166.cpp
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,+,"ASSERT_EQUALS(lock.getWho(), ""host.local:27017:1352918870:16807:Dummy:282475249"");",66,download/mongodb_mongo166.cpp
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,+,"ASSERT_EQUALS(lock.getWhy(), ""twiddling thumbs"");",67,download/mongodb_mongo166.cpp
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,+,"ASSERT_EQUALS(lock.getName(), ""dummy"");",78,download/mongodb_mongo166.cpp
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,+,"ASSERT_EQUALS(lock.getName(), ""dummy"");",97,download/mongodb_mongo166.cpp
94be1956ffa4af698132bd7d65f8b79092566897,SERVER-27550 Delete dead balancer dist lock code,src/mongo/s/catalog/type_locks_test.cpp,+,"ASSERT_EQUALS(lock.getWho(), ""host.local:27017:1352918870:16807:Dummy:282475249"");",101,download/mongodb_mongo166.cpp
eef6335bbc0eedeb6f50120164ca0f198fb94303,SERVER-27125 Arbiters in PV1 vote no if they can see a healthy primary of equal or greater priority to the candidate,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(""can see a healthy primary of equal or greater priority"", response.getReason());",6081,download/mongodb_mongo167.cpp
eef6335bbc0eedeb6f50120164ca0f198fb94303,SERVER-27125 Arbiters in PV1 vote no if they can see a healthy primary of equal or greater priority to the candidate,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,ASSERT_FALSE(response.getVoteGranted());,6082,download/mongodb_mongo167.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(shardingState->canAcceptShardedCommands());,1592,download/mongodb_mongo168.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(shardingState->updateConfigServerOpTimeFromMetadata(txn));,1600,download/mongodb_mongo168.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/merge_chunks_command.cpp,+,uassertStatusOK(ShardingState::get(txn)->canAcceptShardedCommands());,372,download/mongodb_mongo169.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,uassertStatusOK(shardingState->canAcceptShardedCommands());,96,download/mongodb_mongo170.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/move_chunk_command.cpp,+,uassertStatusOK(shardingState->canAcceptShardedCommands());,120,download/mongodb_mongo171.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,+,uassertStatusOK(shardingState->canAcceptShardedCommands());,102,download/mongodb_mongo172.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,+,"uassert(ErrorCodes::BadValue,",174,download/mongodb_mongo172.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,+,uassertStatusOK(givenConnStrStatus);,192,download/mongodb_mongo172.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,+,uassertStatusOK(ChunkVersion::parseFromBSONForSetShardVersion(cmdObj));,233,download/mongodb_mongo172.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,+,"fassert(40372, _shardName == shardIdentity.getShardName());",341,download/mongodb_mongo173.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,+,"fassert(40373, prevConfigsvrConnStr.getSetName() == configSvrConnStr.getSetName());",351,download/mongodb_mongo173.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,+,"fassert(40374, _clusterId == shardIdentity.getClusterId());",372,download/mongodb_mongo173.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,+,"log() << ""initialized sharding components"";",433,download/mongodb_mongo173.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,+,"log() << ""failed to initialize sharding components"" << causedBy(status);",444,download/mongodb_mongo173.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/split_chunk_command.cpp,+,uassertStatusOK(shardingState->canAcceptShardedCommands());,177,download/mongodb_mongo174.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker.cpp,+,"log() << ""not electing self, "" << request.target.toString()",152,download/mongodb_mongo175.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker.cpp,+,"log() << ""not electing self, "" << request.target.toString()",166,download/mongodb_mongo175.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker.cpp,+,"log() << ""not electing self, "" << request.target.toString()",172,download/mongodb_mongo175.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker_test.cpp,+,ASSERT_EQUALS(,280,download/mongodb_mongo176.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker_test.cpp,+,"1, countLogLinesContaining(""not electing self, h1:27017 knows a node is fresher than us""));",281,download/mongodb_mongo176.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker_test.cpp,+,ASSERT_EQUALS(,507,download/mongodb_mongo176.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker_test.cpp,+,"1, countLogLinesContaining(""not electing self, h1:27017 knows a node is fresher than us""));",508,download/mongodb_mongo176.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/replication_coordinator_impl_elect.cpp,+,"log() << ""running for election""",209,download/mongodb_mongo177.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,pos += (size_t)snprintf(,2548,download/mongodb_mongo178.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,pos += (size_t)snprintf(,2555,download/mongodb_mongo178.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,pos += (size_t)snprintf(,2561,download/mongodb_mongo178.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,pos += (size_t)snprintf(,2567,download/mongodb_mongo178.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,pos += (size_t)snprintf(,2573,download/mongodb_mongo178.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,pos += (size_t)snprintf(,2609,download/mongodb_mongo178.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,pos += (size_t)snprintf(,2615,download/mongodb_mongo178.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,pos += (size_t)snprintf(,2621,download/mongodb_mongo178.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/bench/wtperf/wtperf.c,+,pos += (size_t)snprintf(,2627,download/mongodb_mongo178.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_cursor.c,+,"WT_ASSERT(session, cbt->slot < page->entries);",179,download/mongodb_mongo179.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_cursor.c,+,"WT_ASSERT(session, cbt->slot < page->entries);",205,download/mongodb_mongo179.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_ovfl.c,+,"__wt_writelock(session, &btree->ovfl_lock);",252,download/mongodb_mongo180.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/btree/bt_ovfl.c,+,"__wt_writeunlock(session, &btree->ovfl_lock);",266,download/mongodb_mongo180.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_log.c,+,"__wt_writelock(session, &log->log_archive_lock);",358,download/mongodb_mongo181.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_log.c,+,"__wt_writeunlock(session, &log->log_archive_lock);",360,download/mongodb_mongo181.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,+,"WT_RET(__wt_try_writelock(session, &dhandle->rwlock));",84,download/mongodb_mongo182.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,+,"err:	__wt_writeunlock(session, &dhandle->rwlock);",98,download/mongodb_mongo182.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,+,"WT_RET(__wt_try_writelock(session, &dhandle->rwlock));",191,download/mongodb_mongo182.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/conn/conn_sweep.c,+,"err:		__wt_writeunlock(session, &dhandle->rwlock);",208,download/mongodb_mongo182.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,+,"__wt_writelock(session, &conn->hot_backup_lock);",233,download/mongodb_mongo183.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,+,"__wt_writeunlock(session, &conn->hot_backup_lock);",236,download/mongodb_mongo183.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,+,"__wt_writelock(session, &conn->hot_backup_lock);",300,download/mongodb_mongo183.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,+,"__wt_writeunlock(session, &conn->hot_backup_lock);",302,download/mongodb_mongo183.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,+,"__wt_writelock(session, &conn->hot_backup_lock);",322,download/mongodb_mongo183.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,+,"__wt_writeunlock(session, &conn->hot_backup_lock);",324,download/mongodb_mongo183.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,+,"__wt_writelock(session, &conn->hot_backup_lock);",335,download/mongodb_mongo183.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_backup.c,+,"__wt_writeunlock(session, &conn->hot_backup_lock);",337,download/mongodb_mongo183.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/cursor/cur_json.c,+,"WT_ASSERT((WT_SESSION_IMPL *)cursor->session,",409,download/mongodb_mongo184.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"__wt_writelock(session, &conn->evict_threads.lock);",471,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"WT_ASSERT(session, conn->evict_threads.threads[0]->session == session);",923,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp, ""==========\n"" ""transaction state dump\n"") < 0)",2213,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp,",2216,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp,",2225,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp, ""Dumping transaction state of active sessions\n"") < 0)",2238,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp,",2266,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp, ""==========\n"" ""cache dump\n"") < 0)",2314,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp,",2360,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp, ""%s(checkpoint=%s): \n"",",2364,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp,",2369,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp,",2386,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp,",2414,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/evict/evict_lru.c,+,"if (fprintf(fp, ""==========\n"") < 0)",2426,download/mongodb_mongo185.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"__wt_writelock(session, &lsm_tree->rwlock);",1113,download/mongodb_mongo186.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"__wt_writeunlock(session, &lsm_tree->rwlock);",1131,download/mongodb_mongo186.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,+,"__wt_writelock(session, &S2BT(session)->ovfl_lock);",878,download/mongodb_mongo187.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,+,"__wt_writeunlock(session, &S2BT(session)->ovfl_lock);",880,download/mongodb_mongo187.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,+,"__wt_writelock(session, &S2BT(session)->ovfl_lock);",906,download/mongodb_mongo187.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/reconcile/rec_track.c,+,"__wt_writeunlock(session, &S2BT(session)->ovfl_lock);",908,download/mongodb_mongo187.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_api.c,+,"__wt_writelock(session, &txn_global->nsnap_rwlock);",1689,download/mongodb_mongo188.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_api.c,+,"err:	__wt_writeunlock(session, &txn_global->nsnap_rwlock);",1699,download/mongodb_mongo188.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,+,"__wt_try_writelock(session, &dhandle->rwlock)) == 0) {",205,download/mongodb_mongo189.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,+,"__wt_writeunlock(session, &dhandle->rwlock);",208,download/mongodb_mongo189.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,+,"__wt_writeunlock(session, &dhandle->rwlock);",219,download/mongodb_mongo189.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,+,"__wt_writeunlock(session, &dhandle->rwlock);",290,download/mongodb_mongo189.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,+,"__wt_writeunlock(session, &dhandle->rwlock);",513,download/mongodb_mongo189.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/session/session_dhandle.c,+,"__wt_writeunlock(session, &dhandle->rwlock);",535,download/mongodb_mongo189.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/mtx_rw.c,+,"__wt_try_writelock(WT_SESSION_IMPL *session, WT_RWLOCK *l)",261,download/mongodb_mongo190.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/mtx_rw.c,+,"__wt_writelock(WT_SESSION_IMPL *session, WT_RWLOCK *l)",290,download/mongodb_mongo190.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/mtx_rw.c,+,"__wt_writeunlock(WT_SESSION_IMPL *session, WT_RWLOCK *l)",329,download/mongodb_mongo190.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"WT_ASSERT(session, __wt_rwlock_islocked(session, &group->lock));",54,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"WT_ASSERT(session, __wt_rwlock_islocked(session, &group->lock));",89,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"__wt_writelock(session, &group->lock);",232,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"__wt_writeunlock(session, &group->lock);",234,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"__wt_writelock(session, &group->lock);",266,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"__wt_writeunlock(session, &group->lock);",271,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"WT_ASSERT(session, __wt_rwlock_islocked(session, &group->lock));",293,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"__wt_writelock(session, &group->lock);",328,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"WT_RET(__wt_try_writelock(session, &group->lock));",330,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"__wt_writeunlock(session, &group->lock);",336,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"__wt_writelock(session, &group->lock);",355,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"WT_RET(__wt_try_writelock(session, &group->lock));",357,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/support/thread_group.c,+,"__wt_writeunlock(session, &group->lock);",363,download/mongodb_mongo191.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn.c,+,"__wt_writelock(session, &txn_global->scan_rwlock);",317,download/mongodb_mongo192.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn.c,+,"__wt_try_writelock(session, &txn_global->scan_rwlock)) != 0)",319,download/mongodb_mongo192.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn.c,+,"done:	__wt_writeunlock(session, &txn_global->scan_rwlock);",378,download/mongodb_mongo192.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn_ckpt.c,+,"__wt_writelock(session, &txn_global->scan_rwlock);",682,download/mongodb_mongo193.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/txn/txn_ckpt.c,+,"__wt_writeunlock(session, &txn_global->scan_rwlock);",703,download/mongodb_mongo193.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_dump.c,+,"n = vsnprintf(*bufp, *leftp, fmt, ap);",266,download/mongodb_mongo194.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_dump.c,+,assert(p != NULL);,332,download/mongodb_mongo194.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_dump.c,+,assert(p[strlen(p) - 1] == ')');,333,download/mongodb_mongo194.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_dump.c,+,assert(len > 0);,351,download/mongodb_mongo194.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_dump.c,+,"WT_ERR(print_config(session, uri, v, json, true));",400,download/mongodb_mongo194.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/src/utilities/util_truncate.c,+,"(void)fprintf(stderr,",46,download/mongodb_mongo195.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/test/format/config.c,+,testutil_assert(g.c_delete_pct +,546,download/mongodb_mongo196.cpp
c91b93d2786342505fd9e151c8aa6b68ee03a1fb,"Import wiredtiger: 48a3cbc17fa902528217287fd075c87efb44aebc from branch mongodb-3.6

ref: 8d23249433..48a3cbc17f
for: 3.5.2

SERVER-16796  Increase logging activity for journal recovery operations
WT-2          What does metadata look like?
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-2771       Add a statistic to track per-btree dirty cache usage
WT-2833       improvement: add projections to wt dump utility
WT-2898       Improve performance of eviction-heavy workloads by dynamically controlling the number of eviction threads
WT-2994       Create documentation describing page sizes and relationships
WT-3080       Python test suite: add timestamp or elapsed time for tests
WT-3082       Python test suite: shorten default run to avoid pull request timeouts.
WT-3083       Fix a bug in wtperf config dump
WT-3086       Add transaction state information to cache stuck diagnostic information
WT-3091       Add stats to test_perf0001
WT-3092       Quiet a warning from autogen.sh
WT-3093       Padding the WT_RWLOCK structure grew the WT_PAGE structure.
WT-3099       lint: static function declarations, non-text characters in documentation
WT-3100       test bug: format is weighted to delete, insert, then write operations.
WT-3104       Fix wtperf configs for eviction tests
WT-3105       Fix a deadlock caused by allocating eviction thread sessions dynamically
WT-3106       Add truncate support to command line wt utility
WT-3108       Also dump disk page size as part of metadata information
WT-3109       wording fix in transaction doc
WT-3110       Add more test cases for the WT command line utility
WT-3112       Handle list lock statistic not incremented in eviction server
WT-3114       Avoid archiving log files immediately after recovery
WT-3116       Python style testing in s_all may not execute correctly
WT-3118       Protect random-abort test against unexpectedly slow child start
WT-3121       In test suite create standard way to load extensions
WT-3127       bug: CPU yield calls don't necessarily imply memory barriers
WT-3134       Coverity scan reports 1368529 and 1368528",src/third_party/wiredtiger/test/recovery/random-abort.c,+,"snprintf(statname, sizeof(statname), ""%s/%s"", home, fs_main);",320,download/mongodb_mongo197.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",192,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",195,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(ErrorCodes::ShutdownInProgress, _databaseCloner->startup());",196,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, databaseCloner.getState_forTest());",235,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(ErrorCodes::OperationFailed, databaseCloner.startup());",237,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, databaseCloner.getState_forTest());",238,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",242,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",245,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",279,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",282,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",298,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",302,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",305,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",317,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",322,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",325,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",344,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",364,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",367,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",389,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",398,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",401,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",441,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",445,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",448,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",459,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",463,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",466,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",477,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",481,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",484,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",498,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",502,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",505,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",523,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",527,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",530,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",542,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",546,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",549,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",563,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",567,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",570,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",584,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",588,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",591,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",603,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",625,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",628,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",642,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",646,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",649,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",667,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",671,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",674,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",705,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",709,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",712,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kShuttingDown, _databaseCloner->getState_forTest());",740,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",747,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",755,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",758,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",793,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kPreStart, _databaseCloner->getState_forTest());",811,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kRunning, _databaseCloner->getState_forTest());",814,download/mongodb_mongo198.cpp
3b1134f5821dcabf89fa6df25b58a674cd3b6ab9,"SERVER-27611 make DatabaseCloner single-use only. If a DatabaseCloner is shut down before startup, calling startup() will fail.",src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(DatabaseCloner::State::kComplete, _databaseCloner->getState_forTest());",860,download/mongodb_mongo198.cpp
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,ASSERT_OK(_databaseCloner->startup());,572,download/mongodb_mongo199.cpp
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""listCollections"",",577,download/mongodb_mongo199.cpp
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""count"", noi->getRequest());",593,download/mongodb_mongo199.cpp
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(""a"", noi->getRequest().cmdObj.firstElement().String());",594,download/mongodb_mongo199.cpp
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,ASSERT_FALSE(_databaseCloner->isActive());,604,download/mongodb_mongo199.cpp
921906a20d9f0337fc18f716da8849e00d908f68,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(ErrorCodes::ShutdownInProgress, getStatus());",608,download/mongodb_mongo199.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_OK(collectionCloner->startup());,1172,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_TRUE(collectionCloner->isActive());,1173,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""count"",",1179,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,assertRemoteCommandNameEquals(,1183,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_TRUE(collectionCloner->isActive());,1188,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_TRUE(collectionCloner->isActive());,1191,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_TRUE(collectionStats.initCalled);,1192,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_FALSE(insertDocumentsFn);,1207,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,assertRemoteCommandNameEquals(,1214,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_TRUE(insertDocumentsFn);,1220,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,assertRemoteCommandNameEquals(,1226,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,"net->scheduleErrorResponse(Status(ErrorCodes::OperationFailed, ""getMore failed"")));",1228,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_TRUE(collectionCloner->isActive());,1234,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,"ASSERT_EQUALS(getDetectableErrorStatus(), getStatus());",1235,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_FALSE(collectionCloner->isActive());,1249,download/mongodb_mongo200.cpp
23d8d6530a044494746c919aa6b73d5317b6b667,SERVER-27678 CollectionCloner waits for pending _findCallback and _insertDocuments tasks to complete before invoking completion function.,src/mongo/db/repl/collection_cloner_test.cpp,+,"ASSERT_EQUALS(ErrorCodes::OperationFailed, getStatus());",1250,download/mongodb_mongo200.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,ASSERT_TRUE(next.isAdvanced());,527,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,"ASSERT_EQ(3U, next.getDocument().size());",529,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,"ASSERT_VALUE_EQ(Value(0), next.getDocument().getField(""_id""));",530,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,ASSERT(resultsValue.isArray());,533,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,"ASSERT(arrayContains(expCtx, resultsArray, Value(middle1)));",536,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,"ASSERT(arrayContains(expCtx, resultsArray, Value(middle2)));",537,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,"ASSERT(arrayContains(expCtx, resultsArray, Value(middle3)));",538,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,"ASSERT(arrayContains(expCtx, resultsArray, Value(sinkDoc)));",539,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,ASSERT(graphLookupStage->getNext().isEOF());,540,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,ASSERT_TRUE(next.isAdvanced());,600,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,"ASSERT_EQ(3U, next.getDocument().size());",602,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,"ASSERT_VALUE_EQ(Value(0), next.getDocument().getField(""_id""));",603,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,ASSERT(resultsValue.isArray());,606,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,"ASSERT(arrayContains(expCtx, resultsArray, Value(target1)));",609,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,"ASSERT(arrayContains(expCtx, resultsArray, Value(target2)));",610,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,"ASSERT(!arrayContains(expCtx, resultsArray, Value(soloDoc)));",611,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/document_source_graph_lookup_test.cpp,+,ASSERT(graphLookupStage->getNext().isEOF());,612,download/mongodb_mongo201.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,+,"ASSERT_TRUE(vectorContains(cache[Value(0)], intToDoc(1)));",80,download/mongodb_mongo202.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,+,"ASSERT_TRUE(vectorContains(cache[Value(0)], intToDoc(2)));",81,download/mongodb_mongo202.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,+,"ASSERT_TRUE(vectorContains(cache[Value(0)], intToDoc(3)));",82,download/mongodb_mongo202.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,+,"ASSERT_FALSE(vectorContains(cache[Value(0)], intToDoc(4)));",83,download/mongodb_mongo202.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,+,"ASSERT_FALSE(vectorContains(cache[Value(0)], intToDoc(5)));",84,download/mongodb_mongo202.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,+,"ASSERT_TRUE(vectorContains(cache[Value(1)], intToDoc(0)));",149,download/mongodb_mongo202.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,+,"ASSERT_TRUE(vectorContains(cache[Value(1)], intToDoc(1)));",150,download/mongodb_mongo202.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,+,"ASSERT_TRUE(vectorContains(cache[Value(1)], intToDoc(2)));",151,download/mongodb_mongo202.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,+,"ASSERT_TRUE(vectorContains(cache[Value(1)], intToDoc(3)));",152,download/mongodb_mongo202.cpp
1aae7f519532707c40c3d19262b589ccd0c7ee08,SERVER-27437 Use Documents instead of BSONObjs within $graphLookup,src/mongo/db/pipeline/lookup_set_cache_test.cpp,+,"ASSERT_TRUE(vectorContains(cache[Value(1)], intToDoc(4)));",153,download/mongodb_mongo202.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << BSON_ARRAY(1 << 2)), BSON("""" << BSON_ARRAY(3 << 4))},",280,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({1U}, actualArrayComponents);",282,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({}, actualElements);",295,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({0U}, actualArrayComponents);",296,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << -2), BSON("""" << -3), BSON("""" << -4)}, actualElements);",315,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({0U, 1U, 2U}, actualArrayComponents);",316,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 1)}, actualElements);",328,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",329,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 1)}, actualElements);",341,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",342,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",354,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({0U}, actualArrayComponents);",355,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({}, actualElements);",367,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",368,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",380,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({0U}, actualArrayComponents);",381,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",393,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({0U}, actualArrayComponents);",394,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",406,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({0U}, actualArrayComponents);",407,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",419,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({0U}, actualArrayComponents);",420,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 3)}, actualElements);",433,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",434,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON(""""",446,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",449,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON("""" << 2)}, actualElements);",461,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual(std::set<size_t>{}, actualArrayComponents);",462,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertBSONElementSetsAreEqual({BSON(""""",474,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/bson/dotted_path_support_test.cpp,+,"assertArrayComponentsAreEqual({1U}, actualArrayComponents);",479,download/mongodb_mongo203.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document.cpp,+,"fassert(16489, path.getPathLength());",361,download/mongodb_mongo204.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",57,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(1)), 1UL);",58,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 0UL);",66,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",74,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(1)), 1UL);",75,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 3UL);",83,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(1)), 1UL);",84,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(2)), 1UL);",85,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(3)), 1UL);",86,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 3UL);",95,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(1)), 1UL);",96,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(2)), 1UL);",97,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(3)), 1UL);",98,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 3UL);",109,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(1)), 1UL);",110,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(2)), 1UL);",111,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(3)), 1UL);",112,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 0UL);",120,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 3UL);",135,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(-2)), 1UL);",136,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(-3)), 1UL);",137,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(-4)), 1UL);",138,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",146,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(1)), 1UL);",147,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",155,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(1)), 1UL);",156,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",167,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(""target""_sd)), 1UL);",168,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 0UL);",177,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",188,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(2)), 1UL);",189,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",199,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(2)), 1UL);",200,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",211,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(2)), 1UL);",212,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",223,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(2)), 1UL);",224,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",234,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(3)), 1UL);",235,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",243,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(""(1, 0)""_sd)), 1UL);",244,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 1UL);",252,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(2)), 1UL);",253,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 2UL);",261,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(""(1, 0)""_sd)), 1UL);",262,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(""(1, 1)""_sd)), 1UL);",263,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 0UL);",271,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.size(), 2UL);",279,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(1)), 1UL);",280,download/mongodb_mongo205.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document_path_support_test.cpp,+,"ASSERT_EQ(values.count(Value(2)), 1UL);",281,download/mongodb_mongo205.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_THROWS(FieldPath path(""""), UserException);",50,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(1U, path.getPathLength());",62,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""foo"", path.getFieldName(0));",63,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""foo"", path.fullPath());",64,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""$foo"", path.fullPathWithPrefix());",65,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_THROWS(FieldPath path(""$""), UserException);",75,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_THROWS(FieldPath path(""$a""), UserException);",85,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(2U, path.getPathLength());",97,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""foo"", path.getFieldName(0));",98,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""bar"", path.getFieldName(1));",99,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""foo.bar"", path.fullPath());",100,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""$foo.bar"", path.fullPathWithPrefix());",101,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_THROWS(FieldPath path(""a.$b""), UserException);",111,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(3U, path.getPathLength());",123,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""foo"", path.getFieldName(0));",124,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""bar"", path.getFieldName(1));",125,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""baz"", path.getFieldName(2));",126,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""foo.bar.baz"", path.fullPath());",127,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_THROWS(FieldPath path(""foo.""), UserException);",137,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_THROWS(FieldPath path("".foo""), UserException);",147,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_THROWS(FieldPath path(""foo..bar""), UserException);",157,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_THROWS(FieldPath path(""...""), UserException);",167,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(3U, path.getPathLength());",179,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""foo.a.bar"", path.fullPath());",180,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_THROWS(FieldPath path(string(""foo.b\0r"", 7)), UserException);",190,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(1U, path.getPathLength());",202,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""bar"", path.fullPath());",203,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(2U, path.getPathLength());",238,download/mongodb_mongo206.cpp
2c6c114e3952e952de1a395f987f1c5b83d209fe,SERVER-27437 Modernize field_path_test.cpp,src/mongo/db/pipeline/field_path_test.cpp,+,"ASSERT_EQUALS(""bar.baz"", path.fullPath());",239,download/mongodb_mongo206.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(3, metadataObj.nFields());",403,download/mongodb_mongo207.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(1, metadataObj[rpc::kOplogQueryMetadataFieldName].numberInt());",405,download/mongodb_mongo207.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,+,_prepareOplogQueryMetadata_inlock(builder);,3281,download/mongodb_mongo208.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,+,metadata.writeToMetadata(builder);,3290,download/mongodb_mongo208.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,+,void ReplicationCoordinatorImpl::_prepareOplogQueryMetadata_inlock(BSONObjBuilder* builder) const {,3296,download/mongodb_mongo208.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"_topCoord->prepareOplogQueryMetadata(_lastCommittedOpTime, lastAppliedOpTime, _rbid);",3299,download/mongodb_mongo208.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"assertStartSuccess(BSON(""_id""",4076,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,log() << metadata;,4129,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT_OK(oqMetadata.getStatus());,4132,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(oqMetadata.getValue().getLastOpCommitted(), optime1);",4133,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(oqMetadata.getValue().getLastOpApplied(), optime2);",4134,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(oqMetadata.getValue().getRBID(), initialValue);",4135,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(oqMetadata.getValue().getSyncSourceIndex(), -1);",4136,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(oqMetadata.getValue().getPrimaryIndex(), -1);",4137,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT_OK(replMetadata.getStatus());,4140,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(replMetadata.getValue().getLastOpCommitted(), optime1);",4141,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(replMetadata.getValue().getLastOpVisible(), OpTime());",4142,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(replMetadata.getValue().getConfigVersion(), 2);",4143,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(replMetadata.getValue().getTerm(), 3);",4144,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(replMetadata.getValue().getSyncSourceIndex(), -1);",4145,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQ(replMetadata.getValue().getPrimaryIndex(), -1);",4146,download/mongodb_mongo209.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/topology_coordinator_impl.cpp,+,rpc::OplogQueryMetadata TopologyCoordinatorImpl::prepareOplogQueryMetadata(,2537,download/mongodb_mongo210.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"return rpc::OplogQueryMetadata(lastCommittedOpTime,",2539,download/mongodb_mongo210.cpp
ae2f197bcb46ee961ebadbccba18154f94a09f56,"SERVER-27231 added disableMaxSyncSourceLagSecs failpoint to turn off re-evaluating sync sources, for jstests that manipulate chaining",src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""disableMaxSyncSourceLagSecs fail point enabled - not checking the most recent """,2484,download/mongodb_mongo211.cpp
ae2f197bcb46ee961ebadbccba18154f94a09f56,"SERVER-27231 added disableMaxSyncSourceLagSecs failpoint to turn off re-evaluating sync sources, for jstests that manipulate chaining",src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""Choosing new sync source because the most recent OpTime of our sync """,2515,download/mongodb_mongo211.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/db/commands/mr.cpp,+,"uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, server));",1786,download/mongodb_mongo212.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk.cpp,+,"auto config = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",78,download/mongodb_mongo213.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,"msgasserted(8070,",523,download/mongodb_mongo214.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,log() << redact(chunkMin.toString());,546,download/mongodb_mongo214.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,log() << redact((*chunk).toString());,547,download/mongodb_mongo214.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,log() << redact(shardKey);,548,download/mongodb_mongo214.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString()));",553,download/mongodb_mongo214.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,"msgasserted(13141, ""Chunk map pointed to incorrect chunk"");",556,download/mongodb_mongo214.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_flush_router_config_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidateAll();,73,download/mongodb_mongo215.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,67,download/mongodb_mongo216.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,+,"auto scopedDb = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",110,download/mongodb_mongo216.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,+,"uassert(ErrorCodes::NamespaceNotSharded, ""ns ["" + nss.ns() + "" is not sharded."", cm);",117,download/mongodb_mongo216.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,+,log() << redact(cmEntry.second->toString());,120,download/mongodb_mongo216.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/config.cpp,+,"uasserted(40371,",129,download/mongodb_mongo217.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/config.cpp,+,"uassert(14822,",246,download/mongodb_mongo217.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""Refresh failed and will be retried as full reload "" << status;",672,download/mongodb_mongo218.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,678,download/mongodb_mongo218.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,+,"grid.catalogClient(txn),",688,download/mongodb_mongo218.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",705,download/mongodb_mongo218.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,717,download/mongodb_mongo218.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(,72,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,std::unique_ptr<ShardingCatalogClient> makeShardingCatalogClient(,141,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",162,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",223,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",251,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",280,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",309,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",337,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",619,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));",637,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(diffQueryStatus.getStatus());,651,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),",654,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",679,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(shardingState()->onStaleShardVersion(,697,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(diffQueryStatus.getStatus());,714,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),",717,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(diffQueryStatus.getStatus());,742,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(0, 0))),",745,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",767,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(ErrorCodes::RemoteChangeDetected, status);",787,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(diffQueryStatus.getStatus());,804,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_BSONOBJ_EQ(,808,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",835,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));",853,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",876,download/mongodb_mongo219.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(ErrorCodes::HostNotFound, status);",897,download/mongodb_mongo219.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"LOG(1) << ""Successfully refreshed metadata for "" << nss.ns() << "" to """,290,download/mongodb_mongo220.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""Refresh failed and will be retried as full reload """,305,download/mongodb_mongo220.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,692,download/mongodb_mongo220.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"grid.catalogClient(txn),",706,download/mongodb_mongo220.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,711,download/mongodb_mongo220.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",725,download/mongodb_mongo220.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(""a"", shardingState()->getShardName());",124,download/mongodb_mongo221.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(""a"", shardingState()->getShardName());",174,download/mongodb_mongo221.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(""a"", shardingState()->getShardName());",202,download/mongodb_mongo221.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(""a"", shardingState()->getShardName());",231,download/mongodb_mongo221.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(""a"", shardingState()->getShardName());",260,download/mongodb_mongo221.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(""a"", shardingState()->getShardName());",288,download/mongodb_mongo221.cpp
9edfc4c8ba273d54ecdc31c1fc0eb8c6a42ccbc4,SERVER-27678 moved DataReplicator::OnCompletionGuard into its own library,src/mongo/db/repl/callback_completion_guard.cpp,+,void CallbackCompletionGuardBase::logUnsetResultErrorAndTerminate() {,43,download/mongodb_mongo222.cpp
9edfc4c8ba273d54ecdc31c1fc0eb8c6a42ccbc4,SERVER-27678 moved DataReplicator::OnCompletionGuard into its own library,src/mongo/db/repl/callback_completion_guard.cpp,+,fassertFailed(40370);,46,download/mongodb_mongo222.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,+,"log() << ""Refresh failed and will be retried as full reload "" << status;",672,download/mongodb_mongo223.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,678,download/mongodb_mongo223.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,+,"grid.catalogClient(txn),",688,download/mongodb_mongo223.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",705,download/mongodb_mongo223.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,717,download/mongodb_mongo223.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(,72,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,std::unique_ptr<ShardingCatalogClient> makeShardingCatalogClient(,141,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",162,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",223,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",251,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",280,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",309,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(shardName(), shardingState()->getShardName());",337,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",619,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));",637,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(diffQueryStatus.getStatus());,651,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),",654,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",679,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(shardingState()->onStaleShardVersion(,697,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(diffQueryStatus.getStatus());,714,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(2, 0))),",717,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(diffQueryStatus.getStatus());,742,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""ns"" << nss.ns() << ""lastmod"" << BSON(""$gte"" << Timestamp(0, 0))),",745,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",767,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(ErrorCodes::RemoteChangeDetected, status);",787,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_OK(diffQueryStatus.getStatus());,804,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,ASSERT_BSONOBJ_EQ(,808,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",835,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->onStaleShardVersion(operationContext(), nss, newVersion));",853,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_OK(shardingState()->initializeFromShardIdentity(operationContext(), shardIdentity));",876,download/mongodb_mongo224.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state_test.cpp,+,"ASSERT_EQ(ErrorCodes::HostNotFound, status);",897,download/mongodb_mongo224.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+,ASSERT_OK(catalogClient()->appendInfoForConfigServerDatabases(,66,download/mongodb_mongo225.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+,ASSERT_OK(catalogClient()->appendInfoForConfigServerDatabases(,126,download/mongodb_mongo225.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+,"ASSERT_BSONOBJ_EQ(kReplSecondaryOkMetadata,",134,download/mongodb_mongo225.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+,"ASSERT_EQ(""admin"", request.dbname);",137,download/mongodb_mongo225.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""listDatabases"" << 1 << ""filter"" << BSON(""name""",138,download/mongodb_mongo225.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+,auto status = catalogClient()->appendInfoForConfigServerDatabases(,163,download/mongodb_mongo225.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+,auto status = catalogClient()->appendInfoForConfigServerDatabases(,182,download/mongodb_mongo225.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/catalog/sharding_catalog_append_db_stats_test.cpp,+,auto status = catalogClient()->appendInfoForConfigServerDatabases(,199,download/mongodb_mongo225.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/commands/cluster_list_databases_cmd.cpp,+,"uassertStatusOK(bsonExtractIntegerField(dbElt.Obj(), ""sizeOnDisk""_sd, &sizeOnDisk));",179,download/mongodb_mongo226.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/commands/cluster_list_databases_cmd.cpp,+,"uassert(ErrorCodes::BadValue,",180,download/mongodb_mongo226.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), match);",178,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), serialize(reserialized.getMatchExpression()));",179,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",182,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",185,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",188,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",259,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",314,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), serialize(reserialized.getMatchExpression()));",317,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",320,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",323,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",391,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",409,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",428,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",574,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(), serialize(reserialized.getMatchExpression()));",576,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",579,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",582,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_EQ(original.matches(obj), reserialized.matches(obj));",584,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",703,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",720,download/mongodb_mongo227.cpp
04b16905b7c3b6b3fce5fbc7f6ba17522311a7c4,SERVER-27649 $elemMatch serialization $regex support,src/mongo/db/matcher/expression_serialization_test.cpp,+,"ASSERT_BSONOBJ_EQ(*reserialized.getQuery(),",737,download/mongodb_mongo227.cpp
21948042b6da5fb5bf15897f9808a70551f5af09,SERVER-27680 Merge stopOplogFetcher and pauseRsBgSyncProducer failpoint into single stopReplProducer failpoint,src/mongo/db/repl/bgsync.cpp,+,"log() << ""bgsync - stopReplProducer fail point """,262,download/mongodb_mongo228.cpp
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,+,ASSERT_OK(loaderStatus.getStatus());,505,download/mongodb_mongo229.cpp
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,+,"ASSERT_OK(loader->insertDocuments(docs.begin(), docs.end()));",508,download/mongodb_mongo229.cpp
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,+,ASSERT_TRUE(coll);,519,download/mongodb_mongo229.cpp
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,+,"ASSERT_EQ(1LL, coll->getRecordStore()->numRecords(txn));",520,download/mongodb_mongo229.cpp
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,+,auto collIdxCat = coll->getIndexCatalog();,524,download/mongodb_mongo229.cpp
fd6971a17400c37ea6bf6c54ef2c04c25201416d,SERVER-27677 CollectionBulkLoaderImpl::_releaseResources ensures that a Client is available when destroying MultiIndexBlock,src/mongo/db/repl/storage_interface_impl_test.cpp,+,"ASSERT_EQUALS(0, collIdxCat->numIndexesTotal(txn));",525,download/mongodb_mongo229.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"uassert(ErrorCodes::StaleEpoch,",160,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"return {ErrorCodes::Error(40165),",220,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,Status applyOpsStatus = Grid::get(txn)->catalogClient(txn)->applyChunkOpsDeprecated(,432,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"WriteConcernOptions(),",438,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,Grid::get(txn)->catalogClient(txn)->logChange(,457,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"txn, ""split"", ns.ns(), logDetail.obj(), WriteConcernOptions());",458,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,Grid::get(txn)->catalogClient(txn)->logChange(,471,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"txn, ""multi-split"", ns.ns(), chunkDetail.obj(), WriteConcernOptions());",472,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,Status applyOpsStatus = Grid::get(txn)->catalogClient(txn)->applyChunkOpsDeprecated(,557,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"WriteConcernOptions(),",563,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,Grid::get(txn)->catalogClient(txn)->logChange(,580,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"txn, ""merge"", ns.ns(), logDetail.obj(), WriteConcernOptions());",581,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"return Status(ErrorCodes::Error(40164),",645,download/mongodb_mongo230.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,"const WriteConcernOptions kNoWaitWriteConcern(1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));",1479,download/mongodb_mongo231.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,ShardingCatalogManagerImpl::ShardingCatalogManagerImpl(,1498,download/mongodb_mongo231.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,ShardingCatalogManagerImpl::~ShardingCatalogManagerImpl() = default;,1522,download/mongodb_mongo231.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,"LOG(1) << ""ShardingCatalogManagerImpl::shutDown() called."";",1571,download/mongodb_mongo231.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,const auto catalogClient = Grid::get(txn)->catalogClient(txn);,123,download/mongodb_mongo231.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"const WriteConcernOptions kNoWaitWriteConcern(1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));",81,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"LOG(0) << ""Operation for addShard timed out with status "" << swResponse.status;",158,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,if (!Shard::shouldErrorBePropagated(swResponse.status.code())) {,160,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,if (!Shard::shouldErrorBePropagated(commandStatus.code())) {,174,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,Status writeConcernStatus = getWriteConcernStatusFromCommandResult(responseObj);,182,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,if (!Shard::shouldErrorBePropagated(writeConcernStatus.code())) {,183,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,const auto existingShards = Grid::get(txn)->catalogClient(txn)->getAllShards(,204,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"auto dbt = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName);",584,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"LOG(2) << ""going to insert shardIdentity document into shard: "" << shardType;",642,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"Shard::CommandResponse::processBatchWriteResponse(commandResponse, &batchResponse);",654,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"log() << ""going to insert new entry for shard into config.shards: "" << shardType.toString();",660,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,Status result = Grid::get(txn)->catalogClient(txn)->insertConfigDocument(,662,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"log() << ""error adding shard: "" << shardType.toBSON() << "" err: "" << result.reason();",665,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"Status status = Grid::get(txn)->catalogClient(txn)->updateDatabase(txn, dbName, dbt);",676,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"log() << ""adding shard "" << shardConnectionString.toString()",678,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,Grid::get(txn)->catalogClient(txn)->logChange(,688,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"log() << ""Retrying upsert of shardIdentity document into shard "" << shardType.getName();",864,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,Status writeConcernStatus = getWriteConcernStatusFromCommandResult(responseObj);,911,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"Shard::CommandResponse::processBatchWriteResponse(commandResponse, &batchResponse);",919,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,->catalogClient(txnPtr.get()),989,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,commandRequest.setWriteConcern(ShardingCatalogClient::kMajorityWriteConcern.toBSON());,1033,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"fassert(40219, swHandle.getStatus());",1053,download/mongodb_mongo232.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+,"const WriteConcernOptions kNoWaitWriteConcern(1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));",54,download/mongodb_mongo233.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+,auto updateStatus = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,180,download/mongodb_mongo233.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+,auto updateStatus = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,290,download/mongodb_mongo233.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+,auto updateStatus = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,365,download/mongodb_mongo233.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+,return Grid::get(txn)->catalogClient(txn)->removeConfigDocuments(,393,download/mongodb_mongo233.cpp
c43d7cd31af6854eaf134f8021d9f0784ddf5070,SERVER-27460 fix RouterStageMerge::kill() crash during mongos shutdown,src/mongo/s/query/async_results_merger_test.cpp,+,"ASSERT_EQ(ErrorCodes::ShutdownInProgress, arm->nextEvent().getStatus());",861,download/mongodb_mongo234.cpp
e8893fc311ac12028dafcf4416c2f534a42f1cf7,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,+,"assertGet(QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));",1313,download/mongodb_mongo235.cpp
e8893fc311ac12028dafcf4416c2f534a42f1cf7,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,+,"ASSERT_EQ(qr->getComment(), ""{ b: 2, c: { d: \""ParseFromLegacyObjMetaOpComment\"" } }"");",1316,download/mongodb_mongo235.cpp
e8893fc311ac12028dafcf4416c2f534a42f1cf7,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,+,"assertGet(QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));",1325,download/mongodb_mongo235.cpp
e8893fc311ac12028dafcf4416c2f534a42f1cf7,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,+,"ASSERT_EQ(qr->getComment(), ""ParseFromLegacyStringMetaOpComment"");",1327,download/mongodb_mongo235.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,84,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 2);",85,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",86,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,91,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 3);",92,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",93,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,103,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 2);",104,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",105,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,110,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 2);",111,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",112,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,122,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 2);",123,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",124,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,129,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 2);",130,download/mongodb_mongo236.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",131,download/mongodb_mongo236.cpp
3ead1168d2078379da99c0b5266b6239222d0a35,SERVER-26945 ReplSource::resyncDrop should not assume database name obtained from listDatabases result exists locally,src/mongo/db/repl/master_slave.cpp,+,"log() << ""resync: dropping database "" << dbName",492,download/mongodb_mongo237.cpp
0eeb9396ff46269c2181e5d4aeab629863d875d4,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,+,"assertGet(QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));",1313,download/mongodb_mongo238.cpp
0eeb9396ff46269c2181e5d4aeab629863d875d4,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,+,"ASSERT_EQ(qr->getComment(), ""{ b: 2, c: { d: \""ParseFromLegacyObjMetaOpComment\"" } }"");",1316,download/mongodb_mongo238.cpp
0eeb9396ff46269c2181e5d4aeab629863d875d4,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,+,"assertGet(QueryRequest::fromLegacyQueryForTest(nss, queryObj, BSONObj(), 0, 0, 0)));",1325,download/mongodb_mongo238.cpp
0eeb9396ff46269c2181e5d4aeab629863d875d4,"SERVER-27438 Prevent mongos from dropping legacy $comment meta-operator

Closes #1135

Signed-off-by: James Wahlin <james.wahlin@10gen.com>",src/mongo/db/query/query_request_test.cpp,+,"ASSERT_EQ(qr->getComment(), ""ParseFromLegacyStringMetaOpComment"");",1327,download/mongodb_mongo238.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_TRUE(cmdObj.hasField(""shardVersion""));",81,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kNs, request.getNss().ns());",85,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kTestConfigServerConnectionString.toString(), request.getConfigServerCS().toString());",86,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kFromShard, request.getFromShardId());",87,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kToShard, request.getToShardId());",88,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(kMin, request.getMinKey());",89,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(kMax, request.getMaxKey());",90,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(chunkVersion.epoch(), request.getVersionEpoch());",91,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kMaxChunkSizeBytes, request.getMaxChunkSizeBytes());",92,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kWaitForDelete, request.getWaitForDelete());",120,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"auto value1 = assertGet(MoveChunkRequest::createFromCommand(kNs, obj));",152,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"auto value2 = assertGet(MoveChunkRequest::createFromCommand(kNs, obj));",153,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"auto value1 = assertGet(MoveChunkRequest::createFromCommand(kNs, builder1.obj()));",185,download/mongodb_mongo239.cpp
fdec6ed545c0045646c7cca33eb4094385bc9429,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"auto value2 = assertGet(MoveChunkRequest::createFromCommand(kNs, builder2.obj()));",207,download/mongodb_mongo239.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/commands/strategy.cpp,+,"void Strategy::writeOp(OperationContext* txn, DbMessage* dbm) {",484,download/mongodb_mongo240.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"uassert(ErrorCodes::IllegalOperation,",111,download/mongodb_mongo241.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",134,download/mongodb_mongo241.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"uassert(ErrorCodes::IllegalOperation,",138,download/mongodb_mongo241.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"LOG(3) << ""Request::process begin ns: "" << nss << "" msg id: "" << msgId",145,download/mongodb_mongo241.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"Strategy::writeOp(txn.get(), &dbm);",163,download/mongodb_mongo241.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"LOG(3) << ""Request::process end ns: "" << nss << "" msg id: "" << msgId",167,download/mongodb_mongo241.cpp
a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5,"SERVER-27603 Rename mongo::inShutdown() to mongo::globalInShutdownDeprecated() for clarity.

Calling this function is deprecated because modules that consult it
cannot engage in an orderly, coordinated shutdown. Instead, such
modules tend to just stop working at some point after
mongo::shutdown() is invoked, without regard to whether modules that
depend on them have already shut down.

As such, for clarity, this patch renames the function from
mongo::inShutdown() to mongo::globalInShutdownDeprecated(). This also
helps disambiguate calls to this function from calls to individual
components' similarly named functions.

Also, remove uncalled mongo::inShutdownStrict().",src/mongo/client/connpool.cpp,+,"uassert(17382, ""Can't use connection pool during shutdown"", !globalInShutdownDeprecated());",188,download/mongodb_mongo242.cpp
a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5,"SERVER-27603 Rename mongo::inShutdown() to mongo::globalInShutdownDeprecated() for clarity.

Calling this function is deprecated because modules that consult it
cannot engage in an orderly, coordinated shutdown. Instead, such
modules tend to just stop working at some point after
mongo::shutdown() is invoked, without regard to whether modules that
depend on them have already shut down.

As such, for clarity, this patch renames the function from
mongo::inShutdown() to mongo::globalInShutdownDeprecated(). This also
helps disambiguate calls to this function from calls to individual
components' similarly named functions.

Also, remove uncalled mongo::inShutdownStrict().",src/mongo/db/storage/mmap_v1/dur_recover.cpp,+,"uassert(ErrorCodes::Interrupted,",529,download/mongodb_mongo243.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2U);,2182,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2183,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2186,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2U);,2197,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2198,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2201,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(5U);,2213,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2214,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2217,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2220,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2224,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2228,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2U);,2240,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2241,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2244,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2U);,2257,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2258,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2261,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(2U);,2273,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2274,download/mongodb_mongo244.cpp
be58d599fd9df085c94be3c22051f04aa3df5c13,SERVER-24027 Planner should consider reversing index scan direction in order to obtain a SORT_MERGE plan,src/mongo/db/query/query_planner_test.cpp,+,assertSolutionExists(,2277,download/mongodb_mongo244.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,+,"ASSERT_EQ(request.getBatchSize(), 10);",64,download/mongodb_mongo245.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,+,"ASSERT_DOCUMENT_EQ(request.serializeToCommandObj(), expectedSerialization);",137,download/mongodb_mongo245.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,+,"ASSERT_EQ(request.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",147,download/mongodb_mongo245.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/pipeline/aggregation_request_test.cpp,+,"ASSERT_NOT_OK(AggregationRequest::parseFromBSON(nss, inputBson).getStatus());",197,download/mongodb_mongo245.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/count_request_test.cpp,+,"ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",225,download/mongodb_mongo246.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/count_request_test.cpp,+,"ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",246,download/mongodb_mongo246.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/parsed_distinct_test.cpp,+,"ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",64,download/mongodb_mongo247.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/parsed_distinct_test.cpp,+,"ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",95,download/mongodb_mongo247.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,+,"ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",1107,download/mongodb_mongo248.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,+,"ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",1244,download/mongodb_mongo248.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,+,"ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",1287,download/mongodb_mongo248.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/query/query_request_test.cpp,+,"ASSERT_EQ(ar.getValue().getBatchSize(), AggregationRequest::kDefaultBatchSize);",1302,download/mongodb_mongo248.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/views/resolved_view_test.cpp,+,"ASSERT_BSONOBJ_EQ(result.getValue(), expected);",128,download/mongodb_mongo249.cpp
92e599237444912607e70a745fe5c0aa00dd4caf,SERVER-24623 Remove single document aggregation result option,src/mongo/db/views/resolved_view_test.cpp,+,ASSERT_OK(result.getStatus());,139,download/mongodb_mongo249.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2U);,1422,download/mongodb_mongo250.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{proj: {spec: {_id: 0, a: 1}, node: {cscan: {dir: 1}}}}"");",1423,download/mongodb_mongo250.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1424,download/mongodb_mongo250.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2U);,1435,download/mongodb_mongo250.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{proj: {spec: {_id: 0, b: 1}, node: {cscan: {dir: 1}}}}"");",1436,download/mongodb_mongo250.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1437,download/mongodb_mongo250.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,+,assertNumSolutions(2U);,1448,download/mongodb_mongo250.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,+,"assertSolutionExists(""{proj: {spec: {_id:0,'a.y':1}, node: {cscan: {dir: 1}}}}"");",1449,download/mongodb_mongo250.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_planner_array_test.cpp,+,assertSolutionExists(,1450,download/mongodb_mongo250.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_TRUE(node->hasField(""a""));",775,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_TRUE(node->hasField(""b.c.d""));",776,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b.c""));",777,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b""));",778,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""e""));",779,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_TRUE(node->hasField(""a""));",786,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_TRUE(node->hasField(""b.c.d""));",787,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b.c""));",788,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b""));",789,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""e""));",790,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""a""));",797,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b.c.d""));",798,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b.c""));",799,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b""));",800,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""e""));",801,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_TRUE(node->hasField(""a""));",812,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b""));",813,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b.c""));",814,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_TRUE(node->hasField(""c""));",815,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_TRUE(node->hasField(""a""));",826,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b""));",827,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b.c""));",828,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_FALSE(node->hasField(""b.c.d""));",829,download/mongodb_mongo251.cpp
8953400c0f999bcb9da067edfb7978130516ac04,"SERVER-3173 use path-level multikey metadata to generate covered plans if possible

This allows queries using a multikey index which project out
the array fields to avoid collection access.",src/mongo/db/query/query_solution_test.cpp,+,"ASSERT_TRUE(node->hasField(""e""));",830,download/mongodb_mongo251.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata.cpp,+,"OplogQueryMetadata::OplogQueryMetadata(OpTime lastOpCommitted,",56,download/mongodb_mongo252.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata.cpp,+,"return OplogQueryMetadata(lastOpCommitted, lastOpApplied, rbid, primaryIndex, syncSourceIndex);",101,download/mongodb_mongo252.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata.cpp,+,Status OplogQueryMetadata::writeToMetadata(BSONObjBuilder* builder) const {,104,download/mongodb_mongo252.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,"ASSERT_EQ(opTime1, metadata.getLastOpCommitted());",46,download/mongodb_mongo253.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,"ASSERT_EQ(opTime2, metadata.getLastOpApplied());",47,download/mongodb_mongo253.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,metadata.writeToMetadata(&builder);,50,download/mongodb_mongo253.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,"ASSERT_BSONOBJ_EQ(expectedObj, serializedObj);",65,download/mongodb_mongo253.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,ASSERT_OK(cloneStatus.getStatus());,68,download/mongodb_mongo253.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,"ASSERT_EQ(opTime1, clonedMetadata.getLastOpCommitted());",71,download/mongodb_mongo253.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,"ASSERT_EQ(opTime2, clonedMetadata.getLastOpApplied());",72,download/mongodb_mongo253.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,"ASSERT_EQ(metadata.getRBID(), clonedMetadata.getRBID());",73,download/mongodb_mongo253.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,"ASSERT_EQ(metadata.getPrimaryIndex(), clonedMetadata.getPrimaryIndex());",74,download/mongodb_mongo253.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,"ASSERT_EQ(metadata.getSyncSourceIndex(), clonedMetadata.getSyncSourceIndex());",75,download/mongodb_mongo253.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,clonedMetadata.writeToMetadata(&clonedBuilder);,78,download/mongodb_mongo253.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata_test.cpp,+,"ASSERT_BSONOBJ_EQ(expectedObj, clonedSerializedObj);",81,download/mongodb_mongo253.cpp
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,ASSERT_OK(_databaseCloner->startup());,572,download/mongodb_mongo254.cpp
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""listCollections"",",577,download/mongodb_mongo254.cpp
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""count"", noi->getRequest());",593,download/mongodb_mongo254.cpp
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(""a"", noi->getRequest().cmdObj.firstElement().String());",594,download/mongodb_mongo254.cpp
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,ASSERT_FALSE(_databaseCloner->isActive());,604,download/mongodb_mongo254.cpp
e3cf6a7d9f6e0320c1e23b3d7d935f880d70869f,SERVER-27611 DatabaseCloner::shutdown() should shut down CollectionCloner,src/mongo/db/repl/database_cloner_test.cpp,+,"ASSERT_EQUALS(ErrorCodes::ShutdownInProgress, getStatus());",608,download/mongodb_mongo254.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/db/s/migration_source_manager.cpp,+,"uassert(ErrorCodes::InvalidOptions, ""collection version is missing"", oss.hasShardVersion());",95,download/mongodb_mongo255.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(""TestDB.TestColl"", request.getNss().ns());",84,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kTestConnectionString.toString(), request.getConfigServerCS().toString());",85,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(ShardId(""shard0001""), request.getFromShardId());",86,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(ShardId(""shard0002""), request.getToShardId());",87,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""Key"" << -100), request.getMinKey());",88,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""Key"" << 100), request.getMaxKey());",89,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,ASSERT(request.hasChunkVersion());,90,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(chunkVersion, request.getChunkVersion());",91,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(1024, request.getMaxChunkSizeBytes());",92,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(true, request.getWaitForDelete());",95,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""),",102,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(""TestDB.TestColl"", request.getNss().ns());",121,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kTestConnectionString.toString(), request.getConfigServerCS().toString());",122,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(ShardId(""shard0001""), request.getFromShardId());",123,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(ShardId(""shard0002""), request.getToShardId());",124,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""Key"" << -1), request.getMinKey());",125,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""Key"" << 1), request.getMaxKey());",126,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,ASSERT(!request.hasChunkVersion());,127,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(MigrationSecondaryThrottleOptions::kDefault,",128,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(false, request.getWaitForDelete());",130,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",144,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));",162,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"assertGet(MoveChunkRequest::createFromCommand(NamespaceString(""TestDB"", ""TestColl""), obj));",164,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",181,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,auto value1 = assertGet(,196,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,"assertGet(ConnectionString::parse(""TestConfigRS/CS1:12345,CS2:12345,CS3:12345"")),",209,download/mongodb_mongo256.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/s/move_chunk_request_test.cpp,+,auto value2 = assertGet(,219,download/mongodb_mongo256.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_TRUE(cmdObj.hasField(""shardVersion""));",81,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kNs, request.getNss().ns());",85,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kTestConfigServerConnectionString.toString(), request.getConfigServerCS().toString());",86,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kFromShard, request.getFromShardId());",87,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kToShard, request.getToShardId());",88,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(kMin, request.getMinKey());",89,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_BSONOBJ_EQ(kMax, request.getMaxKey());",90,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(chunkVersion.epoch(), request.getVersionEpoch());",91,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kMaxChunkSizeBytes, request.getMaxChunkSizeBytes());",92,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"ASSERT_EQ(kWaitForDelete, request.getWaitForDelete());",120,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"auto value1 = assertGet(MoveChunkRequest::createFromCommand(kNs, obj));",152,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"auto value2 = assertGet(MoveChunkRequest::createFromCommand(kNs, obj));",153,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"auto value1 = assertGet(MoveChunkRequest::createFromCommand(kNs, builder1.obj()));",185,download/mongodb_mongo257.cpp
d779870e5d4744cbcc402cba2a77f8d892bed0ef,SERVER-25673 Remove redundant ChunkManager access in MigrationManager,src/mongo/s/move_chunk_request_test.cpp,+,"auto value2 = assertGet(MoveChunkRequest::createFromCommand(kNs, builder2.obj()));",207,download/mongodb_mongo257.cpp
3f51a51845e2c8c5b748905b7f8f472cb379f6e8,SERVER-27556/SERVER-27608 Fix a Coverity unchecked return value warning,src/mongo/s/commands/strategy.cpp,+,"LOG(1) << ""Database does not exist or collection no longer sharded after a """,342,download/mongodb_mongo258.cpp
8478c3b4f7c2e2e8804ca4f5a3847b07a71fd9b3,SERVER-22348 propagate binary paths from resmoke to MongoRunner,src/mongo/shell/shell_utils_launcher.cpp,+,"uassert(ErrorCodes::FailedToParse,",264,download/mongodb_mongo259.cpp
8478c3b4f7c2e2e8804ca4f5a3847b07a71fd9b3,SERVER-22348 propagate binary paths from resmoke to MongoRunner,src/mongo/shell/shell_utils_launcher.cpp,+,"uassert(ErrorCodes::FailedToParse,",270,download/mongodb_mongo259.cpp
e5b42cc86c8b97c84c6bec4e9e41ea5f3064e2b4,SERVER-27582 initialize lastVote properly,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Did not find local voted for document at startup."";",402,download/mongodb_mongo260.cpp
e5b42cc86c8b97c84c6bec4e9e41ea5f3064e2b4,SERVER-27582 initialize lastVote properly,src/mongo/db/repl/replication_coordinator_impl.cpp,+,fassertFailedNoTrace(40367);,406,download/mongodb_mongo260.cpp
166a9663a3cb627f36873ffa104a60c0c935393c,SERVER-27308 Reduce cost of sharding check in DocumentSourceLookup,src/mongo/db/pipeline/pipeline_d.cpp,+,"uassert(4567, ""from collection cannot be sharded"", !bool(css->getMetadata()));",206,download/mongodb_mongo261.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/request.cpp,+,"Strategy::writeOp(txn, op, &_d);",111,download/mongodb_mongo262.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,"audit::logQueryAuthzCheck(client, nss, q.query, status.code());",168,download/mongodb_mongo263.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,return uassertStatusOK(ReadPreferenceSetting::fromBSON(rpElem.Obj()));,215,download/mongodb_mongo263.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,"uassertStatusOK(CanonicalQuery::canonicalize(txn, q, ExtensionsCallbackNoop()));",219,download/mongodb_mongo263.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,uassertStatusOK(Strategy::explainFind(,240,download/mongodb_mongo263.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,"uassert(16978,",247,download/mongodb_mongo263.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,"void Strategy::writeOp(OperationContext* txn, int op, DbMessage* dbm) {",489,download/mongodb_mongo263.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,dassert(parsed && commandResponse.isValid(nullptr));,541,download/mongodb_mongo263.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,+,"uassert(28739, ""Geo coarsest level must be in range [0,30]"", 0 <= minLevel && minLevel <= 30);",121,download/mongodb_mongo264.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,+,"uassert(28740, ""Geo finest level must be in range [0,30]"", 0 <= maxLevel && maxLevel <= 30);",122,download/mongodb_mongo264.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,+,"uassert(28741, ""Geo coarsest level must be less than or equal to finest"", minLevel <= maxLevel);",123,download/mongodb_mongo264.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(internalQueryEnumerationMaxOrSolutions.load());,3284,download/mongodb_mongo265.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(internalQueryEnumerationMaxOrSolutions.load());,3559,download/mongodb_mongo265.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/query_planner_test.cpp,+,assertNumSolutions(internalQueryEnumerationMaxOrSolutions.load());,3576,download/mongodb_mongo265.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"uassertStatusOK(drCopy->startup(txn, numInitialSyncAttempts.load()));",657,download/mongodb_mongo266.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/server_parameters_test.cpp,+,"ASSERT_EQUALS(6, f.load());",50,download/mongodb_mongo267.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/server_parameters_test.cpp,+,"ASSERT_EQUALS(7, f.load());",53,download/mongodb_mongo267.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/server_parameters_test.cpp,+,"ASSERT_EQUALS(8, f.load());",56,download/mongodb_mongo267.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/dbtests/plan_ranking.cpp,+,"ASSERT_GTE(N, internalQueryPlanEvaluationWorks.load() + 1000);",85,download/mongodb_mongo268.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/bgsync.cpp,+,"log() << ""rollback - rollbackHangBeforeStart fail point """,630,download/mongodb_mongo269.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher.cpp,+,"error() << ""invalid replication metadata from sync source "" << _fetcher->getSource()",482,download/mongodb_mongo270.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"{makeCursorResponse(0, {makeNoopOplogEntry(lastFetched)}),",556,download/mongodb_mongo271.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_OK(processSingleBatch({makeCursorResponse(0, {makeNoopOplogEntry(lastFetched)}),",568,download/mongodb_mongo271.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_TRUE(dataReplicatorExternalState->metadataWasProcessed);,572,download/mongodb_mongo271.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_OK(metadata.writeToMetadata(&bob));,580,download/mongodb_mongo271.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQUALS(ErrorCodes::OplogStartMissing,",582,download/mongodb_mongo271.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"{makeCursorResponse(0, {makeNoopOplogEntry(Seconds(456), lastFetched.value)}),",584,download/mongodb_mongo271.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher_test.cpp,+,ASSERT_FALSE(dataReplicatorExternalState->metadataWasProcessed);,588,download/mongodb_mongo271.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT_OK(metadata.getValue().writeToMetadata(&metadataBuilder));,4050,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT_TRUE(net->hasReadyRequests());,4056,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(HostAndPort(""node2"", 12345), request.target);",4059,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(""replSetHeartbeat"", request.cmdObj.firstElement().fieldNameStringData());",4060,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(OpTime(Timestamp(0, 0), 0), getReplCoord()->getLastCommittedOpTime());",4070,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(3, getReplCoord()->getTerm());",4071,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(-1, getTopoCoord().getCurrentPrimaryIndex());",4072,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"assertStartSuccess(BSON(""_id""",4077,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(OpTime(Timestamp(0, 0), 0), getReplCoord()->getLastCommittedOpTime());",4095,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(1, getReplCoord()->getTerm());",4098,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"assertStartSuccess(BSON(""_id""",4399,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT_TRUE(replCoord->setFollowerMode(MemberState::RS_SECONDARY));,4417,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_NOT_EQUALS(Date_t(), electionTimeoutWhen);",4420,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT_TRUE(net->hasReadyRequests());,4424,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"log() << ""processing "" << request.cmdObj;",4427,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(HostAndPort(""node2"", 12345), request.target);",4428,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(""replSetHeartbeat"", request.cmdObj.firstElement().fieldNameStringData());",4430,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(heartbeatWhen, net->now());",4443,download/mongodb_mongo272.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_GREATER_THAN(heartbeatWhen + replCoord->getConfig().getElectionTimeoutPeriod(),",4447,download/mongodb_mongo272.cpp
a59962fab548e695f2e0efa2f261381cba771551,SERVER-27583 shut down SyncSourceFeedback outside ReplicationCoordinatorExternalStateImpl lock,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Stopping replication reporter thread"";",267,download/mongodb_mongo273.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"assertStartSuccess(BSON(""_id""",5154,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT(getReplCoord()->setFollowerMode(MemberState::RS_SECONDARY));,5173,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_OK(args.initialize(BSON(""replSetRequestVotes"" << 1 << ""setName""",5181,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_OK(getReplCoord()->processReplSetRequestVotes(txn.get(), args, &response));",5195,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS("""", response.getReason());",5196,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT_TRUE(response.getVoteGranted());,5197,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT_OK(lastVote.getStatus());,5200,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(lastVote.getValue().getTerm(), 7);",5203,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(lastVote.getValue().getCandidateIndex(), 2);",5204,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"assertStartSuccess(BSON(""_id""",5208,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT(getReplCoord()->setFollowerMode(MemberState::RS_SECONDARY));,5227,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_OK(args.initialize(BSON(""replSetRequestVotes"" << 1 << ""setName""",5235,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_OK(getReplCoord()->processReplSetRequestVotes(txn.get(), args, &response));",5249,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS("""", response.getReason());",5250,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT_TRUE(response.getVoteGranted());,5251,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,ASSERT_OK(lastVote.getStatus());,5254,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(lastVote.getValue().getTerm(), 1);",5258,download/mongodb_mongo274.cpp
7c2a4522ff4586d6a999a143988b7f7fa9097af5,SERVER-27155 Change replSetRequestVotes to not store dryRun votes as if they were real,src/mongo/db/repl/replication_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(lastVote.getValue().getCandidateIndex(), 0);",5259,download/mongodb_mongo274.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::TypeMismatch,",541,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::TypeMismatch,",545,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::TypeMismatch,",549,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::TypeMismatch,",556,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::TypeMismatch,",561,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",567,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",574,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",584,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",593,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",601,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",609,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",617,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",625,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,ASSERT_THROWS_CODE(,632,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",642,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",647,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",652,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",662,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObjNoBypassDocumentValidation));",667,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",680,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",695,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",703,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",712,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",720,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",729,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",741,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",746,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_EQ(ErrorCodes::Unauthorized, authzSession->checkAuthForAggregate(testFooNss, cmdObj));",751,download/mongodb_mongo275.cpp
f6daee8d3892e0b2c7c26afb9b1f1d4ba953ccf7,SERVER-27420 explicitly parse first pipeline element in checkAuthForAggregate(),src/mongo/db/auth/authorization_session_test.cpp,+,"ASSERT_OK(authzSession->checkAuthForAggregate(testFooNss, cmdObj));",764,download/mongodb_mongo275.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,"log() << ""rollback 0"";",660,download/mongodb_mongo276.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,Lock::GlobalWrite globalWrite(txn->lockState());,661,download/mongodb_mongo276.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,"log() << ""Cannot transition from "" << _replCoord->getMemberState().toString() << "" to """,663,download/mongodb_mongo276.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,"OplogInterfaceLocal(txn, rsOplogName),",678,download/mongodb_mongo276.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,fassertFailedNoTrace(28723);,689,download/mongodb_mongo276.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,uassertStatusOK(status);,696,download/mongodb_mongo276.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,fassertFailedNoTrace(40276);,729,download/mongodb_mongo276.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,fassertFailedNoTrace(40364);,736,download/mongodb_mongo276.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"Status rollback_internal::updateFixUpInfoFromLocalOplogEntry(FixUpInfo& fixUpInfo,",183,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"auto subStatus = updateFixUpInfoFromLocalOplogEntry(fixUpInfo, subopElement.Obj());",268,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"uasserted(40361, ""rollback error newest oplog entry on source is missing or empty"");",347,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"uasserted(40365, ""rollback rbid on source changed during rollback, canceling this attempt"");",351,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"OpTime minValid = fassertStatusOK(28774, OpTime::parseFromOplogEntry(newMinValidDoc));",356,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""Setting minvalid to "" << minValid;",357,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""rollback couldn't re-get from ns: "" << doc.ns << "" _id: "" << redact(doc._id)",426,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,fassertFailedNoTrace(40366);,765,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""rollback done"";",776,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"uassert(40362,",814,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""rollback 2 FindCommonPoint"";",835,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"return updateFixUpInfoFromLocalOplogEntry(how, operation);",838,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"localOplog, rollbackSource.getOplog(), processOperationForFixUp);",841,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""rollback common point is "" << how.commonPoint;",881,download/mongodb_mongo277.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,"ASSERT_THROWS_CODE(syncRollback(_txn.get(),",247,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,"OplogInterfaceMock({operation}),",248,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,"new OplogInterfaceMock(kEmptyMockOperations))),",250,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,ErrorCodes::Error(40362));,254,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,createOplog(_txn.get());,753,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,RollbackSourceLocal rollbackSource(std::unique_ptr<OplogInterface>(new OplogInterfaceMock({,777,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,"ASSERT_THROWS_CODE(syncRollback(_txn.get(),",782,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,"OplogInterfaceMock({dropCollectionOperation, commonOperation}),",783,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,ASSERT(rollbackSource.copyCollectionCalled);,789,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,"ASSERT_OK(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry));",1042,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,"ASSERT_THROWS(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry.removeField(""ns"")),",1043,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,"ASSERT_OK(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry));",1050,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,"ASSERT_THROWS(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry.removeField(""o"")),",1051,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,"ASSERT_OK(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry));",1059,download/mongodb_mongo278.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback_test.cpp,+,"ASSERT_THROWS(updateFixUpInfoFromLocalOplogEntry(fui, validOplogEntry.removeField(""o2"")),",1060,download/mongodb_mongo278.cpp
2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3,SERVER-25860 Remove redundant operations during rollback,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ns << "" not found on remote host, so not rolling back collmod operation.""",468,download/mongodb_mongo279.cpp
2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3,SERVER-25860 Remove redundant operations during rollback,src/mongo/db/repl/rs_rollback_test.cpp,+,ASSERT((fui.docsToRefetch ==,1048,download/mongodb_mongo280.cpp
2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3,SERVER-25860 Remove redundant operations during rollback,src/mongo/db/repl/rs_rollback_test.cpp,+,ASSERT((fui.docsToRefetch ==,1062,download/mongodb_mongo280.cpp
2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3,SERVER-25860 Remove redundant operations during rollback,src/mongo/db/repl/rs_rollback_test.cpp,+,"ASSERT((fui.docsToRefetch == DocSet{})) << ""remaining docs: "" << fui.docsToRefetch.size();",1072,download/mongodb_mongo280.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,+,"LOG(1) << ""dropCollection: "" << fullns;",374,download/mongodb_mongo281.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,+,"massertNamespaceNotIndex(fullns.toString(), ""dropCollection"");",381,download/mongodb_mongo281.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,+,"audit::logDropCollection(&cc(), fullns.toString());",385,download/mongodb_mongo281.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/repl/rs_rollback.cpp,+,"fassertStatusOK(40359, db->dropCollectionEvenIfSystem(txn, nss));",439,download/mongodb_mongo282.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/repl/rs_rollback.cpp,+,"fassertStatusOK(40360, db->dropCollectionEvenIfSystem(txn, nss));",589,download/mongodb_mongo282.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/repl/rs_rollback.cpp,+,"fassertStatusOK(40361,",756,download/mongodb_mongo282.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/oplog_fetcher_test.cpp,+,auto firstEntry = makeNoopOplogEntry(lastFetched);,657,download/mongodb_mongo283.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"auto secondEntry = makeNoopOplogEntry({{Seconds(456), 0}, lastFetched.opTime.getTerm()}, 200);",658,download/mongodb_mongo283.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"auto thirdEntry = makeNoopOplogEntry({{Seconds(789), 0}, lastFetched.opTime.getTerm()}, 300);",659,download/mongodb_mongo283.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/oplog_fetcher_test.cpp,+,"ASSERT_EQ(shutdownState->getStatus(), Status(ErrorCodes::InternalError, ""my custom error""));",670,download/mongodb_mongo283.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""Upstream node rolled back. Need to retry our rollback."";",859,download/mongodb_mongo284.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver.cpp,+,uassertStatusOK(rbidReply.response.status);,358,download/mongodb_mongo285.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver.cpp,+,uassertStatusOK(getStatusFromCommandResult(rbidReply.response.data));,359,download/mongodb_mongo285.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting "" << candidate << "" due to error: '"" << ex << ""' for """,363,download/mongodb_mongo285.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_TRUE(net->hasReadyRequests());,621,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_EQUALS(currentSyncSource, request.target);",623,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_EQUALS(""admin"", request.dbname);",624,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_EQUALS(SyncSourceResolver::kFetcherTimeout, request.timeout);",625,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""replSetGetRBID"" << 1), request.cmdObj);",626,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT(_response.rbid);,653,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_EQ(*_response.rbid, 7);",654,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_OK(_resolver->startup());,814,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_TRUE(_resolver->isActive());,815,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,_scheduleFirstOplogEntryFetcherResponse(,817,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_FALSE(_resolver->isActive());,821,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_EQUALS(ErrorCodes::OperationFailed, _response.syncSourceStatus);",822,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_OK(_resolver->startup());,898,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_TRUE(_resolver->isActive());,899,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,_scheduleFirstOplogEntryFetcherResponse(,901,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"_scheduleNetworkErrorForFirstNode(getNet(), _selector.get(), candidate1, HostAndPort());",904,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_FALSE(_resolver->isActive());,906,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_EQUALS(candidate1, _selector->getLastBlacklistedSyncSource_forTest());",907,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_EQUALS(getExecutor().now() + SyncSourceResolver::kFetcherErrorBlacklistDuration,",908,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_FALSE(_resolver->isActive());,912,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_EQUALS(HostAndPort(), unittest::assertGet(_response.syncSourceStatus));",913,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_OK(_resolver->startup());,922,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_TRUE(_resolver->isActive());,923,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,_scheduleFirstOplogEntryFetcherResponse(,925,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_FALSE(_resolver->isActive());,936,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_EQUALS(candidate1, _selector->getLastBlacklistedSyncSource_forTest());",937,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_EQUALS(getExecutor().now() + SyncSourceResolver::kFetcherErrorBlacklistDuration,",938,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,ASSERT_FALSE(_resolver->isActive());,942,download/mongodb_mongo286.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver_test.cpp,+,"ASSERT_EQUALS(HostAndPort(), unittest::assertGet(_response.syncSourceStatus));",943,download/mongodb_mongo286.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"LOG(debugLevel) << ""Command on database "" << db",1358,download/mongodb_mongo287.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,<< redact(getRedactedCopyForLogging(request.getCommandArgs()));,1360,download/mongodb_mongo287.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,if (!supportsWriteConcern(cmd)) {,1371,download/mongodb_mongo287.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,if (commandSpecifiesWriteConcern(cmd)) {,1372,download/mongodb_mongo287.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"auto wcResult = extractWriteConcern(txn, cmd, db);",1384,download/mongodb_mongo287.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,const auto oldWC = txn->getWriteConcern();,1393,download/mongodb_mongo287.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,1394,download/mongodb_mongo287.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,txn->setWriteConcern(wcResult.getValue());,1395,download/mongodb_mongo287.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,1400,download/mongodb_mongo287.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"waitForWriteConcern(txn,",1405,download/mongodb_mongo287.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(,1496,download/mongodb_mongo287.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/s/s_only.cpp,+,"std::tie(cmdObj, queryFlags) = uassertStatusOK(",155,download/mongodb_mongo288.cpp
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,+,"auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",393,download/mongodb_mongo289.cpp
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,+,LastError::Disabled disableLastError(&clientLastError);,511,download/mongodb_mongo289.cpp
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,+,"batchErrorToLastError(*commandRequest, commandResponse, &clientLastError);",525,download/mongodb_mongo289.cpp
77b263defe4ce37eb31fa5f7dda52018b148d63a,"SERVER-27556 Cleanup sharding request processing code

No functional changes, just going in the direction of removing
request.h/.cpp.",src/mongo/s/service_entry_point_mongos.cpp,+,"LOG(1) << ""Exception thrown""",126,download/mongodb_mongo290.cpp
77b263defe4ce37eb31fa5f7dda52018b148d63a,"SERVER-27556 Cleanup sharding request processing code

No functional changes, just going in the direction of removing
request.h/.cpp.",src/mongo/s/service_entry_point_mongos.cpp,+,"LastError::get(txn->getClient()).setLastError(ex.getCode(), ex.what());",137,download/mongodb_mongo290.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_OK(collectionCloner->startup());,432,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""count"", net->scheduleSuccessfulResponse(createCountResponse(0)));",439,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""listIndexes"",",443,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,"net->scheduleErrorResponse(Status(ErrorCodes::HostNotFound, """")));",444,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_TRUE(collectionCloner->isActive());,446,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""listIndexes"", noi->getRequest());",450,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_OK(collectionCloner->startup());,717,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""count"", net->scheduleSuccessfulResponse(createCountResponse(0)));",724,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,assertRemoteCommandNameEquals(,729,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""find"",",735,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,"net->scheduleErrorResponse(Status(ErrorCodes::HostNotFound, """")));",736,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,ASSERT_TRUE(collectionCloner->isActive());,738,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/collection_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""find"", noi->getRequest());",742,download/mongodb_mongo291.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,+,"ASSERT_OK(dr->startup(txn.get(), maxAttempts));",655,download/mongodb_mongo292.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,+,ASSERT_FALSE(_storageInterfaceWorkDone.droppedUserDBs);,661,download/mongodb_mongo292.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,+,ASSERT_TRUE(_storageInterfaceWorkDone.droppedUserDBs);,671,download/mongodb_mongo292.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,+,"ASSERT_OK(dr->startup(txn.get(), maxAttempts));",1122,download/mongodb_mongo292.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,+,"assertRemoteCommandNameEquals(""find"",",1132,download/mongodb_mongo292.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,+,"net->scheduleErrorResponse(Status(ErrorCodes::HostNotFound, """")));",1133,download/mongodb_mongo292.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,+,ASSERT_TRUE(dr->isActive());,1137,download/mongodb_mongo292.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/data_replicator_test.cpp,+,processSuccessfulLastOplogEntryFetcherResponse({makeOplogEntry(1)});,1140,download/mongodb_mongo292.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/database_cloner_test.cpp,+,ASSERT_OK(_databaseCloner->startup());,471,download/mongodb_mongo293.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/database_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""listCollections"",",476,download/mongodb_mongo293.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/database_cloner_test.cpp,+,"net->scheduleErrorResponse(Status(ErrorCodes::HostNotFound, """")));",477,download/mongodb_mongo293.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/database_cloner_test.cpp,+,ASSERT_TRUE(_databaseCloner->isActive());,481,download/mongodb_mongo293.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/database_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""listCollections"", noi->getRequest());",485,download/mongodb_mongo293.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,+,ASSERT_OK(cloner.startup());,485,download/mongodb_mongo294.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,+,ASSERT_TRUE(cloner.isActive());,486,download/mongodb_mongo294.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""listDatabases"",",492,download/mongodb_mongo294.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,+,"net->scheduleErrorResponse(Status(ErrorCodes::HostNotFound, """")));",493,download/mongodb_mongo294.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,+,ASSERT_TRUE(cloner.isActive());,497,download/mongodb_mongo294.cpp
03510b1b55475fbbd8c710c70511c6397ca846e9,SERVER-25966 added CollectionCloner tests for metadata retries,src/mongo/db/repl/databases_cloner_test.cpp,+,"assertRemoteCommandNameEquals(""listDatabases"", noi->getRequest());",501,download/mongodb_mongo294.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_apply_ops_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,49,download/mongodb_mongo295.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_apply_ops_cmd.cpp,+,"uasserted(ErrorCodes::CommandNotSupported, ""applyOps not allowed through mongos"");",65,download/mongodb_mongo295.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_available_query_options_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,46,download/mongodb_mongo296.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_commands_common.cpp,+,uassertStatusOK(Grid::get(txn)->catalogClient(txn)->getCollections(,228,download/mongodb_mongo297.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK(catalogClient->dropCollection(txn, nss));",123,download/mongodb_mongo298.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,auto const catalogClient = Grid::get(txn)->catalogClient(txn);,126,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,auto const catalogCache = Grid::get(txn)->catalogCache();,127,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"auto config = uassertStatusOK(catalogCache->getDatabase(txn, dbname));",137,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, config->getPrimaryId()));",152,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,log() << msg;,161,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uasserted(toShardStatus.getStatus().code(), msg);",162,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassert(ErrorCodes::IllegalOperation,",173,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,auto scopedDistLock = uassertStatusOK(catalogClient->getDistLockManager()->lock(,187,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,catalogClient->logChange(,205,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"_buildMoveLogEntry(dbname, fromShard->toString(), toShard->toString(), shardedColls),",209,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"<< txn->getWriteConcern().toBSON()),",230,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"log() << ""clone failed"" << redact(cloneRes);",235,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"appendWriteConcernErrorToCmdResponse(toShard->getId(), wcErrorElem, result);",241,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"auto dbt = uassertStatusOK(catalogClient->getDatabase(txn, dbname)).value;",250,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassertStatusOK(catalogClient->updateDatabase(txn, dbname, dbt));",254,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,catalogClient->logChange(,319,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"_buildMoveLogEntry(dbname, oldPrimary, toShard->toString(), shardedColls),",323,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"static BSONObj _buildMoveLogEntry(const std::string& db,",334,download/mongodb_mongo299.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,90,download/mongodb_mongo300.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,auto const catalogClient = Grid::get(txn)->catalogClient(txn);,129,download/mongodb_mongo300.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"auto scopedShardedDb = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",132,download/mongodb_mongo300.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, config->getPrimaryId()));",221,download/mongodb_mongo300.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,617,download/mongodb_mongo301.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",654,download/mongodb_mongo301.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,uassert(,658,download/mongodb_mongo301.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,"auto scopedFromDb = uassertStatusOK(ScopedShardDatabase::getExisting(txn, fromdb));",669,download/mongodb_mongo301.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::IllegalOperation,",670,download/mongodb_mongo301.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,const auto shard = uassertStatusOK(,687,download/mongodb_mongo301.cpp
5d24dd0ade8b30d9e591eda0f8a008f2f7bde881,"SERVER-27527 Remove explicit shardingEnabled check for databases in M/R and aggregation

The sharded property should be read from the collection itself and not the
database.",src/mongo/s/commands/cluster_aggregate.cpp,+,"uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, mergingShardId));",262,download/mongodb_mongo302.cpp
86e6d8415f250e8b9806482d880e315283c6041b,SERVER-23420 Remove use of GNU extensions in parse_number_test.cpp,src/mongo/base/parse_number_test.cpp,+,"ASSERT_PARSES(double, ""0xff"", 255);",293,download/mongodb_mongo303.cpp
86e6d8415f250e8b9806482d880e315283c6041b,SERVER-23420 Remove use of GNU extensions in parse_number_test.cpp,src/mongo/base/parse_number_test.cpp,+,"ASSERT_PARSES(double, ""-0xff"", -255);",294,download/mongodb_mongo303.cpp
86e6d8415f250e8b9806482d880e315283c6041b,SERVER-23420 Remove use of GNU extensions in parse_number_test.cpp,src/mongo/base/parse_number_test.cpp,+,"ASSERT_PARSES(double, ""0xabcab.defdefP-10"", 687.16784283419838);",295,download/mongodb_mongo303.cpp
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/concurrency/lock_state.cpp,+,void LockerImpl<IsForMMAPV1>::assertEmptyAndReset() {,194,download/mongodb_mongo304.cpp
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/concurrency/lock_state.cpp,+,invariant(!inAWriteUnitOfWork());,195,download/mongodb_mongo304.cpp
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/concurrency/lock_state.cpp,+,assertEmptyAndReset();,292,download/mongodb_mongo304.cpp
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/operation_context_impl.cpp,+,lockState()->assertEmptyAndReset();,79,download/mongodb_mongo305.cpp
46daec6a95628d336762c5f78430f54d361e63c0,SERVER-26126 Fix repl unittests,src/mongo/db/operation_context.cpp,+,dassert(_locker);,401,download/mongodb_mongo306.cpp
7b68733fae7ce8d91f9a5fda67b9972c15a20ef0,SERVER-26126 Remove broken LockState caching,src/mongo/db/concurrency/lock_state.cpp,+,invariant(!inAWriteUnitOfWork());,275,download/mongodb_mongo307.cpp
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/catalog/catalog_cache.cpp,+,"auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName);",57,download/mongodb_mongo308.cpp
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,+,uassertStatusOK(Grid::get(txn)->catalogClient(txn)->getChunks(,229,download/mongodb_mongo309.cpp
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,+,const auto catalogClient = Grid::get(txn)->catalogClient(txn);,347,download/mongodb_mongo309.cpp
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,+,uassertStatusOK(,370,download/mongodb_mongo309.cpp
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,+,Grid::get(txn)->catalogCache()->invalidate(_name);,413,download/mongodb_mongo309.cpp
46f05091c9a7d46b3233a12f28d04e29b6f1dfc9,SERVER-24398 Remove use of boost NOEXCEPT macros in favor of true C++11 noexcept,src/mongo/unittest/unittest.cpp,+,TestAssertionFailure::~TestAssertionFailure() noexcept(false) {,456,download/mongodb_mongo310.cpp
6c4794728036f4a5e9169b895e2a9fb6c328812b,SERVER-27466 move transitionToPrimaryHangBeforeInitializingConfigDatabase to before taking the global exclusive lock,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""transition to primary - """,949,download/mongodb_mongo311.cpp
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,+,"auto connString = fassertStatusOK(28805, ConnectionString::parse(newConnectionString));",314,download/mongodb_mongo312.cpp
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,+,"LOG(1) << ""shard not found for set: "" << newConnectionString",328,download/mongodb_mongo312.cpp
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,+,auto status = Grid::get(txn.get())->catalogClient(txn.get())->updateConfigDocument(,338,download/mongodb_mongo312.cpp
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,+,"error() << ""RSChangeWatcher: could not update config db for set: "" << setName",346,download/mongodb_mongo312.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,"uassertStatusOK(checkAuthorization(command, txn, dbname, request.getCommandArgs()));",1353,download/mongodb_mongo313.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,"LOG(debugLevel) << ""Command on database "" << db",1536,download/mongodb_mongo313.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,<< redact(getRedactedCopyForLogging(request.getCommandArgs()));,1538,download/mongodb_mongo313.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,if (!supportsWriteConcern(cmd)) {,1549,download/mongodb_mongo313.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,if (commandSpecifiesWriteConcern(cmd)) {,1550,download/mongodb_mongo313.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,"auto wcResult = extractWriteConcern(txn, cmd, db);",1562,download/mongodb_mongo313.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,const auto oldWC = txn->getWriteConcern();,1571,download/mongodb_mongo313.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,1572,download/mongodb_mongo313.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,txn->setWriteConcern(wcResult.getValue());,1573,download/mongodb_mongo313.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,1578,download/mongodb_mongo313.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,"waitForWriteConcern(txn,",1583,download/mongodb_mongo313.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/s/s_only.cpp,+,"std::tie(cmdObj, queryFlags) = uassertStatusOK(",74,download/mongodb_mongo314.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"LOG(debugLevel) << ""Command on database "" << db",1358,download/mongodb_mongo315.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,<< redact(getRedactedCopyForLogging(request.getCommandArgs()));,1360,download/mongodb_mongo315.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,if (!supportsWriteConcern(cmd)) {,1371,download/mongodb_mongo315.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,if (commandSpecifiesWriteConcern(cmd)) {,1372,download/mongodb_mongo315.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"auto wcResult = extractWriteConcern(txn, cmd, db);",1384,download/mongodb_mongo315.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,const auto oldWC = txn->getWriteConcern();,1393,download/mongodb_mongo315.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,1394,download/mongodb_mongo315.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,txn->setWriteConcern(wcResult.getValue());,1395,download/mongodb_mongo315.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,1400,download/mongodb_mongo315.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"waitForWriteConcern(txn,",1405,download/mongodb_mongo315.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(,1496,download/mongodb_mongo315.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/s/s_only.cpp,+,"std::tie(cmdObj, queryFlags) = uassertStatusOK(",155,download/mongodb_mongo316.cpp
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/replication_coordinator_impl_elect.cpp,+,"fassertStatusOK(28817, _topCoord->becomeCandidateIfElectable(now, lastOpApplied, false));",286,download/mongodb_mongo317.cpp
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"fassertStatusOK(28816, becomeCandidateIfElectable(now, lastOpApplied, false));",1347,download/mongodb_mongo318.cpp
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_OK(getTopoCoord().becomeCandidateIfElectable(now(), lastOpTimeApplied, false));",3842,download/mongodb_mongo319.cpp
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_OK(getTopoCoord().becomeCandidateIfElectable(now(), lastOpTimeApplied, false));",3874,download/mongodb_mongo319.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(,384,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END(,390,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R dropTempCollections"", _config.incLong.ns())",410,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R prepTempCollection"", _config.incLong.ns());",468,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(_config.tempNamespace));,503,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R prepTempCollection"", _config.tempNamespace.ns())",526,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"getCollectionOrUassert(tx.db(), _config.outputOptions.finalNamespace);",720,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"Collection* coll = getCollectionOrUassert(ctx.db(), nss);",756,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R insert"", nss.ns());",773,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R insertToInc"", _config.incLong.ns());",808,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"Collection* State::getCollectionOrUassert(Database* db, const NamespaceString& nss) {",991,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"uassert(18697, ""Collection unexpectedly disappeared: "" + nss.ns(), out);",993,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""finalReduce"", _config.incLong.ns());",1086,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"LOG(1) << ""mr ns: "" << config.nss;",1397,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,if (!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(config.nss)) {,1442,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"Collection* coll = State::getCollectionOrUassert(db, config.nss);",1505,download/mongodb_mongo320.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/repl/oplog.cpp,+,"AutoGetCollectionForRead oplog(txn.get(), NamespaceString(rsOplogName));",1247,download/mongodb_mongo321.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/dbtests/query_stage_distinct.cpp,+,"ASSERT_OK(dbtests::createIndex(&_txn, nss.ns(), obj));",63,download/mongodb_mongo322.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_cursor_bulk.c,+,"WT_RET(__wt_lsm_meta_write(session, lsm_tree, NULL));",48,download/mongodb_mongo323.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_merge.c,+,"if ((ret = __wt_lsm_meta_write(session, lsm_tree, NULL)) != 0)",582,download/mongodb_mongo324.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_meta.c,+,"__wt_lsm_meta_write(WT_SESSION_IMPL *session, WT_LSM_TREE *lsm_tree,",457,download/mongodb_mongo325.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_ERR(__wt_lsm_meta_write(session, lsm_tree, NULL));",759,download/mongodb_mongo326.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"__wt_lsm_tree_writelock(session, lsm_tree);",865,download/mongodb_mongo326.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_ERR(__wt_lsm_meta_write(session, lsm_tree, cfg[0]));",876,download/mongodb_mongo326.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"__wt_lsm_tree_writeunlock(session, lsm_tree);",879,download/mongodb_mongo326.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_ERR(__wt_lsm_meta_write(session, lsm_tree, NULL));",997,download/mongodb_mongo326.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_tree.c,+,"WT_ERR(__wt_lsm_meta_write(session, lsm_tree, NULL));",1052,download/mongodb_mongo326.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,+,"ret = __wt_lsm_meta_write(session, lsm_tree, NULL);",367,download/mongodb_mongo327.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,+,"ret = __wt_lsm_meta_write(session, lsm_tree, NULL);",472,download/mongodb_mongo327.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/lsm/lsm_work_unit.c,+,"WT_TRET(__wt_lsm_meta_write(session, lsm_tree, NULL));",662,download/mongodb_mongo327.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/schema/schema_alter.c,+,"WT_ASSERT(session, newcfg[0] != NULL);",30,download/mongodb_mongo328.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/schema/schema_alter.c,+,"WT_ASSERT(session, F_ISSET(session, WT_SESSION_LOCKED_TABLE));",65,download/mongodb_mongo328.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/support/hazard.c,+,"WT_ASSERT(session,",88,download/mongodb_mongo329.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/support/hazard.c,+,"WT_ASSERT(session,",99,download/mongodb_mongo329.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/support/hazard.c,+,"WT_ASSERT(session,",104,download/mongodb_mongo329.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/support/hazard.c,+,"WT_ASSERT(session, hp->ref == NULL);",123,download/mongodb_mongo329.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/src/utilities/util_alter.c,+,"(void)fprintf(stderr,",45,download/mongodb_mongo330.cpp
4a185996c83862c2e4b911ce637591c4ff535108,"Import wiredtiger: 8d2324943364286056ae399043f70b8a937de312 from branch mongodb-3.6

ref: 1b6c815a3f..8d23249433
for: 3.5.2

SERVER-26545  Remove fixed-size limitation on WiredTiger hazard pointers
WT-2402       Misaligned structure accesses lead to undefined behavior
WT-283        Add a way to change persistent object settings
WT-3056       For cursors with projections, keys should be allowed
WT-3061       syscall test runs with checkpoint_sync=false and doesn't acknowledge pwrite64
WT-3066       lint
WT-3068       Copy wtperf artifacts when running Jenkins tests
WT-3069       Fix build failures in LevelDB APIs
WT-3070       Fix search_near() for index cursor
WT-3071       Java: fix build with -Werror=sign-conversion
WT-3075       Document and enforce that WiredTiger now depends on Python 2.7
WT-3078       Fix a hang in the reconfiguration test.
WT-3084       Fix Coverity resource leak complaint.",src/third_party/wiredtiger/test/format/util.c,+,"snprintf(buf, sizeof(buf),",492,download/mongodb_mongo331.cpp
caba732fb722d5c2257d17dd09dec8a826c13795,"SERVER-27364 Remove DBConfig::setPrimary

Moves its entire functionality to the 'movePrimary' command.",src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->updateDatabase(txn, dbname, dbt));",239,download/mongodb_mongo332.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->enableSharding(txn, dbname));",110,download/mongodb_mongo333.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,+,"audit::logEnableSharding(Client::getCurrent(), dbname);",111,download/mongodb_mongo333.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(dbname);,114,download/mongodb_mongo333.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, dbname);",235,download/mongodb_mongo334.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,const auto shard = uassertStatusOK(,294,download/mongodb_mongo334.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,const auto shard = uassertStatusOK(,448,download/mongodb_mongo334.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Status status = Grid::get(txn)->catalogClient(txn)->enableSharding(,476,download/mongodb_mongo334.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db().toString());,482,download/mongodb_mongo334.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,uassertStatusOK(status);,484,download/mongodb_mongo334.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,confOut = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(,488,download/mongodb_mongo334.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,uassertStatusOK(,523,download/mongodb_mongo334.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"Grid::get(txn)->catalogClient(txn)->shardCollection(txn,",524,download/mongodb_mongo334.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Grid::get(txn)->catalogClient(txn)->getDistLockManager()->lock(,542,download/mongodb_mongo334.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,64,download/mongodb_mongo335.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,uassertStatusOK(scopedDbStatus.getStatus());,89,download/mongodb_mongo335.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",96,download/mongodb_mongo335.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,if (!txn->getWriteConcern().usedDefault) {,125,download/mongodb_mongo335.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,txn->getWriteConcern().toBSON());,127,download/mongodb_mongo335.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,"const auto shard = uassertStatusOK(shardRegistry->getShard(txn, shardId));",133,download/mongodb_mongo335.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,auto cmdDropResult = uassertStatusOK(shard->runCommandWithFixedRetryAttempts(,134,download/mongodb_mongo335.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,uassertStatusOK(cmdDropResult.commandStatus);,147,download/mongodb_mongo335.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,appendWriteConcernErrorToCmdResponse(,150,download/mongodb_mongo335.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK(catalogClient->dropCollection(txn, NamespaceString(ns)));",126,download/mongodb_mongo336.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,if (!txn->getWriteConcern().usedDefault) {,205,download/mongodb_mongo336.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,txn->getWriteConcern().toBSON());,207,download/mongodb_mongo336.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_TRUE(equalFunc(doc1, doc2));",63,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_FALSE(equalFunc(doc1, doc3));",64,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_TRUE(equalFunc(doc1, doc2));",73,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_TRUE(lessThanFunc(doc1, doc2));",111,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_FALSE(lessThanFunc(doc2, doc1));",112,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_TRUE(lessThanFunc(doc1, doc2));",121,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_FALSE(lessThanFunc(doc2, doc1));",122,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_DOCUMENT_EQ(*it, (Document{{""foo"", ""za""_sd}}));",190,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_DOCUMENT_EQ(*it, (Document{{""foo"", ""yb""_sd}}));",192,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,ASSERT(it == set.end());,194,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_EQ(documentCmp.hash(Document{{""foo"", ""foo""_sd}}),",227,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_NE(documentCmp.hash(Document{{""foo"", ""foo""_sd}}),",229,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_EQ(documentCmp.hash(doc1), documentCmp.hash(doc2));",238,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_EQ(documentCmp.hash(doc1), documentCmp.hash(doc2));",252,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_NE(documentCmp.hash(doc1), documentCmp.hash(doc3));",253,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_NE(documentCmp.hash(doc2), documentCmp.hash(doc3));",254,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_TRUE(set.insert(Document{{""foo"", ""foo""_sd}}).second);",261,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_FALSE(set.insert(Document{{""foo"", ""FOO""_sd}}).second);",262,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_TRUE(set.insert(Document{{""foo"", ""FOOz""_sd}}).second);",263,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_EQ(set.size(), 2U);",264,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_EQ(set.count(Document{{""foo"", ""FoO""_sd}}), 1U);",265,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_EQ(set.count(Document{{""foo"", ""fooZ""_sd}}), 1U);",266,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_EQ(map.size(), 2U);",276,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_EQ(map[(Document{{""foo"", ""FoO""_sd}})], 2);",277,download/mongodb_mongo337.cpp
e50c923ff402a4b2276e62e053eb5326c06b8976,SERVER-23980 Flush out DocumentComparator library.,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_EQ(map[(Document{{""foo"", ""fooZ""_sd}})], 3);",278,download/mongodb_mongo337.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/commands/pipeline_command.cpp,+,: uassertStatusOK(CollatorFactoryInterface::get(txn->getServiceContext()),364,download/mongodb_mongo338.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/commands/pipeline_command.cpp,+,"uassertStatusOK(resolveInvolvedNamespaces(txn, request))));",459,download/mongodb_mongo338.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_THROWS(Expression::parseOperand(expCtx, specElement, vps), UserException);",1664,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_THROWS(ExpressionFieldPath::create(nullptr, """"), UserException);",2152,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""a.b"" << 1), vps), UserException);",2449,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""c"" << 3 << ""a.b"" << 1), vps),",2450,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""a.b"" << 1 << ""c"" << 3), vps),",2452,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""a"" << 1 << ""a"" << 1), vps), UserException);",2462,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""a"" << 1 << ""b"" << 2 << ""a"" << 1), vps),",2463,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,ASSERT_THROWS(,2465,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,ASSERT_THROWS(,2468,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(""$a"" << 1), vps), UserException);",2477,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON("""" << 1), vps), UserException);",2478,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_THROWS(ExpressionObject::parse(expCtx, BSON(std::string(""a\0b"", 3) << 1), vps),",2479,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_THROWS(ExpressionObject::parse(expCtx,",2487,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/expression_test.cpp,+,ASSERT_THROWS(,2500,download/mongodb_mongo339.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << 1 << ""a"" << 2)), UserException);",59,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << BSON(""b"" << 1 << ""b"" << 2))),",60,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""_id"" << 3 << ""_id"" << true)),",62,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << 1 << ""a.b"" << 2)), UserException);",66,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a.b.c"" << 1 << ""a"" << 2)), UserException);",67,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""_id"" << true << ""_id.x"" << true)),",68,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << BSON(""b.c"" << true))), UserException);",76,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""$dollar"" << 0)), UserException);",79,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""c.$d"" << true)), UserException);",80,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON("""" << 2)), UserException);",83,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << BSON("""" << true))), UserException);",84,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON("""" << BSON(""a"" << true))), UserException);",85,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a."" << true)), UserException);",86,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON("".a"" << true)), UserException);",87,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,ASSERT_THROWS(ParsedAddFields::create(,97,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx,",100,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSONObj()), UserException);",110,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_add_fields_test.cpp,+,"ASSERT_THROWS(ParsedAddFields::create(expCtx, BSON(""a"" << BSONObj())), UserException);",113,download/mongodb_mongo340.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << true << ""a"" << true)),",59,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << false << ""a"" << false)),",61,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(ParsedAggregationProjection::create(,63,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(,75,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""_id"" << true << ""_id"" << true)),",90,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(ParsedAggregationProjection::create(,102,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(ParsedAggregationProjection::create(,105,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << true << ""a.b"" << true)),",119,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a.b"" << false << ""a"" << false)),",121,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(ParsedAggregationProjection::create(,131,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(ParsedAggregationProjection::create(,174,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(,177,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << true << ""b"" << false)),",186,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << false << ""b"" << true)),",188,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(ParsedAggregationProjection::create(,194,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""_id"" << true << ""a"" << false)),",216,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << false << ""_id"" << true)),",219,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(ParsedAggregationProjection::create(,254,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(ParsedAggregationProjection::create(,258,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON(""b.c"" << true))),",271,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(,273,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$dollar"" << 0)), UserException);",280,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$dollar"" << 1)), UserException);",281,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""b.$dollar"" << 0)),",283,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""b.$dollar"" << 1)),",285,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""b"" << BSON(""$dollar"" << 0))),",288,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""b"" << BSON(""$dollar"" << 1))),",290,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$add"" << 0)), UserException);",293,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$add"" << 1)), UserException);",294,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$add"" << BSON_ARRAY(4 << 2))),",299,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(,317,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(,321,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSONObj()), UserException);",329,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSONObj())),",334,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(,336,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,ASSERT_THROWS(,339,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a.b"" << BSONObj())),",342,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON(""b"" << BSONObj()))),",344,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("""" << wrapInLiteral(2))),",363,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("""" << true)), UserException);",365,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("""" << false)), UserException);",366,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON("""" << true))),",368,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a"" << BSON("""" << false))),",370,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("""" << BSON(""a"" << true))),",373,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("""" << BSON(""a"" << false))),",375,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a."" << true)), UserException);",378,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""a."" << false)), UserException);",379,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("".a"" << true)), UserException);",381,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON("".a"" << false)), UserException);",382,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""$x"" << wrapInLiteral(2))),",388,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""c.$d"" << true)), UserException);",390,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_aggregation_projection_test.cpp,+,"ASSERT_THROWS(ParsedAggregationProjection::create(expCtx, BSON(""c.$d"" << false)),",391,download/mongodb_mongo341.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_inclusion_projection_test.cpp,+,"ASSERT_THROWS(inclusion.parse(expCtx,",58,download/mongodb_mongo342.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/pipeline/parsed_inclusion_projection_test.cpp,+,"ASSERT_THROWS(inclusion.parse(expCtx, BSON(""_id"" << false)), UserException);",67,download/mongodb_mongo342.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/s/commands/cluster_aggregate.cpp,+,collation = uassertStatusOK(CollatorFactoryInterface::get(txn->getServiceContext()),125,download/mongodb_mongo343.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(logLevel) << ""scheduling fetcher to read remote oplog on "" << _syncSourceHost",422,download/mongodb_mongo344.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(2) << ""Stopping oplog fetcher due to shutdown."";",735,download/mongodb_mongo344.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(2) << ""Stopping oplog fetcher because we are waiting for the applier to drain."";",742,download/mongodb_mongo344.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(2) << ""Stopping oplog fetcher because we are primary."";",747,download/mongodb_mongo344.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(2) << ""Stopping oplog fetcher due to stop request."";",753,download/mongodb_mongo344.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(1) << ""Stopping oplog fetcher; canceling oplog query because we have no valid sync """,760,download/mongodb_mongo344.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/data_replicator_external_state_impl.cpp,+,log(),76,download/mongodb_mongo345.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting "" << candidate << "" due to empty oplog for """,217,download/mongodb_mongo346.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting "" << candidate << "" due to empty first document for """,227,download/mongodb_mongo346.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting "" << candidate << "" due to null timestamp in first document for """,239,download/mongodb_mongo346.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(1) << ""Cannot select a sync source because chaining is not allowed and primary """,196,download/mongodb_mongo347.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source because we are a voter and it is not: """,276,download/mongodb_mongo347.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""Choosing new sync source because the user has requested to use """,2423,download/mongodb_mongo347.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""Choosing new sync source because the config version supplied by "" << currentSource",2431,download/mongodb_mongo347.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""Choosing new sync source because "" << currentSource.toString()",2440,download/mongodb_mongo347.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,log() << logMessage.str();,2471,download/mongodb_mongo347.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""Choosing new sync source because the most recent OpTime of our sync source, """,2488,download/mongodb_mongo347.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",5395,download/mongodb_mongo348.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",5429,download/mongodb_mongo348.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",5461,download/mongodb_mongo348.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",5506,download/mongodb_mongo348.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_test.cpp,+,"ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",5666,download/mongodb_mongo348.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",3235,download/mongodb_mongo349.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",3394,download/mongodb_mongo349.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",3427,download/mongodb_mongo349.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_EQUALS(0, countLogLinesContaining(""Choosing new sync source""));",3460,download/mongodb_mongo349.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl_v1_test.cpp,+,"ASSERT_EQUALS(1, countLogLinesContaining(""Choosing new sync source""));",3492,download/mongodb_mongo349.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/accumulator_test.cpp,+,"assertExpectedResults(""$min"", expCtx, {{{Value(""abc""_sd), Value(""cba""_sd)}, Value(""cba""_sd)}});",223,download/mongodb_mongo350.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/accumulator_test.cpp,+,"assertExpectedResults(""$max"", expCtx, {{{Value(""abc""_sd), Value(""cba""_sd)}, Value(""abc""_sd)}});",249,download/mongodb_mongo350.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/accumulator_test.cpp,+,"assertExpectedResults(""$addToSet"",",349,download/mongodb_mongo350.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_source_bucket_auto_test.cpp,+,"ASSERT_THROWS_CODE(getResults(bucketAutoSpec,",814,download/mongodb_mongo351.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_source_group_test.cpp,+,"ASSERT_VALUE_EQ(res.getDocument().getField(""_id"")[""sub""][""z""], Value(""c""_sd));",935,download/mongodb_mongo352.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,+,"ASSERT_VALUE_EQ(md.peek()[""x""][""y""][""z""], Value(""nested""_sd));",209,download/mongodb_mongo353.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,+,"ASSERT_VALUE_EQ(md.peek().getNestedField(xxyyzz), Value(""nested""_sd));",215,download/mongodb_mongo353.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,+,"ASSERT_VALUE_EQ(md.peek().getNestedField(xxxyyyzzz), Value(""nested""_sd));",223,download/mongodb_mongo353.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,+,"ASSERT_THROWS(Value(StringData()).coerceToInt(), UserException);",1074,download/mongodb_mongo353.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,+,"ASSERT_THROWS(Value(StringData()).coerceToLong(), UserException);",1152,download/mongodb_mongo353.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,+,"ASSERT_THROWS(Value(StringData()).coerceToDouble(), UserException);",1231,download/mongodb_mongo353.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,+,"ASSERT_THROWS(Value(StringData()).coerceToDate(), UserException);",1274,download/mongodb_mongo353.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,+,"assertComparison(-1, Value(1), Value(""string""_sd));",1561,download/mongodb_mongo353.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,+,"assertComparison(0, Value(""string""_sd), Value(BSONSymbol(""string"")));",1562,download/mongodb_mongo353.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test.cpp,+,"assertComparison(-1, Value(""string""_sd), Value(mongo::Document()));",1563,download/mongodb_mongo353.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_DOCUMENT_EQ(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""bar""_sd}}));",40,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_DOCUMENT_NE(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""baz""_sd}}));",44,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_DOCUMENT_LT(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""baz""_sd}}));",48,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_DOCUMENT_LTE(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""baz""_sd}}));",52,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_DOCUMENT_LTE(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""bar""_sd}}));",53,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_DOCUMENT_GT(Document({{""foo"", ""baz""_sd}}), Document({{""foo"", ""bar""_sd}}));",57,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_DOCUMENT_GTE(Document({{""foo"", ""baz""_sd}}), Document({{""foo"", ""bar""_sd}}));",61,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_DOCUMENT_GTE(Document({{""foo"", ""bar""_sd}}), Document({{""foo"", ""bar""_sd}}));",62,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_VALUE_EQ(Value(""bar""_sd), Value(""bar""_sd));",66,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_VALUE_NE(Value(""bar""_sd), Value(""baz""_sd));",70,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_VALUE_LT(Value(""bar""_sd), Value(""baz""_sd));",74,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_VALUE_LTE(Value(""bar""_sd), Value(""baz""_sd));",78,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_VALUE_LTE(Value(""bar""_sd), Value(""bar""_sd));",79,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_VALUE_GT(Value(""baz""_sd), Value(""bar""_sd));",83,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_VALUE_GTE(Value(""baz""_sd), Value(""bar""_sd));",87,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/document_value_test_util_self_test.cpp,+,"ASSERT_VALUE_GTE(Value(""bar""_sd), Value(""bar""_sd));",88,download/mongodb_mongo354.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,assertExpectedResults(,2134,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_VALUE_EQ(Value(Document()), object->evaluate(Document{{""_id"", ""ID""_sd}}));",2480,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_VALUE_EQ(Value(Document{{""a"", 1}, {""b"", 5}}),",2487,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,ASSERT_VALUE_EQ(,2496,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_VALUE_EQ(Value(Document{{""a"", Document{{""b"", 1}, {""c"", ""ID""_sd}}}}),",2514,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_VALUE_EQ(fieldPathExpression->serialize(false), Value(""$field""_sd));",3030,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"ASSERT_VALUE_EQ(constantExpression->serialize(false), Value(Document{{""$const"", ""foo""_sd}}));",3038,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$strLenBytes"", {{{Value(""abc""_sd)}, Value(3)}});",3479,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$strLenBytes"", {{{Value(StringData())}, Value(0)}});",3483,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$strLenCP"", {{{Value(""abc""_sd)}, Value(3)}});",3499,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$strLenCP"", {{{Value(StringData())}, Value(0)}});",3503,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$strLenCP"", {{{Value(""ºabøåß""_sd)}, Value(6)}});",3519,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$substrCP"", {{{Value(""abc""_sd), Value(0), Value(2)}, Value(""ab""_sd)}});",3658,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$substrCP"",",3672,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$substrCP"", {{{Value(""abc""_sd), Value(1), Value(4)}, Value(""bc""_sd)}});",3677,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$substrCP"",",3681,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$substrBytes"",",3683,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$substrCP"",",3688,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$substrBytes"",",3690,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(MINKEY)}, Value(""minKey""_sd)}});",3699,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(1.0)}, Value(""double""_sd)}});",3703,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(""stringValue""_sd)}, Value(""string""_sd)}});",3707,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(objectVal)}, Value(""object""_sd)}});",3712,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(BSON_ARRAY(1 << 2))}, Value(""array""_sd)}});",3716,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(binDataVal)}, Value(""binData""_sd)}});",3721,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(BSONUndefined)}, Value(""undefined""_sd)}});",3725,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(OID())}, Value(""objectId""_sd)}});",3729,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(true)}, Value(""bool""_sd)}});",3733,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(dateVal)}, Value(""date""_sd)}});",3738,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(BSONNULL)}, Value(""null""_sd)}});",3742,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(BSONRegEx(""a.b""))}, Value(""regex""_sd)}});",3746,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(BSONSymbol(""a""))}, Value(""symbol""_sd)}});",3750,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(BSONDBRef("""", OID()))}, Value(""dbPointer""_sd)}});",3754,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(BSONCode(""var x = 3""))}, Value(""javascript""_sd)}});",3765,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(1)}, Value(""int""_sd)}});",3769,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(Decimal128(0.3))}, Value(""decimal""_sd)}});",3773,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(1LL)}, Value(""long""_sd)}});",3777,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(Timestamp(0, 0))}, Value(""timestamp""_sd)}});",3781,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/expression_test.cpp,+,"assertExpectedResults(""$type"", {{{Value(MAXKEY)}, Value(""maxKey""_sd)}});",3785,download/mongodb_mongo355.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_VALUE_EQ(*it, Value(""za""_sd));",192,download/mongodb_mongo356.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_VALUE_EQ(*it, Value(""yb""_sd));",194,download/mongodb_mongo356.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_EQ(valueCmp.hash(Value(""foo""_sd)), valueCmp.hash(Value(""FOO""_sd)));",227,download/mongodb_mongo356.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_NE(valueCmp.hash(Value(""foo""_sd)), valueCmp.hash(Value(""FOOz""_sd)));",228,download/mongodb_mongo356.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_TRUE(set.insert(Value(""foo""_sd)).second);",254,download/mongodb_mongo356.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_FALSE(set.insert(Value(""FOO""_sd)).second);",255,download/mongodb_mongo356.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_TRUE(set.insert(Value(""FOOz""_sd)).second);",256,download/mongodb_mongo356.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_EQ(set.count(Value(""FoO""_sd)), 1U);",258,download/mongodb_mongo356.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_EQ(set.count(Value(""fooZ""_sd)), 1U);",259,download/mongodb_mongo356.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_EQ(map[Value(""FoO""_sd)], 2);",273,download/mongodb_mongo356.cpp
d92892f7ad0a83252c788c08646d05ac46cfeabc,SERVER-25992 Remove Value(const char* value) constructor,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_EQ(map[Value(""fooZ""_sd)], 3);",274,download/mongodb_mongo356.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK({scopedCMStatus.getStatus().code(),",175,download/mongodb_mongo357.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",186,download/mongodb_mongo357.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"<< txn->getWriteConcern().toBSON()),",216,download/mongodb_mongo357.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/commands_public.cpp,+,virtual bool supportsWriteConcern(const BSONObj& cmd) const override {,551,download/mongodb_mongo358.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, dbName);",561,download/mongodb_mongo358.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/commands_public.cpp,+,"log() << ""DROP: "" << nss.ns();",572,download/mongodb_mongo358.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/commands_public.cpp,+,"log() << ""\tdrop going to do passthrough"";",576,download/mongodb_mongo358.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/commands_public.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",580,download/mongodb_mongo358.cpp
0a3bee733d104a17fad51e5bf87917b6fd8655e9,SERVER-27428 Wait for the onCommand thread in MigrationChunkClonerSourceLegacy's unit-tests,src/mongo/db/s/migration_chunk_cloner_source_legacy_test.cpp,+,ASSERT_OK(cloner.startClone(operationContext()));,211,download/mongodb_mongo359.cpp
0a3bee733d104a17fad51e5bf87917b6fd8655e9,SERVER-27428 Wait for the onCommand thread in MigrationChunkClonerSourceLegacy's unit-tests,src/mongo/db/s/migration_chunk_cloner_source_legacy_test.cpp,+,"ASSERT_EQ(ErrorCodes::NetworkTimeout, startCloneStatus.code());",351,download/mongodb_mongo359.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,63,download/mongodb_mongo360.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,uassertStatusOK(scopedDbStatus.getStatus());,88,download/mongodb_mongo360.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",95,download/mongodb_mongo360.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,if (!txn->getWriteConcern().usedDefault) {,123,download/mongodb_mongo360.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,txn->getWriteConcern().toBSON());,125,download/mongodb_mongo360.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",131,download/mongodb_mongo360.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,auto cmdDropResult = uassertStatusOK(shard->runCommandWithFixedRetryAttempts(,132,download/mongodb_mongo360.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,uassertStatusOK(cmdDropResult.commandStatus);,145,download/mongodb_mongo360.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,uassertStatusOK(cmdDropResult.writeConcernStatus);,146,download/mongodb_mongo360.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK(catalogClient->dropCollection(txn, NamespaceString(ns)));",125,download/mongodb_mongo361.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,if (!txn->getWriteConcern().usedDefault) {,203,download/mongodb_mongo361.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,txn->getWriteConcern().toBSON());,205,download/mongodb_mongo361.cpp
88dd11b030dbbc47332d42d431a40865cc534435,SERVER-27385: Add dbtest asserting that {rolesInfo: 1} returns no duplicate fields,src/mongo/dbtests/commandtests.cpp,+,ASSERT(ok);,321,download/mongodb_mongo362.cpp
88dd11b030dbbc47332d42d431a40865cc534435,SERVER-27385: Add dbtest asserting that {rolesInfo: 1} returns no duplicate fields,src/mongo/dbtests/commandtests.cpp,+,ASSERT(observedFields.find(field) == observedFields.end());,325,download/mongodb_mongo362.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"log() << ""ordering: "" << orderObj;",821,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"log() << ""\to1: "" << o1;",832,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"ASSERT_LT(l1, k1);",839,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"ASSERT_GT(g1, k1);",840,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"log() << ""\t\t o2: "" << o2;",845,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"ASSERT_EQ(k1, k2);",854,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"ASSERT_LT(k1, k2);",856,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"ASSERT_EQ(l1, l2);",871,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"ASSERT_EQ(g1, g2);",872,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"ASSERT_LT(l1, k2);",873,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"ASSERT_GT(g1, k2);",874,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"ASSERT_LT(g1, k2);",877,download/mongodb_mongo363.cpp
2ddd3a45a621784e8bcf3ca80fc6afdec6c5567b,"SERVER-24015 multithread some long running tests in key_string_test, via std async",src/mongo/db/storage/key_string_test.cpp,+,"ASSERT_GT(l2, k1);",878,download/mongodb_mongo363.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands.cpp,+,"[](OperationContext*, const DBException&) { fassertFailed(40357); };",377,download/mongodb_mongo364.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands.cpp,+,void Command::registerRegisterError(,380,download/mongodb_mongo364.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands.cpp,+,"void Command::registerError(OperationContext* const txn, const DBException& exception) {",385,download/mongodb_mongo364.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands.cpp,+,"registeredRegisterErrorHandler(txn, exception);",386,download/mongodb_mongo364.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands/dbcommands.cpp,+,"void registerErrorImpl(OperationContext* txn, const DBException& exception) {",124,download/mongodb_mongo365.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands/dbcommands.cpp,+,CurOp::get(txn)->debug().exceptionInfo = exception.getInfo();,125,download/mongodb_mongo365.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands/dbcommands.cpp,+,Command::registerRegisterError(registerErrorImpl);,129,download/mongodb_mongo365.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/s/s_only.cpp,+,"void registerErrorImpl(OperationContext* txn, const DBException& exception) {}",165,download/mongodb_mongo366.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/s/s_only.cpp,+,Command::registerRegisterError(registerErrorImpl);,168,download/mongodb_mongo366.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry.cpp,+,"auto mongo::defaultDatabaseCatalogEntryFactory(const StringData name, KVStorageEngine* const engine)",198,download/mongodb_mongo367.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry.cpp,+,"_engine->getCatalog()->getIndexIdent(txn, collection->ns().ns(), desc->indexName());",336,download/mongodb_mongo367.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry.cpp,+,"log() << ""Can't find index for keyPattern "" << desc->keyPattern();",377,download/mongodb_mongo367.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"KVDatabaseCatalogEntryBase::KVDatabaseCatalogEntryBase(StringData db, KVStorageEngine* engine)",117,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,": DatabaseCatalogEntry(db), _engine(engine) {}",118,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,KVDatabaseCatalogEntryBase::~KVDatabaseCatalogEntryBase() {,120,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"_engine->getCatalog()->getIndexIdent(opCtx, coll->ns().ns(), indexNames[i]);",153,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,return _engine->getCatalog()->getFeatureTracker()->isCompatibleWithCurrentCode(opCtx);,167,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,CollectionCatalogEntry* KVDatabaseCatalogEntryBase::getCollectionCatalogEntry(StringData ns) const {,176,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"Status status = _engine->getCatalog()->newCollection(txn, ns, options);",210,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,string ident = _engine->getCatalog()->getCollectionIdent(ns);,214,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"if (_engine->getCatalog()->getFeatureTracker()->isNonRepairableFeatureInUse(txn, feature)) {",223,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"_engine->getCatalog()->getFeatureTracker()->markNonRepairableFeatureAsInUse(txn,",224,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,_collections[ns.toString()] = new KVCollectionCatalogEntry(,234,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"_engine->getEngine(), _engine->getCatalog(), ns, ident, std::move(rs));",235,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,const std::string ident = _engine->getCatalog()->getCollectionIdent(ns);,245,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"BSONCollectionCatalogEntry::MetaData md = _engine->getCatalog()->getMetaData(opCtx, ns);",253,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,_collections[ns] = new KVCollectionCatalogEntry(,259,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"_engine->getEngine(), _engine->getCatalog(), ns, ident, std::move(rs));",260,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,const std::string identFrom = _engine->getCatalog()->getCollectionIdent(fromNS);,295,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"status = _engine->getCatalog()->renameCollection(txn, fromNS, toNS, stayTemp);",301,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,const std::string identTo = _engine->getCatalog()->getCollectionIdent(toNS);,305,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"BSONCollectionCatalogEntry::MetaData md = _engine->getCatalog()->getMetaData(txn, toNS);",309,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,_collections[toNS.toString()] = new KVCollectionCatalogEntry(,321,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"_engine->getEngine(), _engine->getCatalog(), toNS, identTo, std::move(rs));",322,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,const std::string ident = _engine->getCatalog()->getCollectionIdent(ns);,349,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"Status status = _engine->getCatalog()->dropCollection(opCtx, ns);",351,download/mongodb_mongo368.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_mock.cpp,+,std::unique_ptr<mongo::KVDatabaseCatalogEntryMock> mongo::kvDatabaseCatalogEntryMockFactory(,40,download/mongodb_mongo369.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_storage_engine.cpp,+,": _databaseCatalogEntryFactory(std::move(databaseCatalogEntryFactory)),",75,download/mongodb_mongo370.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_storage_engine.cpp,+,"db = _databaseCatalogEntryFactory(dbName, this).release();",124,download/mongodb_mongo370.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_storage_engine.cpp,+,"KVDatabaseCatalogEntryBase* KVStorageEngine::getDatabaseCatalogEntry(OperationContext* opCtx,",201,download/mongodb_mongo370.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_storage_engine.cpp,+,"db = _databaseCatalogEntryFactory(dbName, this).release();",208,download/mongodb_mongo370.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,inline void opwrite(Message& m) {,78,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"_diaglog.writeop(m.singleData().view2ptr(), m.header().getLen());",80,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"void generateLegacyQueryErrorResponse(const AssertionException* exception,",84,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop->debug().exceptionInfo = exception->getInfo();,88,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log(LogComponent::kQuery) << ""assertion "" << exception->toString() << "" ns:"" << queryMessage.ns",90,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log(LogComponent::kQuery) << "" ntoskip:"" << queryMessage.ntoskip",95,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log(LogComponent::kQuery) << ""stale version detected during query over "" << queryMessage.ns",114,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(16979,",175,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,op->debug().iscommand = true;,182,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"Command::generateErrorResponse(txn, &builder, exception);",184,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,op->debug().responseLength = response.header().dataLen();,189,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curOp->debug().iscommand = true;,219,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"Command::generateErrorResponse(txn, &replyBuilder, exception);",222,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curOp->debug().responseLength = response.header().dataLen();,227,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(ErrorCodes::InvalidOptions,",246,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(ErrorCodes::InvalidOptions,",252,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"audit::logQueryAuthzCheck(client, nss, q.query, status.code());",309,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassertStatusOK(status);,310,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"generateLegacyQueryErrorResponse(&e, q, &op, &dbResponse.response);",322,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,op.debug().responseLength = dbResponse.response.header().dataLen();,325,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(13659, ""sent 0 cursors to kill"", n != 0);",334,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"massert(13658,",335,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(13004, str::stream() << ""sent negative cursors to kill: "" << n, n >= 1);",338,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"(n < 30000 ? warning() : error()) << ""receivedKillCursors, n="" << n;",341,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,if (shouldLog(logger::LogSeverity::Debug(1)) || found != n) {,349,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(found == n ? 1 : 0) << ""killcursors: found "" << found << "" of "" << n;",350,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"audit::logInsertAuthzCheck(txn->getClient(), nsString, obj, status.code());",360,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassertStatusOK(status);,361,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"audit::logUpdateAuthzCheck(txn->getClient(),",375,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassertStatusOK(status);,382,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"audit::logDeleteAuthzCheck(txn->getClient(), nsString, singleDelete.query, status.code());",394,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassertStatusOK(status);,395,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassert(,406,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().ntoreturn = ntoreturn;,410,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().cursorid = cursorid;,411,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",423,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"audit::logGetMoreAuthzCheck(txn->getClient(), nsString, cursorid, status.code());",429,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassertStatusOK(status);,430,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().exceptionInfo = e.getInfo();,451,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().responseLength = dbresponse.response.header().dataLen();,454,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().nreturned = 1;,455,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().responseLength = dbresponse.response.header().dataLen();,459,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().nreturned = queryResult.getNReturned();,461,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().exhaust = true;,466,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,invariant(!txn->lockState()->inAWriteUnitOfWork());,488,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,opwrite(m);,503,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,opwrite(m);,507,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,opwrite(m);,528,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,opwrite(m);,530,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,currentOp.setLogicalOp_inlock(networkOpToLogicalOp(op));,539,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,OpDebug& debug = currentOp.debug();,542,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,bool shouldLogOpDebug = shouldLog(logger::LogSeverity::Debug(1));,545,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log() << curTimeMillis64() % 10000 << "" long msg received, len:"" << len;",564,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log() << ""    operation isn't supported: "" << static_cast<int>(op);",580,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(18663,",586,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(16257, str::stream() << ""Invalid ns ["" << ns << ""]"", false);",598,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LastError::get(c).setLastError(ue.getCode(), ue.getInfo().msg);",610,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(3) << "" Caught Assertion in "" << networkOpToString(op) << "", continuing """,611,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LastError::get(c).setLastError(e.getCode(), e.getInfo().msg);",615,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(3) << "" Caught Assertion in "" << networkOpToString(op) << "", continuing """,616,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"txn, currentOp.totalTimeMicros(), currentOp.getReadWriteType());",629,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log() << debug.report(&c, currentOp, lockerInfo.stats);",634,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(1) << ""note: not profiling because recursive read lock"";",640,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(1) << ""note: not profiling because doing fsync+lock"";",644,download/mongodb_mongo371.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(1) << ""note: not profiling because server is read-only"";",646,download/mongodb_mongo371.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"DiagLog::DiagLog() : f(0), level(0) {}",51,download/mongodb_mongo372.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,log() << msg.ss.str();,62,download/mongodb_mongo372.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"uasserted(ErrorCodes::FileStreamFailed, msg.ss.str());",63,download/mongodb_mongo372.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"log() << ""diagLogging using file "" << name;",65,download/mongodb_mongo372.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"log() << ""diagLogging level="" << newLevel;",72,download/mongodb_mongo372.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"log() << ""flushing diag log"";",82,download/mongodb_mongo372.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"void DiagLog::writeop(char* data, int len) {",88,download/mongodb_mongo372.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"f->write(data, len);",91,download/mongodb_mongo372.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"f->write(data, len);",102,download/mongodb_mongo372.cpp
5d32ae99ab086e696bc9c5610c9f93220481e596,"SERVER-27388 Add NetworkInterfaceExceededTimeLimit

max_time_ms_sharded.js uses a fail point to trigger immediate
ExceededTimeLimit returns from commands. This triggers during connection
establishment via the connection hook, which returns ExceededTimeLimit
to the connection pool and causes us to spin on connection creation.

The fix involves providing our own internal exceeded time limit that
doesn't collide with the remote value.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(conn1->getStatus().code() == ErrorCodes::NetworkInterfaceExceededTimeLimit);,870,download/mongodb_mongo373.cpp
5d32ae99ab086e696bc9c5610c9f93220481e596,"SERVER-27388 Add NetworkInterfaceExceededTimeLimit

max_time_ms_sharded.js uses a fail point to trigger immediate
ExceededTimeLimit returns from commands. This triggers during connection
establishment via the connection hook, which returns ExceededTimeLimit
to the connection pool and causes us to spin on connection creation.

The fix involves providing our own internal exceeded time limit that
doesn't collide with the remote value.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(conn1->getStatus().code() == ErrorCodes::NetworkInterfaceExceededTimeLimit);,923,download/mongodb_mongo373.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,68,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassert(ErrorCodes::IllegalOperation,",100,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassert(ErrorCodes::BadValue,",104,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,auto const catalogClient = Grid::get(txn)->catalogClient(txn);,108,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,auto scopedDistLock = uassertStatusOK(catalogClient->getDistLockManager()->lock(,113,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(dbname);,120,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,uassertStatusOK(scopedDbStatus.getStatus());,130,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"catalogClient->logChange(txn,",137,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK({status.code(),",180,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(dbname);,187,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,catalogClient->logChange(,189,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK({scopedCMStatus.getStatus().code(),",212,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",223,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",237,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,auto cmdDropDatabaseResult = uassertStatusOK(shard->runCommandWithFixedRetryAttempts(,238,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"<< txn->getWriteConcern().toBSON()),",243,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,uassertStatusOK(cmdDropDatabaseResult.commandStatus);,246,download/mongodb_mongo374.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,uassertStatusOK(cmdDropDatabaseResult.writeConcernStatus);,247,download/mongodb_mongo374.cpp
68908f8e03ee1a4c0400dae26cc20b0c304b913b,"SERVER-27243 Ignore invalid collection options if 'create' present

It is possible for older versions of MongoDB to save invalid collection
options which should be ignored. Older versions also would include a
'create' field in the collection options when a collection was created,
and possibly re-order the fields of the options document during a
subsequent 'collMod'. If the 'create' option is present at all, we
should take that to mean that these options were created on an older
version of MongoDB, and ignore unknown options. Otherwise, we should
reject unknown options.

(cherry picked from commit 6fba074768fad5f47611de38682257257005a1a6)",src/mongo/db/catalog/collection_options_test.cpp,+,ASSERT_OK(status);,282,download/mongodb_mongo375.cpp
68908f8e03ee1a4c0400dae26cc20b0c304b913b,"SERVER-27243 Ignore invalid collection options if 'create' present

It is possible for older versions of MongoDB to save invalid collection
options which should be ignored. Older versions also would include a
'create' field in the collection options when a collection was created,
and possibly re-order the fields of the options document during a
subsequent 'collMod'. If the 'create' option is present at all, we
should take that to mean that these options were created on an older
version of MongoDB, and ignore unknown options. Otherwise, we should
reject unknown options.

(cherry picked from commit 6fba074768fad5f47611de38682257257005a1a6)",src/mongo/db/catalog/collection_options_test.cpp,+,"ASSERT_EQ(options.capped, true);",283,download/mongodb_mongo375.cpp
68908f8e03ee1a4c0400dae26cc20b0c304b913b,"SERVER-27243 Ignore invalid collection options if 'create' present

It is possible for older versions of MongoDB to save invalid collection
options which should be ignored. Older versions also would include a
'create' field in the collection options when a collection was created,
and possibly re-order the fields of the options document during a
subsequent 'collMod'. If the 'create' option is present at all, we
should take that to mean that these options were created on an older
version of MongoDB, and ignore unknown options. Otherwise, we should
reject unknown options.

(cherry picked from commit 6fba074768fad5f47611de38682257257005a1a6)",src/mongo/db/catalog/collection_options_test.cpp,+,"ASSERT_EQ(options.cappedSize, 1024L);",284,download/mongodb_mongo375.cpp
68908f8e03ee1a4c0400dae26cc20b0c304b913b,"SERVER-27243 Ignore invalid collection options if 'create' present

It is possible for older versions of MongoDB to save invalid collection
options which should be ignored. Older versions also would include a
'create' field in the collection options when a collection was created,
and possibly re-order the fields of the options document during a
subsequent 'collMod'. If the 'create' option is present at all, we
should take that to mean that these options were created on an older
version of MongoDB, and ignore unknown options. Otherwise, we should
reject unknown options.

(cherry picked from commit 6fba074768fad5f47611de38682257257005a1a6)",src/mongo/db/catalog/collection_options_test.cpp,+,"ASSERT_OK(options.parse(fromjson(""{invalidOption: 1, create: 1}"")));",294,download/mongodb_mongo375.cpp
68908f8e03ee1a4c0400dae26cc20b0c304b913b,"SERVER-27243 Ignore invalid collection options if 'create' present

It is possible for older versions of MongoDB to save invalid collection
options which should be ignored. Older versions also would include a
'create' field in the collection options when a collection was created,
and possibly re-order the fields of the options document during a
subsequent 'collMod'. If the 'create' option is present at all, we
should take that to mean that these options were created on an older
version of MongoDB, and ignore unknown options. Otherwise, we should
reject unknown options.

(cherry picked from commit 6fba074768fad5f47611de38682257257005a1a6)",src/mongo/db/catalog/collection_options_test.cpp,+,ASSERT_NOT_OK(status);,300,download/mongodb_mongo375.cpp
68908f8e03ee1a4c0400dae26cc20b0c304b913b,"SERVER-27243 Ignore invalid collection options if 'create' present

It is possible for older versions of MongoDB to save invalid collection
options which should be ignored. Older versions also would include a
'create' field in the collection options when a collection was created,
and possibly re-order the fields of the options document during a
subsequent 'collMod'. If the 'create' option is present at all, we
should take that to mean that these options were created on an older
version of MongoDB, and ignore unknown options. Otherwise, we should
reject unknown options.

(cherry picked from commit 6fba074768fad5f47611de38682257257005a1a6)",src/mongo/db/catalog/collection_options_test.cpp,+,"ASSERT_EQ(status.code(), ErrorCodes::InvalidOptions);",301,download/mongodb_mongo375.cpp
68908f8e03ee1a4c0400dae26cc20b0c304b913b,"SERVER-27243 Ignore invalid collection options if 'create' present

It is possible for older versions of MongoDB to save invalid collection
options which should be ignored. Older versions also would include a
'create' field in the collection options when a collection was created,
and possibly re-order the fields of the options document during a
subsequent 'collMod'. If the 'create' option is present at all, we
should take that to mean that these options were created on an older
version of MongoDB, and ignore unknown options. Otherwise, we should
reject unknown options.

(cherry picked from commit 6fba074768fad5f47611de38682257257005a1a6)",src/mongo/db/catalog/collection_options_test.cpp,+,ASSERT_OK(status);,316,download/mongodb_mongo375.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_kv_engine.cpp,+,fassertFailed(40358);,179,download/mongodb_mongo376.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_kv_engine.cpp,+,void WiredTigerKVEngine::setInitRsOplogBackgroundThreadCallback(,727,download/mongodb_mongo376.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_kv_engine.cpp,+,bool WiredTigerKVEngine::initRsOplogBackgroundThread(StringData ns) {,732,download/mongodb_mongo376.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_kv_engine.cpp,+,return initRsOplogBackgroundThreadCallback(ns);,733,download/mongodb_mongo376.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_record_store_mock.cpp,+,bool initRsOplogBackgroundThread(StringData ns) {,45,download/mongodb_mongo377.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_record_store_mock.cpp,+,WiredTigerKVEngine::setInitRsOplogBackgroundThreadCallback(initRsOplogBackgroundThread);,51,download/mongodb_mongo377.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_record_store_mongod.cpp,+,bool initRsOplogBackgroundThread(StringData ns) {,135,download/mongodb_mongo378.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_record_store_mongod.cpp,+,WiredTigerKVEngine::setInitRsOplogBackgroundThreadCallback(initRsOplogBackgroundThread);,157,download/mongodb_mongo378.cpp
4061adae4c4cc556954ae50924f4aadd9f8ac732,"Revert ""SERVER-26126 Remove broken LockState caching""

This reverts commit 6dc9fc6ba93b62830dd905f6fac39e0802566a9a.",src/mongo/db/concurrency/lock_state.cpp,+,void LockerImpl<IsForMMAPV1>::assertEmptyAndReset() {,194,download/mongodb_mongo379.cpp
4061adae4c4cc556954ae50924f4aadd9f8ac732,"Revert ""SERVER-26126 Remove broken LockState caching""

This reverts commit 6dc9fc6ba93b62830dd905f6fac39e0802566a9a.",src/mongo/db/concurrency/lock_state.cpp,+,invariant(!inAWriteUnitOfWork());,195,download/mongodb_mongo379.cpp
4061adae4c4cc556954ae50924f4aadd9f8ac732,"Revert ""SERVER-26126 Remove broken LockState caching""

This reverts commit 6dc9fc6ba93b62830dd905f6fac39e0802566a9a.",src/mongo/db/concurrency/lock_state.cpp,+,assertEmptyAndReset();,292,download/mongodb_mongo379.cpp
4061adae4c4cc556954ae50924f4aadd9f8ac732,"Revert ""SERVER-26126 Remove broken LockState caching""

This reverts commit 6dc9fc6ba93b62830dd905f6fac39e0802566a9a.",src/mongo/db/operation_context.cpp,+,dassert(_locker);,401,download/mongodb_mongo380.cpp
4061adae4c4cc556954ae50924f4aadd9f8ac732,"Revert ""SERVER-26126 Remove broken LockState caching""

This reverts commit 6dc9fc6ba93b62830dd905f6fac39e0802566a9a.",src/mongo/db/operation_context_impl.cpp,+,lockState()->assertEmptyAndReset();,79,download/mongodb_mongo381.cpp
7678cba70d790eab3eb546988c77bb34ab83da1a,SERVER-23759 wait for repl startup before shutting down,src/mongo/db/db.cpp,+,"log() << ""starting clean exit via failpoint"";",731,download/mongodb_mongo382.cpp
7678cba70d790eab3eb546988c77bb34ab83da1a,SERVER-23759 wait for repl startup before shutting down,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"fassert(18823, _rsConfigState != kConfigStartingUp);",746,download/mongodb_mongo383.cpp
1dde8c56b6025363f8e048120f1ada69522d8615,SERVER-27337 mapReduce should not attempt to drop nonexistent temp collection,src/mongo/db/commands/mr.cpp,+,"uassert(ErrorCodes::PrimarySteppedDown,",393,download/mongodb_mongo384.cpp
1dde8c56b6025363f8e048120f1ada69522d8615,SERVER-27337 mapReduce should not attempt to drop nonexistent temp collection,src/mongo/db/commands/mr.cpp,+,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(tempNss));,395,download/mongodb_mongo384.cpp
1dde8c56b6025363f8e048120f1ada69522d8615,SERVER-27337 mapReduce should not attempt to drop nonexistent temp collection,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R dropTempCollections"", _config.tempNamespace)",400,download/mongodb_mongo384.cpp
6dc9fc6ba93b62830dd905f6fac39e0802566a9a,SERVER-26126 Remove broken LockState caching,src/mongo/db/concurrency/lock_state.cpp,+,invariant(!inAWriteUnitOfWork());,275,download/mongodb_mongo385.cpp
3878fd8993b361207a853b8db11a1a3b484ea837,SERVER-26927 support integer values for  maxStalenessSeconds,src/mongo/client/read_preference_test.cpp,+,ASSERT_OK(swRps.getStatus());,51,download/mongodb_mongo386.cpp
3878fd8993b361207a853b8db11a1a3b484ea837,SERVER-26927 support integer values for  maxStalenessSeconds,src/mongo/client/read_preference_test.cpp,+,ASSERT_TRUE(rps.equals(expected));,53,download/mongodb_mongo386.cpp
3878fd8993b361207a853b8db11a1a3b484ea837,SERVER-26927 support integer values for  maxStalenessSeconds,src/mongo/client/read_preference_test.cpp,+,ASSERT_OK(parsed.getStatus());,191,download/mongodb_mongo386.cpp
3878fd8993b361207a853b8db11a1a3b484ea837,SERVER-26927 support integer values for  maxStalenessSeconds,src/mongo/client/read_preference_test.cpp,+,ASSERT_TRUE(parsed.getValue().equals(rps));,192,download/mongodb_mongo386.cpp
e4ccedc08b69cdebdf3c2ed707d07f2a78036b42,SERVER-27210 Fix flakey ScopedDbConnection unit test,src/mongo/client/scoped_db_conn_test.cpp,+,"ASSERT_GTE((end - start) + gracePeriod, overrideTimeout);",410,download/mongodb_mongo387.cpp
e4ccedc08b69cdebdf3c2ed707d07f2a78036b42,SERVER-27210 Fix flakey ScopedDbConnection unit test,src/mongo/client/scoped_db_conn_test.cpp,+,"ASSERT_GTE((end - start) + gracePeriod, overrideTimeout);",417,download/mongodb_mongo387.cpp
e4ccedc08b69cdebdf3c2ed707d07f2a78036b42,SERVER-27210 Fix flakey ScopedDbConnection unit test,src/mongo/client/scoped_db_conn_test.cpp,+,"ASSERT_GREATER_THAN((end - start) + gracePeriod, uriTimeout);",424,download/mongodb_mongo387.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/examples/c/ex_file_system.c,+,"assert(pthread_rwlock_init(lockp, NULL) == 0);",81,download/mongodb_mongo388.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/examples/c/ex_file_system.c,+,assert(pthread_rwlock_destroy(lockp) == 0);,87,download/mongodb_mongo388.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/examples/c/ex_file_system.c,+,assert(pthread_rwlock_wrlock(lockp) == 0);,93,download/mongodb_mongo388.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/examples/c/ex_file_system.c,+,assert(pthread_rwlock_unlock(lockp) == 0);,99,download/mongodb_mongo388.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/btree/bt_discard.c,+,"WT_ASSERT(session, hp == NULL);",55,download/mongodb_mongo389.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/btree/bt_walk.c,+,"found:	WT_ASSERT(session, pindex->index[slot] == ref);",115,download/mongodb_mongo390.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/cursor/cur_log.c,+,"WT_ERR(__wt_logop_read(session,",168,download/mongodb_mongo391.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/cursor/cur_log.c,+,"WT_ERR(__curlog_op_read(session, cl, optype, opsize, &fileid));",170,download/mongodb_mongo391.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/reconcile/rec_write.c,+,"static int  __rec_write_check_complete(WT_SESSION_IMPL *, WT_RECONCILE *);",334,download/mongodb_mongo392.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/reconcile/rec_write.c,+,"static void __rec_write_page_status(WT_SESSION_IMPL *, WT_RECONCILE *);",337,download/mongodb_mongo392.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/reconcile/rec_write.c,+,"ret = __rec_write_check_complete(session, r);",434,download/mongodb_mongo392.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/reconcile/rec_write.c,+,"if (ret == 0 && (ret = __rec_write_wrapup(session, r, page)) == 0)",438,download/mongodb_mongo392.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/reconcile/rec_write.c,+,"__rec_write_page_status(session, r);",439,download/mongodb_mongo392.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/reconcile/rec_write.c,+,"__rec_write_check_complete(WT_SESSION_IMPL *session, WT_RECONCILE *r)",559,download/mongodb_mongo392.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/reconcile/rec_write.c,+,"__rec_write_page_status(WT_SESSION_IMPL *session, WT_RECONCILE *r)",590,download/mongodb_mongo392.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/reconcile/rec_write.c,+,"WT_ASSERT(session, mod->mod_multi[i].disk_image == NULL);",719,download/mongodb_mongo392.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/reconcile/rec_write.c,+,"__rec_write_page_status(session, r);",3654,download/mongodb_mongo392.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/reconcile/rec_write.c,+,"WT_ASSERT(session,",4506,download/mongodb_mongo392.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/txn/txn_nsnap.c,+,"WT_ASSERT(session, txn->id != WT_TXN_NONE);",192,download/mongodb_mongo393.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/src/txn/txn_nsnap.c,+,"WT_ASSERT(session, txn->id == WT_TXN_NONE);",325,download/mongodb_mongo393.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/test/syscall/wt2336_base/main.c,+,"fprintf(stderr,",11,download/mongodb_mongo394.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/test/syscall/wt2336_base/main.c,+,"""wt2336_fileop_basic"", ret, wiredtiger_strerror(ret));",13,download/mongodb_mongo394.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/test/syscall/wt2336_base/main.c,+,"fprintf(stderr, SEPARATOR ""wiredtiger_open\n"");",28,download/mongodb_mongo394.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/test/syscall/wt2336_base/main.c,+,"fprintf(stderr, SEPARATOR ""open_session\n"");",34,download/mongodb_mongo394.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/test/syscall/wt2336_base/main.c,+,"fprintf(stderr, SEPARATOR ""create\n"");",42,download/mongodb_mongo394.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/test/syscall/wt2336_base/main.c,+,"fprintf(stderr, SEPARATOR ""rename\n"");",50,download/mongodb_mongo394.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/test/syscall/wt2336_base/main.c,+,"fprintf(stderr, SEPARATOR ""drop\n"");",57,download/mongodb_mongo394.cpp
21a6f07d859c132154166bd3d83bbed238d5d719,"Import wiredtiger: 1b6c815a3fd34f14c20d5cd627155799d1de535c from branch mongodb-3.6

ref: ca6eee06ff..1b6c815a3f
for: 3.5.1

WT-2336       Add a test validating schema operations via file system call monitoring
WT-2670       Add option to configure read-ahead per table and change default behavior
WT-2960       Inserting multi-megabyte values can cause pathological lookaside usage
WT-2969       Fix a bug that could cause snapshot corruption during compaction
WT-3014       Add GCC/clang support for ELF symbol visibility.
WT-3021       Fixes needed for Java log cursor example, Java raw mode cursors, log cursors in raw mode
WT-3025       fix error path in log_force_sync
WT-3028       Workloads with all dirty pages could trigger diagnostic stuck check
WT-3030       Test failure indicating invalid key order during traversal
WT-3034       Add support for single-writer named snapshots.
WT-3037       Fix some outdated comments in logging
WT-3048       WiredTiger maximum size warning uses the wrong format.
WT-3051       Remove external __wt_hex symbol.
WT-3052       Improve search if an index hint is wrong
WT-3053       Review Python and Java calls to internal WiredTiger functions
WT-3054       Java PackTest, PackTest03 do not compile
WT-3055       Java AsyncTest faults
WT-3057       WiredTiger hazard pointers should use the WT_REF, not the WT_PAGE.
WT-3064       minor tree cleanups: .gitignore, NEWS misspelling",src/third_party/wiredtiger/test/syscall/wt2336_base/main.c,+,"fprintf(stderr, SEPARATOR ""WT_CONNECTION::close\n"");",63,download/mongodb_mongo394.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/catalog/create_collection.cpp,+,"uassert(ErrorCodes::TypeMismatch,",51,download/mongodb_mongo395.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/catalog/create_collection.cpp,+,"uassert(15888, ""must pass name of collection to create"", !firstElt.valueStringData().empty());",54,download/mongodb_mongo395.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::TypeMismatch,",81,download/mongodb_mongo396.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",85,download/mongodb_mongo396.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::TypeMismatch,",102,download/mongodb_mongo396.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::TypeMismatch,",105,download/mongodb_mongo396.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",112,download/mongodb_mongo396.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",115,download/mongodb_mongo396.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb.cpp,+,"uassert(ErrorCodes::TypeMismatch,",139,download/mongodb_mongo397.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb.cpp,+,"uassert(ErrorCodes::TypeMismatch,",150,download/mongodb_mongo397.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",155,download/mongodb_mongo397.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",158,download/mongodb_mongo397.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb_start_commands.cpp,+,"uassert(ErrorCodes::TypeMismatch,",181,download/mongodb_mongo398.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb_start_commands.cpp,+,uassert(,185,download/mongodb_mongo398.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/dbcommands.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",672,download/mongodb_mongo399.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/dbcommands.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1116,download/mongodb_mongo399.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/dbhash.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",107,download/mongodb_mongo400.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/group_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",116,download/mongodb_mongo401.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/group_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",120,download/mongodb_mongo401.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr.cpp,+,"uassert(ErrorCodes::TypeMismatch,",283,download/mongodb_mongo402.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",287,download/mongodb_mongo402.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1738,download/mongodb_mongo402.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr_common.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",96,download/mongodb_mongo403.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr_common.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",109,download/mongodb_mongo403.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr_common.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",129,download/mongodb_mongo403.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,"uassert(ErrorCodes::TypeMismatch,",108,download/mongodb_mongo404.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,"uassert(ErrorCodes::TypeMismatch,",111,download/mongodb_mongo404.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",118,download/mongodb_mongo404.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",121,download/mongodb_mongo404.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,if (source.isOplog()) {,127,download/mongodb_mongo404.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,if (target.isOplog()) {,131,download/mongodb_mongo404.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,if (source.isOplog() != target.isOplog()) {,137,download/mongodb_mongo404.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_common.cpp,+,"uassert(ErrorCodes::TypeMismatch,",53,download/mongodb_mongo405.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_common.cpp,+,"uassert(ErrorCodes::TypeMismatch,",56,download/mongodb_mongo405.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/test_commands.cpp,+,"log() << ""test only command godinsert invoked coll:"" << nss.coll();",87,download/mongodb_mongo406.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/validate.cpp,+,"LOG(0) << ""CMD: validate "" << nss.ns();",110,download/mongodb_mongo407.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/validate.cpp,+,"if (ctx.getDb() && ctx.getDb()->getViewCatalog()->lookup(txn, nss.ns())) {",120,download/mongodb_mongo407.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/ops/write_ops_parsers.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",93,download/mongodb_mongo408.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/repl/oplog.cpp,+,"uassert(ErrorCodes::TypeMismatch,",644,download/mongodb_mongo409.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/repl/oplog.cpp,+,"uassert(ErrorCodes::TypeMismatch,",647,download/mongodb_mongo409.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/repl/oplog.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",697,download/mongodb_mongo409.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/repl/oplog.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1018,download/mongodb_mongo409.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/s/cleanup_orphaned_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",227,download/mongodb_mongo410.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,+,uassert(,102,download/mongodb_mongo411.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,"uassert(ErrorCodes::TypeMismatch,",114,download/mongodb_mongo412.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",98,download/mongodb_mongo413.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,uassert(,115,download/mongodb_mongo413.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassert(ErrorCodes::TypeMismatch,",133,download/mongodb_mongo413.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_remove_shard_cmd.cpp,+,"uassert(ErrorCodes::TypeMismatch,",89,download/mongodb_mongo414.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"log() << ""DROP: "" << nss.ns();",573,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",582,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",612,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",616,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",627,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",631,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,uassert(,637,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,uassert(,639,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",677,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",690,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",694,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1032,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1036,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1394,download/mongodb_mongo415.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/write_ops/batched_delete_request.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",117,download/mongodb_mongo416.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/write_ops/batched_insert_request.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",123,download/mongodb_mongo417.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/write_ops/batched_update_request.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",125,download/mongodb_mongo418.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"catalogManager()->commitChunkMigration(operationContext(),",90,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,ASSERT_OK(resultBSON.getStatus());,98,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,ASSERT_OK(mver.getStatus());,103,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(ChunkVersion(origMajorVersion + 1, 0, origVersion.epoch()), mver.getValue());",104,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,ASSERT_OK(cver.getStatus());,107,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(ChunkVersion(origMajorVersion + 1, 1, origVersion.epoch()), cver.getValue());",108,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"auto chunkDoc0 = uassertStatusOK(getChunkDoc(operationContext(), chunkMin));",111,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(""shard1"", chunkDoc0.getShard().toString());",112,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(mver.getValue(), chunkDoc0.getVersion());",113,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"auto chunkDoc1 = uassertStatusOK(getChunkDoc(operationContext(), chunkMax));",115,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(""shard0"", chunkDoc1.getShard().toString());",116,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(cver.getValue(), chunkDoc1.getVersion());",117,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"catalogManager()->commitChunkMigration(operationContext(),",151,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,ASSERT_OK(resultBSON.getStatus());,159,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,ASSERT_OK(mver.getStatus());,164,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(ChunkVersion(origMajorVersion + 1, 0, origVersion.epoch()), mver.getValue());",165,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,ASSERT_NOT_OK(cver.getStatus());,168,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"auto chunkDoc0 = uassertStatusOK(getChunkDoc(operationContext(), chunkMin));",171,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(""shard1"", chunkDoc0.getShard().toString());",172,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(mver.getValue(), chunkDoc0.getVersion());",173,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"catalogManager()->commitChunkMigration(operationContext(),",216,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(ErrorCodes::StaleEpoch, resultBSON.getStatus());",224,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"catalogManager()->commitChunkMigration(operationContext(),",269,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(ErrorCodes::StaleEpoch, resultBSON.getStatus());",277,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"catalogManager()->commitChunkMigration(operationContext(),",320,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(40165, resultBSON.getStatus().code());",328,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"catalogManager()->commitChunkMigration(operationContext(),",371,download/mongodb_mongo419.cpp
b5fedd38b03e5d787fc4322a28e12aa38a3d3dc8,SERVER-26562 Unit tests for commitChunkMigration,src/mongo/s/catalog/sharding_catalog_commit_chunk_migration_test.cpp,+,"ASSERT_EQ(40165, resultBSON.getStatus().code());",379,download/mongodb_mongo419.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/db/s/balancer/balancer.cpp,+,"auto scopedChunkManager = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",633,download/mongodb_mongo420.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/chunk.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",410,download/mongodb_mongo421.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_merge_chunks_cmd.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",112,download/mongodb_mongo422.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",129,download/mongodb_mongo423.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,"uassertStatusOK(cm->getShardKeyPattern().extractShardKeyFromQuery(txn, find));",162,download/mongodb_mongo423.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(dbname);,118,download/mongodb_mongo424.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(dbname);,227,download/mongodb_mongo424.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_split_cmd.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",124,download/mongodb_mongo425.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_split_cmd.cpp,+,"uassertStatusOK(cm->getShardKeyPattern().extractShardKeyFromQuery(txn, find));",181,download/mongodb_mongo425.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_split_cmd.cpp,+,uassertStatusOK(ShardKeyPattern::checkShardKeySize(middle));,244,download/mongodb_mongo425.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_split_cmd.cpp,+,"log() << ""Splitting chunk """,264,download/mongodb_mongo425.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/config.cpp,+,"uassert(ErrorCodes::NamespaceNotSharded,",291,download/mongodb_mongo426.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/db/query/collation/collation_index_key.cpp,+,"uasserted(ErrorCodes::CannotBuildIndexKeys,",113,download/mongodb_mongo427.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/db/query/collation/collation_index_key_test.cpp,+,ASSERT_THROWS_CODE(,155,download/mongodb_mongo428.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/db/query/collation/collation_index_key_test.cpp,+,"ASSERT_BSONOBJ_EQ(out.obj(), expected);",166,download/mongodb_mongo428.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/db/query/collation/collation_index_key_test.cpp,+,ASSERT_THROWS_CODE(,176,download/mongodb_mongo428.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/db/query/collation/collation_index_key_test.cpp,+,ASSERT_THROWS_CODE(,186,download/mongodb_mongo428.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.getLastErrorDetailed()[""code""].numberInt(),",730,download/mongodb_mongo429.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.count(_ns), 0U);",732,download/mongodb_mongo429.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,ASSERT(client.getLastError().empty());,747,download/mongodb_mongo429.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.count(_ns), 1U);",748,download/mongodb_mongo429.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.getLastErrorDetailed()[""code""].numberInt(),",764,download/mongodb_mongo429.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.count(_ns), 0U);",766,download/mongodb_mongo429.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.getLastErrorDetailed()[""code""].numberInt(),",782,download/mongodb_mongo429.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.count(_ns), 0U);",784,download/mongodb_mongo429.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.count(_ns), 1U);",796,download/mongodb_mongo429.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,ASSERT_THROWS_CODE(,800,download/mongodb_mongo429.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_TRUE(client.runCommand(""unittests"",",813,download/mongodb_mongo429.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.getLastErrorDetailed()[""code""].numberInt(),",824,download/mongodb_mongo429.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(!conn1);,853,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(!conn1);,858,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(conn1);,868,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(!conn1->isOK());,869,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(conn1->getStatus().code() == ErrorCodes::ExceededTimeLimit);,870,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(!conn2);,872,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(conn1Id);,896,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(!conn1);,907,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(!conn1);,911,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(conn1);,921,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(!conn1->isOK());,922,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(conn1->getStatus().code() == ErrorCodes::ExceededTimeLimit);,923,download/mongodb_mongo430.cpp
78f62c485a390f79c84baea51d840aaa8fb9c999,"SERVER-27232 Fix early timeout in ASIO connpool

Initial connects and later refreshes have a timeout associated with them
in ASIO that isn't linked to any user generated timeout.  These
timeouts, when they trigger, are registered as general failures however.
And general failures cause us to dump all connections from the pool
(propagating that error to all consumers currently waiting for a
connection).

That scheme is sound for actual io errors (because a failure to rpc on
one connection almost certainly means something is badly wrong with all
other open connections), but causes us to fail early and often when
applied to timeouts.

The fix is to treat timeouts on connect and refresh lightly (start
connecting a new connection on timeout) and allow the general request
timeouts to handle timing out user requests.",src/mongo/executor/connection_pool_test.cpp,+,ASSERT(!conn2);,925,download/mongodb_mongo430.cpp
114f26722933a5730eac7ff584eeebffdb974e52,SERVER-25373: Add diagnostic labels to ResourceMutex instances,src/mongo/db/concurrency/d_concurrency_test.cpp,+,"ASSERT(mutex.getName() == ""label"");",647,download/mongodb_mongo431.cpp
114f26722933a5730eac7ff584eeebffdb974e52,SERVER-25373: Add diagnostic labels to ResourceMutex instances,src/mongo/db/concurrency/d_concurrency_test.cpp,+,"ASSERT(mutex2.getName() == ""label2"");",649,download/mongodb_mongo431.cpp
114f26722933a5730eac7ff584eeebffdb974e52,SERVER-25373: Add diagnostic labels to ResourceMutex instances,src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,": _catalogClient(catalogClient),",306,download/mongodb_mongo432.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/connpool.cpp,+,"uassert(40356, _name + "": connect failed "" + uri.toString() + "" : "" + errmsg, c);",270,download/mongodb_mongo433.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/mongo_uri_test.cpp,+,ASSERT_OK(sw_uri.getStatus());,341,download/mongodb_mongo434.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/mongo_uri_test.cpp,+,"ASSERT_EQ(uri.type(), kSet);",344,download/mongodb_mongo434.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/mongo_uri_test.cpp,+,"ASSERT_EQ(uri.getSetName(), ""rs1"");",345,download/mongodb_mongo434.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/mongo_uri_test.cpp,+,"ASSERT_EQ(uri.getServers().size(), static_cast<std::size_t>(3));",346,download/mongodb_mongo434.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/mongo_uri_test.cpp,+,"ASSERT_EQ(uriOptions.at(""ssl""), ""true"");",349,download/mongodb_mongo434.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/mongo_uri_test.cpp,+,"ASSERT_EQ(clonedURI.type(), kMaster);",353,download/mongodb_mongo434.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/mongo_uri_test.cpp,+,ASSERT_TRUE(clonedURI.getSetName().empty());,354,download/mongodb_mongo434.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/mongo_uri_test.cpp,+,"ASSERT_EQ(clonedURI.getServers().size(), static_cast<std::size_t>(1));",355,download/mongodb_mongo434.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/mongo_uri_test.cpp,+,"ASSERT_EQ(clonedURIOptions.at(""ssl""), ""true"");",357,download/mongodb_mongo434.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_manager.cpp,+,"log() << ""Starting new replica set monitor for "" << uri.toString();",126,download/mongodb_mongo435.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_test.cpp,+,ASSERT_OK(uri.getStatus());,82,download/mongodb_mongo436.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_test.cpp,+,"ASSERT_EQUALS(state->name, ""name"");",84,download/mongodb_mongo436.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_test.cpp,+,ASSERT(state->seedNodes == basicSeedsSet);,85,download/mongodb_mongo436.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_test.cpp,+,ASSERT(state->lastSeenMaster.empty());,86,download/mongodb_mongo436.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_test.cpp,+,"ASSERT_EQUALS(state->nodes.size(), basicSeeds.size());",87,download/mongodb_mongo436.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_test.cpp,+,ASSERT(node);,90,download/mongodb_mongo436.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_test.cpp,+,"ASSERT_EQUALS(node->host.toString(), basicSeeds[i].toString());",91,download/mongodb_mongo436.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_test.cpp,+,ASSERT(!node->isUp);,92,download/mongodb_mongo436.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_test.cpp,+,ASSERT(!node->isMaster);,93,download/mongodb_mongo436.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_test.cpp,+,ASSERT(node->tags.isEmpty());,94,download/mongodb_mongo436.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,"log() << ""Delaying response for "" << _replyDelay;",125,download/mongodb_mongo437.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,ASSERT_OK(uri_sw.getStatus());,393,download/mongodb_mongo437.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,"log() << ""Testing ConnectionString timeouts"";",403,download/mongodb_mongo437.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,"ASSERT_THROWS(ScopedDbConnection conn2(TARGET_HOST, overrideTimeout.count()), SocketException);",405,download/mongodb_mongo437.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,"ASSERT_GTE(end - start, overrideTimeout);",407,download/mongodb_mongo437.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,"ASSERT_LT(end - start, uriTimeout);",408,download/mongodb_mongo437.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,"log() << ""Testing MongoURI with explicit timeout"";",410,download/mongodb_mongo437.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,"ASSERT_THROWS(ScopedDbConnection conn4(uri, overrideTimeout.count()), UserException);",412,download/mongodb_mongo437.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,"ASSERT_GTE(end - start, overrideTimeout);",414,download/mongodb_mongo437.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,"ASSERT_LT(end - start, uriTimeout);",415,download/mongodb_mongo437.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,"log() << ""Testing MongoURI doesn't timeout"";",417,download/mongodb_mongo437.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/scoped_db_conn_test.cpp,+,"ASSERT_GREATER_THAN(end - start, uriTimeout);",421,download/mongodb_mongo437.cpp
e91795212e7f274db6eb66efd5bbad8f144cdf32,SERVER-27284 dedup symbol KVHarnessHelper::create,src/mongo/db/storage/kv/kv_engine_test_harness.cpp,+,[]() -> std::unique_ptr<KVHarnessHelper> { fassertFailed(40355); };,51,download/mongodb_mongo438.cpp
7e606d787608a866ecbff87deced8c9072af265d,SERVER-27238 de-dup symbol logProcessDetailsForLogRotate,src/mongo/util/signal_handlers.cpp,+,logProcessDetailsForLogRotate();,175,download/mongodb_mongo439.cpp
c9b9187faa1c29553e4841761803fa8cbee55f18,SERVER-26355 Give range_deleter_test tests a real OperationContext,src/mongo/db/range_deleter_test.cpp,+,ASSERT_TRUE(deleter.queueDelete(,273,download/mongodb_mongo440.cpp
c9b9187faa1c29553e4841761803fa8cbee55f18,SERVER-26355 Give range_deleter_test tests a real OperationContext,src/mongo/db/range_deleter_test.cpp,+,ASSERT_TRUE(deleter.queueDelete(,274,download/mongodb_mongo440.cpp
c9b9187faa1c29553e4841761803fa8cbee55f18,SERVER-26355 Give range_deleter_test tests a real OperationContext,src/mongo/db/range_deleter_test.cpp,+,ASSERT_TRUE(deleter.queueDelete(,282,download/mongodb_mongo440.cpp
a1baabeee5694aa8c4ffa1827233684d6c7fcc49,"SERVER-27240 Replace ConnectBG with poll

It's unsafe to close a socket from another thread.  Also, after
returning EINTR, the connect call converts to an async call.  And on
non-linux systems that requires a fallback to poll/select to handle
errors.

Because of that, let's just do the connect without the background thread
at all, starting off with poll.",src/mongo/util/net/sock.cpp,+,errorCode = WSAGetLastError();,98,download/mongodb_mongo441.cpp
a1baabeee5694aa8c4ffa1827233684d6c7fcc49,"SERVER-27240 Replace ConnectBG with poll

It's unsafe to close a socket from another thread.  Also, after
returning EINTR, the connect call converts to an async call.  And on
non-linux systems that requires a fallback to poll/select to handle
errors.

Because of that, let's just do the connect without the background thread
at all, starting off with poll.",src/mongo/util/net/sock.cpp,+,if (WSAGetLastError() != WSAEWOULDBLOCK) {,402,download/mongodb_mongo441.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(LOCK_OK, locker.lockGlobal(MODE_IX));",325,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(LOCK_OK, locker.lock(dbId, MODE_IX));",326,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(LOCK_OK, locker.lock(collectionId, MODE_X));",327,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT(lockerInfoContainsLock(lockerInfo, globalId, MODE_IX));",333,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT(lockerInfoContainsLock(lockerInfo, dbId, MODE_IX));",334,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT(lockerInfoContainsLock(lockerInfo, collectionId, MODE_X));",335,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(3U, lockerInfo.locks.size());",336,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,ASSERT(locker.unlock(collectionId));,338,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,ASSERT(locker.unlock(dbId));,339,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,ASSERT(locker.unlockGlobal());,340,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(LOCK_OK, successfulLocker.lockGlobal(MODE_IX));",350,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(LOCK_OK, successfulLocker.lock(dbId, MODE_IX));",351,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(LOCK_OK, successfulLocker.lock(collectionId, MODE_X));",352,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(LOCK_OK, conflictingLocker.lockGlobal(MODE_IS));",356,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(LOCK_OK, conflictingLocker.lock(dbId, MODE_IS));",357,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(LOCK_WAITING, conflictingLocker.lockBegin(collectionId, MODE_IS));",358,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT(lockerInfoContainsLock(lockerInfo, globalId, MODE_IS));",363,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT(lockerInfoContainsLock(lockerInfo, dbId, MODE_IS));",364,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT(lockerInfoContainsLock(lockerInfo, collectionId, MODE_IS));",365,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(3U, lockerInfo.locks.size());",366,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(collectionId, lockerInfo.waitingResource);",369,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,ASSERT(successfulLocker.unlock(collectionId));,372,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,ASSERT(successfulLocker.unlock(dbId));,373,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,ASSERT(successfulLocker.unlockGlobal());,374,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,"ASSERT_EQ(LOCK_OK,",378,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,ASSERT_FALSE(lockerInfo.waitingResource.isValid());,382,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,ASSERT(conflictingLocker.unlock(collectionId));,384,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,ASSERT(conflictingLocker.unlock(dbId));,385,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/concurrency/lock_state_test.cpp,+,ASSERT(conflictingLocker.unlockGlobal());,386,download/mongodb_mongo442.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,ASSERT_TRUE(info.waitingResource.isValid());,48,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT(infoObj[""waitingForLock""].type() == BSONType::Bool);",54,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_TRUE(infoObj[""waitingForLock""].Bool());",55,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,ASSERT_FALSE(info.waitingResource.isValid());,61,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT(infoObj[""waitingForLock""].type() == BSONType::Bool);",67,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_FALSE(infoObj[""waitingForLock""].Bool());",68,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""lockStats""].type(), BSONType::Object);",81,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""locks""].type(), BSONType::Object);",103,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""locks""][resourceTypeName(kGlobalId.getType())].type(), BSONType::String);",104,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""locks""][resourceTypeName(kGlobalId.getType())].String(), ""w"");",105,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""locks""][resourceTypeName(dbId.getType())].type(), BSONType::String);",106,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""locks""][resourceTypeName(dbId.getType())].String(), ""w"");",107,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""locks""].type(), BSONType::Object);",121,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""locks""][resourceTypeName(firstDbId.getType())].type(), BSONType::String);",122,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""locks""][resourceTypeName(firstDbId.getType())].String(),",123,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""locks""].type(), BSONType::Object);",130,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""locks""][resourceTypeName(firstDbId.getType())].type(), BSONType::String);",131,download/mongodb_mongo443.cpp
0bca5d9fc70fe4178441eaf097324e6da814410a,SERVER-27042 Stabilize currentop.js and add unit tests for lock state reporting,src/mongo/db/stats/fill_locker_info_test.cpp,+,"ASSERT_EQ(infoObj[""locks""][resourceTypeName(firstDbId.getType())].String(), ""W"");",132,download/mongodb_mongo443.cpp
d5024d5e0ca6cbb883a4ec65c5c76614bbdbbd53,SERVER-27300 delete dead function shouldUseCollationIndexKey(),src/mongo/db/query/collation/collation_index_key_test.cpp,+,ASSERT_TRUE(CollationIndexKey::isCollatableType(obj.firstElement().type()));,46,download/mongodb_mongo444.cpp
d5024d5e0ca6cbb883a4ec65c5c76614bbdbbd53,SERVER-27300 delete dead function shouldUseCollationIndexKey(),src/mongo/db/query/collation/collation_index_key_test.cpp,+,ASSERT_TRUE(CollationIndexKey::isCollatableType(obj.firstElement().type()));,55,download/mongodb_mongo444.cpp
d5024d5e0ca6cbb883a4ec65c5c76614bbdbbd53,SERVER-27300 delete dead function shouldUseCollationIndexKey(),src/mongo/db/query/collation/collation_index_key_test.cpp,+,ASSERT_TRUE(CollationIndexKey::isCollatableType(obj.firstElement().type()));,64,download/mongodb_mongo444.cpp
d5024d5e0ca6cbb883a4ec65c5c76614bbdbbd53,SERVER-27300 delete dead function shouldUseCollationIndexKey(),src/mongo/db/query/collation/collation_index_key_test.cpp,+,ASSERT_FALSE(CollationIndexKey::isCollatableType(obj.firstElement().type()));,73,download/mongodb_mongo444.cpp
27b1e9a1d61fdd522df5376495859cf9f63725a9,SERVER-27071 ensure config.version doc cannot replicate to secondaries in config_version_rollback.js,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""transition to primary - """,733,download/mongodb_mongo445.cpp
1f9513ef67551db6ea93b8b9e2f40604167f952b,SERVER-27052 fixed FetcherTest::ScheduleButShutdown test case - test should not assume when the task executor's shutdown() function will deliver the cancellation event to the fetcher's callback,src/mongo/client/fetcher_test.cpp,+,"assertRemoteCommandNameEquals(""find"", noi->getRequest());",371,download/mongodb_mongo446.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/pipeline/document_comparator_test.cpp,+,ASSERT_TRUE(comparator.evaluate(doc1 != doc2));,205,download/mongodb_mongo447.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_NE(seed1, seed2);",215,download/mongodb_mongo447.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/pipeline/value_comparator_test.cpp,+,ASSERT_TRUE(comparator.evaluate(val1 != val2));,303,download/mongodb_mongo448.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_NE(comparator.hash(val1), comparator.hash(val2));",311,download/mongodb_mongo448.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT(comparator.evaluate(obj1[""a""] == obj2[""a""]));",113,download/mongodb_mongo449.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_EQ(comparator.hash(obj1[""a""]), comparator.hash(obj2[""a""]));",124,download/mongodb_mongo449.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,ASSERT(comparator.evaluate(obj1 == obj2));,135,download/mongodb_mongo449.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_EQ(comparator.hash(obj1), comparator.hash(obj2));",146,download/mongodb_mongo449.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT(comparator.evaluate(obj1[""a""] != obj2[""a""]));",155,download/mongodb_mongo449.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_NE(comparator.hash(obj1[""a""]), comparator.hash(obj2[""a""]));",164,download/mongodb_mongo449.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,ASSERT(comparator.evaluate(obj1 != obj2));,173,download/mongodb_mongo449.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_NE(comparator.hash(obj1), comparator.hash(obj2));",182,download/mongodb_mongo449.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_BSONOBJ_NE(obj1, obj2);",192,download/mongodb_mongo449.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,ASSERT(comparator.evaluate(obj1 != obj2));,193,download/mongodb_mongo449.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_NE(comparator.hash(obj1), comparator.hash(obj2));",203,download/mongodb_mongo449.cpp
6f1824c8ff3b211f72e706de32b9637750cccf1e,SERVER-27197 fix BSONType::Code comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_NE(SimpleBSONObjComparator::kInstance.hash(obj1),",204,download/mongodb_mongo449.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/pipeline/document_comparator_test.cpp,+,ASSERT_TRUE(comparator.evaluate(doc1 != doc2));,181,download/mongodb_mongo450.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/pipeline/document_comparator_test.cpp,+,"ASSERT_NE(seed1, seed2);",197,download/mongodb_mongo450.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/pipeline/value_comparator_test.cpp,+,ASSERT_TRUE(comparator.evaluate(val1 != val2));,283,download/mongodb_mongo451.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/pipeline/value_comparator_test.cpp,+,"ASSERT_NE(comparator.hash(val1), comparator.hash(val2));",295,download/mongodb_mongo451.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT(comparator.evaluate(obj1[""a""] != obj2[""a""]));",54,download/mongodb_mongo452.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_BSONELT_NE(obj1[""a""], obj2[""a""]);",55,download/mongodb_mongo452.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,ASSERT(comparator.evaluate(obj1 != obj2));,69,download/mongodb_mongo452.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_BSONOBJ_NE(obj1, obj2);",70,download/mongodb_mongo452.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_NE(SimpleBSONElementComparator::kInstance.hash(obj1[""a""]),",84,download/mongodb_mongo452.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_NE(comparator.hash(obj1[""a""]), comparator.hash(obj2[""a""]));",86,download/mongodb_mongo452.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_NE(SimpleBSONObjComparator::kInstance.hash(obj1),",100,download/mongodb_mongo452.cpp
6bee18129c27a82ebcbd316c7900afb04c6f69dc,SERVER-27200 fix CodeWScope comparison to not use collator,src/mongo/db/query/collation/collation_bson_comparison_test.cpp,+,"ASSERT_NE(comparator.hash(obj1), comparator.hash(obj2));",102,download/mongodb_mongo452.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"uassert(ErrorCodes::BadValue, ""task executor cannot be null"", _exec);",260,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"uassert(ErrorCodes::BadValue, ""callback function cannot be null"", _onCompletion);",266,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Creating oplogBuffer."";",418,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,_oplogBuffer = _dataReplicatorExternalState->makeInitialSyncOplogBuffer(txn);,419,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync done; took """,440,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Starting initial sync (attempt "" << (initialSyncAttempt + 1) << "" of """,459,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Resetting sync source so a new one can be chosen for this initial sync attempt."";",474,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Error getting sync source: '"" << syncSource.getStatus() << ""', trying again in """,536,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,status = _recreateOplogAndDropReplicatedDatabases();,559,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,Status DataReplicator::_recreateOplogAndDropReplicatedDatabases() {,581,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,UnreplicatedWritesBlock unreplicatedWritesBlock(txn.get());,608,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Dropping the existing oplog: "" << _opts.localOplogNS;",611,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Dropping  user databases"";",622,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Creating the oplog: "" << _opts.localOplogNS;",632,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"return _storage->createOplog(txn.get(), _opts.localOplogNS);",633,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,status = _scheduleLastOplogEntryFetcher_inlock(,708,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,void DataReplicator::_lastOplogEntryFetcherCallbackForBeginTimestamp(,719,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""listDatabases filter failed to parse database name from "" << redact(dbInfo)",747,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Setting begin timestamp to "" << _initialSyncState->beginTimestamp",768,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Starting DatabasesCloner: "" << _initialSyncState->dbsCloner->toString();",868,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"void DataReplicator::_oplogFetcherCallback(const Status& oplogFetcherFinishStatus,",884,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Finished fetching oplog during initial sync: "" << redact(oplogFetcherFinishStatus)",887,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Finished fetching oplog fetching early. Last fetched optime and hash: """,912,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,status = _scheduleLastOplogEntryFetcher_inlock(,945,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,void DataReplicator::_lastOplogEntryFetcherCallbackForStopTimestamp(,956,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""No need to apply operations. (currently at """,979,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""inserting oplog seed document: "" << oplogSeedDoc;",998,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,log() << msg;,1144,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to apply batch due to '"" << redact(status) << ""'"";",1179,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,status = _scheduleLastOplogEntryFetcher_inlock(,1198,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,void DataReplicator::_lastOplogEntryFetcherCallbackAfterFetchingMissingDocuments(,1234,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to get new minValid from source "" << _syncSource << "" due to '""",1241,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to parse new minValid from source "" << _syncSource << "" due to '""",1279,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Pushing back minValid from "" << _initialSyncState->stopTimestamp << "" to """,1292,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Initial sync attempt finishing up."";",1384,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Initial Sync Attempt Statistics: "" << redact(_getInitialSyncProgress_inlock());",1387,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Initial sync attempt failed -- attempts left: """,1412,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync - initialSyncHangBeforeFinish fail point """,1475,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,Status DataReplicator::_scheduleLastOplogEntryFetcher_inlock(Fetcher::CallbackFn callback) {,1501,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,error() << msg;,1229,download/mongodb_mongo453.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Applying operations until "" << _initialSyncState->stopTimestamp.toBSON()",1257,download/mongodb_mongo453.cpp

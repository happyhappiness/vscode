commit_sha,commit_message,file_name,change_type,log_statement,log_loc,store_name
5c182c1d5e8a141e6dcd156173f802f4e44b3610,SERVER-28098 Get rid of DBConfig::getAllShardIds,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, confIn->getPrimaryId()));",296,download/mongodb_mongo1.cpp
5c182c1d5e8a141e6dcd156173f802f4e44b3610,SERVER-28098 Get rid of DBConfig::getAllShardIds,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, mrResult.shardTargetId));",356,download/mongodb_mongo1.cpp
5c182c1d5e8a141e6dcd156173f802f4e44b3610,SERVER-28098 Get rid of DBConfig::getAllShardIds,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, confOut->getPrimaryId()));",450,download/mongodb_mongo1.cpp
5c182c1d5e8a141e6dcd156173f802f4e44b3610,SERVER-28098 Get rid of DBConfig::getAllShardIds,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"uassert(ErrorCodes::ShardNotFound,",510,download/mongodb_mongo1.cpp
9301066134ca391c6b0f26a0b535c164f13922ed,SERVER-27749 Refactor ShardingEgressMetadataHook,src/mongo/s/sharding_egress_metadata_hook.cpp,+,"return writeRequestMetadata(true, txn, target.toString(), metadataBob);",79,download/mongodb_mongo2.cpp
f725e5137561ba5a521d0f5eb6a60bdeebf34c24,SERVER-27863 Reschedule early alarms in NetworkInterfaceASIO,src/mongo/executor/network_interface_asio.cpp,+,"fassertFailedWithStatus(40383, status);",476,download/mongodb_mongo3.cpp
71ce59a2648185c8e1ccd5b3a1af6ff05dbac7d7,SERVER-28052 Make SHA1Hash a full fledged class,src/mongo/crypto/mechanism_scram.cpp,+,uassertStatusOK(clientProofSHA1Status);,236,download/mongodb_mongo4.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/dur_journal_writer.cpp,+,"void WRITETODATAFILES(OperationContext* txn,",59,download/mongodb_mongo5.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/dur_journal_writer.cpp,+,"WRITETODATAFILES(cc().makeOperationContext().get(), buffer->_header, buffer->_builder);",249,download/mongodb_mongo5.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/dur_recover.cpp,+,LockMongoFilesShared::assertAtLeastReadLocked(txn);,293,download/mongodb_mongo6.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/durable_mapped_file.cpp,+,"error() << ""exception in DurableMappedFile::close"";",305,download/mongodb_mongo7.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/mmap.cpp,+,LockMongoFilesShared::assertExclusivelyLocked(txn);,155,download/mongodb_mongo8.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/mmap_posix.cpp,+,void printMemInfo() {,59,download/mongodb_mongo9.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/mmap_posix.cpp,+,LogstreamBuilder out = log();,60,download/mongodb_mongo9.cpp
9c9bbf3318113cfdd4d9b72f493b6ebd23f1837e,SERVER-18410: Replace RWLock with OperationContext/LockManager,src/mongo/db/storage/mmap_v1/mmap_windows.cpp,+,LockMongoFilesShared::assertExclusivelyLocked(txn);,153,download/mongodb_mongo10.cpp
fff6d490ce43a6d3952cf2352f81c524b20e6f49,SERVER-3181 Add nameOnly option to listDatabases,src/mongo/client/dbclient.cpp,+,uassert(,590,download/mongodb_mongo11.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, primaryShardId));",139,download/mongodb_mongo12.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,auto result = uassertStatusOK(primaryShard->runCommandWithFixedRetryAttempts(,141,download/mongodb_mongo12.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,uassertStatusOK(result.commandStatus);,149,download/mongodb_mongo12.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"uassertStatusOK(bsonExtractIntegerField(result.response, ""n"", &numObjects));",150,download/mongodb_mongo12.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,splitPoints = uassertStatusOK(shardutil::selectChunkSplitPoints(,153,download/mongodb_mongo12.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"log() << ""going to create "" << splitPoints.size() + 1 << "" chunk(s) for: "" << nss",190,download/mongodb_mongo12.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,Status status = Grid::get(txn)->catalogClient(txn)->insertConfigDocument(,210,download/mongodb_mongo12.cpp
585ade2ae5f776effa2c63c2221a4639f8545bc2,"SERVER-28030 Remove writes from ChunkManager

Also moves the 'chunks' tests from dbtests into the ChunkManager
unit-tests.",src/mongo/s/chunk_manager.cpp,+,uassertStatusOK(Grid::get(txn)->catalogClient(txn)->getChunks(,271,download/mongodb_mongo13.cpp
41729cec076164077f13571e35596934477d7110,SERVER-28030 Remove writes from Chunk,src/mongo/db/s/balancer/balancer.cpp,+,"log() << ""Marking chunk "" << redact(chunk->toString()) << "" as jumbo."";",642,download/mongodb_mongo14.cpp
41729cec076164077f13571e35596934477d7110,SERVER-28030 Remove writes from Chunk,src/mongo/db/s/balancer/balancer.cpp,+,auto status = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,648,download/mongodb_mongo14.cpp
41729cec076164077f13571e35596934477d7110,SERVER-28030 Remove writes from Chunk,src/mongo/db/s/balancer/balancer.cpp,+,"log() << ""Couldn't set jumbo for chunk: "" << redact(chunkName)",656,download/mongodb_mongo14.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list.cpp,+,"Status EgressMetadataHookList::writeRequestMetadata(OperationContext* txn,",43,download/mongodb_mongo15.cpp
52984455b85605acee3855aa6fbb67b0cde25470,"SERVER-27855 Attach all NetworkInterface instances with EgressHooks

with the exception of:
- NetworkInterfaceCollectionRangeDeleter-TaskExecutor (doesn't really use network)
- AddShard-TaskExecutor (destination shard is still not part of cluster)",src/mongo/rpc/metadata/egress_metadata_hook_list.cpp,+,"auto status = hook->writeRequestMetadata(txn, requestDestination, metadataBob);",47,download/mongodb_mongo15.cpp
3352feab5733189d732cfc73053f874011d1cb86,SERVER-27973 make ClusterClientCursor own ClusterClientCursorParams and pass the params by reference to RouterStageMerge/ARM,src/mongo/s/query/cluster_find.cpp,+,<< ErrorCodes::errorString(next.getStatus().code())};,248,download/mongodb_mongo16.cpp
7d36244539cff23adb813f9cc006b1e9fe4305e0,SERVER-27746: Integrate LogicalClock with oplog,src/mongo/db/logical_clock.cpp,+,_clusterTime = _makeSignedLogicalTime(newTime);,96,download/mongodb_mongo17.cpp
7d36244539cff23adb813f9cc006b1e9fe4305e0,SERVER-27746: Integrate LogicalClock with oplog,src/mongo/db/logical_clock.cpp,+,fassertFailed(17449);,126,download/mongodb_mongo17.cpp
7d36244539cff23adb813f9cc006b1e9fe4305e0,SERVER-27746: Integrate LogicalClock with oplog,src/mongo/db/repl/oplog.cpp,+,LogicalClock::get(service)->advanceClusterTimeFromTrustedSource(LogicalTime(newTime));,1115,download/mongodb_mongo18.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/data_replicator_external_state_impl.cpp,+,"log() << ""Canceling oplog query due to OplogQueryMetadata. We have to choose a new """,101,download/mongodb_mongo19.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/data_replicator_external_state_impl.cpp,+,"log() << ""Canceling oplog query due to ReplSetMetadata. We have to choose a new sync """,107,download/mongodb_mongo19.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher.cpp,+,StatusWith<boost::optional<rpc::OplogQueryMetadata>> parseOplogQueryMetadata(,196,download/mongodb_mongo20.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher.cpp,+,auto oqMetadataResult = parseOplogQueryMetadata(queryResponse);,472,download/mongodb_mongo20.cpp
7284884f3d8f3cf1d1489579180c2637efcc42b2,SERVER-27543 Process OplogQueryMetadata with backwards and forwards compatibility,src/mongo/db/repl/oplog_fetcher.cpp,+,"error() << ""invalid oplog query metadata from sync source "" << _fetcher->getSource() << "": """,474,download/mongodb_mongo20.cpp
e02c45b789458bb5bb3ba8350f4fd91305933deb,SERVER-27935 Fix serialization of concurrent fsyncLock executions,src/mongo/db/commands/fsync.cpp,+,"log() << ""mongod is locked and no writes are allowed. db.fsyncUnlock() to unlock"";",193,download/mongodb_mongo21.cpp
e02c45b789458bb5bb3ba8350f4fd91305933deb,SERVER-27935 Fix serialization of concurrent fsyncLock executions,src/mongo/db/commands/fsync.cpp,+,"log() << ""Lock count is "" << getLockCount();",194,download/mongodb_mongo21.cpp
e02c45b789458bb5bb3ba8350f4fd91305933deb,SERVER-27935 Fix serialization of concurrent fsyncLock executions,src/mongo/db/commands/fsync.cpp,+,"log() << ""    For more info see "" << FSyncCommand::url();",195,download/mongodb_mongo21.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks.cpp,+,status = newConfig.checkIfWriteConcernCanBeSatisfied(newConfig.getDefaultWriteConcern());,266,download/mongodb_mongo22.cpp
05f489418593db35aef28040079ef57829e11f66,SERVER-18407 Add check to ensure write concern is satisfiable in initial config,src/mongo/db/repl/replica_set_config_checks.cpp,+,status = newConfig.checkIfWriteConcernCanBeSatisfied(newConfig.getDefaultWriteConcern());,293,download/mongodb_mongo22.cpp
489cd07d2a3711286debae56f28416d7ba290648,"SERVER-27860 remove invariants to prevent ShardLocal running on shards and remove ""-OnConfig"" function name suffixes",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"configShard->runBatchWriteCommand(txn, batchRequest, Shard::RetryPolicy::kNotIdempotent);",1402,download/mongodb_mongo23.cpp
489cd07d2a3711286debae56f28416d7ba290648,"SERVER-27860 remove invariants to prevent ShardLocal running on shards and remove ""-OnConfig"" function name suffixes",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"configShard->runBatchWriteCommand(txn, request, Shard::RetryPolicy::kNoRetry);",1424,download/mongodb_mongo23.cpp
489cd07d2a3711286debae56f28416d7ba290648,"SERVER-27860 remove invariants to prevent ShardLocal running on shards and remove ""-OnConfig"" function name suffixes",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"configShard->runBatchWriteCommand(txn, request, Shard::RetryPolicy::kIdempotent);",1507,download/mongodb_mongo23.cpp
489cd07d2a3711286debae56f28416d7ba290648,"SERVER-27860 remove invariants to prevent ShardLocal running on shards and remove ""-OnConfig"" function name suffixes",src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"configShard->runBatchWriteCommand(txn, request, Shard::RetryPolicy::kIdempotent);",1539,download/mongodb_mongo23.cpp
489cd07d2a3711286debae56f28416d7ba290648,"SERVER-27860 remove invariants to prevent ShardLocal running on shards and remove ""-OnConfig"" function name suffixes",src/mongo/s/client/shard.cpp,+,"BatchedCommandResponse Shard::runBatchWriteCommand(OperationContext* txn,",191,download/mongodb_mongo24.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/commands/cluster_aggregate.cpp,+,"uassertStatusOK(storePossibleCursor(txn,",212,download/mongodb_mongo25.cpp
31e5c31a79b2043d0fa4288c0435fdfce4348343,SERVER-27965 thread OperationContext* down through ClusterClientCursor's next() and kill() methods,src/mongo/s/commands/cluster_aggregate.cpp,+,"result = uassertStatusOK(storePossibleCursor(txn,",414,download/mongodb_mongo25.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/db/logical_clock.cpp,+,"LogicalClock::LogicalClock(ServiceContext* service,",56,download/mongodb_mongo26.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/db/repl/replication_coordinator_test_fixture.cpp,+,ASSERT_TRUE(storageInterface == StorageInterface::get(service));,121,download/mongodb_mongo27.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/dbtests/pdfiletests.cpp,+,"ASSERT(fixDocumentForInsert(_txn.getServiceContext(), BSON(""_id"" << 5)).isOK());",146,download/mongodb_mongo28.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/dbtests/pdfiletests.cpp,+,ASSERT(,147,download/mongodb_mongo28.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/dbtests/pdfiletests.cpp,+,ASSERT(,149,download/mongodb_mongo28.cpp
437352cd7dbc158343e2929888d265928b6ca8b7,SERVER-27828: Pass ServiceContext to oplog and ReplicationCoordinator methods that will use LogicalClock,src/mongo/dbtests/pdfiletests.cpp,+,"ASSERT(!fixDocumentForInsert(_txn.getServiceContext(), BSON(""_id"" << BSON(""$oid"" << 5)))",151,download/mongodb_mongo28.cpp
b65f66e20f7ba380b2202947b68db89d42c45931,SERVER-27940: fix deadlock in ReplicaSetMonitorManager on shutdown,src/mongo/client/replica_set_monitor_manager.cpp,+,"LOG(1) << ""Shutting down task executor used for monitoring replica sets"";",173,download/mongodb_mongo29.cpp
b65f66e20f7ba380b2202947b68db89d42c45931,SERVER-27940: fix deadlock in ReplicaSetMonitorManager on shutdown,src/mongo/client/replica_set_monitor_manager.cpp,+,"LOG(1) << ""Shutting down task executor used for monitoring replica sets"";",190,download/mongodb_mongo29.cpp
bae38e4ebedfe66f66f3cef6ee0e9d12ad79b116,SERVER-27382 Get rid of the DBConfig::reload method,src/mongo/s/config.cpp,+,Grid::get(txn)->catalogCache()->invalidate(_name);,216,download/mongodb_mongo30.cpp
92b04fe8dc31e7ec90bc97ad8722768d7732717e,SERVER-27382 Get rid of DBConfig::reload from ParallelSortClusteredCursor,src/mongo/client/parallel.cpp,+,Grid::get(txn)->catalogCache()->invalidate(staleNS.db());,343,download/mongodb_mongo31.cpp
92b04fe8dc31e7ec90bc97ad8722768d7732717e,SERVER-27382 Get rid of DBConfig::reload from ParallelSortClusteredCursor,src/mongo/client/parallel.cpp,+,"log() << ""cannot reload database info for stale namespace "" << staleNS.ns();",366,download/mongodb_mongo31.cpp
92b04fe8dc31e7ec90bc97ad8722768d7732717e,SERVER-27382 Get rid of DBConfig::reload from ParallelSortClusteredCursor,src/mongo/client/parallel.cpp,+,"LOG(1) << ""stale config of ns "" << staleNS",662,download/mongodb_mongo31.cpp
92b04fe8dc31e7ec90bc97ad8722768d7732717e,SERVER-27382 Get rid of DBConfig::reload from ParallelSortClusteredCursor,src/mongo/client/parallel.cpp,+,"LOG(1) << ""stale config of ns "" << staleNS",889,download/mongodb_mongo31.cpp
7f71474649f01b8914b4284be44cbe325c1458d0,SERVER-27382 Get rid of DBConfig::getChunkManagerOrPrimary,src/mongo/s/commands/cluster_write.cpp,+,"updateChunkWriteStatsAndSplitIfNeeded(txn, scopedCM.cm().get(), chunk.get(), it->second);",209,download/mongodb_mongo32.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter.cpp,+,dassert(collectionShardingState != nullptr);  // every collection gets one,104,download/mongodb_mongo33.cpp
d045ca8b414d8a6312524548ff015ec0623e42a8,SERVER-24368 Unit-test CollectionRangeDeleter,src/mongo/db/s/collection_range_deleter.cpp,+,if (!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(_nss)) {,228,download/mongodb_mongo33.cpp
ad9f558ae842b34a5d4a38a87ac603f1aabab560,SERVER-27297 always log CollectionCloner failure statuses,src/mongo/db/repl/collection_cloner.cpp,+,"log() << ""CollectionCloner ns:"" << _destNss",573,download/mongodb_mongo34.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/client/parallel.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, staleNS.db());",359,download/mongodb_mongo35.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/client/parallel.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",399,download/mongodb_mongo35.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/client/parallel.cpp,+,uassertStatusOK(scopedCMStatus.getStatus());,488,download/mongodb_mongo35.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/client/parallel.cpp,+,"uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, i->first));",952,download/mongodb_mongo35.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/db/s/balancer/balancer.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",616,download/mongodb_mongo36.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/catalog/catalog_cache.cpp,+,CatalogCache::CatalogCache() = default;,44,download/mongodb_mongo37.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/catalog/catalog_cache.cpp,+,CatalogCache::~CatalogCache() = default;,46,download/mongodb_mongo37.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/catalog/catalog_cache.cpp,+,"auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName.toString());",58,download/mongodb_mongo37.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/chunk_manager.cpp,+,"auto config = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db()));",522,download/mongodb_mongo38.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/client/version_manager.cpp,+,Grid::get(txn)->catalogCache()->invalidate(nss.db());,392,download/mongodb_mongo39.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/commands/cluster_commands_common.cpp,+,Grid::get(txn)->catalogCache()->invalidate(nss.db());,58,download/mongodb_mongo40.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db());,480,download/mongodb_mongo41.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",1015,download/mongodb_mongo42.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/commands/strategy.cpp,+,Grid::get(txn)->catalogCache()->invalidate(NamespaceString(staleNS).db());,336,download/mongodb_mongo43.cpp
027b8038e23a6e32d1cd35bb27f5f6286a813d86,"SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths

This reverts commit c5f52fb3265ef68ffe2741f88758082dda393a4b.",src/mongo/s/commands/strategy.cpp,+,"auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",390,download/mongodb_mongo43.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,+,"auto status = grid.catalogCache()->getDatabase(txn, staleNS.db().toString());",360,download/mongodb_mongo44.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,+,"const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, shardId));",400,download/mongodb_mongo44.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,+,"auto status = grid.catalogCache()->getDatabase(txn, nss.db().toString());",493,download/mongodb_mongo44.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,+,config = uassertStatusOK(status);,495,download/mongodb_mongo44.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/client/parallel.cpp,+,"const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, i->first));",953,download/mongodb_mongo44.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/db/s/balancer/balancer.cpp,+,"auto scopedChunkManager = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",617,download/mongodb_mongo45.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/catalog/catalog_cache.cpp,+,CatalogCache::CatalogCache() {},45,download/mongodb_mongo46.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/catalog/catalog_cache.cpp,+,"auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName);",57,download/mongodb_mongo46.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/chunk_manager.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString()));",522,download/mongodb_mongo47.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/client/version_manager.cpp,+,"auto status = grid.catalogCache()->getDatabase(txn, nsToDatabase(ns));",256,download/mongodb_mongo48.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/client/version_manager.cpp,+,grid.catalogCache()->invalidate(nss.db().toString());,433,download/mongodb_mongo48.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/client/version_manager.cpp,+,"auto status = grid.catalogCache()->getDatabase(txn, nss.db().toString());",435,download/mongodb_mongo48.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db().toString());,480,download/mongodb_mongo49.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",1015,download/mongodb_mongo50.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/strategy.cpp,+,"LOG(1) << ""Database does not exist or collection no longer sharded after a """,335,download/mongodb_mongo51.cpp
c5f52fb3265ef68ffe2741f88758082dda393a4b,"Revert ""SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths""

This reverts commit 58292592979ff9277ec34390469a1541315104c0.",src/mongo/s/commands/strategy.cpp,+,"auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",390,download/mongodb_mongo51.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,return getLogicalClock(service).get();,44,download/mongodb_mongo52.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,auto& clock = getLogicalClock(service);,52,download/mongodb_mongo52.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,"LogicalClock::LogicalClock(ServiceContext* serviceContext,",56,download/mongodb_mongo52.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,SignedLogicalTime LogicalClock::_makeSignedLogicalTime(LogicalTime logicalTime) {,68,download/mongodb_mongo52.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,"return SignedLogicalTime(logicalTime, _timeProofService->getProof(logicalTime));",69,download/mongodb_mongo52.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,"clusterTimestamp = LogicalTime(Timestamp(wallClockSecs, 1));",102,download/mongodb_mongo52.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,_clusterTime = _makeSignedLogicalTime(clusterTimestamp);,109,download/mongodb_mongo52.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_clock.cpp,+,_clusterTime = _makeSignedLogicalTime(newTime);,115,download/mongodb_mongo52.cpp
91bb1bca8e8b4f66a610409ec0ebe10245a02e5a,SERVER-27745: Implement LogicalClock,src/mongo/db/logical_time.cpp,+,const LogicalTime LogicalTime::kUninitialized = LogicalTime();,36,download/mongodb_mongo53.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, staleNS.db());",359,download/mongodb_mongo54.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",399,download/mongodb_mongo54.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,+,uassertStatusOK(scopedCMStatus.getStatus());,488,download/mongodb_mongo54.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/client/parallel.cpp,+,"uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, i->first));",952,download/mongodb_mongo54.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/db/s/balancer/balancer.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",616,download/mongodb_mongo55.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/catalog/catalog_cache.cpp,+,CatalogCache::CatalogCache() = default;,44,download/mongodb_mongo56.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/catalog/catalog_cache.cpp,+,CatalogCache::~CatalogCache() = default;,46,download/mongodb_mongo56.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/catalog/catalog_cache.cpp,+,"auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName.toString());",58,download/mongodb_mongo56.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/chunk_manager.cpp,+,"auto config = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db()));",522,download/mongodb_mongo57.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/client/version_manager.cpp,+,Grid::get(txn)->catalogCache()->invalidate(nss.db());,388,download/mongodb_mongo58.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/cluster_commands_common.cpp,+,Grid::get(txn)->catalogCache()->invalidate(nss.db());,58,download/mongodb_mongo59.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db());,480,download/mongodb_mongo60.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",1015,download/mongodb_mongo61.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/strategy.cpp,+,Grid::get(txn)->catalogCache()->invalidate(NamespaceString(staleNS).db());,336,download/mongodb_mongo62.cpp
58292592979ff9277ec34390469a1541315104c0,SERVER-27382 Remove usages of DBConfig::reload/getChunkManagerOrPrimary from legacy code paths,src/mongo/s/commands/strategy.cpp,+,"auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db());",390,download/mongodb_mongo62.cpp
529adf30a88770c44b8dea31323f114975dfd78b,SERVER-27848 Add index hint to aggregation and non-materialized views,src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Planner: outputting soln that uses hinted index as scan."";",851,download/mongodb_mongo63.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_openssl.cpp,+,"fassert(40379,",66,download/mongodb_mongo64.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_openssl.cpp,+,"fassert(40380, HMAC(EVP_sha1(), key, keyLen, input, inputLen, output.data(), NULL) != NULL);",88,download/mongodb_mongo64.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_tom.cpp,+,"fassert(40381,",62,download/mongodb_mongo65.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/crypto_tom.cpp,+,"fassert(40382,",80,download/mongodb_mongo65.cpp
47da0b53f9cd27aeec1d2822780784866269a47d,SERVER-26952: Cache SCRAM-SHA-1 ClientKey,src/mongo/crypto/mechanism_scram.cpp,+,"uassert(17450, ""invalid salt length provided"", saltLen + 4 == startKey.size());",98,download/mongodb_mongo66.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time.cpp,+,LogicalTime::LogicalTime(Timestamp ts) : _time(ts.asULL()) {},36,download/mongodb_mongo67.cpp
c742c4ebe789fafa3fccd4b25332a7df0782b252,SERVER-27743: Implement LogicalTime,src/mongo/db/logical_time.cpp,+,return LogicalTime(Timestamp(_time + ticks));,43,download/mongodb_mongo67.cpp
970fdd08aa92e5393d3f616fd6270ea1fb688640,SERVER-27382 Remove usage of DBConfig::reload from ClusterFind,src/mongo/s/query/cluster_find.cpp,+,Grid::get(txn)->catalogCache()->invalidate(query.nss().db().toString());,371,download/mongodb_mongo68.cpp
a82df5012ee9c1d48197af81abc921f717227323,SERVER-27382 Remove usage of DBConfig::reload from ChunkManagerTargeter,src/mongo/s/chunk_manager_targeter.cpp,+,Grid::get(txn)->catalogCache()->invalidate(_nss.db().toString());,767,download/mongodb_mongo69.cpp
81901db84f0245dcf616e638366def74e4169c69,SERVER-27889 Handle case in catchup.js where stepUp fails due to node already being a candidate.,src/mongo/db/repl/replset_commands.cpp,+,"log() << ""Received replSetStepUp request"";",875,download/mongodb_mongo70.cpp
81901db84f0245dcf616e638366def74e4169c69,SERVER-27889 Handle case in catchup.js where stepUp fails due to node already being a candidate.,src/mongo/db/repl/replset_commands.cpp,+,"log() << ""replSetStepUp request failed "" << causedBy(status);",880,download/mongodb_mongo70.cpp
6c0ede8c7518d9bb8b5d8ed0897fe26e2b0a94ad,SERVER-26126 Remove broken lockState caching,src/mongo/db/concurrency/lock_state.cpp,+,invariant(!inAWriteUnitOfWork());,275,download/mongodb_mongo71.cpp
521a57162820b3b1100d20408f5ad0cd89fdc80e,SERVER-27392 fix bug in FTS index's check for indexed arrays,src/mongo/db/fts/fts_index_format.cpp,+,"uassert(ErrorCodes::CannotBuildIndexKeys,",119,download/mongodb_mongo72.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk.cpp,+,auto status = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,130,download/mongodb_mongo73.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/chunk_manager.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",111,download/mongodb_mongo74.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_find_and_modify_cmd.cpp,+,updateChunkWriteStatsAndSplitIfNeeded(,229,download/mongodb_mongo75.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"updateChunkWriteStatsAndSplitIfNeeded(txn, cm.get(), c.get(), size);",619,download/mongodb_mongo76.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,request.setWriteConcern(WriteConcernOptions::Acknowledged);,138,download/mongodb_mongo77.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"ClusterWriter writer(false, 0);",142,download/mongodb_mongo77.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"writer.write(txn, request, &response);",143,download/mongodb_mongo77.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"uassertStatusOK(catalogClient->shardCollection(txn,",586,download/mongodb_mongo77.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"void toBatchError(const Status& status, BatchedCommandResponse* response) {",78,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,dassert(response->isValid(NULL));,83,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"auto config = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",87,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"uassert(10163, ""can only handle numbers here - which i think is correct"", e.isNumber());",170,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",185,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"uassert(28736,",202,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",234,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"updateChunkWriteStatsAndSplitIfNeeded(txn, chunkManager.get(), chunk.get(), it->second);",207,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"ClusterWriter::ClusterWriter(bool autoSplit, int timeoutMillis)",233,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"Grid::get(txn)->catalogClient(txn)->writeConfigServerDirect(txn, *request, response);",301,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"void updateChunkWriteStatsAndSplitIfNeeded(OperationContext* txn,",338,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"LOG(1) << ""won't auto split because not enough tickets: "" << nss;",372,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,uassertStatusOK(balancerConfig->refreshAndCheck(txn));,382,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"LOG(1) << ""about to initiate autosplit: "" << redact(chunk->toString())",388,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"uassertStatusOK(shardutil::selectChunkSplitPoints(txn,",405,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"uassertStatusOK(shardutil::splitChunkAtMultiplePoints(txn,",451,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"Grid::get(txn)->catalogClient(txn)->getCollection(txn, manager->getns());",466,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"log() << ""Auto-split for "" << nss << "" failed to load collection metadata""",468,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"log() << ""autosplitted "" << nss << "" chunk: "" << redact(chunk->toString()) << "" into """,476,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",494,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"uassertStatusOK(configsvr_client::rebalanceChunk(txn, chunkToMove));",505,download/mongodb_mongo78.cpp
3942d88af18cd7a2d9fff8ea3800f8c7769e5c9f,SERVER-27809 Move Chunk::splitIfShould to cluster_write.h/.cpp,src/mongo/s/commands/cluster_write.cpp,+,"log() << ""Unable to auto-split chunk "" << redact(chunkRange.toString()) << causedBy(ex);",511,download/mongodb_mongo78.cpp
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/balancer/balancer.cpp,+,const auto splitPoints = uassertStatusOK(shardutil::selectChunkSplitPoints(,624,download/mongodb_mongo79.cpp
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/balancer/balancer.cpp,+,"uassert(ErrorCodes::CannotSplit, ""No split points found"", !splitPoints.empty());",633,download/mongodb_mongo79.cpp
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/balancer/balancer.cpp,+,uassertStatusOK(,635,download/mongodb_mongo79.cpp
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/db/s/split_vector_command.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,79,download/mongodb_mongo80.cpp
2922aea4adf8e8fe9bab3a5d6e986e7aecba7228,SERVER-27809 Move regular chunk split to the balancer,src/mongo/s/chunk.cpp,+,"log() << ""Marking chunk "" << toString() << "" as jumbo."";",433,download/mongodb_mongo81.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""migrate failed: "" << redact(e.what());",407,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""migrate failed with unknown exception"";",415,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"error() << ""Migration abort requested before it started"";",458,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,log() << _errmsg;,641,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""Migration aborted while copying documents"";",653,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""_transferMods failed: "" << redact(res);",731,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""Migration aborted while waiting for replication at catch up stage"";",748,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""secondaries having hard time keeping up with migrate"";",758,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,log() << _errmsg;,767,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""Migration aborted while waiting for replication"";",783,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,log() << _errmsg;,799,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""_transferMods failed in STEADY state: "" << redact(res);",826,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""Migration aborted while transferring mods"";",835,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,log() << _errmsg;,855,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager.cpp,+,"OCCASIONALLY log() << ""migrate commit waiting for a majority of slaves for '"" << ns << ""' """,975,download/mongodb_mongo82.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,auto const sessionId = uassertStatusOK(MigrationSessionId::extractFromBSON(cmdObj));,255,download/mongodb_mongo83.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,log() << status.reason();,260,download/mongodb_mongo83.cpp
caacf2f709ae9a01384d1de658628185259dfed2,SERVER-26622 _recvChunkCommit to set errmsg reliably,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,log() << status.reason();,307,download/mongodb_mongo83.cpp
310ce16e32d0f2c110a0f8e2b11e0e0cbc1617ad,SERVER-26213 Remove MigrationManager::CollectionMigrationsState::distLockHandle variable,src/mongo/db/s/balancer/migration_manager.cpp,+,Grid::get(txn)->catalogClient(txn)->getDistLockManager()->lockWithSessionID(,487,download/mongodb_mongo84.cpp
94b37aac060bcc8b10c3eb41f178d84008136f9c,"SERVER-4786 Allow specifying sample rate of slow queries

Adds a sampleRate parameter to the profile command, a value
on the interval [0, 1] which indicates which fraction of
operations should be randomly sampled for profiling and
logging. This allows users to reduce their slowms threshold
or increase their profiling level with less performance
impact on the system.

Closes #1099

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(bsonExtractDoubleFieldWithDefault(,415,download/mongodb_mongo85.cpp
94b37aac060bcc8b10c3eb41f178d84008136f9c,"SERVER-4786 Allow specifying sample rate of slow queries

Adds a sampleRate parameter to the profile command, a value
on the interval [0, 1] which indicates which fraction of
operations should be randomly sampled for profiling and
logging. This allows users to reduce their slowms threshold
or increase their profiling level with less performance
impact on the system.

Closes #1099

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/db/commands/dbcommands.cpp,+,"uassert(ErrorCodes::BadValue,",417,download/mongodb_mongo85.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/chunk.cpp,+,"uassertStatusOK(shardutil::selectChunkSplitPoints(txn,",262,download/mongodb_mongo86.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,+,"auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",73,download/mongodb_mongo87.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,+,auto cmdResponse = uassertStatusOK(,75,download/mongodb_mongo87.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,+,uassertStatusOK(cmdResponse.commandStatus);,82,download/mongodb_mongo87.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,+,"uasserted(ErrorCodes::CannotSplit,",90,download/mongodb_mongo87.cpp
5d2fbb084e463ef3417dffac0f01246698c1a404,"SERVER-27809 Move chunk 'at median' split to the cluster split command

This is the only place where it is used.",src/mongo/s/commands/cluster_split_cmd.cpp,+,uassertStatusOK(,282,download/mongodb_mongo87.cpp
c54d665229604e6fd6bfc0e73c171524604e296b,SERVER-27050 jstest that rollback detects upstream node rolling back,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""rollback - rollbackHangThenFailAfterWritingMinValid fail point """,365,download/mongodb_mongo88.cpp
c54d665229604e6fd6bfc0e73c171524604e296b,SERVER-27050 jstest that rollback detects upstream node rolling back,src/mongo/db/repl/rs_rollback.cpp,+,"uasserted(40378,",371,download/mongodb_mongo88.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(shardingState->canAcceptShardedCommands());,1592,download/mongodb_mongo89.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(shardingState->updateConfigServerOpTimeFromMetadata(txn));,1600,download/mongodb_mongo89.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/merge_chunks_command.cpp,+,uassertStatusOK(ShardingState::get(txn)->canAcceptShardedCommands());,372,download/mongodb_mongo90.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,uassertStatusOK(shardingState->canAcceptShardedCommands());,96,download/mongodb_mongo91.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/move_chunk_command.cpp,+,uassertStatusOK(shardingState->canAcceptShardedCommands());,120,download/mongodb_mongo92.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,+,uassertStatusOK(shardingState->canAcceptShardedCommands());,102,download/mongodb_mongo93.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,+,"uassert(ErrorCodes::BadValue,",174,download/mongodb_mongo93.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,+,uassertStatusOK(givenConnStrStatus);,192,download/mongodb_mongo93.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/set_shard_version_command.cpp,+,uassertStatusOK(ChunkVersion::parseFromBSONForSetShardVersion(cmdObj));,233,download/mongodb_mongo93.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,+,"fassert(40372, _shardName == shardIdentity.getShardName());",341,download/mongodb_mongo94.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,+,"fassert(40373, prevConfigsvrConnStr.getSetName() == configSvrConnStr.getSetName());",351,download/mongodb_mongo94.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,+,"fassert(40374, _clusterId == shardIdentity.getClusterId());",372,download/mongodb_mongo94.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,+,"log() << ""initialized sharding components"";",433,download/mongodb_mongo94.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/sharding_state.cpp,+,"log() << ""failed to initialize sharding components"" << causedBy(status);",444,download/mongodb_mongo94.cpp
ac5d193edf5c1e170119871dd4bfdc5a839fc1cf,SERVER-27625 remove dead ANSA and setShardVersion code,src/mongo/db/s/split_chunk_command.cpp,+,uassertStatusOK(shardingState->canAcceptShardedCommands());,177,download/mongodb_mongo95.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker.cpp,+,"log() << ""not electing self, "" << request.target.toString()",152,download/mongodb_mongo96.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker.cpp,+,"log() << ""not electing self, "" << request.target.toString()",166,download/mongodb_mongo96.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/freshness_checker.cpp,+,"log() << ""not electing self, "" << request.target.toString()",172,download/mongodb_mongo96.cpp
7480e053bb992f869bf83c8e54ee088afa199bb9,SERVER-26914 improve log messages for freshness checking,src/mongo/db/repl/replication_coordinator_impl_elect.cpp,+,"log() << ""running for election""",209,download/mongodb_mongo97.cpp
d60dd07f3f470b702092b6b54e15586a5177d8a1,SERVER-27437 Add dotted path expansion for Documents.,src/mongo/db/pipeline/document.cpp,+,"fassert(16489, path.getPathLength());",361,download/mongodb_mongo98.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,+,_prepareOplogQueryMetadata_inlock(builder);,3281,download/mongodb_mongo99.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,+,metadata.writeToMetadata(builder);,3290,download/mongodb_mongo99.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,+,void ReplicationCoordinatorImpl::_prepareOplogQueryMetadata_inlock(BSONObjBuilder* builder) const {,3296,download/mongodb_mongo99.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"_topCoord->prepareOplogQueryMetadata(_lastCommittedOpTime, lastAppliedOpTime, _rbid);",3299,download/mongodb_mongo99.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/topology_coordinator_impl.cpp,+,rpc::OplogQueryMetadata TopologyCoordinatorImpl::prepareOplogQueryMetadata(,2537,download/mongodb_mongo100.cpp
859dfb093328ae9129f18952df4f25b123977a38,SERVER-27543 send OplogQueryMetadata with OplogFetcher queries,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"return rpc::OplogQueryMetadata(lastCommittedOpTime,",2539,download/mongodb_mongo100.cpp
ae2f197bcb46ee961ebadbccba18154f94a09f56,"SERVER-27231 added disableMaxSyncSourceLagSecs failpoint to turn off re-evaluating sync sources, for jstests that manipulate chaining",src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""disableMaxSyncSourceLagSecs fail point enabled - not checking the most recent """,2484,download/mongodb_mongo101.cpp
ae2f197bcb46ee961ebadbccba18154f94a09f56,"SERVER-27231 added disableMaxSyncSourceLagSecs failpoint to turn off re-evaluating sync sources, for jstests that manipulate chaining",src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""Choosing new sync source because the most recent OpTime of our sync """,2515,download/mongodb_mongo101.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/db/commands/mr.cpp,+,"uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, server));",1786,download/mongodb_mongo102.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk.cpp,+,"auto config = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",78,download/mongodb_mongo103.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,"msgasserted(8070,",523,download/mongodb_mongo104.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,log() << redact(chunkMin.toString());,546,download/mongodb_mongo104.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,log() << redact((*chunk).toString());,547,download/mongodb_mongo104.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,log() << redact(shardKey);,548,download/mongodb_mongo104.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString()));",553,download/mongodb_mongo104.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/chunk_manager.cpp,+,"msgasserted(13141, ""Chunk map pointed to incorrect chunk"");",556,download/mongodb_mongo104.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_flush_router_config_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidateAll();,73,download/mongodb_mongo105.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,67,download/mongodb_mongo106.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,+,"auto scopedDb = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",110,download/mongodb_mongo106.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,+,"uassert(ErrorCodes::NamespaceNotSharded, ""ns ["" + nss.ns() + "" is not sharded."", cm);",117,download/mongodb_mongo106.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/commands/cluster_get_shard_version_cmd.cpp,+,log() << redact(cmEntry.second->toString());,120,download/mongodb_mongo106.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/config.cpp,+,"uasserted(40371,",129,download/mongodb_mongo107.cpp
a9d62c05f1bd56e8a52f12fd096eb4f2d07a8b23,SERVER-27736 Do not store unsharded collections in DBConfig,src/mongo/s/config.cpp,+,"uassert(14822,",246,download/mongodb_mongo107.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""Refresh failed and will be retried as full reload "" << status;",672,download/mongodb_mongo108.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,678,download/mongodb_mongo108.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,+,"grid.catalogClient(txn),",688,download/mongodb_mongo108.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",705,download/mongodb_mongo108.cpp
0e9947736fa66f1a997dd43fea6d1f854bb79518,"Revert ""Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""""

This reverts commit d3e67186d1f9c633e8e69ebb7bf2418d3850688a.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,717,download/mongodb_mongo108.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"LOG(1) << ""Successfully refreshed metadata for "" << nss.ns() << "" to """,290,download/mongodb_mongo109.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""Refresh failed and will be retried as full reload """,305,download/mongodb_mongo109.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,692,download/mongodb_mongo109.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"grid.catalogClient(txn),",706,download/mongodb_mongo109.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,711,download/mongodb_mongo109.cpp
d3e67186d1f9c633e8e69ebb7bf2418d3850688a,"Revert ""SERVER-26791 Shard metadata commands should perform partial refresh as much as possible""

This reverts commit 6add2c82bacecd5f54613ebf4be1553f3b046cbc.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",725,download/mongodb_mongo109.cpp
9edfc4c8ba273d54ecdc31c1fc0eb8c6a42ccbc4,SERVER-27678 moved DataReplicator::OnCompletionGuard into its own library,src/mongo/db/repl/callback_completion_guard.cpp,+,void CallbackCompletionGuardBase::logUnsetResultErrorAndTerminate() {,43,download/mongodb_mongo110.cpp
9edfc4c8ba273d54ecdc31c1fc0eb8c6a42ccbc4,SERVER-27678 moved DataReplicator::OnCompletionGuard into its own library,src/mongo/db/repl/callback_completion_guard.cpp,+,fassertFailed(40370);,46,download/mongodb_mongo110.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,+,"log() << ""Refresh failed and will be retried as full reload "" << status;",672,download/mongodb_mongo111.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,678,download/mongodb_mongo111.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,+,"grid.catalogClient(txn),",688,download/mongodb_mongo111.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",705,download/mongodb_mongo111.cpp
6add2c82bacecd5f54613ebf4be1553f3b046cbc,SERVER-26791 Shard metadata commands should perform partial refresh as much as possible,src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,717,download/mongodb_mongo111.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/commands/cluster_list_databases_cmd.cpp,+,"uassertStatusOK(bsonExtractIntegerField(dbElt.Obj(), ""sizeOnDisk""_sd, &sizeOnDisk));",179,download/mongodb_mongo112.cpp
d7bd800d3d06004c4ca9114627ee882442e4d5e4,SERVER-27584 add filter to listDatabases command,src/mongo/s/commands/cluster_list_databases_cmd.cpp,+,"uassert(ErrorCodes::BadValue,",180,download/mongodb_mongo112.cpp
21948042b6da5fb5bf15897f9808a70551f5af09,SERVER-27680 Merge stopOplogFetcher and pauseRsBgSyncProducer failpoint into single stopReplProducer failpoint,src/mongo/db/repl/bgsync.cpp,+,"log() << ""bgsync - stopReplProducer fail point """,262,download/mongodb_mongo113.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"uassert(ErrorCodes::StaleEpoch,",160,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"return {ErrorCodes::Error(40165),",220,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,Status applyOpsStatus = Grid::get(txn)->catalogClient(txn)->applyChunkOpsDeprecated(,432,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"WriteConcernOptions(),",438,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,Grid::get(txn)->catalogClient(txn)->logChange(,457,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"txn, ""split"", ns.ns(), logDetail.obj(), WriteConcernOptions());",458,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,Grid::get(txn)->catalogClient(txn)->logChange(,471,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"txn, ""multi-split"", ns.ns(), chunkDetail.obj(), WriteConcernOptions());",472,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,Status applyOpsStatus = Grid::get(txn)->catalogClient(txn)->applyChunkOpsDeprecated(,557,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"WriteConcernOptions(),",563,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,Grid::get(txn)->catalogClient(txn)->logChange(,580,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"txn, ""merge"", ns.ns(), logDetail.obj(), WriteConcernOptions());",581,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_chunk_operations_impl.cpp,+,"return Status(ErrorCodes::Error(40164),",645,download/mongodb_mongo114.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,"const WriteConcernOptions kNoWaitWriteConcern(1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));",1479,download/mongodb_mongo115.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,ShardingCatalogManagerImpl::ShardingCatalogManagerImpl(,1498,download/mongodb_mongo115.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,ShardingCatalogManagerImpl::~ShardingCatalogManagerImpl() = default;,1522,download/mongodb_mongo115.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,"LOG(1) << ""ShardingCatalogManagerImpl::shutDown() called."";",1571,download/mongodb_mongo115.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,const auto catalogClient = Grid::get(txn)->catalogClient(txn);,123,download/mongodb_mongo115.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"const WriteConcernOptions kNoWaitWriteConcern(1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));",81,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"LOG(0) << ""Operation for addShard timed out with status "" << swResponse.status;",158,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,if (!Shard::shouldErrorBePropagated(swResponse.status.code())) {,160,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,if (!Shard::shouldErrorBePropagated(commandStatus.code())) {,174,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,Status writeConcernStatus = getWriteConcernStatusFromCommandResult(responseObj);,182,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,if (!Shard::shouldErrorBePropagated(writeConcernStatus.code())) {,183,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,const auto existingShards = Grid::get(txn)->catalogClient(txn)->getAllShards(,204,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"auto dbt = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName);",584,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"LOG(2) << ""going to insert shardIdentity document into shard: "" << shardType;",642,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"Shard::CommandResponse::processBatchWriteResponse(commandResponse, &batchResponse);",654,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"log() << ""going to insert new entry for shard into config.shards: "" << shardType.toString();",660,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,Status result = Grid::get(txn)->catalogClient(txn)->insertConfigDocument(,662,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"log() << ""error adding shard: "" << shardType.toBSON() << "" err: "" << result.reason();",665,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"Status status = Grid::get(txn)->catalogClient(txn)->updateDatabase(txn, dbName, dbt);",676,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"log() << ""adding shard "" << shardConnectionString.toString()",678,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,Grid::get(txn)->catalogClient(txn)->logChange(,688,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"log() << ""Retrying upsert of shardIdentity document into shard "" << shardType.getName();",864,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,Status writeConcernStatus = getWriteConcernStatusFromCommandResult(responseObj);,911,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"Shard::CommandResponse::processBatchWriteResponse(commandResponse, &batchResponse);",919,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,->catalogClient(txnPtr.get()),989,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,commandRequest.setWriteConcern(ShardingCatalogClient::kMajorityWriteConcern.toBSON());,1033,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_shard_operations_impl.cpp,+,"fassert(40219, swHandle.getStatus());",1053,download/mongodb_mongo116.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+,"const WriteConcernOptions kNoWaitWriteConcern(1, WriteConcernOptions::SyncMode::UNSET, Seconds(0));",54,download/mongodb_mongo117.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+,auto updateStatus = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,180,download/mongodb_mongo117.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+,auto updateStatus = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,290,download/mongodb_mongo117.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+,auto updateStatus = Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,365,download/mongodb_mongo117.cpp
0fe3516e0db2fdc6b3602b0018ebbd9f62008bab,"SERVER-27726 Split ShardingCatalogManagerImpl into multiple .cpp files

Gets rid of the ShardingCatalogManagerMock. No functional changes.",src/mongo/s/catalog/sharding_catalog_manager_zone_operations_impl.cpp,+,return Grid::get(txn)->catalogClient(txn)->removeConfigDocuments(,393,download/mongodb_mongo117.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,84,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 2);",85,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",86,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,91,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 3);",92,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",93,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,103,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 2);",104,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",105,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,110,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 2);",111,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",112,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,122,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 2);",123,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",124,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,ASSERT_OK(lastVote.getStatus());,129,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getTerm(), 2);",130,download/mongodb_mongo118.cpp
2369c1863931e5c7f671c33421416c9580f80626,SERVER-27157 replSetRequestVotes should only store votes with higher terms,src/mongo/dbtests/replica_set_tests.cpp,+,"ASSERT_EQ(lastVote.getValue().getCandidateIndex(), 1);",131,download/mongodb_mongo118.cpp
3ead1168d2078379da99c0b5266b6239222d0a35,SERVER-26945 ReplSource::resyncDrop should not assume database name obtained from listDatabases result exists locally,src/mongo/db/repl/master_slave.cpp,+,"log() << ""resync: dropping database "" << dbName",492,download/mongodb_mongo119.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/commands/strategy.cpp,+,"void Strategy::writeOp(OperationContext* txn, DbMessage* dbm) {",484,download/mongodb_mongo120.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"uassert(ErrorCodes::IllegalOperation,",111,download/mongodb_mongo121.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",134,download/mongodb_mongo121.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"uassert(ErrorCodes::IllegalOperation,",138,download/mongodb_mongo121.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"LOG(3) << ""Request::process begin ns: "" << nss << "" msg id: "" << msgId",145,download/mongodb_mongo121.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"Strategy::writeOp(txn.get(), &dbm);",163,download/mongodb_mongo121.cpp
df3ca24457ea3842ec8524d6b196027dbdbc52f5,SERVER-27667 Get rid of sharding Request class,src/mongo/s/service_entry_point_mongos.cpp,+,"LOG(3) << ""Request::process end ns: "" << nss << "" msg id: "" << msgId",167,download/mongodb_mongo121.cpp
a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5,"SERVER-27603 Rename mongo::inShutdown() to mongo::globalInShutdownDeprecated() for clarity.

Calling this function is deprecated because modules that consult it
cannot engage in an orderly, coordinated shutdown. Instead, such
modules tend to just stop working at some point after
mongo::shutdown() is invoked, without regard to whether modules that
depend on them have already shut down.

As such, for clarity, this patch renames the function from
mongo::inShutdown() to mongo::globalInShutdownDeprecated(). This also
helps disambiguate calls to this function from calls to individual
components' similarly named functions.

Also, remove uncalled mongo::inShutdownStrict().",src/mongo/client/connpool.cpp,+,"uassert(17382, ""Can't use connection pool during shutdown"", !globalInShutdownDeprecated());",188,download/mongodb_mongo122.cpp
a7e74d56036e94c3e4ed11ceeb4cd43e95209aa5,"SERVER-27603 Rename mongo::inShutdown() to mongo::globalInShutdownDeprecated() for clarity.

Calling this function is deprecated because modules that consult it
cannot engage in an orderly, coordinated shutdown. Instead, such
modules tend to just stop working at some point after
mongo::shutdown() is invoked, without regard to whether modules that
depend on them have already shut down.

As such, for clarity, this patch renames the function from
mongo::inShutdown() to mongo::globalInShutdownDeprecated(). This also
helps disambiguate calls to this function from calls to individual
components' similarly named functions.

Also, remove uncalled mongo::inShutdownStrict().",src/mongo/db/storage/mmap_v1/dur_recover.cpp,+,"uassert(ErrorCodes::Interrupted,",529,download/mongodb_mongo123.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata.cpp,+,"OplogQueryMetadata::OplogQueryMetadata(OpTime lastOpCommitted,",56,download/mongodb_mongo124.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata.cpp,+,"return OplogQueryMetadata(lastOpCommitted, lastOpApplied, rbid, primaryIndex, syncSourceIndex);",101,download/mongodb_mongo124.cpp
8daf13374403272ace73340f25fce573fa36a55b,SERVER-27543 Create new metadata for oplog queries,src/mongo/rpc/metadata/oplog_query_metadata.cpp,+,Status OplogQueryMetadata::writeToMetadata(BSONObjBuilder* builder) const {,104,download/mongodb_mongo124.cpp
c920eb38186c6122fed326ba341e05d7e02ffe37,"Revert ""SERVER-25673 Remove redundant ChunkManager access in MigrationManager""

This reverts commit d779870e5d4744cbcc402cba2a77f8d892bed0ef.",src/mongo/db/s/migration_source_manager.cpp,+,"uassert(ErrorCodes::InvalidOptions, ""collection version is missing"", oss.hasShardVersion());",95,download/mongodb_mongo125.cpp
3f51a51845e2c8c5b748905b7f8f472cb379f6e8,SERVER-27556/SERVER-27608 Fix a Coverity unchecked return value warning,src/mongo/s/commands/strategy.cpp,+,"LOG(1) << ""Database does not exist or collection no longer sharded after a """,342,download/mongodb_mongo126.cpp
8478c3b4f7c2e2e8804ca4f5a3847b07a71fd9b3,SERVER-22348 propagate binary paths from resmoke to MongoRunner,src/mongo/shell/shell_utils_launcher.cpp,+,"uassert(ErrorCodes::FailedToParse,",264,download/mongodb_mongo127.cpp
8478c3b4f7c2e2e8804ca4f5a3847b07a71fd9b3,SERVER-22348 propagate binary paths from resmoke to MongoRunner,src/mongo/shell/shell_utils_launcher.cpp,+,"uassert(ErrorCodes::FailedToParse,",270,download/mongodb_mongo127.cpp
e5b42cc86c8b97c84c6bec4e9e41ea5f3064e2b4,SERVER-27582 initialize lastVote properly,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Did not find local voted for document at startup."";",402,download/mongodb_mongo128.cpp
e5b42cc86c8b97c84c6bec4e9e41ea5f3064e2b4,SERVER-27582 initialize lastVote properly,src/mongo/db/repl/replication_coordinator_impl.cpp,+,fassertFailedNoTrace(40367);,406,download/mongodb_mongo128.cpp
166a9663a3cb627f36873ffa104a60c0c935393c,SERVER-27308 Reduce cost of sharding check in DocumentSourceLookup,src/mongo/db/pipeline/pipeline_d.cpp,+,"uassert(4567, ""from collection cannot be sharded"", !bool(css->getMetadata()));",206,download/mongodb_mongo129.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/request.cpp,+,"Strategy::writeOp(txn, op, &_d);",111,download/mongodb_mongo130.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,"audit::logQueryAuthzCheck(client, nss, q.query, status.code());",168,download/mongodb_mongo131.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,return uassertStatusOK(ReadPreferenceSetting::fromBSON(rpElem.Obj()));,215,download/mongodb_mongo131.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,"uassertStatusOK(CanonicalQuery::canonicalize(txn, q, ExtensionsCallbackNoop()));",219,download/mongodb_mongo131.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,uassertStatusOK(Strategy::explainFind(,240,download/mongodb_mongo131.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,"uassert(16978,",247,download/mongodb_mongo131.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,"void Strategy::writeOp(OperationContext* txn, int op, DbMessage* dbm) {",489,download/mongodb_mongo131.cpp
6dd2c8edd95ad1e3afc8473e8d5e5885572c9477,"SERVER-27556 Remove usages of Request in strategy.h/.cpp

Removes it from Strategy::queryOp/getMore, Strategy::killCursors,
Strategy::writeOp and Strategy::clientCommandOp.",src/mongo/s/commands/strategy.cpp,+,dassert(parsed && commandResponse.isValid(nullptr));,541,download/mongodb_mongo131.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,+,"uassert(28739, ""Geo coarsest level must be in range [0,30]"", 0 <= minLevel && minLevel <= 30);",121,download/mongodb_mongo132.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,+,"uassert(28740, ""Geo finest level must be in range [0,30]"", 0 <= maxLevel && maxLevel <= 30);",122,download/mongodb_mongo132.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/query/expression_index.cpp,+,"uassert(28741, ""Geo coarsest level must be less than or equal to finest"", minLevel <= maxLevel);",123,download/mongodb_mongo132.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"uassertStatusOK(drCopy->startup(txn, numInitialSyncAttempts.load()));",657,download/mongodb_mongo133.cpp
ba55f2573976ba570c2319bce9b598f0a660445f,SERVER-25932 Make MONGO_EXPORT_SERVER_PARAMETER use AtomicWord instead of std::atomic,src/mongo/dbtests/plan_ranking.cpp,+,"ASSERT_GTE(N, internalQueryPlanEvaluationWorks.load() + 1000);",85,download/mongodb_mongo134.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/bgsync.cpp,+,"log() << ""rollback - rollbackHangBeforeStart fail point """,630,download/mongodb_mongo135.cpp
87f49488f1b5c872daa71fd2fd9b5d744409a817,SERVER-27123 Only update the commit point as a secondary from oplog queries against your sync source,src/mongo/db/repl/oplog_fetcher.cpp,+,"error() << ""invalid replication metadata from sync source "" << _fetcher->getSource()",482,download/mongodb_mongo136.cpp
a59962fab548e695f2e0efa2f261381cba771551,SERVER-27583 shut down SyncSourceFeedback outside ReplicationCoordinatorExternalStateImpl lock,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Stopping replication reporter thread"";",267,download/mongodb_mongo137.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,"log() << ""rollback 0"";",660,download/mongodb_mongo138.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,Lock::GlobalWrite globalWrite(txn->lockState());,661,download/mongodb_mongo138.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,"log() << ""Cannot transition from "" << _replCoord->getMemberState().toString() << "" to """,663,download/mongodb_mongo138.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,"OplogInterfaceLocal(txn, rsOplogName),",678,download/mongodb_mongo138.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,fassertFailedNoTrace(28723);,689,download/mongodb_mongo138.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,uassertStatusOK(status);,696,download/mongodb_mongo138.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,fassertFailedNoTrace(40276);,729,download/mongodb_mongo138.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/bgsync.cpp,+,fassertFailedNoTrace(40364);,736,download/mongodb_mongo138.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"Status rollback_internal::updateFixUpInfoFromLocalOplogEntry(FixUpInfo& fixUpInfo,",183,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"auto subStatus = updateFixUpInfoFromLocalOplogEntry(fixUpInfo, subopElement.Obj());",268,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"uasserted(40361, ""rollback error newest oplog entry on source is missing or empty"");",347,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"uasserted(40365, ""rollback rbid on source changed during rollback, canceling this attempt"");",351,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"OpTime minValid = fassertStatusOK(28774, OpTime::parseFromOplogEntry(newMinValidDoc));",356,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""Setting minvalid to "" << minValid;",357,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""rollback couldn't re-get from ns: "" << doc.ns << "" _id: "" << redact(doc._id)",426,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,fassertFailedNoTrace(40366);,765,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""rollback done"";",776,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"uassert(40362,",814,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""rollback 2 FindCommonPoint"";",835,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"return updateFixUpInfoFromLocalOplogEntry(how, operation);",838,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"localOplog, rollbackSource.getOplog(), processOperationForFixUp);",841,download/mongodb_mongo139.cpp
ef1f1739d6cbff9fb4ddbcc77d467f183c0ab9f2,SERVER-27282 clean up RS rollback error handling,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""rollback common point is "" << how.commonPoint;",881,download/mongodb_mongo139.cpp
2dec7e9a15af8e0fc4d8e68ed40e3abe90b3a3b3,SERVER-25860 Remove redundant operations during rollback,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ns << "" not found on remote host, so not rolling back collmod operation.""",468,download/mongodb_mongo140.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,+,"LOG(1) << ""dropCollection: "" << fullns;",374,download/mongodb_mongo141.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,+,"massertNamespaceNotIndex(fullns.toString(), ""dropCollection"");",381,download/mongodb_mongo141.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/catalog/database.cpp,+,"audit::logDropCollection(&cc(), fullns.toString());",385,download/mongodb_mongo141.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/repl/rs_rollback.cpp,+,"fassertStatusOK(40359, db->dropCollectionEvenIfSystem(txn, nss));",439,download/mongodb_mongo142.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/repl/rs_rollback.cpp,+,"fassertStatusOK(40360, db->dropCollectionEvenIfSystem(txn, nss));",589,download/mongodb_mongo142.cpp
99e19b1ded425a1d859a9bc52fd5c2712e71f83a,SERVER-25860 Allow replication rollback to drop system collections,src/mongo/db/repl/rs_rollback.cpp,+,"fassertStatusOK(40361,",756,download/mongodb_mongo142.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""Upstream node rolled back. Need to retry our rollback."";",859,download/mongodb_mongo143.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver.cpp,+,uassertStatusOK(rbidReply.response.status);,358,download/mongodb_mongo144.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver.cpp,+,uassertStatusOK(getStatusFromCommandResult(rbidReply.response.data));,359,download/mongodb_mongo144.cpp
0b76764eac7651ddba4c82c504aa7e8d785087c2,SERVER-27050 Ensure upstream node doesn't roll back after checking MinValid,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting "" << candidate << "" due to error: '"" << ex << ""' for """,363,download/mongodb_mongo144.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"LOG(debugLevel) << ""Command on database "" << db",1358,download/mongodb_mongo145.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,<< redact(getRedactedCopyForLogging(request.getCommandArgs()));,1360,download/mongodb_mongo145.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,if (!supportsWriteConcern(cmd)) {,1371,download/mongodb_mongo145.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,if (commandSpecifiesWriteConcern(cmd)) {,1372,download/mongodb_mongo145.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"auto wcResult = extractWriteConcern(txn, cmd, db);",1384,download/mongodb_mongo145.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,const auto oldWC = txn->getWriteConcern();,1393,download/mongodb_mongo145.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,1394,download/mongodb_mongo145.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,txn->setWriteConcern(wcResult.getValue());,1395,download/mongodb_mongo145.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,1400,download/mongodb_mongo145.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"waitForWriteConcern(txn,",1405,download/mongodb_mongo145.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(,1496,download/mongodb_mongo145.cpp
2a286b4729da597067f18e677848e6de97abc5a5,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/s/s_only.cpp,+,"std::tie(cmdObj, queryFlags) = uassertStatusOK(",155,download/mongodb_mongo146.cpp
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,+,"auto statusGetDb = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",393,download/mongodb_mongo147.cpp
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,+,LastError::Disabled disableLastError(&clientLastError);,511,download/mongodb_mongo147.cpp
5fd8887479dabbcb23a4084286ef2f0d5cc267c4,SERVER-27556 Remove Request::session and usages of cc() in request processing,src/mongo/s/commands/strategy.cpp,+,"batchErrorToLastError(*commandRequest, commandResponse, &clientLastError);",525,download/mongodb_mongo147.cpp
77b263defe4ce37eb31fa5f7dda52018b148d63a,"SERVER-27556 Cleanup sharding request processing code

No functional changes, just going in the direction of removing
request.h/.cpp.",src/mongo/s/service_entry_point_mongos.cpp,+,"LOG(1) << ""Exception thrown""",126,download/mongodb_mongo148.cpp
77b263defe4ce37eb31fa5f7dda52018b148d63a,"SERVER-27556 Cleanup sharding request processing code

No functional changes, just going in the direction of removing
request.h/.cpp.",src/mongo/s/service_entry_point_mongos.cpp,+,"LastError::get(txn->getClient()).setLastError(ex.getCode(), ex.what());",137,download/mongodb_mongo148.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_apply_ops_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,49,download/mongodb_mongo149.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_apply_ops_cmd.cpp,+,"uasserted(ErrorCodes::CommandNotSupported, ""applyOps not allowed through mongos"");",65,download/mongodb_mongo149.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_available_query_options_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,46,download/mongodb_mongo150.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_commands_common.cpp,+,uassertStatusOK(Grid::get(txn)->catalogClient(txn)->getCollections(,228,download/mongodb_mongo151.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK(catalogClient->dropCollection(txn, nss));",123,download/mongodb_mongo152.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,auto const catalogClient = Grid::get(txn)->catalogClient(txn);,126,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,auto const catalogCache = Grid::get(txn)->catalogCache();,127,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"auto config = uassertStatusOK(catalogCache->getDatabase(txn, dbname));",137,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, config->getPrimaryId()));",152,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,log() << msg;,161,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uasserted(toShardStatus.getStatus().code(), msg);",162,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassert(ErrorCodes::IllegalOperation,",173,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,auto scopedDistLock = uassertStatusOK(catalogClient->getDistLockManager()->lock(,187,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,catalogClient->logChange(,205,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"_buildMoveLogEntry(dbname, fromShard->toString(), toShard->toString(), shardedColls),",209,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"<< txn->getWriteConcern().toBSON()),",230,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"log() << ""clone failed"" << redact(cloneRes);",235,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"appendWriteConcernErrorToCmdResponse(toShard->getId(), wcErrorElem, result);",241,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"auto dbt = uassertStatusOK(catalogClient->getDatabase(txn, dbname)).value;",250,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassertStatusOK(catalogClient->updateDatabase(txn, dbname, dbt));",254,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,catalogClient->logChange(,319,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"_buildMoveLogEntry(dbname, oldPrimary, toShard->toString(), shardedColls),",323,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"static BSONObj _buildMoveLogEntry(const std::string& db,",334,download/mongodb_mongo153.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,90,download/mongodb_mongo154.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,auto const catalogClient = Grid::get(txn)->catalogClient(txn);,129,download/mongodb_mongo154.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"auto scopedShardedDb = uassertStatusOK(ScopedShardDatabase::getExisting(txn, nss.db()));",132,download/mongodb_mongo154.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, config->getPrimaryId()));",221,download/mongodb_mongo154.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,617,download/mongodb_mongo155.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",654,download/mongodb_mongo155.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,uassert(,658,download/mongodb_mongo155.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,"auto scopedFromDb = uassertStatusOK(ScopedShardDatabase::getExisting(txn, fromdb));",669,download/mongodb_mongo155.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::IllegalOperation,",670,download/mongodb_mongo155.cpp
efb9ace86bac133fb9f9c17fbb598a45871206ea,SERVER-27526 Remove all non-metadata command usages of DBConfig::isShardingEnabled,src/mongo/s/commands/commands_public.cpp,+,const auto shard = uassertStatusOK(,687,download/mongodb_mongo155.cpp
5d24dd0ade8b30d9e591eda0f8a008f2f7bde881,"SERVER-27527 Remove explicit shardingEnabled check for databases in M/R and aggregation

The sharded property should be read from the collection itself and not the
database.",src/mongo/s/commands/cluster_aggregate.cpp,+,"uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, mergingShardId));",262,download/mongodb_mongo156.cpp
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/concurrency/lock_state.cpp,+,void LockerImpl<IsForMMAPV1>::assertEmptyAndReset() {,194,download/mongodb_mongo157.cpp
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/concurrency/lock_state.cpp,+,invariant(!inAWriteUnitOfWork());,195,download/mongodb_mongo157.cpp
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/concurrency/lock_state.cpp,+,assertEmptyAndReset();,292,download/mongodb_mongo157.cpp
c4e1e4bbcc1a6fc1f9ca4e3cbf524e6c9c99ce1a,"Revert ""SERVER-26126 Remove broken LockState caching""",src/mongo/db/operation_context_impl.cpp,+,lockState()->assertEmptyAndReset();,79,download/mongodb_mongo158.cpp
46daec6a95628d336762c5f78430f54d361e63c0,SERVER-26126 Fix repl unittests,src/mongo/db/operation_context.cpp,+,dassert(_locker);,401,download/mongodb_mongo159.cpp
7b68733fae7ce8d91f9a5fda67b9972c15a20ef0,SERVER-26126 Remove broken LockState caching,src/mongo/db/concurrency/lock_state.cpp,+,invariant(!inAWriteUnitOfWork());,275,download/mongodb_mongo160.cpp
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/catalog/catalog_cache.cpp,+,"auto status = Grid::get(txn)->catalogClient(txn)->getDatabase(txn, dbName);",57,download/mongodb_mongo161.cpp
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,+,uassertStatusOK(Grid::get(txn)->catalogClient(txn)->getChunks(,229,download/mongodb_mongo162.cpp
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,+,const auto catalogClient = Grid::get(txn)->catalogClient(txn);,347,download/mongodb_mongo162.cpp
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,+,uassertStatusOK(,370,download/mongodb_mongo162.cpp
6d8018b970374182904d197cfe7ad3532dbd613c,SERVER-27473 Remove writes and unused code in DBConfig,src/mongo/s/config.cpp,+,Grid::get(txn)->catalogCache()->invalidate(_name);,413,download/mongodb_mongo162.cpp
6c4794728036f4a5e9169b895e2a9fb6c328812b,SERVER-27466 move transitionToPrimaryHangBeforeInitializingConfigDatabase to before taking the global exclusive lock,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""transition to primary - """,949,download/mongodb_mongo163.cpp
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,+,"auto connString = fassertStatusOK(28805, ConnectionString::parse(newConnectionString));",314,download/mongodb_mongo164.cpp
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,+,"LOG(1) << ""shard not found for set: "" << newConnectionString",328,download/mongodb_mongo164.cpp
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,+,auto status = Grid::get(txn.get())->catalogClient(txn.get())->updateConfigDocument(,338,download/mongodb_mongo164.cpp
2038664084eeaa89e1a8c520a7fabc789545e937,SERVER-27480 Move ShardRegistry updates out of sharding config.h,src/mongo/s/client/shard_registry.cpp,+,"error() << ""RSChangeWatcher: could not update config db for set: "" << setName",346,download/mongodb_mongo164.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,"uassertStatusOK(checkAuthorization(command, txn, dbname, request.getCommandArgs()));",1353,download/mongodb_mongo165.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,"LOG(debugLevel) << ""Command on database "" << db",1536,download/mongodb_mongo165.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,<< redact(getRedactedCopyForLogging(request.getCommandArgs()));,1538,download/mongodb_mongo165.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,if (!supportsWriteConcern(cmd)) {,1549,download/mongodb_mongo165.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,if (commandSpecifiesWriteConcern(cmd)) {,1550,download/mongodb_mongo165.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,"auto wcResult = extractWriteConcern(txn, cmd, db);",1562,download/mongodb_mongo165.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,const auto oldWC = txn->getWriteConcern();,1571,download/mongodb_mongo165.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,1572,download/mongodb_mongo165.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,txn->setWriteConcern(wcResult.getValue());,1573,download/mongodb_mongo165.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,1578,download/mongodb_mongo165.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/db/commands/dbcommands.cpp,+,"waitForWriteConcern(txn,",1583,download/mongodb_mongo165.cpp
1d5f9af9a409f3a2bff2742afd1c55580477cea8,"Revert ""SERVER-27415 Deduplicate `Command::execCommand`""

This reverts commit 9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2.",src/mongo/s/s_only.cpp,+,"std::tie(cmdObj, queryFlags) = uassertStatusOK(",74,download/mongodb_mongo166.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"LOG(debugLevel) << ""Command on database "" << db",1358,download/mongodb_mongo167.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,<< redact(getRedactedCopyForLogging(request.getCommandArgs()));,1360,download/mongodb_mongo167.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,if (!supportsWriteConcern(cmd)) {,1371,download/mongodb_mongo167.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,if (commandSpecifiesWriteConcern(cmd)) {,1372,download/mongodb_mongo167.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"auto wcResult = extractWriteConcern(txn, cmd, db);",1384,download/mongodb_mongo167.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,const auto oldWC = txn->getWriteConcern();,1393,download/mongodb_mongo167.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,ON_BLOCK_EXIT([&] { txn->setWriteConcern(oldWC); });,1394,download/mongodb_mongo167.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,txn->setWriteConcern(wcResult.getValue());,1395,download/mongodb_mongo167.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,1400,download/mongodb_mongo167.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,"waitForWriteConcern(txn,",1405,download/mongodb_mongo167.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(,1496,download/mongodb_mongo167.cpp
9e8006e02f477cbc2c3088fd6a58c208b8f0c1f2,"SERVER-27415 Deduplicate `Command::execCommand`

The `Command::execCommand` symbol is duplicated with implementations
for mongos, mongo/mongod, and the test drivers.  A registration
and handler can be used to eliminate this link-time compatibility
issue.",src/mongo/s/s_only.cpp,+,"std::tie(cmdObj, queryFlags) = uassertStatusOK(",155,download/mongodb_mongo168.cpp
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/replication_coordinator_impl_elect.cpp,+,"fassertStatusOK(28817, _topCoord->becomeCandidateIfElectable(now, lastOpApplied, false));",286,download/mongodb_mongo169.cpp
d5a000950a8c1802138d50d9313a721b4c7c4c1c,SERVER-27056 Don't enforce data freshness for stepUp command,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"fassertStatusOK(28816, becomeCandidateIfElectable(now, lastOpApplied, false));",1347,download/mongodb_mongo170.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(,384,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END(,390,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R dropTempCollections"", _config.incLong.ns())",410,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R prepTempCollection"", _config.incLong.ns());",468,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(_config.tempNamespace));,503,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R prepTempCollection"", _config.tempNamespace.ns())",526,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"getCollectionOrUassert(tx.db(), _config.outputOptions.finalNamespace);",720,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"Collection* coll = getCollectionOrUassert(ctx.db(), nss);",756,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R insert"", nss.ns());",773,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R insertToInc"", _config.incLong.ns());",808,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"Collection* State::getCollectionOrUassert(Database* db, const NamespaceString& nss) {",991,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"uassert(18697, ""Collection unexpectedly disappeared: "" + nss.ns(), out);",993,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""finalReduce"", _config.incLong.ns());",1086,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"LOG(1) << ""mr ns: "" << config.nss;",1397,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,if (!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(config.nss)) {,1442,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/commands/mr.cpp,+,"Collection* coll = State::getCollectionOrUassert(db, config.nss);",1505,download/mongodb_mongo171.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/db/repl/oplog.cpp,+,"AutoGetCollectionForRead oplog(txn.get(), NamespaceString(rsOplogName));",1247,download/mongodb_mongo172.cpp
f3d3087a9f5c900cca6b9f69b7c07b69f69fb1d9,SERVER-27306 Remove AutoGetCollection methods with std::string namespace,src/mongo/dbtests/query_stage_distinct.cpp,+,"ASSERT_OK(dbtests::createIndex(&_txn, nss.ns(), obj));",63,download/mongodb_mongo173.cpp
caba732fb722d5c2257d17dd09dec8a826c13795,"SERVER-27364 Remove DBConfig::setPrimary

Moves its entire functionality to the 'movePrimary' command.",src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->updateDatabase(txn, dbname, dbt));",239,download/mongodb_mongo174.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->enableSharding(txn, dbname));",110,download/mongodb_mongo175.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,+,"audit::logEnableSharding(Client::getCurrent(), dbname);",111,download/mongodb_mongo175.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(dbname);,114,download/mongodb_mongo175.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, dbname);",235,download/mongodb_mongo176.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,const auto shard = uassertStatusOK(,294,download/mongodb_mongo176.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,const auto shard = uassertStatusOK(,448,download/mongodb_mongo176.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Status status = Grid::get(txn)->catalogClient(txn)->enableSharding(,476,download/mongodb_mongo176.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(outputCollNss.db().toString());,482,download/mongodb_mongo176.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,uassertStatusOK(status);,484,download/mongodb_mongo176.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,confOut = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(,488,download/mongodb_mongo176.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,uassertStatusOK(,523,download/mongodb_mongo176.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"Grid::get(txn)->catalogClient(txn)->shardCollection(txn,",524,download/mongodb_mongo176.cpp
c7bf862d8d75fa14801cfe8997a693e05a88594a,SERVER-27366 Remove DBConfig::enableSharding,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,Grid::get(txn)->catalogClient(txn)->getDistLockManager()->lock(,542,download/mongodb_mongo176.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,64,download/mongodb_mongo177.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,uassertStatusOK(scopedDbStatus.getStatus());,89,download/mongodb_mongo177.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",96,download/mongodb_mongo177.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,if (!txn->getWriteConcern().usedDefault) {,125,download/mongodb_mongo177.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,txn->getWriteConcern().toBSON());,127,download/mongodb_mongo177.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,"const auto shard = uassertStatusOK(shardRegistry->getShard(txn, shardId));",133,download/mongodb_mongo177.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,auto cmdDropResult = uassertStatusOK(shard->runCommandWithFixedRetryAttempts(,134,download/mongodb_mongo177.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,uassertStatusOK(cmdDropResult.commandStatus);,147,download/mongodb_mongo177.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,appendWriteConcernErrorToCmdResponse(,150,download/mongodb_mongo177.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK(catalogClient->dropCollection(txn, NamespaceString(ns)));",126,download/mongodb_mongo178.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,if (!txn->getWriteConcern().usedDefault) {,205,download/mongodb_mongo178.cpp
834fe4857af1cd75f2cd70f7682540dbe3a2ced6,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,txn->getWriteConcern().toBSON());,207,download/mongodb_mongo178.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/commands/pipeline_command.cpp,+,: uassertStatusOK(CollatorFactoryInterface::get(txn->getServiceContext()),364,download/mongodb_mongo179.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/db/commands/pipeline_command.cpp,+,"uassertStatusOK(resolveInvolvedNamespaces(txn, request))));",459,download/mongodb_mongo179.cpp
37e720678f6e468726c6cc775a5dc898d080f0f3,"SERVER-25535 Remove injectExpressionContext().

These methods were formally used to propagate a new ExpressionContext to
stages, accumulators, or expressions which potentially needed to
comparisons. Originally, this was necessary since Pipeline parsing
happened outside of the collection lock and thus could not determine if
there was a default collation on the collection. This meant that the
collation could change after parsing and any operators that might
compare strings would need to know about it.

We have since moved parsing within the lock, so the collation can be
known at parse time and the ExpressionContext should not change. This
patch requires an ExpressionContext at construction time, and disallows
changing the collation on an ExpressionContext.",src/mongo/s/commands/cluster_aggregate.cpp,+,collation = uassertStatusOK(CollatorFactoryInterface::get(txn->getServiceContext()),125,download/mongodb_mongo180.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(logLevel) << ""scheduling fetcher to read remote oplog on "" << _syncSourceHost",422,download/mongodb_mongo181.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(2) << ""Stopping oplog fetcher due to shutdown."";",735,download/mongodb_mongo181.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(2) << ""Stopping oplog fetcher because we are waiting for the applier to drain."";",742,download/mongodb_mongo181.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(2) << ""Stopping oplog fetcher because we are primary."";",747,download/mongodb_mongo181.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(2) << ""Stopping oplog fetcher due to stop request."";",753,download/mongodb_mongo181.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/bgsync.cpp,+,"LOG(1) << ""Stopping oplog fetcher; canceling oplog query because we have no valid sync """,760,download/mongodb_mongo181.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/data_replicator_external_state_impl.cpp,+,log(),76,download/mongodb_mongo182.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting "" << candidate << "" due to empty oplog for """,217,download/mongodb_mongo183.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting "" << candidate << "" due to empty first document for """,227,download/mongodb_mongo183.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting "" << candidate << "" due to null timestamp in first document for """,239,download/mongodb_mongo183.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(1) << ""Cannot select a sync source because chaining is not allowed and primary """,196,download/mongodb_mongo184.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source because we are a voter and it is not: """,276,download/mongodb_mongo184.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""Choosing new sync source because the user has requested to use """,2423,download/mongodb_mongo184.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""Choosing new sync source because the config version supplied by "" << currentSource",2431,download/mongodb_mongo184.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""Choosing new sync source because "" << currentSource.toString()",2440,download/mongodb_mongo184.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,log() << logMessage.str();,2471,download/mongodb_mongo184.cpp
0cd2bf29d5798a395a07e67ae79ede9a5cefd411,SERVER-26538 improve sync source change logging,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""Choosing new sync source because the most recent OpTime of our sync source, """,2488,download/mongodb_mongo184.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK({scopedCMStatus.getStatus().code(),",175,download/mongodb_mongo185.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",186,download/mongodb_mongo185.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"<< txn->getWriteConcern().toBSON()),",216,download/mongodb_mongo185.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/commands_public.cpp,+,virtual bool supportsWriteConcern(const BSONObj& cmd) const override {,551,download/mongodb_mongo186.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, dbName);",561,download/mongodb_mongo186.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/commands_public.cpp,+,"log() << ""DROP: "" << nss.ns();",572,download/mongodb_mongo186.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/commands_public.cpp,+,"log() << ""\tdrop going to do passthrough"";",576,download/mongodb_mongo186.cpp
971dad2ee9c23fcb21723575fb133a3298a3e44e,"Revert ""SERVER-27419 Move cluster 'drop' command to a separate file""

This reverts commit 20bc3f49fafb2c8a8d9e8224e8723cd767549d2c.",src/mongo/s/commands/commands_public.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",580,download/mongodb_mongo186.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,63,download/mongodb_mongo187.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,uassertStatusOK(scopedDbStatus.getStatus());,88,download/mongodb_mongo187.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",95,download/mongodb_mongo187.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,if (!txn->getWriteConcern().usedDefault) {,123,download/mongodb_mongo187.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,txn->getWriteConcern().toBSON());,125,download/mongodb_mongo187.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",131,download/mongodb_mongo187.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,auto cmdDropResult = uassertStatusOK(shard->runCommandWithFixedRetryAttempts(,132,download/mongodb_mongo187.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,uassertStatusOK(cmdDropResult.commandStatus);,145,download/mongodb_mongo187.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_cmd.cpp,+,uassertStatusOK(cmdDropResult.writeConcernStatus);,146,download/mongodb_mongo187.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK(catalogClient->dropCollection(txn, NamespaceString(ns)));",125,download/mongodb_mongo188.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,if (!txn->getWriteConcern().usedDefault) {,203,download/mongodb_mongo188.cpp
20bc3f49fafb2c8a8d9e8224e8723cd767549d2c,"SERVER-27419 Move cluster 'drop' command to a separate file

Also renames DBConfig::invalidateNs to markNSNotSharded to better convey
the intent of the function.",src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,txn->getWriteConcern().toBSON());,205,download/mongodb_mongo188.cpp
88dd11b030dbbc47332d42d431a40865cc534435,SERVER-27385: Add dbtest asserting that {rolesInfo: 1} returns no duplicate fields,src/mongo/dbtests/commandtests.cpp,+,ASSERT(ok);,321,download/mongodb_mongo189.cpp
88dd11b030dbbc47332d42d431a40865cc534435,SERVER-27385: Add dbtest asserting that {rolesInfo: 1} returns no duplicate fields,src/mongo/dbtests/commandtests.cpp,+,ASSERT(observedFields.find(field) == observedFields.end());,325,download/mongodb_mongo189.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands.cpp,+,"[](OperationContext*, const DBException&) { fassertFailed(40357); };",377,download/mongodb_mongo190.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands.cpp,+,void Command::registerRegisterError(,380,download/mongodb_mongo190.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands.cpp,+,"void Command::registerError(OperationContext* const txn, const DBException& exception) {",385,download/mongodb_mongo190.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands.cpp,+,"registeredRegisterErrorHandler(txn, exception);",386,download/mongodb_mongo190.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands/dbcommands.cpp,+,"void registerErrorImpl(OperationContext* txn, const DBException& exception) {",124,download/mongodb_mongo191.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands/dbcommands.cpp,+,CurOp::get(txn)->debug().exceptionInfo = exception.getInfo();,125,download/mongodb_mongo191.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/db/commands/dbcommands.cpp,+,Command::registerRegisterError(registerErrorImpl);,129,download/mongodb_mongo191.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/s/s_only.cpp,+,"void registerErrorImpl(OperationContext* txn, const DBException& exception) {}",165,download/mongodb_mongo192.cpp
128ddb98e3e23787bdb7984b1e8d2a87a81cdf78,"SERVER-27391 Deduplicate `Command::registerError`

The `Command::registerError` symbol is duplicated with
implementations for mongos, mongo/mongod, and the test drivers.
A registration/handler can be used to eliminate this link-time
incompatibility.",src/mongo/s/s_only.cpp,+,Command::registerRegisterError(registerErrorImpl);,168,download/mongodb_mongo192.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry.cpp,+,"auto mongo::defaultDatabaseCatalogEntryFactory(const StringData name, KVStorageEngine* const engine)",198,download/mongodb_mongo193.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry.cpp,+,"_engine->getCatalog()->getIndexIdent(txn, collection->ns().ns(), desc->indexName());",336,download/mongodb_mongo193.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry.cpp,+,"log() << ""Can't find index for keyPattern "" << desc->keyPattern();",377,download/mongodb_mongo193.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"KVDatabaseCatalogEntryBase::KVDatabaseCatalogEntryBase(StringData db, KVStorageEngine* engine)",117,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,": DatabaseCatalogEntry(db), _engine(engine) {}",118,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,KVDatabaseCatalogEntryBase::~KVDatabaseCatalogEntryBase() {,120,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"_engine->getCatalog()->getIndexIdent(opCtx, coll->ns().ns(), indexNames[i]);",153,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,return _engine->getCatalog()->getFeatureTracker()->isCompatibleWithCurrentCode(opCtx);,167,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,CollectionCatalogEntry* KVDatabaseCatalogEntryBase::getCollectionCatalogEntry(StringData ns) const {,176,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"Status status = _engine->getCatalog()->newCollection(txn, ns, options);",210,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,string ident = _engine->getCatalog()->getCollectionIdent(ns);,214,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"if (_engine->getCatalog()->getFeatureTracker()->isNonRepairableFeatureInUse(txn, feature)) {",223,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"_engine->getCatalog()->getFeatureTracker()->markNonRepairableFeatureAsInUse(txn,",224,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,_collections[ns.toString()] = new KVCollectionCatalogEntry(,234,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"_engine->getEngine(), _engine->getCatalog(), ns, ident, std::move(rs));",235,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,const std::string ident = _engine->getCatalog()->getCollectionIdent(ns);,245,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"BSONCollectionCatalogEntry::MetaData md = _engine->getCatalog()->getMetaData(opCtx, ns);",253,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,_collections[ns] = new KVCollectionCatalogEntry(,259,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"_engine->getEngine(), _engine->getCatalog(), ns, ident, std::move(rs));",260,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,const std::string identFrom = _engine->getCatalog()->getCollectionIdent(fromNS);,295,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"status = _engine->getCatalog()->renameCollection(txn, fromNS, toNS, stayTemp);",301,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,const std::string identTo = _engine->getCatalog()->getCollectionIdent(toNS);,305,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"BSONCollectionCatalogEntry::MetaData md = _engine->getCatalog()->getMetaData(txn, toNS);",309,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,_collections[toNS.toString()] = new KVCollectionCatalogEntry(,321,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"_engine->getEngine(), _engine->getCatalog(), toNS, identTo, std::move(rs));",322,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,const std::string ident = _engine->getCatalog()->getCollectionIdent(ns);,349,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_base.cpp,+,"Status status = _engine->getCatalog()->dropCollection(opCtx, ns);",351,download/mongodb_mongo194.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_database_catalog_entry_mock.cpp,+,std::unique_ptr<mongo::KVDatabaseCatalogEntryMock> mongo::kvDatabaseCatalogEntryMockFactory(,40,download/mongodb_mongo195.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_storage_engine.cpp,+,": _databaseCatalogEntryFactory(std::move(databaseCatalogEntryFactory)),",75,download/mongodb_mongo196.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_storage_engine.cpp,+,"db = _databaseCatalogEntryFactory(dbName, this).release();",124,download/mongodb_mongo196.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_storage_engine.cpp,+,"KVDatabaseCatalogEntryBase* KVStorageEngine::getDatabaseCatalogEntry(OperationContext* opCtx,",201,download/mongodb_mongo196.cpp
c97cdf0f56c13463c3df0448ebeff812c06d1259,"Deduplicate `KVDatabaseCatalogEntry::getIndex`.

The `getIndex` function was split into two different implementations,
one for test drivers and one for general usage.  The general usage
form relies upon an external module which creates a circular
dependency back into the `db/storage/kv` directory.

The circularity is now broken with a mock class for use in the
test drivers and a dependency injection factory for another
class (`KVStorageEngine`) which should create the correct
form of `KVDatabaseCatalogEntry` for tests and external code.",src/mongo/db/storage/kv/kv_storage_engine.cpp,+,"db = _databaseCatalogEntryFactory(dbName, this).release();",208,download/mongodb_mongo196.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,inline void opwrite(Message& m) {,78,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"_diaglog.writeop(m.singleData().view2ptr(), m.header().getLen());",80,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"void generateLegacyQueryErrorResponse(const AssertionException* exception,",84,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop->debug().exceptionInfo = exception->getInfo();,88,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log(LogComponent::kQuery) << ""assertion "" << exception->toString() << "" ns:"" << queryMessage.ns",90,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log(LogComponent::kQuery) << "" ntoskip:"" << queryMessage.ntoskip",95,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log(LogComponent::kQuery) << ""stale version detected during query over "" << queryMessage.ns",114,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(16979,",175,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,op->debug().iscommand = true;,182,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"Command::generateErrorResponse(txn, &builder, exception);",184,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,op->debug().responseLength = response.header().dataLen();,189,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curOp->debug().iscommand = true;,219,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"Command::generateErrorResponse(txn, &replyBuilder, exception);",222,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curOp->debug().responseLength = response.header().dataLen();,227,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(ErrorCodes::InvalidOptions,",246,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(ErrorCodes::InvalidOptions,",252,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"audit::logQueryAuthzCheck(client, nss, q.query, status.code());",309,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassertStatusOK(status);,310,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"generateLegacyQueryErrorResponse(&e, q, &op, &dbResponse.response);",322,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,op.debug().responseLength = dbResponse.response.header().dataLen();,325,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(13659, ""sent 0 cursors to kill"", n != 0);",334,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"massert(13658,",335,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(13004, str::stream() << ""sent negative cursors to kill: "" << n, n >= 1);",338,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"(n < 30000 ? warning() : error()) << ""receivedKillCursors, n="" << n;",341,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,if (shouldLog(logger::LogSeverity::Debug(1)) || found != n) {,349,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(found == n ? 1 : 0) << ""killcursors: found "" << found << "" of "" << n;",350,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"audit::logInsertAuthzCheck(txn->getClient(), nsString, obj, status.code());",360,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassertStatusOK(status);,361,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"audit::logUpdateAuthzCheck(txn->getClient(),",375,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassertStatusOK(status);,382,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"audit::logDeleteAuthzCheck(txn->getClient(), nsString, singleDelete.query, status.code());",394,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassertStatusOK(status);,395,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassert(,406,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().ntoreturn = ntoreturn;,410,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().cursorid = cursorid;,411,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",423,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"audit::logGetMoreAuthzCheck(txn->getClient(), nsString, cursorid, status.code());",429,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,uassertStatusOK(status);,430,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().exceptionInfo = e.getInfo();,451,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().responseLength = dbresponse.response.header().dataLen();,454,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().nreturned = 1;,455,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().responseLength = dbresponse.response.header().dataLen();,459,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().nreturned = queryResult.getNReturned();,461,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,curop.debug().exhaust = true;,466,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,invariant(!txn->lockState()->inAWriteUnitOfWork());,488,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,opwrite(m);,503,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,opwrite(m);,507,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,opwrite(m);,528,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,opwrite(m);,530,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,currentOp.setLogicalOp_inlock(networkOpToLogicalOp(op));,539,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,OpDebug& debug = currentOp.debug();,542,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,bool shouldLogOpDebug = shouldLog(logger::LogSeverity::Debug(1));,545,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log() << curTimeMillis64() % 10000 << "" long msg received, len:"" << len;",564,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log() << ""    operation isn't supported: "" << static_cast<int>(op);",580,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(18663,",586,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"uassert(16257, str::stream() << ""Invalid ns ["" << ns << ""]"", false);",598,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LastError::get(c).setLastError(ue.getCode(), ue.getInfo().msg);",610,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(3) << "" Caught Assertion in "" << networkOpToString(op) << "", continuing """,611,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LastError::get(c).setLastError(e.getCode(), e.getInfo().msg);",615,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(3) << "" Caught Assertion in "" << networkOpToString(op) << "", continuing """,616,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"txn, currentOp.totalTimeMicros(), currentOp.getReadWriteType());",629,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"log() << debug.report(&c, currentOp, lockerInfo.stats);",634,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(1) << ""note: not profiling because recursive read lock"";",640,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(1) << ""note: not profiling because doing fsync+lock"";",644,download/mongodb_mongo197.cpp
a20ff1fe0d639d703314b36031d829c8713c2a91,SERVER-23103 Move assembleResposne to its own library,src/mongo/db/assemble_response.cpp,+,"LOG(1) << ""note: not profiling because server is read-only"";",646,download/mongodb_mongo197.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"DiagLog::DiagLog() : f(0), level(0) {}",51,download/mongodb_mongo198.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,log() << msg.ss.str();,62,download/mongodb_mongo198.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"uasserted(ErrorCodes::FileStreamFailed, msg.ss.str());",63,download/mongodb_mongo198.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"log() << ""diagLogging using file "" << name;",65,download/mongodb_mongo198.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"log() << ""diagLogging level="" << newLevel;",72,download/mongodb_mongo198.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"log() << ""flushing diag log"";",82,download/mongodb_mongo198.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"void DiagLog::writeop(char* data, int len) {",88,download/mongodb_mongo198.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"f->write(data, len);",91,download/mongodb_mongo198.cpp
64f1ca4537d17ea65ceeb05885b48732a314cc02,SERVER-23103 Move DiagLog to its own library,src/mongo/db/diag_log.cpp,+,"f->write(data, len);",102,download/mongodb_mongo198.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,68,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassert(ErrorCodes::IllegalOperation,",100,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassert(ErrorCodes::BadValue,",104,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,auto const catalogClient = Grid::get(txn)->catalogClient(txn);,108,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,auto scopedDistLock = uassertStatusOK(catalogClient->getDistLockManager()->lock(,113,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(dbname);,120,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,uassertStatusOK(scopedDbStatus.getStatus());,130,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"catalogClient->logChange(txn,",137,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK({status.code(),",180,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(dbname);,187,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,catalogClient->logChange(,189,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK({scopedCMStatus.getStatus().code(),",212,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",223,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",237,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,auto cmdDropDatabaseResult = uassertStatusOK(shard->runCommandWithFixedRetryAttempts(,238,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,"<< txn->getWriteConcern().toBSON()),",243,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,uassertStatusOK(cmdDropDatabaseResult.commandStatus);,246,download/mongodb_mongo199.cpp
b07f96535de47c2da6700074e79ce0ee6eb1ae21,SERVER-27381 Remove DBConfig::dropDatabase,src/mongo/s/commands/cluster_drop_database_cmd.cpp,+,uassertStatusOK(cmdDropDatabaseResult.writeConcernStatus);,247,download/mongodb_mongo199.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_kv_engine.cpp,+,fassertFailed(40358);,179,download/mongodb_mongo200.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_kv_engine.cpp,+,void WiredTigerKVEngine::setInitRsOplogBackgroundThreadCallback(,727,download/mongodb_mongo200.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_kv_engine.cpp,+,bool WiredTigerKVEngine::initRsOplogBackgroundThread(StringData ns) {,732,download/mongodb_mongo200.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_kv_engine.cpp,+,return initRsOplogBackgroundThreadCallback(ns);,733,download/mongodb_mongo200.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_record_store_mock.cpp,+,bool initRsOplogBackgroundThread(StringData ns) {,45,download/mongodb_mongo201.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_record_store_mock.cpp,+,WiredTigerKVEngine::setInitRsOplogBackgroundThreadCallback(initRsOplogBackgroundThread);,51,download/mongodb_mongo201.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_record_store_mongod.cpp,+,bool initRsOplogBackgroundThread(StringData ns) {,135,download/mongodb_mongo202.cpp
cddba78fe2accf9dd942df5a6bc75adf97efcba6,SERVER-27361 deduplicate symbol 'initRsOplogBackgroundThread',src/mongo/db/storage/wiredtiger/wiredtiger_record_store_mongod.cpp,+,WiredTigerKVEngine::setInitRsOplogBackgroundThreadCallback(initRsOplogBackgroundThread);,157,download/mongodb_mongo202.cpp
4061adae4c4cc556954ae50924f4aadd9f8ac732,"Revert ""SERVER-26126 Remove broken LockState caching""

This reverts commit 6dc9fc6ba93b62830dd905f6fac39e0802566a9a.",src/mongo/db/concurrency/lock_state.cpp,+,void LockerImpl<IsForMMAPV1>::assertEmptyAndReset() {,194,download/mongodb_mongo203.cpp
4061adae4c4cc556954ae50924f4aadd9f8ac732,"Revert ""SERVER-26126 Remove broken LockState caching""

This reverts commit 6dc9fc6ba93b62830dd905f6fac39e0802566a9a.",src/mongo/db/concurrency/lock_state.cpp,+,invariant(!inAWriteUnitOfWork());,195,download/mongodb_mongo203.cpp
4061adae4c4cc556954ae50924f4aadd9f8ac732,"Revert ""SERVER-26126 Remove broken LockState caching""

This reverts commit 6dc9fc6ba93b62830dd905f6fac39e0802566a9a.",src/mongo/db/concurrency/lock_state.cpp,+,assertEmptyAndReset();,292,download/mongodb_mongo203.cpp
4061adae4c4cc556954ae50924f4aadd9f8ac732,"Revert ""SERVER-26126 Remove broken LockState caching""

This reverts commit 6dc9fc6ba93b62830dd905f6fac39e0802566a9a.",src/mongo/db/operation_context.cpp,+,dassert(_locker);,401,download/mongodb_mongo204.cpp
4061adae4c4cc556954ae50924f4aadd9f8ac732,"Revert ""SERVER-26126 Remove broken LockState caching""

This reverts commit 6dc9fc6ba93b62830dd905f6fac39e0802566a9a.",src/mongo/db/operation_context_impl.cpp,+,lockState()->assertEmptyAndReset();,79,download/mongodb_mongo205.cpp
7678cba70d790eab3eb546988c77bb34ab83da1a,SERVER-23759 wait for repl startup before shutting down,src/mongo/db/db.cpp,+,"log() << ""starting clean exit via failpoint"";",731,download/mongodb_mongo206.cpp
7678cba70d790eab3eb546988c77bb34ab83da1a,SERVER-23759 wait for repl startup before shutting down,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"fassert(18823, _rsConfigState != kConfigStartingUp);",746,download/mongodb_mongo207.cpp
1dde8c56b6025363f8e048120f1ada69522d8615,SERVER-27337 mapReduce should not attempt to drop nonexistent temp collection,src/mongo/db/commands/mr.cpp,+,"uassert(ErrorCodes::PrimarySteppedDown,",393,download/mongodb_mongo208.cpp
1dde8c56b6025363f8e048120f1ada69522d8615,SERVER-27337 mapReduce should not attempt to drop nonexistent temp collection,src/mongo/db/commands/mr.cpp,+,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(tempNss));,395,download/mongodb_mongo208.cpp
1dde8c56b6025363f8e048120f1ada69522d8615,SERVER-27337 mapReduce should not attempt to drop nonexistent temp collection,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R dropTempCollections"", _config.tempNamespace)",400,download/mongodb_mongo208.cpp
6dc9fc6ba93b62830dd905f6fac39e0802566a9a,SERVER-26126 Remove broken LockState caching,src/mongo/db/concurrency/lock_state.cpp,+,invariant(!inAWriteUnitOfWork());,275,download/mongodb_mongo209.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/catalog/create_collection.cpp,+,"uassert(ErrorCodes::TypeMismatch,",51,download/mongodb_mongo210.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/catalog/create_collection.cpp,+,"uassert(15888, ""must pass name of collection to create"", !firstElt.valueStringData().empty());",54,download/mongodb_mongo210.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::TypeMismatch,",81,download/mongodb_mongo211.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",85,download/mongodb_mongo211.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::TypeMismatch,",102,download/mongodb_mongo211.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::TypeMismatch,",105,download/mongodb_mongo211.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",112,download/mongodb_mongo211.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/collection_to_capped.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",115,download/mongodb_mongo211.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb.cpp,+,"uassert(ErrorCodes::TypeMismatch,",139,download/mongodb_mongo212.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb.cpp,+,"uassert(ErrorCodes::TypeMismatch,",150,download/mongodb_mongo212.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",155,download/mongodb_mongo212.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",158,download/mongodb_mongo212.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb_start_commands.cpp,+,"uassert(ErrorCodes::TypeMismatch,",181,download/mongodb_mongo213.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/copydb_start_commands.cpp,+,uassert(,185,download/mongodb_mongo213.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/dbcommands.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",672,download/mongodb_mongo214.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/dbcommands.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1116,download/mongodb_mongo214.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/dbhash.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",107,download/mongodb_mongo215.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/group_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",116,download/mongodb_mongo216.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/group_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",120,download/mongodb_mongo216.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr.cpp,+,"uassert(ErrorCodes::TypeMismatch,",283,download/mongodb_mongo217.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",287,download/mongodb_mongo217.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1738,download/mongodb_mongo217.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr_common.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",96,download/mongodb_mongo218.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr_common.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",109,download/mongodb_mongo218.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/mr_common.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",129,download/mongodb_mongo218.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,"uassert(ErrorCodes::TypeMismatch,",108,download/mongodb_mongo219.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,"uassert(ErrorCodes::TypeMismatch,",111,download/mongodb_mongo219.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",118,download/mongodb_mongo219.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",121,download/mongodb_mongo219.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,if (source.isOplog()) {,127,download/mongodb_mongo219.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,if (target.isOplog()) {,131,download/mongodb_mongo219.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_cmd.cpp,+,if (source.isOplog() != target.isOplog()) {,137,download/mongodb_mongo219.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_common.cpp,+,"uassert(ErrorCodes::TypeMismatch,",53,download/mongodb_mongo220.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/rename_collection_common.cpp,+,"uassert(ErrorCodes::TypeMismatch,",56,download/mongodb_mongo220.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/test_commands.cpp,+,"log() << ""test only command godinsert invoked coll:"" << nss.coll();",87,download/mongodb_mongo221.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/validate.cpp,+,"LOG(0) << ""CMD: validate "" << nss.ns();",110,download/mongodb_mongo222.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/commands/validate.cpp,+,"if (ctx.getDb() && ctx.getDb()->getViewCatalog()->lookup(txn, nss.ns())) {",120,download/mongodb_mongo222.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/ops/write_ops_parsers.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",93,download/mongodb_mongo223.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/repl/oplog.cpp,+,"uassert(ErrorCodes::TypeMismatch,",644,download/mongodb_mongo224.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/repl/oplog.cpp,+,"uassert(ErrorCodes::TypeMismatch,",647,download/mongodb_mongo224.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/repl/oplog.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",697,download/mongodb_mongo224.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/repl/oplog.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1018,download/mongodb_mongo224.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/db/s/cleanup_orphaned_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",227,download/mongodb_mongo225.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,+,uassert(,102,download/mongodb_mongo226.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,"uassert(ErrorCodes::TypeMismatch,",114,download/mongodb_mongo227.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",98,download/mongodb_mongo228.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,uassert(,115,download/mongodb_mongo228.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassert(ErrorCodes::TypeMismatch,",133,download/mongodb_mongo228.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/cluster_remove_shard_cmd.cpp,+,"uassert(ErrorCodes::TypeMismatch,",89,download/mongodb_mongo229.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"log() << ""DROP: "" << nss.ns();",573,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, nss));",582,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",612,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",616,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",627,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",631,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,uassert(,637,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,uassert(,639,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",677,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",690,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",694,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1032,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1036,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/commands/commands_public.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",1394,download/mongodb_mongo230.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/write_ops/batched_delete_request.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",117,download/mongodb_mongo231.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/write_ops/batched_insert_request.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",123,download/mongodb_mongo232.cpp
7cf929f25638e4ad9525775c8ea0e18f3c86faf5,SERVER-24128 reject embedded null bytes in namespace string parsing,src/mongo/s/write_ops/batched_update_request.cpp,+,"uassert(ErrorCodes::InvalidNamespace,",125,download/mongodb_mongo233.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/db/s/balancer/balancer.cpp,+,"auto scopedChunkManager = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",633,download/mongodb_mongo234.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/chunk.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",410,download/mongodb_mongo235.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_merge_chunks_cmd.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",112,download/mongodb_mongo236.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",129,download/mongodb_mongo237.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,"uassertStatusOK(cm->getShardKeyPattern().extractShardKeyFromQuery(txn, find));",162,download/mongodb_mongo237.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(dbname);,118,download/mongodb_mongo238.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,Grid::get(txn)->catalogCache()->invalidate(dbname);,227,download/mongodb_mongo238.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_split_cmd.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::refreshAndGet(txn, nss));",124,download/mongodb_mongo239.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_split_cmd.cpp,+,"uassertStatusOK(cm->getShardKeyPattern().extractShardKeyFromQuery(txn, find));",181,download/mongodb_mongo239.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_split_cmd.cpp,+,uassertStatusOK(ShardKeyPattern::checkShardKeySize(middle));,244,download/mongodb_mongo239.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/commands/cluster_split_cmd.cpp,+,"log() << ""Splitting chunk """,264,download/mongodb_mongo239.cpp
3e8068a3df77ce9574c396774bde2d51333802d4,"SERVER-27321 Rename ScopedChunkManager::getExisting to refreshAndGet

Also replace usages of direct cache retrieval with invocations to the
scoped retrieval methods.

There are no functional changes, only cleanup on the way to remove
DBConfig::reload, which is one of the refresh methods which can block
access to the entire database while only partial reloading is happening.",src/mongo/s/config.cpp,+,"uassert(ErrorCodes::NamespaceNotSharded,",291,download/mongodb_mongo240.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/db/query/collation/collation_index_key.cpp,+,"uasserted(ErrorCodes::CannotBuildIndexKeys,",113,download/mongodb_mongo241.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.getLastErrorDetailed()[""code""].numberInt(),",730,download/mongodb_mongo242.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.count(_ns), 0U);",732,download/mongodb_mongo242.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,ASSERT(client.getLastError().empty());,747,download/mongodb_mongo242.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.count(_ns), 1U);",748,download/mongodb_mongo242.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.getLastErrorDetailed()[""code""].numberInt(),",764,download/mongodb_mongo242.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.count(_ns), 0U);",766,download/mongodb_mongo242.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.getLastErrorDetailed()[""code""].numberInt(),",782,download/mongodb_mongo242.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.count(_ns), 0U);",784,download/mongodb_mongo242.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.count(_ns), 1U);",796,download/mongodb_mongo242.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,ASSERT_THROWS_CODE(,800,download/mongodb_mongo242.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_TRUE(client.runCommand(""unittests"",",813,download/mongodb_mongo242.cpp
bc1e45dc19c488eb27dd93aaff33ad0145e420ab,SERVER-27300 fail indexing of the Symbol type when the collation is non-simple,src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_EQUALS(client.getLastErrorDetailed()[""code""].numberInt(),",824,download/mongodb_mongo242.cpp
114f26722933a5730eac7ff584eeebffdb974e52,SERVER-25373: Add diagnostic labels to ResourceMutex instances,src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,": _catalogClient(catalogClient),",306,download/mongodb_mongo243.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/connpool.cpp,+,"uassert(40356, _name + "": connect failed "" + uri.toString() + "" : "" + errmsg, c);",270,download/mongodb_mongo244.cpp
d55eb9d186f3039695a4d710116e79ad04536409,SERVER-27210 Allow shell to connect to replicasets with ssl=true in URI,src/mongo/client/replica_set_monitor_manager.cpp,+,"log() << ""Starting new replica set monitor for "" << uri.toString();",126,download/mongodb_mongo245.cpp
e91795212e7f274db6eb66efd5bbad8f144cdf32,SERVER-27284 dedup symbol KVHarnessHelper::create,src/mongo/db/storage/kv/kv_engine_test_harness.cpp,+,[]() -> std::unique_ptr<KVHarnessHelper> { fassertFailed(40355); };,51,download/mongodb_mongo246.cpp
7e606d787608a866ecbff87deced8c9072af265d,SERVER-27238 de-dup symbol logProcessDetailsForLogRotate,src/mongo/util/signal_handlers.cpp,+,logProcessDetailsForLogRotate();,175,download/mongodb_mongo247.cpp
a1baabeee5694aa8c4ffa1827233684d6c7fcc49,"SERVER-27240 Replace ConnectBG with poll

It's unsafe to close a socket from another thread.  Also, after
returning EINTR, the connect call converts to an async call.  And on
non-linux systems that requires a fallback to poll/select to handle
errors.

Because of that, let's just do the connect without the background thread
at all, starting off with poll.",src/mongo/util/net/sock.cpp,+,errorCode = WSAGetLastError();,98,download/mongodb_mongo248.cpp
a1baabeee5694aa8c4ffa1827233684d6c7fcc49,"SERVER-27240 Replace ConnectBG with poll

It's unsafe to close a socket from another thread.  Also, after
returning EINTR, the connect call converts to an async call.  And on
non-linux systems that requires a fallback to poll/select to handle
errors.

Because of that, let's just do the connect without the background thread
at all, starting off with poll.",src/mongo/util/net/sock.cpp,+,if (WSAGetLastError() != WSAEWOULDBLOCK) {,402,download/mongodb_mongo248.cpp
27b1e9a1d61fdd522df5376495859cf9f63725a9,SERVER-27071 ensure config.version doc cannot replicate to secondaries in config_version_rollback.js,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""transition to primary - """,733,download/mongodb_mongo249.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"uassert(ErrorCodes::BadValue, ""task executor cannot be null"", _exec);",260,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"uassert(ErrorCodes::BadValue, ""callback function cannot be null"", _onCompletion);",266,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Creating oplogBuffer."";",418,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,_oplogBuffer = _dataReplicatorExternalState->makeInitialSyncOplogBuffer(txn);,419,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync done; took """,440,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Starting initial sync (attempt "" << (initialSyncAttempt + 1) << "" of """,459,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Resetting sync source so a new one can be chosen for this initial sync attempt."";",474,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Error getting sync source: '"" << syncSource.getStatus() << ""', trying again in """,536,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,status = _recreateOplogAndDropReplicatedDatabases();,559,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,Status DataReplicator::_recreateOplogAndDropReplicatedDatabases() {,581,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,UnreplicatedWritesBlock unreplicatedWritesBlock(txn.get());,608,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Dropping the existing oplog: "" << _opts.localOplogNS;",611,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Dropping  user databases"";",622,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Creating the oplog: "" << _opts.localOplogNS;",632,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"return _storage->createOplog(txn.get(), _opts.localOplogNS);",633,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,status = _scheduleLastOplogEntryFetcher_inlock(,708,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,void DataReplicator::_lastOplogEntryFetcherCallbackForBeginTimestamp(,719,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""listDatabases filter failed to parse database name from "" << redact(dbInfo)",747,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Setting begin timestamp to "" << _initialSyncState->beginTimestamp",768,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Starting DatabasesCloner: "" << _initialSyncState->dbsCloner->toString();",868,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"void DataReplicator::_oplogFetcherCallback(const Status& oplogFetcherFinishStatus,",884,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Finished fetching oplog during initial sync: "" << redact(oplogFetcherFinishStatus)",887,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Finished fetching oplog fetching early. Last fetched optime and hash: """,912,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,status = _scheduleLastOplogEntryFetcher_inlock(,945,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,void DataReplicator::_lastOplogEntryFetcherCallbackForStopTimestamp(,956,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""No need to apply operations. (currently at """,979,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""inserting oplog seed document: "" << oplogSeedDoc;",998,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,log() << msg;,1144,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to apply batch due to '"" << redact(status) << ""'"";",1179,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,status = _scheduleLastOplogEntryFetcher_inlock(,1198,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,void DataReplicator::_lastOplogEntryFetcherCallbackAfterFetchingMissingDocuments(,1234,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to get new minValid from source "" << _syncSource << "" due to '""",1241,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to parse new minValid from source "" << _syncSource << "" due to '""",1279,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Pushing back minValid from "" << _initialSyncState->stopTimestamp << "" to """,1292,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Initial sync attempt finishing up."";",1384,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Initial Sync Attempt Statistics: "" << redact(_getInitialSyncProgress_inlock());",1387,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Initial sync attempt failed -- attempts left: """,1412,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync - initialSyncHangBeforeFinish fail point """,1475,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,Status DataReplicator::_scheduleLastOplogEntryFetcher_inlock(Fetcher::CallbackFn callback) {,1501,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,error() << msg;,1229,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Applying operations until "" << _initialSyncState->stopTimestamp.toBSON()",1257,download/mongodb_mongo250.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""not running initial sync during test."";",614,download/mongodb_mongo251.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Initial Sync has been cancelled: "" << status.getStatus();",626,download/mongodb_mongo251.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Initial Sync failed during shutdown due to """,632,download/mongodb_mongo251.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"error() << ""Initial sync failed, shutting down now. Restart the server """,636,download/mongodb_mongo251.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"fassertFailedWithStatusNoTrace(40088, status.getStatus());",638,download/mongodb_mongo251.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/replication_coordinator_impl.cpp,+,uassertStatusOK(_externalState->runRepairOnLocalDB(txn.get()));,634,download/mongodb_mongo251.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"uassertStatusOK(drCopy->startup(txn, numInitialSyncAttempts));",652,download/mongodb_mongo251.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Initial Sync failed to start: "" << status;",655,download/mongodb_mongo251.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/replication_coordinator_impl.cpp,+,ErrorCodes::isShutdownError(status.code())) {,657,download/mongodb_mongo251.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"fassertFailedWithStatusNoTrace(40354, status);",660,download/mongodb_mongo251.cpp
e30e39ce1a4a55c46db13ad85f6c1000297ea6ff,SERVER-27052 added asynchronous operation support to DataReplicator,src/mongo/executor/task_executor_test_fixture.cpp,+,RemoteCommandRequest TaskExecutorTest::assertRemoteCommandNameEquals(,47,download/mongodb_mongo252.cpp
726cafd713c7333640f8458ec9808ed4f678e3a7,SERVER-27281 pkill/pgrep cannot find mongod on Linux,src/mongo/util/concurrency/thread_name.cpp,+,"log() << ""Ignoring error from setting thread name: "" << errnoWithDescription(error);",154,download/mongodb_mongo253.cpp
350506d115d277d3a8c3559c603ae3d119a2746b,SERVER-21367: Add WT transaction lifetime diagnostics,src/mongo/db/storage/wiredtiger/wiredtiger_recovery_unit.cpp,+,logger::LogSeverity kSlowTransactionSeverity = logger::LogSeverity::Debug(1);,56,download/mongodb_mongo254.cpp
350506d115d277d3a8c3559c603ae3d119a2746b,SERVER-21367: Add WT transaction lifetime diagnostics,src/mongo/db/storage/wiredtiger/wiredtiger_recovery_unit.cpp,+,"LOG(kSlowTransactionSeverity) << ""Slow WT transaction. Lifetime of SnapshotId """,196,download/mongodb_mongo254.cpp
350506d115d277d3a8c3559c603ae3d119a2746b,SERVER-21367: Add WT transaction lifetime diagnostics,src/mongo/db/storage/wiredtiger/wiredtiger_recovery_unit.cpp,+,if (shouldLog(kSlowTransactionSeverity)) {,241,download/mongodb_mongo254.cpp
62245660d4567096c184befc08267b77c9e3a3bb,SERVER-27176 Improve performance of command writeConcern parsing,src/mongo/db/commands/dbcommands.cpp,+,if (commandSpecifiesWriteConcern(cmd)) {,1534,download/mongodb_mongo255.cpp
62245660d4567096c184befc08267b77c9e3a3bb,SERVER-27176 Improve performance of command writeConcern parsing,src/mongo/db/commands/dbcommands.cpp,+,"auto wcResult = extractWriteConcern(txn, cmd, db);",1546,download/mongodb_mongo255.cpp
62245660d4567096c184befc08267b77c9e3a3bb,SERVER-27176 Improve performance of command writeConcern parsing,src/mongo/db/write_concern.cpp,+,bool commandSpecifiesWriteConcern(const BSONObj& cmdObj) {,65,download/mongodb_mongo256.cpp
0b9be138fb58ea4ef2ca77ddebf53b6c76238a13,SERVER-27246 fix atomic applyOps with nonexistent dbs,src/mongo/db/catalog/apply_ops.cpp,+,"logOpForDbHash(txn, ns.c_str());",190,download/mongodb_mongo257.cpp
0b9be138fb58ea4ef2ca77ddebf53b6c76238a13,SERVER-27246 fix atomic applyOps with nonexistent dbs,src/mongo/db/catalog/apply_ops.cpp,+,Lock::GlobalWrite globalWriteLockDisallowTempRelease(txn->lockState());,203,download/mongodb_mongo257.cpp
0b9be138fb58ea4ef2ca77ddebf53b6c76238a13,SERVER-27246 fix atomic applyOps with nonexistent dbs,src/mongo/db/catalog/apply_ops.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(txn, ""applyOps"", ns);",221,download/mongodb_mongo257.cpp
0b9be138fb58ea4ef2ca77ddebf53b6c76238a13,SERVER-27246 fix atomic applyOps with nonexistent dbs,src/mongo/db/catalog/apply_ops.cpp,+,ErrorCodes::errorString(ErrorCodes::fromInt(ex.getCode())));,227,download/mongodb_mongo257.cpp
0b9be138fb58ea4ef2ca77ddebf53b6c76238a13,SERVER-27246 fix atomic applyOps with nonexistent dbs,src/mongo/db/catalog/apply_ops.cpp,+,"logOpForDbHash(txn, ns.c_str());",241,download/mongodb_mongo257.cpp
0b9be138fb58ea4ef2ca77ddebf53b6c76238a13,SERVER-27246 fix atomic applyOps with nonexistent dbs,src/mongo/db/catalog/apply_ops.cpp,+,"log() << ""applyOps error applying: "" << status;",254,download/mongodb_mongo257.cpp
9b403d89bb81064a9d4813724d075c51b0121e97,"SERVER-26562 Move CommitChunkMigration cmd impl to catalog, prep for unit tests",src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,StatusWith<BSONObj> response = Grid::get(txn)->catalogManager()->commitChunkMigration(,217,download/mongodb_mongo258.cpp
9b403d89bb81064a9d4813724d075c51b0121e97,"SERVER-26562 Move CommitChunkMigration cmd impl to catalog, prep for unit tests",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,"uassert(ErrorCodes::StaleEpoch,",1506,download/mongodb_mongo259.cpp
9b403d89bb81064a9d4813724d075c51b0121e97,"SERVER-26562 Move CommitChunkMigration cmd impl to catalog, prep for unit tests",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,"ErrorCodes::Error(40165),",1565,download/mongodb_mongo259.cpp
9b403d89bb81064a9d4813724d075c51b0121e97,"SERVER-26562 Move CommitChunkMigration cmd impl to catalog, prep for unit tests",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,Lock::GlobalWrite firstGlobalWriteLock(txn->lockState());,1661,download/mongodb_mongo259.cpp
9b403d89bb81064a9d4813724d075c51b0121e97,"SERVER-26562 Move CommitChunkMigration cmd impl to catalog, prep for unit tests",src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,"return Status(ErrorCodes::Error(40164),",1701,download/mongodb_mongo259.cpp
1e8f34fc476705888f7dec8d06c780de4e556988,"SERVER-27065 cleanup ClientCursor, ClientCursorPin, and CursorManager

 - Makes cursors come into existence pinned. This fixes a
   race condition in which a cursor could time out in between
   being constructed/retrieved and being pinned.
 - Reduces the public interface of ClientCursor. In
   particular, makes ClientCursor's constructor and
   destructor private.
 - Cleans up header file comments in order to more clearly
   indicate expected usage.",src/mongo/db/catalog/cursor_manager.cpp,+,"uassert(12051, str::stream() << ""cursor id "" << id << "" is already in use"", !cursor->_isPinned);",483,download/mongodb_mongo260.cpp
1e8f34fc476705888f7dec8d06c780de4e556988,"SERVER-27065 cleanup ClientCursor, ClientCursorPin, and CursorManager

 - Makes cursors come into existence pinned. This fixes a
   race condition in which a cursor could time out in between
   being constructed/retrieved and being pinned.
 - Reduces the public interface of ClientCursor. In
   particular, makes ClientCursor's constructor and
   destructor private.
 - Cleans up header file comments in order to more clearly
   indicate expected usage.",src/mongo/dbtests/querytests.cpp,+,unittest::assertGet(ctx.getCollection()->getCursorManager()->pinCursor(cursorId));,285,download/mongodb_mongo261.cpp
1e8f34fc476705888f7dec8d06c780de4e556988,"SERVER-27065 cleanup ClientCursor, ClientCursorPin, and CursorManager

 - Makes cursors come into existence pinned. This fixes a
   race condition in which a cursor could time out in between
   being constructed/retrieved and being pinned.
 - Reduces the public interface of ClientCursor. In
   particular, makes ClientCursor's constructor and
   destructor private.
 - Cleans up header file comments in order to more clearly
   indicate expected usage.",src/mongo/dbtests/querytests.cpp,+,"ASSERT_EQUALS(2, pinnedCursor.getCursor()->pos());",286,download/mongodb_mongo261.cpp
1e8f34fc476705888f7dec8d06c780de4e556988,"SERVER-27065 cleanup ClientCursor, ClientCursorPin, and CursorManager

 - Makes cursors come into existence pinned. This fixes a
   race condition in which a cursor could time out in between
   being constructed/retrieved and being pinned.
 - Reduces the public interface of ClientCursor. In
   particular, makes ClientCursor's constructor and
   destructor private.
 - Cleans up header file comments in order to more clearly
   indicate expected usage.",src/mongo/dbtests/querytests.cpp,+,ASSERT_OK(ctx.getCollection()->getCursorManager()->pinCursor(cursorId).getStatus());,383,download/mongodb_mongo261.cpp
1e8f34fc476705888f7dec8d06c780de4e556988,"SERVER-27065 cleanup ClientCursor, ClientCursorPin, and CursorManager

 - Makes cursors come into existence pinned. This fixes a
   race condition in which a cursor could time out in between
   being constructed/retrieved and being pinned.
 - Reduces the public interface of ClientCursor. In
   particular, makes ClientCursor's constructor and
   destructor private.
 - Cleans up header file comments in order to more clearly
   indicate expected usage.",src/mongo/dbtests/querytests.cpp,+,auto pinnedCursor = unittest::assertGet(,690,download/mongodb_mongo261.cpp
1e8f34fc476705888f7dec8d06c780de4e556988,"SERVER-27065 cleanup ClientCursor, ClientCursorPin, and CursorManager

 - Makes cursors come into existence pinned. This fixes a
   race condition in which a cursor could time out in between
   being constructed/retrieved and being pinned.
 - Reduces the public interface of ClientCursor. In
   particular, makes ClientCursor's constructor and
   destructor private.
 - Cleans up header file comments in order to more clearly
   indicate expected usage.",src/mongo/dbtests/querytests.cpp,+,"ASSERT_EQUALS(three.toULL(), pinnedCursor.getCursor()->getSlaveReadTill().asULL());",692,download/mongodb_mongo261.cpp
1e8f34fc476705888f7dec8d06c780de4e556988,"SERVER-27065 cleanup ClientCursor, ClientCursorPin, and CursorManager

 - Makes cursors come into existence pinned. This fixes a
   race condition in which a cursor could time out in between
   being constructed/retrieved and being pinned.
 - Reduces the public interface of ClientCursor. In
   particular, makes ClientCursor's constructor and
   destructor private.
 - Cleans up header file comments in order to more clearly
   indicate expected usage.",src/mongo/dbtests/querytests.cpp,+,unittest::assertGet(ctx.getCollection()->getCursorManager()->pinCursor(cursorId));,1652,download/mongodb_mongo261.cpp
1e8f34fc476705888f7dec8d06c780de4e556988,"SERVER-27065 cleanup ClientCursor, ClientCursorPin, and CursorManager

 - Makes cursors come into existence pinned. This fixes a
   race condition in which a cursor could time out in between
   being constructed/retrieved and being pinned.
 - Reduces the public interface of ClientCursor. In
   particular, makes ClientCursor's constructor and
   destructor private.
 - Cleans up header file comments in order to more clearly
   indicate expected usage.",src/mongo/dbtests/querytests.cpp,+,auto pinnedCursor = unittest::assertGet(,1702,download/mongodb_mongo261.cpp
cd675c9e3d80f012bbe654d098a988074bd57abc,"SERVER-15407 Set Thread Name in Windows, Mac OS X, and Linux",src/mongo/util/concurrency/thread_name.cpp,+,"log() << ""Ignoring error from setting thread name: "" << errnoWithDescription(error);",115,download/mongodb_mongo262.cpp
cd675c9e3d80f012bbe654d098a988074bd57abc,"SERVER-15407 Set Thread Name in Windows, Mac OS X, and Linux",src/mongo/util/concurrency/thread_name.cpp,+,"log() << ""Ignoring error from setting thread name: "" << errnoWithDescription(error);",132,download/mongodb_mongo262.cpp
894e4d0e71c94d2fcf9848a45bde2d64c8ad6c3a,"Revert ""SERVER-27223 Make Command::parseNs() more efficient""

This reverts commit a2fa506b1d47ed054dd42be291b352e946321737.",src/mongo/db/commands.cpp,+,"log() << ""DEBUG parseNs Command's collection name looks like it includes the db name\n""",113,download/mongodb_mongo263.cpp
894e4d0e71c94d2fcf9848a45bde2d64c8ad6c3a,"Revert ""SERVER-27223 Make Command::parseNs() more efficient""

This reverts commit a2fa506b1d47ed054dd42be291b352e946321737.",src/mongo/db/commands.cpp,+,dassert(false);,117,download/mongodb_mongo263.cpp
5bd4529cffd8149f5471df5e8013828c1dcc1e4e,SERVER-27218 Fix WT Ext4/XFS startup warning in the shell,src/mongo/db/storage/wiredtiger/wiredtiger_init.cpp,+,"log() << ""**          See """,83,download/mongodb_mongo264.cpp
84650bdac943af4d30d1b26a1a176038828a9993,SERVER-20113 Do not allow interrupts during mapReduce temp collection cleanup,src/mongo/db/commands/mr.cpp,+,"uassert(ErrorCodes::PrimarySteppedDown,",374,download/mongodb_mongo265.cpp
84650bdac943af4d30d1b26a1a176038828a9993,SERVER-20113 Do not allow interrupts during mapReduce temp collection cleanup,src/mongo/db/commands/mr.cpp,+,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(tempNss));,376,download/mongodb_mongo265.cpp
84650bdac943af4d30d1b26a1a176038828a9993,SERVER-20113 Do not allow interrupts during mapReduce temp collection cleanup,src/mongo/db/commands/mr.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(_txn, ""M/R dropTempCollections"", _config.tempNamespace)",381,download/mongodb_mongo265.cpp
079a572dca60f0f60530ad08293597dfe3dc106b,"SERVER-22729: Disallow creating replication collections in non-local databases

A `copydb` command from the `local` database to a user one can create collections
that a primary will allow, but secondaries will not.",src/mongo/db/cloner.cpp,+,"uassertStatusOK(userAllowedCreateNS(dbName, params.collectionName));",573,download/mongodb_mongo266.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"Status NOINLINE_DECL makeError(StringData baseMsg, BSONElement idElem, StringData elemName) {",52,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""no end of c-string"", _idElem, elemName);",94,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson"", _idElem, elemName);",114,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson"", _idElem, elemName);",118,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson"", _idElem, elemName);",126,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson"", _idElem, elemName);",130,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""not null terminated string"", _idElem, elemName);",133,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson"", idElem, StringData());",210,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson"", idElem, *elemName);",230,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson"", idElem, *elemName);",235,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson"", idElem, *elemName);",241,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid boolean value"", idElem, *elemName);",243,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson"", idElem, *elemName);",251,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""Invalid bson"", idElem, *elemName);",257,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,return makeError(,264,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson length"", idElem, *elemName);",278,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson"", idElem, *elemName);",299,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid size in bson"", idElem, *elemName);",301,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson"", idElem, *elemName);",303,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson type"", idElem, *elemName);",314,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""bson size is larger than buffer size"", idElem, StringData());",335,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,return makeError(,369,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson CodeWScope size"", idElem, StringData());",391,download/mongodb_mongo267.cpp
a208197c487a363dec26b0db09a53a7ad6add428,"SERVER-26942 When validateBSON() returns InvalidBSON, it should include the field name of the bad element",src/mongo/bson/bson_validate.cpp,+,"return makeError(""unnested CodeWScope"", idElem, StringData());",407,download/mongodb_mongo267.cpp
524cc652b23b2139673a92895d59770c43cf1f65,SERVER-23715: Make the failure to mmap a fatal error,src/mongo/db/storage/mmap_v1/durable_mapped_file.cpp,+,"fassert(16333, _view_write);",250,download/mongodb_mongo268.cpp
524cc652b23b2139673a92895d59770c43cf1f65,SERVER-23715: Make the failure to mmap a fatal error,src/mongo/db/storage/mmap_v1/durable_mapped_file.cpp,+,"fassert(16332, _view_write);",260,download/mongodb_mongo268.cpp
524cc652b23b2139673a92895d59770c43cf1f65,SERVER-23715: Make the failure to mmap a fatal error,src/mongo/db/storage/mmap_v1/durable_mapped_file.cpp,+,fassertFailed(13636);,278,download/mongodb_mongo268.cpp
524cc652b23b2139673a92895d59770c43cf1f65,SERVER-23715: Make the failure to mmap a fatal error,src/mongo/db/storage/mmap_v1/mmap.cpp,+,"fassert(16331, p);",84,download/mongodb_mongo269.cpp
524cc652b23b2139673a92895d59770c43cf1f65,SERVER-23715: Make the failure to mmap a fatal error,src/mongo/db/storage/mmap_v1/mmap.cpp,+,"fassert(16334, ret);",111,download/mongodb_mongo269.cpp
524cc652b23b2139673a92895d59770c43cf1f65,SERVER-23715: Make the failure to mmap a fatal error,src/mongo/db/storage/mmap_v1/mmap_posix.cpp,+,fassertFailed(16330);,170,download/mongodb_mongo270.cpp
68ac97feca48af326a23db740ef65b9dd49bd62d,SERVER-27074 Update to Mozilla Javascript ESR 45.5.0,src/third_party/mozjs-45/extract/js/src/jit/IonAnalysis.cpp,+,"MOZ_ASSERT(ptr == ptrT, ""Shouldn't move without updating MIR pointers"");",4181,download/mongodb_mongo271.cpp
68ac97feca48af326a23db740ef65b9dd49bd62d,SERVER-27074 Update to Mozilla Javascript ESR 45.5.0,src/third_party/mozjs-45/extract/js/src/jit/IonAnalysis.cpp,+,MOZ_ASSERT(!builder.info().isAnalysis());,4188,download/mongodb_mongo271.cpp
68ac97feca48af326a23db740ef65b9dd49bd62d,SERVER-27074 Update to Mozilla Javascript ESR 45.5.0,src/third_party/mozjs-45/extract/js/src/jit/IonBuilder.cpp,+,MOZ_ASSERT(script_->nTypeSets() < UINT16_MAX);,172,download/mongodb_mongo272.cpp
68ac97feca48af326a23db740ef65b9dd49bd62d,SERVER-27074 Update to Mozilla Javascript ESR 45.5.0,src/third_party/mozjs-45/extract/js/src/jit/IonBuilder.cpp,+,MOZ_ASSERT(rootList_);,14059,download/mongodb_mongo272.cpp
27071b2f3e476737f0f86b07ae997617748f6848,SERVER-24563 Fix race in check for DB names that differ in case only,src/mongo/db/catalog/database_holder.cpp,+,"uassert(ErrorCodes::DatabaseDifferCase,",150,download/mongodb_mongo273.cpp
27071b2f3e476737f0f86b07ae997617748f6848,SERVER-24563 Fix race in check for DB names that differ in case only,src/mongo/db/catalog/database_holder.cpp,+,"audit::logCreateDatabase(&cc(), dbname);",176,download/mongodb_mongo273.cpp
8c5d01498d1dfa8eef4292db4d32e6e6465a1580,"Revert ""SERVER-26403 Clean primary states on stepdown""

This reverts commit 6904d0ac5ea4bba1822103eb4e7a623cc81de641.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,_finishCatchUpOplog_inlock(true);,2683,download/mongodb_mongo274.cpp
8c5d01498d1dfa8eef4292db4d32e6e6465a1580,"Revert ""SERVER-26403 Clean primary states on stepdown""

This reverts commit 6904d0ac5ea4bba1822103eb4e7a623cc81de641.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,_finishCatchUpOplog_inlock(true);,2692,download/mongodb_mongo274.cpp
8347e322cd46e8ee847e1730a7e94ea8e3981c53,SERVER-27053 Don't acknowledge writes if the term has changed.,src/mongo/db/repl/replication_coordinator_impl.cpp,+,auto interruptStatus = txn->checkForInterruptNoAssert();,1649,download/mongodb_mongo275.cpp
d9c598ac6d5f79cde4d5439eb21f773b025e917f,"Revert ""SERVER-14662 fix duplicate uassert error code""

This reverts commit 0df1eabb730f54c72dd545fc2b5f5c7f630e7f3c.",src/mongo/db/exec/update.cpp,+,"uassert(34411, ""ambiguous positional update operation"", matchDetails.isValid());",513,download/mongodb_mongo276.cpp
6abc7924ef3781e58ab7f87373bf6983a7c617c0,SERVER-27079 DataReplicator should wait for last oplog fetcher to finish before starting next initial sync attempt,src/mongo/db/repl/data_replicator.cpp,+,"LOG(0 /*1*/) << ""_lastOplogEntryFetcher is active (_anyActiveHandles_inlock): """,876,download/mongodb_mongo277.cpp
2fae4242b9e8256da203639895d1ecd3fe8e2794,"SERVER-27048 Fix recursive lock issue in transport.

The LegacySession teardown code has a race where promoted weak
pointers would be the last owners of a type which needs to hold
a lock in destruction.  That same lock is held by the LegacySession
teardown code, thus leading to a deadlock or detectable recursive
locking situation.",src/mongo/transport/transport_layer_legacy.cpp,+,"log() << ""Skip closing connection for connection # """,268,download/mongodb_mongo278.cpp
ed347a4f92a3388ab0f690502a81132577361623,SERVER-27030 Improve error for legacy find/getMore on view,src/mongo/db/query/find.cpp,+,uasserted(,274,download/mongodb_mongo279.cpp
ed347a4f92a3388ab0f690502a81132577361623,SERVER-27030 Improve error for legacy find/getMore on view,src/mongo/db/query/find.cpp,+,"uasserted(ErrorCodes::CommandNotSupportedOnView,",532,download/mongodb_mongo279.cpp
54021ac0673ebab43c7579db0958f6fe3e70432b,"Revert ""SERVER-22657 Cleanup CollectionShardingState test and configsvr commands""

This reverts commit 19449d2883f2a97b622102935a63606d950573ad.",src/mongo/db/s/config/configsvr_merge_chunk_command.cpp,+,"uasserted(ErrorCodes::IllegalOperation,",110,download/mongodb_mongo280.cpp
54021ac0673ebab43c7579db0958f6fe3e70432b,"Revert ""SERVER-22657 Cleanup CollectionShardingState test and configsvr commands""

This reverts commit 19449d2883f2a97b622102935a63606d950573ad.",src/mongo/db/s/config/configsvr_split_chunk_command.cpp,+,"uasserted(ErrorCodes::IllegalOperation,",108,download/mongodb_mongo281.cpp
6904d0ac5ea4bba1822103eb4e7a623cc81de641,SERVER-26403 Clean primary states on stepdown,src/mongo/db/repl/replication_coordinator_impl.cpp,+,_finishCatchUpOplog_inlock(false);,2665,download/mongodb_mongo282.cpp
eacdb58313a1b464e89c44868527fcadc22a67a6,SERVER-26116 reacquire the balancer distlock in drain mode during config primary step-up,src/mongo/db/s/balancer/balancer.cpp,+,"log() << ""Balancer distributed lock could not be acquired and will be retried in """,323,download/mongodb_mongo283.cpp
eacdb58313a1b464e89c44868527fcadc22a67a6,SERVER-26116 reacquire the balancer distlock in drain mode during config primary step-up,src/mongo/db/s/balancer/migration_manager.cpp,+,auto distLockManager = Grid::get(txn)->catalogClient(txn)->getDistLockManager();,293,download/mongodb_mongo284.cpp
eacdb58313a1b464e89c44868527fcadc22a67a6,SERVER-26116 reacquire the balancer distlock in drain mode during config primary step-up,src/mongo/db/s/balancer/migration_manager.cpp,+,auto balancerLockStatus = distLockManager->tryLockWithLocalWriteConcern(,296,download/mongodb_mongo284.cpp
eacdb58313a1b464e89c44868527fcadc22a67a6,SERVER-26116 reacquire the balancer distlock in drain mode during config primary step-up,src/mongo/db/s/balancer/migration_manager.cpp,+,"log() << ""Failed to acquire balancer distributed lock. Abandoning balancer recovery.""",299,download/mongodb_mongo284.cpp
eacdb58313a1b464e89c44868527fcadc22a67a6,SERVER-26116 reacquire the balancer distlock in drain mode during config primary step-up,src/mongo/db/s/balancer/migration_manager.cpp,+,"log() << ""Unable to read config.migrations collection documents for balancer migration""",319,download/mongodb_mongo284.cpp
eacdb58313a1b464e89c44868527fcadc22a67a6,SERVER-26116 reacquire the balancer distlock in drain mode during config primary step-up,src/mongo/db/s/balancer/migration_manager.cpp,+,"log() << ""Unable to parse config.migrations document '"" << redact(migration.toString())",332,download/mongodb_mongo284.cpp
eacdb58313a1b464e89c44868527fcadc22a67a6,SERVER-26116 reacquire the balancer distlock in drain mode during config primary step-up,src/mongo/db/s/balancer/migration_manager.cpp,+,auto statusWithDistLockHandle = distLockManager->tryLockWithLocalWriteConcern(,348,download/mongodb_mongo284.cpp
eacdb58313a1b464e89c44868527fcadc22a67a6,SERVER-26116 reacquire the balancer distlock in drain mode during config primary step-up,src/mongo/db/s/balancer/migration_manager.cpp,+,"log() << ""Failed to acquire distributed lock for collection '""",359,download/mongodb_mongo284.cpp
eacdb58313a1b464e89c44868527fcadc22a67a6,SERVER-26116 reacquire the balancer distlock in drain mode during config primary step-up,src/mongo/db/s/balancer/migration_manager.cpp,+,"log() << ""Unable to reload chunk metadata for collection '"" << nss",406,download/mongodb_mongo284.cpp
eacdb58313a1b464e89c44868527fcadc22a67a6,SERVER-26116 reacquire the balancer distlock in drain mode during config primary step-up,src/mongo/db/s/balancer/migration_manager.cpp,+,->catalogClient(txn),805,download/mongodb_mongo284.cpp
e0b312bbe4f2c50470560b92fbcfbdd3e0471d2f,SERVER-26964 Make FieldPath more efficient,src/mongo/db/pipeline/field_path.cpp,+,"uassert(40352, ""FieldPath cannot be constructed with empty string"", !_fieldPath.empty());",62,download/mongodb_mongo285.cpp
e0b312bbe4f2c50470560b92fbcfbdd3e0471d2f,SERVER-26964 Make FieldPath more efficient,src/mongo/db/pipeline/field_path.cpp,+,"uassert(40353, ""FieldPath must not end with a '.'."", _fieldPath[_fieldPath.size() - 1] != '.');",63,download/mongodb_mongo285.cpp
e0b312bbe4f2c50470560b92fbcfbdd3e0471d2f,SERVER-26964 Make FieldPath more efficient,src/mongo/db/pipeline/field_path.cpp,+,uassertValidFieldName(getFieldName(i));,98,download/mongodb_mongo285.cpp
c55f35b894f145d14e7f3b4b431f4139c80a3778,SERVER-26530 Add helpful log message for user when initial sync fails,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Initial Sync failed during shutdown due to "" << status.getStatus();",623,download/mongodb_mongo286.cpp
c55f35b894f145d14e7f3b4b431f4139c80a3778,SERVER-26530 Add helpful log message for user when initial sync fails,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"error() << ""Initial sync failed, shutting down now. Restart the server to """,626,download/mongodb_mongo286.cpp
c55f35b894f145d14e7f3b4b431f4139c80a3778,SERVER-26530 Add helpful log message for user when initial sync fails,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"fassertFailedWithStatusNoTrace(40088, status.getStatus());",628,download/mongodb_mongo286.cpp
19449d2883f2a97b622102935a63606d950573ad,SERVER-22657 Cleanup CollectionShardingState test and configsvr commands,src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,"uassert(ErrorCodes::IllegalOperation,",306,download/mongodb_mongo287.cpp
19449d2883f2a97b622102935a63606d950573ad,SERVER-22657 Cleanup CollectionShardingState test and configsvr commands,src/mongo/db/s/config/configsvr_merge_chunk_command.cpp,+,"uassert(ErrorCodes::IllegalOperation,",108,download/mongodb_mongo288.cpp
19449d2883f2a97b622102935a63606d950573ad,SERVER-22657 Cleanup CollectionShardingState test and configsvr commands,src/mongo/db/s/config/configsvr_merge_chunk_command.cpp,+,uassertStatusOK(,115,download/mongodb_mongo288.cpp
19449d2883f2a97b622102935a63606d950573ad,SERVER-22657 Cleanup CollectionShardingState test and configsvr commands,src/mongo/db/s/config/configsvr_split_chunk_command.cpp,+,"uassert(ErrorCodes::IllegalOperation,",106,download/mongodb_mongo289.cpp
19449d2883f2a97b622102935a63606d950573ad,SERVER-22657 Cleanup CollectionShardingState test and configsvr commands,src/mongo/db/s/config/configsvr_split_chunk_command.cpp,+,uassertStatusOK(,113,download/mongodb_mongo289.cpp
1ebe71d22dfa865fd451909a666305f581302f5c,SERVER-27028 linearizable read concern checks if node is still primary before it writes noop,src/mongo/db/read_concern.cpp,+,"if (!replCoord->canAcceptWritesForDatabase(""admin"")) {",147,download/mongodb_mongo290.cpp
b476c357ac3bee4134d8fca884258460b214ebd8,"SERVER-25662 DataReplicator cleanup

removed _scheduleFetch_inlock() and _fetcherPaused
renamed _state to _dataReplicatorState
DataReplicator::_anyActiveHandles_inlock() should shutdown last oplog entry fetcher
DataReplicator::shutdown() no longer requires an operation context
removed unnecessary references to DataReplicatorState::Uninitialized
removed unused sync source checking from doNextActions
collapse overloaded versions of _scheduleApplyBatch
merged _doNextActions_inlock() and _doNextActions_Steady_inlock()",src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Waiting for shutdown of DataReplicator."";",272,download/mongodb_mongo291.cpp
b476c357ac3bee4134d8fca884258460b214ebd8,"SERVER-25662 DataReplicator cleanup

removed _scheduleFetch_inlock() and _fetcherPaused
renamed _state to _dataReplicatorState
DataReplicator::_anyActiveHandles_inlock() should shutdown last oplog entry fetcher
DataReplicator::shutdown() no longer requires an operation context
removed unnecessary references to DataReplicatorState::Uninitialized
removed unused sync source checking from doNextActions
collapse overloaded versions of _scheduleApplyBatch
merged _doNextActions_inlock() and _doNextActions_Steady_inlock()",src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Starting OplogFetcher: "" << _oplogFetcher->toString();",500,download/mongodb_mongo291.cpp
8b07dc8933006c20de3111eae5face52320ab45a,SERVER-25662 ReplicationCoordinatorImpl::shutdown() should release data replicator shared_ptr before shutting down external state,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"LOG(1) << ""ReplicationCoordinatorImpl::shutdown calling DataReplicator::shutdown."";",735,download/mongodb_mongo292.cpp
ae0b220d2b0c4088afe34329faadd852db907506,SERVER-26530 Added helpful log message in case of inital sync failure,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"error() << ""Initial sync failed, shutting down now. Restart the server to """,619,download/mongodb_mongo293.cpp
63403bb24d6db692f3f03ce5c9d65147678aa044,SERVER-25662 DataReplicator::shutdown() should signal initial sync finish event after setting status,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Initial sync attempt terminated due to shutdown: "" << shutdownStatus;",686,download/mongodb_mongo294.cpp
07562c2fb080a3856fe06a2ff412d06060a6abb7,SERVER-26955 Ensure setFeatureCompatibilityVersion commands support maxTimeMS,src/mongo/db/commands/feature_compatibility_version.cpp,+,"log() << ""setting featureCompatibilityVersion to """,349,download/mongodb_mongo295.cpp
07562c2fb080a3856fe06a2ff412d06060a6abb7,SERVER-26955 Ensure setFeatureCompatibilityVersion commands support maxTimeMS,src/mongo/db/commands/feature_compatibility_version_command_parser.cpp,+,uasserted(,70,download/mongodb_mongo296.cpp
07562c2fb080a3856fe06a2ff412d06060a6abb7,SERVER-26955 Ensure setFeatureCompatibilityVersion commands support maxTimeMS,src/mongo/db/commands/set_feature_compatibility_version_command.cpp,+,const auto version = uassertStatusOK(,90,download/mongodb_mongo297.cpp
07562c2fb080a3856fe06a2ff412d06060a6abb7,SERVER-26955 Ensure setFeatureCompatibilityVersion commands support maxTimeMS,src/mongo/db/s/config/configsvr_control_balancer_command.cpp,+,"uassert(ErrorCodes::InternalError,",89,download/mongodb_mongo298.cpp
07562c2fb080a3856fe06a2ff412d06060a6abb7,SERVER-26955 Ensure setFeatureCompatibilityVersion commands support maxTimeMS,src/mongo/db/s/config/configsvr_control_balancer_command.cpp,+,"uassert(ErrorCodes::IllegalOperation,",94,download/mongodb_mongo298.cpp
07562c2fb080a3856fe06a2ff412d06060a6abb7,SERVER-26955 Ensure setFeatureCompatibilityVersion commands support maxTimeMS,src/mongo/db/s/config/configsvr_set_feature_compatibility_version_command.cpp,+,const auto version = uassertStatusOK(,90,download/mongodb_mongo299.cpp
07562c2fb080a3856fe06a2ff412d06060a6abb7,SERVER-26955 Ensure setFeatureCompatibilityVersion commands support maxTimeMS,src/mongo/s/commands/cluster_set_feature_compatibility_version_cmd.cpp,+,const auto version = uassertStatusOK(,125,download/mongodb_mongo300.cpp
07562c2fb080a3856fe06a2ff412d06060a6abb7,SERVER-26955 Ensure setFeatureCompatibilityVersion commands support maxTimeMS,src/mongo/s/commands/cluster_set_feature_compatibility_version_cmd.cpp,+,auto response = uassertStatusOK(configShard->runCommandWithFixedRetryAttempts(,131,download/mongodb_mongo300.cpp
07562c2fb080a3856fe06a2ff412d06060a6abb7,SERVER-26955 Ensure setFeatureCompatibilityVersion commands support maxTimeMS,src/mongo/s/commands/cluster_set_feature_compatibility_version_cmd.cpp,+,uassertStatusOK(response.commandStatus);,138,download/mongodb_mongo300.cpp
cbb4e60d3e2756f5861372121228a6fe82a3cedb,"SERVER-22657 Make MigrationChunkClonerSourceLegacy not do host resolution

No functional changes, just a cleanup to move the resolution of the
recipient shard's primary out of MigrationChunkClonerSourceLegacy in order
to make it simpler for unit-testing.",src/mongo/db/s/move_chunk_command.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, moveChunkRequest.getFromShardId()))",208,download/mongodb_mongo301.cpp
cbb4e60d3e2756f5861372121228a6fe82a3cedb,"SERVER-22657 Make MigrationChunkClonerSourceLegacy not do host resolution

No functional changes, just a cleanup to move the resolution of the
recipient shard's primary out of MigrationChunkClonerSourceLegacy in order
to make it simpler for unit-testing.",src/mongo/db/s/move_chunk_command.cpp,+,const auto recipientHost = uassertStatusOK([&] {,210,download/mongodb_mongo301.cpp
cbb4e60d3e2756f5861372121228a6fe82a3cedb,"SERVER-22657 Make MigrationChunkClonerSourceLegacy not do host resolution

No functional changes, just a cleanup to move the resolution of the
recipient shard's primary out of MigrationChunkClonerSourceLegacy in order
to make it simpler for unit-testing.",src/mongo/db/s/move_chunk_command.cpp,+,"uassertStatusOK(shardRegistry->getShard(txn, moveChunkRequest.getToShardId()));",212,download/mongodb_mongo301.cpp
214c05c296661f39881e18dd57b92f19af1b2c01,SERVER-26911 Create RAII type for turning off replicated writes,src/mongo/db/commands/feature_compatibility_version.cpp,+,UnreplicatedWritesBlock unreplicatedWritesBlock(txn);,295,download/mongodb_mongo302.cpp
214c05c296661f39881e18dd57b92f19af1b2c01,SERVER-26911 Create RAII type for turning off replicated writes,src/mongo/db/commands/test_commands.cpp,+,UnreplicatedWritesBlock unreplicatedWritesBlock(txn);,96,download/mongodb_mongo303.cpp
bb7fb4a2434d83a6d2d2d2cd3eeb3588018e931f,SERVER-26760 prevent ShardingCatalogManagerImpl::addShard() from transparently passing retriable errors upstream,src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,if (!Shard::shouldErrorBePropagated(swResponse.status.code())) {,357,download/mongodb_mongo304.cpp
bb7fb4a2434d83a6d2d2d2cd3eeb3588018e931f,SERVER-26760 prevent ShardingCatalogManagerImpl::addShard() from transparently passing retriable errors upstream,src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,if (!Shard::shouldErrorBePropagated(commandStatus.code())) {,371,download/mongodb_mongo304.cpp
bb7fb4a2434d83a6d2d2d2cd3eeb3588018e931f,SERVER-26760 prevent ShardingCatalogManagerImpl::addShard() from transparently passing retriable errors upstream,src/mongo/s/catalog/sharding_catalog_manager_impl.cpp,+,if (!Shard::shouldErrorBePropagated(writeConcernStatus.code())) {,380,download/mongodb_mongo304.cpp
e24e12cfd678296e68adab52bfb40e862a66d0fa,SERVER-26943 make OpObservers for config.shards handle for writes while non-primary correctly,src/mongo/db/s/collection_sharding_state.cpp,+,uassertStatusOK(,101,download/mongodb_mongo305.cpp
e24e12cfd678296e68adab52bfb40e862a66d0fa,SERVER-26943 make OpObservers for config.shards handle for writes while non-primary correctly,src/mongo/db/s/collection_sharding_state.cpp,+,"Grid::get(_txn)->catalogManager()->upsertShardIdentityOnShard(_txn, _shardType));",102,download/mongodb_mongo305.cpp
e24e12cfd678296e68adab52bfb40e862a66d0fa,SERVER-26943 make OpObservers for config.shards handle for writes while non-primary correctly,src/mongo/db/s/collection_sharding_state.cpp,+,Grid::get(_txn)->catalogManager()->cancelAddShardTaskIfNeeded(_shardId);,123,download/mongodb_mongo305.cpp
5c63294cbe198876843f89af7d88704458a71145,SERVER-26834 replset7.js should cause documents to be seen twice in initial sync,src/mongo/db/cloner.cpp,+,"log() << ""initial sync - initialSyncHangDuringCollectionClone fail point """,290,download/mongodb_mongo306.cpp
5c63294cbe198876843f89af7d88704458a71145,SERVER-26834 replset7.js should cause documents to be seen twice in initial sync,src/mongo/db/repl/collection_cloner.cpp,+,"log() << ""initial sync - initialSyncHangDuringCollectionClone fail point """,500,download/mongodb_mongo307.cpp
5c63294cbe198876843f89af7d88704458a71145,SERVER-26834 replset7.js should cause documents to be seen twice in initial sync,src/mongo/db/repl/rs_initialsync.cpp,+,"error() << ""initial sync attempt failed, """,565,download/mongodb_mongo308.cpp
e7dbc236d013d4e53a366efc8482b73efbc25992,SERVER-26946 check for errors sending moveChunk command that should not be propagated back to another server,src/mongo/db/s/balancer/migration_manager.cpp,+,if (!Shard::shouldErrorBePropagated(commandStatus.code())) {,778,download/mongodb_mongo309.cpp
7d68067e5a6272bb463acc4e7a6c6a144148039c,SERVER-25662 added log message for oplog fetcher completion to the data replicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Finished fetching oplog during initial sync: "" << redact(status)",1354,download/mongodb_mongo310.cpp
0a91c903c4dee2e6cd39f0b9d6dd2b639a137aab,SERVER-25604 fix $replaceRoot error message,src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uassert(40228,",76,download/mongodb_mongo311.cpp
25eb217f91c78f79b3b895258da49646cfc33c65,SERVER-26958 Fix potential nullptr dereference in WCE retry loop,src/mongo/db/catalog/database.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(txn, ""dropDatabase"", name);",657,download/mongodb_mongo312.cpp
f985c0ce3fa7efb0e857747f0a72bdef3326ac55,"SERVER-26685 register Database::AddCollectionChange in the correct order

Doing it before creating the RecordStore lead to rollback of Collection
creation happening after RecordStore creation. This meant the Collection
destructor would call setCappedCallback() on an already destroyed RecordStore.",src/mongo/dbtests/rollbacktests.cpp,+,"ASSERT_OK(userCreateNS(&txn, ctx.db(), ns, options, defaultIndexes));",164,download/mongodb_mongo313.cpp
f985c0ce3fa7efb0e857747f0a72bdef3326ac55,"SERVER-26685 register Database::AddCollectionChange in the correct order

Doing it before creating the RecordStore lead to rollback of Collection
creation happening after RecordStore creation. This meant the Collection
destructor would call setCappedCallback() on an already destroyed RecordStore.",src/mongo/dbtests/rollbacktests.cpp,+,"ASSERT_OK(userCreateNS(&txn, ctx.db(), ns, options, defaultIndexes));",195,download/mongodb_mongo313.cpp
2100b4dc48de18b5a7af7610a6fd7ab4a2b263bc,"Revert ""SERVER-26834 replset7.js should cause documents to be seen twice in initial sync""

This reverts commit 80f8ffa2121c264ead069f3ed39a34a57ac3f5a7.",src/mongo/db/repl/rs_initialsync.cpp,+,"error() << ""initial sync attempt failed, "" << (kMaxFailedAttempts - ++failedAttempts)",563,download/mongodb_mongo314.cpp
80f8ffa2121c264ead069f3ed39a34a57ac3f5a7,SERVER-26834 replset7.js should cause documents to be seen twice in initial sync,src/mongo/db/cloner.cpp,+,"log() << ""initial sync - initialSyncHangDuringCollectionClone fail point """,290,download/mongodb_mongo315.cpp
80f8ffa2121c264ead069f3ed39a34a57ac3f5a7,SERVER-26834 replset7.js should cause documents to be seen twice in initial sync,src/mongo/db/repl/collection_cloner.cpp,+,"log() << ""initial sync - initialSyncHangDuringCollectionClone fail point """,500,download/mongodb_mongo316.cpp
80f8ffa2121c264ead069f3ed39a34a57ac3f5a7,SERVER-26834 replset7.js should cause documents to be seen twice in initial sync,src/mongo/db/repl/rs_initialsync.cpp,+,"error() << ""initial sync attempt failed, """,565,download/mongodb_mongo317.cpp
9abe003a4307295f4a3785527ac7ff633383b39a,SERVER-26799 do not refresh if RSM is removed from a RSM manager,src/mongo/client/replica_set_monitor.cpp,+,"LOG(1) << ""Stopping refresh for replica set "" << getName() << "" because its removed"";",237,download/mongodb_mongo318.cpp
e20c8f98eb6e060cc6f46ee60a2683ea7043f1a1,SERVER-25662 removed non-initial sync functionality from Data Replicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to apply batch due to '"" << redact(status) << ""'"";",1075,download/mongodb_mongo319.cpp
e20c8f98eb6e060cc6f46ee60a2683ea7043f1a1,SERVER-25662 removed non-initial sync functionality from Data Replicator,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Error fetching oplog during initial sync: "" << redact(status);",1440,download/mongodb_mongo319.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Initial sync attempt finishing up."";",623,download/mongodb_mongo320.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,"LOG(0 /*1*/) << ""_oplogFetcher is active (_anyActiveHandles_inlock): """,930,download/mongodb_mongo320.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,"LOG(0 /*1*/) << ""_initialSyncState::dbsCloner is active (_anyActiveHandles_inlock): """,938,download/mongodb_mongo320.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,"LOG(0 /*1*/) << ""_applier is active (_anyActiveHandles_inlock): "" << _applier->toString();",945,download/mongodb_mongo320.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,"LOG(0 /*1*/) << ""_shuttingDownApplier is active (_anyActiveHandles_inlock): """,951,download/mongodb_mongo320.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,"LOG(0 /*1*/) << ""_reporter is active (_anyActiveHandles_inlock): "" << _reporter->toString();",957,download/mongodb_mongo320.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,LOG(0 /*2*/),962,download/mongodb_mongo320.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Signaling shutdown event for DataReplicator."";",1013,download/mongodb_mongo320.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Error scheduling fetcher '"" << scheduleStatus << ""'."";",1096,download/mongodb_mongo320.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Error scheduling apply batch '"" << scheduleStatus << ""'."";",1126,download/mongodb_mongo320.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to apply batch due to '"" << redact(status) << ""'"";",1214,download/mongodb_mongo320.cpp
30cc39f613de9b025ba950ae59fc446bd3c978e1,"Revert ""SERVER-25662: rework DR shutdown and finishing initial sync""

This reverts commit 5ecb92a02cef012649f67606a12a7956aebba65f.",src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Blacklisting "" << syncSource << "" due to fetcher error: '""",1598,download/mongodb_mongo320.cpp
3220495083b0d678578a76591f54ee1d7a5ec5df,SERVER-26369: Fix shard server crash with encrypted PEMKeyFiles,src/mongo/util/net/ssl_manager.cpp,+,"error() << ""failed to allocate BIO object: "" << getSSLErrorMessage(ERR_get_error());",807,download/mongodb_mongo321.cpp
3220495083b0d678578a76591f54ee1d7a5ec5df,SERVER-26369: Fix shard server crash with encrypted PEMKeyFiles,src/mongo/util/net/ssl_manager.cpp,+,"error() << ""cannot read PEM key file: "" << keyFile << ' '",813,download/mongodb_mongo321.cpp
3220495083b0d678578a76591f54ee1d7a5ec5df,SERVER-26369: Fix shard server crash with encrypted PEMKeyFiles,src/mongo/util/net/ssl_manager.cpp,+,<< getSSLErrorMessage(ERR_get_error());,814,download/mongodb_mongo321.cpp
3220495083b0d678578a76591f54ee1d7a5ec5df,SERVER-26369: Fix shard server crash with encrypted PEMKeyFiles,src/mongo/util/net/ssl_manager.cpp,+,"error() << ""cannot use PEM key file: "" << keyFile << ' '",840,download/mongodb_mongo321.cpp
3220495083b0d678578a76591f54ee1d7a5ec5df,SERVER-26369: Fix shard server crash with encrypted PEMKeyFiles,src/mongo/util/net/ssl_manager.cpp,+,<< getSSLErrorMessage(ERR_get_error());,841,download/mongodb_mongo321.cpp
1c2c402147d3e6fea734ffd16784cdb1e82da91d,"SERVER-26674 Remove uses of locks in TransportLayerLegacy

- transport::Session becomes an abstract interface
- narrow the TransportLayer interface
- LegacySession owns its Connection object for fast access
- refactor mock session and ticket classes into one common class",src/mongo/transport/transport_layer_legacy.cpp,+,"log() << ""legacy transport layer closing all connections"";",242,download/mongodb_mongo322.cpp
1c2c402147d3e6fea734ffd16784cdb1e82da91d,"SERVER-26674 Remove uses of locks in TransportLayerLegacy

- transport::Session becomes an abstract interface
- narrow the TransportLayer interface
- LegacySession owns its Connection object for fast access
- refactor mock session and ticket classes into one common class",src/mongo/transport/transport_layer_legacy.cpp,+,"log() << ""Skip closing connection for connection # """,261,download/mongodb_mongo322.cpp
17c37d0e626a61aeae8f4f149da98df2496740fa,"SERVER-26202 Relax index constraints in oplog application

This reverts commit d23e79eb9e69bd746416d9f674dfaee59457c887.",src/mongo/db/index/index_access_method.cpp,+,"LOG(1) << ""Ignoring indexing error for idempotency reasons: "" << redact(ex)",584,download/mongodb_mongo323.cpp
17c37d0e626a61aeae8f4f149da98df2496740fa,"SERVER-26202 Relax index constraints in oplog application

This reverts commit d23e79eb9e69bd746416d9f674dfaee59457c887.",src/mongo/db/index_builder.cpp,+,"LOG(1) << ""Ignoring indexing error: "" << redact(status);",169,download/mongodb_mongo324.cpp
17c37d0e626a61aeae8f4f149da98df2496740fa,"SERVER-26202 Relax index constraints in oplog application

This reverts commit d23e79eb9e69bd746416d9f674dfaee59457c887.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,return !canAcceptWritesFor(ns);,1908,download/mongodb_mongo325.cpp
17c37d0e626a61aeae8f4f149da98df2496740fa,"SERVER-26202 Relax index constraints in oplog application

This reverts commit d23e79eb9e69bd746416d9f674dfaee59457c887.",src/mongo/db/repl/replication_coordinator_mock.cpp,+,return !canAcceptWritesFor(ns);,148,download/mongodb_mongo326.cpp
17c37d0e626a61aeae8f4f149da98df2496740fa,"SERVER-26202 Relax index constraints in oplog application

This reverts commit d23e79eb9e69bd746416d9f674dfaee59457c887.",src/mongo/db/repl/replication_coordinator_mock.cpp,+,void ReplicationCoordinatorMock::alwaysAllowWrites(bool allowWrites) {,469,download/mongodb_mongo326.cpp
17c37d0e626a61aeae8f4f149da98df2496740fa,"SERVER-26202 Relax index constraints in oplog application

This reverts commit d23e79eb9e69bd746416d9f674dfaee59457c887.",src/mongo/s/config_server_test_fixture.cpp,+,replicationCoordinator()->alwaysAllowWrites(true);,104,download/mongodb_mongo327.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/frontend/Parser.cpp,+,return ts.reportError(JSMSG_TOO_MANY_LOCALS);,528,download/mongodb_mongo328.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/gc/Marking.cpp,+,MOZ_ASSERT(!rt->isHeapCollecting());,2650,download/mongodb_mongo329.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/gc/Nursery.cpp,+,"static_assert(sizeof(SweepAction) % CellSize == 0,",739,download/mongodb_mongo330.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/gc/Nursery.cpp,+,MOZ_ASSERT(!runtime()->mainThread.suppressGC);,741,download/mongodb_mongo330.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jit/BaselineBailouts.cpp,+,MOZ_ASSERT(blFrame->numValueSlots() >= script->nfixed());,935,download/mongodb_mongo331.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jit/BaselineBailouts.cpp,+,MOZ_ASSERT(blFrame->numValueSlots() <= script->nslots());,936,download/mongodb_mongo331.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jit/BaselineBailouts.cpp,+,"if (!builder.writeValue(*blFrame->valueSlot(i), ""ArgVal""))",1271,download/mongodb_mongo331.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jit/Recover.cpp,+,MOZ_ASSERT(Mode(uint8_t(mode_)) == mode_);,409,download/mongodb_mongo332.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jit/Recover.cpp,+,writer.writeByte(uint8_t(mode_));,410,download/mongodb_mongo332.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jit/Recover.cpp,+,MOZ_ASSERT(MMul::Mode(mode_) == MMul::Integer);,442,download/mongodb_mongo332.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jit/ValueNumbering.cpp,+,"MOZ_ASSERT(pred->numSuccessors() == 1,",1111,download/mongodb_mongo333.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jit/ValueNumbering.cpp,+,"MOZ_ASSERT(pred != graph_.entryBlock(),",1113,download/mongodb_mongo333.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jit/ValueNumbering.cpp,+,"MOZ_ASSERT(pred != graph_.osrBlock(),",1115,download/mongodb_mongo333.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jsapi.cpp,+,MOZ_ASSERT(linebuf);,5787,download/mongodb_mongo334.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jsapi.cpp,+,MOZ_ASSERT(tokenOffset <= linebufLength);,5788,download/mongodb_mongo334.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jsapi.cpp,+,MOZ_ASSERT(linebuf[linebufLength] == '\0');,5789,download/mongodb_mongo334.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jsscript.cpp,+,"releaseAssertSameCompartment(cx, source);",1711,download/mongodb_mongo335.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/jsweakmap.cpp,+,MOZ_ASSERT(CurrentThreadIsGCSweeping());,35,download/mongodb_mongo336.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/vm/ArrayBufferObject.cpp,+,"assertSameCompartment(cx, buffer);",515,download/mongodb_mongo337.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/vm/ArrayBufferObject.cpp,+,"assertSameCompartment(cx, buffer);",937,download/mongodb_mongo337.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/vm/HelperThreads.cpp,+,"releaseAssertSameCompartment(cx, script);",1053,download/mongodb_mongo338.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/vm/RegExpObject.cpp,+,MOZ_ASSERT(regexp->lookupPure(cx->names().lastIndex)->slot() ==,60,download/mongodb_mongo339.cpp
bb78a26fcdca87e808cab52b6daa91be581bcbbc,SERVER-26902 Update to Mozilla Javascript ESR 45.4.0,src/third_party/mozjs-45/extract/js/src/vm/UnboxedObject.cpp,+,MOZ_ASSERT(!layout);,1996,download/mongodb_mongo340.cpp
10c5d764eec26b00947ae8e18cfddc5f8b3af629,SERVER-26885 Take collection X lock to enter the migration critical section,src/mongo/db/s/migration_chunk_cloner_source_legacy.cpp,+,"log() << ""moveChunk data transfer progress: "" << redact(res) << "" mem used: "" << _memoryUsed",275,download/mongodb_mongo341.cpp
f5c613f11f170cadd4b698d108b3c7b636913568,SERVER-25145 Add jstest to ensure that we can no longer trigger double-rollback.,src/mongo/db/repl/rs_rollback.cpp,+,"log() << ""rollback - rollbackHangBeforeFinish fail point """,905,download/mongodb_mongo342.cpp
ac465d21d85dfde7d55764cb714d8e235c22383f,"SERVER-26910 lock around fork() in shell launcher

The shell process management functions fork()/exec() in a multi-threaded
program without sufficient guards to avoid leaking fds into children.
This causes deadlocks around the program registry (as we rely on file
descriptor closure to break us out of dedicated child threads which read
child output).

The fix is to use a global lock to guard us from before the call to
pipe() until after we close write side of the pipe in the parent.",src/mongo/shell/shell_utils_launcher.cpp,+,"error() << ""failed to create pipe: "" << ewd;",402,download/mongodb_mongo343.cpp
ac465d21d85dfde7d55764cb714d8e235c22383f,"SERVER-26910 lock around fork() in shell launcher

The shell process management functions fork()/exec() in a multi-threaded
program without sufficient guards to avoid leaking fds into children.
This causes deadlocks around the program registry (as we rely on file
descriptor closure to break us out of dedicated child threads which read
child output).

The fix is to use a global lock to guard us from before the call to
pipe() until after we close write side of the pipe in the parent.",src/mongo/shell/shell_utils_launcher.cpp,+,fassertFailed(16701);,403,download/mongodb_mongo343.cpp
ac465d21d85dfde7d55764cb714d8e235c22383f,"SERVER-26910 lock around fork() in shell launcher

The shell process management functions fork()/exec() in a multi-threaded
program without sufficient guards to avoid leaking fds into children.
This causes deadlocks around the program registry (as we rely on file
descriptor closure to break us out of dedicated child threads which read
child output).

The fix is to use a global lock to guard us from before the call to
pipe() until after we close write side of the pipe in the parent.",src/mongo/shell/shell_utils_launcher.cpp,+,"error() << ""failed to set FD_CLOEXEC on pipe end 0: "" << ewd;",425,download/mongodb_mongo343.cpp
ac465d21d85dfde7d55764cb714d8e235c22383f,"SERVER-26910 lock around fork() in shell launcher

The shell process management functions fork()/exec() in a multi-threaded
program without sufficient guards to avoid leaking fds into children.
This causes deadlocks around the program registry (as we rely on file
descriptor closure to break us out of dedicated child threads which read
child output).

The fix is to use a global lock to guard us from before the call to
pipe() until after we close write side of the pipe in the parent.",src/mongo/shell/shell_utils_launcher.cpp,+,fassertFailed(40308);,426,download/mongodb_mongo343.cpp
ac465d21d85dfde7d55764cb714d8e235c22383f,"SERVER-26910 lock around fork() in shell launcher

The shell process management functions fork()/exec() in a multi-threaded
program without sufficient guards to avoid leaking fds into children.
This causes deadlocks around the program registry (as we rely on file
descriptor closure to break us out of dedicated child threads which read
child output).

The fix is to use a global lock to guard us from before the call to
pipe() until after we close write side of the pipe in the parent.",src/mongo/shell/shell_utils_launcher.cpp,+,"error() << ""failed to set FD_CLOEXEC on pipe end 1: "" << ewd;",431,download/mongodb_mongo343.cpp
ac465d21d85dfde7d55764cb714d8e235c22383f,"SERVER-26910 lock around fork() in shell launcher

The shell process management functions fork()/exec() in a multi-threaded
program without sufficient guards to avoid leaking fds into children.
This causes deadlocks around the program registry (as we rely on file
descriptor closure to break us out of dedicated child threads which read
child output).

The fix is to use a global lock to guard us from before the call to
pipe() until after we close write side of the pipe in the parent.",src/mongo/shell/shell_utils_launcher.cpp,+,fassertFailed(40317);,432,download/mongodb_mongo343.cpp
ac465d21d85dfde7d55764cb714d8e235c22383f,"SERVER-26910 lock around fork() in shell launcher

The shell process management functions fork()/exec() in a multi-threaded
program without sufficient guards to avoid leaking fds into children.
This causes deadlocks around the program registry (as we rely on file
descriptor closure to break us out of dedicated child threads which read
child output).

The fix is to use a global lock to guard us from before the call to
pipe() until after we close write side of the pipe in the parent.",src/mongo/shell/shell_utils_launcher.cpp,+,"uasserted(14042, ss.str());",636,download/mongodb_mongo343.cpp
b20282c5fec7cdedc9ba0d1aaf8439bfcd226753,SERVER-25318 limit total memory consumed by bulk simultaneous index builds,src/mongo/db/catalog/index_create.cpp,+,"log() << ""\t building index using bulk method; build may temporarily use up to """,254,download/mongodb_mongo344.cpp
d23e79eb9e69bd746416d9f674dfaee59457c887,"Revert ""SERVER-26202 Relax index constraints in oplog application""

This reverts commit f00448255bbb24c07e2f55e7e229f19e316350a6.",src/mongo/db/index/index_access_method.cpp,+,const auto canAcceptWritesForNs = repl::ReplicationCoordinator::get(txn)->canAcceptWritesFor(,122,download/mongodb_mongo345.cpp
0ac04999faae1d2fc0e10972aaf21082a2e48c8f,SERVER-26674 transport::Session objects should be shared_ptr managed,src/mongo/transport/service_entry_point_test_suite.cpp,+,"Ticket ServiceEntryPointTestSuite::MockTLHarness::_sinkThenErrorOnWait(const SessionHandle& s,",211,download/mongodb_mongo346.cpp
0ac04999faae1d2fc0e10972aaf21082a2e48c8f,SERVER-26674 transport::Session objects should be shared_ptr managed,src/mongo/transport/service_entry_point_utils.cpp,+,"log() << ""end connection "" << ctx->session->remote() << "" ("" << conns << word",96,download/mongodb_mongo347.cpp
0ac04999faae1d2fc0e10972aaf21082a2e48c8f,SERVER-26674 transport::Session objects should be shared_ptr managed,src/mongo/transport/service_entry_point_utils.cpp,+,"log() << ""failed to create service entry worker thread for "" << ctx->session->remote();",154,download/mongodb_mongo347.cpp
f00448255bbb24c07e2f55e7e229f19e316350a6,SERVER-26202 Relax index constraints in oplog application,src/mongo/db/index/index_access_method.cpp,+,"LOG(1) << ""Ignoring indexing error for idempotency reasons: "" << redact(ex)",582,download/mongodb_mongo348.cpp
f00448255bbb24c07e2f55e7e229f19e316350a6,SERVER-26202 Relax index constraints in oplog application,src/mongo/db/index_builder.cpp,+,"LOG(1) << ""Ignoring indexing error: "" << redact(status);",169,download/mongodb_mongo349.cpp
f00448255bbb24c07e2f55e7e229f19e316350a6,SERVER-26202 Relax index constraints in oplog application,src/mongo/db/repl/replication_coordinator_impl.cpp,+,return !canAcceptWritesFor(ns);,1908,download/mongodb_mongo350.cpp
f00448255bbb24c07e2f55e7e229f19e316350a6,SERVER-26202 Relax index constraints in oplog application,src/mongo/db/repl/replication_coordinator_mock.cpp,+,return !canAcceptWritesFor(ns);,148,download/mongodb_mongo351.cpp
f00448255bbb24c07e2f55e7e229f19e316350a6,SERVER-26202 Relax index constraints in oplog application,src/mongo/db/repl/replication_coordinator_mock.cpp,+,void ReplicationCoordinatorMock::alwaysAllowWrites(bool allowWrites) {,469,download/mongodb_mongo351.cpp
f00448255bbb24c07e2f55e7e229f19e316350a6,SERVER-26202 Relax index constraints in oplog application,src/mongo/s/config_server_test_fixture.cpp,+,replicationCoordinator()->alwaysAllowWrites(true);,104,download/mongodb_mongo352.cpp
f94a71efa246401defa7fd1c48d9c20e1e652dd9,SERVER-26898 Use ScopedTransaction at the migration donor,src/mongo/db/s/migration_chunk_cloner_source_legacy_commands.cpp,+,"uassert(ErrorCodes::NamespaceNotFound,",70,download/mongodb_mongo353.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Initial sync attempt finishing up, status: "" << _initialSyncState->status;",624,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""_oplogFetcher is active (_anyActiveHandles_inlock): """,931,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""_initialSyncState::dbsCloner is active (_anyActiveHandles_inlock): """,939,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""_applier is active (_anyActiveHandles_inlock): "" << _applier->toString();",946,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""_reporter is active (_anyActiveHandles_inlock): "" << _reporter->toString();",957,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""DataReplicator::_anyActiveHandles_inlock returned false as nothing is active."";",963,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Canceling any outstanding work."";",970,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Calling shutdown on _oplogFetcher, exec: "" << _exec->getDiagnosticString()",972,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Calling cancel on _applier."";",985,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Calling shutdown on _reporter."";",990,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Shutting down but no valid _onShutdown event to signal."";",1022,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""_doNextActions_InitialSync_inlock called."";",1041,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""_initialSyncState->status: "" << _initialSyncState->status;",1046,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Signaling finishEvent because of an error during initial sync."";",1053,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Error scheduling fetcher '"" << scheduleStatus << ""'."";",1125,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Error scheduling apply batch '"" << scheduleStatus << ""'."";",1149,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to apply batch due to "" << redact(status) << ""."";",1241,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Signaling finishEvent because fetching missing document couldn't get """,1291,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << "" calling _doNextActions from callback of _scheduleDoNextActions"";",1317,download/mongodb_mongo354.cpp
5ecb92a02cef012649f67606a12a7956aebba65f,SERVER-25662: rework DR shutdown and finishing initial sync,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Blacklisting "" << oldSyncSource << "" due to fetcher error: '""",1639,download/mongodb_mongo354.cpp
3c5f3e81edb5a49db5e66b9cb549e6c0ae58ca47,SERVER-26270 Initialize windows stacktraces at startup,src/mongo/util/stacktrace_windows.cpp,+,"error() << ""Stack trace initialization failed, SymInitialize failed with error """,96,download/mongodb_mongo355.cpp
3c5f3e81edb5a49db5e66b9cb549e6c0ae58ca47,SERVER-26270 Initialize windows stacktraces at startup,src/mongo/util/stacktrace_windows.cpp,+,"error() << ""Stack trace failed, symbol handler returned an invalid handle."";",258,download/mongodb_mongo355.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/exec/collection_scan.cpp,+,if (forward && !_params.tailable && _params.collection->ns().isOplog()) {,97,download/mongodb_mongo356.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/exec/collection_scan.cpp,+,_params.collection->getRecordStore()->waitForAllEarlierOplogWritesToBeVisible(,106,download/mongodb_mongo356.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/devnull/devnull_kv_engine.cpp,+,void waitForAllEarlierOplogWritesToBeVisible(OperationContext* txn) const override {},171,download/mongodb_mongo357.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/record_store_test_capped_visibility.cpp,+,"ASSERT_ID_EQ(rs->getCursor(longLivedOp.get(), false)->next(), lowestHiddenId);",77,download/mongodb_mongo358.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/record_store_test_capped_visibility.cpp,+,"ASSERT_ID_EQ(rs->getCursor(txn.get(), false)->next(), otherId);",93,download/mongodb_mongo358.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/record_store_test_capped_visibility.cpp,+,"ASSERT_ID_EQ(rs->getCursor(txn.get(), false)->next(), otherId);",99,download/mongodb_mongo358.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/record_store_test_capped_visibility.cpp,+,"ASSERT_ID_EQ(rs->getCursor(longLivedOp.get(), false)->next(), lowestHiddenId);",106,download/mongodb_mongo358.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/record_store_test_capped_visibility.cpp,+,ASSERT(!rs->getCursor(longLivedOp.get())->seekExact(otherId));,108,download/mongodb_mongo358.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/record_store_test_capped_visibility.cpp,+,"ASSERT_ID_EQ(rs->getCursor(longLivedOp.get(), false)->next(), lowestHiddenId);",146,download/mongodb_mongo358.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/record_store_test_capped_visibility.cpp,+,"ASSERT_ID_EQ(rs->getCursor(txn.get(), false)->next(), otherId);",165,download/mongodb_mongo358.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/record_store_test_capped_visibility.cpp,+,"ASSERT_ID_EQ(rs->getCursor(txn.get(), false)->next(), otherId);",171,download/mongodb_mongo358.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/record_store_test_capped_visibility.cpp,+,"ASSERT_ID_EQ(rs->getCursor(longLivedOp.get(), false)->next(), lowestHiddenId);",178,download/mongodb_mongo358.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/record_store_test_capped_visibility.cpp,+,ASSERT(!rs->getCursor(longLivedOp.get())->seekExact(otherId));,180,download/mongodb_mongo358.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/wiredtiger/wiredtiger_record_store.cpp,+,throw WriteConflictException();,1473,download/mongodb_mongo359.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/wiredtiger/wiredtiger_record_store.cpp,+,_oplogSetStartHack(wru);,1475,download/mongodb_mongo359.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/wiredtiger/wiredtiger_record_store.cpp,+,void WiredTigerRecordStore::_oplogJournalThreadLoop(WiredTigerSessionCache* sessionCache) try {,1701,download/mongodb_mongo359.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/wiredtiger/wiredtiger_record_store.cpp,+,void WiredTigerRecordStore::waitForAllEarlierOplogWritesToBeVisible(OperationContext* txn) const {,1740,download/mongodb_mongo359.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/wiredtiger/wiredtiger_record_store.cpp,+,invariant(txn->lockState()->isNoop() || !txn->lockState()->inAWriteUnitOfWork());,1741,download/mongodb_mongo359.cpp
8a2f2fc1883f5deb1b23915cd7a47686a623ba87,SERVER-26685 Tie oplog visibility to durability,src/mongo/db/storage/wiredtiger/wiredtiger_record_store.cpp,+,uassertStatusOK(,1900,download/mongodb_mongo359.cpp
1c64fe009f52c712a03b8934114c7b5c92b2f139,SERVER-26883 Skip sharding zone if no shards are assigned to it,src/mongo/db/s/balancer/balancer_policy.cpp,+,"log() << ""No available shards to take chunks for zone ["" << tag << ""]"";",481,download/mongodb_mongo360.cpp
1c64fe009f52c712a03b8934114c7b5c92b2f139,SERVER-26883 Skip sharding zone if no shards are assigned to it,src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""Starting chunk migration "" << redact(_args.toString())",95,download/mongodb_mongo361.cpp
1c64fe009f52c712a03b8934114c7b5c92b2f139,SERVER-26883 Skip sharding zone if no shards are assigned to it,src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""Migration successfully entered critical section"";",256,download/mongodb_mongo361.cpp
1c64fe009f52c712a03b8934114c7b5c92b2f139,SERVER-26883 Skip sharding zone if no shards are assigned to it,src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""Moving last chunk for the collection out"";",304,download/mongodb_mongo361.cpp
1c64fe009f52c712a03b8934114c7b5c92b2f139,SERVER-26883 Skip sharding zone if no shards are assigned to it,src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""Error occurred while committing the migration. Performing a majority write """,343,download/mongodb_mongo361.cpp
1c64fe009f52c712a03b8934114c7b5c92b2f139,SERVER-26883 Skip sharding zone if no shards are assigned to it,src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""Migration succeeded and updated collection version to """,402,download/mongodb_mongo361.cpp
1c64fe009f52c712a03b8934114c7b5c92b2f139,SERVER-26883 Skip sharding zone if no shards are assigned to it,src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""Failed to refresh metadata after a failed commit attempt. Metadata was cleared """,411,download/mongodb_mongo361.cpp
d16d537fe262cc5f2e18b2fbe413ba80515e8c36,SERVER-25145 OplogReader::connectToSyncSource selects sync sources based on required optime if given,src/mongo/db/repl/oplogreader.cpp,+,"const auto opTime = fassertStatusOK(40351, OpTime::parseFromOplogEntry(doc));",136,download/mongodb_mongo362.cpp
053a2dbc9c503bf55ba52bc3c937bc138cc67b8a,SERVER-25145 SyncSourceResolver selects sync sources based on required optime if given,src/mongo/db/repl/sync_source_resolver.cpp,+,"uassert(ErrorCodes::BadValue,",71,download/mongodb_mongo363.cpp
053a2dbc9c503bf55ba52bc3c937bc138cc67b8a,SERVER-25145 SyncSourceResolver selects sync sources based on required optime if given,src/mongo/db/repl/sync_source_resolver.cpp,+,const OplogEntry oplogEntry(queryResponse.documents.front());,317,download/mongodb_mongo363.cpp
053a2dbc9c503bf55ba52bc3c937bc138cc67b8a,SERVER-25145 SyncSourceResolver selects sync sources based on required optime if given,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting "" << candidate << "" due to required optime fetcher error: '""",359,download/mongodb_mongo363.cpp
cbb4f8ef9028461b682bd4aea5097a95f8cfe631,SERVER-25145 OplogReader::connectToSyncSource selects sync sources based on min valid if given,src/mongo/db/repl/oplogreader.cpp,+,"const auto opTime = fassertStatusOK(40350, OpTime::parseFromOplogEntry(doc));",136,download/mongodb_mongo364.cpp
f0ada5e29eb5218c257897bfd1a8fb1e36e06733,"SERVER-25665 Make splitChunk and moveChunk commands use 'chunkVersion'

This change makes the collection metadata on the shard also include the
chunk version and makes the splitChunk and moveChunk commands use it when
checking for consistency.",src/mongo/db/s/migration_source_manager.cpp,+,"uasserted(chunkValidateStatus.code(),",170,download/mongodb_mongo365.cpp
f0ada5e29eb5218c257897bfd1a8fb1e36e06733,"SERVER-25665 Make splitChunk and moveChunk commands use 'chunkVersion'

This change makes the collection metadata on the shard also include the
chunk version and makes the splitChunk and moveChunk commands use it when
checking for consistency.",src/mongo/db/s/split_chunk_command.cpp,+,auto chunkRange = uassertStatusOK(ChunkRange::fromBSON(cmdObj));,206,download/mongodb_mongo366.cpp
f0ada5e29eb5218c257897bfd1a8fb1e36e06733,"SERVER-25665 Make splitChunk and moveChunk commands use 'chunkVersion'

This change makes the collection metadata on the shard also include the
chunk version and makes the splitChunk and moveChunk commands use it when
checking for consistency.",src/mongo/db/s/split_chunk_command.cpp,+,uassertStatusOK(statusWithChunkVersion);,216,download/mongodb_mongo366.cpp
f0ada5e29eb5218c257897bfd1a8fb1e36e06733,"SERVER-25665 Make splitChunk and moveChunk commands use 'chunkVersion'

This change makes the collection metadata on the shard also include the
chunk version and makes the splitChunk and moveChunk commands use it when
checking for consistency.",src/mongo/db/s/split_chunk_command.cpp,+,uassertStatusOK(collMetadata->checkChunkIsValid(chunkToMove));,346,download/mongodb_mongo366.cpp
fd16deb6dd3d08756f15c181facc707cb53f4e15,SERVER-6302 Fix multiple fsyncLock() invocation race condition,src/mongo/db/commands/fsync.cpp,+,"log() << ""mongod is locked and no writes are allowed. db.fsyncUnlock() to unlock"";",183,download/mongodb_mongo367.cpp
fd16deb6dd3d08756f15c181facc707cb53f4e15,SERVER-6302 Fix multiple fsyncLock() invocation race condition,src/mongo/db/commands/fsync.cpp,+,"log() << ""Lock count is "" << getLockCount();",184,download/mongodb_mongo367.cpp
fd16deb6dd3d08756f15c181facc707cb53f4e15,SERVER-6302 Fix multiple fsyncLock() invocation race condition,src/mongo/db/commands/fsync.cpp,+,"log() << ""fsyncUnlock completed. mongod is now unlocked and free to accept writes"";",308,download/mongodb_mongo367.cpp
fd16deb6dd3d08756f15c181facc707cb53f4e15,SERVER-6302 Fix multiple fsyncLock() invocation race condition,src/mongo/db/commands/fsync.cpp,+,"log() << ""fsyncUnlock completed. Lock count is now "" << lockCount;",310,download/mongodb_mongo367.cpp
fd16deb6dd3d08756f15c181facc707cb53f4e15,SERVER-6302 Fix multiple fsyncLock() invocation race condition,src/mongo/db/commands/fsync.cpp,+,"error() << ""fsyncUnlock called when not locked"";",324,download/mongodb_mongo367.cpp
fd16deb6dd3d08756f15c181facc707cb53f4e15,SERVER-6302 Fix multiple fsyncLock() invocation race condition,src/mongo/db/commands/fsync.cpp,+,"error() << ""error doing syncDataAndTruncateJournal: "" << e.what();",382,download/mongodb_mongo367.cpp
fd16deb6dd3d08756f15c181facc707cb53f4e15,SERVER-6302 Fix multiple fsyncLock() invocation race condition,src/mongo/db/commands/fsync.cpp,+,"error() << ""error doing flushAll: "" << e.what();",407,download/mongodb_mongo367.cpp
fd16deb6dd3d08756f15c181facc707cb53f4e15,SERVER-6302 Fix multiple fsyncLock() invocation race condition,src/mongo/db/commands/fsync.cpp,+,uassertStatusOK(storageEngine->beginBackup(&txn));,414,download/mongodb_mongo367.cpp
fd16deb6dd3d08756f15c181facc707cb53f4e15,SERVER-6302 Fix multiple fsyncLock() invocation race condition,src/mongo/db/commands/fsync.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(&txn, ""beginBackup"", ""global"");",416,download/mongodb_mongo367.cpp
fd16deb6dd3d08756f15c181facc707cb53f4e15,SERVER-6302 Fix multiple fsyncLock() invocation race condition,src/mongo/db/commands/fsync.cpp,+,"error() << ""storage engine unable to begin backup : "" << e.toString();",418,download/mongodb_mongo367.cpp
fd16deb6dd3d08756f15c181facc707cb53f4e15,SERVER-6302 Fix multiple fsyncLock() invocation race condition,src/mongo/db/commands/fsync.cpp,+,fassertFailed(40350);,440,download/mongodb_mongo367.cpp
c48d084454d5e192b651f7179fccab21a1e69f90,SERVER-23070 migrated bgsync to use SyncSourceResolver instead of ReplicationCoordinatorImpl::selectSyncSource,src/mongo/db/repl/bgsync.cpp,+,if (ErrorCodes::CallbackCanceled == status || ErrorCodes::isShutdownError(status.code())) {,305,download/mongodb_mongo368.cpp
c48d084454d5e192b651f7179fccab21a1e69f90,SERVER-23070 migrated bgsync to use SyncSourceResolver instead of ReplicationCoordinatorImpl::selectSyncSource,src/mongo/db/repl/bgsync.cpp,+,"fassertStatusOK(40349, status);",308,download/mongodb_mongo368.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,"const NamespaceString SyncSourceResolver::kLocalOplogNss(""local.oplog.rs"");",53,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,const Seconds SyncSourceResolver::kFetcherErrorBlacklistDuration(10);,55,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,const Seconds SyncSourceResolver::kOplogEmptyBlacklistDuration(10);,56,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,const Seconds SyncSourceResolver::kFirstOplogEntryEmptyBlacklistDuration(10);,57,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,const Seconds SyncSourceResolver::kFirstOplogEntryNullTimestampBlacklistDuration(10);,58,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,"uassert(ErrorCodes::BadValue, ""task executor cannot be null"", taskExecutor);",69,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,"uassert(ErrorCodes::BadValue, ""sync source selector cannot be null"", syncSourceSelector);",70,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,uassert(,71,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,"uassert(ErrorCodes::BadValue, ""callback function cannot be null"", onCompletion);",73,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,std::unique_ptr<Fetcher> SyncSourceResolver::_makeFirstOplogEntryFetcher(,157,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,"error() << ""Error scheduling fetcher to evaluate host as sync source, host:""",182,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting due to empty oplog on host "" << candidate << "" for """,193,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting due to empty first document from host "" << candidate << "" for """,203,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,const OplogEntry oplogEntry(firstObjFound);,209,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting due to null timestamp in first document from host "" << candidate",214,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,void SyncSourceResolver::_firstOplogEntryFetcherCallback(,223,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""Blacklisting "" << candidate << "" due to error: '"" << queryResult.getStatus()",243,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,"log() << ""We are too stale to use "" << candidate << "" as a sync source. """,264,download/mongodb_mongo369.cpp
938885a1796d8b7e42748a4cf68c77872d75db98,SERVER-23070 rewrote SyncSourceResolver to select sync source asynchronously,src/mongo/db/repl/sync_source_resolver.cpp,+,"_makeFirstOplogEntryFetcher(candidateResult.getValue(), earliestOpTimeSeen));",306,download/mongodb_mongo369.cpp
7715c5186e13959ac63fdfd4f9198113287a6985,SERVER-26649 don't use close to end read,src/mongo/shell/shell_utils_launcher.cpp,+,"error() << ""failed to close fd "" << fd << "": "" << ewd;",133,download/mongodb_mongo370.cpp
7715c5186e13959ac63fdfd4f9198113287a6985,SERVER-26649 don't use close to end read,src/mongo/shell/shell_utils_launcher.cpp,+,fassertFailed(40318);,134,download/mongodb_mongo370.cpp
7715c5186e13959ac63fdfd4f9198113287a6985,SERVER-26649 don't use close to end read,src/mongo/shell/shell_utils_launcher.cpp,+,"uassert(ErrorCodes::FailedToParse,",378,download/mongodb_mongo370.cpp
7715c5186e13959ac63fdfd4f9198113287a6985,SERVER-26649 don't use close to end read,src/mongo/shell/shell_utils_launcher.cpp,+,"uassert(ErrorCodes::BadValue,",383,download/mongodb_mongo370.cpp
7715c5186e13959ac63fdfd4f9198113287a6985,SERVER-26649 don't use close to end read,src/mongo/shell/shell_utils_launcher.cpp,+,fassertFailed(34363);,618,download/mongodb_mongo370.cpp
2142a7da82ced30ba3e7564d049e1f0021c909bb,SERVER-26797 protect upcast to StaleConfigException from DBException,src/mongo/db/s/migration_source_manager.cpp,+,"uassert(ErrorCodes::StaleEpoch,",133,download/mongodb_mongo371.cpp
e923952dd2c492ab19c34bfe094da6b855d0f99d,SERVER-26515 Create collection with v=2 index should include full index spec in oplog,src/mongo/db/catalog/database.cpp,+,fullIdIndexSpec = uassertStatusOK(ic->createIndexOnEmptyCollection(,599,download/mongodb_mongo372.cpp
e923952dd2c492ab19c34bfe094da6b855d0f99d,SERVER-26515 Create collection with v=2 index should include full index spec in oplog,src/mongo/db/commands/mr.cpp,+,Status status = incColl->getIndexCatalog(),428,download/mongodb_mongo373.cpp
e923952dd2c492ab19c34bfe094da6b855d0f99d,SERVER-26515 Create collection with v=2 index should include full index spec in oplog,src/mongo/db/commands/mr.cpp,+,"tempColl->getIndexCatalog()->createIndexOnEmptyCollection(_txn, *it).getStatus();",491,download/mongodb_mongo373.cpp
8ac6f69b0879df0e69b8d9929badb472772a3bca,SERVER-26764 Do not defer creation of _id index for replicated collections,src/mongo/db/cloner.cpp,+,uassertStatusOK(bsonExtractTypedField(,124,download/mongodb_mongo374.cpp
8ac6f69b0879df0e69b8d9929badb472772a3bca,SERVER-26764 Do not defer creation of _id index for replicated collections,src/mongo/db/cloner.cpp,+,uassertStatusOK(status);,271,download/mongodb_mongo374.cpp
8ac6f69b0879df0e69b8d9929badb472772a3bca,SERVER-26764 Do not defer creation of _id index for replicated collections,src/mongo/db/cloner.cpp,+,"Lock::DBLock dbWrite(txn->lockState(), dbname, MODE_X);",458,download/mongodb_mongo374.cpp
8ac6f69b0879df0e69b8d9929badb472772a3bca,SERVER-26764 Do not defer creation of _id index for replicated collections,src/mongo/db/cloner.cpp,+,"uassert(ErrorCodes::PrimarySteppedDown,",460,download/mongodb_mongo374.cpp
8ac6f69b0879df0e69b8d9929badb472772a3bca,SERVER-26764 Do not defer creation of _id index for replicated collections,src/mongo/db/cloner.cpp,+,!txn->writesAreReplicated() ||,462,download/mongodb_mongo374.cpp
8ac6f69b0879df0e69b8d9929badb472772a3bca,SERVER-26764 Do not defer creation of _id index for replicated collections,src/mongo/db/cloner.cpp,+,repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(nss));,463,download/mongodb_mongo374.cpp
8ac6f69b0879df0e69b8d9929badb472772a3bca,SERVER-26764 Do not defer creation of _id index for replicated collections,src/mongo/db/cloner.cpp,+,"LOG(2) << ""  really will clone: "" << params.collectionInfo;",702,download/mongodb_mongo374.cpp
8ac6f69b0879df0e69b8d9929badb472772a3bca,SERVER-26764 Do not defer creation of _id index for replicated collections,src/mongo/db/cloner.cpp,+,"log() << ""copying indexes for: "" << params.collectionInfo;",798,download/mongodb_mongo374.cpp
9f8b867c5001630bb6a9824a1c10741641ca93ed,SERVER-26790: validateElementInfo should verify OIDs can be skipped,src/mongo/bson/bson_validate.cpp,+,"return makeError(""invalid bson length"", idElem);",252,download/mongodb_mongo375.cpp
cd9e8e08276dee0d6232042a46d2b78799e33787,"SERVER-25665 Cleanup chunk metadata caching library dependencies

No functional changes. Removes unused includes and libraries and moves
cluster_write.cpp to be only part of the mongos commands since it is not
used elsewhere.",src/mongo/s/chunk.cpp,+,"LOG(1) << ""about to initiate autosplit: "" << *this << "" dataWritten: "" << chunkBytesWritten",361,download/mongodb_mongo376.cpp
4a6e21b8c747877f32362deafcdad603b49b9475,SERVER-26801 Disallow oplog reads when in STARTUP,src/mongo/db/repl/replication_coordinator_impl.cpp,+,ns.isOplog()) {,1850,download/mongodb_mongo377.cpp
53efde3280dd6a880987150777f5a26143df59e1,SERVER-25999 add list of error codes to Shard that can be used to determine whether remote command errors should be propogated further back to other servers,src/mongo/db/s/balancer/migration_manager.cpp,+,if (!Shard::shouldErrorBePropagated(commandStatus.code())) {,767,download/mongodb_mongo378.cpp
53efde3280dd6a880987150777f5a26143df59e1,SERVER-25999 add list of error codes to Shard that can be used to determine whether remote command errors should be propogated further back to other servers,src/mongo/s/client/shard.cpp,+,bool Shard::shouldErrorBePropagated(ErrorCodes::Error code) {,96,download/mongodb_mongo379.cpp
bb8640fbfaa195a0b6931a60dc72ccfa88376331,SERVER-7306 Mongod as windows service should not claim to be 'started' until it is ready to accept connections,src/mongo/db/db.cpp,+,"log() << ""Service running"";",820,download/mongodb_mongo380.cpp
bb8640fbfaa195a0b6931a60dc72ccfa88376331,SERVER-7306 Mongod as windows service should not claim to be 'started' until it is ready to accept connections,src/mongo/s/server.cpp,+,"log() << ""Service running"";",331,download/mongodb_mongo381.cpp
c430494e34cc459d1b17ddcdda79190462b79ee9,SERVER-26811 fix setFeatureCompatibilityVersion to raise a user assertion if a stepdown occurred,src/mongo/db/commands/feature_compatibility_version.cpp,+,"uassert(ErrorCodes::NotMaster,",215,download/mongodb_mongo382.cpp
c430494e34cc459d1b17ddcdda79190462b79ee9,SERVER-26811 fix setFeatureCompatibilityVersion to raise a user assertion if a stepdown occurred,src/mongo/db/commands/feature_compatibility_version.cpp,+,->canAcceptWritesFor(nss));,220,download/mongodb_mongo382.cpp
66d95ea28c4eb6e239c8d94339b0587cf8f5159f,SERVER-26776 DataReplicator should clear sync source after failed initial sync attempt,src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""Resetting sync source so a new one can be chosen for this initial sync attempt."";",729,download/mongodb_mongo383.cpp
66d95ea28c4eb6e239c8d94339b0587cf8f5159f,SERVER-26776 DataReplicator should clear sync source after failed initial sync attempt,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Error getting sync source: '"" << attemptErrorStatus.toString()",757,download/mongodb_mongo383.cpp
e8cbb32624663fdf59f6df752594e5295c55247c,"SERVER-26777 Improve logging around chunk refresh

Unifies the logging messages between mongos and mongod and adds timing
information.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader loading chunks for "" << nss.ns() << "" based on: """,682,download/mongodb_mongo384.cpp
e8cbb32624663fdf59f6df752594e5295c55247c,"SERVER-26777 Improve logging around chunk refresh

Unifies the logging messages between mongos and mongod and adds timing
information.",src/mongo/db/s/sharding_state.cpp,+,"grid.catalogClient(txn),",695,download/mongodb_mongo384.cpp
e8cbb32624663fdf59f6df752594e5295c55247c,"SERVER-26777 Improve logging around chunk refresh

Unifies the logging messages between mongos and mongod and adds timing
information.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and found version """,730,download/mongodb_mongo384.cpp
e8cbb32624663fdf59f6df752594e5295c55247c,"SERVER-26777 Improve logging around chunk refresh

Unifies the logging messages between mongos and mongod and adds timing
information.",src/mongo/db/s/sharding_state.cpp,+,"log() << ""MetadataLoader took "" << t.millis() << "" ms and did not find the namespace"";",741,download/mongodb_mongo384.cpp
e8cbb32624663fdf59f6df752594e5295c55247c,"SERVER-26777 Improve logging around chunk refresh

Unifies the logging messages between mongos and mongod and adds timing
information.",src/mongo/s/chunk_manager.cpp,+,"log() << ""ChunkManager loading chunks for "" << _ns << "" sequenceNumber: "" << _sequenceNumber",225,download/mongodb_mongo385.cpp
e8cbb32624663fdf59f6df752594e5295c55247c,"SERVER-26777 Improve logging around chunk refresh

Unifies the logging messages between mongos and mongod and adds timing
information.",src/mongo/s/chunk_manager.cpp,+,"log() << ""ChunkManager load took "" << t.millis() << "" ms and found version """,240,download/mongodb_mongo385.cpp
604cf316385ddb9e6bc0361d0bb300024b4bc98c,SERVER-26418 persist balancer settings into migration document,src/mongo/db/s/balancer/migration_manager.cpp,+,"ScopedMigrationRequest::writeMigration(txn, migrateInfo, waitForDelete);",160,download/mongodb_mongo386.cpp
604cf316385ddb9e6bc0361d0bb300024b4bc98c,SERVER-26418 persist balancer settings into migration document,src/mongo/db/s/balancer/migration_manager.cpp,+,"ScopedMigrationRequest::writeMigration(txn, migrateInfo, waitForDelete);",204,download/mongodb_mongo386.cpp
604cf316385ddb9e6bc0361d0bb300024b4bc98c,SERVER-26418 persist balancer settings into migration document,src/mongo/db/s/balancer/migration_manager.cpp,+,"ScopedMigrationRequest::writeMigration(txn, migrateInfo, waitForDelete);",242,download/mongodb_mongo386.cpp
604cf316385ddb9e6bc0361d0bb300024b4bc98c,SERVER-26418 persist balancer settings into migration document,src/mongo/db/s/balancer/migration_manager.cpp,+,->tryLockWithLocalWriteConcern(,344,download/mongodb_mongo386.cpp
868fd0cd01299a7da8e2b11209ee5414c9e02360,SERVER-26975 log term changes in TopologyCoordinatorImpl,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(1) << ""Updating term from "" << _term << "" to "" << term;",2334,download/mongodb_mongo387.cpp
67d5bd9d166f3d10118b439707014e537cba47ab,"SERVER-25665 Cleanup chunk cache refresh

No functional changes, just getting rid of some unused code and tightening
assertions.",src/mongo/db/s/sharding_state.cpp,+,"grid.catalogClient(txn),",691,download/mongodb_mongo388.cpp
cc75cf210c63a0c96c74e01f3919938ea64a0317,SERVER-26770 Do not move chunks out of shards with below-average utilization,src/mongo/db/s/balancer/balancer_policy.cpp,+,"LOG(1) << ""ideal      : "" << idealNumberOfChunksPerShardForTag;",510,download/mongodb_mongo389.cpp
f3f67b02ce9f9b4cdd68dd5d1e735b7161968841,SERVER-26787 move logging for removing a ReplicaSetMonitor to ReplicaSetMonitorManager::removeMonitor(),src/mongo/client/replica_set_monitor_manager.cpp,+,"log() << ""Removed ReplicaSetMonitor for replica set "" << setName;",128,download/mongodb_mongo390.cpp
67994f33a88f4aa70283e155c75f48ce997ccdc3,SERVER-26572 move fetchCount to DataReplicator,src/mongo/db/repl/sync_tail.cpp,+,": _networkQueue(q), _applyFunc(func), _writerPool(std::move(writerPool)) {}",272,download/mongodb_mongo391.cpp
67994f33a88f4aa70283e155c75f48ce997ccdc3,SERVER-26572 move fetchCount to DataReplicator,src/mongo/db/repl/sync_tail.cpp,+,"fassertNoTrace(15915, multiInitialSyncApply_noAbort(txn.get(), ops, st, &fetchCount));",1165,download/mongodb_mongo391.cpp
11b7bdd825b610dec627ceaf5ef5afaa374e559e,SERVER-26374 add namespace logging in MigrationSourceManager,src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""Starting chunk migration for "" << _args.toString()",97,download/mongodb_mongo392.cpp
11b7bdd825b610dec627ceaf5ef5afaa374e559e,SERVER-26374 add namespace logging in MigrationSourceManager,src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""Successfully entered critical section for "" << _args.toString();",265,download/mongodb_mongo392.cpp
11b7bdd825b610dec627ceaf5ef5afaa374e559e,SERVER-26374 add namespace logging in MigrationSourceManager,src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""moveChunk moved last chunk out for collection '"" << getNss().ns() << ""'"";",314,download/mongodb_mongo392.cpp
11b7bdd825b610dec627ceaf5ef5afaa374e559e,SERVER-26374 add namespace logging in MigrationSourceManager,src/mongo/db/s/migration_source_manager.cpp,+,fassertStatusOK(,382,download/mongodb_mongo392.cpp
11b7bdd825b610dec627ceaf5ef5afaa374e559e,SERVER-26374 add namespace logging in MigrationSourceManager,src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""moveChunk for '"" << _args.toString() << ""' has updated collection version to '""",412,download/mongodb_mongo392.cpp
11b7bdd825b610dec627ceaf5ef5afaa374e559e,SERVER-26374 add namespace logging in MigrationSourceManager,src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""moveChunk failed to refresh metadata for '"" << _args.toString()",422,download/mongodb_mongo392.cpp
1e6fe6df6941e97c73db086e6ec7ebb24bc7dec9,SERVER-26425 perform dropDatabase in WriteConflictException retry loop,src/mongo/db/catalog/database.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(txn, ""dropDatabase"", db->name());",674,download/mongodb_mongo393.cpp
913a092022f98fc8eb5a035e515cc2cd9908443a,SERVER-26250 extend moveChunk command success to depend on migration document removal success,src/mongo/db/s/balancer/scoped_migration_request.cpp,+,Status status = grid.catalogClient(_txn)->removeConfigDocuments(,187,download/mongodb_mongo394.cpp
3389f25e111e62dc42eebf05dca5e052f3c96d79,SERVER-25654 Don't use int millis for elapsed time,src/mongo/db/ops/write_ops_exec.cpp,+,curOp->debug().executionTimeMicros = executionTimeMicros;,91,download/mongodb_mongo395.cpp
eae94d70dbb93fd69435c411e714e06944060975,"SERVER-26399 Improved ""Cannot select sync source"" messages to include the relevant optimes",src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source because it is too far behind.""",282,download/mongodb_mongo396.cpp
eae94d70dbb93fd69435c411e714e06944060975,"SERVER-26399 Improved ""Cannot select sync source"" messages to include the relevant optimes",src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(1) << ""Cannot select sync source equal to or behind our last fetched optime. """,307,download/mongodb_mongo396.cpp
f73b79d7604b7b6ebd095f729b37642509580a6c,SERVER-26429 Optimize IndexAccessMethod::findSingle to only call getKeys() if needed,src/mongo/db/index/index_access_method.cpp,+,"dassert(kv->key.woCompare(actualKey, /*order*/ BSONObj(), /*considerFieldNames*/ false) ==",274,download/mongodb_mongo397.cpp
064ed7fab88447bd5dd6bfc19dfef4dbf89d19f9,SERVER-26514 Create command should take idIndex option,src/mongo/db/commands/dbcommands.cpp,+,idIndexSpec = uassertStatusOK(index_key_validate::validateIndexSpec(,587,download/mongodb_mongo398.cpp
064ed7fab88447bd5dd6bfc19dfef4dbf89d19f9,SERVER-26514 Create command should take idIndex option,src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(index_key_validate::validateIdIndexSpec(idIndexSpec));,589,download/mongodb_mongo398.cpp
064ed7fab88447bd5dd6bfc19dfef4dbf89d19f9,SERVER-26514 Create command should take idIndex option,src/mongo/db/commands/dbcommands.cpp,+,idIndexSpec = uassertStatusOK(index_key_validate::validateIndexSpecCollation(,607,download/mongodb_mongo398.cpp
c0fe7490ed8482c5244a36196253883d3c50e7c7,SERVER-26683 Log reason for marking repl hosts as failed in the RSM,src/mongo/client/dbclient_rs.cpp,+,"uasserted(ErrorCodes::FailedToSatisfyReadPreference, message);",334,download/mongodb_mongo399.cpp
c0fe7490ed8482c5244a36196253883d3c50e7c7,SERVER-26683 Log reason for marking repl hosts as failed in the RSM,src/mongo/client/replica_set_monitor.cpp,+,"log() << ""Marking host "" << host << "" as failed"" << causedBy(redact(status));",895,download/mongodb_mongo400.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/dbclient.cpp,+,"MONGO_LOG_COMPONENT(1, logger::LogComponent::kReplication)",1435,download/mongodb_mongo401.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/dbclient_rs.cpp,+,"uasserted(ErrorCodes::FailedToSatisfyReadPreference,",323,download/mongodb_mongo402.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/dbclient_rs.cpp,+,LOG(1) << lastNodeStatus.reason() << endl;,463,download/mongodb_mongo402.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/dbclient_rs.cpp,+,LOG(1) << lastNodeErrMsg << endl;,552,download/mongodb_mongo402.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/dbclient_rs.cpp,+,LOG(1) << lastNodeErrMsg << endl;,605,download/mongodb_mongo402.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/dbclient_rs.cpp,+,"log() << ""got not master for: "" << _masterHost << endl;",631,download/mongodb_mongo402.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/dbclient_rs.cpp,+,"log() << ""slave no longer has secondary status: "" << _lastSlaveOkHost << endl;",659,download/mongodb_mongo402.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/dbclient_rs.cpp,+,LOG(1) << lastNodeErrMsg << endl;,791,download/mongodb_mongo402.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/dbclient_rs.cpp,+,log() << exceptionToStatus();,956,download/mongodb_mongo402.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/dbclient_rs.cpp,+,"LOG(1) << ""can't call replica set node "" << _lastSlaveOkHost << "": """,1003,download/mongodb_mongo402.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/replica_set_monitor.cpp,+,"log() << ""node "" << from << "" believes it is primary, but its election id of """,583,download/mongodb_mongo403.cpp
406e1f9e715617956283d32a021fbac7ac46a4cc,"Revert ""SERVER-26683 Log reason for marking repl hosts as failed in the RSM""

This reverts commit 80d6ca07522fce27f9559007791ebe4a1afe0866.",src/mongo/client/replica_set_monitor.cpp,+,"LOG(1) << ""Marking host "" << host << "" as failed"";",881,download/mongodb_mongo403.cpp
78418816ec74ff0b9f48cf4e59b2b7fde13bd919,SERVER-26683 Improve logging on catalog errors,src/mongo/db/s/balancer/balancer.cpp,+,"log() << ""Performing a split because migration "" << redact(requestIt->toString())",612,download/mongodb_mongo404.cpp
78418816ec74ff0b9f48cf4e59b2b7fde13bd919,SERVER-26683 Improve logging on catalog errors,src/mongo/db/s/balancer/balancer.cpp,+,"log() << ""Balancer move "" << redact(requestIt->toString()) << "" failed""",620,download/mongodb_mongo404.cpp
78418816ec74ff0b9f48cf4e59b2b7fde13bd919,SERVER-26683 Improve logging on catalog errors,src/mongo/s/catalog/sharding_catalog_client_impl.cpp,+,"log() << ""error starting removeShard: "" << name",575,download/mongodb_mongo405.cpp
80d6ca07522fce27f9559007791ebe4a1afe0866,SERVER-26683 Log reason for marking repl hosts as failed in the RSM,src/mongo/client/dbclient_rs.cpp,+,"uasserted(ErrorCodes::FailedToSatisfyReadPreference, message);",334,download/mongodb_mongo406.cpp
80d6ca07522fce27f9559007791ebe4a1afe0866,SERVER-26683 Log reason for marking repl hosts as failed in the RSM,src/mongo/client/replica_set_monitor.cpp,+,"log() << ""Marking host "" << host << "" as failed"" << causedBy(redact(status));",895,download/mongodb_mongo407.cpp
ab1ee41ecf1c96ae8b17a2b1da1c7ee9b8c58676,SERVER-26191 OplogBufferCollection supports batch reads from collection,src/mongo/db/repl/oplog_buffer_collection.cpp,+,"OplogBufferCollection::OplogBufferCollection(StorageInterface* storageInterface, Options options)",80,download/mongodb_mongo408.cpp
ab1ee41ecf1c96ae8b17a2b1da1c7ee9b8c58676,SERVER-26191 OplogBufferCollection supports batch reads from collection,src/mongo/db/repl/oplog_buffer_collection.cpp,+,": OplogBufferCollection(storageInterface, getDefaultNamespace(), std::move(options)) {}",81,download/mongodb_mongo408.cpp
ab1ee41ecf1c96ae8b17a2b1da1c7ee9b8c58676,SERVER-26191 OplogBufferCollection supports batch reads from collection,src/mongo/db/repl/oplog_buffer_collection.cpp,+,const auto docs = fassertStatusOK(,265,download/mongodb_mongo408.cpp
ab1ee41ecf1c96ae8b17a2b1da1c7ee9b8c58676,SERVER-26191 OplogBufferCollection supports batch reads from collection,src/mongo/db/repl/oplog_buffer_collection.cpp,+,return extractEmbeddedOplogDocument(doc).getOwned();,283,download/mongodb_mongo408.cpp
f50bc8e26d5720f396149286ebb31e8c3c51df4a,SERVER-26191 renamed _peekOneSide to _peek_inlock and changed it to read the oldest entry only.,src/mongo/db/repl/oplog_buffer_collection.cpp,+,"fassertStatusOK(40348,",212,download/mongodb_mongo409.cpp
f50bc8e26d5720f396149286ebb31e8c3c51df4a,SERVER-26191 renamed _peekOneSide to _peek_inlock and changed it to read the oldest entry only.,src/mongo/db/repl/oplog_buffer_collection.cpp,+,return extractEmbeddedOplogDocument(docs.front()).getOwned();,221,download/mongodb_mongo409.cpp
f50bc8e26d5720f396149286ebb31e8c3c51df4a,SERVER-26191 renamed _peekOneSide to _peek_inlock and changed it to read the oldest entry only.,src/mongo/db/repl/oplog_buffer_collection.cpp,+,return extractEmbeddedOplogDocument(docs.front()).getOwned();,262,download/mongodb_mongo409.cpp
73a5487793df760bc2fd1f5d02340716c41d217f,SERVER-26666 store key of last popped document,src/mongo/db/repl/oplog_buffer_collection.cpp,+,*value = extractEmbeddedOplogDocument(docFromCollection).getOwned();,232,download/mongodb_mongo410.cpp
73a5487793df760bc2fd1f5d02340716c41d217f,SERVER-26666 store key of last popped document,src/mongo/db/repl/oplog_buffer_collection.cpp,+,*value = extractEmbeddedOplogDocument(docs.front()).getOwned();,269,download/mongodb_mongo410.cpp
b649a9ac7caf8fdd43f8eb6bf783de6847b818d4,SERVER-25934 rename MongodTestFixture to ShardingMongodTestFixture,src/mongo/s/sharding_mongod_test_fixture.cpp,+,std::unique_ptr<DistLockCatalog> ShardingMongodTestFixture::makeDistLockCatalog(,215,download/mongodb_mongo411.cpp
b649a9ac7caf8fdd43f8eb6bf783de6847b818d4,SERVER-25934 rename MongodTestFixture to ShardingMongodTestFixture,src/mongo/s/sharding_mongod_test_fixture.cpp,+,std::unique_ptr<ShardingCatalogClient> ShardingMongodTestFixture::makeShardingCatalogClient(,226,download/mongodb_mongo411.cpp
b649a9ac7caf8fdd43f8eb6bf783de6847b818d4,SERVER-25934 rename MongodTestFixture to ShardingMongodTestFixture,src/mongo/s/sharding_mongod_test_fixture.cpp,+,std::unique_ptr<ShardingCatalogManager> ShardingMongodTestFixture::makeShardingCatalogManager(,231,download/mongodb_mongo411.cpp
b649a9ac7caf8fdd43f8eb6bf783de6847b818d4,SERVER-25934 rename MongodTestFixture to ShardingMongodTestFixture,src/mongo/s/sharding_mongod_test_fixture.cpp,+,std::unique_ptr<CatalogCache> ShardingMongodTestFixture::makeCatalogCache() {,236,download/mongodb_mongo411.cpp
b649a9ac7caf8fdd43f8eb6bf783de6847b818d4,SERVER-25934 rename MongodTestFixture to ShardingMongodTestFixture,src/mongo/s/sharding_mongod_test_fixture.cpp,+,ShardingCatalogClient* ShardingMongodTestFixture::catalogClient() const {,329,download/mongodb_mongo411.cpp
b649a9ac7caf8fdd43f8eb6bf783de6847b818d4,SERVER-25934 rename MongodTestFixture to ShardingMongodTestFixture,src/mongo/s/sharding_mongod_test_fixture.cpp,+,ShardingCatalogManager* ShardingMongodTestFixture::catalogManager() const {,334,download/mongodb_mongo411.cpp
b649a9ac7caf8fdd43f8eb6bf783de6847b818d4,SERVER-25934 rename MongodTestFixture to ShardingMongodTestFixture,src/mongo/s/sharding_mongod_test_fixture.cpp,+,CatalogCache* ShardingMongodTestFixture::catalogCache() const {,339,download/mongodb_mongo411.cpp
b649a9ac7caf8fdd43f8eb6bf783de6847b818d4,SERVER-25934 rename MongodTestFixture to ShardingMongodTestFixture,src/mongo/s/sharding_mongod_test_fixture.cpp,+,DistLockCatalog* ShardingMongodTestFixture::distLockCatalog() const {,387,download/mongodb_mongo411.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"BSONObj writeFile(const BSONObj& args, void* data) {",250,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,uassert(,253,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"40340, ""writeFile requires 2 arguments: writeFile(filePath, content)"", args.nFields() == 2);",254,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"uassert(40341,",259,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"""the first argument to writeFile() must be a string containing the path to the file"",",260,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"uassert(40342,",264,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"""the second argument to writeFile() must be a string to write to the file"",",265,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"uassert(40343,",273,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"""writeFile() can only write a file in a directory which already exists"",",274,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"uassert(40344,",276,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"""writeFile() can only write to a file which does not yet exist"",",277,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"uassert(40345,",279,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"uassert(40346,",284,download/mongodb_mongo412.cpp
0c41f08b3d906e98f3272e427a3e366a9b9754e2,SERVER-25549 re-enable read_only_sharded suite,src/mongo/shell/shell_utils_extended.cpp,+,"uassert(40347, str::stream() << ""failed to write to file "" << normalizedFilePath.string(), ofs);",290,download/mongodb_mongo412.cpp
129c1f22e71249e96f19717d315161f857e471ad,SERVER-26572 Reset stopTimestamp in DataReplicator when initial sync apply phase tries to fetch a remote document,src/mongo/db/repl/data_replicator.cpp,+,_scheduleLastOplogEntryFetcher_inlock(,862,download/mongodb_mongo413.cpp
129c1f22e71249e96f19717d315161f857e471ad,SERVER-26572 Reset stopTimestamp in DataReplicator when initial sync apply phase tries to fetch a remote document,src/mongo/db/repl/data_replicator.cpp,+,void DataReplicator::_scheduleLastOplogEntryFetcher_inlock(Fetcher::CallbackFn callback) {,866,download/mongodb_mongo413.cpp
129c1f22e71249e96f19717d315161f857e471ad,SERVER-26572 Reset stopTimestamp in DataReplicator when initial sync apply phase tries to fetch a remote document,src/mongo/db/repl/data_replicator.cpp,+,"_scheduleLastOplogEntryFetcher_inlock([this, lastApplied, numApplied](",1254,download/mongodb_mongo413.cpp
129c1f22e71249e96f19717d315161f857e471ad,SERVER-26572 Reset stopTimestamp in DataReplicator when initial sync apply phase tries to fetch a remote document,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to get new minValid from source "" << _syncSource << "" due to '""",1261,download/mongodb_mongo413.cpp
129c1f22e71249e96f19717d315161f857e471ad,SERVER-26572 Reset stopTimestamp in DataReplicator when initial sync apply phase tries to fetch a remote document,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Pushing back minValid from "" << _initialSyncState->stopTimestamp << "" to """,1273,download/mongodb_mongo413.cpp
129c1f22e71249e96f19717d315161f857e471ad,SERVER-26572 Reset stopTimestamp in DataReplicator when initial sync apply phase tries to fetch a remote document,src/mongo/db/repl/sync_tail.cpp,+,": _networkQueue(q), _applyFunc(func), _writerPool(std::move(writerPool)), _fetchCount(0) {}",272,download/mongodb_mongo414.cpp
1a940972e9e1ed78adfff6f31c2907a2c860d17c,SERVER-26513 listCollections output should include _id index spec as idIndex,src/mongo/db/commands/list_collections.cpp,+,auto idIndex = collection->getIndexCatalog()->findIdIndex(txn);,171,download/mongodb_mongo415.cpp
cc8e8a138b7116ddd2b6eff56da2f4219262e837,SERVER-26307 Differentiate between config and shard command errors in MigrationManager moveChunk commands,src/mongo/db/s/balancer/migration_manager.cpp,+,"bool isErrorDueToConfigStepdown(Status status, bool isStopping) {",128,download/mongodb_mongo416.cpp
cc8e8a138b7116ddd2b6eff56da2f4219262e837,SERVER-26307 Differentiate between config and shard command errors in MigrationManager moveChunk commands,src/mongo/db/s/balancer/migration_manager.cpp,+,"if (isErrorDueToConfigStepdown(remoteCommandResponse.status,",756,download/mongodb_mongo416.cpp
ac985ba419c74f20e287b0aff503cfed5d33e263,SERVER-26560 Properly handle or avoid making throwing calls into ASIO within NetworkInterfaceASIO,src/mongo/executor/async_timer_asio.cpp,+,"log() << ""Failed to cancel timer: "" << ec.message();",49,download/mongodb_mongo417.cpp
ac985ba419c74f20e287b0aff503cfed5d33e263,SERVER-26560 Properly handle or avoid making throwing calls into ASIO within NetworkInterfaceASIO,src/mongo/executor/connection_pool.cpp,+,fassertFailed(40336);,519,download/mongodb_mongo418.cpp
ac985ba419c74f20e287b0aff503cfed5d33e263,SERVER-26560 Properly handle or avoid making throwing calls into ASIO within NetworkInterfaceASIO,src/mongo/executor/connection_pool_asio.cpp,+,fassertFailed(40333);,71,download/mongodb_mongo419.cpp
ac985ba419c74f20e287b0aff503cfed5d33e263,SERVER-26560 Properly handle or avoid making throwing calls into ASIO within NetworkInterfaceASIO,src/mongo/executor/connection_pool_asio.cpp,+,"log() << ""Failed to cancel connection pool timer: "" << ec.message();",121,download/mongodb_mongo419.cpp
ac985ba419c74f20e287b0aff503cfed5d33e263,SERVER-26560 Properly handle or avoid making throwing calls into ASIO within NetworkInterfaceASIO,src/mongo/executor/network_interface_asio.cpp,+,fassertFailed(40335);,161,download/mongodb_mongo420.cpp
ac985ba419c74f20e287b0aff503cfed5d33e263,SERVER-26560 Properly handle or avoid making throwing calls into ASIO within NetworkInterfaceASIO,src/mongo/executor/network_interface_asio.cpp,+,fassertFailed(40334);,378,download/mongodb_mongo420.cpp
5053052fdafc16e7027cb246ce58c300bb6f45b5,SERVER-26599 Master-slave initial sync should use the exact _id index spec from master,src/mongo/db/cloner.cpp,+,"uassert(ErrorCodes::NotMaster,",692,download/mongodb_mongo421.cpp
5053052fdafc16e7027cb246ce58c300bb6f45b5,SERVER-26599 Master-slave initial sync should use the exact _id index spec from master,src/mongo/db/cloner.cpp,+,!txn->writesAreReplicated() ||,697,download/mongodb_mongo421.cpp
5053052fdafc16e7027cb246ce58c300bb6f45b5,SERVER-26599 Master-slave initial sync should use the exact _id index spec from master,src/mongo/db/cloner.cpp,+,repl::getGlobalReplicationCoordinator()->canAcceptWritesForDatabase(,698,download/mongodb_mongo421.cpp
5053052fdafc16e7027cb246ce58c300bb6f45b5,SERVER-26599 Master-slave initial sync should use the exact _id index spec from master,src/mongo/db/cloner.cpp,+,"uassert(40332,",701,download/mongodb_mongo421.cpp
5053052fdafc16e7027cb246ce58c300bb6f45b5,SERVER-26599 Master-slave initial sync should use the exact _id index spec from master,src/mongo/db/cloner.cpp,+,auto indexInfoObjs = uassertStatusOK(,707,download/mongodb_mongo421.cpp
affaff6131b836ae76cc987047b3c98e4eed2bf9,"SERVER-26606: Add check of global flag for object verification.

The `dbclientcursor` should obey the `objcheck` flag, to avoid
the penalty of BSON verification in performance-sensitive situations.",src/mongo/client/dbclientcursor.cpp,+,"uassert(ErrorCodes::InvalidBSON,",356,download/mongodb_mongo422.cpp
bb7179c0aa703ee2df76acabdd425bcf1371d780,SERVER-26631 Implement multiple document support for StorageInterface::findDocuments/deleteDocuments,src/mongo/db/repl/oplog_buffer_collection.cpp,+,"fassertStatusOK(40163,",266,download/mongodb_mongo423.cpp
43583fddef7ac89222f9cdfa14bb1452c740e8c7,"SERVER-26631 replaced StorageInterface::findOne/deleteOne with findDocuments/deleteDocuments

This commit updates the repl::StorageInterface interface but introduces no functional change.",src/mongo/db/repl/oplog_buffer_collection.cpp,+,*value = extractEmbeddedOplogDocument(docs.front()).getOwned();,266,download/mongodb_mongo424.cpp
d89ff664c25bdc3537cfd08af03d14d2d96815bb,"Revert ""SERVER-26307 Differentiate between config and shard command errors in MigrationManager moveChunk commands""

This reverts commit af2e05b0424b99ee162fe2ef0f1ecf6c687b06f9.",src/mongo/db/s/balancer/migration_manager.cpp,+,bool isErrorDueToBalancerStepdown(Status status) {,142,download/mongodb_mongo425.cpp
d89ff664c25bdc3537cfd08af03d14d2d96815bb,"Revert ""SERVER-26307 Differentiate between config and shard command errors in MigrationManager moveChunk commands""

This reverts commit af2e05b0424b99ee162fe2ef0f1ecf6c687b06f9.",src/mongo/db/s/balancer/migration_manager.cpp,+,ErrorCodes::isShutdownError(status.code()));,146,download/mongodb_mongo425.cpp
d89ff664c25bdc3537cfd08af03d14d2d96815bb,"Revert ""SERVER-26307 Differentiate between config and shard command errors in MigrationManager moveChunk commands""

This reverts commit af2e05b0424b99ee162fe2ef0f1ecf6c687b06f9.",src/mongo/db/s/balancer/migration_manager.cpp,+,if (isErrorDueToBalancerStepdown(responseStatus)) {,212,download/mongodb_mongo425.cpp
d89ff664c25bdc3537cfd08af03d14d2d96815bb,"Revert ""SERVER-26307 Differentiate between config and shard command errors in MigrationManager moveChunk commands""

This reverts commit af2e05b0424b99ee162fe2ef0f1ecf6c687b06f9.",src/mongo/db/s/balancer/migration_manager.cpp,+,if (isErrorDueToBalancerStepdown(responseStatus)) {,246,download/mongodb_mongo425.cpp
d89ff664c25bdc3537cfd08af03d14d2d96815bb,"Revert ""SERVER-26307 Differentiate between config and shard command errors in MigrationManager moveChunk commands""

This reverts commit af2e05b0424b99ee162fe2ef0f1ecf6c687b06f9.",src/mongo/db/s/balancer/migration_manager.cpp,+,if (isErrorDueToBalancerStepdown(status)) {,294,download/mongodb_mongo425.cpp
af2e05b0424b99ee162fe2ef0f1ecf6c687b06f9,SERVER-26307 Differentiate between config and shard command errors in MigrationManager moveChunk commands,src/mongo/db/s/balancer/migration_manager.cpp,+,"bool isErrorDueToConfigStepdown(Status status, bool isStopping) {",128,download/mongodb_mongo426.cpp
af2e05b0424b99ee162fe2ef0f1ecf6c687b06f9,SERVER-26307 Differentiate between config and shard command errors in MigrationManager moveChunk commands,src/mongo/db/s/balancer/migration_manager.cpp,+,"if (isErrorDueToConfigStepdown(remoteCommandResponse.status,",756,download/mongodb_mongo426.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/db/commands/dbcommands.cpp,+,"if (logger::globalLogDomain()->shouldLog(logger::LogComponent::kTracking,",1353,download/mongodb_mongo427.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/db/commands/dbcommands.cpp,+,logger::LogSeverity::Debug(1)) &&,1354,download/mongodb_mongo427.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/db/commands/dbcommands.cpp,+,"MONGO_LOG_COMPONENT(1, logger::LogComponent::kTracking)",1356,download/mongodb_mongo427.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/db/commands/dbcommands.cpp,+,rpc::TrackingMetadata::get(txn).setIsLogged(true);,1358,download/mongodb_mongo427.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/rpc/metadata/tracking_metadata.cpp,+,void TrackingMetadata::writeToMetadata(BSONObjBuilder* builder) const {,132,download/mongodb_mongo428.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/s/client/shard_remote.cpp,+,if (logger::globalLogDomain()->shouldLog(,147,download/mongodb_mongo429.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/s/client/shard_remote.cpp,+,logger::LogSeverity::Debug(1))) {  // avoid performance overhead if not logging,149,download/mongodb_mongo429.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/s/client/shard_remote.cpp,+,if (!TrackingMetadata::get(txn).getIsLogged()) {,150,download/mongodb_mongo429.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/s/client/shard_remote.cpp,+,"MONGO_LOG_COMPONENT(1, logger::LogComponent::kTracking)",154,download/mongodb_mongo429.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/s/client/shard_remote.cpp,+,TrackingMetadata::get(txn).setIsLogged(true);,156,download/mongodb_mongo429.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/s/client/shard_remote.cpp,+,metadata.writeToMetadata(&builder);,160,download/mongodb_mongo429.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(rpc::kReplSetMetadataFieldName << 1),",417,download/mongodb_mongo430.cpp
759bd57056d51ac856296e4c9672f1ea2efe4b33,SERVER-26506 add tracking for commands,src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(rpc::makeEmptyMetadata(),",449,download/mongodb_mongo430.cpp
886db25408492ced7d84b1cc06956d1e8613b29e,SERVER-25593: check shutdown/failure status during initial sync when acquiring lock.,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Initial Sync has been cancelled: "" << status.getStatus();",628,download/mongodb_mongo431.cpp
b7f18484664221d7211a32469c2508dfbe3372a0,SERVER-26544: Keep DatabaseCloner active until after the completion callback,src/mongo/db/repl/databases_cloner.cpp,+,"LOG(3) << ""DatabasesCloner::_fail_inlock called"";",371,download/mongodb_mongo432.cpp
b7f18484664221d7211a32469c2508dfbe3372a0,SERVER-26544: Keep DatabaseCloner active until after the completion callback,src/mongo/db/repl/databases_cloner.cpp,+,"LOG(3) << ""DatabasesCloner - calling _finishFn with status: "" << _status;",383,download/mongodb_mongo432.cpp
b7f18484664221d7211a32469c2508dfbe3372a0,SERVER-26544: Keep DatabaseCloner active until after the completion callback,src/mongo/db/repl/databases_cloner.cpp,+,"LOG(3) << ""DatabasesCloner::_succeed_inlock called"";",392,download/mongodb_mongo432.cpp
b7f18484664221d7211a32469c2508dfbe3372a0,SERVER-26544: Keep DatabaseCloner active until after the completion callback,src/mongo/db/repl/databases_cloner.cpp,+,"LOG(3) << ""DatabasesCloner - calling _finishFn with status OK"";",398,download/mongodb_mongo432.cpp
0344a7542f9318730cce289fe143295f6f99b4f8,SERVER-26596 Don't abort when javascript heap limit is set too low to initialize spidermonkey,src/mongo/scripting/mozjs/implscope.cpp,+,"uassert(ErrorCodes::ExceededMemoryLimit,",330,download/mongodb_mongo433.cpp
9228a2b401b4af0adfa53a61053fba3a7df4f75c,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"auto status = txn->waitForConditionOrInterruptNoAssertUntil(condVar, *lock, wTimeoutDate);",1687,download/mongodb_mongo434.cpp
9228a2b401b4af0adfa53a61053fba3a7df4f75c,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,return _checkIfWriteConcernCanBeSatisfied_inlock(writeConcern);,1701,download/mongodb_mongo434.cpp
9228a2b401b4af0adfa53a61053fba3a7df4f75c,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"uasserted(ErrorCodes::NotMaster,",1808,download/mongodb_mongo434.cpp
9228a2b401b4af0adfa53a61053fba3a7df4f75c,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"uasserted(ErrorCodes::ExceededTimeLimit,",1841,download/mongodb_mongo434.cpp
9228a2b401b4af0adfa53a61053fba3a7df4f75c,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"uasserted(ErrorCodes::ExceededTimeLimit,",1873,download/mongodb_mongo434.cpp
9228a2b401b4af0adfa53a61053fba3a7df4f75c,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,return _updateMemberStateFromTopologyCoordinator_inlock();,1893,download/mongodb_mongo434.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,"error() << ""failed to close pipe "" << _outputs.find(pid)->second << "" for process """,155,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,"error() << ""failed to create pipe: "" << ewd;",361,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,"error() << ""failed to set FD_CLOEXEC on pipe end 0: "" << ewd;",372,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,fassertFailed(40308);,373,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,"error() << ""failed to set FD_CLOEXEC on pipe end 1: "" << ewd;",378,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,fassertFailed(40317);,379,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,"uasserted(14042, ss.str());",601,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,"log() << ""wait_for_pid: WaitForSingleObject failed: "" << ewd;",637,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,uassert(,644,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,"log() << ""GetExitCodeProcess failed: "" << ewd;",657,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,"uasserted(ErrorCodes::UnknownError, ""Process did not exit after blocking"");",677,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,"error() << ""kill_wrapper SetEvent failed: "" << ewd;",870,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/mongo/shell/shell_utils_launcher.cpp,+,"log() << ""killFailed: "" << ewd;",879,download/mongodb_mongo435.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/third_party/boost-1.60.0/libs/iostreams/src/file_descriptor.cpp,+,"std::streamsize write(const char* s, std::streamsize n);",70,download/mongodb_mongo436.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/third_party/boost-1.60.0/libs/iostreams/src/file_descriptor.cpp,+,if (GetLastError() == ERROR_BROKEN_PIPE),268,download/mongodb_mongo436.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/third_party/boost-1.60.0/libs/iostreams/src/file_descriptor.cpp,+,"std::streamsize file_descriptor_impl::write(const char* s, std::streamsize n)",285,download/mongodb_mongo436.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/third_party/boost-1.60.0/libs/iostreams/src/file_descriptor.cpp,+,"if (!::WriteFile(handle_, s, n, &ignore, NULL))",289,download/mongodb_mongo436.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/third_party/boost-1.60.0/libs/iostreams/src/file_descriptor.cpp,+,"int amt = BOOST_IOSTREAMS_FD_WRITE(handle_, s, n);",293,download/mongodb_mongo436.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/third_party/boost-1.60.0/libs/iostreams/src/file_descriptor.cpp,+,::GetLastError() != NO_ERROR ),316,download/mongodb_mongo436.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/third_party/boost-1.60.0/libs/iostreams/src/file_descriptor.cpp,+,"std::streamsize file_descriptor::write(const char_type* s, std::streamsize n)",437,download/mongodb_mongo436.cpp
7b58433eec6437176f16ab4955b20c33a772aae8,SERVER-22992 waiting on forked process also waits on consuming output,src/third_party/boost-1.60.0/libs/iostreams/src/file_descriptor.cpp,+,"{ return pimpl_->write(s, n); }",438,download/mongodb_mongo436.cpp
a43da01b5124d89dea500819cbac0e55eb76961a,SERVER-25665 Remove cloneSplit and cloneMerge from CollectionMetadata,src/mongo/db/s/split_chunk_command.cpp,+,"collection->getIndexCatalog()->findShardKeyPrefixedIndex(txn, keyPatternObj, false);",438,download/mongodb_mongo437.cpp
30b79f47f04926d972192ed06a1fa08620592b67,"SERVER-26471 Always incrementally refresh metadata after committing chunk migration

Also introduces a failpoint and js test to exercise the race condition.",src/mongo/db/s/migration_source_manager.cpp,+,auto scopedGuard = MakeGuard([&] { cleanupOnError(txn); });,303,download/mongodb_mongo438.cpp
30b79f47f04926d972192ed06a1fa08620592b67,"SERVER-26471 Always incrementally refresh metadata after committing chunk migration

Also introduces a failpoint and js test to exercise the race condition.",src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""moveChunk updated collection '"" << _args.getNss().ns()",467,download/mongodb_mongo438.cpp
30b79f47f04926d972192ed06a1fa08620592b67,"SERVER-26471 Always incrementally refresh metadata after committing chunk migration

Also introduces a failpoint and js test to exercise the race condition.",src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""moveChunk failed to refresh metadata for collection '"" << _args.getNss().ns()",475,download/mongodb_mongo438.cpp
30b79f47f04926d972192ed06a1fa08620592b67,"SERVER-26471 Always incrementally refresh metadata after committing chunk migration

Also introduces a failpoint and js test to exercise the race condition.",src/mongo/db/s/move_chunk_command.cpp,+,uassertStatusOKWithWarning(migrationSourceManager.commitChunkOnRecipient(txn));,255,download/mongodb_mongo439.cpp
30b79f47f04926d972192ed06a1fa08620592b67,"SERVER-26471 Always incrementally refresh metadata after committing chunk migration

Also introduces a failpoint and js test to exercise the race condition.",src/mongo/db/s/move_chunk_command.cpp,+,uassertStatusOKWithWarning(migrationSourceManager.commitChunkMetadataOnConfig(txn));,259,download/mongodb_mongo439.cpp
4d825b60b071dfc166ce6a92ee71519af586a81b,SERVER-26325: Show redacted slow operation report when redaction enabled,src/mongo/db/instance.cpp,+,"log() << debug.report(&c, currentOp, lockerInfo.stats);",698,download/mongodb_mongo440.cpp
4d825b60b071dfc166ce6a92ee71519af586a81b,SERVER-26325: Show redacted slow operation report when redaction enabled,src/mongo/db/ops/write_ops_exec.cpp,+,"log() << curOp->debug().report(txn->getClient(), *curOp, lockerInfo.stats);",115,download/mongodb_mongo441.cpp
8410a7cd7d145d5923f9b5ebc9672e612e6fcc1d,SERVER-26465 Log somap info when doing heap profiling,src/mongo/util/heap_profiler.cpp,+,"log() << ""following stack trace is for heap profiler informational purposes"";",536,download/mongodb_mongo442.cpp
8410a7cd7d145d5923f9b5ebc9672e612e6fcc1d,SERVER-26465 Log somap info when doing heap profiling,src/mongo/util/heap_profiler.cpp,+,printStackTrace();,537,download/mongodb_mongo442.cpp
2da41d6cb9a67271a99fddaa452383ef953caa95,SERVER-25662: consolidate cleanup in doInitialSync attempt,src/mongo/db/repl/data_replicator.cpp,+,"LOG(0 /*1*/) << ""_oplogFetcher is active (_anyActiveHandles_inlock): """,896,download/mongodb_mongo443.cpp
2da41d6cb9a67271a99fddaa452383ef953caa95,SERVER-25662: consolidate cleanup in doInitialSync attempt,src/mongo/db/repl/data_replicator.cpp,+,"LOG(0 /*1*/) << ""_initialSyncState::dbsCloner is active (_anyActiveHandles_inlock): """,903,download/mongodb_mongo443.cpp
2da41d6cb9a67271a99fddaa452383ef953caa95,SERVER-25662: consolidate cleanup in doInitialSync attempt,src/mongo/db/repl/data_replicator.cpp,+,"LOG(0 /*1*/) << ""_applier is active (_anyActiveHandles_inlock): "" << _applier->toString();",909,download/mongodb_mongo443.cpp
2da41d6cb9a67271a99fddaa452383ef953caa95,SERVER-25662: consolidate cleanup in doInitialSync attempt,src/mongo/db/repl/data_replicator.cpp,+,"LOG(0 /*1*/) << ""_shuttingDownApplier is active (_anyActiveHandles_inlock): """,914,download/mongodb_mongo443.cpp
2da41d6cb9a67271a99fddaa452383ef953caa95,SERVER-25662: consolidate cleanup in doInitialSync attempt,src/mongo/db/repl/data_replicator.cpp,+,"LOG(0 /*1*/) << ""_reporter is active (_anyActiveHandles_inlock): "" << _reporter->toString();",920,download/mongodb_mongo443.cpp
2da41d6cb9a67271a99fddaa452383ef953caa95,SERVER-25662: consolidate cleanup in doInitialSync attempt,src/mongo/db/repl/data_replicator.cpp,+,LOG(0 /*2*/),925,download/mongodb_mongo443.cpp
a2d34afd4330258e05c5ac1e9174338cfda29a10,SERVER-26477 Use non-throwing variant of asio::basic_socket::cancel,src/mongo/executor/async_stream_common.cpp,+,"log() << ""Failed to close stream: "" << ec.message();",42,download/mongodb_mongo444.cpp
a2d34afd4330258e05c5ac1e9174338cfda29a10,SERVER-26477 Use non-throwing variant of asio::basic_socket::cancel,src/mongo/executor/async_stream_common.cpp,+,void logCancelFailed(std::error_code ec) {,45,download/mongodb_mongo444.cpp
a2d34afd4330258e05c5ac1e9174338cfda29a10,SERVER-26477 Use non-throwing variant of asio::basic_socket::cancel,src/mongo/executor/async_stream_common.cpp,+,"log() << ""Failed to cancel stream: "" << ec.message();",47,download/mongodb_mongo444.cpp
c421cc52e2112e7d0ef22e822dfdf0e5d6186b92,"Revert ""SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener""

This reverts commit 360d6ae39305dbc2f41ca7e0bfd424081fd4f030.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,Status interruptedStatus = txn->checkForInterruptNoAssert();,1687,download/mongodb_mongo445.cpp
c421cc52e2112e7d0ef22e822dfdf0e5d6186b92,"Revert ""SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener""

This reverts commit 360d6ae39305dbc2f41ca7e0bfd424081fd4f030.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,Status status = _checkIfWriteConcernCanBeSatisfied_inlock(writeConcern);,1706,download/mongodb_mongo445.cpp
c421cc52e2112e7d0ef22e822dfdf0e5d6186b92,"Revert ""SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener""

This reverts commit 360d6ae39305dbc2f41ca7e0bfd424081fd4f030.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"fassert(26000, finishedEvent.getStatus());",1781,download/mongodb_mongo445.cpp
c421cc52e2112e7d0ef22e822dfdf0e5d6186b92,"Revert ""SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener""

This reverts commit 360d6ae39305dbc2f41ca7e0bfd424081fd4f030.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,Status interruptedStatus = txn->checkForInterruptNoAssert();,1837,download/mongodb_mongo445.cpp
c421cc52e2112e7d0ef22e822dfdf0e5d6186b92,"Revert ""SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener""

This reverts commit 360d6ae39305dbc2f41ca7e0bfd424081fd4f030.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,_updateMemberStateFromTopologyCoordinator_inlock();,1877,download/mongodb_mongo445.cpp
cd96e35ef6e004d89a1618740beec5f405cbfe69,"SERVER-26343 DBPointer.prototype -> bson crashes

DBPointer's prototype isn't serializable and triggers a bad code path in
oid.  Let's guard against that route.",src/mongo/scripting/mozjs/valuewriter.cpp,+,"uassert(ErrorCodes::BadValue,",343,download/mongodb_mongo446.cpp
360d6ae39305dbc2f41ca7e0bfd424081fd4f030,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"auto status = txn->waitForConditionOrInterruptNoAssertUntil(condVar, *lock, wTimeoutDate);",1684,download/mongodb_mongo447.cpp
360d6ae39305dbc2f41ca7e0bfd424081fd4f030,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,return _checkIfWriteConcernCanBeSatisfied_inlock(writeConcern);,1698,download/mongodb_mongo447.cpp
360d6ae39305dbc2f41ca7e0bfd424081fd4f030,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"uasserted(ErrorCodes::NotMaster,",1805,download/mongodb_mongo447.cpp
360d6ae39305dbc2f41ca7e0bfd424081fd4f030,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"uasserted(ErrorCodes::ExceededTimeLimit,",1814,download/mongodb_mongo447.cpp
360d6ae39305dbc2f41ca7e0bfd424081fd4f030,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"uasserted(ErrorCodes::ExceededTimeLimit,",1870,download/mongodb_mongo447.cpp
360d6ae39305dbc2f41ca7e0bfd424081fd4f030,"SERVER-26305 Use interruptible condition variables in ReplicationCoordinatorImpl instead of KillOpListener

While this change also improves the readability of _awaitReplication_inlock and
stepDown, it resovles SERVER-26305 by breaking a deadlock cycle caused by the
fact that KillOpListener methods get run under a mutex in ServiceContext.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,return _updateMemberStateFromTopologyCoordinator_inlock();,1890,download/mongodb_mongo447.cpp
7e40ab701a38fcca2711e1f9ffb6b7ce403a351b,SERVER-26285 Code cleanup for ShardingUptimeReporter,src/mongo/s/sharding_uptime_reporter.cpp,+,Grid::get(txn)->catalogClient(txn)->updateConfigDocument(,70,download/mongodb_mongo448.cpp
7e40ab701a38fcca2711e1f9ffb6b7ce403a351b,SERVER-26285 Code cleanup for ShardingUptimeReporter,src/mongo/s/sharding_uptime_reporter.cpp,+,"log() << ""Caught exception while reporting uptime: "" << e.what();",78,download/mongodb_mongo448.cpp
32e57b5547d8bb1ee9693f043130af62beac4a96,SERVER-26434 Change `KVEngine::getRecordStore` to return a unique pointer,src/mongo/db/storage/kv/kv_collection_catalog_entry.cpp,+,"KVCollectionCatalogEntry::KVCollectionCatalogEntry(KVEngine* engine,",87,download/mongodb_mongo449.cpp
32e57b5547d8bb1ee9693f043130af62beac4a96,SERVER-26434 Change `KVEngine::getRecordStore` to return a unique pointer,src/mongo/db/storage/kv/kv_database_catalog_entry.cpp,+,_collections[ns.toString()] = new KVCollectionCatalogEntry(,237,download/mongodb_mongo450.cpp
32e57b5547d8bb1ee9693f043130af62beac4a96,SERVER-26434 Change `KVEngine::getRecordStore` to return a unique pointer,src/mongo/db/storage/kv/kv_database_catalog_entry.cpp,+,"_engine->getEngine(), _engine->getCatalog(), ns, ident, std::move(rs));",238,download/mongodb_mongo450.cpp
32e57b5547d8bb1ee9693f043130af62beac4a96,SERVER-26434 Change `KVEngine::getRecordStore` to return a unique pointer,src/mongo/db/storage/kv/kv_database_catalog_entry.cpp,+,_collections[ns] = new KVCollectionCatalogEntry(,264,download/mongodb_mongo450.cpp
32e57b5547d8bb1ee9693f043130af62beac4a96,SERVER-26434 Change `KVEngine::getRecordStore` to return a unique pointer,src/mongo/db/storage/kv/kv_database_catalog_entry.cpp,+,"_engine->getEngine(), _engine->getCatalog(), ns, ident, std::move(rs));",265,download/mongodb_mongo450.cpp
32e57b5547d8bb1ee9693f043130af62beac4a96,SERVER-26434 Change `KVEngine::getRecordStore` to return a unique pointer,src/mongo/db/storage/kv/kv_database_catalog_entry.cpp,+,"_engine->getEngine(), _engine->getCatalog(), toNS, identTo, std::move(rs));",324,download/mongodb_mongo450.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_facet.cpp,+,"uassert(40169,",78,download/mongodb_mongo451.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_facet.cpp,+,FieldPath::uassertValidFieldName(facetName);,86,download/mongodb_mongo451.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_facet.cpp,+,"uassert(40170,",87,download/mongodb_mongo451.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_facet.cpp,+,"uassert(40171,",94,download/mongodb_mongo451.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_facet.cpp,+,uassert(,103,download/mongodb_mongo451.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_facet.cpp,+,"auto pipeline = uassertStatusOK(Pipeline::parse(rawFacet.second, expCtx));",290,download/mongodb_mongo451.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_graph_lookup.cpp,+,"uassert(40327,",54,download/mongodb_mongo452.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_graph_lookup.cpp,+,"uassert(40328,",61,download/mongodb_mongo452.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_graph_lookup.cpp,+,"uassert(40329,",65,download/mongodb_mongo452.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_graph_lookup.cpp,+,"uassert(40330, str::stream() << ""invalid $graphLookup namespace: "" << nss.ns(), nss.isValid());",71,download/mongodb_mongo452.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_lookup.cpp,+,"uassert(40319,",62,download/mongodb_mongo453.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_lookup.cpp,+,"uassert(40320,",69,download/mongodb_mongo453.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_lookup.cpp,+,"uassert(40321,",72,download/mongodb_mongo453.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_lookup.cpp,+,"uassert(40322, str::stream() << ""invalid $lookup namespace: "" << nss.ns(), nss.isValid());",78,download/mongodb_mongo453.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_out.cpp,+,"uassert(40325,",52,download/mongodb_mongo454.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/document_source_out.cpp,+,"uassert(40326,",58,download/mongodb_mongo454.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/lite_parsed_document_source.cpp,+,"uassert(40323,",49,download/mongodb_mongo455.cpp
8758a5c7be68effbc4a1f857787bfb7b201c6389,"SERVER-25038 add LiteParsedPipeline

This provides a way to do pre-parse validity checks. Full
parsing of the Pipeline must be done under the collection
lock, when the collation is known.",src/mongo/db/pipeline/lite_parsed_document_source.cpp,+,"uassert(40324,",57,download/mongodb_mongo455.cpp
b8a5742ef7623640eb6977f14e25649bad661208,SERVER-26262 Add logging for setting featureCompatibilityVersion,src/mongo/db/commands/feature_compatibility_version.cpp,+,auto newVersion = uassertStatusOK(FeatureCompatibilityVersion::parse(doc));,329,download/mongodb_mongo456.cpp
b8a5742ef7623640eb6977f14e25649bad661208,SERVER-26262 Add logging for setting featureCompatibilityVersion,src/mongo/db/commands/feature_compatibility_version.cpp,+,"log() << ""setting featureCompatibilityVersion to """,330,download/mongodb_mongo456.cpp
b8a5742ef7623640eb6977f14e25649bad661208,SERVER-26262 Add logging for setting featureCompatibilityVersion,src/mongo/db/commands/feature_compatibility_version.cpp,+,"log() << ""setting featureCompatibilityVersion to "" << FeatureCompatibilityVersion::kVersion32;",340,download/mongodb_mongo456.cpp
fd300c0c05c1e057a7c5f24e7599d26e383234d0,SERVER-19042 Make globalScriptEngine a decoration on ServiceContext where possible,src/mongo/db/commands/mr.cpp,+,"uassert(16149, ""cannot run map reduce without the js engine"", getGlobalScriptEngine());",1378,download/mongodb_mongo457.cpp
ab912a90501ffa988591ab5173773b538cc22cac,SERVER-26367 index_killop.js should use failpoint,src/mongo/db/catalog/index_create.cpp,+,"log() << ""Hanging index build due to 'hangAfterStartingIndexBuild' failpoint"";",340,download/mongodb_mongo458.cpp
0e3fb754723278d2dc4b5e4a70535a349fe841f0,SERVER-26427 exhausting initial sync retries should fassert without a backtrace,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"fassertNoTrace(40088, status.getStatus());",624,download/mongodb_mongo459.cpp
d2d1b2bae272e786bcd6e79e4c5057672e971183,SERVER-25839 Improve shell 'mkdir' utility,src/mongo/shell/shell_utils_extended.cpp,+,"uassert(40315, ""mkdir requires a non-empty string"", args.firstElement().String() != """");",205,download/mongodb_mongo460.cpp
d2d1b2bae272e786bcd6e79e4c5057672e971183,SERVER-25839 Improve shell 'mkdir' utility,src/mongo/shell/shell_utils_extended.cpp,+,"uassert(40316, ""mkdir() failed: "" + ec.message(), !ec);",210,download/mongodb_mongo460.cpp
a218beb0edc46d85ef90702eff79602b94a72a07,SERVER-26394 prohibit choosing ourselves as a sync source,src/mongo/db/repl/topology_coordinator_impl.cpp,+,LOG(1),194,download/mongodb_mongo461.cpp
1ac511f1673d9663454651c2763aec32387c077f,SERVER-25994: Make applyOps work without universal privileges,src/mongo/db/commands/apply_ops_cmd_common.cpp,+,"uassert(ErrorCodes::FailedToParse,",163,download/mongodb_mongo462.cpp
1ac511f1673d9663454651c2763aec32387c077f,SERVER-25994: Make applyOps work without universal privileges,src/mongo/db/commands/apply_ops_cmd_common.cpp,+,"fassert(40314, validity == ApplyOpsValidity::kOk);",199,download/mongodb_mongo462.cpp
d6d5a9081c357df6149c10c296797ffd5339aa3f,SERVER-26370 Improve error messages returned on moveChunk conflict,src/mongo/db/s/active_migrations_registry.cpp,+,return _activeReceiveChunkState->constructErrorStatus();,56,download/mongodb_mongo463.cpp
d6d5a9081c357df6149c10c296797ffd5339aa3f,SERVER-26370 Improve error messages returned on moveChunk conflict,src/mongo/db/s/active_migrations_registry.cpp,+,return _activeMoveChunkState->constructErrorStatus();,70,download/mongodb_mongo463.cpp
d6d5a9081c357df6149c10c296797ffd5339aa3f,SERVER-26370 Improve error messages returned on moveChunk conflict,src/mongo/db/s/active_migrations_registry.cpp,+,return _activeReceiveChunkState->constructErrorStatus();,93,download/mongodb_mongo463.cpp
d6d5a9081c357df6149c10c296797ffd5339aa3f,SERVER-26370 Improve error messages returned on moveChunk conflict,src/mongo/db/s/active_migrations_registry.cpp,+,return _activeMoveChunkState->constructErrorStatus();,102,download/mongodb_mongo463.cpp
d6d5a9081c357df6149c10c296797ffd5339aa3f,SERVER-26370 Improve error messages returned on moveChunk conflict,src/mongo/db/s/active_migrations_registry.cpp,+,Status ActiveMigrationsRegistry::ActiveMoveChunkState::constructErrorStatus() const {,132,download/mongodb_mongo463.cpp
d6d5a9081c357df6149c10c296797ffd5339aa3f,SERVER-26370 Improve error messages returned on moveChunk conflict,src/mongo/db/s/active_migrations_registry.cpp,+,Status ActiveMigrationsRegistry::ActiveReceiveChunkState::constructErrorStatus() const {,143,download/mongodb_mongo463.cpp
d6d5a9081c357df6149c10c296797ffd5339aa3f,SERVER-26370 Improve error messages returned on moveChunk conflict,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,const auto chunkRange = uassertStatusOK(ChunkRange::fromBSON(cmdObj));,131,download/mongodb_mongo464.cpp
d6d5a9081c357df6149c10c296797ffd5339aa3f,SERVER-26370 Improve error messages returned on moveChunk conflict,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,"uassertStatusOK(shardingState->registerReceiveChunk(nss, chunkRange, fromShard)));",166,download/mongodb_mongo464.cpp
722a9b1bec2754dec6e2cdfb652aca1fd1db5163,"SERVER-25498 Fix cases of missing decimal continuations for KeyString

Also fixes rounding issue for Decimal128 between 2**(-1074) and 2**(-255).",src/mongo/db/storage/key_string.cpp,+,"dassert(Decimal128(absBin, Decimal128::kRoundTo15Digits, Decimal128::kRoundTowardPositive)",738,download/mongodb_mongo465.cpp
251a6f637b425c726aa2899b6d3bbf3c2be8aa98,SERVER-26193 Fix incorrect rounding in double to decimal conversion,src/mongo/platform/decimal128.cpp,+,*     Q = 10 ** (floor(log10(doubleValue rounded to 15 decimal digits)) - 14),212,download/mongodb_mongo466.cpp
251a6f637b425c726aa2899b6d3bbf3c2be8aa98,SERVER-26193 Fix incorrect rounding in double to decimal conversion,src/mongo/platform/decimal128.cpp,+,//   (1) 10**(base2Exp * log10(2)) == 2**base2Exp,323,download/mongodb_mongo466.cpp
251a6f637b425c726aa2899b6d3bbf3c2be8aa98,SERVER-26193 Fix incorrect rounding in double to decimal conversion,src/mongo/platform/decimal128.cpp,+,//   (2) 0.30103 closely approximates log10(2),324,download/mongodb_mongo466.cpp
251a6f637b425c726aa2899b6d3bbf3c2be8aa98,SERVER-26193 Fix incorrect rounding in double to decimal conversion,src/mongo/platform/decimal128.cpp,+,//     { base2Exp * 30103 / (100 * 1000) == math.floor(math.log10(2**base2Exp)),327,download/mongodb_mongo466.cpp
ba3dc420fe41f9c6ba718da5eb270161374839f3,"SERVER-26370 Register incoming migrations on the ActiveMigrationsRegistry

In order to avoid race conditions where a shard could serve both as a
donor and recipient.",src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,auto scopedRegisterReceiveChunk(uassertStatusOK(shardingState->registerReceiveChunk(nss)));,169,download/mongodb_mongo467.cpp
fd94476eb6ca0207dd69662d36f93eeaaa227073,SERVER-26380 Do not retry chunk moves on Interrupt and ExceededTimeLimit errors,src/mongo/s/balancer/migration_manager.cpp,+,bool isErrorDueToBalancerStepdown(Status status) {,140,download/mongodb_mongo468.cpp
fd94476eb6ca0207dd69662d36f93eeaaa227073,SERVER-26380 Do not retry chunk moves on Interrupt and ExceededTimeLimit errors,src/mongo/s/balancer/migration_manager.cpp,+,if (isErrorDueToBalancerStepdown(responseStatus)) {,205,download/mongodb_mongo468.cpp
fd94476eb6ca0207dd69662d36f93eeaaa227073,SERVER-26380 Do not retry chunk moves on Interrupt and ExceededTimeLimit errors,src/mongo/s/balancer/migration_manager.cpp,+,if (isErrorDueToBalancerStepdown(responseStatus)) {,236,download/mongodb_mongo468.cpp
fd94476eb6ca0207dd69662d36f93eeaaa227073,SERVER-26380 Do not retry chunk moves on Interrupt and ExceededTimeLimit errors,src/mongo/s/balancer/migration_manager.cpp,+,if (isErrorDueToBalancerStepdown(status)) {,288,download/mongodb_mongo468.cpp
b12af9e243b98b50d5918d9afa9354b9935cebf0,SERVER-26370 Cleanup MigrationDestinationManager,src/mongo/db/s/migration_destination_manager.cpp,+,if (!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(_nss)) {,484,download/mongodb_mongo469.cpp
b12af9e243b98b50d5918d9afa9354b9935cebf0,SERVER-26370 Cleanup MigrationDestinationManager,src/mongo/db/s/migration_destination_manager.cpp,+,if (!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(_nss)) {,532,download/mongodb_mongo469.cpp
b12af9e243b98b50d5918d9afa9354b9935cebf0,SERVER-26370 Cleanup MigrationDestinationManager,src/mongo/db/s/migration_destination_manager.cpp,+,"if (_flushPendingWrites(txn, _nss.ns(), min, max, lastOpApplied, writeConcern)) {",790,download/mongodb_mongo469.cpp
b12af9e243b98b50d5918d9afa9354b9935cebf0,SERVER-26370 Cleanup MigrationDestinationManager,src/mongo/db/s/migration_destination_manager.cpp,+,"if (_flushPendingWrites(txn, _nss.ns(), min, max, lastOpApplied, writeConcern)) {",845,download/mongodb_mongo469.cpp
b12af9e243b98b50d5918d9afa9354b9935cebf0,SERVER-26370 Cleanup MigrationDestinationManager,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,uassertStatusOK(shardingState->migrationDestinationManager()->start(,171,download/mongodb_mongo470.cpp
b12af9e243b98b50d5918d9afa9354b9935cebf0,SERVER-26370 Cleanup MigrationDestinationManager,src/mongo/db/s/move_chunk_command.cpp,+,uassertStatusOK(shardingState->registerDonateChunk(moveChunkRequest));,159,download/mongodb_mongo471.cpp
a659f34e38acad197955283a077c43204bc6a360,SERVER-26366 log when starting repl shutdown,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""shutting down replication subsystems"";",709,download/mongodb_mongo472.cpp
17a1692c440f4af9cf5a60f58947d547d58c3d5e,SERVER-26348: Dissallow oplog reads when in startup (like rollback),src/mongo/db/repl/replication_coordinator_impl.cpp,+,if ((_memberState.startup2() || _memberState.rollback()) && ns.isOplog()) {,1957,download/mongodb_mongo473.cpp
3e826bda825b663533ae5791b338ec3b21698789,"Revert ""SERVER-26348: Dissallow oplog reads when in startup (like rollback)""

This reverts commit dc791d218a444ab0c22fd590157803fe2076c151.",src/mongo/db/repl/replication_coordinator_impl.cpp,+,if (_memberState.rollback() && ns.isOplog()) {,1958,download/mongodb_mongo474.cpp
7f40db62b8f343db215024b45e746b9ea4fc4e86,SERVER-25662: pass runner OperationContext* to 3.2 initial sync code,src/mongo/db/repl/rs_initialsync.cpp,+,txn->setReplicatedWrites(false);,268,download/mongodb_mongo475.cpp
7f40db62b8f343db215024b45e746b9ea4fc4e86,SERVER-25662: pass runner OperationContext* to 3.2 initial sync code,src/mongo/db/repl/rs_initialsync.cpp,+,"truncateAndResetOplog(txn, replCoord, bgsync);",273,download/mongodb_mongo475.cpp
7f40db62b8f343db215024b45e746b9ea4fc4e86,SERVER-25662: pass runner OperationContext* to 3.2 initial sync code,src/mongo/db/repl/rs_initialsync.cpp,+,"Lock::DBLock dbWrite(txn->lockState(), db, MODE_X);",344,download/mongodb_mongo475.cpp
7f40db62b8f343db215024b45e746b9ea4fc4e86,SERVER-25662: pass runner OperationContext* to 3.2 initial sync code,src/mongo/db/repl/rs_initialsync.cpp,+,"if (!_initialSyncApplyOplog(txn, &init, &r, bgsync)) {",377,download/mongodb_mongo475.cpp
7f40db62b8f343db215024b45e746b9ea4fc4e86,SERVER-25662: pass runner OperationContext* to 3.2 initial sync code,src/mongo/db/repl/rs_initialsync.cpp,+,"if (!_initialSyncApplyOplog(txn, &init, &r, bgsync)) {",386,download/mongodb_mongo475.cpp
7f40db62b8f343db215024b45e746b9ea4fc4e86,SERVER-25662: pass runner OperationContext* to 3.2 initial sync code,src/mongo/db/repl/rs_initialsync.cpp,+,"if (!_initialSyncApplyOplog(txn, &tail, &r, bgsync)) {",413,download/mongodb_mongo475.cpp
7f40db62b8f343db215024b45e746b9ea4fc4e86,SERVER-25662: pass runner OperationContext* to 3.2 initial sync code,src/mongo/db/repl/rs_initialsync.cpp,+,replicationCoordinatorExternalState->makeInitialSyncOplogBuffer(txn));,515,download/mongodb_mongo475.cpp
7f40db62b8f343db215024b45e746b9ea4fc4e86,SERVER-25662: pass runner OperationContext* to 3.2 initial sync code,src/mongo/db/repl/rs_initialsync.cpp,+,createOplog(txn);,517,download/mongodb_mongo475.cpp
dc791d218a444ab0c22fd590157803fe2076c151,SERVER-26348: Dissallow oplog reads when in startup (like rollback),src/mongo/db/repl/replication_coordinator_impl.cpp,+,ns.isOplog()) {,1959,download/mongodb_mongo476.cpp
7928661bfc0dcccc95256e0df6424b057d588eec,SERVER-26117 renameCollection 'c' op should restart initial sync upon application,src/mongo/db/repl/sync_tail.cpp,+,"error() << ""Error applying command ("" << redact(entry.raw)",1194,download/mongodb_mongo477.cpp
271edb0dc1ae6e3410395ca1dbd0483029ec8cc0,SERVER-26281: Make sync source selection logging more accurate,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source because of voting differences: """,262,download/mongodb_mongo478.cpp
271edb0dc1ae6e3410395ca1dbd0483029ec8cc0,SERVER-26281: Make sync source selection logging more accurate,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source because it is too far behind: """,274,download/mongodb_mongo478.cpp
271edb0dc1ae6e3410395ca1dbd0483029ec8cc0,SERVER-26281: Make sync source selection logging more accurate,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source with larger slaveDelay than ours: """,280,download/mongodb_mongo478.cpp
271edb0dc1ae6e3410395ca1dbd0483029ec8cc0,SERVER-26281: Make sync source selection logging more accurate,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source with higher latency than the best candidate: """,304,download/mongodb_mongo478.cpp
cededadafa62177d34fb960eec90d6d30f25f943,SERVER-26043: add back variables for each db use case,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"Lock::DBLock dbWriteLock(txn->lockState(), configDatabaseName, MODE_X);",500,download/mongodb_mongo479.cpp
cededadafa62177d34fb960eec90d6d30f25f943,SERVER-26043: add back variables for each db use case,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"Lock::DBLock dbWriteLock(txn->lockState(), lastVoteDatabaseName, MODE_X);",538,download/mongodb_mongo479.cpp
3ab7ab1ccb9bf89ecfdd793cc0d2e4acb8e334d4,SERVER-26327 Extend diagnostics in bulk_shard_insert.js,src/mongo/db/s/metadata_manager.cpp,+,"log() << ""Refreshing metadata for collection "" << _nss.ns() << "" from """,133,download/mongodb_mongo480.cpp
e786f06d2f38f50ced6f8c4750166990ed080897,"Revert ""SERVER-26327 Extend diagnostics in bulk_shard_insert.js""

This reverts commit e2b8d3da53a06617fa9c0251070bfc31fe38f154.",src/mongo/db/s/metadata_manager.cpp,+,"LOG(1) << ""Refreshing metadata for collection "" << _nss.ns() << "" from """,133,download/mongodb_mongo481.cpp
a0e21dec26e64d359c0093959cf3897c53893c8e,SERVER-25981 fix race in log component settings,src/mongo/logger/log_component_settings.cpp,+,_minimumLoggedSeverity[LogComponent::kDefault].store(LogSeverity::Log().toInt());,38,download/mongodb_mongo482.cpp
a0e21dec26e64d359c0093959cf3897c53893c8e,SERVER-25981 fix race in log component settings,src/mongo/logger/log_component_settings.cpp,+,"_setMinimumLoggedSeverityInLock(component, severity);",70,download/mongodb_mongo482.cpp
a0e21dec26e64d359c0093959cf3897c53893c8e,SERVER-25981 fix race in log component settings,src/mongo/logger/log_component_settings.cpp,+,"void LogComponentSettings::_setMinimumLoggedSeverityInLock(LogComponent component,",73,download/mongodb_mongo482.cpp
a0e21dec26e64d359c0093959cf3897c53893c8e,SERVER-25981 fix race in log component settings,src/mongo/logger/log_component_settings.cpp,+,LogComponent parentComponent = LogComponent(v).parent();,98,download/mongodb_mongo482.cpp
a0e21dec26e64d359c0093959cf3897c53893c8e,SERVER-25981 fix race in log component settings,src/mongo/logger/log_component_settings.cpp,+,"_setMinimumLoggedSeverityInLock(component, LogSeverity::Log());",113,download/mongodb_mongo482.cpp
a0e21dec26e64d359c0093959cf3897c53893c8e,SERVER-25981 fix race in log component settings,src/mongo/logger/log_component_settings.cpp,+,"_setMinimumLoggedSeverityInLock(component, getMinimumLogSeverity(component.parent()));",119,download/mongodb_mongo482.cpp
9a4693efbe83f3c07c751dd608dec69829978ee6,SERVER-25702 added support to OplogFetcher for restarting oplog query,src/mongo/db/repl/oplog_fetcher.cpp,+,"uassert(ErrorCodes::BadValue, ""null last optime fetched"", !_lastFetched.opTime.isNull());",265,download/mongodb_mongo483.cpp
9a4693efbe83f3c07c751dd608dec69829978ee6,SERVER-25702 added support to OplogFetcher for restarting oplog query,src/mongo/db/repl/oplog_fetcher.cpp,+,"LOG(1) << ""oplog query cancelled"";",355,download/mongodb_mongo483.cpp
9a4693efbe83f3c07c751dd608dec69829978ee6,SERVER-25702 added support to OplogFetcher for restarting oplog query,src/mongo/db/repl/oplog_fetcher.cpp,+,"log() << ""Error returned from oplog query while canceling query: """,366,download/mongodb_mongo483.cpp
9a4693efbe83f3c07c751dd608dec69829978ee6,SERVER-25702 added support to OplogFetcher for restarting oplog query,src/mongo/db/repl/oplog_fetcher.cpp,+,"log() << ""Error returned from oplog query (no more query restarts left): """,369,download/mongodb_mongo483.cpp
9a4693efbe83f3c07c751dd608dec69829978ee6,SERVER-25702 added support to OplogFetcher for restarting oplog query,src/mongo/db/repl/oplog_fetcher.cpp,+,"log() << ""Restarting oplog query due to error: "" << redact(responseStatus)",372,download/mongodb_mongo483.cpp
9a4693efbe83f3c07c751dd608dec69829978ee6,SERVER-25702 added support to OplogFetcher for restarting oplog query,src/mongo/db/repl/oplog_fetcher.cpp,+,"log() << ""Scheduled new oplog query "" << _fetcher->toString();",384,download/mongodb_mongo483.cpp
9a4693efbe83f3c07c751dd608dec69829978ee6,SERVER-25702 added support to OplogFetcher for restarting oplog query,src/mongo/db/repl/oplog_fetcher.cpp,+,"error() << ""Error scheduling new oplog query: "" << redact(scheduleStatus)",387,download/mongodb_mongo483.cpp
160a15c25fc59a74cc66cd593d0381741630776f,SERVER-25994: Make applyOps check for specific permissions,src/mongo/db/commands.cpp,+,log(LogComponent::kAccessControl) << status;,279,download/mongodb_mongo484.cpp
160a15c25fc59a74cc66cd593d0381741630776f,SERVER-25994: Make applyOps check for specific permissions,src/mongo/db/commands.cpp,+,"audit::logCommandAuthzCheck(txn->getClient(), dbname, cmdObj, c, status.code());",281,download/mongodb_mongo484.cpp
160a15c25fc59a74cc66cd593d0381741630776f,SERVER-25994: Make applyOps check for specific permissions,src/mongo/db/commands/dbcommands.cpp,+,"uassertStatusOK(checkAuthorization(command, txn, dbname, request.getCommandArgs()));",1235,download/mongodb_mongo485.cpp
e2b8d3da53a06617fa9c0251070bfc31fe38f154,SERVER-26327 Extend diagnostics in bulk_shard_insert.js,src/mongo/db/s/metadata_manager.cpp,+,"log() << ""Refreshing metadata for collection "" << _nss.ns() << "" from """,133,download/mongodb_mongo486.cpp
f128617d2447f137e89e17f596acebf5c1bc744b,SERVER-25702 changed oplogFetcherMaxFetcherRestarts default from 10 to 3,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,oplogFetcherMaxFetcherRestarts(3);,129,download/mongodb_mongo487.cpp
5563428f99af20c29cb334f97e84f0dcc1cb102a,SERVER-769 Validate createIndexes field names,src/mongo/db/commands/create_indexes.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(txn, kCommandName, ns.ns());",287,download/mongodb_mongo488.cpp
5563428f99af20c29cb334f97e84f0dcc1cb102a,SERVER-769 Validate createIndexes field names,src/mongo/db/commands/create_indexes.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(txn, kCommandName, ns.ns());",339,download/mongodb_mongo488.cpp
5563428f99af20c29cb334f97e84f0dcc1cb102a,SERVER-769 Validate createIndexes field names,src/mongo/db/commands/create_indexes.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(txn, kCommandName, ns.ns());",412,download/mongodb_mongo488.cpp
aad3bcd6d14152459ff362f69b2e20ebbd68b053,SERVER-26280 change ErrorCode expectation in MigrationManager,src/mongo/s/catalog/replset_dist_lock_manager.cpp,+,"log() << ""distributed lock '"" << name << ""' acquired for '"" << whyMessage.toString()",447,download/mongodb_mongo489.cpp
aad3bcd6d14152459ff362f69b2e20ebbd68b053,SERVER-26280 change ErrorCode expectation in MigrationManager,src/mongo/s/catalog/replset_dist_lock_manager.cpp,+,"LOG(1) << ""distributed lock '"" << name << ""' was not acquired."";",452,download/mongodb_mongo489.cpp
1955b0542e68b31b1e93f99980316817bd1e4416,SERVER-23944 Expect CallbackCanceled as shutdown error during chunk commit,src/mongo/db/s/migration_source_manager.cpp,+,ErrorCodes::isShutdownError(status.code()) ||,392,download/mongodb_mongo490.cpp
51a105220e2c8c282fdd720aed3a3332dd2180fb,SERVER-26282 Make sync source change logging clearer,src/mongo/db/repl/oplog_fetcher.cpp,+,"LOG(1) << ""Error returned from oplog query: "" << redact(result.getStatus());",328,download/mongodb_mongo491.cpp
51a105220e2c8c282fdd720aed3a3332dd2180fb,SERVER-26282 Make sync source change logging clearer,src/mongo/db/repl/oplog_fetcher.cpp,+,"LOG(1) << ""oplog fetcher successfully fetched from "" << _source;",379,download/mongodb_mongo491.cpp
51a105220e2c8c282fdd720aed3a3332dd2180fb,SERVER-26282 Make sync source change logging clearer,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""choosing sync source candidate by request: "" << _syncSource;",164,download/mongodb_mongo492.cpp
51a105220e2c8c282fdd720aed3a3332dd2180fb,SERVER-26282 Make sync source change logging clearer,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""chaining not allowed, choosing primary as sync source candidate: """,195,download/mongodb_mongo492.cpp
51a105220e2c8c282fdd720aed3a3332dd2180fb,SERVER-26282 Make sync source change logging clearer,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""sync source candidate: "" << _syncSource;",336,download/mongodb_mongo492.cpp
637553798fe8e12a63fa083b1f281880e3ae40be,SERVER-26135 Rearrange code in finishRecovery to avoid invalid iterator warning,src/mongo/s/balancer/migration_manager.cpp,+,Grid::get(txn)->catalogClient(txn)->getDistLockManager()->unlock(,478,download/mongodb_mongo493.cpp
948f978a782167ddb6efec9f9adf5ad317eb4d0d,SERVER-25004 isolate parsing logic in collmod,src/mongo/db/catalog/coll_mod.cpp,+,"cmr.idx = coll->getIndexCatalog()->findIndexByName(txn, indexName);",189,download/mongodb_mongo494.cpp
948f978a782167ddb6efec9f9adf5ad317eb4d0d,SERVER-25004 isolate parsing logic in collmod,src/mongo/db/catalog/coll_mod.cpp,+,"const auto sharedView = db->getViewCatalog()->lookup(txn, nss.ns());",386,download/mongodb_mongo494.cpp
948f978a782167ddb6efec9f9adf5ad317eb4d0d,SERVER-25004 isolate parsing logic in collmod,src/mongo/db/catalog/coll_mod.cpp,+,BackgroundOperation::assertNoBgOpInProgForNs(nss);,395,download/mongodb_mongo494.cpp
948f978a782167ddb6efec9f9adf5ad317eb4d0d,SERVER-25004 isolate parsing logic in collmod,src/mongo/db/catalog/coll_mod.cpp,+,bool userInitiatedWritesAndNotPrimary = txn->writesAreReplicated() &&,404,download/mongodb_mongo494.cpp
948f978a782167ddb6efec9f9adf5ad317eb4d0d,SERVER-25004 isolate parsing logic in collmod,src/mongo/db/catalog/coll_mod.cpp,+,!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(nss);,405,download/mongodb_mongo494.cpp
948f978a782167ddb6efec9f9adf5ad317eb4d0d,SERVER-25004 isolate parsing logic in collmod,src/mongo/db/catalog/coll_mod.cpp,+,ViewCatalog* catalog = db->getViewCatalog();,429,download/mongodb_mongo494.cpp
948f978a782167ddb6efec9f9adf5ad317eb4d0d,SERVER-25004 isolate parsing logic in collmod,src/mongo/db/catalog/coll_mod.cpp,+,coll->getCatalogEntry()->updateTTLSetting(,447,download/mongodb_mongo494.cpp
948f978a782167ddb6efec9f9adf5ad317eb4d0d,SERVER-25004 isolate parsing logic in collmod,src/mongo/db/catalog/coll_mod.cpp,+,"cmr.idx = coll->getIndexCatalog()->refreshEntry(txn, cmr.idx);",450,download/mongodb_mongo494.cpp
97ba2edd5adcb0a70d1f2330786bbda8252272fe,SERVER-26242 add more logging to ReplSetDistLockManager::tryLockWithLocalWriteConcern,src/mongo/s/catalog/replset_dist_lock_manager.cpp,+,"LOG(1) << ""trying to acquire new distributed lock for "" << name",431,download/mongodb_mongo495.cpp
97ba2edd5adcb0a70d1f2330786bbda8252272fe,SERVER-26242 add more logging to ReplSetDistLockManager::tryLockWithLocalWriteConcern,src/mongo/s/catalog/replset_dist_lock_manager.cpp,+,"log() << ""distributed lock '"" << name << ""' acquired for '"" << whyMessage.toString()",451,download/mongodb_mongo495.cpp
276f006796f8f3abfde86a549cdf9f8cc6ffa974,SERVER-25743 Add dochub links to all featureCompatibilityVersion error messages,src/mongo/db/s/config/configsvr_set_feature_compatibility_version_command.cpp,+,"uassert(ErrorCodes::BadValue,",134,download/mongodb_mongo496.cpp
c080a9b3f208ff3e2530e1a3ff543ff526f91728,SERVER-25942 Don't validate views in listCollections unless they are being returned,src/mongo/db/commands/list_collections.cpp,+,"db->getViewCatalog()->iterate(txn, [&](const ViewDefinition& view) {",281,download/mongodb_mongo497.cpp
d526f86f4c409ea746bae4ef0b31a13f4db34c60,SERVER-25702 added server parameter for oplog fetcher max fetcher restarts,src/mongo/db/repl/bgsync.cpp,+,"_replicationCoordinatorExternalState->getOplogFetcherMaxFetcherRestarts(),",386,download/mongodb_mongo498.cpp
d526f86f4c409ea746bae4ef0b31a13f4db34c60,SERVER-25702 added server parameter for oplog fetcher max fetcher restarts,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,oplogFetcherMaxFetcherRestarts(10);,129,download/mongodb_mongo499.cpp
d526f86f4c409ea746bae4ef0b31a13f4db34c60,SERVER-25702 added server parameter for oplog fetcher max fetcher restarts,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,ExportedOplogFetcherMaxFetcherRestartsServerParameter();,133,download/mongodb_mongo499.cpp
d526f86f4c409ea746bae4ef0b31a13f4db34c60,SERVER-25702 added server parameter for oplog fetcher max fetcher restarts,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,ExportedOplogFetcherMaxFetcherRestartsServerParameter(),138,download/mongodb_mongo499.cpp
d526f86f4c409ea746bae4ef0b31a13f4db34c60,SERVER-25702 added server parameter for oplog fetcher max fetcher restarts,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,std::size_t ReplicationCoordinatorExternalStateImpl::getOplogFetcherMaxFetcherRestarts() const {,890,download/mongodb_mongo499.cpp
d526f86f4c409ea746bae4ef0b31a13f4db34c60,SERVER-25702 added server parameter for oplog fetcher max fetcher restarts,src/mongo/db/repl/replication_coordinator_external_state_mock.cpp,+,std::size_t ReplicationCoordinatorExternalStateMock::getOplogFetcherMaxFetcherRestarts() const {,293,download/mongodb_mongo500.cpp
d526f86f4c409ea746bae4ef0b31a13f4db34c60,SERVER-25702 added server parameter for oplog fetcher max fetcher restarts,src/mongo/db/repl/replication_coordinator_impl.cpp,+,options.oplogFetcherMaxFetcherRestarts = externalState->getOplogFetcherMaxFetcherRestarts();,300,download/mongodb_mongo501.cpp
3a372a491db4c852dfb2258594a1b3b2846c3d5a,SERVER-25314 lock sharded database while dropping,src/mongo/s/config.cpp,+,"LOG(1) << ""\t dropping sharded collection: "" << aCollection;",679,download/mongodb_mongo502.cpp
3a372a491db4c852dfb2258594a1b3b2846c3d5a,SERVER-25314 lock sharded database while dropping,src/mongo/s/config.cpp,+,"uassertStatusOK(grid.catalogClient(txn)->dropCollection(txn, NamespaceString(aCollection)));",686,download/mongodb_mongo502.cpp
b09ced0d5e3036bd742c989e1483037fe83458bb,SERVER-26222 MigrationManager::_abandonActiveMigrationsAndEnableManager should accept and handle kStopping state,src/mongo/s/balancer/balancer.cpp,+,"log() << ""CSRS balancer thread is recovering"";",330,download/mongodb_mongo503.cpp
b09ced0d5e3036bd742c989e1483037fe83458bb,SERVER-26222 MigrationManager::_abandonActiveMigrationsAndEnableManager should accept and handle kStopping state,src/mongo/s/balancer/balancer.cpp,+,"log() << ""CSRS balancer thread is recovered"";",344,download/mongodb_mongo503.cpp
715d30ff455e61fd9a729e6f25f578caf4970e97,SERVER-25403 DataReplicator initial sync should be resilient to applier failures.,src/mongo/db/repl/sync_tail.cpp,+,initializeWriterThread();,1163,download/mongodb_mongo504.cpp
40b4b8442db727b89579a12345c1bb37959542d4,"SERVER-26204 Mark _configsvrMoveChunk as supportsWriteConcern

This is necessary in order to have the command subsystem fail it if this
command is called with anything other than majority write concern.",src/mongo/s/request_types/balance_chunk_request_type.cpp,+,"const WriteConcernOptions kMajorityWriteConcernNoTimeout(WriteConcernOptions::kMajority,",47,download/mongodb_mongo505.cpp
c66a623167c156f953781949deef68b07ee1b9f0,"SERVER-26139 Abandon snapshot after spawning a background index build

Also adds extra logging to help debug similar future issues.",src/mongo/db/catalog/index_catalog.cpp,+,"LOG(2) << ""marking index "" << _indexName << "" as ready in snapshot id """,419,download/mongodb_mongo506.cpp
c66a623167c156f953781949deef68b07ee1b9f0,"SERVER-26139 Abandon snapshot after spawning a background index build

Also adds extra logging to help debug similar future issues.",src/mongo/db/storage/wiredtiger/wiredtiger_recovery_unit.cpp,+,"LOG(3) << ""WT commit_transaction for snapshot id "" << _mySnapshotId;",206,download/mongodb_mongo507.cpp
c66a623167c156f953781949deef68b07ee1b9f0,"SERVER-26139 Abandon snapshot after spawning a background index build

Also adds extra logging to help debug similar future issues.",src/mongo/db/storage/wiredtiger/wiredtiger_recovery_unit.cpp,+,"LOG(3) << ""WT rollback_transaction for snapshot id "" << _mySnapshotId;",209,download/mongodb_mongo507.cpp
c66a623167c156f953781949deef68b07ee1b9f0,"SERVER-26139 Abandon snapshot after spawning a background index build

Also adds extra logging to help debug similar future issues.",src/mongo/db/storage/wiredtiger/wiredtiger_recovery_unit.cpp,+,"LOG(3) << ""WT begin_transaction for snapshot id "" << _mySnapshotId;",251,download/mongodb_mongo507.cpp
8d83bf3557329eb3d1747659e6ca310cbdb2343c,SERVER-25702 refactor OplogFetcher - convert owned Fetcher to a unique_ptr to support future restartability changes,src/mongo/db/repl/oplog_fetcher.cpp,+,"OplogFetcher::OplogFetcher(executor::TaskExecutor* executor,",244,download/mongodb_mongo508.cpp
8d83bf3557329eb3d1747659e6ca310cbdb2343c,SERVER-25702 refactor OplogFetcher - convert owned Fetcher to a unique_ptr to support future restartability changes,src/mongo/db/repl/oplog_fetcher.cpp,+,"_metadataObject(uassertStatusOK(makeMetadataObject(config.getProtocolVersion() == 1LL))),",257,download/mongodb_mongo508.cpp
8d83bf3557329eb3d1747659e6ca310cbdb2343c,SERVER-25702 refactor OplogFetcher - convert owned Fetcher to a unique_ptr to support future restartability changes,src/mongo/db/repl/oplog_fetcher.cpp,+,"error() << ""invalid replication metadata from sync source "" << _fetcher->getSource()",346,download/mongodb_mongo508.cpp
31c4b8293f2607f38cacf132d8c755e1e04784fb,SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,auto distLockManager = Grid::get(txn)->catalogClient(txn)->getDistLockManager();,726,download/mongodb_mongo509.cpp
31c4b8293f2607f38cacf132d8c755e1e04784fb,SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary,src/mongo/s/balancer/balancer.cpp,+,"log() << ""CSRS balancer thread is recovering"";",330,download/mongodb_mongo510.cpp
31c4b8293f2607f38cacf132d8c755e1e04784fb,SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary,src/mongo/s/balancer/balancer.cpp,+,"log() << ""CSRS balancer thread is recovered"";",339,download/mongodb_mongo510.cpp
31c4b8293f2607f38cacf132d8c755e1e04784fb,SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary,src/mongo/s/balancer/migration_manager.cpp,+,->catalogClient(txn),354,download/mongodb_mongo511.cpp
31c4b8293f2607f38cacf132d8c755e1e04784fb,SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary,src/mongo/s/balancer/migration_manager.cpp,+,"->tryLockWithLocalWriteConcern(txn, migrateInfo.ns, whyMessage, _lockSessionID);",356,download/mongodb_mongo511.cpp
96a21e63bfc1a1cdde01c671d0867310c594ea5a,"SERVER-25725 Kill 3.2 secondaries when featureCompatibilityVersion=3.4.

Creates a v=2 index on the ""admin.system.version"" collection when the
featureCompatibilityVersion is set to 3.4. The index version of this
index is returned as a decimal value in the ""listIndexes"" command
response in order to prevent 3.2 secondaries from performing initial
sync from a 3.4 mongod with featureCompatibilityVersion=3.4.",src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(status);,207,download/mongodb_mongo512.cpp
96a21e63bfc1a1cdde01c671d0867310c594ea5a,"SERVER-25725 Kill 3.2 secondaries when featureCompatibilityVersion=3.4.

Creates a v=2 index on the ""admin.system.version"" collection when the
featureCompatibilityVersion is set to 3.4. The index version of this
index is returned as a decimal value in the ""listIndexes"" command
response in order to prevent 3.2 secondaries from performing initial
sync from a 3.4 mongod with featureCompatibilityVersion=3.4.",src/mongo/db/commands/feature_compatibility_version.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(txn, ""FeatureCompatibilityVersion::set"", nss.ns());",215,download/mongodb_mongo512.cpp
96a21e63bfc1a1cdde01c671d0867310c594ea5a,"SERVER-25725 Kill 3.2 secondaries when featureCompatibilityVersion=3.4.

Creates a v=2 index on the ""admin.system.version"" collection when the
featureCompatibilityVersion is set to 3.4. The index version of this
index is returned as a decimal value in the ""listIndexes"" command
response in order to prevent 3.2 secondaries from performing initial
sync from a 3.4 mongod with featureCompatibilityVersion=3.4.",src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(getStatusFromCommandResult(updateResult));,226,download/mongodb_mongo512.cpp
96a21e63bfc1a1cdde01c671d0867310c594ea5a,"SERVER-25725 Kill 3.2 secondaries when featureCompatibilityVersion=3.4.

Creates a v=2 index on the ""admin.system.version"" collection when the
featureCompatibilityVersion is set to 3.4. The index version of this
index is returned as a decimal value in the ""listIndexes"" command
response in order to prevent 3.2 secondaries from performing initial
sync from a 3.4 mongod with featureCompatibilityVersion=3.4.",src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(getWriteConcernStatusFromCommandResult(updateResult));,227,download/mongodb_mongo512.cpp
96a21e63bfc1a1cdde01c671d0867310c594ea5a,"SERVER-25725 Kill 3.2 secondaries when featureCompatibilityVersion=3.4.

Creates a v=2 index on the ""admin.system.version"" collection when the
featureCompatibilityVersion is set to 3.4. The index version of this
index is returned as a decimal value in the ""listIndexes"" command
response in order to prevent 3.2 secondaries from performing initial
sync from a 3.4 mongod with featureCompatibilityVersion=3.4.",src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(getStatusFromCommandResult(updateResult));,240,download/mongodb_mongo512.cpp
96a21e63bfc1a1cdde01c671d0867310c594ea5a,"SERVER-25725 Kill 3.2 secondaries when featureCompatibilityVersion=3.4.

Creates a v=2 index on the ""admin.system.version"" collection when the
featureCompatibilityVersion is set to 3.4. The index version of this
index is returned as a decimal value in the ""listIndexes"" command
response in order to prevent 3.2 secondaries from performing initial
sync from a 3.4 mongod with featureCompatibilityVersion=3.4.",src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(status);,253,download/mongodb_mongo512.cpp
96a21e63bfc1a1cdde01c671d0867310c594ea5a,"SERVER-25725 Kill 3.2 secondaries when featureCompatibilityVersion=3.4.

Creates a v=2 index on the ""admin.system.version"" collection when the
featureCompatibilityVersion is set to 3.4. The index version of this
index is returned as a decimal value in the ""listIndexes"" command
response in order to prevent 3.2 secondaries from performing initial
sync from a 3.4 mongod with featureCompatibilityVersion=3.4.",src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(getWriteConcernStatusFromCommandResult(dropIndexesResult));,255,download/mongodb_mongo512.cpp
96a21e63bfc1a1cdde01c671d0867310c594ea5a,"SERVER-25725 Kill 3.2 secondaries when featureCompatibilityVersion=3.4.

Creates a v=2 index on the ""admin.system.version"" collection when the
featureCompatibilityVersion is set to 3.4. The index version of this
index is returned as a decimal value in the ""listIndexes"" command
response in order to prevent 3.2 secondaries from performing initial
sync from a 3.4 mongod with featureCompatibilityVersion=3.4.",src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(status);,277,download/mongodb_mongo512.cpp
5caef723f0f0dc52636d10e05a0ae8da8985e94b,SERVER-26190 Use waitForConditionOrInterruptNoAssert instead of directly passing a deadline,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"txn->waitForConditionOrInterruptNoAssert(_currentCommittedSnapshotCond, lock);",1247,download/mongodb_mongo513.cpp
5caef723f0f0dc52636d10e05a0ae8da8985e94b,SERVER-26190 Use waitForConditionOrInterruptNoAssert instead of directly passing a deadline,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"auto waitStatus = txn->waitForConditionOrInterruptNoAssert(condVar, lock);",1264,download/mongodb_mongo513.cpp
9045e1a530fc4558773b9cb3cf9da51e27526d5d,SERVER-25894 Run _configsvrAddShard with w:majority write concern,src/mongo/s/request_types/add_shard_request_type.cpp,+,"const WriteConcernOptions kMajorityWriteConcern(WriteConcernOptions::kMajority,",53,download/mongodb_mongo514.cpp
5ad451cf32d8b42f9f7ae0ca61dbb7dff94c875d,"Revert ""SERVER-26155 Use read concern 'local' for dist lock manager on the config server""

This reverts commit aed4f47200abff44605fc39f078601ebb0c316c7.",src/mongo/s/catalog/replset/dist_lock_catalog_impl.cpp,+,DistLockCatalogImpl::DistLockCatalogImpl(ShardRegistry* shardRegistry),136,download/mongodb_mongo515.cpp
afdca9e2978e55b29a2b01e4cad55c794afca65e,SERVER-17358 Add flag to customize maxLogLine when logging large lines,src/mongo/db/server_extra_log_context.cpp,+,int getMaxLogSizeKB() {,74,download/mongodb_mongo516.cpp
7f9e2b66e0030b2d5dd1dca8ee7358cf48172a02,SERVER-26188 Check for more possible interrupt error codes in Balancer code,src/mongo/s/balancer/migration_manager.cpp,+,bool isInterruptError(Status status) {,138,download/mongodb_mongo517.cpp
7f9e2b66e0030b2d5dd1dca8ee7358cf48172a02,SERVER-26188 Check for more possible interrupt error codes in Balancer code,src/mongo/s/balancer/migration_manager.cpp,+,ErrorCodes::isShutdownError(status.code()));,141,download/mongodb_mongo517.cpp
7f9e2b66e0030b2d5dd1dca8ee7358cf48172a02,SERVER-26188 Check for more possible interrupt error codes in Balancer code,src/mongo/s/balancer/migration_manager.cpp,+,if (isInterruptError(responseStatus)) {,204,download/mongodb_mongo517.cpp
7f9e2b66e0030b2d5dd1dca8ee7358cf48172a02,SERVER-26188 Check for more possible interrupt error codes in Balancer code,src/mongo/s/balancer/migration_manager.cpp,+,if (isInterruptError(responseStatus)) {,235,download/mongodb_mongo517.cpp
7f9e2b66e0030b2d5dd1dca8ee7358cf48172a02,SERVER-26188 Check for more possible interrupt error codes in Balancer code,src/mongo/s/balancer/migration_manager.cpp,+,if (isInterruptError(status)) {,288,download/mongodb_mongo517.cpp
ad9f3df970b0b7d2465268e1d34d5198d7296298,SERVER-26190 Make waitUntilOpTimeForRead interruptible,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"LOG(3) << ""waitUntilOpTime: waiting for a new snapshot until "" << txn->getDeadline();",1258,download/mongodb_mongo518.cpp
ad9f3df970b0b7d2465268e1d34d5198d7296298,SERVER-26190 Make waitUntilOpTimeForRead interruptible,src/mongo/db/repl/replication_coordinator_impl.cpp,+,auto waitStatus = txn->waitForConditionOrInterruptNoAssertUntil(,1260,download/mongodb_mongo518.cpp
ad9f3df970b0b7d2465268e1d34d5198d7296298,SERVER-26190 Make waitUntilOpTimeForRead interruptible,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"LOG(3) << ""waituntilOpTime: waiting for OpTime "" << waitInfo.waiter << "" until """,1263,download/mongodb_mongo518.cpp
ad9f3df970b0b7d2465268e1d34d5198d7296298,SERVER-26190 Make waitUntilOpTimeForRead interruptible,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"txn->waitForConditionOrInterruptNoAssertUntil(condVar, lock, txn->getDeadline());",1267,download/mongodb_mongo518.cpp
493aede8171057c8a0d14d567fae6236c1a0b995,SERVER-26144 add additional logging to ScopedMigrationRequest to aid debugging the balancer,src/mongo/s/balancer/scoped_migration_request.cpp,+,Status result = grid.catalogClient(txn)->insertConfigDocument(,122,download/mongodb_mongo519.cpp
493aede8171057c8a0d14d567fae6236c1a0b995,SERVER-26144 add additional logging to ScopedMigrationRequest to aid debugging the balancer,src/mongo/s/balancer/scoped_migration_request.cpp,+,"log() << ""Failed to write document '"" << redact(migrateInfo.toString())",170,download/mongodb_mongo519.cpp
493aede8171057c8a0d14d567fae6236c1a0b995,SERVER-26144 add additional logging to ScopedMigrationRequest to aid debugging the balancer,src/mongo/s/balancer/scoped_migration_request.cpp,+,"LOG(1) << ""Keeping config.migrations document with namespace '"" << _nss << ""' and minKey '""",184,download/mongodb_mongo519.cpp
5053f4f67527df0d6ed92fe20fb660ab8e003e1d,"Revert ""SERVER-25942 Don't validate views in listCollections unless they are being returned""

This reverts commit 079836dc8be3c89fb474c6f7c006154a626c6dac.",src/mongo/db/commands/list_collections.cpp,+,"db->getViewCatalog()->iterate(txn, [&](const ViewDefinition& view) {",278,download/mongodb_mongo520.cpp
079836dc8be3c89fb474c6f7c006154a626c6dac,SERVER-25942 Don't validate views in listCollections unless they are being returned,src/mongo/db/commands/list_collections.cpp,+,"db->getViewCatalog()->iterate(txn, [&](const ViewDefinition& view) {",281,download/mongodb_mongo521.cpp
79217aff3a1b4be7ec325a802d8601b489efce97,SERVER-25268 added OplogBufferProxy. caches front and back values of the underlying OplogBuffer,src/mongo/db/repl/oplog_buffer_proxy.cpp,+,OplogBufferProxy::OplogBufferProxy(std::unique_ptr<OplogBuffer> target),38,download/mongodb_mongo522.cpp
acd6a7824dca76a94ee872d9e86df9487f406fd2,SERVER-26107 Improve logging around sharding metadata refresh in MetadataManager,src/mongo/db/s/metadata_manager.cpp,+,"log() << ""Marking collection "" << _nss.ns() << "" with """,87,download/mongodb_mongo523.cpp
acd6a7824dca76a94ee872d9e86df9487f406fd2,SERVER-26107 Improve logging around sharding metadata refresh in MetadataManager,src/mongo/db/s/metadata_manager.cpp,+,"log() << ""Marking collection "" << _nss.ns() << "" as sharded with """,99,download/mongodb_mongo523.cpp
acd6a7824dca76a94ee872d9e86df9487f406fd2,SERVER-26107 Improve logging around sharding metadata refresh in MetadataManager,src/mongo/db/s/metadata_manager.cpp,+,"log() << ""Overwriting metadata for collection "" << _nss.ns() << "" from """,112,download/mongodb_mongo523.cpp
acd6a7824dca76a94ee872d9e86df9487f406fd2,SERVER-26107 Improve logging around sharding metadata refresh in MetadataManager,src/mongo/db/s/metadata_manager.cpp,+,"LOG(1) << ""Ignoring refresh of active metadata """,125,download/mongodb_mongo523.cpp
acd6a7824dca76a94ee872d9e86df9487f406fd2,SERVER-26107 Improve logging around sharding metadata refresh in MetadataManager,src/mongo/db/s/metadata_manager.cpp,+,"LOG(1) << ""Refreshing metadata for collection "" << _nss.ns() << "" from """,132,download/mongodb_mongo523.cpp
acd6a7824dca76a94ee872d9e86df9487f406fd2,SERVER-26107 Improve logging around sharding metadata refresh in MetadataManager,src/mongo/db/s/metadata_manager.cpp,+,"LOG(2) << ""Verified chunk "" << redact(ChunkRange(min, max).toString())",145,download/mongodb_mongo523.cpp
f5ee90d15c8f7f723049924d6acc804c6790e278,SERVER-26145 Do not fassert at shutdown during move chunk commit,src/mongo/db/s/migration_source_manager.cpp,+,ErrorCodes::isShutdownError(status.code())) &&,403,download/mongodb_mongo524.cpp
f5ee90d15c8f7f723049924d6acc804c6790e278,SERVER-26145 Do not fassert at shutdown during move chunk commit,src/mongo/db/s/migration_source_manager.cpp,+,"fassertStatusOK(40137,",410,download/mongodb_mongo524.cpp
84f37a114b74032547cf585899d82243a65699ce,"Revert ""SERVER-26145 Do not fassert at shutdown during move chunk commit""

This reverts commit dece96ba0408446ca034a7c897ab890a80d901ef.",src/mongo/db/s/migration_source_manager.cpp,+,"fassertStatusOK(40137,",395,download/mongodb_mongo525.cpp
7c6c92e3cd514a156a49ae9e5139ea66d324c004,SERVER-17358 Add flag to customize maxLogLine when logging large lines,src/mongo/db/server_extra_log_context.cpp,+,int getMaxLogSizeKB() {,74,download/mongodb_mongo526.cpp
aed4f47200abff44605fc39f078601ebb0c316c7,SERVER-26155 Use read concern 'local' for dist lock manager on the config server,src/mongo/s/catalog/replset/dist_lock_catalog_impl.cpp,+,"DistLockCatalogImpl::DistLockCatalogImpl(ShardRegistry* shardRegistry, bool isLocal)",131,download/mongodb_mongo527.cpp
6350b1f9f11a8f4971f15859426a0c991be39205,"SERVER-25009 when ReplicaSetMonitor::get() fails, report name",src/mongo/client/parallel.cpp,+,"uassert(16388,",413,download/mongodb_mongo528.cpp
b0f32d915624ec84ff75bca5b6364837708ad035,SERVER-25662: print initial sync time in seconds,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync done; took """,812,download/mongodb_mongo529.cpp
80f03c60dfb174636bd9030d5113c1141fee3b30,SERVER-26043: Compact local database after initial sync,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,Lock::GlobalWrite globalWrite(txn->lockState());,319,download/mongodb_mongo530.cpp
80f03c60dfb174636bd9030d5113c1141fee3b30,SERVER-26043: Compact local database after initial sync,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,txn->setReplicatedWrites(false);,326,download/mongodb_mongo530.cpp
80f03c60dfb174636bd9030d5113c1141fee3b30,SERVER-26043: Compact local database after initial sync,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"Lock::DBLock dbWriteLock(txn->lockState(), localDbName, MODE_X);",466,download/mongodb_mongo530.cpp
80f03c60dfb174636bd9030d5113c1141fee3b30,SERVER-26043: Compact local database after initial sync,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"Lock::DBLock dbWriteLock(txn->lockState(), localDbName, MODE_X);",504,download/mongodb_mongo530.cpp
80f03c60dfb174636bd9030d5113c1141fee3b30,SERVER-26043: Compact local database after initial sync,src/mongo/db/repl/replication_coordinator_impl.cpp,+,uassertStatusOK(_externalState->runRepairOnLocalDB(txn));,633,download/mongodb_mongo531.cpp
fd19ddff758912365f22813d2ec8c93688676144,SERVER-24527 add test to ensure shard undergoes sharding initialization through setShardVersion,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"LOG(2) << ""going to insert shardIdentity document into shard: "" << shardType;",839,download/mongodb_mongo532.cpp
fd19ddff758912365f22813d2ec8c93688676144,SERVER-24527 add test to ensure shard undergoes sharding initialization through setShardVersion,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"Shard::CommandResponse::processBatchWriteResponse(commandResponse, &batchResponse);",860,download/mongodb_mongo532.cpp
689940149701364a6beaee7e2d95effb84bcfb31,SERVER-26099 Use separate thread to interrupt migration manager on stepdown,src/mongo/s/balancer/balancer.cpp,+,"LOG(1) << ""Balancer thread terminated"";",252,download/mongodb_mongo533.cpp
dece96ba0408446ca034a7c897ab890a80d901ef,SERVER-26145 Do not fassert at shutdown during move chunk commit,src/mongo/db/s/migration_source_manager.cpp,+,"fassertStatusOK(40137,",408,download/mongodb_mongo534.cpp
be5bbd938a75d5532ed52df03f6e17ef818a3f66,"SERVER-25009 check null ReplicaSetMonitor::get(), connection string",src/mongo/client/parallel.cpp,+,"uassert(16388, ""cannot access unknown replica set:"", rsMonitor != nullptr);",413,download/mongodb_mongo535.cpp
be5bbd938a75d5532ed52df03f6e17ef818a3f66,"SERVER-25009 check null ReplicaSetMonitor::get(), connection string",src/mongo/client/remote_command_targeter_rs.cpp,+,return uassertStatusOK(ConnectionString::parse(_rsMonitor->getServerAddress()));,60,download/mongodb_mongo536.cpp
f4600bb330c1ed7975fe4ec7562dbda40efb2d8f,SERVER-25948 dbStats should indicate number of views,src/mongo/db/catalog/database.cpp,+,"getViewCatalog()->iterate(opCtx, [&](const ViewDefinition& view) { nViews += 1; });",354,download/mongodb_mongo537.cpp
dc83fb0433fcae6e72f035df7458473b59223eb5,"SERVER-26016 Add a basic test of oplog replay on startup

Fixes a small but important bug in SERVER-7200.",src/mongo/db/catalog/index_create.cpp,+,"log() << ""Hanging index build with no locks due to """,343,download/mongodb_mongo538.cpp
dc83fb0433fcae6e72f035df7458473b59223eb5,"SERVER-26016 Add a basic test of oplog replay on startup

Fixes a small but important bug in SERVER-7200.",src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,fassertFailedNoTrace(40313);,539,download/mongodb_mongo539.cpp
f0d958c747cfc42dd831eb2f088e963475c0ed54,SERVER-16725 Incorrect character conversion between UTF-8 and UTF-16,src/mongo/util/processinfo.cpp,+,bool write(const boost::filesystem::path& p) {,58,download/mongodb_mongo540.cpp
f0d958c747cfc42dd831eb2f088e963475c0ed54,SERVER-16725 Incorrect character conversion between UTF-8 and UTF-16,src/mongo/util/processinfo.cpp,+,"log() << ""ERROR: Cannot write pid file to "" << path.string()",65,download/mongodb_mongo540.cpp
f0d958c747cfc42dd831eb2f088e963475c0ed54,SERVER-16725 Incorrect character conversion between UTF-8 and UTF-16,src/mongo/util/processinfo.cpp,+,"log() << ""ERROR: Cannot write pid file to "" << path.string() << "": """,68,download/mongodb_mongo540.cpp
e3b42fd990070f48c11b233cec0c198098d1a48f,SERVER-26002 Make sure javascript sleep isn't interrupted,src/mongo/scripting/mozjs/mongo.cpp,+,uassert(,101,download/mongodb_mongo541.cpp
e3b42fd990070f48c11b233cec0c198098d1a48f,SERVER-26002 Make sure javascript sleep isn't interrupted,src/mongo/util/net/sock.cpp,+,"handleSendError(ret, context);",455,download/mongodb_mongo542.cpp
c17b1c84bc6c18a47e4215d6b6238ae12d6854fc,"Revert ""SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary""

This reverts commit f8212b6b37bea1bead354df86e8485761a519339.",src/mongo/s/balancer/balancer.cpp,+,"log() << ""CSRS balancer thread for cluster "" << clusterIdentity << "" is recovering"";",319,download/mongodb_mongo543.cpp
c17b1c84bc6c18a47e4215d6b6238ae12d6854fc,"Revert ""SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary""

This reverts commit f8212b6b37bea1bead354df86e8485761a519339.",src/mongo/s/balancer/balancer.cpp,+,"log() << ""CSRS balancer thread for cluster "" << clusterIdentity << "" is recovered"";",328,download/mongodb_mongo543.cpp
f8212b6b37bea1bead354df86e8485761a519339,SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,auto distLockManager = Grid::get(txn)->catalogClient(txn)->getDistLockManager();,698,download/mongodb_mongo544.cpp
f8212b6b37bea1bead354df86e8485761a519339,SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary,src/mongo/s/balancer/balancer.cpp,+,"log() << ""CSRS balancer thread is recovering"";",318,download/mongodb_mongo545.cpp
f8212b6b37bea1bead354df86e8485761a519339,SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary,src/mongo/s/balancer/balancer.cpp,+,"log() << ""CSRS balancer thread is recovered"";",327,download/mongodb_mongo545.cpp
f8212b6b37bea1bead354df86e8485761a519339,SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary,src/mongo/s/balancer/migration_manager.cpp,+,->catalogClient(txn),341,download/mongodb_mongo546.cpp
f8212b6b37bea1bead354df86e8485761a519339,SERVER-25905 Release all config held distlocks and reacquire balancer distlocks in drain mode on config step up to primary,src/mongo/s/balancer/migration_manager.cpp,+,"->tryLockWithLocalWriteConcern(txn, migrateInfo.ns, whyMessage, _lockSessionID);",343,download/mongodb_mongo546.cpp
5b0901ea6a1b9b90d2cee8263b8c60013d7c6979,SERVER-25458 unit tests for ShardingState::initializeShardingAwarenessIfNeeded,src/mongo/db/db.cpp,+,uassertStatusOK(ShardingState::get(startupOpCtx.get()),741,download/mongodb_mongo547.cpp
7b6cf36cb72558ed199f4ecde945ac3723229c3a,"SERVER-23135 properly print context on js load

This patch ensures that we print the correct filename and line number
for syntax errors encountered in included js files via `load()`.",src/mongo/scripting/mozjs/implscope.cpp,+,"ss << ValueWriter(_context, excn).toString();",861,download/mongodb_mongo548.cpp
1116c9d3d903e103d2fc6c3ce792134808cc8691,SERVER-26106 raise oplog socket timeout for rollback,src/mongo/db/repl/bgsync.cpp,+,const Milliseconds kRollbackOplogSocketTimeout(10 * 60 * 1000);,71,download/mongodb_mongo549.cpp
4dc41d135737dbda0a9ecc70af75687dd5df9099,SERVER-26033 Allow simple range to exclude start key,src/mongo/db/exec/index_scan.cpp,+,dassert(_startKeyInclusive);,161,download/mongodb_mongo550.cpp
4dc41d135737dbda0a9ecc70af75687dd5df9099,SERVER-26033 Allow simple range to exclude start key,src/mongo/db/exec/index_scan.cpp,+,dassert(_forward ? cmp >= 0 : cmp <= 0);,162,download/mongodb_mongo550.cpp
b3c5f0b330935d34f3d8cba63515ed0174d481bd,"SERVER-26089 Remove incorrect assertion from migration commit

Enables the bulk_shard_insert.js test in the continuous stepdown suite and
removes incorrect assertion from the migration commit code.",src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""moveChunk updated collection '"" << _args.getNss().ns()",461,download/mongodb_mongo551.cpp
b3c5f0b330935d34f3d8cba63515ed0174d481bd,"SERVER-26089 Remove incorrect assertion from migration commit

Enables the bulk_shard_insert.js test in the continuous stepdown suite and
removes incorrect assertion from the migration commit code.",src/mongo/db/s/migration_source_manager.cpp,+,"log() << ""moveChunk failed to refresh metadata for collection '"" << _args.getNss().ns()",495,download/mongodb_mongo551.cpp
9e82c37fe2430940b2184ca3a44eddc6c61f4db0,"SERVER-26013 Remove default arguments from DistLockManager

In addition, restores the default values for merge and split chunk, which
were broken as part of commit c62a0d7c882e99d3b255e26ade7baaa0d18244cb.",src/mongo/db/s/merge_chunks_command.cpp,+,auto scopedDistLock = grid.catalogClient(txn)->getDistLockManager()->lock(,90,download/mongodb_mongo552.cpp
9e82c37fe2430940b2184ca3a44eddc6c61f4db0,"SERVER-26013 Remove default arguments from DistLockManager

In addition, restores the default values for merge and split chunk, which
were broken as part of commit c62a0d7c882e99d3b255e26ade7baaa0d18244cb.",src/mongo/db/s/split_chunk_command.cpp,+,auto scopedDistLock = grid.catalogClient(txn)->getDistLockManager()->lock(,259,download/mongodb_mongo553.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/db/catalog/database.cpp,+,uassertStatusOK(ic->createIndexOnEmptyCollection(,591,download/mongodb_mongo554.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/db/cloner.cpp,+,"uassert(10024, ""bad ns field for index during dbcopy"", indexSpecElem.type() == String);",120,download/mongodb_mongo555.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/db/cloner.cpp,+,auto indexInfoObjs = uassertStatusOK(indexer.init(indexesToBuild));,380,download/mongodb_mongo555.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/db/cloner.cpp,+,auto indexInfoObjs = uassertStatusOK(indexer.init(,679,download/mongodb_mongo555.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/db/cloner.cpp,+,c->getIndexCatalog()->getDefaultIdIndexSpec(featureCompatibilityVersion)));,680,download/mongodb_mongo555.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/db/commands/create_indexes.cpp,+,indexInfoObjs = uassertStatusOK(indexer.init(specs));,329,download/mongodb_mongo556.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/db/repl/oplog.cpp,+,"uassertStatusOK(bsonExtractStringField(indexSpec, ""ns"", &indexNs));",717,download/mongodb_mongo557.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/db/repl/oplog.cpp,+,"LOG(3) << ""apply op: building background index "" << indexSpec",750,download/mongodb_mongo557.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/dbtests/indexcatalogtests.cpp,+,ASSERT_OK(dbtests::createIndexFromSpec(,146,download/mongodb_mongo558.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/dbtests/indexupdatetests.cpp,+,ASSERT_OK(indexer.init(spec).getStatus());,390,download/mongodb_mongo559.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/dbtests/indexupdatetests.cpp,+,ASSERT_OK(indexer.init(spec).getStatus());,444,download/mongodb_mongo559.cpp
8302d0735b34a16cac000e5e345722487536e5bc,"SERVER-24033 Write full index spec in oplog entry for index creation.

This ensures that the index version (aka the ""v"" field) is always
present in the oplog entry when creating indexes on a 3.4 primary.
We can therefore assume that if the ""v"" field isn't present in the
corresponding oplog entry, then a v=1 index should be built.

Changes MultiBlockIndex::init() to return the index specifications
that were actually created.

The ""repairDatabase"", ""compact"", ""copydb"", and ""cloneCollection""
commands no longer automatically upgrade the index version to the
current default version. Instead, the only command that does so is
the ""reIndex"" command.",src/mongo/dbtests/indexupdatetests.cpp,+,ASSERT_OK(indexer.init(spec).getStatus());,497,download/mongodb_mongo559.cpp
96584082d979a932446f2948f3126e63b02b74af,SERVER-24811 TopologyCoordinator::prepareFreezeResponse returns next action; error if primary or running election.,src/mongo/db/repl/topology_coordinator_impl.cpp,+,log() << msg;,1781,download/mongodb_mongo560.cpp
96584082d979a932446f2948f3126e63b02b74af,SERVER-24811 TopologyCoordinator::prepareFreezeResponse returns next action; error if primary or running election.,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"log() << ""'freezing' for "" << secs << "" seconds"";",1805,download/mongodb_mongo560.cpp
3596a4fb09b31c955d95fbe17db0492589c96f03,SERVER-24866 Balancer recovery,src/mongo/s/balancer/balancer.cpp,+,"log() << ""CSRS balancer thread for cluster "" << clusterIdentity << "" is recovering"";",325,download/mongodb_mongo561.cpp
3596a4fb09b31c955d95fbe17db0492589c96f03,SERVER-24866 Balancer recovery,src/mongo/s/balancer/balancer.cpp,+,"log() << ""CSRS balancer thread for cluster "" << clusterIdentity << "" is recovered"";",334,download/mongodb_mongo561.cpp
3596a4fb09b31c955d95fbe17db0492589c96f03,SERVER-24866 Balancer recovery,src/mongo/s/balancer/migration_manager.cpp,+,"const WriteConcernOptions kMajorityWriteConcern(WriteConcernOptions::kMajority,",66,download/mongodb_mongo562.cpp
3596a4fb09b31c955d95fbe17db0492589c96f03,SERVER-24866 Balancer recovery,src/mongo/s/balancer/migration_manager.cpp,+,"ScopedMigrationRequest::writeMigration(txn, migrateInfo);",184,download/mongodb_mongo562.cpp
3596a4fb09b31c955d95fbe17db0492589c96f03,SERVER-24866 Balancer recovery,src/mongo/s/balancer/migration_manager.cpp,+,"ScopedMigrationRequest::writeMigration(txn, migrateInfo);",234,download/mongodb_mongo562.cpp
3596a4fb09b31c955d95fbe17db0492589c96f03,SERVER-24866 Balancer recovery,src/mongo/s/balancer/migration_manager.cpp,+,"ScopedMigrationRequest::writeMigration(txn, migrateInfo);",248,download/mongodb_mongo562.cpp
3596a4fb09b31c955d95fbe17db0492589c96f03,SERVER-24866 Balancer recovery,src/mongo/s/balancer/migration_manager.cpp,+,Grid::get(txn)->catalogClient(txn)->getDistLockManager()->unlock(,391,download/mongodb_mongo562.cpp
3596a4fb09b31c955d95fbe17db0492589c96f03,SERVER-24866 Balancer recovery,src/mongo/s/balancer/migration_manager.cpp,+,auto catalogClient = Grid::get(txn)->catalogClient(txn);,705,download/mongodb_mongo562.cpp
3596a4fb09b31c955d95fbe17db0492589c96f03,SERVER-24866 Balancer recovery,src/mongo/s/balancer/scoped_migration_request.cpp,+,"log() << ""Failed to write document '"" << migrateInfo",131,download/mongodb_mongo563.cpp
4f211b037feac1d4c80d65df5a0fae12fcac1e4c,SERVER-25688 Allow $bucketAuto to spill to disk.,src/mongo/db/pipeline/document_source_bucket_auto.cpp,+,"uassert(40243,",363,download/mongodb_mongo564.cpp
e41a6af318925f48e5626dd36a17531183e5aac2,SERVER-25950 Improve efficiency of Dependencies::extractFields(),src/mongo/db/pipeline/dependencies.cpp,+,dassert(isNeeded.getType() == Object);,179,download/mongodb_mongo565.cpp
af0be10862e7a9643586fc2bd1898189a2a6c8cb,SERVER-25151 Honor ssl=true/false in URIs in the shell,src/mongo/client/dbclient.cpp,+,"uassert(40312, ""SSL is not enabled; cannot create an SSL connection"", sslManager());",919,download/mongodb_mongo566.cpp
15a614f37f91736e01580893d47c39cc7df9aa1c,"Revert ""SERVER-25151 Honor 'ssl' option in URIs passed to the shell""

This reverts commit 7c3878adaf73736c33c7f65b718d8b5705c36142.",src/mongo/scripting/mozjs/mongo.cpp,+,auto cs = uassertStatusOK(statusWithHost);,688,download/mongodb_mongo567.cpp
15a614f37f91736e01580893d47c39cc7df9aa1c,"Revert ""SERVER-25151 Honor 'ssl' option in URIs passed to the shell""

This reverts commit 7c3878adaf73736c33c7f65b718d8b5705c36142.",src/mongo/util/net/listen.cpp,+,"_logListen(_port, _ssl);",269,download/mongodb_mongo568.cpp
15a614f37f91736e01580893d47c39cc7df9aa1c,"Revert ""SERVER-25151 Honor 'ssl' option in URIs passed to the shell""

This reverts commit 7c3878adaf73736c33c7f65b718d8b5705c36142.",src/mongo/util/net/listen.cpp,+,"_logListen(_port, _ssl);",435,download/mongodb_mongo568.cpp
15a614f37f91736e01580893d47c39cc7df9aa1c,"Revert ""SERVER-25151 Honor 'ssl' option in URIs passed to the shell""

This reverts commit 7c3878adaf73736c33c7f65b718d8b5705c36142.",src/mongo/util/net/listen.cpp,+,"void Listener::_logListen(int port, bool ssl) {",582,download/mongodb_mongo568.cpp
15a614f37f91736e01580893d47c39cc7df9aa1c,"Revert ""SERVER-25151 Honor 'ssl' option in URIs passed to the shell""

This reverts commit 7c3878adaf73736c33c7f65b718d8b5705c36142.",src/mongo/util/net/ssl_manager.cpp,+,"NULL != getSSLManager() ? getSSLManager()->getSSLErrorMessage(ERR_get_error()) : """";",434,download/mongodb_mongo569.cpp
0c8ffece21a601fe3861aba6cc191b2ce1be0f54,"SERVER-26077 Tighten checks around migration session id

Transmits the migration session id together with the abort command and
ensures that the migration session id reported in the status matches that
of the cloner.",src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""Starting receiving end of migration of chunk "" << redact(min) << "" -> "" << redact(max)",458,download/mongodb_mongo570.cpp
0c8ffece21a601fe3861aba6cc191b2ce1be0f54,"SERVER-26077 Tighten checks around migration session id

Transmits the migration session id together with the abort command and
ensures that the migration session id reported in the status matches that
of the cloner.",src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,uassertStatusOK(migrationSessionIdStatus.getStatus());,328,download/mongodb_mongo571.cpp
7c3878adaf73736c33c7f65b718d8b5705c36142,SERVER-25151 Honor 'ssl' option in URIs passed to the shell,src/mongo/client/dbclient.cpp,+,"uassert(40312, ""SSL is not enabled; cannot create an SSL connection"", SSLEnabled());",901,download/mongodb_mongo572.cpp
7c3878adaf73736c33c7f65b718d8b5705c36142,SERVER-25151 Honor 'ssl' option in URIs passed to the shell,src/mongo/scripting/mozjs/mongo.cpp,+,auto uri = uassertStatusOK(statusWithHost);,688,download/mongodb_mongo573.cpp
7c3878adaf73736c33c7f65b718d8b5705c36142,SERVER-25151 Honor 'ssl' option in URIs passed to the shell,src/mongo/util/net/httpclient.cpp,+,"uasserted(40308, ""no ssl support"");",124,download/mongodb_mongo574.cpp
7c3878adaf73736c33c7f65b718d8b5705c36142,SERVER-25151 Honor 'ssl' option in URIs passed to the shell,src/mongo/util/net/listen.cpp,+,"_logListen(_port, _sslEnabled);",270,download/mongodb_mongo575.cpp
7c3878adaf73736c33c7f65b718d8b5705c36142,SERVER-25151 Honor 'ssl' option in URIs passed to the shell,src/mongo/util/net/listen.cpp,+,"_logListen(_port, _sslEnabled);",436,download/mongodb_mongo575.cpp
7c3878adaf73736c33c7f65b718d8b5705c36142,SERVER-25151 Honor 'ssl' option in URIs passed to the shell,src/mongo/util/net/listen.cpp,+,"void Listener::_logListen(int port, bool sslEnabled) {",583,download/mongodb_mongo575.cpp
7c3878adaf73736c33c7f65b718d8b5705c36142,SERVER-25151 Honor 'ssl' option in URIs passed to the shell,src/mongo/util/net/ssl_manager.cpp,+,"SSLEnabled() ? getSSLManager()->getSSLErrorMessage(ERR_get_error()) : ""SSL is not enabled"";",432,download/mongodb_mongo576.cpp
7c3878adaf73736c33c7f65b718d8b5705c36142,SERVER-25151 Honor 'ssl' option in URIs passed to the shell,src/mongo/util/net/ssl_manager.cpp,+,"log() << ""about to read keyfile from "" << params.sslPEMKeyFile;",539,download/mongodb_mongo576.cpp
af654fa43fe293f9c3551ac50e908fcc618ca875,SERVER-26008 allow setting failpoints on the command line,src/mongo/db/commands/fail_point_cmd.cpp,+,"std::tie(mode, val, data) = uassertStatusOK(FailPoint::parseBSON(cmdObj));",167,download/mongodb_mongo577.cpp
01bfdcb8f35f6cf81b9b471be21500c84d5cb660,SERVER-25324 Expose a function in the shell to compare BSON at a byte level,src/mongo/scripting/mozjs/bson.cpp,+,"uasserted(ErrorCodes::BadValue, ""bsonWoCompare needs 2 arguments"");",252,download/mongodb_mongo578.cpp
01bfdcb8f35f6cf81b9b471be21500c84d5cb660,SERVER-25324 Expose a function in the shell to compare BSON at a byte level,src/mongo/scripting/mozjs/bson.cpp,+,"uasserted(ErrorCodes::BadValue, ""bsonBinaryEqual needs 2 arguments"");",268,download/mongodb_mongo578.cpp
01bfdcb8f35f6cf81b9b471be21500c84d5cb660,SERVER-25324 Expose a function in the shell to compare BSON at a byte level,src/mongo/scripting/mozjs/bson.cpp,+,"uasserted(ErrorCodes::BadValue, ""first argument to bsonBinaryEqual must be an object"");",271,download/mongodb_mongo578.cpp
01bfdcb8f35f6cf81b9b471be21500c84d5cb660,SERVER-25324 Expose a function in the shell to compare BSON at a byte level,src/mongo/scripting/mozjs/bson.cpp,+,"uasserted(ErrorCodes::BadValue, ""second argument to bsonBinaryEqual must be an object"");",274,download/mongodb_mongo578.cpp
01bfdcb8f35f6cf81b9b471be21500c84d5cb660,SERVER-25324 Expose a function in the shell to compare BSON at a byte level,src/mongo/scripting/mozjs/bson.cpp,+,"BSONObj firstObject = ValueWriter(cx, args.get(0)).toBSON();",276,download/mongodb_mongo578.cpp
01bfdcb8f35f6cf81b9b471be21500c84d5cb660,SERVER-25324 Expose a function in the shell to compare BSON at a byte level,src/mongo/scripting/mozjs/bson.cpp,+,"BSONObj secondObject = ValueWriter(cx, args.get(1)).toBSON();",277,download/mongodb_mongo578.cpp
8eea87b6b90499d526e085ba723ddf989b837994,SERVER-25734 Add a drain mode completion hook which runs outside of the global X lock,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"fassertStatusOK(40107, status);",652,download/mongodb_mongo579.cpp
8b6e135599eaf369ab89c9952c9ae646f60ceb7e,SERVER-22606 add warning for using wiredtiger with ext4,src/mongo/db/storage/wiredtiger/wiredtiger_init.cpp,+,log() << startupWarningsLog;,77,download/mongodb_mongo580.cpp
8b6e135599eaf369ab89c9952c9ae646f60ceb7e,SERVER-22606 add warning for using wiredtiger with ext4,src/mongo/db/storage/wiredtiger/wiredtiger_init.cpp,+,"log() << ""** WARNING: Using the XFS filesystem is strongly recommended with the """,78,download/mongodb_mongo580.cpp
8b6e135599eaf369ab89c9952c9ae646f60ceb7e,SERVER-22606 add warning for using wiredtiger with ext4,src/mongo/db/storage/wiredtiger/wiredtiger_init.cpp,+,"log() << ""See """,80,download/mongodb_mongo580.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/bson/mutable/document.cpp,+,MONGO_STATIC_ASSERT(sizeof(ElementRep) == 32);,471,download/mongodb_mongo581.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/bson/mutable/document.cpp,+,MONGO_STATIC_ASSERT(std::is_pod<ElementRep>::value);,476,download/mongodb_mongo581.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/concurrency/lock_manager.cpp,+,MONGO_STATIC_ASSERT((sizeof(LockConflictsTable) / sizeof(LockConflictsTable[0])) == LockModesCount);,77,download/mongodb_mongo582.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/concurrency/lock_manager.cpp,+,MONGO_STATIC_ASSERT((sizeof(LockModeNames) / sizeof(LockModeNames[0])) == LockModesCount);,89,download/mongodb_mongo582.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/concurrency/lock_manager.cpp,+,MONGO_STATIC_ASSERT((sizeof(LegacyLockModeNames) / sizeof(LegacyLockModeNames[0])) ==,90,download/mongodb_mongo582.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/concurrency/lock_manager.cpp,+,MONGO_STATIC_ASSERT((sizeof(ResourceTypeNames) / sizeof(ResourceTypeNames[0])) ==,109,download/mongodb_mongo582.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/concurrency/lock_manager.cpp,+,MONGO_STATIC_ASSERT((sizeof(LockRequestStatusNames) / sizeof(LockRequestStatusNames[0])) ==,123,download/mongodb_mongo582.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/pipeline/value.cpp,+,MONGO_STATIC_ASSERT(sizeof(_storage.oid) == OID::kOIDSize);,185,download/mongodb_mongo583.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/pipeline/value.cpp,+,MONGO_STATIC_ASSERT(sizeof(_storage.dateValue) == sizeof(_storage.timestampValue));,839,download/mongodb_mongo583.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/stats/snapshots.cpp,+,MONGO_STATIC_ASSERT(kNumSnapshots == 2);,97,download/mongodb_mongo584.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/key_string.cpp,+,MONGO_STATIC_ASSERT(kNumericPositiveLargeMagnitude < kStringLike);,103,download/mongodb_mongo585.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/key_string.cpp,+,MONGO_STATIC_ASSERT(kBoolTrue < kDate);,107,download/mongodb_mongo585.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/key_string.cpp,+,MONGO_STATIC_ASSERT(std::is_integral<T>::value);,244,download/mongodb_mongo585.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/aligned_builder.cpp,+,MONGO_STATIC_ASSERT(sizeof(void*) == sizeof(size_t));,49,download/mongodb_mongo586.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/catalog/namespace.cpp,+,MONGO_STATIC_ASSERT(sizeof(Namespace) == 128);,44,download/mongodb_mongo587.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/catalog/namespace.cpp,+,MONGO_STATIC_ASSERT(Namespace::MaxNsLenWithNUL == MaxDatabaseNameLen);,45,download/mongodb_mongo587.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/catalog/namespace.cpp,+,MONGO_STATIC_ASSERT((int)Namespace::MaxNsLenWithNUL == (int)NamespaceString::MaxNsLenWithNUL);,46,download/mongodb_mongo587.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/catalog/namespace.cpp,+,MONGO_STATIC_ASSERT((int)Namespace::MaxNsLen == (int)NamespaceString::MaxNsLen);,47,download/mongodb_mongo587.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/catalog/namespace.cpp,+,MONGO_STATIC_ASSERT((int)Namespace::MaxNsColletionLen == (int)NamespaceString::MaxNsCollectionLen);,50,download/mongodb_mongo587.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/catalog/namespace_details.cpp,+,MONGO_STATIC_ASSERT(sizeof(NamespaceDetails::Extra) <= sizeof(NamespaceDetails));,56,download/mongodb_mongo588.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/catalog/namespace_details_rsv1_metadata.cpp,+,MONGO_STATIC_ASSERT(RecordStoreV1Base::Buckets ==,45,download/mongodb_mongo589.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/data_file.cpp,+,MONGO_STATIC_ASSERT(DataFileHeader::HeaderSize == 8192);,72,download/mongodb_mongo590.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/data_file.cpp,+,MONGO_STATIC_ASSERT(sizeof(static_cast<DataFileHeader*>(NULL)->data) == 4);,73,download/mongodb_mongo590.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/data_file.cpp,+,MONGO_STATIC_ASSERT(sizeof(DataFileHeader) - sizeof(static_cast<DataFileHeader*>(NULL)->data) ==,74,download/mongodb_mongo590.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/dur.cpp,+,MONGO_STATIC_ASSERT(UncommittedBytesLimit > BSONObjMaxInternalSize * 3);,155,download/mongodb_mongo591.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/dur.cpp,+,MONGO_STATIC_ASSERT(sizeof(void*) == 4 || UncommittedBytesLimit > BSONObjMaxInternalSize * 6);,156,download/mongodb_mongo591.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/dur_journal.cpp,+,MONGO_STATIC_ASSERT(sizeof(Checksum) == 16);,100,download/mongodb_mongo592.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/dur_journal.cpp,+,MONGO_STATIC_ASSERT(sizeof(JHeader) == 8192);,101,download/mongodb_mongo592.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/dur_journal.cpp,+,MONGO_STATIC_ASSERT(sizeof(JSectHeader) == 20);,102,download/mongodb_mongo592.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/dur_journal.cpp,+,MONGO_STATIC_ASSERT(sizeof(JSectFooter) == 32);,103,download/mongodb_mongo592.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/dur_journal.cpp,+,MONGO_STATIC_ASSERT(sizeof(JEntry) == 12);,104,download/mongodb_mongo592.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/dur_journal.cpp,+,MONGO_STATIC_ASSERT(sizeof(LSNFile) == 88);,105,download/mongodb_mongo592.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/extent.cpp,+,MONGO_STATIC_ASSERT(sizeof(Extent) - 4 == 48 + 128);,44,download/mongodb_mongo593.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/logfile.cpp,+,MONGO_STATIC_ASSERT(sizeof(off_t) == 8);    // we don't want overflow here,203,download/mongodb_mongo594.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/mmap_v1/record_store_v1_base.cpp,+,MONGO_STATIC_ASSERT(sizeof(RecordStoreV1Base::bucketSizes) /,93,download/mongodb_mongo595.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/wiredtiger/wiredtiger_record_store.cpp,+,MONGO_STATIC_ASSERT(kCurrentRecordStoreVersion >= kMinimumRecordStoreVersion);,80,download/mongodb_mongo596.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/db/storage/wiredtiger/wiredtiger_record_store.cpp,+,MONGO_STATIC_ASSERT(kCurrentRecordStoreVersion <= kMaximumRecordStoreVersion);,81,download/mongodb_mongo596.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/executor/network_interface_asio_command.cpp,+,MONGO_STATIC_ASSERT_MSG(,81,download/mongodb_mongo597.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/executor/network_interface_asio_command.cpp,+,MONGO_STATIC_ASSERT_MSG(,94,download/mongodb_mongo597.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/executor/network_interface_asio_command.cpp,+,MONGO_STATIC_ASSERT_MSG(,106,download/mongodb_mongo597.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/logger/log_component.cpp,+,"#define DECLARE_LOG_COMPONENT_PARENT(CHILD, PARENT)        \",67,download/mongodb_mongo598.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/logger/log_component.cpp,+,MONGO_STATIC_ASSERT(int(CHILD) > int(PARENT)); \,70,download/mongodb_mongo598.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/platform/decimal128.cpp,+,MONGO_STATIC_ASSERT(t34hi64 == 0x1ed09bead87c0);,845,download/mongodb_mongo599.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/platform/decimal128.cpp,+,MONGO_STATIC_ASSERT(t34lo64 == 0x378d8e63ffffffff);,846,download/mongodb_mongo599.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/platform/process_id.cpp,+,MONGO_STATIC_ASSERT(sizeof(NativeProcessId) == sizeof(uint32_t));,41,download/mongodb_mongo600.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/scripting/bson_template_evaluator.cpp,+,MONGO_STATIC_ASSERT(alphaNumLength == 64);,273,download/mongodb_mongo601.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/scripting/mozjs/exception.cpp,+,MONGO_STATIC_ASSERT_MSG(,59,download/mongodb_mongo602.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/util/heap_profiler.cpp,+,"MONGO_STATIC_ASSERT_MSG(sizeof(frames) == sizeof(FrameInfo) * kMaxFramesPerStack,",315,download/mongodb_mongo603.cpp
2bd286acef2fdb035f1d45253f6e6e4c24a2dc04,SERVER-22973 use mongo macros for static assert,src/mongo/util/net/asio_message_port.cpp,+,"MONGO_STATIC_ASSERT_MSG(sizeof(kGET) - 1 <= kHeaderLen,",355,download/mongodb_mongo604.cpp
81eaed9d178a63c3dda9ab7574f4ce4130a7d1ec,SERVER-26022 collMod should copy ViewDefinition before modifying,src/mongo/db/catalog/coll_mod.cpp,+,"const auto sharedView = db->getViewCatalog()->lookup(txn, nss.ns());",64,download/mongodb_mongo605.cpp
1083942cef731e876b8c7ee029057a9fcd252336,SERVER-26011 Use all threads for secondary application,src/mongo/db/repl/sync_tail.cpp,+,"void scheduleWritesToOplog(OperationContext* txn,",464,download/mongodb_mongo606.cpp
1083942cef731e876b8c7ee029057a9fcd252336,SERVER-26011 Use all threads for secondary application,src/mongo/db/repl/sync_tail.cpp,+,std::vector<MultiApplier::OperationPtrs> writerVectors(workerPool->getNumThreads());,1248,download/mongodb_mongo606.cpp
1083942cef731e876b8c7ee029057a9fcd252336,SERVER-26011 Use all threads for secondary application,src/mongo/db/repl/sync_tail.cpp,+,"scheduleWritesToOplog(txn, workerPool, ops);",1260,download/mongodb_mongo606.cpp
6c2169cc938d4ef1797782be934e6ce7c97fc21a,SERVER-26013 Add a tryLock method to the dist lock manager,src/mongo/s/catalog/dist_lock_catalog.cpp,+,"const WriteConcernOptions DistLockCatalog::kLocalWriteConcern(1,",35,download/mongodb_mongo607.cpp
6c2169cc938d4ef1797782be934e6ce7c97fc21a,SERVER-26013 Add a tryLock method to the dist lock manager,src/mongo/s/catalog/dist_lock_catalog.cpp,+,const WriteConcernOptions DistLockCatalog::kMajorityWriteConcern(,39,download/mongodb_mongo607.cpp
6c2169cc938d4ef1797782be934e6ce7c97fc21a,SERVER-26013 Add a tryLock method to the dist lock manager,src/mongo/s/catalog/dist_lock_manager_mock.cpp,+,StatusWith<DistLockHandle> DistLockManagerMock::tryLockWithLocalWriteConcern(,103,download/mongodb_mongo608.cpp
6c2169cc938d4ef1797782be934e6ce7c97fc21a,SERVER-26013 Add a tryLock method to the dist lock manager,src/mongo/s/catalog/replset/dist_lock_catalog_impl.cpp,+,request.setWriteConcern(writeConcern);,207,download/mongodb_mongo609.cpp
6c2169cc938d4ef1797782be934e6ce7c97fc21a,SERVER-26013 Add a tryLock method to the dist lock manager,src/mongo/s/catalog/replset/replset_dist_lock_manager.cpp,+,StatusWith<DistLockHandle> ReplSetDistLockManager::tryLockWithLocalWriteConcern(,426,download/mongodb_mongo610.cpp
c62a0d7c882e99d3b255e26ade7baaa0d18244cb,SERVER-26013 Remove ShardingCatalogClient::distLock and cleanup DistLockManager,src/mongo/db/s/merge_chunks_command.cpp,+,"grid.catalogClient(txn)->getDistLockManager()->lock(txn, nss.ns(), whyMessage);",91,download/mongodb_mongo611.cpp
c62a0d7c882e99d3b255e26ade7baaa0d18244cb,SERVER-26013 Remove ShardingCatalogClient::distLock and cleanup DistLockManager,src/mongo/db/s/move_chunk_command.cpp,+,auto distLockStatus = Grid::get(txn)->catalogClient(txn)->getDistLockManager()->lock(,70,download/mongodb_mongo612.cpp
c62a0d7c882e99d3b255e26ade7baaa0d18244cb,SERVER-26013 Remove ShardingCatalogClient::distLock and cleanup DistLockManager,src/mongo/db/s/split_chunk_command.cpp,+,"grid.catalogClient(txn)->getDistLockManager()->lock(txn, nss.ns(), whyMessage);",260,download/mongodb_mongo613.cpp
c62a0d7c882e99d3b255e26ade7baaa0d18244cb,SERVER-26013 Remove ShardingCatalogClient::distLock and cleanup DistLockManager,src/mongo/s/catalog/dist_lock_catalog.cpp,+,DistLockCatalog::DistLockCatalog() = default;,35,download/mongodb_mongo614.cpp
c62a0d7c882e99d3b255e26ade7baaa0d18244cb,SERVER-26013 Remove ShardingCatalogClient::distLock and cleanup DistLockManager,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,auto scopedDistLock = grid.catalogClient(txn)->getDistLockManager()->lock(,521,download/mongodb_mongo615.cpp
c62a0d7c882e99d3b255e26ade7baaa0d18244cb,SERVER-26013 Remove ShardingCatalogClient::distLock and cleanup DistLockManager,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,auto scopedDistLock = grid.catalogClient(txn)->getDistLockManager()->lock(,156,download/mongodb_mongo616.cpp
11540cd54638c07708c056eb288d0b4c27b1a8e9,SERVER-24536 Nodes can run an election while stepping down.,src/mongo/db/repl/replication_coordinator_impl_heartbeat.cpp,+,const auto action = _updateMemberStateFromTopologyCoordinator_inlock();,344,download/mongodb_mongo617.cpp
2d3d3d3a92e2b1549a638a6f06d8c408625a2287,SERVER-25910 fail setShardVersion on mongod if not running with --shardsvr,src/mongo/db/commands/dbcommands.cpp,+,"uassertStatusOK({ErrorCodes::NoShardingEnabled,",1315,download/mongodb_mongo618.cpp
2d3d3d3a92e2b1549a638a6f06d8c408625a2287,SERVER-25910 fail setShardVersion on mongod if not running with --shardsvr,src/mongo/db/s/set_shard_version_command.cpp,+,"uassertStatusOK({ErrorCodes::NoShardingEnabled,",99,download/mongodb_mongo619.cpp
2d3d3d3a92e2b1549a638a6f06d8c408625a2287,SERVER-25910 fail setShardVersion on mongod if not running with --shardsvr,src/mongo/s/client/version_manager.cpp,+,"uassert(errCode, result[""errmsg""].String(), errCode != ErrorCodes::NoShardingEnabled);",366,download/mongodb_mongo620.cpp
071065a2969176ad2aa2ac9c3210e5fa9410cea6,"SERVER-25156 Add support for building v=2 indexes.

We use index version v=2 as the default index version when the
featureCompatibilityVersion is 3.4, and we use index version v=1 as the
default index version when the featureCompatibilityVersion is 3.2.

The ""collation"" index option can only be used with v=2 indexes.",src/mongo/db/index/btree_access_method.cpp,+,"massert(16745, ""Invalid index version for key generation."", _keyGenerator);",68,download/mongodb_mongo621.cpp
55ab9d613a96e7aa566fa01b5865ed871df0148b,"SERVER-24153 Add/refactor create() methods for DocumentSources

This will make it easier to add tests that each DocumentSource
correctly handles a paused input.",src/mongo/db/pipeline/accumulation_statement.cpp,+,"uassert(40237,",100,download/mongodb_mongo622.cpp
55ab9d613a96e7aa566fa01b5865ed871df0148b,"SERVER-24153 Add/refactor create() methods for DocumentSources

This will make it easier to add tests that each DocumentSource
correctly handles a paused input.",src/mongo/db/pipeline/document_source_group.cpp,+,"uassert(17390,",327,download/mongodb_mongo623.cpp
55ab9d613a96e7aa566fa01b5865ed871df0148b,"SERVER-24153 Add/refactor create() methods for DocumentSources

This will make it easier to add tests that each DocumentSource
correctly handles a paused input.",src/mongo/db/pipeline/document_source_skip.cpp,+,"uassert(15956, ""Argument to $skip cannot be negative"", nToSkip >= 0);",108,download/mongodb_mongo624.cpp
884d686aee11eb5e1a30c64ab77089c3ef88ce7a,SERVER-25997 Make mongos shutdown safer if the grid object is not yet initialized.,src/mongo/s/server.cpp,+,if (auto catalog = Grid::get(txn)->catalogClient(txn)) {,156,download/mongodb_mongo625.cpp
865045d5dd78dfe167783f825dca0d537563797d,SERVER-25230 use ReplicaSetMonitor's ConnectionString when reloading shards from config,src/mongo/s/client/shard_registry.cpp,+,"LOG(3) << ""Adding shard "" << shard->getId() << "", with CS "" << connString.toString();",502,download/mongodb_mongo626.cpp
40bd5f736fdf42a7032892eef272d3dfacd2e2a2,SERVER-25895 JS Exceptions can overflow BufBuilder,src/mongo/scripting/mozjs/implscope.cpp,+,"auto str = ValueWriter(cx, stack).toString();",152,download/mongodb_mongo627.cpp
40bd5f736fdf42a7032892eef272d3dfacd2e2a2,SERVER-25895 JS Exceptions can overflow BufBuilder,src/mongo/scripting/mozjs/implscope.cpp,+,"log() << exceptionMsg << "":"" << dbe.toString() << "":"" << message;",165,download/mongodb_mongo627.cpp
6e97966f54949107f067f56eadec32c30cd0f6ca,SERVER-25982 Improve log message after finish event in data replicator,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Initial sync attempt finishing up."";",607,download/mongodb_mongo628.cpp
645a77b3fa5b28d29d245e30cc195fd5a8eda049,"SERVER-24600 Increase interruptibility of RemoteCommandTargeter::findHost.

By making more calls of RemoteCommandTargeter::findHost interruptible, this
change speeds up the shutdown of mongos when no config servers are discoverable.",src/mongo/client/remote_command_targeter_rs.cpp,+,const auto interruptStatus = txn->checkForInterruptNoAssert();,75,download/mongodb_mongo629.cpp
175408e60358fe0407a4c24e8057a73f0031a9a3,SERVER-25965 Use 'ceil' division when determining the optimal number of chunks per shard,src/mongo/s/balancer/balancer_policy_tests.cpp,+,ASSERT(,137,download/mongodb_mongo630.cpp
175408e60358fe0407a4c24e8057a73f0031a9a3,SERVER-25965 Use 'ceil' division when determining the optimal number of chunks per shard,src/mongo/s/balancer/balancer_policy_tests.cpp,+,ASSERT(BalancerPolicy::balance(,140,download/mongodb_mongo630.cpp
175408e60358fe0407a4c24e8057a73f0031a9a3,SERVER-25965 Use 'ceil' division when determining the optimal number of chunks per shard,src/mongo/s/balancer/balancer_policy_tests.cpp,+,ASSERT(,152,download/mongodb_mongo630.cpp
175408e60358fe0407a4c24e8057a73f0031a9a3,SERVER-25965 Use 'ceil' division when determining the optimal number of chunks per shard,src/mongo/s/balancer/balancer_policy_tests.cpp,+,ASSERT(BalancerPolicy::balance(,155,download/mongodb_mongo630.cpp
f515afc5dd533dc2ddc3d80697d9ff96709f9f0d,"SERVER-25186 support a default collation for views

Users may specify a default collation when creating a view. Operations involving
a view cannot override the view's default collation.",src/mongo/db/catalog/coll_mod.cpp,+,"view = db->getViewCatalog()->lookup(txn, nss.ns());",67,download/mongodb_mongo631.cpp
f515afc5dd533dc2ddc3d80697d9ff96709f9f0d,"SERVER-25186 support a default collation for views

Users may specify a default collation when creating a view. Operations involving
a view cannot override the view's default collation.",src/mongo/db/commands/pipeline_command.cpp,+,"auto view = db->getViewCatalog()->lookup(txn, potentialViewNs.ns());",288,download/mongodb_mongo632.cpp
8081859b784662566c6efa3f06a2e6ffd4912afa,SERVER-22666 Test that basic sharded cluster upgrade procedure properly makes all shards sharding aware,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"log() << ""Retrying upsert of shardIdentity document into shard "" << shardType.getName();",1749,download/mongodb_mongo633.cpp
f8872dc852e32ff1cdfcead7b530bc5c350edfcf,SERVER-25002 Wire in new _configsvrMergeChunks command so shards no longer run applyOps directly,src/mongo/db/s/merge_chunks_command.cpp,+,"uassertStatusOK(metadata->cloneMerge(minKey, maxKey, mergeVersion));",299,download/mongodb_mongo634.cpp
f8872dc852e32ff1cdfcead7b530bc5c350edfcf,SERVER-25002 Wire in new _configsvrMergeChunks command so shards no longer run applyOps directly,src/mongo/db/s/merge_chunks_command.cpp,+,"LOG(1) << ""mergeChunk ["" << redact(minKey) << "","" << redact(maxKey)",361,download/mongodb_mongo634.cpp
8f83b3e0937dc0b471c408714108ced515397e01,SERVER-23972 Disallow decimal insertion in legacy write mode when featureCompatibilityVersion is 3.2,src/mongo/db/dbmessage.cpp,+,"uassert(ErrorCodes::InvalidBSON,",124,download/mongodb_mongo635.cpp
8f83b3e0937dc0b471c408714108ced515397e01,SERVER-23972 Disallow decimal insertion in legacy write mode when featureCompatibilityVersion is 3.2,src/mongo/db/dbmessage.cpp,+,"uassert(ErrorCodes::InvalidBSON,",135,download/mongodb_mongo635.cpp
815e16eace8c40db7eed5ad3a6902027f1212e2a,SERVER-25131: release collection/db locks on collection clone failure.,src/mongo/db/catalog/collection.cpp,+,log() << msg;,386,download/mongodb_mongo636.cpp
815e16eace8c40db7eed5ad3a6902027f1212e2a,SERVER-25131: release collection/db locks on collection clone failure.,src/mongo/db/catalog/collection.cpp,+,log() << msg;,449,download/mongodb_mongo636.cpp
815e16eace8c40db7eed5ad3a6902027f1212e2a,SERVER-25131: release collection/db locks on collection clone failure.,src/mongo/db/repl/collection_bulk_loader_impl.cpp,+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END(,156,download/mongodb_mongo637.cpp
078f29b7ed3361c6d19ce55a7fa32643c9987cbd,SERVER-25008 Disallow repairPath with non-mmapv1 storage engines.,src/mongo/db/service_context_d.cpp,+,"uassert(40311,",161,download/mongodb_mongo638.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/client/dbclient_rs.cpp,+,"log() << ""could not receive data from "" << _lazyState._lastClient->toString()",822,download/mongodb_mongo639.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/catalog/collection.cpp,+,"log() << ""failing remove on a capped ns "" << _ns;",542,download/mongodb_mongo640.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/catalog/collection_compact.cpp,+,"log() << ""compact dropping indexes"";",171,download/mongodb_mongo641.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/catalog/database.cpp,+,"log() << ""warning: bg op in prog during close db? "" << _name;",148,download/mongodb_mongo642.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/catalog/database.cpp,+,"LOG(1) << ""dropCollection: "" << fullns;",372,download/mongodb_mongo642.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/catalog/database.cpp,+,"LOG(1) << ""\t dropIndexes done"";",417,download/mongodb_mongo642.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/catalog/database.cpp,+,"log() << ""dropAllDatabasesExceptLocal "" << n.size();",610,download/mongodb_mongo642.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/catalog/index_catalog.cpp,+,"log() << ""warning: can't find plugin ["" << pluginName << ""]"";",212,download/mongodb_mongo643.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/catalog/index_catalog.cpp,+,"log() << ""Couldn't unindex record "" << redact(obj) << "" from collection """,1270,download/mongodb_mongo643.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/catalog/index_create.cpp,+,"error() << ""Caught exception while cleaning up partially built indexes: "" << redact(e);",128,download/mongodb_mongo644.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/catalog/index_create.cpp,+,"log() << ""build index done.  scanned "" << n << "" total records. "" << t.seconds() << "" secs"";",341,download/mongodb_mongo644.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/cloner.cpp,+,"log() << ""clone "" << to_collection << ' ' << numSeen;",166,download/mongodb_mongo645.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/cloner.cpp,+,"log() << ""ERROR copy collection shouldCopyIndexes not implemented? "" << ns;",464,download/mongodb_mongo645.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/cloner.cpp,+,"LOG(2) << ""\t\t not cloning because system collection"";",497,download/mongodb_mongo645.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/cloner.cpp,+,"LOG(2) << ""  really will clone: "" << collection;",634,download/mongodb_mongo645.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/db/cloner.cpp,+,"LOG(1) << ""\t\t cloning "" << from_name << "" -> "" << to_name;",646,download/mongodb_mongo645.cpp
81bc570b41f59f8a7101df13892272bae6da9857,"SERVER-24991 log redaction for bson, client, auth, catalog",src/mongo/s/catalog/replset/replset_dist_lock_manager.cpp,+,"log() << ""distributed lock '"" << name << ""' acquired for '"" << whyMessage.toString()",327,download/mongodb_mongo646.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/mongod_options.cpp,+,"log() << ""  page size: "" << (int)sysconf(_SC_PAGE_SIZE);",583,download/mongodb_mongo647.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/mongod_options.cpp,+,"log() << ""  _SC_PHYS_PAGES: "" << sysconf(_SC_PHYS_PAGES);",586,download/mongodb_mongo647.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/mongod_options.cpp,+,"log() << ""  _SC_AVPHYS_PAGES: "" << sysconf(_SC_AVPHYS_PAGES);",589,download/mongodb_mongo647.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/ops/update_result.cpp,+,"LOG(4) << ""UpdateResult -- "" << redact(toString());",55,download/mongodb_mongo648.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/ops/write_ops_exec.cpp,+,"LOG(3) << ""Caught Assertion in "" << redact(logicalOpToString(curOp->getLogicalOp()))",103,download/mongodb_mongo649.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/ops/write_ops_exec.cpp,+,"<< "": "" << curOp->debug().exceptionInfo.toString();",104,download/mongodb_mongo649.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/ops/write_ops_exec.cpp,+,"log() << redact(curOp->debug().report(txn->getClient(), *curOp, lockerInfo.stats));",115,download/mongodb_mongo649.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/ops/write_ops_exec.cpp,+,"log() << ""Ignoring error from finishCurOp: "" << redact(ex);",125,download/mongodb_mongo649.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/find.cpp,+,"error() << ""getMore executor error, stats: "" << redact(Explain::getWinningPlanStats(exec));",216,download/mongodb_mongo650.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/find.cpp,+,"LOG(5) << ""Running getMore, cursorid: "" << cursorid;",280,download/mongodb_mongo650.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/find.cpp,+,"LOG(5) << ""Running query:\n"" << redact(cq->toString());",517,download/mongodb_mongo650.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/find.cpp,+,"LOG(2) << ""Running query: "" << redact(cq->toStringShort());",518,download/mongodb_mongo650.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/find.cpp,+,"LOG(5) << ""Not caching executor but returning "" << numResults << "" results."";",683,download/mongodb_mongo650.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/get_executor.cpp,+,"LOG(2) << ""Using idhack: "" << redact(canonicalQuery->toStringShort());",271,download/mongodb_mongo651.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/get_executor.cpp,+,"LOG(2) << ""Using fast count: "" << redact(canonicalQuery->toStringShort());",340,download/mongodb_mongo651.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/get_executor.cpp,+,"LOG(2) << ""Running query as sub-queries: "" << redact(canonicalQuery->toStringShort());",365,download/mongodb_mongo651.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/get_executor.cpp,+,"LOG(2) << ""Using fast count: "" << redact(canonicalQuery->toStringShort())",407,download/mongodb_mongo651.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/get_executor.cpp,+,"LOG(2) << ""Using idhack: "" << redact(unparsedQuery);",755,download/mongodb_mongo651.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/get_executor.cpp,+,"LOG(2) << ""Using idhack: "" << redact(unparsedQuery);",911,download/mongodb_mongo651.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/get_executor.cpp,+,"LOG(2) << ""Using fast distinct: "" << redact(cq->toStringShort())",1519,download/mongodb_mongo651.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/get_executor.cpp,+,"LOG(2) << ""Using fast distinct: "" << redact(cq->toStringShort())",1555,download/mongodb_mongo651.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/index_bounds_builder.cpp,+,"log() << ""INVALID BOUNDS: "" << redact(bounds->toString()) << endl",896,download/mongodb_mongo652.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/plan_enumerator.cpp,+,"LOG(5) << ""Tagging memoID "" << id;",1444,download/mongodb_mongo653.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/plan_ranker.cpp,+,"LOG(2) << ""Scoring query plan: "" << redact(Explain::getPlanSummary(candidates[i].root))",100,download/mongodb_mongo654.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/plan_ranker.cpp,+,"LOG(5) << ""score = "" << score;",104,download/mongodb_mongo654.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/plan_ranker.cpp,+,"LOG(5) << ""Adding +"" << eofBonus << "" EOF bonus to score."";",106,download/mongodb_mongo654.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/plan_ranker.cpp,+,"LOG(5) << ""Score boosted to "" << score << "" due to intersection forcing."";",257,download/mongodb_mongo654.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/planner_analysis.cpp,+,"LOG(5) << ""Reversing ixscan to provide sort. Result: "" << redact(solnRoot->toString());",497,download/mongodb_mongo655.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/planner_analysis.cpp,+,"LOG(5) << ""PROJECTION: fetched status: "" << solnRoot->fetched();",715,download/mongodb_mongo655.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/planner_analysis.cpp,+,"LOG(5) << ""PROJECTION: Current plan is:\n"" << redact(solnRoot->toString());",716,download/mongodb_mongo655.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/planner_analysis.cpp,+,"LOG(5) << ""PROJECTION: claims to require doc adding fetch."";",722,download/mongodb_mongo655.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/planner_analysis.cpp,+,"LOG(5) << ""PROJECTION: requires fields"";",733,download/mongodb_mongo655.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/planner_analysis.cpp,+,"LOG(5) << ""PROJECTION: not covered due to field "" << fields[i];",738,download/mongodb_mongo655.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/planner_analysis.cpp,+,"LOG(5) << ""PROJECTION: is covered?: = "" << covered;",744,download/mongodb_mongo655.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Index "" << i << "": "" << ie.name;",415,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Tagged tree:"" << endl << redact(clone->toString());",426,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Planner: solution constructed from the cache:\n"" << redact(soln->toString());",446,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Index "" << i << "" is "" << params.indices[i].toString();",463,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Forcing a table scan due to hinted $natural"";",495,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Predicate over field '"" << *it << ""'"";",513,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Hint specified, restricting indices to "" << hintIndex.toString();",582,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Max/min query using index "" << params.indices[idxNo].toString();",680,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(2) << ""Relevant index "" << i << "" is "" << relevantIndices[i].toString();",695,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Rated tree:"" << endl << redact(query.root()->toString());",717,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Unable to find index for $geoNear query."";",725,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Rated tree after geonear processing:"" << redact(query.root()->toString());",731,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Rated tree after text processing:"" << redact(query.root()->toString());",767,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""About to build solntree from tagged tree:"" << endl",783,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Query is not cachable: "" << redact(indexTreeStatus.reason());",794,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Planner: adding solution:"" << endl << redact(soln->toString());",810,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Planner: outputted "" << out->size() << "" indexed solutions."";",824,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Planner: outputting soln that uses hinted index as scan."";",846,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Planner: outputting soln that uses index to provide sort."";",907,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Planner: outputting a collscan:"" << endl << redact(collscan->toString());",962,download/mongodb_mongo656.cpp
fba18b66c7140178fd5b4efdd42d51fb9e0fc0ae,"SERVER-24991 log redaction for matcher, ops, pipeline, query",src/mongo/db/query/query_planner_common.cpp,+,"LOG(5) << ""Invalid bounds: "" << redact(isn->bounds.toString());",64,download/mongodb_mongo657.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/client/dbclientcursor.cpp,+,"wasError(false),",513,download/mongodb_mongo658.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/db/views/durable_view_catalog.cpp,+,"fassertStatusOK(40224, validateBSON(data.data(), data.size(), BSONVersion::kLatest));",83,download/mongodb_mongo659.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(tmp.valid(BSONVersion::kLatest));,585,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(obj.valid(BSONVersion::kLatest));,593,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(tmp.valid(BSONVersion::kLatest));,603,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(obj.valid(BSONVersion::kLatest));,612,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(tmp.valid(BSONVersion::kLatest));,622,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(obj.valid(BSONVersion::kLatest));,634,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(valid().valid(BSONVersion::kLatest));,1073,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(!invalid().valid(BSONVersion::kLatest));,1074,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(o.valid(BSONVersion::kLatest));,1123,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(!o.valid(BSONVersion::kLatest));,1306,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(ret.valid(BSONVersion::kLatest));,1669,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(o.valid(BSONVersion::kLatest));,1690,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(o.valid(BSONVersion::kLatest));,1708,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(min.valid(BSONVersion::kLatest));,1722,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(max.valid(BSONVersion::kLatest));,1723,download/mongodb_mongo660.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/dbtests/jsontests.cpp,+,ASSERT(fromjson(json()).valid(BSONVersion::kLatest));,628,download/mongodb_mongo661.cpp
f288ea86db58c6aefe4807ed7ac1815577da2752,SERVER-25159 Default BSON validation version should depend on admin.system.version,src/mongo/rpc/legacy_reply.cpp,+,"uassert(ErrorCodes::InvalidBSON,",80,download/mongodb_mongo662.cpp
aa7411e6e2c4fd18bbff934c57567d89dc3efa0e,SERVER-25938 ShardLocal::runCommand should parse writeConcernError even when the command failed,src/mongo/s/client/shard_local.cpp,+,Status writeConcernStatus = getWriteConcernStatusFromCommandResult(responseReply);,141,download/mongodb_mongo663.cpp
7636c7f62c7879ad9edb7a62099588069eb214af,SERVER-25912 Disable periodic noop writes in jstests,src/mongo/db/repl/noop_writer.cpp,+,LOG(logLevel),169,download/mongodb_mongo664.cpp
7636c7f62c7879ad9edb7a62099588069eb214af,SERVER-25912 Disable periodic noop writes in jstests,src/mongo/db/repl/noop_writer.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(txn, ""writeNoop"", rsOplogName);",177,download/mongodb_mongo664.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/compact.cpp,+,"log() << ""compact "" << nss.ns() << "" begin, options: "" << compactOptions;",168,download/mongodb_mongo665.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/dbcommands.cpp,+,"LOG(0) << ""CMD: diagLogging set to "" << _diaglog.getLevel() << "" from: "" << was;",443,download/mongodb_mongo666.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/dbcommands.cpp,+,"log() << ""should have chunk: "" << n << "" have:"" << myn;",653,download/mongodb_mongo666.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/dbcommands.cpp,+,<< redact(getRedactedCopyForLogging(request.getCommandArgs()));,1401,download/mongodb_mongo666.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/drop_indexes.cpp,+,"LOG(0) << ""CMD: reIndex "" << toReIndexNs;",129,download/mongodb_mongo667.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/eval.cpp,+,"log() << ""args:"" << args;",115,download/mongodb_mongo668.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/eval.cpp,+,"log() << ""code:\n"" << redact(code);",116,download/mongodb_mongo668.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/eval.cpp,+,"log() << ""dbeval slow, time: "" << dec << m << ""ms "" << dbName;",127,download/mongodb_mongo668.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/eval.cpp,+,log() << redact(code);,129,download/mongodb_mongo668.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/eval.cpp,+,OCCASIONALLY log() << redact(code);,131,download/mongodb_mongo668.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/fsync.cpp,+,"error() << ""FSyncLockThread exception: "" << e.what();",80,download/mongodb_mongo669.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/fsync.cpp,+,"log() << ""CMD fsync: sync:"" << sync << "" lock:"" << lock;",138,download/mongodb_mongo669.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/fsync.cpp,+,"log() << ""db is now locked, no writes allowed. db.fsyncUnlock() to unlock"";",156,download/mongodb_mongo669.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/fsync.cpp,+,"log() << ""    For more info see "" << FSyncCommand::url();",157,download/mongodb_mongo669.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/fsync.cpp,+,"error() << ""error doing syncDataAndTruncateJournal: "" << e.what();",246,download/mongodb_mongo669.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/fsync.cpp,+,"error() << ""error doing flushAll: "" << e.what();",258,download/mongodb_mongo669.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/fsync.cpp,+,"error() << ""storage engine unable to begin backup : "" << e.toString();",270,download/mongodb_mongo669.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/index_filter_commands.cpp,+,"LOG(0) << ""Removed index filter on "" << ns << "" "" << redact(cq->toStringShort());",272,download/mongodb_mongo670.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/index_filter_commands.cpp,+,"LOG(0) << ""Index filter set on "" << ns << "" "" << redact(cq->toStringShort()) << "" """,399,download/mongodb_mongo670.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/mr.cpp,+,"error() << ""couldn't cleanup after map reduce: "" << e.what();",795,download/mongodb_mongo671.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/mr.cpp,+,"LOG(1) << ""MapReduce terminated during state destruction"";",806,download/mongodb_mongo671.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/mr.cpp,+,"LOG(1) << ""M/R: Switching from JS mode to mixed mode"";",949,download/mongodb_mongo671.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/mr.cpp,+,"LOG(3) << ""  MR - dumping to db"";",1255,download/mongodb_mongo671.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/mr.cpp,+,"LOG(1) << ""mr ns: "" << config.ns;",1357,download/mongodb_mongo671.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/mr.cpp,+,"log() << ""mr detected stale config, should retry"" << redact(e);",1619,download/mongodb_mongo671.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/mr.cpp,+,"log() << ""mr failed, removing collection"" << redact(e);",1625,download/mongodb_mongo671.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/mr.cpp,+,"log() << ""mr failed, removing collection"" << causedBy(e);",1628,download/mongodb_mongo671.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/mr.cpp,+,"log() << ""mr failed for unknown reason, removing collection"";",1631,download/mongodb_mongo671.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/plan_cache_commands.cpp,+,"LOG(1) << ns << "": removed plan cache entry - "" << redact(cq->getQueryObj())",325,download/mongodb_mongo672.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/server_status.cpp,+,"log() << ""serverStatus was very slow: "" << t;",170,download/mongodb_mongo673.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/test_commands.cpp,+,"log() << ""test only command godinsert invoked coll:"" << coll;",84,download/mongodb_mongo674.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/test_commands.cpp,+,"log() << ""test only command sleep invoked"";",163,download/mongodb_mongo674.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/user_management_commands.cpp,+,"log() << ""Auth schema upgrade failed with "" << redact(status);",2736,download/mongodb_mongo675.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/commands/validate.cpp,+,"LOG(0) << ""CMD: validate "" << ns;",110,download/mongodb_mongo676.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/concurrency/lock_state.cpp,+,log() << ss.str();,218,download/mongodb_mongo677.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/curop.cpp,+,"error() << ""old _message: "" << redact(_message) << "" new message:"" << redact(msg);",249,download/mongodb_mongo678.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,"LOG(1) << ""enter repairDatabases (to check pdfile version #)"";",358,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,"LOG(1) << ""    Repairing database: "" << dbName;",373,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,"LOG(1) << ""    Recovering database: "" << dbName;",393,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,"log() << ""Problem with index "" << index << "": "" << redact(keyStatus)",465,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,"LOG(1) << ""done repairDatabases"";",504,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,"error() << ""Failed to set up listener: "" << res;",571,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,"log() << ""finished checking dbs"";",674,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,log() << redact(status);,700,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,"log() << ""exception in initAndListen: "" << e.toString() << "", terminating"";",813,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,"log() << ""exception in initAndListen int: "" << n << "", terminating"";",819,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,"log() << ""exception in initAndListen, terminating"";",822,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/db.cpp,+,"log() << ""Service running"";",832,download/mongodb_mongo679.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/cached_plan.cpp,+,"LOG(1) << ""Replanning "" << redact(_canonicalQuery->toStringShort())",277,download/mongodb_mongo680.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/cached_plan.cpp,+,"LOG(5) << _canonicalQuery->ns() << "": Failed to update cache with feedback: "" << redact(fbs)",338,download/mongodb_mongo680.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/multi_plan.cpp,+,"LOG(5) << ""Best plan errored out switching to backup"";",121,download/mongodb_mongo681.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/multi_plan.cpp,+,"LOG(5) << ""Best plan had a blocking stage, became unblocked"";",139,download/mongodb_mongo681.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/multi_plan.cpp,+,"LOG(5) << ""Winning solution:\n"" << redact(bestSolution->toString());",241,download/mongodb_mongo681.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/multi_plan.cpp,+,"LOG(2) << ""Winning plan: "" << redact(Explain::getPlanSummary(bestCandidate.root));",242,download/mongodb_mongo681.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/multi_plan.cpp,+,"LOG(5) << ""Winner has blocking stage, looking for backup plan..."";",246,download/mongodb_mongo681.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/multi_plan.cpp,+,"LOG(5) << ""Candidate "" << ix << "" is backup child"";",249,download/mongodb_mongo681.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/shard_filter.cpp,+,error() << redact(status);,94,download/mongodb_mongo682.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/subplan.cpp,+,"LOG(5) << ""Subplanner: index "" << i << "" is "" << ie;",176,download/mongodb_mongo683.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/subplan.cpp,+,"LOG(5) << ""Subplanner: fully tagged tree is "" << redact(solnRoot->toString());",403,download/mongodb_mongo683.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/exec/subplan.cpp,+,"LOG(5) << ""Subplanner: Composite solution is "" << redact(_compositeSolution->toString());",415,download/mongodb_mongo683.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/geo/r2_region_coverer.cpp,+,"LOG(3) << ""Pop: "" << redact(candidate->cell.toString());",112,download/mongodb_mongo684.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/geo/r2_region_coverer.cpp,+,"LOG(3) << ""Push: "" << redact(candidate->cell.toString()) << "" ("" << priority << "") "";",189,download/mongodb_mongo684.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/index/haystack_access_method.cpp,+,"LOG(1) << ""SEARCH near:"" << redact(nearObj) << "" maxDistance:"" << maxDistance",81,download/mongodb_mongo685.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/index/index_access_method.cpp,+,"log() << ""Assertion failure: _unindex failed "" << _descriptor->indexNamespace();",179,download/mongodb_mongo686.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/index/index_access_method.cpp,+,"log() << ""Assertion failure: _unindex failed: "" << redact(e) << ""  key:"" << key.toString()",180,download/mongodb_mongo686.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/index_builder.cpp,+,"error() << ""IndexBuilder could not build index: "" << redact(status);",104,download/mongodb_mongo687.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/index_builder.cpp,+,"error() << ""bad status from index build: "" << redact(status);",196,download/mongodb_mongo687.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/index_rebuilder.cpp,+,"error() << ""Index rebuilding did not complete: "" << redact(e);",130,download/mongodb_mongo688.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/index_rebuilder.cpp,+,"error() << ""Index verification did not complete: "" << redact(e);",167,download/mongodb_mongo688.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/index_rebuilder.cpp,+,"LOG(1) << ""checking complete"";",170,download/mongodb_mongo688.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/initialize_server_global_state.cpp,+,"log() << ""***** SERVER RESTARTED *****"";",292,download/mongodb_mongo689.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/instance.cpp,+,"(n < 30000 ? warning() : error()) << ""receivedKillCursors, n="" << n;",395,download/mongodb_mongo690.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/instance.cpp,+,"LOG(found == n ? 1 : 0) << ""killcursors: found "" << found << "" of "" << n;",404,download/mongodb_mongo690.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/instance.cpp,+,"log() << curTimeMillis64() % 10000 << "" long msg received, len:"" << len;",627,download/mongodb_mongo690.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/instance.cpp,+,"log() << ""    operation isn't supported: "" << static_cast<int>(op);",643,download/mongodb_mongo690.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/instance.cpp,+,"log() << redact(debug.report(&c, currentOp, lockerInfo.stats));",698,download/mongodb_mongo690.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/instance.cpp,+,"log() << ""diagLogging using file "" << name;",731,download/mongodb_mongo690.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/instance.cpp,+,"log() << ""diagLogging level="" << newLevel;",738,download/mongodb_mongo690.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/instance.cpp,+,"log() << ""flushing diag log"";",748,download/mongodb_mongo690.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/introspect.cpp,+,"log() << ""Creating profile collection: "" << dbProfilingNS;",185,download/mongodb_mongo691.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/prefetch.cpp,+,"LOG(2) << ""ignoring exception in prefetchIndexPages(): "" << redact(e);",90,download/mongodb_mongo692.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/prefetch.cpp,+,"LOG(2) << ""ignoring exception in prefetchIndexPages(): "" << redact(e);",108,download/mongodb_mongo692.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/prefetch.cpp,+,"LOG(2) << ""ignoring exception in prefetchRecordPages(): "" << redact(e);",139,download/mongodb_mongo692.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/prefetch.cpp,+,"LOG(4) << ""index prefetch for op "" << *opType;",178,download/mongodb_mongo692.cpp
710a443a980b88a36d8c4ef0ea3cc0d375681908,"SERVER-24991 log redaction for commands, concurrency, exec, index",src/mongo/db/prefetch.cpp,+,"log() << ""changing replication index prefetch behavior to "" << prefetch;",251,download/mongodb_mongo692.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT(!k.isPrefixOf(BSON(""a"" << 1), eltCmp));",320,download/mongodb_mongo693.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT(k.isPrefixOf(BSON(""x"" << 1), eltCmp));",321,download/mongodb_mongo693.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT(k.isPrefixOf(BSON(""x"" << 1 << ""a"" << 1), eltCmp));",322,download/mongodb_mongo693.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT(!k.isPrefixOf(BSON(""a"" << 1 << ""x"" << 1), eltCmp));",323,download/mongodb_mongo693.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT(!k.isPrefixOf(BSON(""x"" << 1), eltCmp));",331,download/mongodb_mongo693.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT(!k.isPrefixOf(BSON(""x"" << 1 << ""z"" << 1), eltCmp));",332,download/mongodb_mongo693.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT(k.isPrefixOf(BSON(""x"" << 1 << ""y"" << 1), eltCmp));",333,download/mongodb_mongo693.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT(k.isPrefixOf(BSON(""x"" << 1 << ""y"" << 1 << ""z"" << 1), eltCmp));",334,download/mongodb_mongo693.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT(!k.isPrefixOf(BSON(""x""",342,download/mongodb_mongo693.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT(k.isPrefixOf(BSON(""x"" << 1 << ""a""",345,download/mongodb_mongo693.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/namespacetests.cpp,+,"ASSERT_BSONELT_EQ(nullFieldFromKey, missingField.firstElement());",114,download/mongodb_mongo694.cpp
231de89b7c8e84b7b6cf638008b483ecab6ba1b6,SERVER-24508 BSONElement::ComparatorInterface,src/mongo/dbtests/namespacetests.cpp,+,"ASSERT_BSONELT_EQ(nullFieldFromKey, missingField.firstElement());",146,download/mongodb_mongo694.cpp
ac2b7075e40fa59e8b1ed77d2510f6e9a562eeee,SERVER-25800 insertDocuments falls back on inserting documents one at a time if all-at-once inserting fails,src/mongo/db/repl/storage_interface_impl.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(txn, ""StorageInterfaceImpl::insertDocuments"", nss.ns());",386,download/mongodb_mongo695.cpp
ebf5539dac43ccc2289fabdd943ff6479a8d3920,SERVER-25827 fix UB related to NumberLong(NaN) in shell,src/mongo/dbtests/jstests.cpp,+,"ASSERT_EQUALS(NumberDouble, out.firstElement().type());",702,download/mongodb_mongo696.cpp
ebf5539dac43ccc2289fabdd943ff6479a8d3920,SERVER-25827 fix UB related to NumberLong(NaN) in shell,src/mongo/scripting/mozjs/numberlong.cpp,+,"uassert(ErrorCodes::BadValue,",168,download/mongodb_mongo697.cpp
ebf5539dac43ccc2289fabdd943ff6479a8d3920,SERVER-25827 fix UB related to NumberLong(NaN) in shell,src/mongo/scripting/mozjs/numberlong.cpp,+,"std::string str = ValueWriter(cx, arg).toString();",181,download/mongodb_mongo697.cpp
ebf5539dac43ccc2289fabdd943ff6479a8d3920,SERVER-25827 fix UB related to NumberLong(NaN) in shell,src/mongo/scripting/mozjs/numberlong.cpp,+,"numLong = ValueWriter(cx, arg).toInt64();",184,download/mongodb_mongo697.cpp
ebf5539dac43ccc2289fabdd943ff6479a8d3920,SERVER-25827 fix UB related to NumberLong(NaN) in shell,src/mongo/scripting/mozjs/numberlong.cpp,+,"uassert(ErrorCodes::BadValue, ""floatApprox must be a number"", args.get(0).isNumber());",194,download/mongodb_mongo697.cpp
ebf5539dac43ccc2289fabdd943ff6479a8d3920,SERVER-25827 fix UB related to NumberLong(NaN) in shell,src/mongo/scripting/mozjs/numberlong.cpp,+,"uassert(ErrorCodes::BadValue, ""top must be a number"", args.get(1).isNumber());",195,download/mongodb_mongo697.cpp
ebf5539dac43ccc2289fabdd943ff6479a8d3920,SERVER-25827 fix UB related to NumberLong(NaN) in shell,src/mongo/scripting/mozjs/numberlong.cpp,+,"uassert(ErrorCodes::BadValue, ""bottom must be a number"", args.get(2).isNumber());",196,download/mongodb_mongo697.cpp
ebf5539dac43ccc2289fabdd943ff6479a8d3920,SERVER-25827 fix UB related to NumberLong(NaN) in shell,src/mongo/scripting/mozjs/numberlong.cpp,+,"uassert(ErrorCodes::BadValue, ""top must be a 32 bit unsigned number"", topOpt);",202,download/mongodb_mongo697.cpp
ebf5539dac43ccc2289fabdd943ff6479a8d3920,SERVER-25827 fix UB related to NumberLong(NaN) in shell,src/mongo/scripting/mozjs/numberlong.cpp,+,"uassert(ErrorCodes::BadValue, ""bottom must be a 32 bit unsigned number"", botOpt);",207,download/mongodb_mongo697.cpp
2bea20acc0376904d9da941ae5747ddc8c643dcc,SERVER-25872 make DistLockCatalogFixture and ReplSetDistLockManagerFixture extend MongodTestFixture,src/mongo/s/catalog/dist_lock_manager_mock.cpp,+,": _catalog(std::move(catalog)), _lockReturnStatus{Status::OK()}, _lockChecker{NoLockFuncSet} {}",65,download/mongodb_mongo698.cpp
2bea20acc0376904d9da941ae5747ddc8c643dcc,SERVER-25872 make DistLockCatalogFixture and ReplSetDistLockManagerFixture extend MongodTestFixture,src/mongo/s/catalog/sharding_catalog_client_mock.cpp,+,ShardingCatalogClientMock::ShardingCatalogClientMock(,48,download/mongodb_mongo699.cpp
78270a9d4de08b4b841d2b8020bfb643b6719943,SERVER-25914 OplogFetcher should shutdown and join Fetcher at destruction,src/mongo/db/repl/oplog_fetcher.cpp,+,OplogFetcher::~OplogFetcher() {,274,download/mongodb_mongo700.cpp
4656dd6deba18c177b90d580186f4a827414fc71,SERVER_25914 OplogFetcher should shutdown and join Fetcher at destruction,src/mongo/db/repl/oplog_fetcher.cpp,+,OplogFetcher::~OplogFetcher() {,274,download/mongodb_mongo701.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/config_server_test_fixture.cpp,+,uassertStatusOK(initializeGlobalShardingStateForMongodForTest(ConnectionString::forLocal()));,135,download/mongodb_mongo702.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/config_server_test_fixture.cpp,+,std::unique_ptr<DistLockCatalog> ConfigServerTestFixture::makeDistLockCatalog(,145,download/mongodb_mongo702.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/config_server_test_fixture.cpp,+,std::unique_ptr<ShardingCatalogClient> ConfigServerTestFixture::makeShardingCatalogClient(,167,download/mongodb_mongo702.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/config_server_test_fixture.cpp,+,std::unique_ptr<ShardingCatalogManager> ConfigServerTestFixture::makeShardingCatalogManager(,175,download/mongodb_mongo702.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/config_server_test_fixture.cpp,+,std::unique_ptr<CatalogCache> ConfigServerTestFixture::makeCatalogCache() {,272,download/mongodb_mongo702.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,repl::setOplogCollectionName();,130,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,repl::createOplog(_opCtx.get());,131,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,std::unique_ptr<DistLockCatalog> MongodTestFixture::makeDistLockCatalog(,215,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,std::unique_ptr<ShardingCatalogClient> MongodTestFixture::makeShardingCatalogClient(,225,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,std::unique_ptr<ShardingCatalogManager> MongodTestFixture::makeShardingCatalogManager(,230,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,std::unique_ptr<CatalogCache> MongodTestFixture::makeCatalogCache() {,235,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,auto distLockCatalogPtr = makeDistLockCatalog(shardRegistryPtr.get());,261,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,auto catalogClientPtr = makeShardingCatalogClient(std::move(distLockManagerPtr));,267,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,auto catalogManagerPtr = makeShardingCatalogManager(catalogClientPtr.get());,268,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,auto catalogCachePtr = makeCatalogCache();,269,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,if (Grid::get(operationContext())->catalogClient(operationContext())) {,287,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,auto status = Grid::get(operationContext())->catalogClient(operationContext())->startup();,288,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,if (Grid::get(operationContext())->catalogManager()) {,294,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,auto status = Grid::get(operationContext())->catalogManager()->startup();,295,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,if (Grid::get(operationContext())->catalogManager()) {,311,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,Grid::get(operationContext())->catalogManager()->shutDown(operationContext());,312,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,if (Grid::get(operationContext())->catalogClient(operationContext())) {,315,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,->catalogClient(operationContext()),317,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,ShardingCatalogClient* MongodTestFixture::catalogClient() const {,329,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,invariant(Grid::get(operationContext())->catalogClient(operationContext()));,330,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,return Grid::get(operationContext())->catalogClient(operationContext());,331,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,ShardingCatalogManager* MongodTestFixture::catalogManager() const {,334,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,invariant(Grid::get(operationContext())->catalogManager());,335,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,return Grid::get(operationContext())->catalogManager();,336,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,CatalogCache* MongodTestFixture::catalogCache() const {,339,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,invariant(Grid::get(operationContext())->catalogCache());,340,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,return Grid::get(operationContext())->catalogCache();,341,download/mongodb_mongo703.cpp
518df32a41a080fdbf042b2fc3e6d7c38ad97980,SERVER-25563 create MongodTestFixture and make ConfigServerTestFixture extend it,src/mongo/s/mongod_test_fixture.cpp,+,DistLockCatalog* MongodTestFixture::distLockCatalog() const {,374,download/mongodb_mongo703.cpp
698cd2555dabf2ab6c1ed4c504d1e2546da0f57a,SERVER-24153 Split document_source_test.cpp into one file per stage.,src/mongo/db/pipeline/document_source_match.cpp,+,uassertNoDisallowedClauses(filter);,455,download/mongodb_mongo704.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/db/pipeline/document_source_facet.cpp,+,Value(explain ? facet.pipeline->writeExplainOps() : facet.pipeline->serialize());,138,download/mongodb_mongo705.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/db/pipeline/document_source_out.cpp,+,"uassert(17017,",71,download/mongodb_mongo706.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/db/pipeline/document_source_out.cpp,+,"uassert(17152,",75,download/mongodb_mongo706.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/db/pipeline/document_source_out.cpp,+,"uassert(16997, str::stream() << ""$out failed: "" << status.reason(), status.isOK());",177,download/mongodb_mongo706.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/db/pipeline/document_source_sample_from_random_cursor.cpp,+,"uassert(28793,",130,download/mongodb_mongo707.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/db/pipeline/document_source_sample_from_random_cursor.cpp,+,"LOG(1) << ""$sample encountered duplicate document: """,144,download/mongodb_mongo707.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/db/pipeline/document_source_skip.cpp,+,"uassert(15956, ""Argument to $skip cannot be negative"", pSkip->_nToSkip >= 0);",107,download/mongodb_mongo708.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/db/pipeline/tee_buffer.cpp,+,"uassert(40309, ""need at least one consumer for a TeeBuffer"", nConsumers > 0);",49,download/mongodb_mongo709.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/db/pipeline/tee_buffer.cpp,+,"uassert(40310,",50,download/mongodb_mongo709.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,ASSERT(source()->getNext().isEOF());,137,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,ASSERT(next.isAdvanced());,154,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,"ASSERT_VALUE_EQ(Value(1), next.getDocument().getField(""a""));",155,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,ASSERT(source()->getNext().isEOF());,157,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,ASSERT(source()->getNext().isEOF());,173,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,ASSERT(next.isAdvanced());,188,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,"ASSERT_VALUE_EQ(Value(1), next.getDocument().getField(""a""));",189,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,ASSERT(next.isAdvanced());,192,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,"ASSERT_VALUE_EQ(Value(2), next.getDocument().getField(""a""));",193,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,ASSERT(source()->getNext().isEOF());,200,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,ASSERT(source()->getNext().isAdvanced());,260,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,ASSERT(source()->getNext().isAdvanced());,261,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/documentsourcetests.cpp,+,ASSERT(source()->getNext().isEOF());,262,download/mongodb_mongo710.cpp
b1014fe1b40a69cd90b27cb336a170317eecc6b7,"SERVER-24153 Allow pipelines within $facet stage to process in batches.

This approach removes the need to buffer all documents in memory, thus
removing concerns about spilling intermediate results to disk.",src/mongo/dbtests/query_plan_executor.cpp,+,"ASSERT_THROWS_CODE(pipeline->getNext(), UserException, 16028);",317,download/mongodb_mongo711.cpp
bbc9748b355ae0ac07d6ac37db757712bc35af43,SERVER-25796 copydb support for views + additional cloner tests,src/mongo/db/cloner.cpp,+,"uassert(ErrorCodes::InternalError,",424,download/mongodb_mongo712.cpp
bbc9748b355ae0ac07d6ac37db757712bc35af43,SERVER-25796 copydb support for views + additional cloner tests,src/mongo/db/cloner.cpp,+,"uassert(ErrorCodes::CommandNotSupportedOnView,",428,download/mongodb_mongo712.cpp
f5c9d27ca6f0f4e1e2673c64b84b628ac29493ec,SERVER-24991 re-added causedBy logging construct,src/mongo/db/repl/sync_tail.cpp,+,"error() << ""Error applying inserts in bulk "" << causedBy(redact(e))",1117,download/mongodb_mongo713.cpp
c268093f8fa2ec75683ebd34481465f791356320,SERVER-25915 Log when waiting for write concern,src/mongo/db/write_concern.cpp,+,"LOG(2) << ""Waiting for write concern. OpTime: "" << replOpTime",181,download/mongodb_mongo714.cpp
f41c549e109e16a6400eb93ca6cac2ef1ce1ce5d,SERVER-25740 Prevent creation of views if featureCompatibilityVersion is 3.2,src/mongo/db/views/durable_view_catalog.cpp,+,"uassert(40307,",63,download/mongodb_mongo715.cpp
7b126b0eb8fc8bdab7e5c12c28d0ed58a48505bb,SERVER-25519 move static functions in db.cpp into anonymous namespace,src/mongo/db/db.cpp,+,"const NamespaceString startupLogCollectionName(""local.startup_log"");",169,download/mongodb_mongo716.cpp
7b126b0eb8fc8bdab7e5c12c28d0ed58a48505bb,SERVER-25519 move static functions in db.cpp into anonymous namespace,src/mongo/db/db.cpp,+,void logStartup(OperationContext* txn) {,178,download/mongodb_mongo716.cpp
7b126b0eb8fc8bdab7e5c12c28d0ed58a48505bb,SERVER-25519 move static functions in db.cpp into anonymous namespace,src/mongo/db/db.cpp,+,"void checkForCappedOplog(OperationContext* txn, Database* db) {",346,download/mongodb_mongo716.cpp
3a7690d1ab8894c919b5a2f845a4e54aad5b6ae7,SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp,src/mongo/db/db.cpp,+,"static void checkForCappedOplog(OperationContext* txn, Database* db) {",344,download/mongodb_mongo717.cpp
3a7690d1ab8894c919b5a2f845a4e54aad5b6ae7,SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp,src/mongo/db/db.cpp,+,const NamespaceString oplogNss(repl::rsOplogName);,345,download/mongodb_mongo717.cpp
3a7690d1ab8894c919b5a2f845a4e54aad5b6ae7,SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp,src/mongo/db/db.cpp,+,fassertFailedNoTrace(40115);,351,download/mongodb_mongo717.cpp
3a7690d1ab8894c919b5a2f845a4e54aad5b6ae7,SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp,src/mongo/db/db.cpp,+,"checkForCappedOplog(txn, db);",488,download/mongodb_mongo717.cpp
d740809efc076f6c48cc904a0d68aa0115ba3ab5,SERVER-25519 repl::checkForCappedOplog accepts db pointer to local database,src/mongo/db/db.cpp,+,"repl::checkForCappedOplog(txn, db);",473,download/mongodb_mongo718.cpp
d740809efc076f6c48cc904a0d68aa0115ba3ab5,SERVER-25519 repl::checkForCappedOplog accepts db pointer to local database,src/mongo/db/repl/oplog.cpp,+,"void checkForCappedOplog(OperationContext* txn, Database* db) {",1081,download/mongodb_mongo719.cpp
30bb947cdb9b5e3f576b31855b8fba58a6d89c1a,"Revert ""SERVER-25519 repl::checkForCappedOplog accepts db pointer to local database""

This reverts commit b046947969597fa69000914ae839675b3655313b.",src/mongo/db/db.cpp,+,repl::checkForCappedOplog(txn);,474,download/mongodb_mongo720.cpp
30bb947cdb9b5e3f576b31855b8fba58a6d89c1a,"Revert ""SERVER-25519 repl::checkForCappedOplog accepts db pointer to local database""

This reverts commit b046947969597fa69000914ae839675b3655313b.",src/mongo/db/repl/oplog.cpp,+,void checkForCappedOplog(OperationContext* txn) {,1081,download/mongodb_mongo721.cpp
30bb947cdb9b5e3f576b31855b8fba58a6d89c1a,"Revert ""SERVER-25519 repl::checkForCappedOplog accepts db pointer to local database""

This reverts commit b046947969597fa69000914ae839675b3655313b.",src/mongo/db/repl/oplog.cpp,+,"Lock::CollectionLock oplogCollectionLock(txn->lockState(), oplogNss.ns(), MODE_X);",1088,download/mongodb_mongo721.cpp
309b27dad4cafbdf33fa625aee6005e26a64629b,"Revert ""SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp""

This reverts commit 6db35dc5b10f7c0cf4b1c34f52c8dc4c4b6faca3.",src/mongo/db/db.cpp,+,"repl::checkForCappedOplog(txn, db);",473,download/mongodb_mongo722.cpp
309b27dad4cafbdf33fa625aee6005e26a64629b,"Revert ""SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp""

This reverts commit 6db35dc5b10f7c0cf4b1c34f52c8dc4c4b6faca3.",src/mongo/db/repl/oplog.cpp,+,"void checkForCappedOplog(OperationContext* txn, Database* db) {",1081,download/mongodb_mongo723.cpp
309b27dad4cafbdf33fa625aee6005e26a64629b,"Revert ""SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp""

This reverts commit 6db35dc5b10f7c0cf4b1c34f52c8dc4c4b6faca3.",src/mongo/db/repl/oplog.cpp,+,const NamespaceString oplogNss(_oplogCollectionName);,1083,download/mongodb_mongo723.cpp
309b27dad4cafbdf33fa625aee6005e26a64629b,"Revert ""SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp""

This reverts commit 6db35dc5b10f7c0cf4b1c34f52c8dc4c4b6faca3.",src/mongo/db/repl/oplog.cpp,+,fassertFailedNoTrace(40115);,1089,download/mongodb_mongo723.cpp
d852a0716c3dbc34f2ca33dc183965926f726db8,SERVER-25811 send collection version with CommitChunkMigration command,src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,auto findResponse = uassertStatusOK(,132,download/mongodb_mongo724.cpp
d852a0716c3dbc34f2ca33dc183965926f726db8,SERVER-25811 send collection version with CommitChunkMigration command,src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,"uassert(ErrorCodes::StaleEpoch,",143,download/mongodb_mongo724.cpp
d852a0716c3dbc34f2ca33dc183965926f726db8,SERVER-25811 send collection version with CommitChunkMigration command,src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,"uassert(ErrorCodes::IncompatibleShardingMetadata,",148,download/mongodb_mongo724.cpp
d852a0716c3dbc34f2ca33dc183965926f726db8,SERVER-25811 send collection version with CommitChunkMigration command,src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,ChunkType chunk = uassertStatusOK(ChunkType::fromBSON(findResponse.docs.front()));,158,download/mongodb_mongo724.cpp
d852a0716c3dbc34f2ca33dc183965926f726db8,SERVER-25811 send collection version with CommitChunkMigration command,src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,"uassert(ErrorCodes::StaleEpoch,",160,download/mongodb_mongo724.cpp
d852a0716c3dbc34f2ca33dc183965926f726db8,SERVER-25811 send collection version with CommitChunkMigration command,src/mongo/db/s/migration_source_manager.cpp,+,"Status migrationErrorStatus(ErrorCodes::NotYetInitialized,",377,download/mongodb_mongo725.cpp
6db35dc5b10f7c0cf4b1c34f52c8dc4c4b6faca3,SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp,src/mongo/db/db.cpp,+,"static void checkForCappedOplog(OperationContext* txn, Database* db) {",344,download/mongodb_mongo726.cpp
6db35dc5b10f7c0cf4b1c34f52c8dc4c4b6faca3,SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp,src/mongo/db/db.cpp,+,const NamespaceString oplogNss(repl::rsOplogName);,345,download/mongodb_mongo726.cpp
6db35dc5b10f7c0cf4b1c34f52c8dc4c4b6faca3,SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp,src/mongo/db/db.cpp,+,fassertFailedNoTrace(40115);,351,download/mongodb_mongo726.cpp
6db35dc5b10f7c0cf4b1c34f52c8dc4c4b6faca3,SERVER-25519 moved checkForCappedOplog from oplog.cpp to db.cpp,src/mongo/db/db.cpp,+,"checkForCappedOplog(txn, db);",488,download/mongodb_mongo726.cpp
b046947969597fa69000914ae839675b3655313b,SERVER-25519 repl::checkForCappedOplog accepts db pointer to local database,src/mongo/db/db.cpp,+,"repl::checkForCappedOplog(txn, db);",473,download/mongodb_mongo727.cpp
b046947969597fa69000914ae839675b3655313b,SERVER-25519 repl::checkForCappedOplog accepts db pointer to local database,src/mongo/db/repl/oplog.cpp,+,"void checkForCappedOplog(OperationContext* txn, Database* db) {",1081,download/mongodb_mongo728.cpp
cc38d23180248e5c5a6b21adf6ee7a2b4e670f0f,SERVER-24395 Do not display startup warnings when querying for version,src/mongo/db/startup_warnings_mongod.cpp,+,"log() << ""Hotfix KB2731284 or later update is not installed, will zero-out data files.""",365,download/mongodb_mongo729.cpp
7edcfa7cd390ebb2d991a9de529ac0e4f7ee26fe,SERVER-23705 Number of databases on Windows is limited when using on-disk encryption,src/mongo/base/secure_allocator.cpp,+,if (GetLastError() == ERROR_NOT_ALL_ASSIGNED) {,103,download/mongodb_mongo730.cpp
7edcfa7cd390ebb2d991a9de529ac0e4f7ee26fe,SERVER-23705 Number of databases on Windows is limited when using on-disk encryption,src/mongo/base/secure_allocator.cpp,+,fassertFailed(40285);,130,download/mongodb_mongo730.cpp
7edcfa7cd390ebb2d991a9de529ac0e4f7ee26fe,SERVER-23705 Number of databases on Windows is limited when using on-disk encryption,src/mongo/base/secure_allocator.cpp,+,fassertFailed(40286);,145,download/mongodb_mongo730.cpp
7edcfa7cd390ebb2d991a9de529ac0e4f7ee26fe,SERVER-23705 Number of databases on Windows is limited when using on-disk encryption,src/mongo/base/secure_allocator.cpp,+,DWORD gle = GetLastError();,169,download/mongodb_mongo730.cpp
65bfeee99c1fc92229d88090f39ec4b9e4f2e93b,SERVER-25850: log slave progress during wc-repl-timeout failes in testing,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Replication for failed WC: "" << writeConcern.toBSON()",1672,download/mongodb_mongo731.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/range_deleter_db_env.cpp,+,"log() << ""Deleter starting delete for: "" << ns << "" from "" << redact(inclusiveLower) << "" -> """,87,download/mongodb_mongo732.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repair_database.cpp,+,"log() << ""Invalid BSON detected at "" << id << "": "" << redact(status) << "". Deleting."";",143,download/mongodb_mongo733.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/bgsync.cpp,+,"log() << ""Starting rollback due to "" << redact(fetcherReturnStatus);",436,download/mongodb_mongo734.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/collection_cloner.cpp,+,"LOG(1) << ""CollectionCloner ns:"" << _destNss << "" finished with status: "" << redact(status);",404,download/mongodb_mongo735.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/data_replicator.cpp,+,"LOG(2) << ""returning last oplog entry: "" << redact(entry) << "", from: "" << source",183,download/mongodb_mongo736.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/data_replicator.cpp,+,"log() << ""data clone finished, status: "" << redact(status);",818,download/mongodb_mongo736.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to clone data due to '"" << redact(status) << ""'"";",824,download/mongodb_mongo736.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to apply batch due to '"" << redact(status) << ""'"";",1135,download/mongodb_mongo736.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Error fetching oplog during initial sync: "" << redact(status);",1427,download/mongodb_mongo736.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Blacklisting "" << syncSource << "" due to fetcher error: '""",1464,download/mongodb_mongo736.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed rollback: "" << redact(rollbackStatus);",1485,download/mongodb_mongo736.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"log() << ""sync: caught user assertion "" << redact(e) << "" while applying op: "" << redact(op)",654,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"log() << ""sync: caught db exception "" << redact(e) << "" while applying op: "" << redact(op)",658,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"log() << ""sync: caught user assertion "" << redact(e) << "" while applying op: "" << redact(op)",677,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"log() << ""sync: caught db exception "" << redact(e) << "" while applying op: "" << redact(op)",681,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"LOG(6) << ""processing op: "" << redact(op) << endl;",697,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"log() << ""skipping bad op in oplog: "" << redact(op) << endl;",707,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"log() << ""halting replication, bad op in oplog:\n  "" << redact(op) << endl;",711,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,error() << redact(status);,956,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"error() << ""$err reading remote oplog: "" + redact(err) << '\n';",990,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"error() << ""bad object read from remote oplog: "" << redact(op) << '\n';",994,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"log() << ""op: "" << redact(op) << endl;",1074,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"log() << ""replMain AssertionException "" << redact(e) << endl;",1220,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"log() << ""AssertionException "" << redact(e) << endl;",1223,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"log() << ""DBException "" << redact(e) << endl;",1227,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/master_slave.cpp,+,"log() << ""std::exception "" << redact(e.what()) << endl;",1230,download/mongodb_mongo737.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/oplog.cpp,+,"LOG(2) << ""Oplog tail entry: "" << redact(entry);",317,download/mongodb_mongo738.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/oplog.cpp,+,"LOG(3) << ""applying op: "" << redact(op);",656,download/mongodb_mongo738.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/oplog.cpp,+,"error() << ""Failed command "" << redact(o) << "" on "" << nss.db()",1028,download/mongodb_mongo738.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/oplog.cpp,+,"error() << ""Failed command "" << redact(o) << "" on "" << nss.db()",1033,download/mongodb_mongo738.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/oplog_fetcher.cpp,+,"LOG(2) << ""Error returned from oplog query: "" << redact(result.getStatus());",322,download/mongodb_mongo739.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/oplogreader.cpp,+,"LOG(2) << ns << "".find("" << redact(query) << ')' << endl;",112,download/mongodb_mongo740.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/rs_initialsync.cpp,+,error() << redact(e);,535,download/mongodb_mongo741.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/rs_rollback.cpp,+,"LOG(1) << ""rollback re-get objects: "" << redact(e);",371,download/mongodb_mongo742.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/rs_rollback.cpp,+,"error() << ""rollback couldn't re-get ns:"" << doc.ns << "" _id:"" << redact(doc._id) << ' '",372,download/mongodb_mongo742.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/rs_rollback.cpp,+,error() << redact(e.what());,861,download/mongodb_mongo742.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/rs_rollback.cpp,+,"error() << ""exception during rollback: "" << redact(e.what());",882,download/mongodb_mongo742.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/sync_tail.cpp,+,"error() << ""skipping bad op in oplog: "" << redact(op);",307,download/mongodb_mongo743.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/sync_tail.cpp,+,"LOG(2) << ""ignoring exception in prefetchOp(): "" << redact(e) << endl;",422,download/mongodb_mongo743.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/sync_tail.cpp,+,"log() << ""Unhandled std::exception in prefetchOp(): "" << redact(e.what()) << endl;",424,download/mongodb_mongo743.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/sync_tail.cpp,+,"error() << ""assertion fetching missing object: "" << redact(e) << endl;",978,download/mongodb_mongo743.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/sync_tail.cpp,+,"log() << ""o2: "" << redact(o.getObjectField(""o2""));",1006,download/mongodb_mongo743.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/sync_tail.cpp,+,"LOG(1) << ""inserted missing doc: "" << redact(missingObj);",1022,download/mongodb_mongo743.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/sync_tail.cpp,+,"error() << ""Error applying inserts in bulk "" << redact(e)",1117,download/mongodb_mongo743.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/task_runner.cpp,+,"log() << ""Unhandled exception in task runner: "" << redact(exceptionToStatus());",68,download/mongodb_mongo744.cpp
ba5960835a055a0638c1123c47cad984e315682a,"SERVER-24991 log redaction for sharding, repl files",src/mongo/db/repl/task_runner.cpp,+,"error() << ""Exception thrown in runSynchronousTask: "" << redact(returnStatus);",235,download/mongodb_mongo744.cpp
de66470b9e14717c829e07010759a89437946f5b,"SERVER-25832 Add version of Shard::runCommand that retries indefinitely, and use it for moveChunk",src/mongo/s/client/shard.cpp,+,auto interruptStatus = txn->checkForInterruptNoAssert();,120,download/mongodb_mongo745.cpp
de66470b9e14717c829e07010759a89437946f5b,"SERVER-25832 Add version of Shard::runCommand that retries indefinitely, and use it for moveChunk",src/mongo/s/client/shard.cpp,+,"if (isRetriableError(commandStatus.code(), retryPolicy)) {",129,download/mongodb_mongo745.cpp
de66470b9e14717c829e07010759a89437946f5b,"SERVER-25832 Add version of Shard::runCommand that retries indefinitely, and use it for moveChunk",src/mongo/s/client/shard.cpp,+,"LOG(2) << ""Command "" << redact(cmdObj)",130,download/mongodb_mongo745.cpp
de66470b9e14717c829e07010759a89437946f5b,"SERVER-25832 Add version of Shard::runCommand that retries indefinitely, and use it for moveChunk",src/mongo/s/client/shard.cpp,+,auto interruptStatus = txn->checkForInterruptNoAssert();,159,download/mongodb_mongo745.cpp
973a02dac92d3d192fd5e98011c4c4704356c3e2,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/balancer/balancer.cpp,+,auto result = uassertStatusOK(,458,download/mongodb_mongo746.cpp
973a02dac92d3d192fd5e98011c4c4704356c3e2,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/balancer/balancer.cpp,+,result = uassertStatusOK(s->runCommandWithFixedRetryAttempts(,475,download/mongodb_mongo746.cpp
973a02dac92d3d192fd5e98011c4c4704356c3e2,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/balancer/balancer.cpp,+,result = uassertStatusOK(,490,download/mongodb_mongo746.cpp
973a02dac92d3d192fd5e98011c4c4704356c3e2,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/chunk_manager.cpp,+,auto result = uassertStatusOK(primaryShard->runCommandWithFixedRetryAttempts(,392,download/mongodb_mongo747.cpp
973a02dac92d3d192fd5e98011c4c4704356c3e2,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_add_shard_cmd.cpp,+,auto cmdResponseStatus = uassertStatusOK(,97,download/mongodb_mongo748.cpp
973a02dac92d3d192fd5e98011c4c4704356c3e2,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_add_shard_to_zone_cmd.cpp,+,auto cmdResponseStatus = uassertStatusOK(,117,download/mongodb_mongo749.cpp
973a02dac92d3d192fd5e98011c4c4704356c3e2,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_control_balancer_cmd.cpp,+,auto cmdResponse = uassertStatusOK(,92,download/mongodb_mongo750.cpp
973a02dac92d3d192fd5e98011c4c4704356c3e2,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_fsync_cmd.cpp,+,auto response = uassertStatusOK(s->runCommandWithFixedRetryAttempts(,101,download/mongodb_mongo751.cpp
973a02dac92d3d192fd5e98011c4c4704356c3e2,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_list_databases_cmd.cpp,+,auto response = uassertStatusOK(s->runCommandWithFixedRetryAttempts(,109,download/mongodb_mongo752.cpp
973a02dac92d3d192fd5e98011c4c4704356c3e2,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_remove_shard_from_zone_cmd.cpp,+,auto cmdResponseStatus = uassertStatusOK(,125,download/mongodb_mongo753.cpp
973a02dac92d3d192fd5e98011c4c4704356c3e2,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_update_zone_key_range_cmd.cpp,+,auto cmdResponseStatus = uassertStatusOK(,140,download/mongodb_mongo754.cpp
6001cd164233e96acb16ea92a7880106eeb2659f,SERVER-25377 check type of ixscan 'name' field in stageDebug command,src/mongo/db/exec/stagedebug_cmd.cpp,+,"uassert(40306,",296,download/mongodb_mongo755.cpp
6779eadd56adfaa6ceb5d1d6dd3ad0f10067bb99,SERVER-25801 Only log x.509 roles when OID extension is present,src/mongo/util/net/ssl_manager.cpp,+,"LOG(1) << ""MONGODB-X509 authorization parsed the following roles from peer """,1351,download/mongodb_mongo756.cpp
4b01a1dc229277deefb99b996f5513b8ee928f71,SERVER-25031 removed redundant arguments from MultiApplier callback. These values are known to the caller at the time of construction,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to apply batch due to '"" << status << ""'"";",1139,download/mongodb_mongo757.cpp
4b01a1dc229277deefb99b996f5513b8ee928f71,SERVER-25031 removed redundant arguments from MultiApplier callback. These values are known to the caller at the time of construction,src/mongo/db/repl/data_replicator.cpp,+,"fassertFailedWithStatusNoTrace(40190, status);",1144,download/mongodb_mongo757.cpp
4b01a1dc229277deefb99b996f5513b8ee928f71,SERVER-25031 removed redundant arguments from MultiApplier callback. These values are known to the caller at the time of construction,src/mongo/db/repl/data_replicator.cpp,+,auto lastApplied = uassertStatusOK(opTimeWithHashStatus);,1238,download/mongodb_mongo757.cpp
2374ef1a3ac05e3fca39485ef4824f559b1c082c,SERVER-24470 CommitChunkMigration command checks that the balancer still has the distributed lock,src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,Grid::get(txn)->catalogClient(txn)->getDistLockManager()->getProcessID();,216,download/mongodb_mongo758.cpp
2374ef1a3ac05e3fca39485ef4824f559b1c082c,SERVER-24470 CommitChunkMigration command checks that the balancer still has the distributed lock,src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,auto lockQueryResponse = uassertStatusOK(,219,download/mongodb_mongo758.cpp
2374ef1a3ac05e3fca39485ef4824f559b1c082c,SERVER-24470 CommitChunkMigration command checks that the balancer still has the distributed lock,src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,"uassert(ErrorCodes::BalancerLostDistributedLock,",235,download/mongodb_mongo758.cpp
be09d7bf0a72f44f8909221f178a70a2cb0a6b68,"SERVER-25180 make full histogram output optional

For full per-collection histograms, use the aggregation stage

    { $collStats: { latencyStats: { histograms: true } } }

For the full global histogram, invoke serverStatus with

    db.serverStatus( { opLatencies: { histograms: true } } )",src/mongo/db/pipeline/document_source_coll_stats.cpp,+,"uassert(40305,",64,download/mongodb_mongo759.cpp
5aa85782d7de6810954da98a01068f223dd0081a,SERVER-25798 return appropriate views error when validating a view,src/mongo/db/commands/validate.cpp,+,"if (ctx.getDb() && ctx.getDb()->getViewCatalog()->lookup(txn, ns_string.ns())) {",117,download/mongodb_mongo760.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/migration_destination_manager.cpp,+,"error() << ""migrate failed: "" << redact(e.what()) << migrateLog;",414,download/mongodb_mongo761.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""starting receiving-end of migration of chunk "" << redact(min) << "" -> "" << redact(max)",451,download/mongodb_mongo761.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/migration_destination_manager.cpp,+,"error() << ""_transferMods failed: "" << redact(res) << migrateLog;",761,download/mongodb_mongo761.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""_transferMods failed in STEADY state: "" << redact(res) << migrateLog;",856,download/mongodb_mongo761.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/migration_destination_manager.cpp,+,"log() << ""migrate commit flushed to journal for '"" << ns << ""' "" << redact(min)",1023,download/mongodb_mongo761.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/move_chunk_command.cpp,+,"log() << ""Error occured while performing cleanup: "" << redact(errMsg);",278,download/mongodb_mongo762.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/move_chunk_command.cpp,+,"log() << ""could not queue migration cleanup: "" << redact(errMsg);",288,download/mongodb_mongo762.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/sharding_state_recovery.cpp,+,"LOG(1) << ""Changing sharding recovery document "" << redact(updateObj);",199,download/mongodb_mongo763.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/sharding_state_recovery.cpp,+,"log() << ""Sharding state recovery process found document "" << redact(recoveryDoc.toBSON());",271,download/mongodb_mongo763.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/split_chunk_command.cpp,+,"log() << ""checking metadataAfterSplit for new chunk boundaries ["" << redact(startKey) << "",""",122,download/mongodb_mongo764.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/split_chunk_command.cpp,+,"log() << ""ERROR, found ["" << redact(startKey) << "","" << redact(nextChunk.getMax())",127,download/mongodb_mongo764.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/split_chunk_command.cpp,+,"log() << ""received splitChunk request: "" << redact(cmdObj);",253,download/mongodb_mongo764.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/split_chunk_command.cpp,+,"LOG(1) << ""splitChunk ["" << redact(min) << "","" << redact(max)",410,download/mongodb_mongo764.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/split_vector_command.cpp,+,"log() << ""request split points lookup for chunk "" << nss.toString() << "" """,233,download/mongodb_mongo765.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/s/split_vector_command.cpp,+,"LOG(4) << ""picked a split key: "" << redact(currKey);",295,download/mongodb_mongo765.cpp
c5f891c37a7fabc2455f2f0230ec9bcd76b62096,SERVER-24991 log redaction for storage mongos,src/mongo/db/stats/snapshots.cpp,+,"log() << ""ERROR in SnapshotThread: "" << redact(e.what()) << endl;",112,download/mongodb_mongo766.cpp
f21afe8e60b5ab6f061613c3ee0f8ff9896e881a,"Revert ""SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts""

This reverts commit 7614c0eb2449eb4ec22d21b677177124d61f1888.",src/mongo/s/balancer/balancer.cpp,+,"uassertStatusOK(s->runCommand(txn,",459,download/mongodb_mongo767.cpp
f21afe8e60b5ab6f061613c3ee0f8ff9896e881a,"Revert ""SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts""

This reverts commit 7614c0eb2449eb4ec22d21b677177124d61f1888.",src/mongo/s/balancer/balancer.cpp,+,result = uassertStatusOK(,475,download/mongodb_mongo767.cpp
f21afe8e60b5ab6f061613c3ee0f8ff9896e881a,"Revert ""SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts""

This reverts commit 7614c0eb2449eb4ec22d21b677177124d61f1888.",src/mongo/s/balancer/balancer.cpp,+,result = uassertStatusOK(otherShardStatus.getValue()->runCommand(,491,download/mongodb_mongo767.cpp
f21afe8e60b5ab6f061613c3ee0f8ff9896e881a,"Revert ""SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts""

This reverts commit 7614c0eb2449eb4ec22d21b677177124d61f1888.",src/mongo/s/chunk_manager.cpp,+,auto result = uassertStatusOK(,392,download/mongodb_mongo768.cpp
f21afe8e60b5ab6f061613c3ee0f8ff9896e881a,"Revert ""SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts""

This reverts commit 7614c0eb2449eb4ec22d21b677177124d61f1888.",src/mongo/s/commands/cluster_add_shard_cmd.cpp,+,"uassertStatusOK(configShard->runCommand(txn,",98,download/mongodb_mongo769.cpp
f21afe8e60b5ab6f061613c3ee0f8ff9896e881a,"Revert ""SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts""

This reverts commit 7614c0eb2449eb4ec22d21b677177124d61f1888.",src/mongo/s/commands/cluster_add_shard_to_zone_cmd.cpp,+,"uassertStatusOK(configShard->runCommand(txn,",118,download/mongodb_mongo770.cpp
f21afe8e60b5ab6f061613c3ee0f8ff9896e881a,"Revert ""SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts""

This reverts commit 7614c0eb2449eb4ec22d21b677177124d61f1888.",src/mongo/s/commands/cluster_control_balancer_cmd.cpp,+,"uassertStatusOK(configShard->runCommand(txn,",93,download/mongodb_mongo771.cpp
f21afe8e60b5ab6f061613c3ee0f8ff9896e881a,"Revert ""SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts""

This reverts commit 7614c0eb2449eb4ec22d21b677177124d61f1888.",src/mongo/s/commands/cluster_fsync_cmd.cpp,+,"uassertStatusOK(s->runCommand(txn,",102,download/mongodb_mongo772.cpp
f21afe8e60b5ab6f061613c3ee0f8ff9896e881a,"Revert ""SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts""

This reverts commit 7614c0eb2449eb4ec22d21b677177124d61f1888.",src/mongo/s/commands/cluster_list_databases_cmd.cpp,+,auto response = uassertStatusOK(,109,download/mongodb_mongo773.cpp
f21afe8e60b5ab6f061613c3ee0f8ff9896e881a,"Revert ""SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts""

This reverts commit 7614c0eb2449eb4ec22d21b677177124d61f1888.",src/mongo/s/commands/cluster_remove_shard_from_zone_cmd.cpp,+,"uassertStatusOK(configShard->runCommand(txn,",126,download/mongodb_mongo774.cpp
f21afe8e60b5ab6f061613c3ee0f8ff9896e881a,"Revert ""SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts""

This reverts commit 7614c0eb2449eb4ec22d21b677177124d61f1888.",src/mongo/s/commands/cluster_update_zone_key_range_cmd.cpp,+,"uassertStatusOK(configShard->runCommand(txn,",141,download/mongodb_mongo775.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,noopWrite(&txn);,85,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,NoopWriter::NoopWriter(Seconds writeInterval) : _writeInterval(writeInterval) {,111,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,"uassert(ErrorCodes::BadValue, ""write interval must be positive"", writeInterval > Seconds(0));",112,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,NoopWriter::~NoopWriter() {,115,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,"_writeInterval, [this](OperationContext* txn) { _writeNoop(txn); });",125,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,void NoopWriter::_writeNoop(OperationContext* txn) {,134,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,"LOG(1) << ""Global lock is not available skipping noopWrite"";",140,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,"if (!replCoord->canAcceptWritesForDatabase(""admin"")) {",147,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,"LOG(1) << ""Not a primary, skipping the noop write"";",148,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,"LOG(1) << ""Not scheduling a noop write. Last known OpTime: "" << _lastKnownOpTime",156,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,"LOG(1) << ""Writing noop to oplog"";",159,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,"MONGO_WRITE_CONFLICT_RETRY_LOOP_END(txn, ""writeNoop"", rsOplogName);",165,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/noop_writer.cpp,+,"LOG(1) << ""Set last known op time to "" << _lastKnownOpTime;",169,download/mongodb_mongo776.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"LOG(1) << ""Stopping noop writer"";",298,download/mongodb_mongo777.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,void ReplicationCoordinatorExternalStateImpl::startNoopWriter(OpTime opTime) {,835,download/mongodb_mongo777.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,void ReplicationCoordinatorExternalStateImpl::stopNoopWriter() {,840,download/mongodb_mongo777.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,void ReplicationCoordinatorExternalStateImpl::setupNoopWriter(Seconds waitTime) {,845,download/mongodb_mongo777.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/replication_coordinator_external_state_mock.cpp,+,void ReplicationCoordinatorExternalStateMock::startNoopWriter(OpTime opTime) {},297,download/mongodb_mongo778.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/replication_coordinator_external_state_mock.cpp,+,void ReplicationCoordinatorExternalStateMock::stopNoopWriter() {},299,download/mongodb_mongo778.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/replication_coordinator_external_state_mock.cpp,+,void ReplicationCoordinatorExternalStateMock::setupNoopWriter(Seconds waitTime) {},301,download/mongodb_mongo778.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/replication_coordinator_impl.cpp,+,const Seconds kNoopWriterPeriod(10);,128,download/mongodb_mongo779.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/replication_coordinator_impl.cpp,+,_externalState->setupNoopWriter(kNoopWriterPeriod);,350,download/mongodb_mongo779.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/replication_coordinator_impl.cpp,+,_externalState->startNoopWriter(_getMyLastAppliedOpTime_inlock());,912,download/mongodb_mongo779.cpp
355ff243409c2a330d64f212d809609402e80bb9,SERVER-23892 Do periodic replicated writes while idle,src/mongo/db/repl/replication_coordinator_impl.cpp,+,_externalState->stopNoopWriter();,2711,download/mongodb_mongo779.cpp
15c19250190932511229ac0e70bacb4c9b107b82,SERVER-25071 Flush data replication queue as part of clean shutdown,src/mongo/db/repl/bgsync.cpp,+,"LOG(2) << ""bgsync buffer has "" << _oplogBuffer->getSize() << "" bytes"";",512,download/mongodb_mongo780.cpp
15c19250190932511229ac0e70bacb4c9b107b82,SERVER-25071 Flush data replication queue as part of clean shutdown,src/mongo/db/repl/rs_sync.cpp,+,"SyncTail(_bgsync, multiSyncApply).oplogApplication(_replCoord);",111,download/mongodb_mongo781.cpp
15c19250190932511229ac0e70bacb4c9b107b82,SERVER-25071 Flush data replication queue as part of clean shutdown,src/mongo/db/repl/sync_tail.cpp,+,return fassertStatusOK(,630,download/mongodb_mongo782.cpp
15c19250190932511229ac0e70bacb4c9b107b82,SERVER-25071 Flush data replication queue as part of clean shutdown,src/mongo/db/repl/sync_tail.cpp,+,fassertFailedNoTrace(40304);,725,download/mongodb_mongo782.cpp
15c19250190932511229ac0e70bacb4c9b107b82,SERVER-25071 Flush data replication queue as part of clean shutdown,src/mongo/db/repl/sync_tail.cpp,+,// TODO remove once we trust noexcept enough to mark oplogApplication() as noexcept.,761,download/mongodb_mongo782.cpp
15c19250190932511229ac0e70bacb4c9b107b82,SERVER-25071 Flush data replication queue as part of clean shutdown,src/mongo/db/repl/sync_tail.cpp,+,void SyncTail::oplogApplication(ReplicationCoordinator* replCoord) {,769,download/mongodb_mongo782.cpp
15c19250190932511229ac0e70bacb4c9b107b82,SERVER-25071 Flush data replication queue as part of clean shutdown,src/mongo/db/repl/sync_tail.cpp,+,"fassertNoTrace(16359, multiSyncApply_noAbort(txn.get(), ops, syncApply));",1042,download/mongodb_mongo782.cpp
15c19250190932511229ac0e70bacb4c9b107b82,SERVER-25071 Flush data replication queue as part of clean shutdown,src/mongo/db/repl/sync_tail.cpp,+,"error() << ""Error applying inserts in bulk "" << causedBy(e)",1123,download/mongodb_mongo782.cpp
15c19250190932511229ac0e70bacb4c9b107b82,SERVER-25071 Flush data replication queue as part of clean shutdown,src/mongo/db/repl/sync_tail.cpp,+,"fassertNoTrace(15915, multiInitialSyncApply_noAbort(txn.get(), ops, st));",1150,download/mongodb_mongo782.cpp
7614c0eb2449eb4ec22d21b677177124d61f1888,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/balancer/balancer.cpp,+,auto result = uassertStatusOK(,458,download/mongodb_mongo783.cpp
7614c0eb2449eb4ec22d21b677177124d61f1888,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/balancer/balancer.cpp,+,result = uassertStatusOK(s->runCommandWithFixedRetryAttempts(,475,download/mongodb_mongo783.cpp
7614c0eb2449eb4ec22d21b677177124d61f1888,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/balancer/balancer.cpp,+,result = uassertStatusOK(,490,download/mongodb_mongo783.cpp
7614c0eb2449eb4ec22d21b677177124d61f1888,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/chunk_manager.cpp,+,auto result = uassertStatusOK(primaryShard->runCommandWithFixedRetryAttempts(,392,download/mongodb_mongo784.cpp
7614c0eb2449eb4ec22d21b677177124d61f1888,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_add_shard_cmd.cpp,+,auto cmdResponseStatus = uassertStatusOK(,97,download/mongodb_mongo785.cpp
7614c0eb2449eb4ec22d21b677177124d61f1888,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_add_shard_to_zone_cmd.cpp,+,auto cmdResponseStatus = uassertStatusOK(,117,download/mongodb_mongo786.cpp
7614c0eb2449eb4ec22d21b677177124d61f1888,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_control_balancer_cmd.cpp,+,auto cmdResponse = uassertStatusOK(,92,download/mongodb_mongo787.cpp
7614c0eb2449eb4ec22d21b677177124d61f1888,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_fsync_cmd.cpp,+,auto response = uassertStatusOK(s->runCommandWithFixedRetryAttempts(,101,download/mongodb_mongo788.cpp
7614c0eb2449eb4ec22d21b677177124d61f1888,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_list_databases_cmd.cpp,+,auto response = uassertStatusOK(s->runCommandWithFixedRetryAttempts(,109,download/mongodb_mongo789.cpp
7614c0eb2449eb4ec22d21b677177124d61f1888,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_remove_shard_from_zone_cmd.cpp,+,auto cmdResponseStatus = uassertStatusOK(,125,download/mongodb_mongo790.cpp
7614c0eb2449eb4ec22d21b677177124d61f1888,SERVER-25832 Rename Shard::runCommand to Shard::runCommandWithFixedRetryAttempts,src/mongo/s/commands/cluster_update_zone_key_range_cmd.cpp,+,auto cmdResponseStatus = uassertStatusOK(,140,download/mongodb_mongo791.cpp
6bf9fd2e5a5f043b950cb77361be3c1ed7a7d0af,SERVER-25677 Clear cached clusterId if config.version document is rolled back.,src/mongo/db/s/collection_sharding_state.cpp,+,"new RemoveShardLogOpHandler(txn, ShardId(std::move(shardIdStr))));",321,download/mongodb_mongo792.cpp
6bf9fd2e5a5f043b950cb77361be3c1ed7a7d0af,SERVER-25677 Clear cached clusterId if config.version document is rolled back.,src/mongo/db/s/collection_sharding_state.cpp,+,"uasserted(40302, ""cannot delete config.version document while in --configsvr mode"");",324,download/mongodb_mongo792.cpp
6bf9fd2e5a5f043b950cb77361be3c1ed7a7d0af,SERVER-25677 Clear cached clusterId if config.version document is rolled back.,src/mongo/db/s/collection_sharding_state.cpp,+,Grid::get(txn)->catalogManager()->discardCachedConfigDatabaseInitializationState();,327,download/mongodb_mongo792.cpp
6bf9fd2e5a5f043b950cb77361be3c1ed7a7d0af,SERVER-25677 Clear cached clusterId if config.version document is rolled back.,src/mongo/db/s/collection_sharding_state.cpp,+,"dassert(txn->lockState()->isCollectionLockedForMode(_nss.ns(), MODE_IX));",328,download/mongodb_mongo792.cpp
6bf9fd2e5a5f043b950cb77361be3c1ed7a7d0af,SERVER-25677 Clear cached clusterId if config.version document is rolled back.,src/mongo/db/s/collection_sharding_state.cpp,+,invariant(!txn->writesAreReplicated());,333,download/mongodb_mongo792.cpp
6bf9fd2e5a5f043b950cb77361be3c1ed7a7d0af,SERVER-25677 Clear cached clusterId if config.version document is rolled back.,src/mongo/db/s/collection_sharding_state.cpp,+,"uasserted(40303, ""cannot drop config.version document while in --configsvr mode"");",346,download/mongodb_mongo792.cpp
6bf9fd2e5a5f043b950cb77361be3c1ed7a7d0af,SERVER-25677 Clear cached clusterId if config.version document is rolled back.,src/mongo/db/s/collection_sharding_state.cpp,+,Grid::get(txn)->catalogManager()->discardCachedConfigDatabaseInitializationState();,349,download/mongodb_mongo792.cpp
a4a9a9ad29415239091db171e01f45677464f668,SERVER-24771 Support killCursors & mongos getMore on view namespace,src/mongo/db/commands/killcursors_cmd.cpp,+,"auto resolved = db->getViewCatalog()->resolveView(txn, nss);",64,download/mongodb_mongo793.cpp
a4a9a9ad29415239091db171e01f45677464f668,SERVER-24771 Support killCursors & mongos getMore on view namespace,src/mongo/db/commands/list_indexes.cpp,+,dassert(ns == cursorNss.getTargetNSForListIndexes());,177,download/mongodb_mongo794.cpp
a4a9a9ad29415239091db171e01f45677464f668,SERVER-24771 Support killCursors & mongos getMore on view namespace,src/mongo/db/namespace_string.cpp,+,dassert(nss.isValid());,122,download/mongodb_mongo795.cpp
a4a9a9ad29415239091db171e01f45677464f668,SERVER-24771 Support killCursors & mongos getMore on view namespace,src/mongo/db/namespace_string.cpp,+,dassert(nss.isListCollectionsCursorNS());,123,download/mongodb_mongo795.cpp
a4a9a9ad29415239091db171e01f45677464f668,SERVER-24771 Support killCursors & mongos getMore on view namespace,src/mongo/db/namespace_string.cpp,+,dassert(nss.isValid());,130,download/mongodb_mongo795.cpp
a4a9a9ad29415239091db171e01f45677464f668,SERVER-24771 Support killCursors & mongos getMore on view namespace,src/mongo/db/namespace_string.cpp,+,dassert(nss.isListIndexesCursorNS());,131,download/mongodb_mongo795.cpp
a4a9a9ad29415239091db171e01f45677464f668,SERVER-24771 Support killCursors & mongos getMore on view namespace,src/mongo/s/commands/cluster_aggregate.cpp,+,"const auto mergingShard = uassertStatusOK(grid.shardRegistry()->getShard(txn, mergingShardId));",261,download/mongodb_mongo796.cpp
a4a9a9ad29415239091db171e01f45677464f668,SERVER-24771 Support killCursors & mongos getMore on view namespace,src/mongo/s/commands/cluster_aggregate.cpp,+,"appendWriteConcernErrorToCmdResponse(shardStatus.getValue()->getId(), wcErrorElem, *out);",446,download/mongodb_mongo796.cpp
a4a9a9ad29415239091db171e01f45677464f668,SERVER-24771 Support killCursors & mongos getMore on view namespace,src/mongo/s/commands/commands_public.cpp,+,dassert(targetNss == commandNss.getTargetNSForListIndexes());,1793,download/mongodb_mongo797.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"auto status = grid.catalogCache()->getDatabase(txn, dbname);",68,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"uassert(28769, str::stream() << ns.ns() << "" cannot be sharded"", !conf->isSharded(ns.ns()));",96,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,shardKeyMatches = uassertStatusOK(,129,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,uassertAllShardsSupportExplain(shardResults);,186,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"<< DOC(""shardsPart"" << shardPipeline->writeExplainOps() << ""mergerPart""",190,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,<< pipeline.getValue()->writeExplainOps());,191,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"uassertStatusOK(storePossibleCursor(shardResults[0].target.getServers()[0],",211,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"appendWriteConcernErrorToCmdResponse(mergingShardId, wcErrorElem, *result);",265,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"uasserted(errCode,",293,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"massert(17023,",302,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"massert(17024,",307,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"massert(17025,",312,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,void ClusterAggregate::uassertAllShardsSupportExplain(,330,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"uassert(17403,",333,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"uassert(17404,",338,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"log() << ""Couldn't kill aggregation cursor on shard: "" << shardResults[i].target",366,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"log() << ""Couldn't kill aggregation cursor on shard: "" << shardResults[i].target",369,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"log() << ""Couldn't kill aggregation cursor on shard: "" << shardResults[i].target",372,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"massert(17016,",384,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"massert(17014,",394,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"result = uassertStatusOK(storePossibleCursor(HostAndPort(cursor->originalHost()),",406,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,"appendWriteConcernErrorToCmdResponse(shard->getId(), wcErrorElem, *out);",429,download/mongodb_mongo798.cpp
752dcf912d5e45c8614ed749e20982e69cc89813,SERVER-24771 Cluster pipeline command refactor,src/mongo/s/commands/cluster_aggregate.cpp,+,if (ResolvedView::isResolvedViewErrorResponse(responseObj)) {,435,download/mongodb_mongo798.cpp
6f03bed78373f186632f8d6f8a2d4fdc3e5177ee,SERVER-23501 include stringified error code in erroring command replies,src/mongo/db/catalog/apply_ops.cpp,+,ErrorCodes::errorString(ErrorCodes::fromInt(ex.getCode())));,174,download/mongodb_mongo799.cpp
6f03bed78373f186632f8d6f8a2d4fdc3e5177ee,SERVER-23501 include stringified error code in erroring command replies,src/mongo/db/catalog/apply_ops.cpp,+,"result->append(""codeName"", ErrorCodes::errorString(ErrorCodes::fromInt(ex.getCode())));",339,download/mongodb_mongo799.cpp
6f03bed78373f186632f8d6f8a2d4fdc3e5177ee,SERVER-23501 include stringified error code in erroring command replies,src/mongo/db/commands.cpp,+,"result.append(""codeName"", ErrorCodes::errorString(status.code()));",176,download/mongodb_mongo800.cpp
6f03bed78373f186632f8d6f8a2d4fdc3e5177ee,SERVER-23501 include stringified error code in erroring command replies,src/mongo/db/commands/get_last_error.cpp,+,"result.append(""codeName"", ErrorCodes::errorString(ErrorCodes::BadValue));",253,download/mongodb_mongo801.cpp
6f03bed78373f186632f8d6f8a2d4fdc3e5177ee,SERVER-23501 include stringified error code in erroring command replies,src/mongo/db/commands/get_last_error.cpp,+,ErrorCodes::errorString(ErrorCodes::WriteConcernFailed));,263,download/mongodb_mongo801.cpp
6f03bed78373f186632f8d6f8a2d4fdc3e5177ee,SERVER-23501 include stringified error code in erroring command replies,src/mongo/db/commands/get_last_error.cpp,+,"result.append(""codeName"", ErrorCodes::errorString(status.code()));",284,download/mongodb_mongo801.cpp
6f03bed78373f186632f8d6f8a2d4fdc3e5177ee,SERVER-23501 include stringified error code in erroring command replies,src/mongo/db/lasterror.cpp,+,"b.append(""codeName"", ErrorCodes::errorString(ErrorCodes::fromInt(_code)));",89,download/mongodb_mongo802.cpp
6f03bed78373f186632f8d6f8a2d4fdc3e5177ee,SERVER-23501 include stringified error code in erroring command replies,src/mongo/rpc/reply_builder_interface.cpp,+,"bob.append(kCodeNameField, ErrorCodes::errorString(status.code()));",72,download/mongodb_mongo803.cpp
6f03bed78373f186632f8d6f8a2d4fdc3e5177ee,SERVER-23501 include stringified error code in erroring command replies,src/mongo/rpc/write_concern_error_detail.cpp,+,"builder.append(errCodeName(), ErrorCodes::errorString(ErrorCodes::fromInt(_errCode)));",74,download/mongodb_mongo804.cpp
6f03bed78373f186632f8d6f8a2d4fdc3e5177ee,SERVER-23501 include stringified error code in erroring command replies,src/mongo/s/commands/commands_public.cpp,+,"b.append(""codeName"", ErrorCodes::errorString(ErrorCodes::fromInt(e.getCode())));",330,download/mongodb_mongo805.cpp
6f03bed78373f186632f8d6f8a2d4fdc3e5177ee,SERVER-23501 include stringified error code in erroring command replies,src/mongo/s/commands/commands_public.cpp,+,"output.append(""codeName"", ErrorCodes::errorString(ErrorCodes::fromInt(code)));",498,download/mongodb_mongo805.cpp
65925c449db6150307b1b0caf183b2988a692d77,SERVER-25618: do not report progress during m/s initial sync,src/mongo/db/repl/master_slave.cpp,+,"log() << ""An earlier initial clone of '"" << dbName",806,download/mongodb_mongo806.cpp
65925c449db6150307b1b0caf183b2988a692d77,SERVER-25618: do not report progress during m/s initial sync,src/mongo/db/repl/master_slave.cpp,+,error() << status;,952,download/mongodb_mongo806.cpp
3ff1a9ac7cbfdfcb2149523d2c055bd41d356dc6,SERVER-25405 Remove redundant Windows system metrics,src/mongo/util/perfctr_collect.cpp,+,"formatFunctionCallError(""PdhGetFormattedCounterValue"", status)};",416,download/mongodb_mongo807.cpp
3ff1a9ac7cbfdfcb2149523d2c055bd41d356dc6,SERVER-25405 Remove redundant Windows system metrics,src/mongo/util/perfctr_collect.cpp,+,"formatFunctionCallError(""PdhGetRawCounterValue"", status)};",433,download/mongodb_mongo807.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/mmap_v1/btree/btree_logic.cpp,+,"log() << indent << ""    "" << i << ' ' << redact(ks.substr(0, 30))",1875,download/mongodb_mongo808.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/mmap_v1/btree/btree_logic.cpp,+,"log() << ""  "" << redact(getFullKey(bucket, j).data.toString()) << endl;",2112,download/mongodb_mongo808.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/mmap_v1/btree/btree_logic.cpp,+,"log() << "" k("" << i << "")"" << redact(firstKey.data.toString())",2121,download/mongodb_mongo808.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/mmap_v1/btree/btree_logic.cpp,+,"log() << "" k("" << i + 1 << "")"" << redact(secondKey.data.toString())",2123,download/mongodb_mongo808.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/mmap_v1/dur_journal.cpp,+,"log() << ""journaling failure/error: "" << redact(msg) << endl;",128,download/mongodb_mongo809.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/mmap_v1/dur_recover.cpp,+,"log() << ""  OP "" << redact(entry.op->toString()) << endl;",357,download/mongodb_mongo810.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/mmap_v1/dur_recovery_unit.cpp,+,"LOG(2) << ""CUSTOM ROLLBACK "" << redact(demangleName(typeid(*_changes[i])));",191,download/mongodb_mongo811.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/mmap_v1/record_store_v1_base.cpp,+,"log() << ""Invalid object detected in "" << _ns << "": "" << redact(status);",731,download/mongodb_mongo812.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/mmap_v1/repair_database.cpp,+,"error() << ""RepairFileDeleter failed to cleanup: "" << redact(e);",260,download/mongodb_mongo813.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/wiredtiger/wiredtiger_index.cpp,+,"log() << ""WTIndex::updatePosition -- the new key ( """,884,download/mongodb_mongo814.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/wiredtiger/wiredtiger_recovery_unit.cpp,+,"LOG(2) << ""CUSTOM ROLLBACK "" << redact(demangleName(typeid(*change)));",114,download/mongodb_mongo815.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/wiredtiger/wiredtiger_size_storer.cpp,+,"LOG(2) << ""WiredTigerSizeStorer::loadFrom "" << uriKey << "" -> "" << redact(data);",157,download/mongodb_mongo816.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/wiredtiger/wiredtiger_size_storer.cpp,+,"LOG(2) << ""WiredTigerSizeStorer::storeInto "" << uriKey << "" -> "" << redact(data);",217,download/mongodb_mongo816.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/wiredtiger/wiredtiger_util.cpp,+,"error() << ""WiredTiger error ("" << errorCode << "") "" << redact(message);",355,download/mongodb_mongo817.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/wiredtiger/wiredtiger_util.cpp,+,"log() << ""WiredTiger message "" << redact(message);",365,download/mongodb_mongo817.cpp
c2637115ce7dd52220a1ebcf6557c938969e06d7,SERVER-24991 log redaction for storage layer and mmapv1,src/mongo/db/storage/wiredtiger/wiredtiger_util.cpp,+,"log() << ""WiredTiger progress "" << redact(operation) << "" "" << progress;",377,download/mongodb_mongo817.cpp
6b571fa314a9c5d193d362570bb58064d1d1fb0f,SERVER-25126 Return a different error code if the step down occurs after the write,src/mongo/db/cloner.cpp,+,"uassert(ErrorCodes::PrimarySteppedDown,",282,download/mongodb_mongo818.cpp
6b571fa314a9c5d193d362570bb58064d1d1fb0f,SERVER-25126 Return a different error code if the step down occurs after the write,src/mongo/db/cloner.cpp,+,"uassert(ErrorCodes::PrimarySteppedDown,",314,download/mongodb_mongo818.cpp
6b571fa314a9c5d193d362570bb58064d1d1fb0f,SERVER-25126 Return a different error code if the step down occurs after the write,src/mongo/db/cloner.cpp,+,"uassert(ErrorCodes::PrimarySteppedDown,",385,download/mongodb_mongo818.cpp
6b571fa314a9c5d193d362570bb58064d1d1fb0f,SERVER-25126 Return a different error code if the step down occurs after the write,src/mongo/db/commands/mr.cpp,+,"uassert(ErrorCodes::PrimarySteppedDown,",469,download/mongodb_mongo819.cpp
6b571fa314a9c5d193d362570bb58064d1d1fb0f,SERVER-25126 Return a different error code if the step down occurs after the write,src/mongo/db/commands/mr.cpp,+,"uassert(ErrorCodes::PrimarySteppedDown,",715,download/mongodb_mongo819.cpp
6b571fa314a9c5d193d362570bb58064d1d1fb0f,SERVER-25126 Return a different error code if the step down occurs after the write,src/mongo/db/ops/update.cpp,+,"uassertStatusOK(Status(ErrorCodes::PrimarySteppedDown,",97,download/mongodb_mongo820.cpp
6b571fa314a9c5d193d362570bb58064d1d1fb0f,SERVER-25126 Return a different error code if the step down occurs after the write,src/mongo/db/ops/write_ops_exec.cpp,+,"uassert(ErrorCodes::PrimarySteppedDown,",170,download/mongodb_mongo821.cpp
1101287cc7789e9b8b52ba370cee55678aa6c58d,"SERVER-19507 allow DISTINCT_SCAN over trailing field of an index

Closes #1101

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/dbtests/query_stage_distinct.cpp,+,coll->getIndexCatalog()->findIndexesByKeyPattern(,265,download/mongodb_mongo822.cpp
1101287cc7789e9b8b52ba370cee55678aa6c58d,"SERVER-19507 allow DISTINCT_SCAN over trailing field of an index

Closes #1101

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/dbtests/query_stage_distinct.cpp,+,"ASSERT_EQ(1U, indices.size());",267,download/mongodb_mongo822.cpp
1101287cc7789e9b8b52ba370cee55678aa6c58d,"SERVER-19507 allow DISTINCT_SCAN over trailing field of an index

Closes #1101

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/dbtests/query_stage_distinct.cpp,+,ASSERT_TRUE(params.descriptor);,271,download/mongodb_mongo822.cpp
1101287cc7789e9b8b52ba370cee55678aa6c58d,"SERVER-19507 allow DISTINCT_SCAN over trailing field of an index

Closes #1101

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/dbtests/query_stage_distinct.cpp,+,"ASSERT_NE(PlanStage::FAILURE, state);",294,download/mongodb_mongo822.cpp
1101287cc7789e9b8b52ba370cee55678aa6c58d,"SERVER-19507 allow DISTINCT_SCAN over trailing field of an index

Closes #1101

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/dbtests/query_stage_distinct.cpp,+,"ASSERT_NE(PlanStage::DEAD, state);",295,download/mongodb_mongo822.cpp
1101287cc7789e9b8b52ba370cee55678aa6c58d,"SERVER-19507 allow DISTINCT_SCAN over trailing field of an index

Closes #1101

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/dbtests/query_stage_distinct.cpp,+,"ASSERT_EQUALS(4U, seen.size());",301,download/mongodb_mongo822.cpp
1101287cc7789e9b8b52ba370cee55678aa6c58d,"SERVER-19507 allow DISTINCT_SCAN over trailing field of an index

Closes #1101

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/dbtests/query_stage_distinct.cpp,+,"ASSERT_EQUALS(1, seen[0]);",302,download/mongodb_mongo822.cpp
1101287cc7789e9b8b52ba370cee55678aa6c58d,"SERVER-19507 allow DISTINCT_SCAN over trailing field of an index

Closes #1101

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/dbtests/query_stage_distinct.cpp,+,"ASSERT_EQUALS(2, seen[1]);",303,download/mongodb_mongo822.cpp
1101287cc7789e9b8b52ba370cee55678aa6c58d,"SERVER-19507 allow DISTINCT_SCAN over trailing field of an index

Closes #1101

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/dbtests/query_stage_distinct.cpp,+,"ASSERT_EQUALS(1, seen[2]);",304,download/mongodb_mongo822.cpp
1101287cc7789e9b8b52ba370cee55678aa6c58d,"SERVER-19507 allow DISTINCT_SCAN over trailing field of an index

Closes #1101

Signed-off-by: David Storch <david.storch@10gen.com>",src/mongo/dbtests/query_stage_distinct.cpp,+,"ASSERT_EQUALS(3, seen[3]);",305,download/mongodb_mongo822.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/client/parallel.cpp,+,"const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, shardId));",401,download/mongodb_mongo823.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/client/parallel.cpp,+,"const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, i->first));",949,download/mongodb_mongo823.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/balancer/balancer.cpp,+,result = uassertStatusOK(otherShardStatus.getValue()->runCommand(,487,download/mongodb_mongo824.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"<< txn->getWriteConcern().toBSON()),",833,download/mongodb_mongo825.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/chunk.cpp,+,"uassert(10171, ""Chunk needs a server"", grid.shardRegistry()->getShard(txn, _shardId).isOK());",84,download/mongodb_mongo826.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/chunk.cpp,+,"const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, getShardId()));",419,download/mongodb_mongo826.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/chunk_manager.cpp,+,"const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, shardId));",106,download/mongodb_mongo827.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/chunk_manager.cpp,+,"auto primaryShard = uassertStatusOK(grid.shardRegistry()->getShard(txn, primaryShardId));",385,download/mongodb_mongo827.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/cluster_explain.cpp,+,"uassertStatusOK(grid.shardRegistry()->getShard(txn, shardResults[i].shardTargetId));",225,download/mongodb_mongo828.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/cluster_find_and_modify_cmd.cpp,+,"const auto shard = uassertStatusOK(Grid::get(txn)->shardRegistry()->getShard(txn, shardId));",270,download/mongodb_mongo829.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"uassertStatusOK(grid.shardRegistry()->getShard(txn, confIn->getPrimaryId()));",295,download/mongodb_mongo830.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,const auto shard = uassertStatusOK(,354,download/mongodb_mongo830.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,"uassertStatusOK(grid.shardRegistry()->getShard(txn, confOut->getPrimaryId()));",449,download/mongodb_mongo830.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/cluster_map_reduce_cmd.cpp,+,const auto shard = uassertStatusOK(,555,download/mongodb_mongo830.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"uassertStatusOK(grid.shardRegistry()->getShard(txn, config->getPrimaryId()));",148,download/mongodb_mongo831.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/cluster_pipeline_cmd.cpp,+,"uassertStatusOK(grid.shardRegistry()->getShard(txn, mergingShardId));",309,download/mongodb_mongo832.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/cluster_pipeline_cmd.cpp,+,"appendWriteConcernErrorToCmdResponse(shardStatus.getValue()->getId(), wcErrorElem, out);",509,download/mongodb_mongo832.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"uassertStatusOK(grid.shardRegistry()->getShard(txn, config->getPrimaryId()));",211,download/mongodb_mongo833.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/commands_public.cpp,+,const auto shard = uassertStatusOK(shardStatus);,205,download/mongodb_mongo834.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/commands/commands_public.cpp,+,const auto shard = uassertStatusOK(,682,download/mongodb_mongo834.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/config.cpp,+,"const auto shard = uassertStatusOK(grid.shardRegistry()->getShard(txn, _primaryId));",588,download/mongodb_mongo835.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/write_ops/batch_write_exec.cpp,+,"buildErrorFrom(swHostAndPort.getStatus(), &error);",211,download/mongodb_mongo836.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/write_ops/batch_write_exec.cpp,+,"LOG(4) << ""unable to send write batch to """,212,download/mongodb_mongo836.cpp
46b33e042de75d801e5fd9f20b74a1c9a249b0c2,SERVER-23996 ShardRegistry::getShard should return a StatusWith<shared_ptr<Shard>>,src/mongo/s/write_ops/batch_write_exec.cpp,+,"batchOp.noteBatchError(*nextBatch, error);",215,download/mongodb_mongo836.cpp
15050f49369d8972ae87444df760e78996309fdc,"SERVER-25738 authz for views for sharded create/collMod

Merges authz checks for create, collMod and aggregate into AuthorizationSession.",src/mongo/db/auth/authorization_session.cpp,+,"uassert(17139,",193,download/mongodb_mongo837.cpp
15050f49369d8972ae87444df760e78996309fdc,"SERVER-25738 authz for views for sharded create/collMod

Merges authz checks for create, collMod and aggregate into AuthorizationSession.",src/mongo/db/auth/authorization_session.cpp,+,uassert(,239,download/mongodb_mongo837.cpp
74cdf9440f23bf3a88f1baafa18d07bbb755f322,SERVER-25680 Don't check for view if collection exists,src/mongo/db/catalog/coll_mod.cpp,+,"auto sharedView = db->getViewCatalog()->lookup(txn, nss.ns());",64,download/mongodb_mongo838.cpp
74cdf9440f23bf3a88f1baafa18d07bbb755f322,SERVER-25680 Don't check for view if collection exists,src/mongo/db/catalog/drop_indexes.cpp,+,"if (db && db->getViewCatalog()->lookup(txn, toDeleteNs)) {",64,download/mongodb_mongo839.cpp
74cdf9440f23bf3a88f1baafa18d07bbb755f322,SERVER-25680 Don't check for view if collection exists,src/mongo/db/commands/compact.cpp,+,"collDB && !collection ? collDB->getViewCatalog()->lookup(txn, nss.ns()) : nullptr;",153,download/mongodb_mongo840.cpp
74cdf9440f23bf3a88f1baafa18d07bbb755f322,SERVER-25680 Don't check for view if collection exists,src/mongo/db/commands/create_indexes.cpp,+,"if (db->getViewCatalog()->lookup(txn, ns.ns())) {",198,download/mongodb_mongo841.cpp
74cdf9440f23bf3a88f1baafa18d07bbb755f322,SERVER-25680 Don't check for view if collection exists,src/mongo/db/commands/drop_indexes.cpp,+,"if (ctx.db()->getViewCatalog()->lookup(txn, toReIndexNs.ns()))",139,download/mongodb_mongo842.cpp
74cdf9440f23bf3a88f1baafa18d07bbb755f322,SERVER-25680 Don't check for view if collection exists,src/mongo/db/commands/find_and_modify.cpp,+,"if (!collection && autoDb.getDb()->getViewCatalog()->lookup(txn, nsString.ns())) {",416,download/mongodb_mongo843.cpp
74cdf9440f23bf3a88f1baafa18d07bbb755f322,SERVER-25680 Don't check for view if collection exists,src/mongo/db/commands/find_and_modify.cpp,+,"if (!collection && autoDb.getDb()->getViewCatalog()->lookup(txn, nsString.ns())) {",493,download/mongodb_mongo843.cpp
74cdf9440f23bf3a88f1baafa18d07bbb755f322,SERVER-25680 Don't check for view if collection exists,src/mongo/db/commands/pipeline_command.cpp,+,ViewCatalog* viewCatalog = db ? db->getViewCatalog() : nullptr;,179,download/mongodb_mongo844.cpp
74cdf9440f23bf3a88f1baafa18d07bbb755f322,SERVER-25680 Don't check for view if collection exists,src/mongo/db/repl/oplog.cpp,+,"if (db && !db->getCollection(nss.ns()) && db->getViewCatalog()->lookup(txn, nss.ns())) {",975,download/mongodb_mongo845.cpp
74cdf9440f23bf3a88f1baafa18d07bbb755f322,SERVER-25680 Don't check for view if collection exists,src/mongo/db/s/set_shard_version_command.cpp,+,"autoDb->getDb()->getViewCatalog()->lookup(txn, nss.ns())) {",191,download/mongodb_mongo846.cpp
d91a23193b8a53e92b15ab9ecf310b9cbbf05b4c,SERVER-25722 Ensure that shards are not added while _configSvrSetFeatureCompatibilityVersion is running,src/mongo/db/s/config/configsvr_set_feature_compatibility_version_command.cpp,+,uassertStatusOK(,139,download/mongodb_mongo847.cpp
d91a23193b8a53e92b15ab9ecf310b9cbbf05b4c,SERVER-25722 Ensure that shards are not added while _configSvrSetFeatureCompatibilityVersion is running,src/mongo/db/s/config/configsvr_set_feature_compatibility_version_command.cpp,+,"Grid::get(txn)->catalogManager()->setFeatureCompatibilityVersionOnShards(txn, version));",140,download/mongodb_mongo847.cpp
2ce5f3b0afebbb10a70e5239e3790508efde11c9,SERVER-25723 do not terminate in presence of invalid views,src/mongo/db/catalog/drop_collection.cpp,+,"auto view = db && !coll ? db->getViewCatalog()->lookup(txn, collectionName.ns()) : nullptr;",67,download/mongodb_mongo848.cpp
2ce5f3b0afebbb10a70e5239e3790508efde11c9,SERVER-25723 do not terminate in presence of invalid views,src/mongo/db/views/view_catalog.cpp,+,"LOG(0) << ""could not load view catalog for database "" << _durable->getName() << "": """,82,download/mongodb_mongo849.cpp
2ce5f3b0afebbb10a70e5239e3790508efde11c9,SERVER-25723 do not terminate in presence of invalid views,src/mongo/db/views/view_catalog.cpp,+,_requireValidCatalog_inlock(txn);,91,download/mongodb_mongo849.cpp
2ce5f3b0afebbb10a70e5239e3790508efde11c9,SERVER-25723 do not terminate in presence of invalid views,src/mongo/db/views/view_catalog.cpp,+,_requireValidCatalog_inlock(txn);,102,download/mongodb_mongo849.cpp
2ce5f3b0afebbb10a70e5239e3790508efde11c9,SERVER-25723 do not terminate in presence of invalid views,src/mongo/db/views/view_catalog.cpp,+,_requireValidCatalog_inlock(txn);,226,download/mongodb_mongo849.cpp
2ce5f3b0afebbb10a70e5239e3790508efde11c9,SERVER-25723 do not terminate in presence of invalid views,src/mongo/db/views/view_catalog.cpp,+,uassertStatusOK(status);,264,download/mongodb_mongo849.cpp
831e20161e766b32b8ea0533077d231490e99883,SERVER-25155 featureCompatibilityVersion document should be created at replica set initiate time,src/mongo/db/commands/feature_compatibility_version.cpp,+,txn->setReplicatedWrites(false);,182,download/mongodb_mongo850.cpp
831e20161e766b32b8ea0533077d231490e99883,SERVER-25155 featureCompatibilityVersion document should be created at replica set initiate time,src/mongo/db/commands/feature_compatibility_version.cpp,+,"uassertStatusOK(storageInterface->createCollection(txn, nss, options));",197,download/mongodb_mongo850.cpp
831e20161e766b32b8ea0533077d231490e99883,SERVER-25155 featureCompatibilityVersion document should be created at replica set initiate time,src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(storageInterface->insertDocument(,198,download/mongodb_mongo850.cpp
6b5fd115d38582d8b349a5aad2c29867e69dc758,SERVER-25703 enable dist lock unlock by sessionId AND _id,src/mongo/s/catalog/replset/dist_lock_catalog_impl.cpp,+,request.setWriteConcern(kMajorityWriteConcern);,315,download/mongodb_mongo851.cpp
6b5fd115d38582d8b349a5aad2c29867e69dc758,SERVER-25703 enable dist lock unlock by sessionId AND _id,src/mongo/s/catalog/replset/replset_dist_lock_manager.cpp,+,"LOG(0) << ""distributed lock with "" << LocksType::lockID() << "": """,171,download/mongodb_mongo852.cpp
6b5fd115d38582d8b349a5aad2c29867e69dc758,SERVER-25703 enable dist lock unlock by sessionId AND _id,src/mongo/s/catalog/replset/replset_dist_lock_manager.cpp,+,"LOG(0) << ""distributed lock with "" << LocksType::lockID() << "": '"" << lockSessionID",452,download/mongodb_mongo852.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/db/s/merge_chunks_command.cpp,+,grid.catalogClient(txn)->logChange(,360,download/mongodb_mongo853.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/db/s/move_timing_helper.cpp,+,"grid.catalogClient(_txn)->logChange(_txn,",86,download/mongodb_mongo854.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/db/s/split_chunk_command.cpp,+,"log() << ""JESS: checking metadataAfterSplit for new chunk boundaries ["" << startKey << "",""",121,download/mongodb_mongo855.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/db/s/split_chunk_command.cpp,+,"log() << ""JESS: ERROR, found ["" << startKey << "","" << nextChunk.getMax() << "")"";",126,download/mongodb_mongo855.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/db/s/split_chunk_command.cpp,+,"uassertStatusOK(collMetadata->cloneSplit(min, max, splitKeys, newShardVersion));",360,download/mongodb_mongo855.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/db/s/split_chunk_command.cpp,+,"log() << ""splitChunk accepted at version "" << shardVersion;",364,download/mongodb_mongo855.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/db/s/split_chunk_command.cpp,+,"LOG(1) << ""splitChunk ["" << min << "","" << max << "") has already been committed."";",538,download/mongodb_mongo855.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/db/s/split_chunk_command.cpp,+,"collection->getIndexCatalog()->findShardKeyPrefixedIndex(txn, keyPatternObj, false);",433,download/mongodb_mongo855.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"return _log(txn,",251,download/mongodb_mongo856.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"return _log(txn, kChangeLogCollectionName, what, ns, detail, writeConcern);",277,download/mongodb_mongo856.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"logChange(txn,",460,download/mongodb_mongo856.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"logChange(txn,",520,download/mongodb_mongo856.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"logChange(txn,",580,download/mongodb_mongo856.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"logChange(txn,",629,download/mongodb_mongo856.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"logChange(txn,",779,download/mongodb_mongo856.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"logChange(txn,",938,download/mongodb_mongo856.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,_catalogClient->logChange(,816,download/mongodb_mongo857.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"grid.catalogClient(txn)->applyChunkOpsDeprecated(txn,",1197,download/mongodb_mongo857.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"WriteConcernOptions(),",1202,download/mongodb_mongo857.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,grid.catalogClient(txn)->logChange(,1220,download/mongodb_mongo857.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"txn, ""split"", ns.ns(), logDetail.obj(), WriteConcernOptions());",1221,download/mongodb_mongo857.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,grid.catalogClient(txn)->logChange(,1233,download/mongodb_mongo857.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"txn, ""multi-split"", ns.ns(), chunkDetail.obj(), WriteConcernOptions());",1234,download/mongodb_mongo857.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"grid.catalogClient(txn)->applyChunkOpsDeprecated(txn,",1362,download/mongodb_mongo857.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"WriteConcernOptions(),",1367,download/mongodb_mongo857.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,grid.catalogClient(txn)->logChange(,1383,download/mongodb_mongo857.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"txn, ""merge"", ns.ns(), logDetail.obj(), WriteConcernOptions());",1384,download/mongodb_mongo857.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/chunk_manager.cpp,+,uassertStatusOK(,286,download/mongodb_mongo858.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/chunk_manager.cpp,+,"grid.catalogClient(txn)->getChunks(txn,",287,download/mongodb_mongo858.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"catalogClient->logChange(txn,",169,download/mongodb_mongo859.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/commands/cluster_move_primary_cmd.cpp,+,"catalogClient->logChange(txn,",294,download/mongodb_mongo859.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/config.cpp,+,grid.catalogClient(txn)->logChange(,544,download/mongodb_mongo860.cpp
8f0665f1f0cb98db7b2c31880208b576fe90a04f,SERVER-25001 Wire in new _configsvrSplitChunk command so mongod no longer runs applyOps directly.,src/mongo/s/config.cpp,+,grid.catalogClient(txn)->logChange(,623,download/mongodb_mongo860.cpp
eedc87f13014319a6890ee06a908c75a1ac7a13b,"SERVER-25755 Remove extra logging from TL change

Clean up some logging we shouldn't have been doing since the transport layer went in",src/mongo/db/service_entry_point_mongod.cpp,+,ErrorCodes::isNetworkError(status.code())) {,117,download/mongodb_mongo861.cpp
eedc87f13014319a6890ee06a908c75a1ac7a13b,"SERVER-25755 Remove extra logging from TL change

Clean up some logging we shouldn't have been doing since the transport layer went in",src/mongo/s/service_entry_point_mongos.cpp,+,ErrorCodes::isNetworkError(status.code())) {,97,download/mongodb_mongo862.cpp
07020e0b0cadf1639824f985a3ae6ce09d4c5ee8,"SERVER-25572 Fix ASAN clean shutdown logic

During shutdown a number of things are currently happening that shouldn't be:

1. The legacy transport layer is failing to actually close sockets in closeAll. It's doing this
   because the default argument to closeAll is to leave all sockets open on the legacy transport layer
   (versus to close them on the actual interface header).

2. The thing we're checking for in shutdown is wrong. It's just that we've left recv in all db
   workers, rather than that we've left all client workers (so ASAN is occasionally unhappy about
   ""leaks"")

3. Tests rely on external callers to close sockets. when this contract changes, we take an extra 10
   seconds to shut down every mongod, making some tests time out.

Fix this by adding a counter for actual live workers, so we can track when it's safe to shutdown
correctly. Also fix the typo",src/mongo/db/db.cpp,+,log(LogComponent::kNetwork),1042,download/mongodb_mongo863.cpp
07020e0b0cadf1639824f985a3ae6ce09d4c5ee8,"SERVER-25572 Fix ASAN clean shutdown logic

During shutdown a number of things are currently happening that shouldn't be:

1. The legacy transport layer is failing to actually close sockets in closeAll. It's doing this
   because the default argument to closeAll is to leave all sockets open on the legacy transport layer
   (versus to close them on the actual interface header).

2. The thing we're checking for in shutdown is wrong. It's just that we've left recv in all db
   workers, rather than that we've left all client workers (so ASAN is occasionally unhappy about
   ""leaks"")

3. Tests rely on external callers to close sockets. when this contract changes, we take an extra 10
   seconds to shut down every mongod, making some tests time out.

Fix this by adding a counter for actual live workers, so we can track when it's safe to shutdown
correctly. Also fix the typo",src/mongo/db/db.cpp,+,"log(LogComponent::kNetwork) << ""shutdown: no running workers found..."";",1058,download/mongodb_mongo863.cpp
07020e0b0cadf1639824f985a3ae6ce09d4c5ee8,"SERVER-25572 Fix ASAN clean shutdown logic

During shutdown a number of things are currently happening that shouldn't be:

1. The legacy transport layer is failing to actually close sockets in closeAll. It's doing this
   because the default argument to closeAll is to leave all sockets open on the legacy transport layer
   (versus to close them on the actual interface header).

2. The thing we're checking for in shutdown is wrong. It's just that we've left recv in all db
   workers, rather than that we've left all client workers (so ASAN is occasionally unhappy about
   ""leaks"")

3. Tests rely on external callers to close sockets. when this contract changes, we take an extra 10
   seconds to shut down every mongod, making some tests time out.

Fix this by adding a counter for actual live workers, so we can track when it's safe to shutdown
correctly. Also fix the typo",src/mongo/db/db.cpp,+,"log(LogComponent::kNetwork) << ""shutdown: still waiting on "" << runningWorkers",1061,download/mongodb_mongo863.cpp
07020e0b0cadf1639824f985a3ae6ce09d4c5ee8,"SERVER-25572 Fix ASAN clean shutdown logic

During shutdown a number of things are currently happening that shouldn't be:

1. The legacy transport layer is failing to actually close sockets in closeAll. It's doing this
   because the default argument to closeAll is to leave all sockets open on the legacy transport layer
   (versus to close them on the actual interface header).

2. The thing we're checking for in shutdown is wrong. It's just that we've left recv in all db
   workers, rather than that we've left all client workers (so ASAN is occasionally unhappy about
   ""leaks"")

3. Tests rely on external callers to close sockets. when this contract changes, we take an extra 10
   seconds to shut down every mongod, making some tests time out.

Fix this by adding a counter for actual live workers, so we can track when it's safe to shutdown
correctly. Also fix the typo",src/mongo/db/db.cpp,+,"log(LogComponent::kNetwork) << ""shutdown: exhausted grace period for""",1079,download/mongodb_mongo863.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,log() << status.reason();,716,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,"log() << ""Auth schema version is incompatible: """,742,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,"log() << ""Auth schema version is incompatible: """,749,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,"error() << ""Auth must be disabled when starting without auth schema validation"";",758,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,log() << startupWarningsLog;,763,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,"log() << ""** WARNING: Startup auth schema validation checks are disabled for the """,764,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,"log() << ""**          This mode should only be used to manually repair corrupted auth """,767,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,logStartup(startupOpCtx.get());,731,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,log() << startupWarningsLog;,757,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,"log() << ""** WARNING: mongod started without --replSet yet "" << missingRepl",758,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,"log() << ""**          Restart with --replSet unless you are doing maintenance and """,760,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,"log() << ""**          The TTL collection monitor will not start because of this.""",762,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,"log() << ""**         "";",764,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,"log() << "" For more info see http://dochub.mongodb.org/core/ttlcollections"";",765,download/mongodb_mongo864.cpp
c38c8a9ef540b337cce414f8db4a7b93890926b7,"SERVER-25475 Re-order mongod initialization to avoid segfault.

This ensures that the sharding system is initialized before the ReplicationCoordinator is started,
thus avoiding the possibility of the becoming primary before the ShardingCatalogManager has been
installed on the Grid object.",src/mongo/db/db.cpp,+,log() << startupWarningsLog;,766,download/mongodb_mongo864.cpp
c16c3c6327e28d90d313fc071f6ddb7b2ca47d58,SERVER-25684 Support SNI server names in mongo shell,src/mongo/util/net/message_port.cpp,+,"LOG(1) << ""new ssl connection, SNI server name ["" << _psock->getSNIServerName()",132,download/mongodb_mongo865.cpp
c16c3c6327e28d90d313fc071f6ddb7b2ca47d58,SERVER-25684 Support SNI server names in mongo shell,src/mongo/util/net/ssl_manager.cpp,+,"_handleSSLError(SSL_get_error(sslConn.get(), ret), ret);",1083,download/mongodb_mongo866.cpp
b06901cd83b2a985aa50f9a699f3d63dcd28476d,SERVER-7200 Limit secondary apply batches to 10% of the oplog size,src/mongo/db/repl/storage_interface_impl.cpp,+,"StatusWith<size_t> StorageInterfaceImpl::getOplogMaxSize(OperationContext* txn,",357,download/mongodb_mongo867.cpp
b06901cd83b2a985aa50f9a699f3d63dcd28476d,SERVER-7200 Limit secondary apply batches to 10% of the oplog size,src/mongo/db/repl/storage_interface_impl.cpp,+,const auto options = collection.getCollection()->getCatalogEntry()->getCollectionOptions(txn);,365,download/mongodb_mongo867.cpp
b06901cd83b2a985aa50f9a699f3d63dcd28476d,SERVER-7200 Limit secondary apply batches to 10% of the oplog size,src/mongo/db/repl/sync_tail.cpp,+,const auto oplogMaxSize = fassertStatusOK(,705,download/mongodb_mongo868.cpp
b06901cd83b2a985aa50f9a699f3d63dcd28476d,SERVER-7200 Limit secondary apply batches to 10% of the oplog size,src/mongo/db/repl/sync_tail.cpp,+,"StorageInterface::get(&txn)->getOplogMaxSize(&txn, NamespaceString(rsOplogName)));",707,download/mongodb_mongo868.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/oplog.cpp,+,"LOG(2) << ""Oplog tail entry: "" << entry;",327,download/mongodb_mongo869.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/oplog.cpp,+,fassertFailedNoTrace(40296);,361,download/mongodb_mongo869.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,if (_storageInterface->getOplogDeleteFromPoint(txn).isNull() &&,291,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,invariant(_storageInterface->getOplogDeleteFromPoint(txn).isNull());,348,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END(,367,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"const auto opTimeToReturn = fassertStatusOK(28665, loadLastOpTime(txn));",371,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,const auto deleteFromPoint = _storageInterface->getOplogDeleteFromPoint(txn);,491,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Removing unapplied entries starting at: "" << deleteFromPoint;",506,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"truncateOplogTo(txn, deleteFromPoint);",507,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"_storageInterface->setOplogDeleteFromPoint(txn, {});  // clear the deleteFromPoint",509,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"const auto topOfOplog = fassertStatusOK(40290, loadLastOpTime(txn));",518,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Replaying stored operations from "" << appliedThrough << "" (exclusive) to """,523,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,fassertFailedNoTrace(40293);,542,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"auto firstOpTimeFound = fassertStatusOK(40291, OpTime::parseFromOplogEntry(cursor->nextSafe()));",544,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,fassertFailedNoTrace(40292);,548,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,const bool wereWritesReplicated = txn->writesAreReplicated();,552,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,ON_BLOCK_EXIT([&] { txn->setReplicatedWrites(wereWritesReplicated); });,553,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,txn->setReplicatedWrites(false);,554,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"fassertStatusOK(40294, SyncTail::syncApply(txn, entry, true));",558,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"txn, fassertStatusOK(40295, OpTime::parseFromOplogEntry(entry)));",560,download/mongodb_mongo870.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_external_state_mock.cpp,+,"return fassertStatusOK(40297, _lastOpTime);",295,download/mongodb_mongo871.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/replication_coordinator_impl.cpp,+,invariant(txn->writesAreReplicated());,872,download/mongodb_mongo872.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/roll_back_local_operations.cpp,+,"return fassertStatusOK(40298, OpTime::parseFromOplogEntry(oplogValue.first));",45,download/mongodb_mongo873.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/rs_rollback.cpp,+,"LOG(2) << ""rollback truncate oplog after "" << fixUpInfo.commonPoint.toString();",775,download/mongodb_mongo874.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,"LOG(3) << ""returning initial sync flag value of "" << flag;",149,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,"LOG(3) << ""clearing initial sync flag"";",167,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,const auto opTimeStatus = OpTime::parseFromOplogEntry(doc);,206,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,fassertFailedNoTrace(40052);,219,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,"LOG(3) << ""returning minvalid: "" << minValid.toString() << ""("" << minValid.toBSON() << "")"";",224,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,"LOG(3) << ""setting minvalid to exactly: "" << minValid.toString() << ""("" << minValid.toBSON()",242,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,"LOG(3) << ""setting minvalid to at least: "" << minValid.toString() << ""("" << minValid.toBSON()",249,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,"void StorageInterfaceImpl::setOplogDeleteFromPoint(OperationContext* txn,",255,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,"LOG(3) << ""setting oplog delete from point to: "" << timestamp.toStringPretty();",257,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,Timestamp StorageInterfaceImpl::getOplogDeleteFromPoint(OperationContext* txn) {,261,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,"LOG(3) << ""returning oplog delete from point: "" << out;",271,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,"LOG(3) << ""setting appliedThrough to: "" << optime.toString() << ""("" << optime.toBSON() << "")"";",276,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,const auto opTimeStatus = OpTime::parseFromOplogEntry(doc.getObjectField(kBeginFieldName));,297,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_impl.cpp,+,"LOG(3) << ""returning appliedThrough: "" << appliedThrough.toString() << ""(""",309,download/mongodb_mongo875.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_mock.cpp,+,"void StorageInterfaceMock::setOplogDeleteFromPoint(OperationContext* txn,",81,download/mongodb_mongo876.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/storage_interface_mock.cpp,+,Timestamp StorageInterfaceMock::getOplogDeleteFromPoint(OperationContext* txn) {,87,download/mongodb_mongo876.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/sync_tail.cpp,+,"fassertStatusOK(40299, OpTime::parseFromOplogEntry(ops.front().raw));",813,download/mongodb_mongo877.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/sync_tail.cpp,+,"fassertStatusOK(28773, OpTime::parseFromOplogEntry(ops.back().raw));",815,download/mongodb_mongo877.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/sync_tail.cpp,+,"error() << ""Failed to apply "" << opsInBatch",863,download/mongodb_mongo877.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/sync_tail.cpp,+,"storage->setOplogDeleteFromPoint(txn, ops.front().ts.timestamp());",1259,download/mongodb_mongo877.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/sync_tail.cpp,+,"log() << ""Cannot apply operations due to shutdown in progress"";",1277,download/mongodb_mongo877.cpp
34c6c691a038eac1ac3ee16e1eedc54aab964774,SERVER-7200 Write oplog entries on secondaries before applying,src/mongo/db/repl/sync_tail.cpp,+,"storage->setOplogDeleteFromPoint(txn, Timestamp());",1282,download/mongodb_mongo877.cpp
abcff3a9188bbd2f355a329a04789f41e936ba2d,SERVER-25546 move slaveDelay handling into tryPopAndWaitForMore,src/mongo/db/repl/sync_tail.cpp,+,fassertFailedNoTrace(18820);,926,download/mongodb_mongo878.cpp
01a1b877bc7d103646ecc8608a8df89d74de1324,SERVER-24439 code cleanup for collation shard targeting,src/mongo/s/chunk_manager.cpp,+,massertStatusOK(chunk.getStatus());,523,download/mongodb_mongo879.cpp
01a1b877bc7d103646ecc8608a8df89d74de1324,SERVER-24439 code cleanup for collation shard targeting,src/mongo/s/commands/cluster_find_and_modify_cmd.cpp,+,"uasserted(ErrorCodes::ShardKeyNotFound,",135,download/mongodb_mongo880.cpp
01a1b877bc7d103646ecc8608a8df89d74de1324,SERVER-24439 code cleanup for collation shard targeting,src/mongo/s/commands/cluster_find_and_modify_cmd.cpp,+,"uasserted(ErrorCodes::ShardKeyNotFound,",214,download/mongodb_mongo880.cpp
d45804b3bf5c336ab5943bff163d1e0e5fcfd3a6,SERVER-25686 send all moveChunk commands through to the shard to wait for waitForDelete,src/mongo/db/s/migration_source_manager.cpp,+,"uassert(ErrorCodes::InvalidOptions,",83,download/mongodb_mongo881.cpp
d45804b3bf5c336ab5943bff163d1e0e5fcfd3a6,SERVER-25686 send all moveChunk commands through to the shard to wait for waitForDelete,src/mongo/db/s/migration_source_manager.cpp,+,"uassert(ErrorCodes::InvalidOptions, ""collection version is missing"", oss.hasShardVersion());",90,download/mongodb_mongo881.cpp
c14515630a02136b60e49c8e15e7135cf8153497,SERVER-24771 Use view namespace in cursors for aggregate/getMore,src/mongo/db/commands/getmore_cmd.cpp,+,"viewCtx->getDb()->getViewCatalog()->resolveView(txn, request.nss);",207,download/mongodb_mongo882.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/commands/feature_compatibility_version.cpp,+,"uassert(40284,",121,download/mongodb_mongo883.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(getStatusFromCommandResult(result));,142,download/mongodb_mongo883.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(getWriteConcernStatusFromCommandResult(result));,143,download/mongodb_mongo883.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(status);,182,download/mongodb_mongo883.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/commands/feature_compatibility_version.cpp,+,uassertStatusOK(FeatureCompatibilityVersion::parse(doc)));,198,download/mongodb_mongo883.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/commands/set_feature_compatibility_version_command.cpp,+,virtual bool supportsWriteConcern(const BSONObj& cmd) const override {,60,download/mongodb_mongo884.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/commands/set_feature_compatibility_version_command.cpp,+,"uassert(ErrorCodes::TypeMismatch,",92,download/mongodb_mongo884.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/commands/set_feature_compatibility_version_command.cpp,+,"uasserted(ErrorCodes::FailedToParse,",99,download/mongodb_mongo884.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/commands/set_feature_compatibility_version_command.cpp,+,"uassert(ErrorCodes::BadValue,",104,download/mongodb_mongo884.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/db.cpp,+,fassertFailedNoTrace(40283);,416,download/mongodb_mongo885.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/s/config/configsvr_set_feature_compatibility_version_command.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,69,download/mongodb_mongo886.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/s/config/configsvr_set_feature_compatibility_version_command.cpp,+,"uassert(ErrorCodes::IllegalOperation,",89,download/mongodb_mongo886.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/s/config/configsvr_set_feature_compatibility_version_command.cpp,+,"uassert(ErrorCodes::TypeMismatch,",97,download/mongodb_mongo886.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/s/config/configsvr_set_feature_compatibility_version_command.cpp,+,"uasserted(ErrorCodes::FailedToParse,",104,download/mongodb_mongo886.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/s/config/configsvr_set_feature_compatibility_version_command.cpp,+,uassert(,109,download/mongodb_mongo886.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/s/config/configsvr_set_feature_compatibility_version_command.cpp,+,uassertStatusOK(response);,139,download/mongodb_mongo886.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/db/s/config/configsvr_set_feature_compatibility_version_command.cpp,+,uassertStatusOK(response.getValue().commandStatus);,140,download/mongodb_mongo886.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/s/commands/cluster_set_feature_compatibility_version_cmd.cpp,+,virtual bool supportsWriteConcern(const BSONObj& cmd) const override {,62,download/mongodb_mongo887.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/s/commands/cluster_set_feature_compatibility_version_cmd.cpp,+,uassert(,94,download/mongodb_mongo887.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/s/commands/cluster_set_feature_compatibility_version_cmd.cpp,+,"uasserted(ErrorCodes::FailedToParse,",102,download/mongodb_mongo887.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/s/commands/cluster_set_feature_compatibility_version_cmd.cpp,+,"uassert(ErrorCodes::BadValue,",107,download/mongodb_mongo887.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/s/commands/cluster_set_feature_compatibility_version_cmd.cpp,+,uassertStatusOK(response);,121,download/mongodb_mongo887.cpp
dc4a0797603401f7560199f15bd9dd29bd17b3a0,SERVER-25155 Create setFeatureCompatibilityVersion command,src/mongo/s/commands/cluster_set_feature_compatibility_version_cmd.cpp,+,uassertStatusOK(response.getValue().commandStatus);,122,download/mongodb_mongo887.cpp
be6868e2fd72522faa4250145e85aec1e0da6d0c,"SERVER-25569 Must hold mutex when iterating through ViewCatalog

Replaces ViewCatalog::begin()/::end() with a thread-safe iterate() method.",src/mongo/db/commands/list_collections.cpp,+,"db->getViewCatalog()->iterate(txn, [&](const ViewDefinition& view) {",266,download/mongodb_mongo888.cpp
be6868e2fd72522faa4250145e85aec1e0da6d0c,"SERVER-25569 Must hold mutex when iterating through ViewCatalog

Replaces ViewCatalog::begin()/::end() with a thread-safe iterate() method.",src/mongo/db/views/view_catalog.cpp,+,uassertStatusOK(_reloadIfNeeded_inlock(txn));,85,download/mongodb_mongo889.cpp
1343dfdac48d148b0a72fc9aa4af23a7191082cd,"SERVER-25681 fix ViewCatalog reload race

Changes ViewCatalog::lookup() to return a shared_ptr<ViewDefinition> rather than
a bare pointer, allowing the view definitions to persist even if the ViewCatalog
is reloaded.",src/mongo/db/catalog/coll_mod.cpp,+,"auto view = db ? db->getViewCatalog()->lookup(txn, nss.ns()) : nullptr;",59,download/mongodb_mongo890.cpp
1343dfdac48d148b0a72fc9aa4af23a7191082cd,"SERVER-25681 fix ViewCatalog reload race

Changes ViewCatalog::lookup() to return a shared_ptr<ViewDefinition> rather than
a bare pointer, allowing the view definitions to persist even if the ViewCatalog
is reloaded.",src/mongo/db/catalog/drop_collection.cpp,+,"auto view = db ? db->getViewCatalog()->lookup(txn, collectionName.ns()) : nullptr;",68,download/mongodb_mongo891.cpp
98a26b4cff29549f4b779bf7c681f99b41dde710,SERVER-25585 Delete ClientCursors without holding _mutex to avoid hang.,src/mongo/db/catalog/cursor_manager.cpp,+,"fassert(28819, !BackgroundOperation::inProgForNs(_nss));",346,download/mongodb_mongo892.cpp
1a3d60af4d27d72e15637bb43510fe1b592a6c43,SERVER-13517 Internal client validates BSON in all command responses and when reading from cursor in DBClientCursor,src/mongo/client/dbclientcursor.cpp,+,"uassert(ErrorCodes::InvalidBSON,",350,download/mongodb_mongo893.cpp
1a3d60af4d27d72e15637bb43510fe1b592a6c43,SERVER-13517 Internal client validates BSON in all command responses and when reading from cursor in DBClientCursor,src/mongo/rpc/legacy_reply.cpp,+,"uassert(ErrorCodes::InvalidBSON,",72,download/mongodb_mongo894.cpp
7d7b2a92d23fdf6df98fadc302fb35fc29aa0bc8,SERVER-25505 Improve LDAP authz bootstrap role creation error message,src/mongo/db/auth/authorization_session.cpp,+,"log() << ""Not authorized to create the first role in the system '"" << args.roleName",392,download/mongodb_mongo895.cpp
9aef6602683af7842e04c025c47d652b3897c541,"SERVER-24508 delete BSONObj::equal()

Instead, use comparator.evaluate(obj1 == obj2), where comparator is of
type BSONObj::ComparatorInterface.",src/mongo/dbtests/jsobjtests.cpp,+,ASSERT((res == 0) == SimpleBSONObjComparator::kInstance.evaluate(o == last));,179,download/mongodb_mongo896.cpp
9aef6602683af7842e04c025c47d652b3897c541,"SERVER-24508 delete BSONObj::equal()

Instead, use comparator.evaluate(obj1 == obj2), where comparator is of
type BSONObj::ComparatorInterface.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_NE(a, b);",804,download/mongodb_mongo896.cpp
9aef6602683af7842e04c025c47d652b3897c541,"SERVER-24508 delete BSONObj::equal()

Instead, use comparator.evaluate(obj1 == obj2), where comparator is of
type BSONObj::ComparatorInterface.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_NE(a, c);",813,download/mongodb_mongo896.cpp
9aef6602683af7842e04c025c47d652b3897c541,"SERVER-24508 delete BSONObj::equal()

Instead, use comparator.evaluate(obj1 == obj2), where comparator is of
type BSONObj::ComparatorInterface.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_NE(a, d);",817,download/mongodb_mongo896.cpp
88b540f0c14c7ab8af708aecc4cd6df83081b32e,SERVER-22382 allow mongo --host to take uri,src/mongo/scripting/mozjs/mongo.cpp,+,auto cs = uassertStatusOK(statusWithHost);,642,download/mongodb_mongo897.cpp
88b540f0c14c7ab8af708aecc4cd6df83081b32e,SERVER-22382 allow mongo --host to take uri,src/mongo/scripting/mozjs/uri.cpp,+,"uassert(ErrorCodes::BadValue, ""MongoURI needs 1 argument"", args.length() == 1);",60,download/mongodb_mongo898.cpp
88b540f0c14c7ab8af708aecc4cd6df83081b32e,SERVER-22382 allow mongo --host to take uri,src/mongo/scripting/mozjs/uri.cpp,+,"uasserted(ErrorCodes::BadValue, ""uri must be a string"");",64,download/mongodb_mongo898.cpp
88b540f0c14c7ab8af708aecc4cd6df83081b32e,SERVER-22382 allow mongo --host to take uri,src/mongo/scripting/mozjs/uri.cpp,+,"std::string uri = ValueWriter(cx, args.get(0)).toString();",66,download/mongodb_mongo898.cpp
88b540f0c14c7ab8af708aecc4cd6df83081b32e,SERVER-22382 allow mongo --host to take uri,src/mongo/scripting/mozjs/uri.cpp,+,auto parsed = uassertStatusOK(sw);,69,download/mongodb_mongo898.cpp
88b540f0c14c7ab8af708aecc4cd6df83081b32e,SERVER-22382 allow mongo --host to take uri,src/mongo/scripting/mozjs/valuereader.cpp,+,"uasserted(ErrorCodes::JSInterpreterFailure, ""Failed to append to JS array"");",251,download/mongodb_mongo899.cpp
88b540f0c14c7ab8af708aecc4cd6df83081b32e,SERVER-22382 allow mongo --host to take uri,src/mongo/scripting/mozjs/valuereader.cpp,+,"uasserted(ErrorCodes::JSInterpreterFailure, ""Failed to JS_NewArrayObject"");",256,download/mongodb_mongo899.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/db/commands/dbcommands.cpp,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(txn->getWriteConcern().toBSON() ==,1504,download/mongodb_mongo900.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/db/query/parsed_projection.cpp,+,dassert(,292,download/mongodb_mongo901.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/db/repl/data_replicator.cpp,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(ops.back().raw == op));,1074,download/mongodb_mongo902.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/db/repl/data_replicator.cpp,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(ops.back().raw == op));,1117,download/mongodb_mongo902.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/chunktests.cpp,+,"ASSERT_BSONOBJ_EQ(expectedShardNames(), b.arr());",97,download/mongodb_mongo903.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/dbhelper_tests.cpp,+,"ASSERT_BSONOBJ_EQ(expected(), docs(&txn));",81,download/mongodb_mongo904.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""x"" << 1), IndexCatalog::fixIndexKey(BSON(""x"" << 1)));",970,download/mongodb_mongo905.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""_id"" << 1), IndexCatalog::fixIndexKey(BSON(""_id"" << 1)));",972,download/mongodb_mongo905.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/indexupdatetests.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""_id"" << 1), IndexCatalog::fixIndexKey(BSON(""_id"" << true)));",974,download/mongodb_mongo905.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(tmp, BSON(""a"" << 1));",572,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(obj, BSON(""a"" << 1 << ""b"" << 2));",580,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(tmp, BSON(""a"" << BSON(""$gt"" << 1)));",590,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(obj, BSON(""a"" << BSON(""$gt"" << 1) << ""b"" << BSON(""$lt"" << 2)));",599,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(tmp, BSON(""a"" << 1));",609,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_NE(A, B);",942,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_GT(A, B);",943,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_NE(B, C);",945,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_GT(C, B);",946,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""bar"" << 1), b.done());",982,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_LT(BSON("""" << min), BSON("""" << oid));",1391,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_GT(BSON("""" << max), BSON("""" << oid));",1392,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(nested2dotted(nest), dot);",1856,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(nest, dotted2nested(dot));",1857,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(obj, arr);",1930,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(arr, obj);",1957,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(x, y);",2144,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(x, y);",2221,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""x"" << 1 << ""y"" << 2 << ""z"" << 3), b.obj());",2252,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(!SimpleBSONObjComparator::kInstance.evaluate((a < b)));,2282,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(SimpleBSONObjComparator::kInstance.evaluate(a <= b));,2283,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(SimpleBSONObjComparator::kInstance.evaluate(a < c));,2284,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(SimpleBSONObjComparator::kInstance.evaluate(f > d));,2286,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(SimpleBSONObjComparator::kInstance.evaluate(f >= e));,2287,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jsobjtests.cpp,+,ASSERT(!(SimpleBSONObjComparator::kInstance.evaluate(f > e)));,2288,download/mongodb_mongo906.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jstests.cpp,+,"ASSERT_BSONOBJ_EQ(in, out);",739,download/mongodb_mongo907.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jstests.cpp,+,"ASSERT_BSONOBJ_EQ(in, out);",850,download/mongodb_mongo907.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/jstests.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""z"" << 5), b.obj());",2186,download/mongodb_mongo907.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_delete.cpp,+,"ASSERT_BSONOBJ_EQ(resultMember->obj.value(), oldDoc);",250,download/mongodb_mongo908.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_ensure_sorted.cpp,+,"ASSERT_BSONOBJ_EQ(outputObj, expectedObj);",107,download/mongodb_mongo909.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_BSONOBJ_EQ(stats->keyPattern, BSON(""x"" << 1));",171,download/mongodb_mongo910.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_BSONOBJ_EQ(member->keyData[0].keyData, BSON("""" << 5));",191,download/mongodb_mongo910.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_BSONOBJ_EQ(member->keyData[0].keyData, BSON("""" << 6));",194,download/mongodb_mongo910.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_BSONOBJ_EQ(member->keyData[0].keyData, BSON("""" << 10));",204,download/mongodb_mongo910.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_BSONOBJ_EQ(member->keyData[0].keyData, BSON("""" << 6));",228,download/mongodb_mongo910.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_BSONOBJ_EQ(member->keyData[0].keyData, BSON("""" << 7));",237,download/mongodb_mongo910.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_BSONOBJ_EQ(member->keyData[0].keyData, BSON("""" << 6));",261,download/mongodb_mongo910.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_BSONOBJ_EQ(member->keyData[0].keyData, BSON("""" << 10));",291,download/mongodb_mongo910.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_BSONOBJ_EQ(member->keyData[0].keyData, BSON("""" << 8));",294,download/mongodb_mongo910.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_BSONOBJ_EQ(member->keyData[0].keyData, BSON("""" << 6));",305,download/mongodb_mongo910.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_merge_sort.cpp,+,"ASSERT_BSONOBJ_EQ(member->obj.value(), BSON(""_id"" << 4 << ""a"" << 4));",709,download/mongodb_mongo911.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_merge_sort.cpp,+,"ASSERT_BSONOBJ_EQ(member->obj.value(), BSON(""_id"" << 5 << ""a"" << 5));",718,download/mongodb_mongo911.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_merge_sort.cpp,+,"ASSERT_BSONOBJ_EQ(member->obj.value(), BSON(""_id"" << 6 << ""a"" << 6));",725,download/mongodb_mongo911.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_subplan.cpp,+,ASSERT(SimpleBSONObjComparator::kInstance.evaluate(,568,download/mongodb_mongo912.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_update.cpp,+,"ASSERT_BSONOBJ_EQ(objs[0], fromjson(""{_id: 0, x: 1, y: 2}""));",237,download/mongodb_mongo913.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_update.cpp,+,"ASSERT_BSONOBJ_EQ(resultMember->obj.value(), oldDoc);",432,download/mongodb_mongo913.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_update.cpp,+,"ASSERT_BSONOBJ_EQ(objs[targetDocIndex], newDoc);",438,download/mongodb_mongo913.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_update.cpp,+,"ASSERT_BSONOBJ_EQ(resultMember->obj.value(), newDoc);",521,download/mongodb_mongo913.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/query_stage_update.cpp,+,"ASSERT_BSONOBJ_EQ(objs[targetDocIndex], newDoc);",526,download/mongodb_mongo913.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/querytests.cpp,+,ASSERT_BSONOBJ_EQ(,139,download/mongodb_mongo914.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/querytests.cpp,+,ASSERT_BSONOBJ_EQ(,155,download/mongodb_mongo914.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/querytests.cpp,+,ASSERT_BSONOBJ_EQ(,169,download/mongodb_mongo914.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/querytests.cpp,+,ASSERT_BSONOBJ_EQ(,211,download/mongodb_mongo914.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/querytests.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""x"" << 1), QUERY(""query"" << BSON(""x"" << 1)).getFilter());",1733,download/mongodb_mongo914.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/querytests.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""x"" << 1), QUERY(""$query"" << BSON(""x"" << 1)).getFilter());",1734,download/mongodb_mongo914.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/repltests.cpp,+,"ASSERT_BSONOBJ_EQ(expected, got);",133,download/mongodb_mongo915.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/rollbacktests.cpp,+,"ASSERT_BSONOBJ_EQ(data, record->data.releaseToBson());",100,download/mongodb_mongo916.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), initial), final);",350,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,z:['a','b']}""));",500,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0}""));",518,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[1,5]}""));",560,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[5]}""));",587,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[1,2,3]}""));",653,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[1,2,3]}""));",664,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[1,2]}""));",675,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[1,2]}""));",686,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[2,3]}""));",697,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[2,3]}""));",708,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[]}""));",719,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[]}""));",730,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[1,2]}""));",741,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[2,3]}""));",752,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[1]}""));",763,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[2,3]}""));",774,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[2,5],b:[6]}""));",786,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[2,5],b:[3,4]}""));",797,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(_client.findOne(ns(), Query()), fromjson(""{'_id':0,a:[2,3]}""));",876,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1017,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1025,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1062,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1070,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1106,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1113,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1153,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1186,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1223,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1231,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1268,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1275,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1318,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1326,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1363,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1370,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[0], objs[1]);",1420,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[1], objs[0]);",1421,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[2], objs[2]);",1422,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[0], objs[0]);",1441,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[1], objs[2]);",1442,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[2], objs[1]);",1443,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[0], objs[0]);",1462,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[1], objs[2]);",1463,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[2], objs[1]);",1464,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[0], objs[1]);",1483,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[1], objs[0]);",1484,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[2], objs[2]);",1485,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[0], objs[1]);",1504,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[1], objs[2]);",1505,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[2], objs[0]);",1506,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[0], objs[1]);",1510,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[1], objs[0]);",1511,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(workArea[2], objs[2]);",1512,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1530,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1538,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1545,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1552,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1559,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1573,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1587,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1601,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1615,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1629,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1643,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1657,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1671,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(result, expected);",1686,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(fromjson(""{'_id':0,a:{b:4}}""), _client.findOne(ns(), Query()));",1724,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,ASSERT_BSONOBJ_EQ(,1725,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""_id"" << 0 << ""a"" << 1 << ""x"" << BSON(""b"" << 1 << ""c"" << 1) << ""x""",1767,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(""_id"" << 0 << ""x"" << BSON(""b"" << 1 << ""c"" << 1 << ""d"" << 1) << ""x""",1783,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/dbtests/updatetests.cpp,+,"ASSERT_BSONOBJ_EQ(after, findOne());",1824,download/mongodb_mongo917.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMin(), migrations[0].minKey);",111,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMax(), migrations[0].maxKey);",112,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId1][0].getMin(), migrations[0].minKey);",126,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId1][0].getMax(), migrations[0].maxKey);",127,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMin(), migrations[0].minKey);",153,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMax(), migrations[0].maxKey);",154,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId1][0].getMin(), migrations[1].minKey);",158,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId1][0].getMax(), migrations[1].maxKey);",159,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][1].getMin(), migrations[0].minKey);",177,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][1].getMax(), migrations[0].maxKey);",178,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][1].getMin(), migrations[0].minKey);",204,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][1].getMax(), migrations[0].maxKey);",205,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][2].getMin(), migrations[1].minKey);",209,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][2].getMax(), migrations[1].maxKey);",210,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMin(), migrations[0].minKey);",224,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMax(), migrations[0].maxKey);",225,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMin(), migrations[0].minKey);",242,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMax(), migrations[0].maxKey);",243,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMin(), migrations[1].minKey);",247,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMax(), migrations[1].maxKey);",248,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMin(), migrations[0].minKey);",262,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMax(), migrations[0].maxKey);",263,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMin(), migrations[0].minKey);",279,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId0][0].getMax(), migrations[0].maxKey);",280,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMin(), migrations[0].minKey);",309,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMax(), migrations[0].maxKey);",310,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMin(), migrations[0].minKey);",353,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMax(), migrations[0].maxKey);",354,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId1][0].getMin(), migrations[0].minKey);",386,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId1][0].getMax(), migrations[0].maxKey);",387,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMin(), migrations[0].minKey);",405,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMax(), migrations[0].maxKey);",406,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMin(), migrations[0].minKey);",423,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMax(), migrations[0].maxKey);",424,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMin(), migrations[0].minKey);",443,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId2][0].getMax(), migrations[0].maxKey);",444,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId3][0].getMin(), migrations[1].minKey);",448,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/balancer/balancer_policy_tests.cpp,+,"ASSERT_BSONOBJ_EQ(cluster.second[kShardId3][0].getMax(), migrations[1].maxKey);",449,download/mongodb_mongo918.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/catalog/type_chunk.cpp,+,dassert(SimpleBSONObjComparator::kInstance.evaluate(_minKey < _maxKey));,65,download/mongodb_mongo919.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(query->getFilter(), BSONObj());",279,download/mongodb_mongo920.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(query->getSort(), BSONObj());",280,download/mongodb_mongo920.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(*itExpected, *itInserted);",314,download/mongodb_mongo920.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(expectedCreateCmd, request.cmdObj);",340,download/mongodb_mongo920.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(detail, actualChangeLog.getDetails());",370,download/mongodb_mongo920.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(BSON(rpc::kReplSetMetadataFieldName << 1), request.metadata);",416,download/mongodb_mongo920.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(update->getQuery(),",429,download/mongodb_mongo920.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(update->getUpdateExpr(), coll.toBSON());",431,download/mongodb_mongo920.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(rpc::makeEmptyMetadata(), request.metadata);",447,download/mongodb_mongo920.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_BSONOBJ_EQ(expectedQuery, request.cmdObj[""query""].Obj());",479,download/mongodb_mongo920.cpp
26543060c852aac22f26143a04bf7789ec8fec53,"SERVER-24508 BSONObj::ComparatorInterface

BSONObj instances should now be compared via the comparator
interface's evaluate() method. This preferred over using
BSONObj::woCompare() directly. If the comparison doesn't
require any database semantics (e.g. there is no collation),
there is a global instance of the SimpleBSONObjComparator
which should be used for BSONObj comparisons. If the
comparison requires special semantics, then callers must
instantiate their own comparator object.",src/mongo/unittest/bson_test_util.cpp,+,"TestAssertionFailure(theFile, theLine, os.str()).stream();               \",47,download/mongodb_mongo921.cpp
ab99c11b3f212b8656d0b8bad31832d2e98d3f6c,SERVER-24852 Add means to interrupt the sharding balancer,src/mongo/s/balancer/balancer.cpp,+,"log() << ""CSRS balancer is now stopped"";",429,download/mongodb_mongo922.cpp
f68ec54403b78d185f5d9c87943a82ebb5166b81,SERVER-24132 add slaveOk to copyDB helper,src/mongo/scripting/mozjs/mongo.cpp,+,"uasserted(ErrorCodes::BadValue, ""copyDatabase needs 6 arg"");",475,download/mongodb_mongo923.cpp
f68ec54403b78d185f5d9c87943a82ebb5166b81,SERVER-24132 add slaveOk to copyDB helper,src/mongo/scripting/mozjs/mongo.cpp,+,"bool slaveOk = ValueWriter(cx, args.get(5)).toBoolean();",483,download/mongodb_mongo923.cpp
7f05ff5fd7fab804d8d84397714b308adec6fe1a,SERVER-25660 ReplicationCoordinatorImpl should shutdown replication executor after external state is stopped,src/mongo/db/repl/replication_coordinator_impl_heartbeat.cpp,+,"log() << ""Not starting an election, since we are shutting down"";",794,download/mongodb_mongo924.cpp
96d2821a053dac2cc46cc4a37f358ee316ba38d5,SERVER-25560 ReplicationCoordinatorImpl should shutdown replication executor after external state is stopped,src/mongo/db/repl/replication_coordinator_impl_heartbeat.cpp,+,"log() << ""Not starting an election, since we are shutting down"";",794,download/mongodb_mongo925.cpp
8e19a43ce5401c6333efc7c7dee291778bcec94a,SERVER-25384 Create a config.migrations collection and a Scoped RAII object class to write to it for migrations,src/mongo/s/balancer/scoped_migration_request.cpp,+,"const WriteConcernOptions kMajorityWriteConcern(WriteConcernOptions::kMajority,",45,download/mongodb_mongo926.cpp
8e19a43ce5401c6333efc7c7dee291778bcec94a,SERVER-25384 Create a config.migrations collection and a Scoped RAII object class to write to it for migrations,src/mongo/s/balancer/scoped_migration_request.cpp,+,Status result = grid.catalogClient(_txn)->removeConfigDocuments(,65,download/mongodb_mongo926.cpp
8e19a43ce5401c6333efc7c7dee291778bcec94a,SERVER-25384 Create a config.migrations collection and a Scoped RAII object class to write to it for migrations,src/mongo/s/balancer/scoped_migration_request.cpp,+,"LOG(0) << ""Failed to remove config.migrations document for migration '""",69,download/mongodb_mongo926.cpp
8e19a43ce5401c6333efc7c7dee291778bcec94a,SERVER-25384 Create a config.migrations collection and a Scoped RAII object class to write to it for migrations,src/mongo/s/balancer/scoped_migration_request.cpp,+,StatusWith<ScopedMigrationRequest> ScopedMigrationRequest::writeMigration(,92,download/mongodb_mongo926.cpp
8e19a43ce5401c6333efc7c7dee291778bcec94a,SERVER-25384 Create a config.migrations collection and a Scoped RAII object class to write to it for migrations,src/mongo/s/balancer/scoped_migration_request.cpp,+,Status result = grid.catalogClient(txn)->insertConfigDocument(,100,download/mongodb_mongo926.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/bgsync.cpp,+,"log() << ""Earliest OpTime available is "" << syncSourceResp.earliestOpTimeSeen",307,download/mongodb_mongo927.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/sync_tail.cpp,+,"LOG(1) << ""Can't go live (tryToGoLiveAsASecondary) as maintenance mode is active."";",683,download/mongodb_mongo928.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/sync_tail.cpp,+,"LOG(2) << ""Can't go live (tryToGoLiveAsASecondary) as state != recovering."";",691,download/mongodb_mongo928.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/sync_tail.cpp,+,"LOG(1) << ""Can't go live (tryToGoLiveAsASecondary) as there is an active apply batch."";",697,download/mongodb_mongo928.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/sync_tail.cpp,+,"log() << ""Can't go live (tryToGoLiveAsASecondary) as last written optime (""",705,download/mongodb_mongo928.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(1) << ""Cannot sync from any members because we are not in the replica set config"";",155,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(1) << ""Cannot select a sync source because chaining is""",184,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(1) << ""Cannot select primary member as sync source because they are blacklisted:""",190,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source because it is not up: """,246,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source because it is not readable: """,252,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source voting differences: """,263,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source because it is hidden: """,269,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source because it is older than us: """,275,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source with slaveDelay differences: """,281,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source with shouldBuildIndex differences: """,289,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(1) << ""Cannot select sync source behind our last applied optime: """,297,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(2) << ""Cannot select sync source which is older than the best candidate: """,305,download/mongodb_mongo929.cpp
e5d1e02a27a67680e6180af1bfe4f72246102594,SERVER-25638: log sync source member selection info,src/mongo/db/repl/topology_coordinator_impl.cpp,+,"LOG(1) << ""Cannot select sync source which is blacklisted: """,312,download/mongodb_mongo929.cpp
9b2f5b3e00613fff9526d8cf508e7176af57770a,SERVER-25638: log when blacklisting sync source members,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Blacklisting "" << syncSource << "" due to fetcher error: '"" << status",1462,download/mongodb_mongo930.cpp
9b2f5b3e00613fff9526d8cf508e7176af57770a,SERVER-25638: log when blacklisting sync source members,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Blacklisting host: "" << syncSource << "" during rollback due to error: '""",1493,download/mongodb_mongo930.cpp
9b2f5b3e00613fff9526d8cf508e7176af57770a,SERVER-25638: log when blacklisting sync source members,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"error() << ""Error scheduling fetcher to evaluate host as sync source, host:""",3213,download/mongodb_mongo931.cpp
9b2f5b3e00613fff9526d8cf508e7176af57770a,SERVER-25638: log when blacklisting sync source members,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Blacklisting "" << candidate << "" due to error: '"" << queryStatus << ""' for """,3226,download/mongodb_mongo931.cpp
9b2f5b3e00613fff9526d8cf508e7176af57770a,SERVER-25638: log when blacklisting sync source members,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Blacklisting due to empty first document from host "" << candidate << "" for """,3237,download/mongodb_mongo931.cpp
9b2f5b3e00613fff9526d8cf508e7176af57770a,SERVER-25638: log when blacklisting sync source members,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Blacklisting "" << candidate",3250,download/mongodb_mongo931.cpp
9b2f5b3e00613fff9526d8cf508e7176af57770a,SERVER-25638: log when blacklisting sync source members,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""we are too stale to use "" << candidate",3257,download/mongodb_mongo931.cpp
9b2f5b3e00613fff9526d8cf508e7176af57770a,SERVER-25638: log when blacklisting sync source members,src/mongo/db/repl/sync_source_feedback.cpp,+,"log() << ""Blacklisting "" << syncTarget << "" due to error: '"" << status << ""' for """,141,download/mongodb_mongo932.cpp
c1729aaa7b6cd7c77008c3f3523971787b21d2ef,SERVER-25605: Do not fassert during shutdown while doing initial sync,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"fassertStatusOK(40088, status);",607,download/mongodb_mongo933.cpp
c1729aaa7b6cd7c77008c3f3523971787b21d2ef,SERVER-25605: Do not fassert during shutdown while doing initial sync,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Initial Sync failed during shutdown due to "" << status.getStatus();",609,download/mongodb_mongo933.cpp
551bcf3a4e31a2727b9877bacaf34c529078963f,SERVER-24496: Add collStats command output to $collStats stage,src/mongo/db/pipeline/document_source_coll_stats.cpp,+,"uassert(40279,",66,download/mongodb_mongo934.cpp
551bcf3a4e31a2727b9877bacaf34c529078963f,SERVER-24496: Add collStats command output to $collStats stage,src/mongo/db/pipeline/document_source_coll_stats.cpp,+,"uasserted(40280,",101,download/mongodb_mongo934.cpp
551bcf3a4e31a2727b9877bacaf34c529078963f,SERVER-24496: Add collStats command output to $collStats stage,src/mongo/db/stats/storage_stats.cpp,+,IndexCatalog* indexCatalog = collection->getIndexCatalog();,84,download/mongodb_mongo935.cpp
d9a7a0777963b8404f40226b153e495fa5a3ae5e,SERVER-23476 restore ReplicationCoordinatorExternalStateImpl::shutdown logging,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Stopping replication reporter thread"";",217,download/mongodb_mongo936.cpp
d9a7a0777963b8404f40226b153e495fa5a3ae5e,SERVER-23476 restore ReplicationCoordinatorExternalStateImpl::shutdown logging,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Stopping replication fetcher thread"";",228,download/mongodb_mongo936.cpp
d9a7a0777963b8404f40226b153e495fa5a3ae5e,SERVER-23476 restore ReplicationCoordinatorExternalStateImpl::shutdown logging,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Stopping replication applier thread"";",233,download/mongodb_mongo936.cpp
d9a7a0777963b8404f40226b153e495fa5a3ae5e,SERVER-23476 restore ReplicationCoordinatorExternalStateImpl::shutdown logging,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Stopping replication snapshot thread"";",284,download/mongodb_mongo936.cpp
c911be4e42994ad6106d12ca6a760c255e5d0452,SERVER-25125 Report initial sync progress in ReplSetGetStatus,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Error creating initial sync progress object: "" << e.toString();",364,download/mongodb_mongo937.cpp
c911be4e42994ad6106d12ca6a760c255e5d0452,SERVER-25125 Report initial sync progress in ReplSetGetStatus,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Initial Sync Statistics: "" << _getInitialSyncProgress_inlock();",740,download/mongodb_mongo937.cpp
c911be4e42994ad6106d12ca6a760c255e5d0452,SERVER-25125 Report initial sync progress in ReplSetGetStatus,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync - initialSyncHangBeforeFinish fail point """,744,download/mongodb_mongo937.cpp
c911be4e42994ad6106d12ca6a760c255e5d0452,SERVER-25125 Report initial sync progress in ReplSetGetStatus,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Initial Sync Statistics: "" << _getInitialSyncProgress_inlock();",780,download/mongodb_mongo937.cpp
c911be4e42994ad6106d12ca6a760c255e5d0452,SERVER-25125 Report initial sync progress in ReplSetGetStatus,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync done; took "" << _stats.initialSyncEnd - _stats.initialSyncStart",797,download/mongodb_mongo937.cpp
51fe71a4169d8ac01dca915b482c94e228d8a746,SERVER-25602 Make split/mergeChunks commands check the validity of input,src/mongo/db/s/merge_chunks_command.cpp,+,"auto metadataAfterMerge = uassertStatusOK(metadata->cloneMerge(minKey, maxKey, mergeVersion));",328,download/mongodb_mongo938.cpp
51fe71a4169d8ac01dca915b482c94e228d8a746,SERVER-25602 Make split/mergeChunks commands check the validity of input,src/mongo/db/s/split_chunk_command.cpp,+,"uassert(ErrorCodes::InvalidOptions, ""collection version is missing"", oss.hasShardVersion());",284,download/mongodb_mongo939.cpp
51fe71a4169d8ac01dca915b482c94e228d8a746,SERVER-25602 Make split/mergeChunks commands check the validity of input,src/mongo/db/s/split_chunk_command.cpp,+,"uassertStatusOK(collMetadata->cloneSplit(min, max, splitKeys, newShardVersion));",409,download/mongodb_mongo939.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementReadCommand(,103,download/mongodb_mongo940.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementReadCommand(,133,download/mongodb_mongo940.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool cmdOk = Grid::get(txn)->catalogClient(txn)->runUserManagementReadCommand(,171,download/mongodb_mongo940.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementReadCommand(,219,download/mongodb_mongo940.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementReadCommand(,259,download/mongodb_mongo940.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementReadCommand(,285,download/mongodb_mongo940.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/db/auth/authz_manager_external_state_s.cpp,+,bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementReadCommand(,302,download/mongodb_mongo940.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/db/auth/authz_manager_external_state_s.cpp,+,ok = Grid::get(txn)->catalogClient(txn)->runUserManagementReadCommand(,320,download/mongodb_mongo940.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,auto findResponse = uassertStatusOK(,126,download/mongodb_mongo941.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/db/s/config/configsvr_commit_chunk_migration_command.cpp,+,auto findResponse = uassertStatusOK(,246,download/mongodb_mongo941.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,return Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,95,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,139,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,189,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,230,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,278,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,326,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,return Grid::get(txn)->catalogClient(txn)->runUserManagementReadCommand(,371,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,return Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,406,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,441,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,482,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,523,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,564,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,605,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,649,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,const bool ok = Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,694,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,return Grid::get(txn)->catalogClient(txn)->runUserManagementReadCommand(,739,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,return Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,829,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/cluster_user_management_commands.cpp,+,if (!Grid::get(txn)->catalogClient(txn)->runUserManagementWriteCommand(,920,download/mongodb_mongo942.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, dbName);",230,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto conf = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, dbName));",255,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto conf = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, dbName));",453,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, dbName);",566,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogClient(txn)->dropCollection(txn, fullns));",585,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, dbNameFrom));",617,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto confTo = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, dbNameTo));",621,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, fromdb));",677,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto conf = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, dbName));",724,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto conf = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, nsDBName));",901,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, nss.db().toString());",1025,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, dbName);",1144,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto conf = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, dbName));",1372,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto conf = uassertStatusOK(Grid::get(txn)->catalogCache()->getDatabase(txn, dbName));",1508,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto status = Grid::get(txn)->catalogCache()->getDatabase(txn, dbName);",1686,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto conf = Grid::get(txn)->catalogCache()->getDatabase(txn, dbName);",1729,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/commands/commands_public.cpp,+,"auto conf = Grid::get(txn)->catalogCache()->getDatabase(txn, dbName);",1772,download/mongodb_mongo943.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/config_server_test_fixture.cpp,+,Grid::get(operationContext())->catalogManager()->shutDown(_opCtx.get());,236,download/mongodb_mongo944.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/config_server_test_fixture.cpp,+,Grid::get(operationContext())->catalogClient(_opCtx.get())->shutDown(_opCtx.get());,237,download/mongodb_mongo944.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/config_server_test_fixture.cpp,+,return Grid::get(operationContext())->catalogClient(_opCtx.get());,252,download/mongodb_mongo944.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/config_server_test_fixture.cpp,+,return Grid::get(operationContext())->catalogManager();,256,download/mongodb_mongo944.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/query/cluster_find.cpp,+,"auto dbConfig = Grid::get(txn)->catalogCache()->getDatabase(txn, query.nss().db().toString());",317,download/mongodb_mongo945.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/sharding_test_fixture.cpp,+,Grid::get(operationContext())->catalogClient(_opCtx.get())->shutDown(_opCtx.get());,190,download/mongodb_mongo946.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/sharding_test_fixture.cpp,+,return Grid::get(operationContext())->catalogClient(_opCtx.get());,195,download/mongodb_mongo946.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_EQUALS(Grid::get(operationContext())->getNetwork()->getHostName(), serverPiece);",384,download/mongodb_mongo946.cpp
80801195df6055d4ba7f6f9c2bee2530cc87010d,"SERVER-18084 Add Grid::get(ServiceContext*) getter

Also removes some references to the static 'grid' instance.",src/mongo/s/sharding_test_fixture.cpp,+,"ASSERT_EQ(shardRegistry()->getConfigServerConnectionString().toString(),",452,download/mongodb_mongo946.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/db/db.cpp,+,VersionInfoInterface::instance().logTargetMinOS();,512,download/mongodb_mongo947.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/db/log_process_details.cpp,+,log() << mongodVersion(vii);,52,download/mongodb_mongo948.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/db/log_process_details.cpp,+,vii.logBuildInfo();,53,download/mongodb_mongo948.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/db/mongod_options.cpp,+,log() << mongodVersion(vii);,603,download/mongodb_mongo949.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/db/mongod_options.cpp,+,vii.logBuildInfo();,604,download/mongodb_mongo949.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/db/startup_warnings_common.cpp,+,"log() << ""** NOTE: This is a development version ("" << vii.version() << "") of MongoDB.""",60,download/mongodb_mongo950.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/s/version_mongos.cpp,+,log() << mongosVersion(vii);,48,download/mongodb_mongo951.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/s/version_mongos.cpp,+,vii.logBuildInfo();,49,download/mongodb_mongo951.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/s/version_mongos.cpp,+,log() << mongosVersion(vii);,51,download/mongodb_mongo951.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/s/version_mongos.cpp,+,vii.logBuildInfo();,52,download/mongodb_mongo951.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/shell/shell_options.cpp,+,log() << mongoShellVersion(vii);,224,download/mongodb_mongo952.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/shell/shell_options.cpp,+,vii.logBuildInfo();,228,download/mongodb_mongo952.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/util/version.cpp,+,fassertFailed(40278);,113,download/mongodb_mongo953.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/util/version.cpp,+,void VersionInfoInterface::logTargetMinOS() const {,178,download/mongodb_mongo953.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/util/version.cpp,+,"log() << ""targetMinOS: "" << targetMinOS();",179,download/mongodb_mongo953.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/util/version.cpp,+,void VersionInfoInterface::logBuildInfo() const {,182,download/mongodb_mongo953.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/util/version.cpp,+,"log() << ""git version: "" << gitVersion();",183,download/mongodb_mongo953.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/util/version.cpp,+,"log() << openSSLVersion(""OpenSSL version: "");",186,download/mongodb_mongo953.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/util/version.cpp,+,"log() << ""allocator: "" << allocator();",189,download/mongodb_mongo953.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/util/version.cpp,+,log() << ss.str();,201,download/mongodb_mongo953.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/util/version.cpp,+,"log() << ""build environment:"";",203,download/mongodb_mongo953.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/util/version.cpp,+,"log() << ""    "" << std::get<0>(envDataEntry) << "": "" << std::get<1>(envDataEntry);",209,download/mongodb_mongo953.cpp
dacf1667d1e650b4854ad33738b63ff379faec92,SERVER-25402 Fewer binaries depend on interpolated version info,src/mongo/util/version_impl.cpp,+,fassertFailed(40277);,93,download/mongodb_mongo954.cpp
a21fe737c6bc6ec88f0af00a7eec6f10413f9549,"Revert ""SERVER-25125 Report initial sync progress in ReplSetGetStatus""

This reverts commit 10ff598752d57650783c63166180df31f907df12.",src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync - initialSyncHangBeforeFinish fail point """,741,download/mongodb_mongo955.cpp
a21fe737c6bc6ec88f0af00a7eec6f10413f9549,"Revert ""SERVER-25125 Report initial sync progress in ReplSetGetStatus""

This reverts commit 10ff598752d57650783c63166180df31f907df12.",src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync done; took "" << t.millis() << "" milliseconds."";",759,download/mongodb_mongo955.cpp
10ff598752d57650783c63166180df31f907df12,SERVER-25125 Report initial sync progress in ReplSetGetStatus,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Error creating initial sync progress object: "" << e.toString();",364,download/mongodb_mongo956.cpp
10ff598752d57650783c63166180df31f907df12,SERVER-25125 Report initial sync progress in ReplSetGetStatus,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Initial Sync Statistics: "" << _getInitialSyncProgress_inlock();",740,download/mongodb_mongo956.cpp
10ff598752d57650783c63166180df31f907df12,SERVER-25125 Report initial sync progress in ReplSetGetStatus,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync - initialSyncHangBeforeFinish fail point """,744,download/mongodb_mongo956.cpp
10ff598752d57650783c63166180df31f907df12,SERVER-25125 Report initial sync progress in ReplSetGetStatus,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Initial Sync Statistics: "" << _getInitialSyncProgress_inlock();",780,download/mongodb_mongo956.cpp
10ff598752d57650783c63166180df31f907df12,SERVER-25125 Report initial sync progress in ReplSetGetStatus,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync done; took "" << _stats.initialSyncEnd - _stats.initialSyncStart",797,download/mongodb_mongo956.cpp
5a728c7a8d99d4efe06fd7c19a1b9d82879ee49e,SERVER-25440 Add failpoint to pause initial sync before it finishes,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""initial sync - initialSyncHangBeforeFinish fail point """,741,download/mongodb_mongo957.cpp
25381b77e69695a5c7409cde53551b6978cf92c5,SERVER-23802 Shut down shard if it rolls back the shardIdentity document.,src/mongo/db/repl/bgsync.cpp,+,fassertFailedNoTrace(40276);,600,download/mongodb_mongo958.cpp
25381b77e69695a5c7409cde53551b6978cf92c5,SERVER-23802 Shut down shard if it rolls back the shardIdentity document.,src/mongo/db/s/collection_sharding_state.cpp,+,if (txn->writesAreReplicated()) {,286,download/mongodb_mongo959.cpp
25381b77e69695a5c7409cde53551b6978cf92c5,SERVER-23802 Shut down shard if it rolls back the shardIdentity document.,src/mongo/db/s/collection_sharding_state.cpp,+,"uasserted(40070,",287,download/mongodb_mongo959.cpp
6a1f506a5f14f49e963b8768ed34e9775d68c6dc,SERVER-25509 make $replaceRoot an alias for DocumentSourceSingleDocumentTransformation,src/mongo/db/pipeline/document_source_replace_root.cpp,+,uassert(,87,download/mongodb_mongo960.cpp
6a1f506a5f14f49e963b8768ed34e9775d68c6dc,SERVER-25509 make $replaceRoot an alias for DocumentSourceSingleDocumentTransformation,src/mongo/db/pipeline/document_source_replace_root.cpp,+,uassert(,98,download/mongodb_mongo960.cpp
6a1f506a5f14f49e963b8768ed34e9775d68c6dc,SERVER-25509 make $replaceRoot an alias for DocumentSourceSingleDocumentTransformation,src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uassert(40229,",158,download/mongodb_mongo960.cpp
6a1f506a5f14f49e963b8768ed34e9775d68c6dc,SERVER-25509 make $replaceRoot an alias for DocumentSourceSingleDocumentTransformation,src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uasserted(40230,",204,download/mongodb_mongo960.cpp
6a1f506a5f14f49e963b8768ed34e9775d68c6dc,SERVER-25509 make $replaceRoot an alias for DocumentSourceSingleDocumentTransformation,src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uassert(40231, ""no newRoot specified for the $replaceRoot stage"", _newRoot);",211,download/mongodb_mongo960.cpp
ea024d2e812b0f66b8c4110f023a6787dd695531,SERVER-25539 Validate BinData private object,src/mongo/scripting/mozjs/valuewriter.cpp,+,"uassert(ErrorCodes::BadValue, ""Cannot call getter on BinData prototype"", str);",354,download/mongodb_mongo961.cpp
df4248d69bd6643925d0e9cc62c6be3adf7750d7,"SERVER-24146 Fix JSON.stringify regression, and add new ""tostrictjson"" shell util function for printing strict JSON",src/mongo/scripting/utils.cpp,+,"uassert(40275,",62,download/mongodb_mongo962.cpp
dcaadaa68ff9f0ea7e1215306eb399b79b147ddf,SERVER-25115 emptycapped test command doesn't verify arguments,src/mongo/db/catalog/capped_utils.cpp,+,collectionName.isOplog()) {,92,download/mongodb_mongo963.cpp
72a469994cf04bfd19d0e4e14c6350d0f55be8f1,SERVER-25592 Remove unused writeConcern parsing done by auth commands,src/mongo/s/commands/cluster_user_management_commands.cpp,+,"const WriteConcernOptions kMajorityWriteConcern(WriteConcernOptions::kMajority,",59,download/mongodb_mongo964.cpp
72a469994cf04bfd19d0e4e14c6350d0f55be8f1,SERVER-25592 Remove unused writeConcern parsing done by auth commands,src/mongo/s/commands/cluster_user_management_commands.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,898,download/mongodb_mongo964.cpp
6b566f73f49bc936f47e7bffc139d400924fea9b,"SERVER-25166 Put more information in log messages when a node receives a vote, log on yes votes as well as no.",src/mongo/db/repl/vote_requester.cpp,+,auto logLine = log();,93,download/mongodb_mongo965.cpp
5b6ca35994ae865db7ea3a036cd53aa43a62d2c5,SERVER-22663 Make --shardsvr required for a mongod to be used as a shard,src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(,1439,download/mongodb_mongo966.cpp
5b6ca35994ae865db7ea3a036cd53aa43a62d2c5,SERVER-22663 Make --shardsvr required for a mongod to be used as a shard,src/mongo/db/commands/dbcommands.cpp,+,"uassertStatusOK({ErrorCodes::IllegalOperation,",1447,download/mongodb_mongo966.cpp
0bc13906496a76453cab28bbefe45006e779290d,SERVER-25568 shutdown task executors for ShardRegistry and ReplicaSet monitoring in db shutdown,src/mongo/client/replica_set_monitor_manager.cpp,+,"LOG(1) << ""Shutting down task executor used for monitoring replica sets"";",135,download/mongodb_mongo967.cpp
0c6bbea55ee45db0813043b470246fc62501a38c,"SERVER-25202 Support parallel manual chunk migrations

This change switches the MigrationManager to use the UsedResourcesMap
class for acquiring the collection distributed lock on first migration
attempt and dropping it on the last.

This allows it to support parallel manual migrations.",src/mongo/s/balancer/migration_manager.cpp,+,Grid::get(txn)->catalogClient(txn)->getDistLockManager()->lockWithSessionID(,128,download/mongodb_mongo968.cpp
0c6bbea55ee45db0813043b470246fc62501a38c,"SERVER-25202 Support parallel manual chunk migrations

This change switches the MigrationManager to use the UsedResourcesMap
class for acquiring the collection distributed lock on first migration
attempt and dropping it on the last.

This allows it to support parallel manual migrations.",src/mongo/s/balancer/migration_manager.cpp,+,Grid::get(txn.get())->catalogClient(txn.get())->getDistLockManager()->unlock(,500,download/mongodb_mongo968.cpp
0c6bbea55ee45db0813043b470246fc62501a38c,"SERVER-25202 Support parallel manual chunk migrations

This change switches the MigrationManager to use the UsedResourcesMap
class for acquiring the collection distributed lock on first migration
attempt and dropping it on the last.

This allows it to support parallel manual migrations.",src/mongo/s/balancer/migration_manager.cpp,+,Grid::get(txn)->catalogClient(txn)->getDistLockManager()->unlock(,523,download/mongodb_mongo968.cpp
62ae8e41416c8dde5c09b9c7ce63b88bd36b3f6b,"Revert ""SERVER-22663 Make --shardsvr required for a mongod to be used as a shard""

This reverts commit d1223a8ad44d6bc91766f0bd05a08820cdb1fdea.",src/mongo/db/commands/dbcommands.cpp,+,massert(,1459,download/mongodb_mongo969.cpp
d1223a8ad44d6bc91766f0bd05a08820cdb1fdea,SERVER-22663 Make --shardsvr required for a mongod to be used as a shard,src/mongo/db/commands/dbcommands.cpp,+,uassertStatusOK(,1439,download/mongodb_mongo970.cpp
d1223a8ad44d6bc91766f0bd05a08820cdb1fdea,SERVER-22663 Make --shardsvr required for a mongod to be used as a shard,src/mongo/db/commands/dbcommands.cpp,+,"uassertStatusOK({ErrorCodes::IllegalOperation,",1447,download/mongodb_mongo970.cpp
045a53f469fbede582cdbbd8ba532244d86d488e,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_local.cpp,+,"fassert(40273, resultDoc.root().pushBack(rolesElement));",266,download/mongodb_mongo971.cpp
045a53f469fbede582cdbbd8ba532244d86d488e,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_local.cpp,+,"fassert(40274, resultDoc.root().pushBack(rolesElement));",284,download/mongodb_mongo971.cpp
045a53f469fbede582cdbbd8ba532244d86d488e,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = grid.catalogClient(txn)->runUserManagementReadCommand(,148,download/mongodb_mongo972.cpp
045a53f469fbede582cdbbd8ba532244d86d488e,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool cmdOk = grid.catalogClient(txn)->runUserManagementReadCommand(,196,download/mongodb_mongo972.cpp
045a53f469fbede582cdbbd8ba532244d86d488e,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = grid.catalogClient(txn)->runUserManagementReadCommand(,255,download/mongodb_mongo972.cpp
045a53f469fbede582cdbbd8ba532244d86d488e,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = grid.catalogClient(txn)->runUserManagementReadCommand(,259,download/mongodb_mongo972.cpp
045a53f469fbede582cdbbd8ba532244d86d488e,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = grid.catalogClient(txn)->runUserManagementReadCommand(,290,download/mongodb_mongo972.cpp
045a53f469fbede582cdbbd8ba532244d86d488e,SERVER-22826 Support X509 Authorization,src/mongo/util/net/ssl_manager.cpp,+,"LOG(1) << ""MONGODB-X509 authorization parsed the following roles from peer certificate: """,1354,download/mongodb_mongo973.cpp
54c295e43229197db8741ad30ecef33aaca59798,"Revert ""SERVER-5781 fixed unittest error code for addFields""

This reverts commit 4fc451a03f06b696ec563144385aabe2d3d619cf.",src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uassert(40232,",68,download/mongodb_mongo974.cpp
54c295e43229197db8741ad30ecef33aaca59798,"Revert ""SERVER-5781 fixed unittest error code for addFields""

This reverts commit 4fc451a03f06b696ec563144385aabe2d3d619cf.",src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uassert(40228,",76,download/mongodb_mongo974.cpp
4fc451a03f06b696ec563144385aabe2d3d619cf,SERVER-5781 fixed unittest error code for addFields,src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uassert(40232,",56,download/mongodb_mongo975.cpp
4fc451a03f06b696ec563144385aabe2d3d619cf,SERVER-5781 fixed unittest error code for addFields,src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uassert(40228,",64,download/mongodb_mongo975.cpp
be8b9869132ed44b25a909476abad03d9254fde9,SERVER-25000 Built _configsvrMergeChunk wrapper around applyOps,src/mongo/db/s/config/configsvr_merge_chunk_command.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,81,download/mongodb_mongo976.cpp
be8b9869132ed44b25a909476abad03d9254fde9,SERVER-25000 Built _configsvrMergeChunk wrapper around applyOps,src/mongo/db/s/config/configsvr_merge_chunk_command.cpp,+,"uasserted(ErrorCodes::IllegalOperation,",106,download/mongodb_mongo976.cpp
be8b9869132ed44b25a909476abad03d9254fde9,SERVER-25000 Built _configsvrMergeChunk wrapper around applyOps,src/mongo/db/s/config/configsvr_merge_chunk_command.cpp,+,auto parsedRequest = uassertStatusOK(MergeChunkRequest::parseFromConfigCommand(cmdObj));,110,download/mongodb_mongo976.cpp
be8b9869132ed44b25a909476abad03d9254fde9,SERVER-25000 Built _configsvrMergeChunk wrapper around applyOps,src/mongo/db/s/config/configsvr_merge_chunk_command.cpp,+,"Grid::get(txn)->catalogManager()->commitChunkMerge(txn,",113,download/mongodb_mongo976.cpp
be8b9869132ed44b25a909476abad03d9254fde9,SERVER-25000 Built _configsvrMergeChunk wrapper around applyOps,src/mongo/db/s/config/configsvr_merge_chunk_command.cpp,+,uassertStatusOK(mergeChunkResult);,119,download/mongodb_mongo976.cpp
be8b9869132ed44b25a909476abad03d9254fde9,SERVER-25000 Built _configsvrMergeChunk wrapper around applyOps,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,Status applyOpsStatus = grid.catalogClient(txn)->applyChunkOpsDeprecated(,1281,download/mongodb_mongo977.cpp
be8b9869132ed44b25a909476abad03d9254fde9,SERVER-25000 Built _configsvrMergeChunk wrapper around applyOps,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"grid.catalogClient(txn)->logChange(txn, ""merge"", ns.ns(), logDetail.obj());",1298,download/mongodb_mongo977.cpp
d1d26b71ca0ac0b20f868dc8accd26769d5fd169,SERVER-5781 fix error codes for addFields,src/mongo/db/pipeline/document_source_add_fields.cpp,+,"uassert(40272,",49,download/mongodb_mongo978.cpp
5a83f956577d1a571ff5acb410aeb06faf5ec92d,"SERVER-5781 addFields stage.

This aggregation stage allows the addition of computed fields to a document while preserving all existing fields.",src/mongo/db/pipeline/document_source_add_fields.cpp,+,"uassert(40269,",49,download/mongodb_mongo979.cpp
5a83f956577d1a571ff5acb410aeb06faf5ec92d,"SERVER-5781 addFields stage.

This aggregation stage allows the addition of computed fields to a document while preserving all existing fields.",src/mongo/db/pipeline/parsed_add_fields.cpp,+,"uasserted(status.location(),",45,download/mongodb_mongo980.cpp
5a83f956577d1a571ff5acb410aeb06faf5ec92d,"SERVER-5781 addFields stage.

This aggregation stage allows the addition of computed fields to a document while preserving all existing fields.",src/mongo/db/pipeline/parsed_aggregation_projection.cpp,+,"uasserted(status.location(),",271,download/mongodb_mongo981.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""shutting down _oplogBuffer in doInitialSync."";",651,download/mongodb_mongo982.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/data_replicator.cpp,+,"LOG(1) << ""Signaling shutdown event for DataReplicator."";",846,download/mongodb_mongo982.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""_syncSource is empty so scheduling a retry in  "" << _opts.syncSourceRetryWait;",914,download/mongodb_mongo982.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Scheduling shutdown in the future, creating shutdownEvent."";",1262,download/mongodb_mongo982.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/data_replicator.cpp,+,"log() << ""Waiting for shutdown of DataReplicator."";",1307,download/mongodb_mongo982.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""stopping data replication threads"";",223,download/mongodb_mongo983.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/replication_coordinator_impl.cpp,+,LOG(1),565,download/mongodb_mongo984.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"LOG(1) << ""ReplicationCoordinatorImpl::_stopDataReplication calling """,572,download/mongodb_mongo984.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/replication_coordinator_impl.cpp,+,"LOG(1) << ""resetting durable/applied optimes."";",1104,download/mongodb_mongo984.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/replication_coordinator_impl.cpp,+,auto finishedEvent = uassertStatusOK(_replExecutor.makeEvent());,1999,download/mongodb_mongo984.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/resync.cpp,+,"uassertStatusOKWithLocation(replCoord->resyncData(txn, waitForResync), ""resync"", 0);",96,download/mongodb_mongo985.cpp
2ab6274544b795a22e3450205b7cad7bc35ddbeb,SERVER-23476: wire resync back up,src/mongo/db/repl/resync.cpp,+,Lock::GlobalWrite globalWriteLock(txn->lockState());,102,download/mongodb_mongo985.cpp
fad11e0917e79e5cfa2bb744e9ec5d1bcb97a608,SERVER-24769 Add support for $lookup and $graphLookup on a view.,src/mongo/db/commands/pipeline_command.cpp,+,ViewCatalog* viewCatalog = autoDb.getDb() ? autoDb.getDb()->getViewCatalog() : nullptr;,176,download/mongodb_mongo986.cpp
fad11e0917e79e5cfa2bb744e9ec5d1bcb97a608,SERVER-24769 Add support for $lookup and $graphLookup on a view.,src/mongo/db/pipeline/document_source_graph_lookup.cpp,+,"auto pipeline = uassertStatusOK(_mongod->makePipeline(_fromPipeline, _fromExpCtx));",173,download/mongodb_mongo987.cpp
fad11e0917e79e5cfa2bb744e9ec5d1bcb97a608,SERVER-24769 Add support for $lookup and $graphLookup on a view.,src/mongo/db/pipeline/document_source_graph_lookup.cpp,+,"uassert(40271,",175,download/mongodb_mongo987.cpp
fad11e0917e79e5cfa2bb744e9ec5d1bcb97a608,SERVER-24769 Add support for $lookup and $graphLookup on a view.,src/mongo/db/pipeline/document_source_lookup.cpp,+,"uassert(4567, ""from collection cannot be sharded"", !_mongod->isSharded(_fromExpCtx->ns));",91,download/mongodb_mongo988.cpp
fad11e0917e79e5cfa2bb744e9ec5d1bcb97a608,SERVER-24769 Add support for $lookup and $graphLookup on a view.,src/mongo/db/pipeline/document_source_lookup.cpp,+,"auto pipeline = uassertStatusOK(_mongod->makePipeline(_fromPipeline, _fromExpCtx));",117,download/mongodb_mongo988.cpp
fad11e0917e79e5cfa2bb744e9ec5d1bcb97a608,SERVER-24769 Add support for $lookup and $graphLookup on a view.,src/mongo/db/pipeline/document_source_lookup.cpp,+,"_pipeline = uassertStatusOK(_mongod->makePipeline(_fromPipeline, _fromExpCtx));",364,download/mongodb_mongo988.cpp
a0b7e4fc8cf224505267b2fe589975ba36f49078,SERVER-24497 Linearizable read concern implemented,src/mongo/db/commands/dbcommands.cpp,+,"LOG(debugLevel) << ""Command on database "" << db",1482,download/mongodb_mongo989.cpp
a0b7e4fc8cf224505267b2fe589975ba36f49078,SERVER-24497 Linearizable read concern implemented,src/mongo/db/commands/dbcommands.cpp,+,<< getRedactedCopyForLogging(request.getCommandArgs());,1484,download/mongodb_mongo989.cpp
a0b7e4fc8cf224505267b2fe589975ba36f49078,SERVER-24497 Linearizable read concern implemented,src/mongo/db/read_concern.cpp,+,MONGO_WRITE_CONFLICT_RETRY_LOOP_END(,163,download/mongodb_mongo990.cpp
a0b7e4fc8cf224505267b2fe589975ba36f49078,SERVER-24497 Linearizable read concern implemented,src/mongo/db/read_concern.cpp,+,WriteConcernOptions wc = WriteConcernOptions(,166,download/mongodb_mongo990.cpp
08b8ccece70c72a88162604734f895f0d8e35d10,SERVER-25466 Add MessageCompressor stats to server status,src/mongo/db/stats/counters.cpp,+,"void NetworkCounter::hitLogical(long long bytesIn, long long bytesOut) {",157,download/mongodb_mongo991.cpp
08b8ccece70c72a88162604734f895f0d8e35d10,SERVER-25466 Add MessageCompressor stats to server status,src/mongo/transport/transport_layer_legacy.cpp,+,"networkCounter.hitLogical(message->size(), 0);",115,download/mongodb_mongo992.cpp
08b8ccece70c72a88162604734f895f0d8e35d10,SERVER-25466 Add MessageCompressor stats to server status,src/mongo/transport/transport_layer_legacy.cpp,+,"networkCounter.hitLogical(0, message.size());",154,download/mongodb_mongo992.cpp
e38918afa79bbb952e82a5127cb36d85f919703a,SERVER-24999 Built _configsvrSplitChunk wrapper around applyOps,src/mongo/db/s/config/configsvr_split_chunk_command.cpp,+,bool supportsWriteConcern(const BSONObj& cmd) const override {,79,download/mongodb_mongo993.cpp
e38918afa79bbb952e82a5127cb36d85f919703a,SERVER-24999 Built _configsvrSplitChunk wrapper around applyOps,src/mongo/db/s/config/configsvr_split_chunk_command.cpp,+,"uasserted(ErrorCodes::IllegalOperation,",104,download/mongodb_mongo993.cpp
e38918afa79bbb952e82a5127cb36d85f919703a,SERVER-24999 Built _configsvrSplitChunk wrapper around applyOps,src/mongo/db/s/config/configsvr_split_chunk_command.cpp,+,auto parsedRequest = uassertStatusOK(SplitChunkRequest::parseFromConfigCommand(cmdObj));,108,download/mongodb_mongo993.cpp
e38918afa79bbb952e82a5127cb36d85f919703a,SERVER-24999 Built _configsvrSplitChunk wrapper around applyOps,src/mongo/db/s/config/configsvr_split_chunk_command.cpp,+,"Grid::get(txn)->catalogManager()->commitChunkSplit(txn,",111,download/mongodb_mongo993.cpp
e38918afa79bbb952e82a5127cb36d85f919703a,SERVER-24999 Built _configsvrSplitChunk wrapper around applyOps,src/mongo/db/s/config/configsvr_split_chunk_command.cpp,+,uassertStatusOK(splitChunkResult);,117,download/mongodb_mongo993.cpp
e38918afa79bbb952e82a5127cb36d85f919703a,SERVER-24999 Built _configsvrSplitChunk wrapper around applyOps,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,Status applyOpsStatus = grid.catalogClient(txn)->applyChunkOpsDeprecated(,1122,download/mongodb_mongo994.cpp
e38918afa79bbb952e82a5127cb36d85f919703a,SERVER-24999 Built _configsvrSplitChunk wrapper around applyOps,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"grid.catalogClient(txn)->logChange(txn, ""split"", ns.ns(), logDetail.obj());",1141,download/mongodb_mongo994.cpp
e38918afa79bbb952e82a5127cb36d85f919703a,SERVER-24999 Built _configsvrSplitChunk wrapper around applyOps,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"grid.catalogClient(txn)->logChange(txn, ""multi-split"", ns.ns(), chunkDetail.obj());",1154,download/mongodb_mongo994.cpp
f6bb7b0a3bff0495db6be1e04ff72d95862cbb6f,"Revert ""SERVER-22826 Support X509 Authorization""

This reverts commit d930f4832631eca7092ada4328d780f2b8d19d31.",src/mongo/db/auth/authz_manager_external_state_s.cpp,+,"grid.catalogClient(txn)->runUserManagementReadCommand(txn, ""admin"", usersInfoCmd, &builder);",161,download/mongodb_mongo995.cpp
f6bb7b0a3bff0495db6be1e04ff72d95862cbb6f,"Revert ""SERVER-22826 Support X509 Authorization""

This reverts commit d930f4832631eca7092ada4328d780f2b8d19d31.",src/mongo/db/auth/authz_manager_external_state_s.cpp,+,"grid.catalogClient(txn)->runUserManagementReadCommand(txn, ""admin"", rolesInfoCmd, &builder);",224,download/mongodb_mongo995.cpp
f6bb7b0a3bff0495db6be1e04ff72d95862cbb6f,"Revert ""SERVER-22826 Support X509 Authorization""

This reverts commit d930f4832631eca7092ada4328d780f2b8d19d31.",src/mongo/db/auth/authz_manager_external_state_s.cpp,+,"grid.catalogClient(txn)->runUserManagementReadCommand(txn, dbname, rolesInfoCmd, &builder);",207,download/mongodb_mongo995.cpp
d930f4832631eca7092ada4328d780f2b8d19d31,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_local.cpp,+,"fassert(40271, resultDoc.root().pushBack(rolesElement));",266,download/mongodb_mongo996.cpp
d930f4832631eca7092ada4328d780f2b8d19d31,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_local.cpp,+,"fassert(40272, resultDoc.root().pushBack(rolesElement));",284,download/mongodb_mongo996.cpp
d930f4832631eca7092ada4328d780f2b8d19d31,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = grid.catalogClient(txn)->runUserManagementReadCommand(,148,download/mongodb_mongo997.cpp
d930f4832631eca7092ada4328d780f2b8d19d31,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool cmdOk = grid.catalogClient(txn)->runUserManagementReadCommand(,196,download/mongodb_mongo997.cpp
d930f4832631eca7092ada4328d780f2b8d19d31,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = grid.catalogClient(txn)->runUserManagementReadCommand(,255,download/mongodb_mongo997.cpp
d930f4832631eca7092ada4328d780f2b8d19d31,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = grid.catalogClient(txn)->runUserManagementReadCommand(,259,download/mongodb_mongo997.cpp
d930f4832631eca7092ada4328d780f2b8d19d31,SERVER-22826 Support X509 Authorization,src/mongo/db/auth/authz_manager_external_state_s.cpp,+,const bool ok = grid.catalogClient(txn)->runUserManagementReadCommand(,290,download/mongodb_mongo997.cpp
d930f4832631eca7092ada4328d780f2b8d19d31,SERVER-22826 Support X509 Authorization,src/mongo/util/net/ssl_manager.cpp,+,"LOG(1) << ""MONGODB-X509 authorization parsed the following roles from peer certificate: """,1330,download/mongodb_mongo998.cpp
4c6009e67d3e503f796b5afcbcbeaa95eba80b44,SERVER-22620 prefer config servers with recent opTime,src/mongo/client/replica_set_monitor.cpp,+,"uassertStatusOK(bsonExtractOpTimeField(lastWriteField, ""opTime"", &opTime));",856,download/mongodb_mongo999.cpp
4c6009e67d3e503f796b5afcbcbeaa95eba80b44,SERVER-22620 prefer config servers with recent opTime,src/mongo/client/replica_set_monitor.cpp,+,"LOG(3) << ""Updating "" << host << "" lastWriteDate to "" << reply.lastWriteDate;",925,download/mongodb_mongo999.cpp
4c6009e67d3e503f796b5afcbcbeaa95eba80b44,SERVER-22620 prefer config servers with recent opTime,src/mongo/client/replica_set_monitor.cpp,+,"LOG(3) << ""Updating "" << host << "" opTime to "" << reply.opTime;",928,download/mongodb_mongo999.cpp
9ca2c6dcc96cf826b0ef06a8cb1590ec2bcaa8a1,SERVER-25056 implscope checks interruptability against opctx,src/mongo/scripting/mozjs/implscope.cpp,+,auto status = scope->_opCtx->checkForInterruptNoAssert();,206,download/mongodb_mongo1000.cpp
118a4ccdc2a1859309b1e2284952a7223e85b1d4,"SERVER-25267 SERVER-25265 Integrate compression with networking code
and snappy compressor",src/mongo/client/dbclient.cpp,+,uassertStatusOK(swm.getStatus());,1297,download/mongodb_mongo1001.cpp
118a4ccdc2a1859309b1e2284952a7223e85b1d4,"SERVER-25267 SERVER-25265 Integrate compression with networking code
and snappy compressor",src/mongo/client/dbclient.cpp,+,uassertStatusOK(swm.getStatus());,1317,download/mongodb_mongo1001.cpp
118a4ccdc2a1859309b1e2284952a7223e85b1d4,"SERVER-25267 SERVER-25265 Integrate compression with networking code
and snappy compressor",src/mongo/client/dbclient.cpp,+,uassertStatusOK(swm.getStatus());,1331,download/mongodb_mongo1001.cpp
118a4ccdc2a1859309b1e2284952a7223e85b1d4,"SERVER-25267 SERVER-25265 Integrate compression with networking code
and snappy compressor",src/mongo/client/dbclient.cpp,+,uassertStatusOK(swm.getStatus());,1344,download/mongodb_mongo1001.cpp
118a4ccdc2a1859309b1e2284952a7223e85b1d4,"SERVER-25267 SERVER-25265 Integrate compression with networking code
and snappy compressor",src/mongo/tools/bridge.cpp,+,"error() << ""Error decompressing message: "" << swm.getStatus();",145,download/mongodb_mongo1002.cpp
118a4ccdc2a1859309b1e2284952a7223e85b1d4,"SERVER-25267 SERVER-25265 Integrate compression with networking code
and snappy compressor",src/mongo/tools/bridge.cpp,+,"error() << ""Error decompressing message: "" << swm.getStatus();",262,download/mongodb_mongo1002.cpp
118a4ccdc2a1859309b1e2284952a7223e85b1d4,"SERVER-25267 SERVER-25265 Integrate compression with networking code
and snappy compressor",src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << ""Compressed message would be larger than "" << MaxMessageSizeBytes",96,download/mongodb_mongo1003.cpp
118a4ccdc2a1859309b1e2284952a7223e85b1d4,"SERVER-25267 SERVER-25265 Integrate compression with networking code
and snappy compressor",src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << curName << "" is not supported"";",235,download/mongodb_mongo1003.cpp
118a4ccdc2a1859309b1e2284952a7223e85b1d4,"SERVER-25267 SERVER-25265 Integrate compression with networking code
and snappy compressor",src/mongo/transport/message_compressor_registry.cpp,+,"fassert(40269, ""Invalid message compressor ID"");",51,download/mongodb_mongo1004.cpp
118a4ccdc2a1859309b1e2284952a7223e85b1d4,"SERVER-25267 SERVER-25265 Integrate compression with networking code
and snappy compressor",src/mongo/transport/message_compressor_registry.cpp,+,"fassert(40270,",64,download/mongodb_mongo1004.cpp
118a4ccdc2a1859309b1e2284952a7223e85b1d4,"SERVER-25267 SERVER-25265 Integrate compression with networking code
and snappy compressor",src/mongo/transport/service_entry_point_test_suite.cpp,+,"Ticket ServiceEntryPointTestSuite::MockTLHarness::_sinkThenErrorOnWait(Session& s,",208,download/mongodb_mongo1005.cpp
91800fc61913358350b658406065c5d893d2ba2c,SERVER-25263 Add MessageCompressorManager,src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << ""Compressing message with "" << compressor->getName();",86,download/mongodb_mongo1006.cpp
91800fc61913358350b658406065c5d893d2ba2c,SERVER-25263 Add MessageCompressorManager,src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << ""Starting client-side compression negotiation"";",154,download/mongodb_mongo1006.cpp
91800fc61913358350b658406065c5d893d2ba2c,SERVER-25263 Add MessageCompressorManager,src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << ""Offering "" << e << "" compressor to server"";",162,download/mongodb_mongo1006.cpp
91800fc61913358350b658406065c5d893d2ba2c,SERVER-25263 Add MessageCompressorManager,src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << ""Finishing client-side compreession negotiation"";",170,download/mongodb_mongo1006.cpp
91800fc61913358350b658406065c5d893d2ba2c,SERVER-25263 Add MessageCompressorManager,src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << ""No compression algorithms were sent from the server. """,179,download/mongodb_mongo1006.cpp
91800fc61913358350b658406065c5d893d2ba2c,SERVER-25263 Add MessageCompressorManager,src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << ""Received message compressors from server"";",184,download/mongodb_mongo1006.cpp
91800fc61913358350b658406065c5d893d2ba2c,SERVER-25263 Add MessageCompressorManager,src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << ""Adding compressor "" << ret->getName();",188,download/mongodb_mongo1006.cpp
91800fc61913358350b658406065c5d893d2ba2c,SERVER-25263 Add MessageCompressorManager,src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << ""Starting server-side compression negotiation"";",194,download/mongodb_mongo1006.cpp
91800fc61913358350b658406065c5d893d2ba2c,SERVER-25263 Add MessageCompressorManager,src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << cur->getName() << "" is supported"";",225,download/mongodb_mongo1006.cpp
91800fc61913358350b658406065c5d893d2ba2c,SERVER-25263 Add MessageCompressorManager,src/mongo/transport/message_compressor_manager.cpp,+,"LOG(3) << cur->getName() << "" is not supported"";",228,download/mongodb_mongo1006.cpp
93bb9345df7d98c7aa65b9a1c1eb10d0734e298e,SERVER-25264 Add MessageCompressorInterface and MessageCompressorRegistry,src/mongo/transport/message_compressor_registry.cpp,+,"fassert(40254,",51,download/mongodb_mongo1007.cpp
9597d67f9640b32fad2264c49da4ba0bd271d395,SERVER-24213 Make addShard return success if attempting to add an already existing shard,src/mongo/s/balancer/cluster_statistics_impl.cpp,+,auto shardsStatus = Grid::get(txn)->catalogClient(txn)->getAllShards(,107,download/mongodb_mongo1008.cpp
9597d67f9640b32fad2264c49da4ba0bd271d395,SERVER-24213 Make addShard return success if attempting to add an already existing shard,src/mongo/s/client/shard_registry.cpp,+,"grid.catalogClient(txn)->getAllShards(txn, repl::ReadConcernLevel::kMajorityReadConcern);",306,download/mongodb_mongo1009.cpp
9597d67f9640b32fad2264c49da4ba0bd271d395,SERVER-24213 Make addShard return success if attempting to add an already existing shard,src/mongo/s/commands/cluster_list_shards_cmd.cpp,+,auto shardsStatus = grid.catalogClient(txn)->getAllShards(,77,download/mongodb_mongo1010.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logAuthentication(Client* client,",41,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logCommandAuthzCheck(Client* client,",46,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logDeleteAuthzCheck(Client* client,",52,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logGetMoreAuthzCheck(Client* client,",57,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logInsertAuthzCheck(Client* client,",62,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logKillCursorsAuthzCheck(Client* client,",67,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logQueryAuthzCheck(Client* client,",72,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logUpdateAuthzCheck(Client* client,",77,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logCreateUser(Client* client,",85,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logDropUser(Client* client, const UserName& username) MONGO_AUDIT_STUB",91,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logDropAllUsersFromDatabase(Client* client, StringData dbname) MONGO_AUDIT_STUB",93,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logUpdateUser(Client* client,",95,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logGrantRolesToUser(Client* client,",101,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logRevokeRolesFromUser(Client* client,",105,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logCreateRole(Client* client,",109,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logUpdateRole(Client* client,",114,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logDropRole(Client* client, const RoleName& role) MONGO_AUDIT_STUB",119,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logDropAllRolesFromDatabase(Client* client, StringData dbname) MONGO_AUDIT_STUB",121,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logGrantRolesToRole(Client* client,",123,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logRevokeRolesFromRole(Client* client,",127,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logGrantPrivilegesToRole(Client* client,",131,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logRevokePrivilegesFromRole(Client* client,",135,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logReplSetReconfig(Client* client,",139,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logApplicationMessage(Client* client, StringData msg) MONGO_AUDIT_STUB",143,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,void logShutdown(Client* client) MONGO_AUDIT_STUB,145,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logCreateIndex(Client* client,",147,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logCreateCollection(Client* client, StringData nsname) MONGO_AUDIT_STUB",152,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logCreateDatabase(Client* client, StringData dbname) MONGO_AUDIT_STUB",154,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logDropIndex(Client* client, StringData indexname, StringData nsname) MONGO_AUDIT_STUB",157,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logDropCollection(Client* client, StringData nsname) MONGO_AUDIT_STUB",159,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logDropDatabase(Client* client, StringData dbname) MONGO_AUDIT_STUB",161,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logRenameCollection(Client* client, StringData source, StringData target) MONGO_AUDIT_STUB",165,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logEnableSharding(Client* client, StringData dbname) MONGO_AUDIT_STUB",167,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logAddShard(Client* client, StringData name, const std::string& servers, long long maxSize)",172,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logRemoveShard(Client* client, StringData shardname) MONGO_AUDIT_STUB",175,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/audit.cpp,+,"void logShardCollection(Client* client, StringData ns, const BSONObj& keyPattern, bool unique)",180,download/mongodb_mongo1011.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/authentication_commands.cpp,+,"audit::logAuthentication(Client::getCurrent(), mechanism, user, status.code());",179,download/mongodb_mongo1012.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logCreateUser(Client::getCurrent(),",724,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logUpdateUser(Client::getCurrent(),",837,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logDropUser(Client::getCurrent(), userName);",898,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logDropAllUsersFromDatabase(Client::getCurrent(), dbname);",966,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logGrantRolesToUser(Client::getCurrent(), userName, roles);",1046,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logRevokeRolesFromUser(Client::getCurrent(), userName, roles);",1120,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logCreateRole(Client::getCurrent(), args.roleName, args.roles, args.privileges);",1352,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logUpdateRole(Client::getCurrent(),",1446,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logGrantPrivilegesToRole(Client::getCurrent(), roleName, privilegesToAdd);",1555,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logRevokePrivilegesFromRole(Client::getCurrent(), roleName, privilegesToRemove);",1663,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logGrantRolesToRole(Client::getCurrent(), roleName, rolesToAdd);",1755,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logRevokeRolesFromRole(Client::getCurrent(), roleName, rolesToRemove);",1841,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logDropRole(Client::getCurrent(), roleName);",1972,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logDropAllRolesFromDatabase(Client::getCurrent(), dbname);",2103,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logCreateUser(Client::getCurrent(),",2376,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logUpdateUser(Client::getCurrent(),",2382,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logCreateRole(Client::getCurrent(), roleName, roles, privileges);",2402,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logUpdateRole(Client::getCurrent(), roleName, &roles, &privileges);",2404,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logDropUser(Client::getCurrent(), userName);",2548,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/user_management_commands.cpp,+,"audit::logDropRole(Client::getCurrent(), roleName);",2628,download/mongodb_mongo1013.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/commands/write_commands/write_commands.cpp,+,"Status checkAuthForWriteCommand(Client* client,",78,download/mongodb_mongo1014.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/db/s/config/configsvr_add_shard_command.cpp,+,"audit::logAddShard(Client::getCurrent(),",116,download/mongodb_mongo1015.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/s/commands/cluster_enable_sharding_cmd.cpp,+,"audit::logEnableSharding(Client::getCurrent(), dbname);",110,download/mongodb_mongo1016.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/s/commands/cluster_shard_collection_cmd.cpp,+,"audit::logShardCollection(Client::getCurrent(), nss.ns(), proposedKey, careAboutUnique);",479,download/mongodb_mongo1017.cpp
9a1688ba6c07117405c46cc6fb1275cb1fcbb4cf,SERVER-25488 merge ClientBasic and Client,src/mongo/s/server.cpp,+,audit::logShutdown(Client::getCurrent());,150,download/mongodb_mongo1018.cpp
0aa6850420e3617bd182c91f4a81c5021f59ee52,"SERVER-24152 Change error code to avoid duplicates.

Fixes compile with the RocksDB storage engine. The error code 40264 was
being used in rocks_index.cpp:

  mongodb-partners/mongo-rocks@35c85d8c6d32c0eda01834493069b06f39803a67",src/mongo/db/pipeline/granularity_rounder_preferred_numbers.cpp,+,"uassert(40268, ""A granularity rounder can only round non-negative numbers"", number >= 0.0);",159,download/mongodb_mongo1019.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/document_source_bucket_auto.cpp,+,"uassert(40258,",110,download/mongodb_mongo1020.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/document_source_bucket_auto.cpp,+,uassert(,117,download/mongodb_mongo1020.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/document_source_bucket_auto.cpp,+,"uassert(40260,",122,download/mongodb_mongo1020.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/document_source_bucket_auto.cpp,+,"uassert(40261,",441,download/mongodb_mongo1020.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder.cpp,+,"massert(40256,",46,download/mongodb_mongo1021.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder.cpp,+,"uassert(40257,",55,download/mongodb_mongo1021.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_powers_of_two.cpp,+,void uassertNonNegativeNumber(Value value) {,48,download/mongodb_mongo1022.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_powers_of_two.cpp,+,"uassert(40265,",49,download/mongodb_mongo1022.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_powers_of_two.cpp,+,"uassert(40266, ""A granularity rounder cannot round NaN"", !std::isnan(number));",55,download/mongodb_mongo1022.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_powers_of_two.cpp,+,"uassert(40267, ""A granularity rounder can only round non-negative numbers"", number >= 0.0);",56,download/mongodb_mongo1022.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_powers_of_two.cpp,+,uassertNonNegativeNumber(value);,61,download/mongodb_mongo1022.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_powers_of_two.cpp,+,exp = Value(static_cast<int>(std::floor(std::log2(value.getDouble())) + 1.0));,69,download/mongodb_mongo1022.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_powers_of_two.cpp,+,static_cast<int>((std::floor(input.logarithm(Decimal128(2)).toDouble()) + 1.0))));,73,download/mongodb_mongo1022.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_powers_of_two.cpp,+,uassertNonNegativeNumber(value);,87,download/mongodb_mongo1022.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_powers_of_two.cpp,+,exp = Value(static_cast<int>(std::ceil(std::log2(value.getDouble())) - 1.0));,95,download/mongodb_mongo1022.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_powers_of_two.cpp,+,static_cast<int>((std::ceil(input.logarithm(Decimal128(2)).toDouble()) - 1.0))));,99,download/mongodb_mongo1022.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_preferred_numbers.cpp,+,void uassertNonNegativeNumber(Value value) {,151,download/mongodb_mongo1023.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_preferred_numbers.cpp,+,"uassert(40262,",152,download/mongodb_mongo1023.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_preferred_numbers.cpp,+,"uassert(40263, ""A granularity rounder cannot round NaN"", !std::isnan(number));",158,download/mongodb_mongo1023.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_preferred_numbers.cpp,+,"uassert(40264, ""A granularity rounder can only round non-negative numbers"", number >= 0.0);",159,download/mongodb_mongo1023.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_preferred_numbers.cpp,+,uassertNonNegativeNumber(value);,164,download/mongodb_mongo1023.cpp
91e499934c04443d98f88f850a37f9e341382b4b,SERVER-24152 add granularity option to $bucketAuto,src/mongo/db/pipeline/granularity_rounder_preferred_numbers.cpp,+,uassertNonNegativeNumber(value);,249,download/mongodb_mongo1023.cpp
e3c13d1bdafd2517248fffdb56f1f421e3e792ea,SERVER-24439 Make mongos commands over sharded collections inherit the collection default collation,src/mongo/s/chunk_manager.cpp,+,"msgasserted(ErrorCodes::ShardKeyNotFound,",472,download/mongodb_mongo1024.cpp
e3c13d1bdafd2517248fffdb56f1f421e3e792ea,SERVER-24439 Make mongos commands over sharded collections inherit the collection default collation,src/mongo/s/commands/cluster_pipeline_cmd.cpp,+,shardKeyMatches = uassertStatusOK(,157,download/mongodb_mongo1025.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/bgsync.cpp,+,"log() << ""Our newest OpTime : "" << lastOpTimeFetched;",305,download/mongodb_mongo1026.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/bgsync.cpp,+,"log() << ""Earliest OpTime available is "" << syncSourceResp.earliestOpTimeSeen;",306,download/mongodb_mongo1026.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/freshness_scanner.cpp,+,"LOG(2) << ""FreshnessScanner: failed to parse opTime in "" << opTimesObj << "" from """,83,download/mongodb_mongo1027.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/freshness_scanner.cpp,+,"LOG(2) << ""FreshnessScanner: processed response "" << opTimesObj << "" from """,97,download/mongodb_mongo1027.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,": opID(_opID), opTime(_opTime), writeConcern(_writeConcern), condVar(_condVar) {}",173,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"LOG(3) << ""Waiting for OpTime: "" << waitInfo.waiter;",1209,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,_finishCatchUpOplog_inlock(true);,2638,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,_finishCatchUpOplog_inlock(true);,2657,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"fassertStatusOK(40254, evhStatus.getStatus());",2660,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,_finishCatchUpOplog_inlock(true);,2666,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"_catchUpOplogToLatest_inlock(*scanner, catchUpTimeout, term);",2671,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"void ReplicationCoordinatorImpl::_catchUpOplogToLatest_inlock(const FreshnessScanner& scanner,",2675,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Stopped transition to primary of term "" << originalTerm",2682,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,_finishCatchUpOplog_inlock(false);,2684,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Could not access any nodes within timeout when checking for """,2692,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,_finishCatchUpOplog_inlock(true);,2695,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""My optime is most up-to-date, skipping catch-up """,2702,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,_finishCatchUpOplog_inlock(true);,2704,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Cannot catch up oplog after becoming primary."";",2712,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,"log() << ""Finished catch-up oplog after becoming primary."";",2714,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,_finishCatchUpOplog_inlock(true);,2717,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_impl.cpp,+,void ReplicationCoordinatorImpl::_finishCatchUpOplog_inlock(bool startToDrain) {,2732,download/mongodb_mongo1028.cpp
953a241f6dd1541905a1b6e259140635b80238de,"SERVER-23663 New primary syncs from chosen node to catch up with timeout

SERVER-23662 Implement ""catch-up timeout"" configuration variable",src/mongo/db/repl/replication_coordinator_test_fixture.cpp,+,"log() << ""Black holing request to "" << request.target.toString() << "" : "" << request.cmdObj;",482,download/mongodb_mongo1029.cpp
0910d24d096ab9787b84b2f64c5a5f387103d06d,SERVER-25266 Enhance NetworkASIO to send the client metadata document,src/mongo/rpc/metadata/client_metadata_ismaster.cpp,+,"void ClientMetadataIsMasterState::writeToMetadata(OperationContext* txn, BSONObjBuilder* builder) {",96,download/mongodb_mongo1030.cpp
0910d24d096ab9787b84b2f64c5a5f387103d06d,SERVER-25266 Enhance NetworkASIO to send the client metadata document,src/mongo/s/sharding_egress_metadata_hook.cpp,+,"ClientMetadataIsMasterState::writeToMetadata(txn, metadataBob);",60,download/mongodb_mongo1031.cpp
0910d24d096ab9787b84b2f64c5a5f387103d06d,SERVER-25266 Enhance NetworkASIO to send the client metadata document,src/mongo/s/sharding_egress_metadata_hook.cpp,+,"ClientMetadataIsMasterState::writeToMetadata(txn, metadataBob);",76,download/mongodb_mongo1031.cpp
d3155cd6a555f30ac5c5641a6b1006d996692345,SERVER-24613 Add Client Metadata Documents' AppName to slow operation logs,src/mongo/db/instance.cpp,+,"log() << debug.report(&c, currentOp, lockerInfo.stats);",698,download/mongodb_mongo1032.cpp
d3155cd6a555f30ac5c5641a6b1006d996692345,SERVER-24613 Add Client Metadata Documents' AppName to slow operation logs,src/mongo/db/ops/write_ops_exec.cpp,+,"log() << curOp->debug().report(txn->getClient(), *curOp, lockerInfo.stats);",115,download/mongodb_mongo1033.cpp
ad27c92e01758c96e7ace4cba13574e0d97a761d,SERVER-24611 Implement ClientMetadata class,src/mongo/client/connection_pool.cpp,+,"uassertStatusOK(conn->connect(target, StringData()));",187,download/mongodb_mongo1034.cpp
ad27c92e01758c96e7ace4cba13574e0d97a761d,SERVER-24611 Implement ClientMetadata class,src/mongo/db/repl/replication_info.cpp,+,swParseClientMetadata.getValue().get().logClientMetadata(txn->getClient());,273,download/mongodb_mongo1035.cpp
ad27c92e01758c96e7ace4cba13574e0d97a761d,SERVER-24611 Implement ClientMetadata class,src/mongo/db/repl/rollback_source_impl.cpp,+,"uassert(15908,",75,download/mongodb_mongo1036.cpp
ad27c92e01758c96e7ace4cba13574e0d97a761d,SERVER-24611 Implement ClientMetadata class,src/mongo/rpc/metadata/client_metadata.cpp,+,void ClientMetadata::logClientMetadata(Client* client) const {,394,download/mongodb_mongo1037.cpp
ad27c92e01758c96e7ace4cba13574e0d97a761d,SERVER-24611 Implement ClientMetadata class,src/mongo/rpc/metadata/client_metadata.cpp,+,"log() << ""received client metadata from "" << client->getRemote().toString() << "" """,396,download/mongodb_mongo1037.cpp
ad27c92e01758c96e7ace4cba13574e0d97a761d,SERVER-24611 Implement ClientMetadata class,src/mongo/s/commands/cluster_is_master_cmd.cpp,+,swParseClientMetadata.getValue().get().logClientMetadata(txn->getClient());,99,download/mongodb_mongo1038.cpp
ad27c92e01758c96e7ace4cba13574e0d97a761d,SERVER-24611 Implement ClientMetadata class,src/mongo/tools/sniffer.cpp,+,"uassertStatusOK(conn->connect(mongo::HostAndPort{forwardAddress}, ""mongosniff""));",407,download/mongodb_mongo1039.cpp
931a227eedca19bc05fc6318996ffd3c6a2c6f4b,SERVER-21378 add setParameter startupAuthSchemaValidation used to bypass auth metadata startup validation checks,src/mongo/db/db.cpp,+,log() << status.reason();,656,download/mongodb_mongo1040.cpp
931a227eedca19bc05fc6318996ffd3c6a2c6f4b,SERVER-21378 add setParameter startupAuthSchemaValidation used to bypass auth metadata startup validation checks,src/mongo/db/db.cpp,+,"log() << ""Auth schema version is incompatible: """,687,download/mongodb_mongo1040.cpp
931a227eedca19bc05fc6318996ffd3c6a2c6f4b,SERVER-21378 add setParameter startupAuthSchemaValidation used to bypass auth metadata startup validation checks,src/mongo/db/db.cpp,+,"log() << ""Auth schema version is incompatible: """,695,download/mongodb_mongo1040.cpp
931a227eedca19bc05fc6318996ffd3c6a2c6f4b,SERVER-21378 add setParameter startupAuthSchemaValidation used to bypass auth metadata startup validation checks,src/mongo/db/db.cpp,+,"error() << ""Auth must be disabled when starting without auth schema validation"";",704,download/mongodb_mongo1040.cpp
931a227eedca19bc05fc6318996ffd3c6a2c6f4b,SERVER-21378 add setParameter startupAuthSchemaValidation used to bypass auth metadata startup validation checks,src/mongo/db/db.cpp,+,log() << startupWarningsLog;,709,download/mongodb_mongo1040.cpp
931a227eedca19bc05fc6318996ffd3c6a2c6f4b,SERVER-21378 add setParameter startupAuthSchemaValidation used to bypass auth metadata startup validation checks,src/mongo/db/db.cpp,+,"log() << ""** WARNING: Startup auth schema validation checks are disabled for the """,710,download/mongodb_mongo1040.cpp
931a227eedca19bc05fc6318996ffd3c6a2c6f4b,SERVER-21378 add setParameter startupAuthSchemaValidation used to bypass auth metadata startup validation checks,src/mongo/db/db.cpp,+,"log() << ""**          This mode should only be used to manually repair corrupted auth """,713,download/mongodb_mongo1040.cpp
b8c9312f13de0d05232bfb68966f5da4ce27328d,SERVER-25232: Avoid table scans on startup with queryableBackupMode WT,src/mongo/db/storage/wiredtiger/wiredtiger_kv_engine.cpp,+,"log() << ""Repairing size cache"";",279,download/mongodb_mongo1041.cpp
b8c9312f13de0d05232bfb68966f5da4ce27328d,SERVER-25232: Avoid table scans on startup with queryableBackupMode WT,src/mongo/db/storage/wiredtiger/wiredtiger_kv_engine.cpp,+,"fassertNoTrace(28577, _salvageIfNeeded(_sizeStorerUri.c_str()));",280,download/mongodb_mongo1041.cpp
58f8401f1f79dc9ec33b9fdbb3eeb21d9f508245,"SERVER-25417 harden checks around using --shardSvr, --overrideShardIdentity, and queryableBackupMode",src/mongo/db/db.cpp,+,uassertStatusOK(ShardingState::get(startupOpCtx.get()),714,download/mongodb_mongo1042.cpp
8e56e445cb9faee8a46af8866bf6d859b7ca8f2f,SERVER-24768 Add view cycle and depth checking,src/mongo/db/views/view_catalog.cpp,+,"uassert(40255,",128,download/mongodb_mongo1043.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/db/catalog/cursor_manager.cpp,+,audit::logKillCursorsAuthzCheck(,521,download/mongodb_mongo1044.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/db/catalog/cursor_manager.cpp,+,audit::logKillCursorsAuthzCheck(,534,download/mongodb_mongo1044.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/db/catalog/cursor_manager.cpp,+,"audit::logKillCursorsAuthzCheck(txn->getClient(), _nss, id, ErrorCodes::OK);",544,download/mongodb_mongo1044.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/db/pipeline/document_source_graph_lookup.cpp,+,"auto pipeline = uassertStatusOK(_mongod->makePipeline({*matchStage}, _fromExpCtx));",179,download/mongodb_mongo1045.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/db/pipeline/document_source_lookup.cpp,+,"auto pipeline = uassertStatusOK(_mongod->makePipeline({matchStage}, _fromExpCtx));",117,download/mongodb_mongo1046.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/db/pipeline/document_source_lookup.cpp,+,"_pipeline = uassertStatusOK(_mongod->makePipeline({matchStage}, _fromExpCtx));",365,download/mongodb_mongo1046.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/db/pipeline/pipeline_d.cpp,+,"dassert(expCtx->opCtx->lockState()->isCollectionLockedForMode(expCtx->ns.ns(), MODE_IS));",316,download/mongodb_mongo1047.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/db/pipeline/pipeline_d.cpp,+,"auto exec = uassertStatusOK(prepareExecutor(expCtx->opCtx,",400,download/mongodb_mongo1047.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/dbtests/documentsourcetests.cpp,+,auto exec = uassertStatusOK(,106,download/mongodb_mongo1048.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/dbtests/query_plan_executor.cpp,+,"auto pipeline = assertGet(Pipeline::create({cursorSource}, expCtx));",303,download/mongodb_mongo1049.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/dbtests/query_plan_executor.cpp,+,"ASSERT_THROWS_CODE(pipeline->output()->getNext(), UserException, 16028);",328,download/mongodb_mongo1049.cpp
5149b0f8a55085808cc6e34dcba491f2278ec3cf,"SERVER-25005 Use Pipeline to execute $lookup and $graphLookup.

Replaces the usages of DBDirectClient::query() in DocumentSourceLookUp
and DocumentSourceGraphLookUp to instead parse and execute a Pipeline.

Simplifies the registration process of the ""inner"" plan execution in an
aggregation pipeline. The DocumentSourceCursor class now owns its
PlanExecutor and the PipelineProxyStage class no longer has a
std::weak_ptr to it. The ""inner"" plan executor is registered with the
CursorManager of the underlying Collection and will receive invalidation
notifications if a catalog operation occurs.",src/mongo/dbtests/query_plan_executor.cpp,+,"ASSERT_EQUALS(PlanExecutor::DEAD, outerExec->getNext(&objOut, nullptr));",333,download/mongodb_mongo1049.cpp
604b2e18bd8b7c0affb601f53ed4b57d18d72947,"SERVER-25202 Expose lock/unlock control on DistLockManager

This change exposes the lock/unlock methods as public on the
DistLockManager. This enables the scenario of being able to pass locks
between threads, which is necessary for the parallel balancer.

Also makes the sharding balancer acquire the balancer distributed lock
permanently.",src/mongo/s/balancer/balancer.cpp,+,shardingContext->catalogClient(txn.get())->getDistLockManager()->lockWithSessionID(,337,download/mongodb_mongo1050.cpp
52113a58ea6148cad16257fe17a4da6476ff0a27,"SERVER-24067 TaskExecutor RemoteCommandCallbackArgs should include elapsedMS and metadata

lint fix",src/mongo/executor/network_interface_asio_operation.cpp,+,"LOG(2) << ""Request "" << _request.id << "" finished with response: """,225,download/mongodb_mongo1051.cpp
05e1c33649e08ec3736121254da7b29a73934788,SERVER-24067 TaskExecutor RemoteCommandCallbackArgs should include elapsedMS and metadata,src/mongo/client/authenticate.cpp,+,uassertStatusOK(response.status);,309,download/mongodb_mongo1052.cpp
05e1c33649e08ec3736121254da7b29a73934788,SERVER-24067 TaskExecutor RemoteCommandCallbackArgs should include elapsedMS and metadata,src/mongo/client/remote_command_runner_impl.cpp,+,if (!cursor.peekError(&error)) {,75,download/mongodb_mongo1053.cpp
05e1c33649e08ec3736121254da7b29a73934788,SERVER-24067 TaskExecutor RemoteCommandCallbackArgs should include elapsedMS and metadata,src/mongo/executor/network_interface_asio_command.cpp,+,ErrorCodes::Error errorCode = (ec.category() == mongoErrorCategory()),278,download/mongodb_mongo1054.cpp
05e1c33649e08ec3736121254da7b29a73934788,SERVER-24067 TaskExecutor RemoteCommandCallbackArgs should include elapsedMS and metadata,src/mongo/executor/network_interface_asio_command.cpp,+,"log() << ""Failed to connect to "" << op->request().target << "" - "" << resp.status;",300,download/mongodb_mongo1054.cpp
05e1c33649e08ec3736121254da7b29a73934788,SERVER-24067 TaskExecutor RemoteCommandCallbackArgs should include elapsedMS and metadata,src/mongo/executor/network_interface_asio_operation.cpp,+,"LOG(2) << ""Request "" << _request.id",227,download/mongodb_mongo1055.cpp
05e1c33649e08ec3736121254da7b29a73934788,SERVER-24067 TaskExecutor RemoteCommandCallbackArgs should include elapsedMS and metadata,src/mongo/executor/network_interface_mock.cpp,+,RemoteCommandRequest NetworkInterfaceMock::scheduleErrorResponse(const ResponseStatus response) {,333,download/mongodb_mongo1056.cpp
05e1c33649e08ec3736121254da7b29a73934788,SERVER-24067 TaskExecutor RemoteCommandCallbackArgs should include elapsedMS and metadata,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"LOG(0) << ""Operation for addShard timed out with status "" << swResponse.status;",288,download/mongodb_mongo1057.cpp
05e1c33649e08ec3736121254da7b29a73934788,SERVER-24067 TaskExecutor RemoteCommandCallbackArgs should include elapsedMS and metadata,src/mongo/s/client/shard_remote.cpp,+,"LOG(0) << ""Operation timed out with status "" << redact(swResponse.status);",213,download/mongodb_mongo1058.cpp
30a6aeb8ec685903818051866095f773c53a842a,SERVER-24768 Add view cycle and depth checking,src/mongo/db/views/view_catalog.cpp,+,"uassert(40255,",128,download/mongodb_mongo1059.cpp
2aa2d206290296b358d96f7e0ee44ac7363c506e,SERVER-24573 Implement CollectionRangeDeleter range deletion logic,src/mongo/db/s/collection_range_deleter.cpp,+,"const WriteConcernOptions kMajorityWriteConcern(WriteConcernOptions::kMajority,",68,download/mongodb_mongo1060.cpp
2aa2d206290296b358d96f7e0ee44ac7363c506e,SERVER-24573 Implement CollectionRangeDeleter range deletion logic,src/mongo/db/s/collection_range_deleter.cpp,+,"Status status = waitForWriteConcern(txn, currentClientOpTime, kMajorityWriteConcern, &wcResult);",131,download/mongodb_mongo1060.cpp
2aa2d206290296b358d96f7e0ee44ac7363c506e,SERVER-24573 Implement CollectionRangeDeleter range deletion logic,src/mongo/db/s/collection_range_deleter.cpp,+,"collection->getIndexCatalog()->findShardKeyPrefixedIndex(txn, keyPattern, false);",149,download/mongodb_mongo1060.cpp
2aa2d206290296b358d96f7e0ee44ac7363c506e,SERVER-24573 Implement CollectionRangeDeleter range deletion logic,src/mongo/db/s/collection_range_deleter.cpp,+,"LOG(1) << ""begin removal of "" << min << "" to "" << max << "" in "" << _nss;",164,download/mongodb_mongo1060.cpp
2aa2d206290296b358d96f7e0ee44ac7363c506e,SERVER-24573 Implement CollectionRangeDeleter range deletion logic,src/mongo/db/s/collection_range_deleter.cpp,+,"IndexDescriptor* desc = collection->getIndexCatalog()->findIndexByName(txn, indexName);",167,download/mongodb_mongo1060.cpp
2aa2d206290296b358d96f7e0ee44ac7363c506e,SERVER-24573 Implement CollectionRangeDeleter range deletion logic,src/mongo/db/s/collection_range_deleter.cpp,+,if (!repl::getGlobalReplicationCoordinator()->canAcceptWritesFor(nss)) {,208,download/mongodb_mongo1060.cpp
81185a50aeed5b2beed2c0a81b381a482489fdb7,SERVER-10727 Clean TTL log lines and comments,src/mongo/db/ttl.cpp,+,"LOG(3) << ""thread awake"";",92,download/mongodb_mongo1061.cpp
81185a50aeed5b2beed2c0a81b381a482489fdb7,SERVER-10727 Clean TTL log lines and comments,src/mongo/db/ttl.cpp,+,"LOG(1) << ""disabled"";",95,download/mongodb_mongo1061.cpp
81185a50aeed5b2beed2c0a81b381a482489fdb7,SERVER-10727 Clean TTL log lines and comments,src/mongo/db/ttl.cpp,+,"LOG(3) << ""locked for writing"";",104,download/mongodb_mongo1061.cpp
81185a50aeed5b2beed2c0a81b381a482489fdb7,SERVER-10727 Clean TTL log lines and comments,src/mongo/db/ttl.cpp,+,"LOG(1) << ""got WriteConflictException"";",111,download/mongodb_mongo1061.cpp
81185a50aeed5b2beed2c0a81b381a482489fdb7,SERVER-10727 Clean TTL log lines and comments,src/mongo/db/ttl.cpp,+,"LOG(1) << ""ns: "" << collectionNSS << "" key: "" << key << "" name: "" << name;",182,download/mongodb_mongo1061.cpp
81185a50aeed5b2beed2c0a81b381a482489fdb7,SERVER-10727 Clean TTL log lines and comments,src/mongo/db/ttl.cpp,+,"LOG(1) << ""deleted: "" << numDeleted;",267,download/mongodb_mongo1061.cpp
0e6a5b73352027a659b8ce4c58da61d859c1117f,SERVER-25380 StorageInterfaceImpl should use provided OperationContext in isAdminDbValid(),src/mongo/db/repl/databases_cloner.cpp,+,"LOG(1) << ""Validation failed on 'admin' db due to "" << adminStatus;",318,download/mongodb_mongo1062.cpp
4caf167d193b3b6b4a4cf584f1d903de631a13ef,SERVER-24239 Add support to collMod command for index names.,src/mongo/db/catalog/coll_mod.cpp,+,"idx = coll->getIndexCatalog()->findIndexByName(txn, indexName);",170,download/mongodb_mongo1063.cpp
4caf167d193b3b6b4a4cf584f1d903de631a13ef,SERVER-24239 Add support to collMod command for index names.,src/mongo/db/catalog/coll_mod.cpp,+,"coll->getIndexCatalog()->findIndexesByKeyPattern(txn, keyPattern, false, &indexes);",180,download/mongodb_mongo1063.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/catalog/capped_utils.cpp,+,"uassert(ErrorCodes::CommandNotSupportedOnView,",72,download/mongodb_mongo1064.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/catalog/capped_utils.cpp,+,"collection || !db->getViewCatalog()->lookup(txn, collectionName.ns()));",74,download/mongodb_mongo1064.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/catalog/capped_utils.cpp,+,"if (db->getViewCatalog()->lookup(txn, fromNs)) {",105,download/mongodb_mongo1064.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/catalog/rename_collection.cpp,+,"if (sourceDB && sourceDB->getViewCatalog()->lookup(txn, source.ns()))",89,download/mongodb_mongo1065.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/catalog/rename_collection.cpp,+,"} else if (targetDB->getViewCatalog()->lookup(txn, target.ns())) {",147,download/mongodb_mongo1065.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/commands/test_commands.cpp,+,"if (ctx.db()->getViewCatalog()->lookup(txn, fullNs.ns())) {",240,download/mongodb_mongo1066.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/repl/oplog.cpp,+,"uassert(ErrorCodes::CommandNotSupportedOnView,",696,download/mongodb_mongo1067.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/repl/oplog.cpp,+,"collection || !db->getViewCatalog()->lookup(txn, ns));",698,download/mongodb_mongo1067.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/repl/oplog.cpp,+,"if (db && db->getViewCatalog()->lookup(txn, nss.ns())) {",979,download/mongodb_mongo1067.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/repl/oplog.cpp,+,"error() << ""Failed command "" << o << "" on "" << nss.db() << "" with status """,1030,download/mongodb_mongo1067.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/repl/oplog.cpp,+,"error() << ""Failed command "" << o << "" on "" << nss.db() << "" with status """,1035,download/mongodb_mongo1067.cpp
d62fb03017e6982825a3c3114de1d963f628716f,SERVER-24823 Add support for remaining admin commands,src/mongo/db/repl/oplog.cpp,+,"getGlobalAuthorizationManager()->logOp(txn, opType, nss.ns().c_str(), o, nullptr);",1046,download/mongodb_mongo1067.cpp
3666300beabc81feda5ce58e733527068c33dc56,SERVER-24654 Add privilege checking for $facet stage.,src/mongo/db/pipeline/pipeline.cpp,+,"uassert(17139,",141,download/mongodb_mongo1068.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/s/version_mongos.cpp,+,setPlainConsoleLogger();,53,download/mongodb_mongo1069.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/s/version_mongos.cpp,+,log() << mongosVersion();,54,download/mongodb_mongo1069.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/s/version_mongos.cpp,+,printBuildInfo();,55,download/mongodb_mongo1069.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/s/version_mongos.cpp,+,log() << mongosVersion();,59,download/mongodb_mongo1069.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/s/version_mongos.cpp,+,printBuildInfo();,60,download/mongodb_mongo1069.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/shell/shell_options.cpp,+,setPlainConsoleLogger();,223,download/mongodb_mongo1070.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/shell/shell_options.cpp,+,log() << mongoShellVersion();,224,download/mongodb_mongo1070.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/shell/shell_options.cpp,+,"log() << getMongoShellHelp(args[0], moe::startupOptions);",226,download/mongodb_mongo1070.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/shell/shell_options.cpp,+,printBuildInfo();,228,download/mongodb_mongo1070.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/util/log.cpp,+,void setPlainConsoleLogger() {,167,download/mongodb_mongo1071.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/util/log.cpp,+,logger::globalLogManager()->getGlobalDomain()->clearAppenders();,168,download/mongodb_mongo1071.cpp
4c8cae0a1eaf70dbb5db6b39926eeda5da0fed3e,"SERVER-22734 unify --version output, thus adding enterprise designations",src/mongo/util/log.cpp,+,logger::globalLogManager()->getGlobalDomain()->attachAppender(,169,download/mongodb_mongo1071.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/catalog/coll_mod.cpp,+,"const ViewDefinition* view = db ? db->getViewCatalog()->lookup(txn, nss.ns()) : nullptr;",59,download/mongodb_mongo1072.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/catalog/database.cpp,+,getViewCatalog()->invalidate();,227,download/mongodb_mongo1073.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/catalog/database.cpp,+,uassertStatusOK(_views.reloadIfNeeded(txn));,228,download/mongodb_mongo1073.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/catalog/database.cpp,+,"if (db->getViewCatalog()->lookup(txn, ns))",656,download/mongodb_mongo1073.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/catalog/drop_collection.cpp,+,"db ? db->getViewCatalog()->lookup(txn, collectionName.ns()) : nullptr;",68,download/mongodb_mongo1074.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/catalog/drop_indexes.cpp,+,"if (db && db->getViewCatalog()->lookup(txn, nss.ns())) {",158,download/mongodb_mongo1075.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/commands/compact.cpp,+,"auto view = collDB ? collDB->getViewCatalog()->lookup(txn, nss.ns()) : nullptr;",152,download/mongodb_mongo1076.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/commands/create_indexes.cpp,+,"if (db && db->getViewCatalog()->lookup(txn, ns.ns())) {",191,download/mongodb_mongo1077.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/commands/drop_indexes.cpp,+,"auto view = ctx.db()->getViewCatalog()->lookup(txn, toReIndexNs.ns());",136,download/mongodb_mongo1078.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/commands/find_and_modify.cpp,+,"if (autoDb.getDb()->getViewCatalog()->lookup(txn, nsString.ns())) {",398,download/mongodb_mongo1079.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/commands/find_and_modify.cpp,+,"if (autoDb.getDb()->getViewCatalog()->lookup(txn, nsString.ns())) {",475,download/mongodb_mongo1079.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/db_raii.cpp,+,"db->getViewCatalog()->lookup(txn, nss.ns()))",59,download/mongodb_mongo1080.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/db_raii.cpp,+,"? _autoColl->getDb()->getViewCatalog()->lookup(txn, nss.ns())",164,download/mongodb_mongo1080.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/query/get_executor.cpp,+,"uassert(12050, ""cannot delete from system namespace"", legalClientSystemNS(nss.ns()));",697,download/mongodb_mongo1081.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/s/set_shard_version_command.cpp,+,"if (autoDb->getDb() && autoDb->getDb()->getViewCatalog()->lookup(txn, nss.ns())) {",190,download/mongodb_mongo1082.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/views/durable_view_catalog.cpp,+,"dassert(txn->lockState()->isDbLockedForMode(name.db(), MODE_IX));",55,download/mongodb_mongo1083.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/views/durable_view_catalog.cpp,+,txn->recoveryUnit()->onCommit([db]() { db->getViewCatalog()->invalidate(); });,59,download/mongodb_mongo1083.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/views/durable_view_catalog.cpp,+,"dassert(txn->lockState()->isDbLockedForMode(_db->name(), MODE_IS) ||",70,download/mongodb_mongo1083.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/views/durable_view_catalog.cpp,+,"LOG(2) << ""insert view "" << view << "" into "" << _db->getSystemViewsName();",126,download/mongodb_mongo1083.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/views/durable_view_catalog.cpp,+,uassertStatusOK(,127,download/mongodb_mongo1083.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/views/durable_view_catalog.cpp,+,"systemViews->insertDocument(txn, view, &CurOp::get(txn)->debug(), enforceQuota));",128,download/mongodb_mongo1083.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/views/durable_view_catalog.cpp,+,"&CurOp::get(txn)->debug(),",142,download/mongodb_mongo1083.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/views/durable_view_catalog.cpp,+,uassertStatusOK(res);,144,download/mongodb_mongo1083.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/views/durable_view_catalog.cpp,+,"systemViews->deleteDocument(txn, id, &CurOp::get(txn)->debug());",155,download/mongodb_mongo1083.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/views/view_catalog.cpp,+,"LOG(1) << ""reloading view catalog for database "" << _durable->getName();",66,download/mongodb_mongo1084.cpp
3f68c01861b33b76965d39ba5bcbd84e2851afe3,SERVER-24767 Replicate views,src/mongo/db/views/view_catalog.cpp,+,uassertStatusOK(_reloadIfNeeded_inlock(txn));,183,download/mongodb_mongo1084.cpp
f88ac8b8d347df73adab8374428eb5926b6885e5,SERVER-25374 CollectionCloner should disable replicated writes on operation context when creating a collection without indexes.,src/mongo/db/repl/collection_cloner.cpp,+,txn->setReplicatedWrites(false);,227,download/mongodb_mongo1085.cpp
af042cfeda17768fa217207069880fbbcb0346ff,SERVER-24242 Lock::ParallelBatchWriterMode sets isBatchWriter while in scope,src/mongo/db/concurrency/d_concurrency.cpp,+,invariant(!_lockState->isBatchWriter());  // Otherwise we couldn't clear in destructor.,190,download/mongodb_mongo1086.cpp
af042cfeda17768fa217207069880fbbcb0346ff,SERVER-24242 Lock::ParallelBatchWriterMode sets isBatchWriter while in scope,src/mongo/db/concurrency/d_concurrency.cpp,+,_lockState->setIsBatchWriter(true);,191,download/mongodb_mongo1086.cpp
af042cfeda17768fa217207069880fbbcb0346ff,SERVER-24242 Lock::ParallelBatchWriterMode sets isBatchWriter while in scope,src/mongo/db/concurrency/d_concurrency.cpp,+,Lock::ParallelBatchWriterMode::~ParallelBatchWriterMode() {,194,download/mongodb_mongo1086.cpp
af042cfeda17768fa217207069880fbbcb0346ff,SERVER-24242 Lock::ParallelBatchWriterMode sets isBatchWriter while in scope,src/mongo/db/concurrency/d_concurrency.cpp,+,_lockState->setIsBatchWriter(false);,195,download/mongodb_mongo1086.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/client/remote_command_targeter_rs.cpp,+,"LOG(1) << ""Started targeter for """,59,download/mongodb_mongo1087.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/client/replica_set_monitor.cpp,+,"log() << ""All nodes for set "" << _set->name << "" are down. """,511,download/mongodb_mongo1088.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/client/replica_set_monitor_manager.cpp,+,"log() << ""Starting new replica set monitor for "" << connStr.toString();",107,download/mongodb_mongo1089.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/s/client/shard_registry.cpp,+,"LOG(1) << ""Shutting down task executor for reloading shard registry"";",91,download/mongodb_mongo1090.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/s/client/shard_registry.cpp,+,"LOG(1) << ""Starting up task executor for periodic reloading of ShardRegistry"";",185,download/mongodb_mongo1090.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/s/client/shard_registry.cpp,+,"LOG(1) << ""Cant schedule Shard Registry reload. """,192,download/mongodb_mongo1090.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/s/client/shard_registry.cpp,+,fassertFailed(40252);,199,download/mongodb_mongo1090.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/s/client/shard_registry.cpp,+,"LOG(1) << ""Reloading shardRegistry"";",204,download/mongodb_mongo1090.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/s/client/shard_registry.cpp,+,"log() << ""Periodic reload of shard registry failed "" << causedBy(e) << ""; will retry after """,216,download/mongodb_mongo1090.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/s/client/shard_registry.cpp,+,"LOG(1) << ""Cant schedule ShardRegistry reload. """,226,download/mongodb_mongo1090.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/s/client/shard_registry.cpp,+,fassertFailed(40253);,233,download/mongodb_mongo1090.cpp
f32f51272b44f895875ab36fc0ae1553d11f1cc2,SERVER-23192 periodically reload ShardRegistry from the catalog,src/mongo/s/client/shard_registry.cpp,+,"log() << ""ShardRegistry::reload: Removing RSM for "" << name;",292,download/mongodb_mongo1090.cpp
2ed489b884676ae93bcf6373b49a2a838979b693,SERVER-25034 remove OplogOutOfOrder block from DataReplicator::_onOplogFetchFinish,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Error fetching oplog during initial sync: "" << status;",1370,download/mongodb_mongo1091.cpp
2ed489b884676ae93bcf6373b49a2a838979b693,SERVER-25034 remove OplogOutOfOrder block from DataReplicator::_onOplogFetchFinish,src/mongo/db/repl/data_replicator.cpp,+,"error() << ""Failed to schedule rollback work: """,1387,download/mongodb_mongo1091.cpp
ed7f95c68256c85c611034e0eb131cd5592338e7,SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,"uassert(ErrorCodes::ConflictingOperationInProgress,",102,download/mongodb_mongo1092.cpp
ed7f95c68256c85c611034e0eb131cd5592338e7,SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary,src/mongo/s/balancer/cluster_statistics_impl.cpp,+,"log() << ""Unable to obtain shard version for "" << shard.getName()",156,download/mongodb_mongo1093.cpp
ed7f95c68256c85c611034e0eb131cd5592338e7,SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary,src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::getExisting(txn, nss));",165,download/mongodb_mongo1094.cpp
ed7f95c68256c85c611034e0eb131cd5592338e7,SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary,src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,uassertStatusOK(MigrationSecondaryThrottleOptions::createFromCommand(cmdObj));,211,download/mongodb_mongo1094.cpp
ed7f95c68256c85c611034e0eb131cd5592338e7,SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary,src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,"uassertStatusOK(configsvr_client::moveChunk(txn,",227,download/mongodb_mongo1094.cpp
8c326de66475125ce755c52d36340b52f86ac64e,"SERVER-25050 Set maxTimeMS on OperationContext on mongos

This change makes mongos commands to retrieve the maxTimeMS from the
command and set it on the OperationContext.",src/mongo/s/client/shard_remote.cpp,+,"LOG(0) << ""Operation timed out "" << causedBy(status);",342,download/mongodb_mongo1095.cpp
8c326de66475125ce755c52d36340b52f86ac64e,"SERVER-25050 Set maxTimeMS on OperationContext on mongos

This change makes mongos commands to retrieve the maxTimeMS from the
command and set it on the OperationContext.",src/mongo/s/commands/strategy.cpp,+,"uassert(ErrorCodes::InvalidOptions,",307,download/mongodb_mongo1096.cpp
8c326de66475125ce755c52d36340b52f86ac64e,"SERVER-25050 Set maxTimeMS on OperationContext on mongos

This change makes mongos commands to retrieve the maxTimeMS from the
command and set it on the OperationContext.",src/mongo/s/commands/strategy.cpp,+,uassertStatusOK(QueryRequest::parseMaxTimeMS(cmdObj[QueryRequest::cmdOptionMaxTimeMS]));,312,download/mongodb_mongo1096.cpp
8c326de66475125ce755c52d36340b52f86ac64e,"SERVER-25050 Set maxTimeMS on OperationContext on mongos

This change makes mongos commands to retrieve the maxTimeMS from the
command and set it on the OperationContext.",src/mongo/s/commands/strategy.cpp,+,"log() << ""Retrying command "" << redact(q.query) << causedBy(e);",334,download/mongodb_mongo1096.cpp
1af99e48949f36754e2b877f1057bdaba0b83aea,"SERVER-25050 Cleanup Strategy and Shard class

No functional changes, just cleanup the Strategy class and rename
runBatchWriteCommand to runBatchWriteCommandOnConfig to better indicate
its intent.",src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,*batchResponse = configShard->runBatchWriteCommandOnConfig(,1320,download/mongodb_mongo1097.cpp
1af99e48949f36754e2b877f1057bdaba0b83aea,"SERVER-25050 Cleanup Strategy and Shard class

No functional changes, just cleanup the Strategy class and rename
runBatchWriteCommand to runBatchWriteCommandOnConfig to better indicate
its intent.",src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"configShard->runBatchWriteCommandOnConfig(txn, request, Shard::RetryPolicy::kNoRetry);",1343,download/mongodb_mongo1097.cpp
1af99e48949f36754e2b877f1057bdaba0b83aea,"SERVER-25050 Cleanup Strategy and Shard class

No functional changes, just cleanup the Strategy class and rename
runBatchWriteCommand to runBatchWriteCommandOnConfig to better indicate
its intent.",src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"configShard->runBatchWriteCommandOnConfig(txn, request, Shard::RetryPolicy::kIdempotent);",1425,download/mongodb_mongo1097.cpp
1af99e48949f36754e2b877f1057bdaba0b83aea,"SERVER-25050 Cleanup Strategy and Shard class

No functional changes, just cleanup the Strategy class and rename
runBatchWriteCommand to runBatchWriteCommandOnConfig to better indicate
its intent.",src/mongo/s/catalog/replset/sharding_catalog_client_impl.cpp,+,"configShard->runBatchWriteCommandOnConfig(txn, request, Shard::RetryPolicy::kIdempotent);",1457,download/mongodb_mongo1097.cpp
1af99e48949f36754e2b877f1057bdaba0b83aea,"SERVER-25050 Cleanup Strategy and Shard class

No functional changes, just cleanup the Strategy class and rename
runBatchWriteCommand to runBatchWriteCommandOnConfig to better indicate
its intent.",src/mongo/s/client/shard.cpp,+,BatchedCommandResponse Shard::runBatchWriteCommandOnConfig(,125,download/mongodb_mongo1098.cpp
bde529a3eb87a984e8bc7b78cad98e13d0e04a6f,SERVER-25344 Fix race condition at MigrationDestinationManager abort,src/mongo/db/s/migration_destination_manager.cpp,+,error() << errmsg << migrateLog;,430,download/mongodb_mongo1099.cpp
bde529a3eb87a984e8bc7b78cad98e13d0e04a6f,SERVER-25344 Fix race condition at MigrationDestinationManager abort,src/mongo/db/s/migration_destination_manager.cpp,+,error() << errmsg << migrateLog;,816,download/mongodb_mongo1099.cpp
2464cdaf2a2c523ea1c116da60c27ad12e580a09,SERVER-24621 make find command min/max respect the collation,src/mongo/db/query/query_planner_test_fixture.cpp,+,"assertGet(QueryRequest::makeFromFindCommand(nss, cmdObj, isExplain)));",368,download/mongodb_mongo1100.cpp
2464cdaf2a2c523ea1c116da60c27ad12e580a09,SERVER-24621 make find command min/max respect the collation,src/mongo/db/query/query_planner_test_fixture.cpp,+,ASSERT_OK(statusWithCQ.getStatus());,372,download/mongodb_mongo1100.cpp
2464cdaf2a2c523ea1c116da60c27ad12e580a09,SERVER-24621 make find command min/max respect the collation,src/mongo/db/query/query_planner_test_fixture.cpp,+,ASSERT_NOT_OK(status);,376,download/mongodb_mongo1100.cpp
0d45c4825ae6a4241c9741cdf95e26863c380255,SERVER-25167 Increase logging on connection failure in NetworkInterfaceASIO.,src/mongo/executor/async_stream_common.cpp,+,"log() << ""failed to close stream: "" << ec.message();",42,download/mongodb_mongo1101.cpp
0d45c4825ae6a4241c9741cdf95e26863c380255,SERVER-25167 Increase logging on connection failure in NetworkInterfaceASIO.,src/mongo/executor/network_interface_asio_command.cpp,+,"log() << ""Failed to connect to "" << op->request().target << "" - "" << resp.getStatus();",292,download/mongodb_mongo1102.cpp
0d45c4825ae6a4241c9741cdf95e26863c380255,SERVER-25167 Increase logging on connection failure in NetworkInterfaceASIO.,src/mongo/executor/network_interface_asio_command.cpp,+,"log() << ""Failed asio heartbeat to "" << op->request().target << "" - """,304,download/mongodb_mongo1102.cpp
0d45c4825ae6a4241c9741cdf95e26863c380255,SERVER-25167 Increase logging on connection failure in NetworkInterfaceASIO.,src/mongo/executor/network_interface_asio_connect.cpp,+,"log() << ""Connecting to "" << op->request().target.toString();",79,download/mongodb_mongo1103.cpp
9380a1c12a19a061eaafabb5f6b9e87f16a28179,SERVER-17856: Allow mongod users to currentOp and killOp own operations,src/mongo/db/commands/kill_op.cpp,+,"uassertStatusOK(bsonExtractIntegerField(cmdObj, ""op"", &op));",68,download/mongodb_mongo1104.cpp
9380a1c12a19a061eaafabb5f6b9e87f16a28179,SERVER-17856: Allow mongod users to currentOp and killOp own operations,src/mongo/db/commands/kill_op.cpp,+,"uassert(26823,",76,download/mongodb_mongo1104.cpp
9380a1c12a19a061eaafabb5f6b9e87f16a28179,SERVER-17856: Allow mongod users to currentOp and killOp own operations,src/mongo/db/commands/kill_op.cpp,+,"log() << ""going to kill op: "" << opId;",140,download/mongodb_mongo1104.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/db/commands/count_cmd.cpp,+,if (ResolvedView::isResolvedViewErrorResponse(aggResult.asTempObj())) {,179,download/mongodb_mongo1105.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/db/commands/distinct.cpp,+,if (ResolvedView::isResolvedViewErrorResponse(aggResult.asTempObj())) {,184,download/mongodb_mongo1106.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/db/s/set_shard_version_command.cpp,+,if (autoDb->getDb() && autoDb->getDb()->getViewCatalog()->lookup(nss.ns())) {,193,download/mongodb_mongo1107.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/db/views/resolved_view.cpp,+,bool ResolvedView::isResolvedViewErrorResponse(BSONObj commandResponseObj) {,39,download/mongodb_mongo1108.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/db/views/resolved_view.cpp,+,"uassert(40248,",45,download/mongodb_mongo1108.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/db/views/resolved_view.cpp,+,"uassert(40249, ""resolvedView must be an object"", !viewDef.isEmpty());",50,download/mongodb_mongo1108.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/db/views/resolved_view.cpp,+,"uassert(40250,",52,download/mongodb_mongo1108.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/db/views/resolved_view.cpp,+,"uassert(40251,",56,download/mongodb_mongo1108.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/db/views/view_sharding_check.cpp,+,"auto resolvedView = db->getViewCatalog()->resolveView(opCtx, view->name());",58,download/mongodb_mongo1109.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/db/views/view_sharding_check.cpp,+,->canAcceptWritesForDatabase(db->name());,66,download/mongodb_mongo1109.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/db/views/view_sharding_check.cpp,+,"dassert(opCtx->lockState()->isDbLockedForMode(nss.db(), MODE_IS));",92,download/mongodb_mongo1109.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/s/commands/cluster_count_cmd.cpp,+,ResolvedView::isResolvedViewErrorResponse(countResult[0].result)) {,164,download/mongodb_mongo1110.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/s/commands/cluster_count_cmd.cpp,+,ResolvedView::isResolvedViewErrorResponse(shardResults[0].result)) {,266,download/mongodb_mongo1110.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/s/commands/cluster_pipeline_cmd.cpp,+,if (ResolvedView::isResolvedViewErrorResponse(responseObj)) {,460,download/mongodb_mongo1111.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/s/commands/commands_public.cpp,+,if (ResolvedView::isResolvedViewErrorResponse(resultObj)) {,1138,download/mongodb_mongo1112.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/s/commands/commands_public.cpp,+,ResolvedView::isResolvedViewErrorResponse(shardResults[0].result)) {,1256,download/mongodb_mongo1112.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/s/commands/strategy.cpp,+,"uasserted(40247, ""OP_QUERY not supported on views"");",207,download/mongodb_mongo1113.cpp
dc7f50c520c5129709008568241274cb6d5ec231,SERVER-24762 Support for views on sharded collections,src/mongo/s/commands/strategy.cpp,+,ResolvedView::isResolvedViewErrorResponse(shardResults[0].result)) {,547,download/mongodb_mongo1113.cpp
f7662220e89874e8ed5ae65e4f77206e367c8037,SERVER-25298 make ConfigServerTestFixture use a real OpObserver,src/mongo/s/config_server_test_fixture.cpp,+,repl::setOplogCollectionName();,132,download/mongodb_mongo1114.cpp
f7662220e89874e8ed5ae65e4f77206e367c8037,SERVER-25298 make ConfigServerTestFixture use a real OpObserver,src/mongo/s/config_server_test_fixture.cpp,+,repl::createOplog(_opCtx.get());,133,download/mongodb_mongo1114.cpp
c4fc9c165026a710809df7751f00c342b5eb27f6,SERVER-24785 backup_restore.js fails when observing FTDC interim files,src/mongo/shell/shell_utils_launcher.cpp,+,"log() << ""Skipping copying of file from '"" << p.generic_string() << ""' to '""",803,download/mongodb_mongo1115.cpp
60abb81a8ad3c30cf83d028e443044774a17fa84,SERVER-25325 added logging to ReplicationCoordinatorExternalStateImpl::shutdown(),src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Starting replication applier thread"";",184,download/mongodb_mongo1116.cpp
60abb81a8ad3c30cf83d028e443044774a17fa84,SERVER-25325 added logging to ReplicationCoordinatorExternalStateImpl::shutdown(),src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Starting replication snapshot thread"";",201,download/mongodb_mongo1116.cpp
60abb81a8ad3c30cf83d028e443044774a17fa84,SERVER-25325 added logging to ReplicationCoordinatorExternalStateImpl::shutdown(),src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Starting replication storage threads"";",205,download/mongodb_mongo1116.cpp
60abb81a8ad3c30cf83d028e443044774a17fa84,SERVER-25325 added logging to ReplicationCoordinatorExternalStateImpl::shutdown(),src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Stopping replication reporter thread"";",227,download/mongodb_mongo1116.cpp
60abb81a8ad3c30cf83d028e443044774a17fa84,SERVER-25325 added logging to ReplicationCoordinatorExternalStateImpl::shutdown(),src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Stopping replication applier thread"";",232,download/mongodb_mongo1116.cpp
60abb81a8ad3c30cf83d028e443044774a17fa84,SERVER-25325 added logging to ReplicationCoordinatorExternalStateImpl::shutdown(),src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Stopping replication fetcher thread"";",239,download/mongodb_mongo1116.cpp
60abb81a8ad3c30cf83d028e443044774a17fa84,SERVER-25325 added logging to ReplicationCoordinatorExternalStateImpl::shutdown(),src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Stopping replication snapshot thread"";",245,download/mongodb_mongo1116.cpp
60abb81a8ad3c30cf83d028e443044774a17fa84,SERVER-25325 added logging to ReplicationCoordinatorExternalStateImpl::shutdown(),src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,"log() << ""Stopping replication storage threads"";",249,download/mongodb_mongo1116.cpp
dd60225291815c763d9f6a6b9eea077822bb4458,"SERVER-23313 add replaceRoot aggregation stage

replaceRoot promotes a subdocument to the top level",src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uassert(40232,",68,download/mongodb_mongo1117.cpp
dd60225291815c763d9f6a6b9eea077822bb4458,"SERVER-23313 add replaceRoot aggregation stage

replaceRoot promotes a subdocument to the top level",src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uassert(40228,",76,download/mongodb_mongo1117.cpp
dd60225291815c763d9f6a6b9eea077822bb4458,"SERVER-23313 add replaceRoot aggregation stage

replaceRoot promotes a subdocument to the top level",src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uassert(40229,",121,download/mongodb_mongo1117.cpp
dd60225291815c763d9f6a6b9eea077822bb4458,"SERVER-23313 add replaceRoot aggregation stage

replaceRoot promotes a subdocument to the top level",src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uasserted(40230,",134,download/mongodb_mongo1117.cpp
dd60225291815c763d9f6a6b9eea077822bb4458,"SERVER-23313 add replaceRoot aggregation stage

replaceRoot promotes a subdocument to the top level",src/mongo/db/pipeline/document_source_replace_root.cpp,+,"uassert(40231, ""no newRoot specified for the $replaceRoot stage"", expr);",141,download/mongodb_mongo1117.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/auth/auth_index_d.cpp,+,"fassert(ErrorCodes::AmbiguousIndexKeyPattern, indexes.size() == 1);",107,download/mongodb_mongo1118.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/catalog/coll_mod.cpp,+,"coll->getIndexCatalog()->findIndexesByKeyPattern(txn, keyPattern, false, &indexes);",124,download/mongodb_mongo1119.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/catalog/drop_indexes.cpp,+,collection->getIndexCatalog()->findIndexesByKeyPattern(,109,download/mongodb_mongo1120.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/catalog/index_catalog.cpp,+,"LOG(2) << ""index already exists with diff name "" << name << "" pattern: "" << key",713,download/mongodb_mongo1121.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/dbhelpers.cpp,+,"collection->getIndexCatalog()->findShardKeyPrefixedIndex(txn,",331,download/mongodb_mongo1122.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/dbhelpers.cpp,+,"IndexDescriptor* desc = collection->getIndexCatalog()->findIndexByName(txn, indexName);",363,download/mongodb_mongo1122.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/exec/stagedebug_cmd.cpp,+,collection->getIndexCatalog()->findIndexesByKeyPattern(,285,download/mongodb_mongo1123.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/exec/stagedebug_cmd.cpp,+,"uassert(16890,",287,download/mongodb_mongo1123.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/exec/stagedebug_cmd.cpp,+,"uassert(ErrorCodes::AmbiguousIndexKeyPattern,",290,download/mongodb_mongo1123.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/exec/stagedebug_cmd.cpp,+,"desc = collection->getIndexCatalog()->findIndexByName(txn, name);",301,download/mongodb_mongo1123.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/exec/stagedebug_cmd.cpp,+,"uassert(40223, str::stream() << ""Can't find index: "" << name.toString(), desc);",302,download/mongodb_mongo1123.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/query/query_planner.cpp,+,"LOG(5) << ""Index "" << i << "": "" << ie.name << endl;",397,download/mongodb_mongo1124.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/query/stage_builder.cpp,+,"params.descriptor = collection->getIndexCatalog()->findIndexByName(txn, ixn->index.name);",94,download/mongodb_mongo1125.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/query/stage_builder.cpp,+,"collection->getIndexCatalog()->findIndexByName(txn, node->index.name);",225,download/mongodb_mongo1125.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/query/stage_builder.cpp,+,"collection->getIndexCatalog()->findIndexByName(txn, node->index.name);",242,download/mongodb_mongo1125.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/query/stage_builder.cpp,+,"collection->getIndexCatalog()->findIndexByName(txn, node->index.name);",249,download/mongodb_mongo1125.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/query/stage_builder.cpp,+,"params.descriptor = collection->getIndexCatalog()->findIndexByName(txn, dn->index.name);",293,download/mongodb_mongo1125.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/query/stage_builder.cpp,+,"params.descriptor = collection->getIndexCatalog()->findIndexByName(txn, csn->index.name);",309,download/mongodb_mongo1125.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/ttl.cpp,+,"LOG(1) << ""TTL -- ns: "" << collectionNSS << "" key: "" << key << "" name: "" << name;",191,download/mongodb_mongo1126.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/db/ttl.cpp,+,"IndexDescriptor* desc = collection->getIndexCatalog()->findIndexByName(txn, name);",206,download/mongodb_mongo1126.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_plan_executor.cpp,+,"collection->getIndexCatalog()->findIndexesByKeyPattern(&_txn, obj, false, &indexes);",200,download/mongodb_mongo1127.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_plan_executor.cpp,+,"ASSERT_LTE(indexes.size(), 1U);",201,download/mongodb_mongo1127.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_and.cpp,+,"coll->getIndexCatalog()->findIndexesByKeyPattern(&_txn, obj, false, &indexes);",77,download/mongodb_mongo1128.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_count.cpp,+,"ASSERT_EQ(indexes.size(), 1U);",208,download/mongodb_mongo1129.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_count_scan.cpp,+,"collection->getIndexCatalog()->findIndexesByKeyPattern(&_txn, obj, false, &indexes);",96,download/mongodb_mongo1130.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_distinct.cpp,+,"coll->getIndexCatalog()->findIndexesByKeyPattern(&_txn, BSON(""a"" << 1), false, &indexes);",130,download/mongodb_mongo1131.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_distinct.cpp,+,"ASSERT_EQ(indexes.size(), 1U);",131,download/mongodb_mongo1131.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_distinct.cpp,+,"coll->getIndexCatalog()->findIndexesByKeyPattern(&_txn, BSON(""a"" << 1), false, &indexes);",197,download/mongodb_mongo1131.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_EQ(indexes.size(), 1U);",99,download/mongodb_mongo1132.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_ixscan.cpp,+,"ASSERT_EQ(indexes.size(), 1U);",123,download/mongodb_mongo1132.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_merge_sort.cpp,+,"coll->getIndexCatalog()->findIndexesByKeyPattern(&_txn, obj, false, &indexes);",73,download/mongodb_mongo1133.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_multiplan.cpp,+,"coll->getIndexCatalog()->findIndexesByKeyPattern(&_txn, BSON(""foo"" << 1), false, &indexes);",142,download/mongodb_mongo1134.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_multiplan.cpp,+,"ASSERT_EQ(indexes.size(), 1U);",143,download/mongodb_mongo1134.cpp
13448cde4947adb5c935bb034187480365cf692f,SERVER-24239 Allow creation of indexes with the same key pattern.,src/mongo/dbtests/query_stage_tests.cpp,+,"collection->getIndexCatalog()->findIndexesByKeyPattern(&_txn, obj, false, &indexes);",122,download/mongodb_mongo1135.cpp
08de471f2a3c61a6e1f1f88f389ac108ec2cc963,SERVER-20239 built-in sampling heap profiler,src/mongo/util/heap_profiler.cpp,+,"static_assert(sizeof(frames) == sizeof(FrameInfo) * kMaxFramesPerStack,",312,download/mongodb_mongo1136.cpp
08de471f2a3c61a6e1f1f88f389ac108ec2cc963,SERVER-20239 built-in sampling heap profiler,src/mongo/util/heap_profiler.cpp,+,log() << msg;,378,download/mongodb_mongo1136.cpp
08de471f2a3c61a6e1f1f88f389ac108ec2cc963,SERVER-20239 built-in sampling heap profiler,src/mongo/util/heap_profiler.cpp,+,"log() << ""heapProfile stack"" << stackInfo.stackNum << "": "" << stackInfo.stackObj;",502,download/mongodb_mongo1136.cpp
08de471f2a3c61a6e1f1f88f389ac108ec2cc963,SERVER-20239 built-in sampling heap profiler,src/mongo/util/heap_profiler.cpp,+,"log() << ""sampleIntervalBytes "" << sampleIntervalBytesParameter << ""; """,528,download/mongodb_mongo1136.cpp
08de471f2a3c61a6e1f1f88f389ac108ec2cc963,SERVER-20239 built-in sampling heap profiler,src/mongo/util/heap_profiler.cpp,+,"log() << ""clearing importantStacks"";",590,download/mongodb_mongo1136.cpp
f0c7b01ab26b6ac7ba555070819aaa0f5a7ddee0,SERVER-25105 add OpObserver for deletes to config.shards to cancel corresponding upsertShardIdentityForAddShard task,src/mongo/db/s/collection_sharding_state.cpp,+,"RemoveShardLogOpHandler(OperationContext* txn, ShardId shardId)",112,download/mongodb_mongo1137.cpp
f0c7b01ab26b6ac7ba555070819aaa0f5a7ddee0,SERVER-25105 add OpObserver for deletes to config.shards to cancel corresponding upsertShardIdentityForAddShard task,src/mongo/db/s/collection_sharding_state.cpp,+,Grid::get(_txn)->catalogManager()->cancelAddShardTaskIfNeeded(_shardId);,119,download/mongodb_mongo1137.cpp
f0c7b01ab26b6ac7ba555070819aaa0f5a7ddee0,SERVER-25105 add OpObserver for deletes to config.shards to cancel corresponding upsertShardIdentityForAddShard task,src/mongo/db/s/collection_sharding_state.cpp,+,"new RemoveShardLogOpHandler(txn, ShardId(std::move(shardIdStr))));",281,download/mongodb_mongo1137.cpp
e3068c25d388166433fe2120d835375e7c9f76ad,SERVER-24352 configs initialize sharding awareness on sharding-unaware shards on transition to primary,src/mongo/db/repl/replication_coordinator_external_state_impl.cpp,+,Grid::get(txn)->catalogManager()->initializeShardingAwarenessOnUnawareShards(txn);,529,download/mongodb_mongo1138.cpp
e3068c25d388166433fe2120d835375e7c9f76ad,SERVER-24352 configs initialize sharding awareness on sharding-unaware shards on transition to primary,src/mongo/s/catalog/replset/sharding_catalog_manager_impl.cpp,+,"fassert(40219, swHandle.getStatus());",1406,download/mongodb_mongo1139.cpp
a6fcab0cf4cad4bfee1d65ca2b9bfe0b69970a8f,SERVER-24780 Create audit log entry for setParameter command,src/mongo/db/audit.cpp,+,"void logSetParameter(ClientBasic* client,",181,download/mongodb_mongo1140.cpp
a6fcab0cf4cad4bfee1d65ca2b9bfe0b69970a8f,SERVER-24780 Create audit log entry for setParameter command,src/mongo/db/commands/parameters.cpp,+,"audit::logSetParameter(ClientBasic::getCurrent(), parametersToSet);",236,download/mongodb_mongo1141.cpp
1c1bf24edf54e41e541cf91a06b38d2056400179,"Revert ""SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary""

This reverts commit 22eff747e1e2408cb30f286751c47965e909c5b1.",src/mongo/s/balancer/cluster_statistics_impl.cpp,+,uassertStatusOK(shardsStatus.getStatus());,128,download/mongodb_mongo1142.cpp
1c1bf24edf54e41e541cf91a06b38d2056400179,"Revert ""SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary""

This reverts commit 22eff747e1e2408cb30f286751c47965e909c5b1.",src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,uassertStatusOK(MigrationSecondaryThrottleOptions::createFromCommand(cmdObj));,209,download/mongodb_mongo1143.cpp
1c1bf24edf54e41e541cf91a06b38d2056400179,"Revert ""SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary""

This reverts commit 22eff747e1e2408cb30f286751c47965e909c5b1.",src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,uassertStatusOK(,224,download/mongodb_mongo1143.cpp
22eff747e1e2408cb30f286751c47965e909c5b1,SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary,src/mongo/db/s/migration_destination_manager_legacy_commands.cpp,+,"uassert(ErrorCodes::ConflictingOperationInProgress,",102,download/mongodb_mongo1144.cpp
22eff747e1e2408cb30f286751c47965e909c5b1,SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary,src/mongo/s/balancer/cluster_statistics_impl.cpp,+,"log() << ""Unable to obtain shard version for "" << shard.getName()",156,download/mongodb_mongo1145.cpp
22eff747e1e2408cb30f286751c47965e909c5b1,SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary,src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,"auto scopedCM = uassertStatusOK(ScopedChunkManager::getExisting(txn, nss));",165,download/mongodb_mongo1146.cpp
22eff747e1e2408cb30f286751c47965e909c5b1,SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary,src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,uassertStatusOK(MigrationSecondaryThrottleOptions::createFromCommand(cmdObj));,211,download/mongodb_mongo1146.cpp
22eff747e1e2408cb30f286751c47965e909c5b1,SERVER-24856 Make manual moveChunk requests go through the balancer on CSRS primary,src/mongo/s/commands/cluster_move_chunk_cmd.cpp,+,"uassertStatusOK(configsvr_client::moveChunk(txn,",227,download/mongodb_mongo1146.cpp
aa68a612d312db2f13ab674d954cb3d7e239dfa9,SERVER-25241 Do not refresh metadata in CollectionShardingState constructor,src/mongo/db/s/metadata_manager.cpp,+,"log() << ""Marking collection as sharded with "" << remoteMetadata->toStringBasic();",81,download/mongodb_mongo1147.cpp
44eabe39a7208706c3a31e9483fd5218e40fb967,SERVER-25281 renamed CollectionCloner and DatabaseCloner lifecycle functions,src/mongo/db/repl/base_cloner_test_fixture.cpp,+,ASSERT_OK(getCloner()->startup());,193,download/mongodb_mongo1148.cpp
44eabe39a7208706c3a31e9483fd5218e40fb967,SERVER-25281 renamed CollectionCloner and DatabaseCloner lifecycle functions,src/mongo/db/repl/base_cloner_test_fixture.cpp,+,ASSERT_OK(getCloner()->startup());,199,download/mongodb_mongo1148.cpp
44eabe39a7208706c3a31e9483fd5218e40fb967,SERVER-25281 renamed CollectionCloner and DatabaseCloner lifecycle functions,src/mongo/db/repl/base_cloner_test_fixture.cpp,+,ASSERT_NOT_OK(getCloner()->startup());,201,download/mongodb_mongo1148.cpp
44eabe39a7208706c3a31e9483fd5218e40fb967,SERVER-25281 renamed CollectionCloner and DatabaseCloner lifecycle functions,src/mongo/db/repl/base_cloner_test_fixture.cpp,+,ASSERT_NOT_OK(getCloner()->startup());,224,download/mongodb_mongo1148.cpp
44eabe39a7208706c3a31e9483fd5218e40fb967,SERVER-25281 renamed CollectionCloner and DatabaseCloner lifecycle functions,src/mongo/db/repl/base_cloner_test_fixture.cpp,+,ASSERT_OK(getCloner()->startup());,230,download/mongodb_mongo1148.cpp
44eabe39a7208706c3a31e9483fd5218e40fb967,SERVER-25281 renamed CollectionCloner and DatabaseCloner lifecycle function
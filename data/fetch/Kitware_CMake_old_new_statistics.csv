sha,message,issue,file_name,old_file,new_file,patch_file,old_hunk_file,new_hunk_file,old_hunk_loc,new_hunk_loc,old_loc,new_loc,old_log,new_log,action_type,old_log_file,new_log_file,old_function_file,old_fucntion_loc,new_function_file,new_function_loc,old_ddg_feature,old_cdg_feature,new_ddg_codes,new_ddg_loc,edit_words,old_log_time,old_log_author,edit_feature,cluster
6df1bda1c57193b289866389a994ea79a2f5e1d8,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-07-09 (98a69539)",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_2.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_21.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_21.cpp,4044,4083,4090,4125,"archive_set_error(&a->archive,
						    errno,
						    ""Cannot restore extended ""
						    ""attributes on this file ""
						    ""system"");","archive_strcat(&errlist, name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_2.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_2.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_2.cpp,35,[],"[""int"", ""!""]",set([u'const char * name ;']),set([12]),"[['archive_set_error', '&a', 'archive', 'errno', 'Cannot', 'restore', 'extended', 'attributes', 'on', 'this', 'file', 'system'], ['archive_strcat', '&errlist', 'name']]",2017-07-20T15:36:18,Brad King,-17784174598541648364,296
6df1bda1c57193b289866389a994ea79a2f5e1d8,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-07-09 (98a69539)",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_2.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_21.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_21.cpp,4044,4083,4097,4168,"archive_set_error(&a->archive, errno,
					    ""Failed to set extended attribute"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Cannot restore extended ""
			    ""attributes on this file system."");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_3.cpp,46,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_3.cpp,78,"[""member"", ""unkown"", ""string""]","[""unkown"", ""macro"", ""=="", ""unkown"", ""macro"", ""=="", ""||"", ""!""]","set([u'ret = ARCHIVE_WARN', u'int ret = ARCHIVE_OK ;'])","set([5, 62])","[['errno', 'Failed', 'to', 'set', 'attribute'], ['ARCHIVE_ERRNO_MISC', 'Cannot', 'restore', 'attributes', 'on', 'this', 'file', 'system']]",2017-07-20T15:36:18,Brad King,2931804011985411850,297
6df1bda1c57193b289866389a994ea79a2f5e1d8,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-07-09 (98a69539)",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_2.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_21.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_21.cpp,4044,4083,4102,4154,"archive_set_error(&a->archive,
			    ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Invalid extended attribute encountered"");","archive_strappend_char(&errlist, ' ');",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_4.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_4.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_4.cpp,51,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_4.cpp,64,"[""member"", ""macro"", ""string""]","[""const char *"", ""null"", ""!="", ""strncmp_ret"", ""null"", ""!="", ""strncmp_ret"", ""null"", ""!="", ""&&"", ""&&"", ""!""]","set([u'e = fsetxattr ( a -> fd , name , value , size , 0 )', u'e = lsetxattr ( archive_entry_pathname ( entry ) , name , value , size , 0 )'])","set([51, 43])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Invalid', 'extended', 'attribute', 'encountered'], ['archive_strappend_char', '&errlist']]",2017-07-20T15:36:18,Brad King,23758455365854590199,298
6df1bda1c57193b289866389a994ea79a2f5e1d8,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-07-09 (98a69539)",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_2.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_21.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_21.cpp,4044,4083,4108,4164,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Cannot restore extended attributes: %s"",
			    errlist.s);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_5.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_5.cpp,57,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_5.cpp,74,[],[],"set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 66, 4, 7, 72, 34])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Cannot', 'restore', 'extended', 'attributes', '%s', 'errlist', 's']]",2017-07-20T15:36:18,Brad King,-12089244025887678939,299
6df1bda1c57193b289866389a994ea79a2f5e1d8,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-07-09 (98a69539)",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_2.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_22.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_22.cpp,4134,4203,4137,4207,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_FILE_FORMAT,
				    ""Can't restore extended attribute ``%s''"",
				    name);","archive_strappend_char(&errlist, ' ');",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_6.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_6.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_6.cpp,23,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_6.cpp,27,"[""member"", ""macro"", ""string"", ""const char *""]","[""strncmp_ret"", ""null"", ""=="", ""!""]",set([u'const char * name ;']),set([12]),"[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Can', 't', 'restore', 'extended', 'attribute', '%s', 'name'], ['archive_strappend_char', '&errlist']]",2017-07-20T15:36:18,Brad King,23487915043983878022,300
6df1bda1c57193b289866389a994ea79a2f5e1d8,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-07-09 (98a69539)",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_2.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_22.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_22.cpp,4134,4203,4161,4240,"archive_set_error(&a->archive,
						    errno,
						    ""Cannot restore extended ""
						    ""attributes on this file ""
						    ""system"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Cannot restore extended ""
			    ""attributes on this file system."");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_7.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_7.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_7.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_7.cpp,60,[],"[""int"", ""!""]","set([u'ret = ARCHIVE_WARN', u'int ret = ARCHIVE_OK ;'])","set([44, 29, 5])","[['errno'], ['ARCHIVE_ERRNO_MISC']]",2017-07-20T15:36:18,Brad King,-15413314426355235041,301
6df1bda1c57193b289866389a994ea79a2f5e1d8,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-07-09 (98a69539)",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_2.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_2.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_22.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_22.cpp,4134,4203,4168,4236,"archive_set_error(&a->archive, errno,
					    ""Failed to set extended attribute"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Cannot restore extended attributes: %s"",
			    errlist.s);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_8.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_8.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_8.cpp,54,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_8.cpp,56,"[""member"", ""null"", ""string""]","[""null"", ""macro"", ""=="", ""null"", ""macro"", ""=="", ""||"", ""!""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['errno', 'Failed', 'to', 'set', 'attribute'], ['ARCHIVE_ERRNO_MISC', 'Cannot', 'restore', 'attributes', '%s', 'errlist', 's']]",2017-07-20T15:36:18,Brad King,-9539370424153379496,302
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_24.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_24.cpp,328,334,334,-1,"archive_set_error(&a->archive, errno,
			    ""Can't change dir to read extended attributes"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_10.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_10.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_10.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_10.cpp,-1,"[""member"", ""unkown"", ""string""]","[""member"", ""null"", ""!="", ""a -> tree_enter_working_dir_ret"", ""null"", ""!="", ""&&""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Can', 't', 'change', 'dir', 'to', 'read', 'extended', 'attributes'], []]",2017-07-20T15:30:03,Brad King,5085273484461657321,0
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_24.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_24.cpp,328,334,339,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Can't open file to read extended attributes: No name"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_11.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_11.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_11.cpp,23,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_11.cpp,-1,"[""member"", ""macro"", ""string""]","[""archive_entry_pathname_ret"", ""null"", ""==""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Can', 't', 'open', 'file', 'to', 'read', 'extended', 'attributes', 'No', 'name'], []]",2017-07-20T15:30:03,Brad King,18470310573538364008,1
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,476,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Couldn't determine file path to read ACLs"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_12.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_12.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_12.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_12.cpp,-1,"[""member"", ""macro"", ""string""]","[""archive_entry_sourcepath_ret"", ""null"", ""==""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Couldn', 't', 'determine', 'file', 'path', 'to', 'read', 'ACLs'], []]",2017-07-20T15:30:03,Brad King,11174321246323491130,2
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,549,-1,"archive_set_error(&a->archive, errno,
			    ""Couldn't translate ""
#if !HAVE_SUN_ACL
			    ""NFSv4 ""
#endif
			    ""ACLs"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_13.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_13.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_13.cpp,99,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_13.cpp,-1,[],"[""translate_acl_ret"", ""macro"", ""!=""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Couldn', 't', 'translate', 'if', 'HAVE_SUN_ACL', 'NFSv4', 'endif', 'ACLs'], []]",2017-07-20T15:30:03,Brad King,5778188671688277010,3
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,605,-1,"archive_set_error(&a->archive, errno,
			    ""Couldn't translate access ACLs"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_14.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_14.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_14.cpp,155,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_14.cpp,-1,"[""member"", ""unkown"", ""string""]","[""translate_acl_ret"", ""macro"", ""!=""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Couldn', 't', 'translate', 'access', 'ACLs'], []]",2017-07-20T15:30:03,Brad King,3979488799866140268,4
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,624,-1,"archive_set_error(&a->archive, errno,
				    ""Couldn't translate default ACLs"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_15.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_15.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_15.cpp,174,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_15.cpp,-1,"[""member"", ""unkown"", ""string""]","[""translate_acl_ret"", ""macro"", ""!=""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Couldn', 't', 'translate', 'default', 'ACLs'], []]",2017-07-20T15:30:03,Brad King,-9666538383764693068,5
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1188,-1,"archive_set_error(&a->archive, errno,
		    ""Failed to read ACL brand"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_16.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_16.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_16.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_16.cpp,-1,"[""member"", ""unkown"", ""string""]","[""acl_get_brand_np_ret"", ""null"", ""!=""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'read', 'ACL', 'brand'], []]",2017-07-20T15:30:03,Brad King,-3934652654161248639,6
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1199,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Invalid ACL entry type for POSIX.1e ACL"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_17.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_17.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_17.cpp,37,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_17.cpp,-1,"[""member"", ""macro"", ""constant""]","[""int""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Invalid', 'ACL', 'entry', 'type', 'for', 'POSIX', '1e', 'ACL'], []]",2017-07-20T15:30:03,Brad King,20075619460706709046,7
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1206,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Invalid ACL entry type for NFSv4 ACL"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_18.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_18.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_18.cpp,44,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_18.cpp,-1,"[""member"", ""macro"", ""string""]","[""bool""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Invalid', 'ACL', 'entry', 'type', 'for', 'NFSv4', 'ACL'], []]",2017-07-20T15:30:03,Brad King,16422876023391942742,8
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1212,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Unknown ACL brand"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_19.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_19.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_19.cpp,50,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_19.cpp,-1,"[""member"", ""macro"", ""string""]","[""int""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Unknown', 'ACL', 'brand'], []]",2017-07-20T15:30:03,Brad King,1262201066466070243,9
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1220,-1,"archive_set_error(&a->archive, errno,
		    ""Failed to get first ACL entry"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_20.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_20.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_20.cpp,58,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_20.cpp,-1,"[""member"", ""unkown"", ""string""]","[""acl_get_entry_ret"", ""int"", ""==""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'first', 'ACL', 'entry'], []]",2017-07-20T15:30:03,Brad King,-1933689404214747436,10
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1236,-1,"archive_set_error(&a->archive, errno,
			    ""Failed to get ACL tag type"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_21.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_21.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_21.cpp,74,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_21.cpp,-1,"[""member"", ""unkown"", ""string""]","[""acl_get_tag_type_ret"", ""null"", ""!=""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'ACL', 'tag', 'type'], []]",2017-07-20T15:30:03,Brad King,-968123762615171843,11
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1316,-1,"archive_set_error(&a->archive, errno, ""Failed ""
				    ""to get ACL type from a NFSv4 ACL entry"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_22.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_22.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_22.cpp,154,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_22.cpp,-1,[],"[""acl_get_entry_type_np_ret"", ""null"", ""!=""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'ACL', 'type', 'from', 'a', 'NFSv4', 'ACL', 'entry'], []]",2017-07-20T15:30:03,Brad King,3317646396445934108,12
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1334,-1,"archive_set_error(&a->archive, errno,
				    ""Invalid NFSv4 ACL entry type"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_23.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_23.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_23.cpp,172,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_23.cpp,-1,"[""member"", ""unkown"", ""string""]","[""acl_entry_type_t""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Invalid', 'NFSv4', 'ACL', 'entry', 'type'], []]",2017-07-20T15:30:03,Brad King,-1714556506971384566,13
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1347,-1,"archive_set_error(&a->archive, errno,
				    ""Failed to get flagset from a NFSv4 ACL entry"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_24.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_24.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_24.cpp,185,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_24.cpp,-1,"[""member"", ""unkown"", ""string""]","[""acl_get_flagset_np_ret"", ""null"", ""!=""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'flagset', 'from', 'a', 'NFSv4', 'ACL', 'entry'], []]",2017-07-20T15:30:03,Brad King,4515158641691338678,14
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1355,-1,"archive_set_error(&a->archive, errno,
					    ""Failed to check flag in a NFSv4 ""
					    ""ACL flagset"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_25.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_25.cpp,193,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_25.cpp,-1,[],"[""acl_get_flag_np_ret"", ""int"", ""==""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'check', 'flag', 'in', 'a', 'NFSv4', 'ACL', 'flagset'], []]",2017-07-20T15:30:03,Brad King,-5013764185493101420,15
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1366,-1,"archive_set_error(&a->archive, errno,
			    ""Failed to get ACL permission set"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_26.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_26.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_26.cpp,204,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_26.cpp,-1,"[""member"", ""unkown"", ""string""]","[""acl_get_permset_ret"", ""null"", ""!=""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'ACL', 'permission', 'set'], []]",2017-07-20T15:30:03,Brad King,-6088557535414020350,16
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1377,-1,"archive_set_error(&a->archive, errno,
				    ""Failed to check permission in an ACL permission set"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_27.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_27.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_27.cpp,215,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_27.cpp,-1,"[""member"", ""unkown"", ""string""]","[""ACL_GET_PERM_ret"", ""int"", ""==""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'check', 'permission', 'in', 'an', 'ACL', 'permission', 'set'], []]",2017-07-20T15:30:03,Brad King,-20669823776620883393,17
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_25.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_25.cpp,426,423,1391,-1,"archive_set_error(&a->archive, errno,
			    ""Failed to get next ACL entry"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_28.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_28.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_28.cpp,229,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_28.cpp,-1,"[""member"", ""unkown"", ""string""]","[""acl_get_entry_ret"", ""int"", ""==""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'next', 'ACL', 'entry'], []]",2017-07-20T15:30:03,Brad King,5285717154549338276,18
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_28.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_28.cpp,1499,532,1506,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Couldn't determine file path to read ""
			    ""extended attributes"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_29.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_29.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_29.cpp,16,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_29.cpp,-1,[],"[""archive_entry_pathname_ret"", ""null"", ""==""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Couldn', 't', 'determine', 'file', 'path', 'to', 'read', 'extended', 'attributes'], []]",2017-07-20T15:30:03,Brad King,12743969515558491697,303
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_30.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_30.cpp,1658,710,1665,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Couldn't determine file path to read ""
			    ""extended attributes"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_30.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_30.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_30.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_30.cpp,-1,[],"[""archive_entry_pathname_ret"", ""null"", ""==""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Couldn', 't', 'determine', 'file', 'path', 'to', 'read', 'extended', 'attributes'], []]",2017-07-20T15:30:03,Brad King,12743969515558491697,303
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_3.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_3.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_31.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_31.cpp,1880,920,1898,-1,"archive_set_error(&a->archive, errno,
			    ""Can't open `%s'"", path);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_31.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_31.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_31.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_31.cpp,-1,"[""member"", ""unkown"", ""string"", ""archive_entry_pathname_ret""]","[""int *"", ""null"", ""<""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['archive_set_error', '&a', 'archive', 'errno', 'Can', 't', 'open', '%s', 'path'], []]",2017-07-20T15:30:03,Brad King,-16137937622806740697,19
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_read_support_format_mtree.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_4.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_4.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_4.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_33.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_33.cpp,1535,1533,1542,1540,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_FILE_FORMAT,
				    ""Symbolic mode \""%s\"" unsupported"", val);","archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_FILE_FORMAT,
				    ""Symbolic or non-octal mode \""%s\"" unsupported"", val);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_32.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_32.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_32.cpp,97,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_32.cpp,97,"[""member"", ""macro"", ""string"", ""strchr_ret""]","[""member"", ""char"", "">="", ""member"", ""char"", ""<="", ""&&"", ""!""]","set([u""* val = '\\0'"", u'struct archive_read * a', u""val = strchr ( key , '=' )""])","set([1, 35, 28])","[[], ['or', 'non', 'octal']]",2017-07-20T15:30:03,Brad King,-1413026796915405065,20
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_5.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_34.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_34.cpp,2467,2506,2469,2508,"archive_string_sprintf(a_estr, errstr, path);","archive_string_sprintf(a_estr, ""%s%s"", errstr, path);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_33.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_33.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_33.cpp,7,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_33.cpp,7,"[""struct archive_string *"", ""const char *"", ""const char *""]","[""struct archive_string *""]","set([u'const char * path', u'const char * errstr', u'struct archive_string * a_estr'])","set([1, 2])","[[], ['%s%s']]",2017-07-20T15:30:03,Brad King,6144965239391709348,21
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_5.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_43.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_43.cpp,4044,4083,4090,4125,"archive_set_error(&a->archive,
						    errno,
						    ""Cannot restore extended ""
						    ""attributes on this file ""
						    ""system"");","archive_strcat(&errlist, name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_41.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_41.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_41.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_41.cpp,35,[],"[""int"", ""!""]",set([u'const char * name ;']),set([12]),"[['archive_set_error', '&a', 'archive', 'errno', 'Cannot', 'restore', 'extended', 'attributes', 'on', 'this', 'file', 'system'], ['archive_strcat', '&errlist', 'name']]",2017-07-20T15:30:03,Brad King,-17784174598541648364,296
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_5.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_43.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_43.cpp,4044,4083,4097,4168,"archive_set_error(&a->archive, errno,
					    ""Failed to set extended attribute"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Cannot restore extended ""
			    ""attributes on this file system."");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_42.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_42.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_42.cpp,46,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_42.cpp,78,"[""member"", ""unkown"", ""string""]","[""unkown"", ""macro"", ""=="", ""unkown"", ""macro"", ""=="", ""||"", ""!""]","set([u'ret = ARCHIVE_WARN', u'int ret = ARCHIVE_OK ;'])","set([5, 62])","[['errno', 'Failed', 'to', 'set', 'attribute'], ['ARCHIVE_ERRNO_MISC', 'Cannot', 'restore', 'attributes', 'on', 'this', 'file', 'system']]",2017-07-20T15:30:03,Brad King,2931804011985411850,297
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_5.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_43.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_43.cpp,4044,4083,4102,4154,"archive_set_error(&a->archive,
			    ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Invalid extended attribute encountered"");","archive_strappend_char(&errlist, ' ');",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_43.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_43.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_43.cpp,51,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_43.cpp,64,"[""member"", ""macro"", ""string""]","[""const char *"", ""null"", ""!="", ""strncmp_ret"", ""null"", ""!="", ""strncmp_ret"", ""null"", ""!="", ""&&"", ""&&"", ""!""]","set([u'e = fsetxattr ( a -> fd , name , value , size , 0 )', u'e = lsetxattr ( archive_entry_pathname ( entry ) , name , value , size , 0 )'])","set([51, 43])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Invalid', 'extended', 'attribute', 'encountered'], ['archive_strappend_char', '&errlist']]",2017-07-20T15:30:03,Brad King,23758455365854590199,298
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_5.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_43.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_43.cpp,4044,4083,4108,4164,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Cannot restore extended attributes: %s"",
			    errlist.s);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_44.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_44.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_44.cpp,57,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_44.cpp,74,[],[],"set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 34, 4, 7, 72, 66])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Cannot', 'restore', 'extended', 'attributes', '%s', 'errlist', 's']]",2017-07-20T15:30:03,Brad King,-12089244025887678939,299
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_5.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_44.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_44.cpp,4134,4203,4137,4207,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_FILE_FORMAT,
				    ""Can't restore extended attribute ``%s''"",
				    name);","archive_strappend_char(&errlist, ' ');",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_45.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_45.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_45.cpp,23,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_45.cpp,27,"[""member"", ""macro"", ""string"", ""const char *""]","[""strncmp_ret"", ""null"", ""=="", ""!""]",set([u'const char * name ;']),set([12]),"[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Can', 't', 'restore', 'extended', 'attribute', '%s', 'name'], ['archive_strappend_char', '&errlist']]",2017-07-20T15:30:03,Brad King,23487915043983878022,300
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_5.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_44.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_44.cpp,4134,4203,4161,4240,"archive_set_error(&a->archive,
						    errno,
						    ""Cannot restore extended ""
						    ""attributes on this file ""
						    ""system"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Cannot restore extended ""
			    ""attributes on this file system."");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_46.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_46.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_46.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_46.cpp,60,[],"[""int"", ""!""]","set([u'ret = ARCHIVE_WARN', u'int ret = ARCHIVE_OK ;'])","set([44, 29, 5])","[['errno'], ['ARCHIVE_ERRNO_MISC']]",2017-07-20T15:30:03,Brad King,-15413314426355235041,301
11f3dcb04887fccf38a8eda19d498bf7a5060486,"LibArchive 2017-07-09 (98a69539)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 98a695399e8e7420635a5448aecde8b0a82fb83a (v3.3.2).",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_5.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_5.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_44.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_44.cpp,4134,4203,4168,4236,"archive_set_error(&a->archive, errno,
					    ""Failed to set extended attribute"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Cannot restore extended attributes: %s"",
			    errlist.s);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_47.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_47.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_47.cpp,54,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_47.cpp,56,"[""member"", ""null"", ""string""]","[""null"", ""macro"", ""=="", ""null"", ""macro"", ""=="", ""||"", ""!""]","set([u'fail = 1', u'errlist . length --', u'short fail = 0 ;', u'struct archive_write_disk * a', u'struct archive_string errlist ;'])","set([1, 4, 7, 46, 53, 28])","[['errno', 'Failed', 'to', 'set', 'attribute'], ['ARCHIVE_ERRNO_MISC', 'Cannot', 'restore', 'attributes', '%s', 'errlist', 's']]",2017-07-20T15:30:03,Brad King,-9539370424153379496,302
df1c187f2fdfa48bd36d770bac23f6503fd9b071,Merge branch 'update-curl' into release-3.9,[],Utilities/cmcurl/lib/file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_7.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_7.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_7.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_47.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_47.cpp,475,473,477,476,"snprintf(buf, CURL_BUFSIZE(data->set.buffer_size),
             ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", expected_size);","snprintf(header, sizeof(header),
             ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", expected_size);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_49.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_49.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_49.cpp,58,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_49.cpp,58,[],"[""member"", ""member"", ""macro"", ""&&"", ""&&""]","set([u'data -> info . filetime = ( long ) statbuf . st_mtime', u'fstated = TRUE', u'bool fstated = FALSE ;', u'struct Curl_easy * data = conn -> data ;'])","set([40, 15, 13, 39])","[['buf', 'CURL_BUFSIZE', 'data', 'set', 'buffer_size'], ['header', 'sizeof', 'header']]",2017-06-14T19:10:28,Brad King,-6734532068113610015,304
df1c187f2fdfa48bd36d770bac23f6503fd9b071,Merge branch 'update-curl' into release-3.9,[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_8.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_8.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_8.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_49.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_49.cpp,2101,2100,2109,2108,"snprintf(buf, CURL_BUFSIZE(conn->data->set.buffer_size),
                 ""%04d%02d%02d %02d:%02d:%02d GMT"",
                 year, month, day, hour, minute, second);","snprintf(timebuf, sizeof(timebuf),
                 ""%04d%02d%02d %02d:%02d:%02d GMT"",
                 year, month, day, hour, minute, second);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_50.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_50.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_50.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_50.cpp,20,"[""char *"", ""CURL_BUFSIZE_ret"", ""string"", ""int"", ""int"", ""int"", ""int"", ""int"", ""int""]","[""int"", ""sscanf_ret"", ""==""]","set([u'char timebuf [ 24 ] ;', u'int year , month , day , hour , minute , second ;', u'struct Curl_easy * data = conn -> data ;'])","set([17, 4, 13])","[['buf', 'CURL_BUFSIZE', 'conn', 'data', 'set', 'buffer_size'], ['timebuf', 'sizeof', 'timebuf']]",2017-06-14T19:10:28,Brad King,6485246585005264763,305
df1c187f2fdfa48bd36d770bac23f6503fd9b071,Merge branch 'update-curl' into release-3.9,[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_8.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_8.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_8.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_51.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_51.cpp,2318,2318,2320,2321,"snprintf(buf, CURL_BUFSIZE(data->set.buffer_size),
               ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", filesize);","snprintf(clbuf, sizeof(clbuf),
               ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", filesize);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_51.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_51.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_51.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_51.cpp,16,[],"[""int"", ""curlx_strtoofft_ret"", ""!=""]","set([u'filesize = ( ftpcode == 213 ) ? curlx_strtoofft ( buf + 4 , NULL , 0 ) : - 1'])",set([10]),"[['buf', 'CURL_BUFSIZE', 'data', 'set', 'buffer_size'], ['clbuf', 'sizeof', 'clbuf']]",2017-06-14T19:10:28,Brad King,18808312368950577321,306
df1c187f2fdfa48bd36d770bac23f6503fd9b071,Merge branch 'update-curl' into release-3.9,[],Utilities/cmcurl/lib/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_9.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_9.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_9.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_52.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_52.cpp,297,298,299,300,"f(data->state.buffer, CURL_BUFSIZE(data->set.buffer_size),
           ""%s:%s"", user, pwd);","= aprintf(""%s:%s"", user, pwd);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_52.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_52.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_52.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_52.cpp,22,"[""member"", ""CURL_BUFSIZE_ret"", ""string"", ""member"", ""member""]",[],"set([u'user = conn -> http_proxy . user', u'pwd = conn -> http_proxy . passwd', u'pwd = conn -> passwd', u'user = conn -> user'])","set([18, 19, 13, 14])","[['f', 'data', 'state', 'buffer', 'CURL_BUFSIZE', 'data', 'set', 'buffer_size'], ['aprintf']]",2017-06-14T19:10:28,Brad King,7238258534666211175,307
df1c187f2fdfa48bd36d770bac23f6503fd9b071,Merge branch 'update-curl' into release-3.9,[],Utilities/cmcurl/lib/sendf.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_10.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_10.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_10.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_54.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_54.cpp,243,243,247,248,"vsnprintf(data->state.buffer, BUFSIZE, fmt, ap);","vsnprintf(error, CURL_ERROR_SIZE, fmt, ap);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_53.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_53.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_53.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_53.cpp,7,"[""member"", ""macro"", ""const char *"", ""va_list""]",[],"set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'const char * fmt', u'va_list ap ;'])","set([0, 2, 4])","[['data', 'state', 'buffer', 'BUFSIZE'], ['error', 'CURL_ERROR_SIZE']]",2017-06-14T19:10:28,Brad King,-850352724091593126,308
df1c187f2fdfa48bd36d770bac23f6503fd9b071,Merge branch 'update-curl' into release-3.9,[],Utilities/cmcurl/lib/sendf.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_10.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_10.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_10.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_54.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_54.cpp,243,243,250,252,"snprintf(data->set.errorbuffer, CURL_ERROR_SIZE, ""%s"", data->state.buffer);","strcpy(data->set.errorbuffer, error);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_54.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_54.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_54.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_54.cpp,11,"[""member"", ""macro"", ""string"", ""member""]","[""member"", ""member"", ""&&""]","set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'struct Curl_easy * data'])","set([0, 4])","[['snprintf', 'CURL_ERROR_SIZE', '%s', 'data', 'state', 'buffer'], ['strcpy', 'error']]",2017-06-14T19:10:28,Brad King,13542620684528628828,309
df1c187f2fdfa48bd36d770bac23f6503fd9b071,Merge branch 'update-curl' into release-3.9,[],Utilities/cmcurl/lib/vauth/digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_12.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_12.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_12.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_57.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_57.cpp,387,386,395,-1,"snprintf(cnonce, sizeof(cnonce), ""%08x%08x%08x%08x"",
           entropy[0], entropy[1], entropy[2], entropy[3]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_55.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_55.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_55.cpp,54,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_55.cpp,-1,"[""char *"", ""unkown"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""Curl_rand_ret"", ""!""]","set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'struct Curl_easy * data'])","set([0, 4])","[['snprintf', 'cnonce', 'sizeof', 'cnonce', '%08x%08x%08x%08x', 'entropy[0]', 'entropy[1]', 'entropy[2]', 'entropy[3]'], []]",2017-06-14T19:10:28,Brad King,44726269606322736130,522
df1c187f2fdfa48bd36d770bac23f6503fd9b071,Merge branch 'update-curl' into release-3.9,[],Utilities/cmcurl/lib/vauth/digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_12.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_12.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_12.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_58.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_58.cpp,684,679,690,-1,"snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             rnd[0], rnd[1], rnd[2], rnd[3]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_56.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_56.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_56.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_56.cpp,-1,"[""char *"", ""unkown"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""Curl_rand_ret"", ""!""]","set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'struct Curl_easy * data'])","set([0, 4])","[['snprintf', 'cnoncebuf', 'sizeof', 'cnoncebuf', '%08x%08x%08x%08x', 'rnd[0]', 'rnd[1]', 'rnd[2]', 'rnd[3]'], []]",2017-06-14T19:10:28,Brad King,-22633675996720436870,310
a3ef36f153f51c33ea2154cff17bbf9abb7ee073,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-06-14 (54b636f1)

Resolve a logical conflict in `Utilities/cmcurl/CMakeLists.txt`
by disabling CA bundle/path detection for build within CMake.
CMake already handles locating a CA bundle/path at runtime.",[],Utilities/cmcurl/lib/file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_14.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_14.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_14.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_60.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_60.cpp,475,473,477,476,"snprintf(buf, CURL_BUFSIZE(data->set.buffer_size),
             ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", expected_size);","snprintf(header, sizeof(header),
             ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", expected_size);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_57.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_57.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_57.cpp,58,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_57.cpp,58,[],"[""member"", ""member"", ""macro"", ""&&"", ""&&""]","set([u'data -> info . filetime = ( long ) statbuf . st_mtime', u'fstated = TRUE', u'bool fstated = FALSE ;', u'struct Curl_easy * data = conn -> data ;'])","set([40, 39, 13, 15])","[['buf', 'CURL_BUFSIZE', 'data', 'set', 'buffer_size'], ['header', 'sizeof', 'header']]",2017-06-14T15:10:22,Brad King,-6734532068113610015,304
a3ef36f153f51c33ea2154cff17bbf9abb7ee073,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-06-14 (54b636f1)

Resolve a logical conflict in `Utilities/cmcurl/CMakeLists.txt`
by disabling CA bundle/path detection for build within CMake.
CMake already handles locating a CA bundle/path at runtime.",[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_15.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_15.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_15.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_62.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_62.cpp,2101,2100,2109,2108,"snprintf(buf, CURL_BUFSIZE(conn->data->set.buffer_size),
                 ""%04d%02d%02d %02d:%02d:%02d GMT"",
                 year, month, day, hour, minute, second);","snprintf(timebuf, sizeof(timebuf),
                 ""%04d%02d%02d %02d:%02d:%02d GMT"",
                 year, month, day, hour, minute, second);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_58.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_58.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_58.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_58.cpp,20,"[""char *"", ""CURL_BUFSIZE_ret"", ""string"", ""int"", ""int"", ""int"", ""int"", ""int"", ""int""]","[""int"", ""sscanf_ret"", ""==""]","set([u'char timebuf [ 24 ] ;', u'int year , month , day , hour , minute , second ;', u'struct Curl_easy * data = conn -> data ;'])","set([17, 4, 13])","[['buf', 'CURL_BUFSIZE', 'conn', 'data', 'set', 'buffer_size'], ['timebuf', 'sizeof', 'timebuf']]",2017-06-14T15:10:22,Brad King,6485246585005264763,305
a3ef36f153f51c33ea2154cff17bbf9abb7ee073,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-06-14 (54b636f1)

Resolve a logical conflict in `Utilities/cmcurl/CMakeLists.txt`
by disabling CA bundle/path detection for build within CMake.
CMake already handles locating a CA bundle/path at runtime.",[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_15.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_15.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_15.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_64.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_64.cpp,2318,2318,2320,2321,"snprintf(buf, CURL_BUFSIZE(data->set.buffer_size),
               ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", filesize);","snprintf(clbuf, sizeof(clbuf),
               ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", filesize);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_59.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_59.cpp,16,[],"[""int"", ""curlx_strtoofft_ret"", ""!=""]","set([u'filesize = ( ftpcode == 213 ) ? curlx_strtoofft ( buf + 4 , NULL , 0 ) : - 1'])",set([10]),"[['buf', 'CURL_BUFSIZE', 'data', 'set', 'buffer_size'], ['clbuf', 'sizeof', 'clbuf']]",2017-06-14T15:10:22,Brad King,18808312368950577321,306
a3ef36f153f51c33ea2154cff17bbf9abb7ee073,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-06-14 (54b636f1)

Resolve a logical conflict in `Utilities/cmcurl/CMakeLists.txt`
by disabling CA bundle/path detection for build within CMake.
CMake already handles locating a CA bundle/path at runtime.",[],Utilities/cmcurl/lib/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_16.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_16.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_16.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_65.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_65.cpp,297,298,299,300,"f(data->state.buffer, CURL_BUFSIZE(data->set.buffer_size),
           ""%s:%s"", user, pwd);","= aprintf(""%s:%s"", user, pwd);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_60.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_60.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_60.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_60.cpp,22,"[""member"", ""CURL_BUFSIZE_ret"", ""string"", ""member"", ""member""]",[],"set([u'user = conn -> http_proxy . user', u'pwd = conn -> http_proxy . passwd', u'user = conn -> user', u'pwd = conn -> passwd'])","set([18, 19, 13, 14])","[['f', 'data', 'state', 'buffer', 'CURL_BUFSIZE', 'data', 'set', 'buffer_size'], ['aprintf']]",2017-06-14T15:10:22,Brad King,7238258534666211175,307
a3ef36f153f51c33ea2154cff17bbf9abb7ee073,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-06-14 (54b636f1)

Resolve a logical conflict in `Utilities/cmcurl/CMakeLists.txt`
by disabling CA bundle/path detection for build within CMake.
CMake already handles locating a CA bundle/path at runtime.",[],Utilities/cmcurl/lib/sendf.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_17.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_17.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_17.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_67.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_67.cpp,243,243,247,248,"vsnprintf(data->state.buffer, BUFSIZE, fmt, ap);","vsnprintf(error, CURL_ERROR_SIZE, fmt, ap);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_61.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_61.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_61.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_61.cpp,7,"[""member"", ""macro"", ""const char *"", ""va_list""]",[],"set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'const char * fmt', u'va_list ap ;'])","set([0, 2, 4])","[['data', 'state', 'buffer', 'BUFSIZE'], ['error', 'CURL_ERROR_SIZE']]",2017-06-14T15:10:22,Brad King,-850352724091593126,308
a3ef36f153f51c33ea2154cff17bbf9abb7ee073,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-06-14 (54b636f1)

Resolve a logical conflict in `Utilities/cmcurl/CMakeLists.txt`
by disabling CA bundle/path detection for build within CMake.
CMake already handles locating a CA bundle/path at runtime.",[],Utilities/cmcurl/lib/sendf.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_17.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_17.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_17.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_67.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_67.cpp,243,243,250,252,"snprintf(data->set.errorbuffer, CURL_ERROR_SIZE, ""%s"", data->state.buffer);","strcpy(data->set.errorbuffer, error);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_62.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_62.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_62.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_62.cpp,11,"[""member"", ""macro"", ""string"", ""member""]","[""member"", ""member"", ""&&""]","set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'struct Curl_easy * data'])","set([0, 4])","[['snprintf', 'CURL_ERROR_SIZE', '%s', 'data', 'state', 'buffer'], ['strcpy', 'error']]",2017-06-14T15:10:22,Brad King,13542620684528628828,309
a3ef36f153f51c33ea2154cff17bbf9abb7ee073,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-06-14 (54b636f1)

Resolve a logical conflict in `Utilities/cmcurl/CMakeLists.txt`
by disabling CA bundle/path detection for build within CMake.
CMake already handles locating a CA bundle/path at runtime.",[],Utilities/cmcurl/lib/vauth/digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_19.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_19.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_19.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_70.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_70.cpp,387,386,395,-1,"snprintf(cnonce, sizeof(cnonce), ""%08x%08x%08x%08x"",
           entropy[0], entropy[1], entropy[2], entropy[3]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_63.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_63.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_63.cpp,54,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_63.cpp,-1,"[""char *"", ""unkown"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""Curl_rand_ret"", ""!""]","set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'struct Curl_easy * data'])","set([0, 4])","[['snprintf', 'cnonce', 'sizeof', 'cnonce', '%08x%08x%08x%08x', 'entropy[0]', 'entropy[1]', 'entropy[2]', 'entropy[3]'], []]",2017-06-14T15:10:22,Brad King,44726269606322736130,522
a3ef36f153f51c33ea2154cff17bbf9abb7ee073,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-06-14 (54b636f1)

Resolve a logical conflict in `Utilities/cmcurl/CMakeLists.txt`
by disabling CA bundle/path detection for build within CMake.
CMake already handles locating a CA bundle/path at runtime.",[],Utilities/cmcurl/lib/vauth/digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_19.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_19.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_19.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_71.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_71.cpp,684,679,690,-1,"snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             rnd[0], rnd[1], rnd[2], rnd[3]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_64.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_64.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_64.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_64.cpp,-1,"[""char *"", ""unkown"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""Curl_rand_ret"", ""!""]","set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'struct Curl_easy * data'])","set([0, 4])","[['snprintf', 'cnoncebuf', 'sizeof', 'cnoncebuf', '%08x%08x%08x%08x', 'rnd[0]', 'rnd[1]', 'rnd[2]', 'rnd[3]'], []]",2017-06-14T15:10:22,Brad King,-22633675996720436870,310
06d6d6c4aee149cd6560b919ef6935ef0867d921,"curl 2017-06-14 (54b636f1)

Code extracted from:

    https://github.com/curl/curl.git

at commit 54b636f14546d3fde9f9c67c3b32701d78563161 (curl-7_54_1).",[],lib/file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_21.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_21.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_21.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_73.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_73.cpp,475,473,477,476,"snprintf(buf, CURL_BUFSIZE(data->set.buffer_size),
             ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", expected_size);","snprintf(header, sizeof(header),
             ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", expected_size);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_65.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_65.cpp,58,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_65.cpp,58,[],"[""member"", ""member"", ""macro"", ""&&"", ""&&""]","set([u'data -> info . filetime = ( long ) statbuf . st_mtime', u'fstated = TRUE', u'bool fstated = FALSE ;', u'struct Curl_easy * data = conn -> data ;'])","set([40, 15, 13, 39])","[['buf', 'CURL_BUFSIZE', 'data', 'set', 'buffer_size'], ['header', 'sizeof', 'header']]",2017-06-14T14:46:35,Brad King,-6734532068113610015,304
06d6d6c4aee149cd6560b919ef6935ef0867d921,"curl 2017-06-14 (54b636f1)

Code extracted from:

    https://github.com/curl/curl.git

at commit 54b636f14546d3fde9f9c67c3b32701d78563161 (curl-7_54_1).",[],lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_22.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_22.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_22.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_75.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_75.cpp,2101,2100,2109,2108,"snprintf(buf, CURL_BUFSIZE(conn->data->set.buffer_size),
                 ""%04d%02d%02d %02d:%02d:%02d GMT"",
                 year, month, day, hour, minute, second);","snprintf(timebuf, sizeof(timebuf),
                 ""%04d%02d%02d %02d:%02d:%02d GMT"",
                 year, month, day, hour, minute, second);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_66.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_66.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_66.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_66.cpp,20,"[""char *"", ""CURL_BUFSIZE_ret"", ""string"", ""int"", ""int"", ""int"", ""int"", ""int"", ""int""]","[""int"", ""sscanf_ret"", ""==""]","set([u'int year , month , day , hour , minute , second ;', u'char timebuf [ 24 ] ;', u'struct Curl_easy * data = conn -> data ;'])","set([17, 4, 13])","[['buf', 'CURL_BUFSIZE', 'conn', 'data', 'set', 'buffer_size'], ['timebuf', 'sizeof', 'timebuf']]",2017-06-14T14:46:35,Brad King,6485246585005264763,305
06d6d6c4aee149cd6560b919ef6935ef0867d921,"curl 2017-06-14 (54b636f1)

Code extracted from:

    https://github.com/curl/curl.git

at commit 54b636f14546d3fde9f9c67c3b32701d78563161 (curl-7_54_1).",[],lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_22.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_22.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_22.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_77.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_77.cpp,2318,2318,2320,2321,"snprintf(buf, CURL_BUFSIZE(data->set.buffer_size),
               ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", filesize);","snprintf(clbuf, sizeof(clbuf),
               ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", filesize);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_67.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_67.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_67.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_67.cpp,16,[],"[""int"", ""curlx_strtoofft_ret"", ""!=""]","set([u'filesize = ( ftpcode == 213 ) ? curlx_strtoofft ( buf + 4 , NULL , 0 ) : - 1'])",set([10]),"[['buf', 'CURL_BUFSIZE', 'data', 'set', 'buffer_size'], ['clbuf', 'sizeof', 'clbuf']]",2017-06-14T14:46:35,Brad King,18808312368950577321,306
06d6d6c4aee149cd6560b919ef6935ef0867d921,"curl 2017-06-14 (54b636f1)

Code extracted from:

    https://github.com/curl/curl.git

at commit 54b636f14546d3fde9f9c67c3b32701d78563161 (curl-7_54_1).",[],lib/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_23.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_23.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_23.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_78.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_78.cpp,297,298,299,300,"f(data->state.buffer, CURL_BUFSIZE(data->set.buffer_size),
           ""%s:%s"", user, pwd);","= aprintf(""%s:%s"", user, pwd);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_68.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_68.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_68.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_68.cpp,22,"[""member"", ""CURL_BUFSIZE_ret"", ""string"", ""member"", ""member""]",[],"set([u'user = conn -> http_proxy . user', u'pwd = conn -> http_proxy . passwd', u'user = conn -> user', u'pwd = conn -> passwd'])","set([18, 19, 13, 14])","[['f', 'data', 'state', 'buffer', 'CURL_BUFSIZE', 'data', 'set', 'buffer_size'], ['aprintf']]",2017-06-14T14:46:35,Brad King,7238258534666211175,307
06d6d6c4aee149cd6560b919ef6935ef0867d921,"curl 2017-06-14 (54b636f1)

Code extracted from:

    https://github.com/curl/curl.git

at commit 54b636f14546d3fde9f9c67c3b32701d78563161 (curl-7_54_1).",[],lib/sendf.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_24.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_24.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_24.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_80.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_80.cpp,243,243,247,248,"vsnprintf(data->state.buffer, BUFSIZE, fmt, ap);","vsnprintf(error, CURL_ERROR_SIZE, fmt, ap);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_69.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_69.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_69.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_69.cpp,7,"[""member"", ""macro"", ""const char *"", ""va_list""]",[],"set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'const char * fmt', u'va_list ap ;'])","set([0, 2, 4])","[['data', 'state', 'buffer', 'BUFSIZE'], ['error', 'CURL_ERROR_SIZE']]",2017-06-14T14:46:35,Brad King,-850352724091593126,308
06d6d6c4aee149cd6560b919ef6935ef0867d921,"curl 2017-06-14 (54b636f1)

Code extracted from:

    https://github.com/curl/curl.git

at commit 54b636f14546d3fde9f9c67c3b32701d78563161 (curl-7_54_1).",[],lib/sendf.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_24.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_24.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_24.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_80.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_80.cpp,243,243,250,252,"snprintf(data->set.errorbuffer, CURL_ERROR_SIZE, ""%s"", data->state.buffer);","strcpy(data->set.errorbuffer, error);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_70.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_70.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_70.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_70.cpp,11,"[""member"", ""macro"", ""string"", ""member""]","[""member"", ""member"", ""&&""]","set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'struct Curl_easy * data'])","set([0, 4])","[['snprintf', 'CURL_ERROR_SIZE', '%s', 'data', 'state', 'buffer'], ['strcpy', 'error']]",2017-06-14T14:46:35,Brad King,13542620684528628828,309
06d6d6c4aee149cd6560b919ef6935ef0867d921,"curl 2017-06-14 (54b636f1)

Code extracted from:

    https://github.com/curl/curl.git

at commit 54b636f14546d3fde9f9c67c3b32701d78563161 (curl-7_54_1).",[],lib/vauth/digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_26.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_26.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_26.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_83.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_83.cpp,387,386,395,-1,"snprintf(cnonce, sizeof(cnonce), ""%08x%08x%08x%08x"",
           entropy[0], entropy[1], entropy[2], entropy[3]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_71.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_71.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_71.cpp,54,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_71.cpp,-1,"[""char *"", ""unkown"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""Curl_rand_ret"", ""!""]","set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'struct Curl_easy * data'])","set([0, 4])","[['snprintf', 'cnonce', 'sizeof', 'cnonce', '%08x%08x%08x%08x', 'entropy[0]', 'entropy[1]', 'entropy[2]', 'entropy[3]'], []]",2017-06-14T14:46:35,Brad King,44726269606322736130,522
06d6d6c4aee149cd6560b919ef6935ef0867d921,"curl 2017-06-14 (54b636f1)

Code extracted from:

    https://github.com/curl/curl.git

at commit 54b636f14546d3fde9f9c67c3b32701d78563161 (curl-7_54_1).",[],lib/vauth/digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_26.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_26.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_26.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_84.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_84.cpp,684,679,690,-1,"snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             rnd[0], rnd[1], rnd[2], rnd[3]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_72.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_72.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_72.cpp,-1,"[""char *"", ""unkown"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""Curl_rand_ret"", ""!""]","set([u'char error [ CURL_ERROR_SIZE + 2 ] ;', u'struct Curl_easy * data'])","set([0, 4])","[['snprintf', 'cnoncebuf', 'sizeof', 'cnoncebuf', '%08x%08x%08x%08x', 'rnd[0]', 'rnd[1]', 'rnd[2]', 'rnd[3]'], []]",2017-06-14T14:46:35,Brad King,-22633675996720436870,310
16ebd9f6152fedd1804f13c91ed14e8963e53d3f,"Merge branch 'upstream-KWSys' into update-kwsys

* upstream-KWSys:
  KWSys 2017-05-16 (fe1f22ce)",[],Source/kwsys/ProcessUNIX.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_29.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_29.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_29.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_88.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_88.cpp,2243,2273,2246,2276,"sprintf(cp->ExitExceptionString, ""Signal %d"", sig);","sprintf(cp->ProcessResults[idx].ExitExceptionString, ""Signal %d"", sig);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_74.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_74.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_74.cpp,187,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_74.cpp,188,"[""member"", ""string"", ""int""]","[""int""]","set([u'cp -> ProcessResults [ idx ] . ExitException = kwsysProcess_Exception_Other', u'int idx', u'int sig', u'kwsysProcess * cp'])","set([0, 1, 187])","[[], ['ProcessResults[idx]']]",2017-05-16T15:39:01,Brad King,8079167555263849931,518
16ebd9f6152fedd1804f13c91ed14e8963e53d3f,"Merge branch 'upstream-KWSys' into update-kwsys

* upstream-KWSys:
  KWSys 2017-05-16 (fe1f22ce)",[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_30.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_30.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_30.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_89.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_89.cpp,2120,2142,2123,2145,"_snprintf(cp->ExitExceptionString, KWSYSPE_PIPE_BUFFER_SIZE,
                ""Exit code 0x%x\n"", code);","_snprintf(cp->ProcessResults[idx].ExitExceptionString,
                KWSYSPE_PIPE_BUFFER_SIZE, ""Exit code 0x%x\n"", code);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_75.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_75.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_75.cpp,80,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_75.cpp,81,"[""member"", ""macro"", ""string"", ""int""]","[""int""]","set([u'cp -> ProcessResults [ idx ] . ExitException = kwsysProcess_Exception_Other', u'int idx', u'int code', u'kwsysProcess * cp'])","set([80, 0, 1])","[[], ['ProcessResults[idx]']]",2017-05-16T15:39:01,Brad King,8079167555263849931,518
7be70ca6cc888df532d2f1560e74d13642730ee5,"KWSys 2017-05-16 (fe1f22ce)

Code extracted from:

    https://gitlab.kitware.com/utils/kwsys.git

at commit fe1f22ceefdae18df33e5bab8483fec7a82d4cee (master).

Upstream Shortlog
-----------------

Adam Weisi (3):
      8a799e36 Process: Improve definition ordering in header file
      7d56ef24 Process: Save results from all children internally
      b7eba998 Process: Add APIs to get results of individual processes

Ben Boeckel (2):
      cea71543 style: remove separator comments
      874dc559 style: help clang-format near macros",[],ProcessUNIX.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_32.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_32.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_32.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_91.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_91.cpp,2243,2273,2246,2276,"sprintf(cp->ExitExceptionString, ""Signal %d"", sig);","sprintf(cp->ProcessResults[idx].ExitExceptionString, ""Signal %d"", sig);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_76.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_76.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_76.cpp,187,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_76.cpp,188,"[""member"", ""string"", ""int""]","[""int""]","set([u'cp -> ProcessResults [ idx ] . ExitException = kwsysProcess_Exception_Other', u'int idx', u'int sig', u'kwsysProcess * cp'])","set([0, 1, 187])","[[], ['ProcessResults[idx]']]",2017-05-16T15:39:00,Brad King,8079167555263849931,518
7be70ca6cc888df532d2f1560e74d13642730ee5,"KWSys 2017-05-16 (fe1f22ce)

Code extracted from:

    https://gitlab.kitware.com/utils/kwsys.git

at commit fe1f22ceefdae18df33e5bab8483fec7a82d4cee (master).

Upstream Shortlog
-----------------

Adam Weisi (3):
      8a799e36 Process: Improve definition ordering in header file
      7d56ef24 Process: Save results from all children internally
      b7eba998 Process: Add APIs to get results of individual processes

Ben Boeckel (2):
      cea71543 style: remove separator comments
      874dc559 style: help clang-format near macros",[],ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_33.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_33.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_33.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_92.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_92.cpp,2120,2142,2123,2145,"_snprintf(cp->ExitExceptionString, KWSYSPE_PIPE_BUFFER_SIZE,
                ""Exit code 0x%x\n"", code);","_snprintf(cp->ProcessResults[idx].ExitExceptionString,
                KWSYSPE_PIPE_BUFFER_SIZE, ""Exit code 0x%x\n"", code);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_77.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_77.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_77.cpp,80,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_77.cpp,81,"[""member"", ""macro"", ""string"", ""int""]","[""int""]","set([u'cp -> ProcessResults [ idx ] . ExitException = kwsysProcess_Exception_Other', u'int idx', u'kwsysProcess * cp', u'int code'])","set([80, 0, 1])","[[], ['ProcessResults[idx]']]",2017-05-16T15:39:00,Brad King,8079167555263849931,518
299975908ada992800791fac7f3739050e0ae2a9,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-04-19 (d957e218)

Resolve conflicts in `CMakeLists.txt` in favor of the upstream version.
We will re-apply our logic as needed in following commits.",[],Utilities/cmcurl/lib/conncache.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_35.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_35.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_35.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_94.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_94.cpp,141,136,143,141,"aprintf(""%s:%d"", hostname, conn->port);","snprintf(buf, len, ""%ld%s"", conn->port, hostname);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_78.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_78.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_78.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_78.cpp,17,"[""string"", ""member"", ""member""]",[],"set([u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name', u'hostname = conn -> http_proxy . host . name', u'size_t len', u'struct connectdata * conn', u'hostname = conn -> socks_proxy . host . name', u'char * buf'])","set([0, 1, 6, 8, 10, 12])","[['aprintf', '%s', '%d'], ['snprintf', 'buf', 'len', '%ld%s']]",2017-05-11T15:27:21,Brad King,6569998028629085174,311
299975908ada992800791fac7f3739050e0ae2a9,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-04-19 (d957e218)

Resolve conflicts in `CMakeLists.txt` in favor of the upstream version.
We will re-apply our logic as needed in following commits.",[],Utilities/cmcurl/lib/file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_36.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_36.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_36.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_95.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_95.cpp,476,475,478,477,"snprintf(buf, sizeof(data->state.buffer),
             ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", expected_size);","snprintf(buf, CURL_BUFSIZE(data->set.buffer_size),
             ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", expected_size);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_79.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_79.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_79.cpp,58,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_79.cpp,58,[],"[""member"", ""member"", ""bool"", ""&&"", ""&&""]","set([u'fstated = TRUE', u'data -> info . filetime = ( long ) statbuf . st_mtime', u'bool fstated = FALSE ;', u'struct Curl_easy * data = conn -> data ;'])","set([40, 41, 13, 15])","[['sizeof', 'state', 'buffer'], ['CURL_BUFSIZE', 'set', 'buffer_size']]",2017-05-11T15:27:21,Brad King,-1022847675782025841,544
299975908ada992800791fac7f3739050e0ae2a9,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-04-19 (d957e218)

Resolve conflicts in `CMakeLists.txt` in favor of the upstream version.
We will re-apply our logic as needed in following commits.",[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_37.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_37.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_37.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_96.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_96.cpp,2107,2107,2109,2109,"snprintf(buf, sizeof(conn->data->state.buffer),
                 ""%04d%02d%02d %02d:%02d:%02d GMT"",
                 year, month, day, hour, minute, second);","snprintf(buf, CURL_BUFSIZE(conn->data->set.buffer_size),
                 ""%04d%02d%02d %02d:%02d:%02d GMT"",
                 year, month, day, hour, minute, second);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_80.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_80.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_80.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_80.cpp,20,"[""char *"", ""member"", ""string"", ""int"", ""int"", ""int"", ""int"", ""int"", ""int""]","[""int"", ""sscanf_ret"", ""==""]","set([u'char * buf = data -> state . buffer ;', u'struct connectdata * conn', u'int year , month , day , hour , minute , second ;'])","set([0, 13, 14])","[['sizeof', 'state', 'buffer'], ['CURL_BUFSIZE', 'set', 'buffer_size']]",2017-05-11T15:27:21,Brad King,-1022847675782025841,544
299975908ada992800791fac7f3739050e0ae2a9,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-04-19 (d957e218)

Resolve conflicts in `CMakeLists.txt` in favor of the upstream version.
We will re-apply our logic as needed in following commits.",[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_37.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_37.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_37.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_97.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_97.cpp,2318,2318,2320,2320,"snprintf(buf, sizeof(data->state.buffer),
               ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", filesize);","snprintf(buf, CURL_BUFSIZE(data->set.buffer_size),
               ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", filesize);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_81.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_81.cpp,15,[],"[""int"", ""curlx_strtoofft_ret"", ""!=""]","set([u'filesize = ( ftpcode == 213 ) ? curlx_strtoofft ( buf + 4 , NULL , 0 ) : - 1'])",set([10]),"[['sizeof', 'state', 'buffer'], ['CURL_BUFSIZE', 'set', 'buffer_size']]",2017-05-11T15:27:21,Brad King,-1022847675782025841,544
299975908ada992800791fac7f3739050e0ae2a9,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-04-19 (d957e218)

Resolve conflicts in `CMakeLists.txt` in favor of the upstream version.
We will re-apply our logic as needed in following commits.",[],Utilities/cmcurl/lib/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_38.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_38.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_38.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_99.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_99.cpp,297,297,299,299,"f(data->state.buffer, sizeof(data->state.buffer), ""%s:%s"", user, pwd);","f(data->state.buffer, CURL_BUFSIZE(data->set.buffer_size),
           ""%s:%s"", user, pwd);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_82.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_82.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_82.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_82.cpp,21,"[""member"", ""member"", ""string"", ""member"", ""member""]",[],"set([u'struct Curl_easy * data = conn -> data ;', u'pwd = conn -> passwd', u'user = conn -> http_proxy . user', u'pwd = conn -> http_proxy . passwd', u'user = conn -> user'])","set([17, 18, 4, 13, 12])","[['sizeof', 'state', 'buffer'], ['CURL_BUFSIZE', 'set', 'buffer_size']]",2017-05-11T15:27:21,Brad King,-1022847675782025841,544
299975908ada992800791fac7f3739050e0ae2a9,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-04-19 (d957e218)

Resolve conflicts in `CMakeLists.txt` in favor of the upstream version.
We will re-apply our logic as needed in following commits.",[],Utilities/cmcurl/lib/url.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_40.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_40.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_40.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_101.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_101.cpp,641,644,644,648,,"DEBUGF(fprintf(stderr, ""Error: malloc of buffer failed\n""));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_83.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_83.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_83.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_83.cpp,26,[],"[""Curl_resolver_init_ret"", ""!""]","set([u'data -> state . buffer = malloc ( BUFSIZE + 1 )', u'data = calloc ( 1 , sizeof ( struct Curl_easy ) )'])","set([24, 6])","[[], ['DEBUGF', 'fprintf', 'stderr', 'Error', 'malloc', 'of', 'buffer', 'failed\\n']]",2017-05-11T15:27:21,Brad King,-8490730468436362984,312
299975908ada992800791fac7f3739050e0ae2a9,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2017-04-19 (d957e218)

Resolve conflicts in `CMakeLists.txt` in favor of the upstream version.
We will re-apply our logic as needed in following commits.",[],Utilities/cmcurl/lib/vtls/cyassl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_42.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_42.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_42.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_104.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_104.cpp,720,741,723,744,,"snprintf(buffer, size, ""wolfSSL/%s"", wolfSSL_lib_version());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_85.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_85.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_85.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_85.cpp,3,"[""char *"", ""size_t"", ""string"", ""macro""]",[],"set([u'char * buffer', u'size_t size'])",set([0]),"[[], ['snprintf', 'buffer', 'size', 'wolfSSL/%s', 'wolfSSL_lib_version']]",2017-05-11T15:27:21,Brad King,1407678327472749520,313
fd7d521c9d70655618db8232d45e5aaf81700f91,"curl 2017-04-19 (d957e218)

Code extracted from:

    https://github.com/curl/curl.git

at commit d957e2189fdc73cef0ff3d1fb58043d354754449 (curl-7_54_0).",[],lib/conncache.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_44.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_44.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_44.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_106.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_106.cpp,141,136,143,141,"aprintf(""%s:%d"", hostname, conn->port);","snprintf(buf, len, ""%ld%s"", conn->port, hostname);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_86.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_86.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_86.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_86.cpp,17,"[""string"", ""member"", ""member""]",[],"set([u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name', u'hostname = conn -> http_proxy . host . name', u'size_t len', u'struct connectdata * conn', u'hostname = conn -> socks_proxy . host . name', u'char * buf'])","set([0, 1, 6, 8, 10, 12])","[['aprintf', '%s', '%d'], ['snprintf', 'buf', 'len', '%ld%s']]",2017-05-11T15:26:45,Brad King,6569998028629085174,311
fd7d521c9d70655618db8232d45e5aaf81700f91,"curl 2017-04-19 (d957e218)

Code extracted from:

    https://github.com/curl/curl.git

at commit d957e2189fdc73cef0ff3d1fb58043d354754449 (curl-7_54_0).",[],lib/file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_45.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_45.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_45.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_107.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_107.cpp,476,475,478,477,"snprintf(buf, sizeof(data->state.buffer),
             ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", expected_size);","snprintf(buf, CURL_BUFSIZE(data->set.buffer_size),
             ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", expected_size);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_87.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_87.cpp,58,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_87.cpp,58,[],"[""member"", ""member"", ""macro"", ""&&"", ""&&""]","set([u'data -> info . filetime = ( long ) statbuf . st_mtime', u'fstated = TRUE', u'bool fstated = FALSE ;', u'struct Curl_easy * data = conn -> data ;'])","set([40, 41, 13, 15])","[['sizeof', 'state', 'buffer'], ['CURL_BUFSIZE', 'set', 'buffer_size']]",2017-05-11T15:26:45,Brad King,-1022847675782025841,544
fd7d521c9d70655618db8232d45e5aaf81700f91,"curl 2017-04-19 (d957e218)

Code extracted from:

    https://github.com/curl/curl.git

at commit d957e2189fdc73cef0ff3d1fb58043d354754449 (curl-7_54_0).",[],lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_46.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_46.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_46.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_108.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_108.cpp,2107,2107,2109,2109,"snprintf(buf, sizeof(conn->data->state.buffer),
                 ""%04d%02d%02d %02d:%02d:%02d GMT"",
                 year, month, day, hour, minute, second);","snprintf(buf, CURL_BUFSIZE(conn->data->set.buffer_size),
                 ""%04d%02d%02d %02d:%02d:%02d GMT"",
                 year, month, day, hour, minute, second);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_88.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_88.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_88.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_88.cpp,20,"[""char *"", ""member"", ""string"", ""int"", ""int"", ""int"", ""int"", ""int"", ""int""]","[""int"", ""sscanf_ret"", ""==""]","set([u'char * buf = data -> state . buffer ;', u'int year , month , day , hour , minute , second ;', u'struct connectdata * conn'])","set([0, 13, 14])","[['sizeof', 'state', 'buffer'], ['CURL_BUFSIZE', 'set', 'buffer_size']]",2017-05-11T15:26:45,Brad King,-1022847675782025841,544
fd7d521c9d70655618db8232d45e5aaf81700f91,"curl 2017-04-19 (d957e218)

Code extracted from:

    https://github.com/curl/curl.git

at commit d957e2189fdc73cef0ff3d1fb58043d354754449 (curl-7_54_0).",[],lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_46.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_46.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_46.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_109.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_109.cpp,2318,2318,2320,2320,"snprintf(buf, sizeof(data->state.buffer),
               ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", filesize);","snprintf(buf, CURL_BUFSIZE(data->set.buffer_size),
               ""Content-Length: %"" CURL_FORMAT_CURL_OFF_T ""\r\n"", filesize);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_89.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_89.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_89.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_89.cpp,15,[],"[""int"", ""curlx_strtoofft_ret"", ""!=""]","set([u'filesize = ( ftpcode == 213 ) ? curlx_strtoofft ( buf + 4 , NULL , 0 ) : - 1'])",set([10]),"[['sizeof', 'state', 'buffer'], ['CURL_BUFSIZE', 'set', 'buffer_size']]",2017-05-11T15:26:45,Brad King,-1022847675782025841,544
fd7d521c9d70655618db8232d45e5aaf81700f91,"curl 2017-04-19 (d957e218)

Code extracted from:

    https://github.com/curl/curl.git

at commit d957e2189fdc73cef0ff3d1fb58043d354754449 (curl-7_54_0).",[],lib/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_47.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_47.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_47.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_111.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_111.cpp,297,297,299,299,"f(data->state.buffer, sizeof(data->state.buffer), ""%s:%s"", user, pwd);","f(data->state.buffer, CURL_BUFSIZE(data->set.buffer_size),
           ""%s:%s"", user, pwd);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_90.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_90.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_90.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_90.cpp,21,"[""member"", ""member"", ""string"", ""member"", ""member""]",[],"set([u'user = conn -> user', u'user = conn -> http_proxy . user', u'pwd = conn -> http_proxy . passwd', u'pwd = conn -> passwd', u'struct Curl_easy * data = conn -> data ;'])","set([17, 18, 4, 13, 12])","[['sizeof', 'state', 'buffer'], ['CURL_BUFSIZE', 'set', 'buffer_size']]",2017-05-11T15:26:45,Brad King,-1022847675782025841,544
fd7d521c9d70655618db8232d45e5aaf81700f91,"curl 2017-04-19 (d957e218)

Code extracted from:

    https://github.com/curl/curl.git

at commit d957e2189fdc73cef0ff3d1fb58043d354754449 (curl-7_54_0).",[],lib/url.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_49.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_49.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_49.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_113.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_113.cpp,641,644,644,648,,"DEBUGF(fprintf(stderr, ""Error: malloc of buffer failed\n""));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_91.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_91.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_91.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_91.cpp,26,[],"[""Curl_resolver_init_ret"", ""!""]","set([u'data -> state . buffer = malloc ( BUFSIZE + 1 )', u'data = calloc ( 1 , sizeof ( struct Curl_easy ) )'])","set([24, 6])","[[], ['DEBUGF', 'fprintf', 'stderr', 'Error', 'malloc', 'of', 'buffer', 'failed\\n']]",2017-05-11T15:26:45,Brad King,-8490730468436362984,312
fd7d521c9d70655618db8232d45e5aaf81700f91,"curl 2017-04-19 (d957e218)

Code extracted from:

    https://github.com/curl/curl.git

at commit d957e2189fdc73cef0ff3d1fb58043d354754449 (curl-7_54_0).",[],lib/vtls/cyassl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_51.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_51.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_51.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_116.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_116.cpp,720,741,723,744,,"snprintf(buffer, size, ""wolfSSL/%s"", wolfSSL_lib_version());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_93.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_93.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_93.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_93.cpp,3,"[""char *"", ""size_t"", ""string"", ""macro""]",[],"set([u'char * buffer', u'size_t size'])",set([0]),"[[], ['snprintf', 'buffer', 'size', 'wolfSSL/%s', 'wolfSSL_lib_version']]",2017-05-11T15:26:45,Brad King,1407678327472749520,313
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_129.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_129.cpp,302,321,312,324,"archive_set_error(&a->archive, errno,
				    ""Couldn't change dir"");","archive_set_error(&a->archive, errno,
			    ""Can't change dir to read extended attributes"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_94.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_94.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_94.cpp,18,"[""member"", ""unkown"", ""string""]","[""a -> tree_enter_working_dir_ret"", ""null"", ""!=""]",set([u'struct archive_read_disk * a']),set([1]),"[['Couldn'], ['Can', 'to', 'read', 'extended', 'attributes']]",2017-02-20T13:04:00,Brad King,-9960272099563378747,314
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_131.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_131.cpp,436,505,450,539,,"archive_set_error(&a->archive, errno,
			    ""Couldn't translate ""
#if !HAVE_SUN_ACL
			    ""NFSv4 ""
#endif
			    ""ACLs"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_96.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_96.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_96.cpp,43,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_96.cpp,99,[],"[""acl_get_file_ret"", ""null"", ""!=""]","set([u'r = translate_acl ( a , entry , acl , ARCHIVE_ENTRY_ACL_TYPE_NFS4 )'])",set([96]),"[[], ['archive_set_error', '&a', 'archive', 'errno', 'Couldn', 't', 'translate', 'if', 'HAVE_SUN_ACL', 'NFSv4', 'endif', 'ACLs']]",2017-02-20T13:04:00,Brad King,-5778188671688277010,315
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_132.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_132.cpp,467,577,472,595,,"archive_set_error(&a->archive, errno,
			    ""Couldn't translate access ACLs"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_97.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_97.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_97.cpp,65,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_97.cpp,155,"[""acl_get_link_np_ret""]","[""acl_get_file_ret"", ""null"", ""!=""]","set([u'struct archive_read_disk * a', u'r = translate_acl ( a , entry , acl , ARCHIVE_ENTRY_ACL_TYPE_ACCESS )'])","set([1, 151])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Couldn', 't', 'translate', 'access', 'ACLs']]",2017-02-20T13:04:00,Brad King,-3979488799866140268,316
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_132.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_132.cpp,467,577,481,614,,"archive_set_error(&a->archive, errno,
				    ""Couldn't translate default ACLs"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_98.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_98.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_98.cpp,74,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_98.cpp,174,"[""acl_get_file_ret""]","[""acl_get_file_ret"", ""null"", ""!=""]","set([u'struct archive_read_disk * a', u'r = translate_acl ( a , entry , acl , ARCHIVE_ENTRY_ACL_TYPE_DEFAULT )'])","set([1, 170])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Couldn', 't', 'translate', 'default', 'ACLs']]",2017-02-20T13:04:00,Brad King,9666538383764693068,317
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_132.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_132.cpp,467,577,577,1178,,"archive_set_error(&a->archive, errno,
		    ""Failed to read ACL brand"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_99.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_99.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_99.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_99.cpp,26,[],"[""bool"", ""!""]","set([u'acl_t acl', u'struct archive_read_disk * a'])","set([1, 2])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'read', 'ACL', 'brand']]",2017-02-20T13:04:00,Brad King,3934652654161248639,318
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_132.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_132.cpp,467,577,577,1210,,"archive_set_error(&a->archive, errno,
		    ""Failed to get first ACL entry"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_103.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_103.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_103.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_103.cpp,58,[],"[""int""]","set([u'struct archive_read_disk * a', u's = acl_get_entry ( acl , ACL_FIRST_ENTRY , & acl_entry )'])","set([56, 1])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'first', 'ACL', 'entry']]",2017-02-20T13:04:00,Brad King,1933689404214747436,319
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_132.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_132.cpp,467,577,577,1226,,"archive_set_error(&a->archive, errno,
			    ""Failed to get ACL tag type"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_104.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_104.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_104.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_104.cpp,74,[],"[""int""]","set([u'struct archive_read_disk * a', u'acl_entry_t acl_entry ;'])","set([1, 12])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'ACL', 'tag', 'type']]",2017-02-20T13:04:00,Brad King,968123762615171843,320
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_133.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_133.cpp,604,1262,624,1306,,"archive_set_error(&a->archive, errno, ""Failed ""
				    ""to get ACL type from a NFSv4 ACL entry"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_105.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_105.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_105.cpp,95,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_105.cpp,154,[],"[""acl_get_entry_type_np_ret"", ""null"", ""==""]",set([u'acl_entry_t acl_entry ;']),set([12]),"[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'ACL', 'type', 'from', 'a', 'NFSv4', 'ACL', 'entry']]",2017-02-20T13:04:00,Brad King,-3317646396445934108,321
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_134.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_134.cpp,635,1321,644,1324,,"archive_set_error(&a->archive, errno,
				    ""Invalid NFSv4 ACL entry type"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_106.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_106.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_106.cpp,115,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_106.cpp,172,"[""acl_entry_t"", ""unkown""]","[""acl_tag_t""]","set([u'acl_entry_type_t acl_type ;', u'struct archive_read_disk * a'])","set([1, 6])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Invalid', 'NFSv4', 'ACL', 'entry', 'type']]",2017-02-20T13:04:00,Brad King,1714556506971384566,322
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_134.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_134.cpp,635,1321,644,1337,,"archive_set_error(&a->archive, errno,
				    ""Failed to get flagset from a NFSv4 ACL entry"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_107.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_107.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_107.cpp,115,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_107.cpp,185,"[""acl_entry_t"", ""unkown""]","[""acl_tag_t""]","set([u'struct archive_read_disk * a', u'acl_entry_t acl_entry ;'])","set([1, 12])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'flagset', 'from', 'a', 'NFSv4', 'ACL', 'entry']]",2017-02-20T13:04:00,Brad King,-4515158641691338678,323
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_134.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_134.cpp,635,1321,646,1345,,"archive_set_error(&a->archive, errno,
					    ""Failed to check flag in a NFSv4 ""
					    ""ACL flagset"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_108.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_108.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_108.cpp,117,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_108.cpp,193,"[""acl_flagset_t"", ""member""]","[""null"", ""unkown"", ""<""]","set([u'r = acl_get_flag_np ( acl_flagset , acl_inherit_map [ i ] . platform_inherit )'])",set([190]),"[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'check', 'flag', 'in', 'a', 'NFSv4', 'ACL', 'flagset']]",2017-02-20T13:04:00,Brad King,5013764185493101420,324
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_134.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_134.cpp,635,1321,653,1356,,"archive_set_error(&a->archive, errno,
			    ""Failed to get ACL permission set"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_109.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_109.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_109.cpp,124,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_109.cpp,204,"[""acl_entry_t"", ""unkown""]","[""acl_tag_t""]","set([u'struct archive_read_disk * a', u'acl_entry_t acl_entry ;'])","set([1, 12])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'ACL', 'permission', 'set']]",2017-02-20T13:04:00,Brad King,6088557535414020350,325
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_134.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_134.cpp,635,1321,659,1367,,"archive_set_error(&a->archive, errno,
				    ""Failed to check permission in an ACL permission set"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_110.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_110.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_110.cpp,130,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_110.cpp,215,"[""acl_permset_t"", ""member""]","[""null"", ""unkown"", ""<""]","set([u'r = ACL_GET_PERM ( acl_permset , acl_perm_map [ i ] . platform_perm )', u'struct archive_read_disk * a'])","set([1, 213])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'check', 'permission', 'in', 'an', 'ACL', 'permission', 'set']]",2017-02-20T13:04:00,Brad King,20669823776620883393,326
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_136.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_136.cpp,772,1486,785,1496,"archive_set_error(&a->archive, errno,
				    ""Couldn't access %s"", path);","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Couldn't determine file path to read ""
			    ""extended attributes"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_112.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_112.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_112.cpp,19,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_112.cpp,16,"[""member"", ""unkown"", ""string"", ""archive_entry_pathname_ret""]","[""a -> tree_enter_working_dir_ret"", ""null"", ""!=""]","set([u'path = archive_entry_sourcepath ( entry )', u'path = archive_entry_pathname ( entry )'])","set([11, 14])","[['errno', 'access', '%s'], ['ARCHIVE_ERRNO_MISC', 'determine', 'file', 'to', 'read', 'extended', 'attributes']]",2017-02-20T13:04:00,Brad King,-19823063286925878286,519
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_59.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_59.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_137.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_137.cpp,932,1645,945,1655,"archive_set_error(&a->archive, errno,
				    ""Couldn't access %s"", path);","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Couldn't determine file path to read ""
			    ""extended attributes"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_113.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_113.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_113.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_113.cpp,18,"[""member"", ""unkown"", ""string"", ""archive_entry_pathname_ret""]","[""a -> tree_enter_working_dir_ret"", ""null"", ""!=""]","set([u'path = archive_entry_sourcepath ( entry )', u'path = archive_entry_pathname ( entry )'])","set([16, 13])","[['errno', 'access', '%s'], ['ARCHIVE_ERRNO_MISC', 'determine', 'file', 'to', 'read', 'extended', 'attributes']]",2017-02-20T13:04:00,Brad King,-19823063286925878286,519
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_60.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_60.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_60.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_139.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_139.cpp,938,938,939,939,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_114.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_114.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_114.cpp,66,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_114.cpp,66,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_path_excluded_ret"", ""null"", ""<""]","set([u'struct archive_read_disk * a', u'r = archive_match_path_excluded ( a -> matching , entry )'])","set([64, 1])","[['Faild'], ['Failed']]",2017-02-20T13:04:00,Brad King,-3869741526334986372,545
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_60.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_60.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_60.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_140.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_140.cpp,1041,1041,1042,1042,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_115.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_115.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_115.cpp,169,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_115.cpp,169,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_time_excluded_ret"", ""null"", ""<""]","set([u'r = archive_match_time_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([105, 167, 92, 1])","[['Faild'], ['Failed']]",2017-02-20T13:04:00,Brad King,-3869741526334986372,545
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_60.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_60.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_60.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_141.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_141.cpp,1067,1067,1068,1068,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_116.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_116.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_116.cpp,195,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_116.cpp,195,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_owner_excluded_ret"", ""null"", ""<""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([193, 92, 105, 1])","[['Faild'], ['Failed']]",2017-02-20T13:04:00,Brad King,-3869741526334986372,545
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_61.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_61.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_61.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_143.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_143.cpp,803,802,804,803,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_117.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_117.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_117.cpp,50,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_117.cpp,50,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_path_excluded_ret"", ""null"", ""<""]","set([u'struct archive_read_disk * a', u'r = archive_match_path_excluded ( a -> matching , entry )'])","set([48, 1])","[['Faild'], ['Failed']]",2017-02-20T13:04:00,Brad King,-3869741526334986372,545
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_61.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_61.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_61.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_144.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_144.cpp,875,874,876,875,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_118.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_118.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_118.cpp,122,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_118.cpp,122,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_time_excluded_ret"", ""null"", ""<""]","set([u'r = archive_match_time_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([120, 1, 76, 89])","[['Faild'], ['Failed']]",2017-02-20T13:04:00,Brad King,-3869741526334986372,545
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_61.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_61.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_61.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_145.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_145.cpp,901,900,902,901,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_119.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_119.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_119.cpp,148,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_119.cpp,148,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_owner_excluded_ret"", ""null"", ""<""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([1, 146, 76, 89])","[['Faild'], ['Failed']]",2017-02-20T13:04:00,Brad King,-3869741526334986372,545
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_lz4.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_63.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_63.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_63.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_150.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_150.cpp,706,706,708,709,,"archive_set_error(&(self->archive->archive),
		    ARCHIVE_ERRNO_MISC, ""truncated lz4 input"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_120.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_120.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_120.cpp,36,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_120.cpp,37,"[""__archive_read_filter_ahead_ret"", ""member"", ""archive_le32dec_ret"", ""member""]","[""archive_le32dec_ret"", ""LZ4_COMPRESSBOUND_ret"", "">"", ""!""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[[], ['archive_set_error', '&', 'self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'truncated', 'lz4', 'input']]",2017-02-20T13:04:00,Brad King,-4456198018458209691,327
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_65.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_154.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_154.cpp,763,744,789,-1,"archive_set_error(&self->archive->archive, ENOMEM,
		    ""Can't allocate data for lzma decompression"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_121.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_121.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_121.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_121.cpp,-1,"[""member"", ""macro"", ""string""]","[""calloc_ret"", ""null"", ""=="", ""malloc_ret"", ""null"", ""=="", ""||""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ENOMEM', 'Can', 't', 'allocate', 'data', 'for', 'lzma', 'decompression'], []]",2017-02-20T13:04:00,Brad King,3531531328634521890,328
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_65.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_154.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_154.cpp,763,744,820,-1,"archive_set_error(&self->archive->archive, ARCHIVE_ERRNO_MISC,
	    ""Internal error initializing lzma library"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_122.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_122.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_122.cpp,45,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_122.cpp,-1,"[""member"", ""macro"", ""string""]","[""lzmadec_init_ret"", ""macro"", ""=="", ""!""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Internal', 'error', 'initializing', 'lzma', 'library'], []]",2017-02-20T13:04:00,Brad King,-11904606383582502671,329
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_65.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_154.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_154.cpp,763,744,826,-1,"archive_set_error(&self->archive->archive,
		    ARCHIVE_ERRNO_MISC,
		    ""Internal error initializing compression library: ""
		    ""invalid header"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_123.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_123.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_123.cpp,51,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_123.cpp,-1,[],"[""lzmadec_init_ret""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Internal', 'error', 'initializing', 'compression', 'library', 'invalid', 'header'], []]",2017-02-20T13:04:00,Brad King,11457210019582836653,330
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_65.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_154.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_154.cpp,763,744,832,-1,"archive_set_error(&self->archive->archive, ENOMEM,
		    ""Internal error initializing compression library: ""
		    ""out of memory"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_124.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_124.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_124.cpp,57,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_124.cpp,-1,[],"[""lzmadec_init_ret""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ENOMEM', 'Internal', 'error', 'initializing', 'compression', 'library', 'out', 'of', 'memory'], []]",2017-02-20T13:04:00,Brad King,-18674089344557423292,331
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_65.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_154.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_154.cpp,763,744,865,-1,"archive_set_error(&self->archive->archive,
			    ARCHIVE_ERRNO_MISC,
			    ""truncated lzma input"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_125.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_125.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_125.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_125.cpp,-1,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""=="", ""ssize_t"", ""null"", ""<"", ""&&""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'truncated', 'lzma', 'input'], []]",2017-02-20T13:04:00,Brad King,9403132268815171104,332
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_65.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_154.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_154.cpp,763,744,883,-1,"archive_set_error(&self->archive->archive,
			    ARCHIVE_ERRNO_MISC,
			    ""Insufficient compressed data"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_126.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_126.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_126.cpp,36,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_126.cpp,-1,"[""member"", ""macro"", ""string""]","[""lzmadec_decode_ret""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Insufficient', 'compressed', 'data'], []]",2017-02-20T13:04:00,Brad King,5019116586646410198,333
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_65.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_154.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_154.cpp,763,744,889,-1,"archive_set_error(&self->archive->archive,
			    ARCHIVE_ERRNO_MISC,
			    ""Lzma decompression failed"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_127.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_127.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_127.cpp,42,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_127.cpp,-1,"[""member"", ""macro"", ""string""]","[""lzmadec_decode_ret""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Lzma', 'decompression', 'failed'], []]",2017-02-20T13:04:00,Brad King,8187630216902498427,334
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_65.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_65.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_154.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_154.cpp,763,744,920,-1,"archive_set_error(&(self->archive->archive),
		    ARCHIVE_ERRNO_MISC,
		    ""Failed to clean up %s compressor"",
		    self->archive->archive.compression_name);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_128.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_128.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_128.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_128.cpp,-1,"[""member"", ""macro"", ""string"", ""member""]","[""lzmadec_end_ret""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&', 'self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Failed', 'to', 'clean', 'up', '%s', 'compressor', 'self', 'archive', 'archive', 'compression_name'], []]",2017-02-20T13:04:00,Brad King,-19962426169060094036,335
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_72.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_172.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_172.cpp,935,989,939,991,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Solaris NFSv4 ACLs not supported"");",acl_type = ARCHIVE_ENTRY_ACL_TYPE_ACCESS;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_129.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_129.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_129.cpp,53,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_129.cpp,51,"[""member"", ""macro"", ""string""]","[""bool""]","set([u""type += * p - '0'"", u'type = 0'])","set([32, 40])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Solaris', 'NFSv4', 'ACLs', 'not', 'supported'], ['acl_type', 'ARCHIVE_ENTRY_ACL_TYPE_ACCESS']]",2017-02-20T13:04:00,Brad King,-9707840371233183695,336
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_72.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_174.cpp,1128,1183,1129,1184,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Tar entry has negative size?"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Tar entry has negative size"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_130.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_130.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_130.cpp,23,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_130.cpp,23,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""<""]","set([u'struct tar * tar', u'tar -> entry_bytes_remaining = tar_atol ( header -> size , sizeof ( header -> size ) )', u'struct archive_read * a'])","set([1, 20])","[[], []]",2017-02-20T13:04:00,Brad King,0,550
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_72.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_174.cpp,1128,1183,1133,1191,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Tar entry size overflow"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_131.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_131.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_131.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_131.cpp,30,[],[],"set([u'struct tar * tar', u'tar -> entry_bytes_remaining = tar_atol ( header -> size , sizeof ( header -> size ) )', u'struct archive_read * a'])","set([1, 20])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Tar', 'entry', 'size', 'overflow']]",2017-02-20T13:04:00,Brad King,-2673393213761125965,337
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_72.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_176.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_176.cpp,1721,1854,1724,1859,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Non-regular file cannot be sparse"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_135.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_135.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_135.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_135.cpp,16,"[""const char *"", ""constant""]","[""member""]","set([u'const char * key', u'struct tar * tar', u'struct archive_read * a'])","set([1, 2])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Non', 'regular', 'file', 'cannot', 'be', 'sparse']]",2017-02-20T13:04:00,Brad King,-2985130117841326352,338
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_72.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_177.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_177.cpp,1803,1944,1819,-1,"archive_set_error(&a->archive, ENOMEM,
					    ""Can't allocate memory for ""
					    ""SCHILY.acl.access"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_136.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_136.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_136.cpp,109,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_136.cpp,-1,[],"[""archive_acl_parse_l_ret"", ""macro"", ""==""]","set([u'const char * key', u'struct tar * tar', u'struct archive_read * a'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'Can', 't', 'allocate', 'memory', 'for', 'SCHILY', 'acl', 'access'], []]",2017-02-20T13:04:00,Brad King,2437905826363707417,339
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_72.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_177.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_177.cpp,1803,1944,1824,-1,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""Parse error: SCHILY.acl.access"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_137.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_137.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_137.cpp,114,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_137.cpp,-1,"[""member"", ""macro"", ""constant""]","[""archive_acl_parse_l_ret"", ""macro"", ""=="", ""!""]","set([u'const char * key', u'struct tar * tar', u'struct archive_read * a'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Parse', 'error', 'SCHILY', 'acl', 'access'], []]",2017-02-20T13:04:00,Brad King,10414012361855127543,340
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_72.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_177.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_177.cpp,1803,1944,1843,-1,"archive_set_error(&a->archive, ENOMEM,
					    ""Can't allocate memory for ""
					    ""SCHILY.acl.default"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_138.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_138.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_138.cpp,133,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_138.cpp,-1,[],"[""archive_acl_parse_l_ret"", ""macro"", ""==""]","set([u'const char * key', u'struct tar * tar', u'struct archive_read * a'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'Can', 't', 'allocate', 'memory', 'for', 'SCHILY', 'acl', 'default'], []]",2017-02-20T13:04:00,Brad King,-11208121357267125919,341
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_72.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_72.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_177.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_177.cpp,1803,1944,1848,-1,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""Parse error: SCHILY.acl.default"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_139.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_139.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_139.cpp,138,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_139.cpp,-1,"[""member"", ""macro"", ""constant""]","[""archive_acl_parse_l_ret"", ""macro"", ""=="", ""!""]","set([u'const char * key', u'struct tar * tar', u'struct archive_read * a'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Parse', 'error', 'SCHILY', 'acl', 'default'], []]",2017-02-20T13:04:00,Brad King,-3232014821775705793,342
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_warc.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_73.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_73.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_73.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_180.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_180.cpp,255,254,262,260,"archive_set_error(
			&a->archive, ARCHIVE_ERRNO_MISC,
			""Unsupported record version"");","archive_set_error(
			&a->archive, ARCHIVE_ERRNO_MISC,
			""Invalid record version"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_140.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_140.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_140.cpp,52,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_140.cpp,51,"[""member"", ""macro"", ""string""]","[""_warc_rdver_ret"", ""constant"", "">""]","set([u'ver = _warc_rdver ( buf , eoh - buf )', u'struct archive_read * a'])","set([48, 1])","[['Unsupported'], ['Invalid']]",2017-02-20T13:04:00,Brad King,-877625416345101152,343
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_warc.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_73.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_73.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_73.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_181.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_181.cpp,285,293,286,294,"archive_string_sprintf(&w->sver,
			""WARC/%u.%u"", ver / 10000, ver % 10000);","archive_string_sprintf(&w->sver,
			""WARC/%u.%u"", ver / 10000, (ver % 10000) / 100);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_142.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_142.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_142.cpp,76,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_142.cpp,85,"[""member"", ""constant"", ""_warc_rdver_ret"", ""_warc_rdver_ret""]","[""_warc_rdver_ret"", ""member"", ""!=""]","set([u'struct warc_s * w = a -> format -> data ;', u'ver = _warc_rdver ( buf , eoh - buf )', u'w -> cntoff = 0U', u'w -> pool . str = realloc ( w -> pool . str , w -> pool . len )', u'w -> pver = ver'])","set([48, 88, 115, 4, 94])","[[], ['/', '100']]",2017-02-20T13:04:00,Brad King,163512114422638472,344
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_75.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_75.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_75.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_187.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_187.cpp,715,739,720,742,"fprintf(stderr,
		    ""Extra data field contents do not match reported size!\n"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Malformed extra data: Consumed %d bytes of %d bytes"",
		    (int)offset, (int)extra_length);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_151.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_151.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_151.cpp,300,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_151.cpp,322,"[""unkown"", ""string""]","[""int"", ""size_t"", ""!=""]","set([u'size_t extra_length', u'offset += datasize', u'struct archive_read * a', u'unsigned offset = 0 ;'])","set([1, 3, 319])","[['fprintf', 'stderr', 'Extra', 'field', 'contents', 'do', 'not', 'match', 'reported', 'size', '\\n'], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Malformed', 'extra', 'Consumed', '%d', 'bytes', 'of', '%d', 'bytes', 'int', 'offset', 'int', 'extra_length']]",2017-02-20T13:04:00,Brad King,-6594598628810060159,345
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_75.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_75.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_75.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_188.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_188.cpp,1136,1168,1143,1175,,"archive_set_error(&a->archive,
					    ARCHIVE_ERRNO_FILE_FORMAT,
					    ""Overflow of 64-bit file sizes"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_152.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_152.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_152.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_152.cpp,48,[],"[""bool""]","set([u'struct archive_read * a', u'uncompressed = archive_le64dec ( p + 16 )', u'compressed = archive_le64dec ( p + 8 )'])","set([1, 45, 46])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Overflow', 'of', '64', 'bit', 'file', 'sizes']]",2017-02-20T13:04:00,Brad King,10896413210951160928,520
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_75.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_75.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_75.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_190.cpp,1417,1456,1422,1463,,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_FILE_FORMAT,
				    ""Overflow of 64-bit file sizes"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_153.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_153.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_153.cpp,167,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_153.cpp,169,[],"[""bool""]","set([u'compressed = archive_le64dec ( p + 4 )', u'struct archive_read * a', u'uncompressed = archive_le64dec ( p + 12 )'])","set([1, 166, 167])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Overflow', 'of', '64', 'bit', 'file', 'sizes']]",2017-02-20T13:04:00,Brad King,10896413210951160928,520
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_76.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_76.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_76.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_200.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_200.cpp,2534,2807,2543,2817,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Invalid empty pathname"");","fsobj_error(a_eno, a_estr, ARCHIVE_ERRNO_MISC,
		    ""Invalid empty "", ""pathname"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_167.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_167.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_167.cpp,8,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_167.cpp,9,"[""member"", ""macro"", ""string""]","[""member"", ""char"", ""==""]","set([u'dest = src = path', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 7])","[['archive_set_error', '&a', 'archive'], ['fsobj_error', 'a_eno', 'a_estr']]",2017-02-20T13:04:00,Brad King,1357021031498472898,521
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_76.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_76.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_76.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_200.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_200.cpp,2534,2807,2554,2828,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			                  ""Path is absolute"");","fsobj_error(a_eno, a_estr, ARCHIVE_ERRNO_MISC,
			    ""Path is "", ""absolute"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_168.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_168.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_168.cpp,19,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_168.cpp,20,"[""member"", ""macro"", ""string""]","[""bool""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive'], ['fsobj_error', 'a_eno', 'a_estr']]",2017-02-20T13:04:00,Brad King,1357021031498472898,521
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_76.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_76.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_76.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_201.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_201.cpp,2580,2854,2583,2858,"archive_set_error(&a->archive,
						    ARCHIVE_ERRNO_MISC,
						    ""Path contains '..'"");","fsobj_error(a_eno, a_estr,
						    ARCHIVE_ERRNO_MISC,
						    ""Path contains "", ""'..'"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_169.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_169.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_169.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_169.cpp,50,"[""member"", ""macro"", ""constant""]","[""bool""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive'], ['fsobj_error', 'a_eno', 'a_estr']]",2017-02-20T13:04:00,Brad King,1357021031498472898,521
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_78.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_78.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_78.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_210.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_210.cpp,1086,1163,1094,-1,"archive_set_error(&a->archive, ENOMEM,
				    ""Can't allocate memory for ""
				    ""ACL.access"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_173.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_173.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_173.cpp,634,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_173.cpp,-1,[],"[""unkown"", ""macro"", ""==""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'Can', 't', 'allocate', 'memory', 'for', 'ACL', 'access'], []]",2017-02-20T13:04:00,Brad King,-1788796245078667839,346
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_78.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_78.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_78.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_210.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_210.cpp,1086,1163,1099,-1,"archive_set_error(&a->archive,
			    ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Can't translate ACL.access to UTF-8"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_174.cpp,639,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_174.cpp,-1,"[""member"", ""macro"", ""constant""]","[""unkown"", ""macro"", ""=="", ""!""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Can', 't', 'translate', 'ACL', 'access', 'to', 'UTF', '8'], []]",2017-02-20T13:04:00,Brad King,13491914572990724284,347
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_78.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_78.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_78.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_210.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_210.cpp,1086,1163,1113,-1,"archive_set_error(&a->archive, ENOMEM,
				    ""Can't allocate memory for ""
				    ""ACL.default"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_175.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_175.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_175.cpp,653,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_175.cpp,-1,[],"[""unkown"", ""macro"", ""==""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'Can', 't', 'allocate', 'memory', 'for', 'ACL', 'default'], []]",2017-02-20T13:04:00,Brad King,-15434823428709501175,348
a59a7ee95601f3496ec9ba9ae1283a8d980460bf,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2017-02-19 (100ee75a)",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_78.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_78.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_78.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_210.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_210.cpp,1086,1163,1118,-1,"archive_set_error(&a->archive,
			    ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Can't translate ACL.default to UTF-8"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_176.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_176.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_176.cpp,658,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_176.cpp,-1,"[""member"", ""macro"", ""constant""]","[""unkown"", ""macro"", ""=="", ""!""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Can', 't', 'translate', 'ACL', 'default', 'to', 'UTF', '8'], []]",2017-02-20T13:04:00,Brad King,-154112610640109052,349
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_213.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_213.cpp,302,321,312,324,"archive_set_error(&a->archive, errno,
				    ""Couldn't change dir"");","archive_set_error(&a->archive, errno,
			    ""Can't change dir to read extended attributes"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_177.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_177.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_177.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_177.cpp,18,"[""member"", ""unkown"", ""string""]","[""a -> tree_enter_working_dir_ret"", ""null"", ""!=""]",set([u'struct archive_read_disk * a']),set([1]),"[['Couldn'], ['Can', 'to', 'read', 'extended', 'attributes']]",2017-02-20T12:50:48,Brad King,-9960272099563378747,314
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_215.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_215.cpp,436,505,450,539,,"archive_set_error(&a->archive, errno,
			    ""Couldn't translate ""
#if !HAVE_SUN_ACL
			    ""NFSv4 ""
#endif
			    ""ACLs"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_179.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_179.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_179.cpp,43,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_179.cpp,99,[],"[""acl_get_fd_ret"", ""null"", ""!=""]","set([u'r = translate_acl ( a , entry , acl , ARCHIVE_ENTRY_ACL_TYPE_NFS4 )'])",set([96]),"[[], ['archive_set_error', '&a', 'archive', 'errno', 'Couldn', 't', 'translate', 'if', 'HAVE_SUN_ACL', 'NFSv4', 'endif', 'ACLs']]",2017-02-20T12:50:48,Brad King,-5778188671688277010,315
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_216.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_216.cpp,467,577,472,595,,"archive_set_error(&a->archive, errno,
			    ""Couldn't translate access ACLs"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_180.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_180.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_180.cpp,65,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_180.cpp,155,"[""acl_get_link_np_ret""]","[""acl_get_fd_ret"", ""null"", ""!=""]","set([u'struct archive_read_disk * a', u'r = translate_acl ( a , entry , acl , ARCHIVE_ENTRY_ACL_TYPE_ACCESS )'])","set([1, 151])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Couldn', 't', 'translate', 'access', 'ACLs']]",2017-02-20T12:50:48,Brad King,-3979488799866140268,316
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_216.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_216.cpp,467,577,481,614,,"archive_set_error(&a->archive, errno,
				    ""Couldn't translate default ACLs"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_181.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_181.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_181.cpp,74,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_181.cpp,174,"[""acl_get_file_ret""]","[""acl_get_file_ret"", ""null"", ""!=""]","set([u'struct archive_read_disk * a', u'r = translate_acl ( a , entry , acl , ARCHIVE_ENTRY_ACL_TYPE_DEFAULT )'])","set([1, 170])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Couldn', 't', 'translate', 'default', 'ACLs']]",2017-02-20T12:50:48,Brad King,9666538383764693068,317
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_216.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_216.cpp,467,577,577,1178,,"archive_set_error(&a->archive, errno,
		    ""Failed to read ACL brand"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_182.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_182.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_182.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_182.cpp,26,[],"[""bool"", ""!""]","set([u'acl_t acl', u'struct archive_read_disk * a'])","set([1, 2])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'read', 'ACL', 'brand']]",2017-02-20T12:50:48,Brad King,3934652654161248639,318
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_216.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_216.cpp,467,577,577,1210,,"archive_set_error(&a->archive, errno,
		    ""Failed to get first ACL entry"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_186.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_186.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_186.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_186.cpp,58,[],"[""bool"", ""!""]","set([u'struct archive_read_disk * a', u's = acl_get_entry ( acl , ACL_FIRST_ENTRY , & acl_entry )'])","set([56, 1])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'first', 'ACL', 'entry']]",2017-02-20T12:50:48,Brad King,1933689404214747436,319
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_216.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_216.cpp,467,577,577,1226,,"archive_set_error(&a->archive, errno,
			    ""Failed to get ACL tag type"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_187.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_187.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_187.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_187.cpp,74,[],"[""int""]","set([u'struct archive_read_disk * a', u'acl_entry_t acl_entry ;'])","set([1, 12])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'ACL', 'tag', 'type']]",2017-02-20T12:50:48,Brad King,968123762615171843,320
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_217.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_217.cpp,604,1262,624,1306,,"archive_set_error(&a->archive, errno, ""Failed ""
				    ""to get ACL type from a NFSv4 ACL entry"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_188.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_188.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_188.cpp,95,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_188.cpp,154,[],"[""acl_get_entry_type_np_ret"", ""null"", ""==""]",set([u'acl_entry_t acl_entry ;']),set([12]),"[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'ACL', 'type', 'from', 'a', 'NFSv4', 'ACL', 'entry']]",2017-02-20T12:50:48,Brad King,-3317646396445934108,321
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_218.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_218.cpp,635,1321,644,1324,,"archive_set_error(&a->archive, errno,
				    ""Invalid NFSv4 ACL entry type"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_189.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_189.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_189.cpp,115,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_189.cpp,172,"[""acl_entry_t"", ""unkown""]","[""acl_tag_t""]","set([u'acl_entry_type_t acl_type ;', u'struct archive_read_disk * a'])","set([1, 6])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Invalid', 'NFSv4', 'ACL', 'entry', 'type']]",2017-02-20T12:50:48,Brad King,1714556506971384566,322
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_218.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_218.cpp,635,1321,644,1337,,"archive_set_error(&a->archive, errno,
				    ""Failed to get flagset from a NFSv4 ACL entry"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_190.cpp,115,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_190.cpp,185,"[""acl_entry_t"", ""unkown""]","[""acl_tag_t""]","set([u'struct archive_read_disk * a', u'acl_entry_t acl_entry ;'])","set([1, 12])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'flagset', 'from', 'a', 'NFSv4', 'ACL', 'entry']]",2017-02-20T12:50:48,Brad King,-4515158641691338678,323
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_218.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_218.cpp,635,1321,646,1345,,"archive_set_error(&a->archive, errno,
					    ""Failed to check flag in a NFSv4 ""
					    ""ACL flagset"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_191.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_191.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_191.cpp,117,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_191.cpp,193,"[""acl_flagset_t"", ""member""]","[""null"", ""unkown"", ""<""]","set([u'r = acl_get_flag_np ( acl_flagset , acl_inherit_map [ i ] . platform_inherit )'])",set([190]),"[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'check', 'flag', 'in', 'a', 'NFSv4', 'ACL', 'flagset']]",2017-02-20T12:50:48,Brad King,5013764185493101420,324
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_218.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_218.cpp,635,1321,653,1356,,"archive_set_error(&a->archive, errno,
			    ""Failed to get ACL permission set"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_192.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_192.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_192.cpp,124,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_192.cpp,204,"[""acl_entry_t"", ""unkown""]","[""acl_tag_t""]","set([u'struct archive_read_disk * a', u'acl_entry_t acl_entry ;'])","set([1, 12])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'get', 'ACL', 'permission', 'set']]",2017-02-20T12:50:48,Brad King,6088557535414020350,325
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_218.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_218.cpp,635,1321,659,1367,,"archive_set_error(&a->archive, errno,
				    ""Failed to check permission in an ACL permission set"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_193.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_193.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_193.cpp,130,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_193.cpp,215,"[""acl_permset_t"", ""member""]","[""null"", ""unkown"", ""<""]","set([u'r = ACL_GET_PERM ( acl_permset , acl_perm_map [ i ] . platform_perm )', u'struct archive_read_disk * a'])","set([1, 213])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Failed', 'to', 'check', 'permission', 'in', 'an', 'ACL', 'permission', 'set']]",2017-02-20T12:50:48,Brad King,20669823776620883393,326
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_220.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_220.cpp,772,1486,785,1496,"archive_set_error(&a->archive, errno,
				    ""Couldn't access %s"", path);","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Couldn't determine file path to read ""
			    ""extended attributes"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_195.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_195.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_195.cpp,19,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_195.cpp,16,"[""member"", ""unkown"", ""string"", ""archive_entry_pathname_ret""]","[""a -> tree_enter_working_dir_ret"", ""null"", ""!=""]","set([u'path = archive_entry_sourcepath ( entry )', u'path = archive_entry_pathname ( entry )'])","set([11, 14])","[['errno', 'access', '%s'], ['ARCHIVE_ERRNO_MISC', 'determine', 'file', 'to', 'read', 'extended', 'attributes']]",2017-02-20T12:50:48,Brad King,-19823063286925878286,519
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_81.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_81.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_221.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_221.cpp,932,1645,945,1655,"archive_set_error(&a->archive, errno,
				    ""Couldn't access %s"", path);","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Couldn't determine file path to read ""
			    ""extended attributes"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_196.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_196.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_196.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_196.cpp,18,"[""member"", ""unkown"", ""string"", ""archive_entry_pathname_ret""]","[""a -> tree_enter_working_dir_ret"", ""null"", ""!=""]","set([u'path = archive_entry_pathname ( entry )', u'path = archive_entry_sourcepath ( entry )'])","set([16, 13])","[['errno', 'access', '%s'], ['ARCHIVE_ERRNO_MISC', 'determine', 'file', 'to', 'read', 'extended', 'attributes']]",2017-02-20T12:50:48,Brad King,-19823063286925878286,519
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_82.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_82.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_82.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_223.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_223.cpp,938,938,939,939,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_197.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_197.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_197.cpp,66,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_197.cpp,66,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_path_excluded_ret"", ""null"", ""<""]","set([u'struct archive_read_disk * a', u'r = archive_match_path_excluded ( a -> matching , entry )'])","set([64, 1])","[['Faild'], ['Failed']]",2017-02-20T12:50:48,Brad King,-3869741526334986372,545
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_82.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_82.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_82.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_224.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_224.cpp,1041,1041,1042,1042,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_198.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_198.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_198.cpp,169,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_198.cpp,169,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_time_excluded_ret"", ""null"", ""<""]","set([u'r = archive_match_time_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([1, 167, 92, 105])","[['Faild'], ['Failed']]",2017-02-20T12:50:48,Brad King,-3869741526334986372,545
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_82.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_82.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_82.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_225.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_225.cpp,1067,1067,1068,1068,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_199.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_199.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_199.cpp,195,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_199.cpp,195,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_owner_excluded_ret"", ""null"", ""<""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([1, 193, 92, 105])","[['Faild'], ['Failed']]",2017-02-20T12:50:48,Brad King,-3869741526334986372,545
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_83.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_83.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_83.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_227.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_227.cpp,803,802,804,803,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_200.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_200.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_200.cpp,50,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_200.cpp,50,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_path_excluded_ret"", ""null"", ""<""]","set([u'struct archive_read_disk * a', u'r = archive_match_path_excluded ( a -> matching , entry )'])","set([48, 1])","[['Faild'], ['Failed']]",2017-02-20T12:50:48,Brad King,-3869741526334986372,545
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_83.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_83.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_83.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_228.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_228.cpp,875,874,876,875,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_201.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_201.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_201.cpp,122,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_201.cpp,122,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_time_excluded_ret"", ""null"", ""<""]","set([u'r = archive_match_time_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([120, 1, 76, 89])","[['Faild'], ['Failed']]",2017-02-20T12:50:48,Brad King,-3869741526334986372,545
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_83.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_83.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_83.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_229.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_229.cpp,901,900,902,901,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));","archive_set_error(&(a->archive), errno,
			    ""Failed : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_202.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_202.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_202.cpp,148,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_202.cpp,148,"[""member"", ""unkown"", ""string"", ""archive_error_string_ret""]","[""archive_match_owner_excluded_ret"", ""null"", ""<""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([89, 146, 76, 1])","[['Faild'], ['Failed']]",2017-02-20T12:50:48,Brad King,-3869741526334986372,545
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_filter_lz4.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_85.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_85.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_85.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_234.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_234.cpp,706,706,708,709,,"archive_set_error(&(self->archive->archive),
		    ARCHIVE_ERRNO_MISC, ""truncated lz4 input"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_203.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_203.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_203.cpp,36,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_203.cpp,37,"[""__archive_read_filter_ahead_ret"", ""member"", ""archive_le32dec_ret"", ""member""]","[""archive_le32dec_ret"", ""LZ4_COMPRESSBOUND_ret"", "">"", ""!""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[[], ['archive_set_error', '&', 'self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'truncated', 'lz4', 'input']]",2017-02-20T12:50:48,Brad King,-4456198018458209691,327
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_87.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_238.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_238.cpp,763,744,789,-1,"archive_set_error(&self->archive->archive, ENOMEM,
		    ""Can't allocate data for lzma decompression"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_204.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_204.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_204.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_204.cpp,-1,"[""member"", ""macro"", ""string""]","[""calloc_ret"", ""null"", ""=="", ""malloc_ret"", ""null"", ""=="", ""||""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ENOMEM', 'Can', 't', 'allocate', 'data', 'for', 'lzma', 'decompression'], []]",2017-02-20T12:50:48,Brad King,3531531328634521890,328
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_87.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_238.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_238.cpp,763,744,820,-1,"archive_set_error(&self->archive->archive, ARCHIVE_ERRNO_MISC,
	    ""Internal error initializing lzma library"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_205.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_205.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_205.cpp,45,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_205.cpp,-1,"[""member"", ""macro"", ""string""]","[""lzmadec_init_ret"", ""macro"", ""=="", ""!""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Internal', 'error', 'initializing', 'lzma', 'library'], []]",2017-02-20T12:50:48,Brad King,-11904606383582502671,329
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_87.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_238.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_238.cpp,763,744,826,-1,"archive_set_error(&self->archive->archive,
		    ARCHIVE_ERRNO_MISC,
		    ""Internal error initializing compression library: ""
		    ""invalid header"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_206.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_206.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_206.cpp,51,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_206.cpp,-1,[],"[""lzmadec_init_ret""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Internal', 'error', 'initializing', 'compression', 'library', 'invalid', 'header'], []]",2017-02-20T12:50:48,Brad King,11457210019582836653,330
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_87.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_238.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_238.cpp,763,744,832,-1,"archive_set_error(&self->archive->archive, ENOMEM,
		    ""Internal error initializing compression library: ""
		    ""out of memory"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_207.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_207.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_207.cpp,57,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_207.cpp,-1,[],"[""lzmadec_init_ret""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ENOMEM', 'Internal', 'error', 'initializing', 'compression', 'library', 'out', 'of', 'memory'], []]",2017-02-20T12:50:48,Brad King,-18674089344557423292,331
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_87.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_238.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_238.cpp,763,744,865,-1,"archive_set_error(&self->archive->archive,
			    ARCHIVE_ERRNO_MISC,
			    ""truncated lzma input"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_208.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_208.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_208.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_208.cpp,-1,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""=="", ""ssize_t"", ""null"", ""<"", ""&&""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'truncated', 'lzma', 'input'], []]",2017-02-20T12:50:48,Brad King,9403132268815171104,332
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_87.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_238.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_238.cpp,763,744,883,-1,"archive_set_error(&self->archive->archive,
			    ARCHIVE_ERRNO_MISC,
			    ""Insufficient compressed data"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_209.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_209.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_209.cpp,36,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_209.cpp,-1,"[""member"", ""macro"", ""string""]","[""lzmadec_decode_ret""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Insufficient', 'compressed', 'data'], []]",2017-02-20T12:50:48,Brad King,5019116586646410198,333
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_87.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_238.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_238.cpp,763,744,889,-1,"archive_set_error(&self->archive->archive,
			    ARCHIVE_ERRNO_MISC,
			    ""Lzma decompression failed"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_210.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_210.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_210.cpp,42,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_210.cpp,-1,"[""member"", ""macro"", ""string""]","[""lzmadec_decode_ret""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Lzma', 'decompression', 'failed'], []]",2017-02-20T12:50:48,Brad King,8187630216902498427,334
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_87.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_87.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_238.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_238.cpp,763,744,920,-1,"archive_set_error(&(self->archive->archive),
		    ARCHIVE_ERRNO_MISC,
		    ""Failed to clean up %s compressor"",
		    self->archive->archive.compression_name);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_211.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_211.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_211.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_211.cpp,-1,"[""member"", ""macro"", ""string"", ""member""]","[""lzmadec_end_ret""]","set([u'struct archive_read_filter * self', u'read_buf = __archive_read_filter_ahead ( self -> upstream , 4 + compressed , NULL )'])","set([1, 34])","[['archive_set_error', '&', 'self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Failed', 'to', 'clean', 'up', '%s', 'compressor', 'self', 'archive', 'archive', 'compression_name'], []]",2017-02-20T12:50:48,Brad King,-19962426169060094036,335
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_94.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_256.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_256.cpp,935,989,939,991,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Solaris NFSv4 ACLs not supported"");",acl_type = ARCHIVE_ENTRY_ACL_TYPE_ACCESS;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_212.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_212.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_212.cpp,53,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_212.cpp,51,"[""member"", ""macro"", ""string""]","[""bool""]","set([u""type += * p - '0'"", u'type = 0'])","set([32, 40])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Solaris', 'NFSv4', 'ACLs', 'not', 'supported'], ['acl_type', 'ARCHIVE_ENTRY_ACL_TYPE_ACCESS']]",2017-02-20T12:50:48,Brad King,-9707840371233183695,336
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_94.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_258.cpp,1128,1183,1129,1184,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Tar entry has negative size?"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Tar entry has negative size"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_213.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_213.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_213.cpp,23,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_213.cpp,23,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""<""]","set([u'struct tar * tar', u'tar -> entry_bytes_remaining = tar_atol ( header -> size , sizeof ( header -> size ) )', u'struct archive_read * a'])","set([1, 20])","[[], []]",2017-02-20T12:50:48,Brad King,0,550
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_94.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_258.cpp,1128,1183,1133,1191,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Tar entry size overflow"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_214.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_214.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_214.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_214.cpp,30,[],[],"set([u'struct tar * tar', u'tar -> entry_bytes_remaining = tar_atol ( header -> size , sizeof ( header -> size ) )', u'struct archive_read * a'])","set([1, 20])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Tar', 'entry', 'size', 'overflow']]",2017-02-20T12:50:48,Brad King,-2673393213761125965,337
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_94.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_260.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_260.cpp,1721,1854,1724,1859,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Non-regular file cannot be sparse"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_218.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_218.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_218.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_218.cpp,16,"[""const char *"", ""constant""]","[""member""]","set([u'const char * key', u'struct tar * tar', u'struct archive_read * a'])","set([1, 2])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Non', 'regular', 'file', 'cannot', 'be', 'sparse']]",2017-02-20T12:50:48,Brad King,-2985130117841326352,338
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_94.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_261.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_261.cpp,1803,1944,1819,-1,"archive_set_error(&a->archive, ENOMEM,
					    ""Can't allocate memory for ""
					    ""SCHILY.acl.access"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_219.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_219.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_219.cpp,109,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_219.cpp,-1,[],"[""archive_acl_parse_l_ret"", ""macro"", ""==""]","set([u'const char * key', u'struct tar * tar', u'struct archive_read * a'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'Can', 't', 'allocate', 'memory', 'for', 'SCHILY', 'acl', 'access'], []]",2017-02-20T12:50:48,Brad King,2437905826363707417,339
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_94.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_261.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_261.cpp,1803,1944,1824,-1,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""Parse error: SCHILY.acl.access"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_220.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_220.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_220.cpp,114,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_220.cpp,-1,"[""member"", ""macro"", ""constant""]","[""archive_acl_parse_l_ret"", ""macro"", ""=="", ""!""]","set([u'const char * key', u'struct tar * tar', u'struct archive_read * a'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Parse', 'error', 'SCHILY', 'acl', 'access'], []]",2017-02-20T12:50:48,Brad King,10414012361855127543,340
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_94.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_261.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_261.cpp,1803,1944,1843,-1,"archive_set_error(&a->archive, ENOMEM,
					    ""Can't allocate memory for ""
					    ""SCHILY.acl.default"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_221.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_221.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_221.cpp,133,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_221.cpp,-1,[],"[""archive_acl_parse_l_ret"", ""macro"", ""==""]","set([u'const char * key', u'struct tar * tar', u'struct archive_read * a'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'Can', 't', 'allocate', 'memory', 'for', 'SCHILY', 'acl', 'default'], []]",2017-02-20T12:50:48,Brad King,-11208121357267125919,341
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_94.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_94.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_261.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_261.cpp,1803,1944,1848,-1,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""Parse error: SCHILY.acl.default"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_222.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_222.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_222.cpp,138,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_222.cpp,-1,"[""member"", ""macro"", ""constant""]","[""archive_acl_parse_l_ret"", ""macro"", ""=="", ""!""]","set([u'const char * key', u'struct tar * tar', u'struct archive_read * a'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Parse', 'error', 'SCHILY', 'acl', 'default'], []]",2017-02-20T12:50:48,Brad King,-3232014821775705793,342
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_warc.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_95.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_95.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_95.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_264.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_264.cpp,255,254,262,260,"archive_set_error(
			&a->archive, ARCHIVE_ERRNO_MISC,
			""Unsupported record version"");","archive_set_error(
			&a->archive, ARCHIVE_ERRNO_MISC,
			""Invalid record version"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_223.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_223.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_223.cpp,52,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_223.cpp,51,"[""member"", ""macro"", ""string""]","[""_warc_rdver_ret"", ""constant"", "">""]","set([u'ver = _warc_rdver ( buf , eoh - buf )', u'struct archive_read * a'])","set([48, 1])","[['Unsupported'], ['Invalid']]",2017-02-20T12:50:48,Brad King,-877625416345101152,343
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_warc.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_95.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_95.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_95.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_265.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_265.cpp,285,293,286,294,"archive_string_sprintf(&w->sver,
			""WARC/%u.%u"", ver / 10000, ver % 10000);","archive_string_sprintf(&w->sver,
			""WARC/%u.%u"", ver / 10000, (ver % 10000) / 100);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_225.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_225.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_225.cpp,76,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_225.cpp,85,"[""member"", ""constant"", ""_warc_rdver_ret"", ""_warc_rdver_ret""]","[""_warc_rdver_ret"", ""member"", ""!=""]","set([u'struct warc_s * w = a -> format -> data ;', u'ver = _warc_rdver ( buf , eoh - buf )', u'w -> cntoff = 0U', u'w -> pool . str = realloc ( w -> pool . str , w -> pool . len )', u'w -> pver = ver'])","set([88, 48, 115, 4, 94])","[[], ['/', '100']]",2017-02-20T12:50:48,Brad King,163512114422638472,344
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_97.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_97.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_97.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_271.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_271.cpp,715,739,720,742,"fprintf(stderr,
		    ""Extra data field contents do not match reported size!\n"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Malformed extra data: Consumed %d bytes of %d bytes"",
		    (int)offset, (int)extra_length);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_234.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_234.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_234.cpp,300,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_234.cpp,322,"[""unkown"", ""string""]","[""int"", ""size_t"", ""!=""]","set([u'size_t extra_length', u'offset += datasize', u'struct archive_read * a', u'unsigned offset = 0 ;'])","set([1, 3, 319])","[['fprintf', 'stderr', 'Extra', 'field', 'contents', 'do', 'not', 'match', 'reported', 'size', '\\n'], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Malformed', 'extra', 'Consumed', '%d', 'bytes', 'of', '%d', 'bytes', 'int', 'offset', 'int', 'extra_length']]",2017-02-20T12:50:48,Brad King,-6594598628810060159,345
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_97.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_97.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_97.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_272.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_272.cpp,1136,1168,1143,1175,,"archive_set_error(&a->archive,
					    ARCHIVE_ERRNO_FILE_FORMAT,
					    ""Overflow of 64-bit file sizes"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_235.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_235.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_235.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_235.cpp,48,[],"[""bool""]","set([u'struct archive_read * a', u'uncompressed = archive_le64dec ( p + 16 )', u'compressed = archive_le64dec ( p + 8 )'])","set([1, 45, 46])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Overflow', 'of', '64', 'bit', 'file', 'sizes']]",2017-02-20T12:50:48,Brad King,10896413210951160928,520
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_97.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_97.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_97.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_274.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_274.cpp,1417,1456,1422,1463,,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_FILE_FORMAT,
				    ""Overflow of 64-bit file sizes"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_236.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_236.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_236.cpp,167,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_236.cpp,169,[],"[""bool""]","set([u'compressed = archive_le64dec ( p + 4 )', u'struct archive_read * a', u'uncompressed = archive_le64dec ( p + 12 )'])","set([1, 166, 167])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Overflow', 'of', '64', 'bit', 'file', 'sizes']]",2017-02-20T12:50:48,Brad King,10896413210951160928,520
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_98.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_98.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_98.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_284.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_284.cpp,2534,2807,2543,2817,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Invalid empty pathname"");","fsobj_error(a_eno, a_estr, ARCHIVE_ERRNO_MISC,
		    ""Invalid empty "", ""pathname"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_250.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_250.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_250.cpp,8,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_250.cpp,9,"[""member"", ""macro"", ""string""]","[""member"", ""char"", ""==""]","set([u'dest = src = path', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 7])","[['archive_set_error', '&a', 'archive'], ['fsobj_error', 'a_eno', 'a_estr']]",2017-02-20T12:50:48,Brad King,1357021031498472898,521
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_98.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_98.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_98.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_284.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_284.cpp,2534,2807,2554,2828,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			                  ""Path is absolute"");","fsobj_error(a_eno, a_estr, ARCHIVE_ERRNO_MISC,
			    ""Path is "", ""absolute"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_251.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_251.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_251.cpp,19,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_251.cpp,20,"[""member"", ""macro"", ""string""]","[""bool""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive'], ['fsobj_error', 'a_eno', 'a_estr']]",2017-02-20T12:50:48,Brad King,1357021031498472898,521
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_98.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_98.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_98.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_285.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_285.cpp,2580,2854,2583,2858,"archive_set_error(&a->archive,
						    ARCHIVE_ERRNO_MISC,
						    ""Path contains '..'"");","fsobj_error(a_eno, a_estr,
						    ARCHIVE_ERRNO_MISC,
						    ""Path contains "", ""'..'"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_252.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_252.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_252.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_252.cpp,50,"[""member"", ""macro"", ""constant""]","[""bool""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive'], ['fsobj_error', 'a_eno', 'a_estr']]",2017-02-20T12:50:48,Brad King,1357021031498472898,521
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_100.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_100.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_100.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_294.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_294.cpp,1086,1163,1094,-1,"archive_set_error(&a->archive, ENOMEM,
				    ""Can't allocate memory for ""
				    ""ACL.access"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_256.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_256.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_256.cpp,634,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_256.cpp,-1,[],"[""unkown"", ""macro"", ""==""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'Can', 't', 'allocate', 'memory', 'for', 'ACL', 'access'], []]",2017-02-20T12:50:48,Brad King,-1788796245078667839,346
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_100.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_100.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_100.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_294.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_294.cpp,1086,1163,1099,-1,"archive_set_error(&a->archive,
			    ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Can't translate ACL.access to UTF-8"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_257.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_257.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_257.cpp,639,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_257.cpp,-1,"[""member"", ""macro"", ""constant""]","[""unkown"", ""macro"", ""=="", ""!""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Can', 't', 'translate', 'ACL', 'access', 'to', 'UTF', '8'], []]",2017-02-20T12:50:48,Brad King,13491914572990724284,347
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_100.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_100.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_100.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_294.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_294.cpp,1086,1163,1113,-1,"archive_set_error(&a->archive, ENOMEM,
				    ""Can't allocate memory for ""
				    ""ACL.default"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_258.cpp,653,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_258.cpp,-1,[],"[""unkown"", ""macro"", ""==""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'Can', 't', 'allocate', 'memory', 'for', 'ACL', 'default'], []]",2017-02-20T12:50:48,Brad King,-15434823428709501175,348
c206211af647dd1f7039da91c34c9c72e50aefdf,"LibArchive 2017-02-19 (100ee75a)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 100ee75a01f1f785fc681f616db49a33405f8bf3 (v3.3.0).",[],libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_100.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_100.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_100.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_294.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_294.cpp,1086,1163,1118,-1,"archive_set_error(&a->archive,
			    ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Can't translate ACL.default to UTF-8"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_259.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_259.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_259.cpp,658,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_259.cpp,-1,"[""member"", ""macro"", ""constant""]","[""unkown"", ""macro"", ""=="", ""!""]","set([u'int flags', u'int * a_eno', u'struct archive_string * a_estr'])","set([1, 2])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Can', 't', 'translate', 'ACL', 'default', 'to', 'UTF', '8'], []]",2017-02-20T12:50:48,Brad King,-154112610640109052,349
1df9d5f91944e0b5ba00815d55bb7dc545053b4c,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-12-22 (44b9b4d4)",[],Utilities/cmcurl/lib/socks_gssapi.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_104.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_104.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_104.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_298.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_298.cpp,134,135,150,152,"snprintf(service.value, service.length+1, ""%s@%s"",
             serviceptr, conn->proxy.name);","snprintf(service.value, service.length+1, ""%s@%s"",
             serviceptr, conn->socks_proxy.host.name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_260.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_260.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_260.cpp,49,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_260.cpp,51,"[""member"", ""member"", ""string"", ""const char *"", ""member""]","[""member"", ""!""]","set([u'service . value = malloc ( serviceptr_length + strlen ( conn -> socks_proxy . host . name ) + 2 )', u'const char * serviceptr = data -> set . str [ STRING_PROXY_SERVICE_NAME ] ? data -> set . str [ STRING_PROXY_SERVICE_NAME ] : ""rcmd"" ;', u'struct connectdata * conn', u'service . length = serviceptr_length + strlen ( conn -> socks_proxy . host . name ) + 1'])","set([1, 50, 46, 22])","[['proxy'], ['socks_proxy', 'host']]",2017-02-07T16:38:00,Brad King,-42287986040224554,350
1df9d5f91944e0b5ba00815d55bb7dc545053b4c,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-12-22 (44b9b4d4)",[],Utilities/cmcurl/lib/vauth/digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_106.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_106.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_106.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_301.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_301.cpp,684,684,686,690,"snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             Curl_rand(data), Curl_rand(data),
             Curl_rand(data), Curl_rand(data));","snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             rnd[0], rnd[1], rnd[2], rnd[3]);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_261.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_261.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_261.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_261.cpp,29,"[""char *"", ""unkown"", ""string"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret""]","[""member""]","set([u'result = Curl_rand ( data , & rnd [ 0 ] , 4 )', u'char cnoncebuf [ 33 ] ;', u'unsigned int rnd [ 4 ] ;'])","set([25, 26, 14])","[['Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data'], ['rnd[0]', 'rnd[1]', 'rnd[2]', 'rnd[3]']]",2017-02-07T16:38:00,Brad King,34369324096795992142,351
4cc2908fdaaf1ab8afe5c2ae5dbb3401859a9aab,"curl 2016-12-22 (44b9b4d4)

Code extracted from:

    https://github.com/curl/curl.git

at commit 44b9b4d4f56d6f6de92c89636994c03984e9cd01 (curl-7_52_1).",[],lib/socks_gssapi.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_111.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_111.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_111.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_307.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_307.cpp,134,135,150,152,"snprintf(service.value, service.length+1, ""%s@%s"",
             serviceptr, conn->proxy.name);","snprintf(service.value, service.length+1, ""%s@%s"",
             serviceptr, conn->socks_proxy.host.name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_262.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_262.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_262.cpp,49,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_262.cpp,51,"[""member"", ""member"", ""string"", ""const char *"", ""member""]","[""member"", ""!""]","set([u'service . value = malloc ( serviceptr_length + strlen ( conn -> socks_proxy . host . name ) + 2 )', u'const char * serviceptr = data -> set . str [ STRING_PROXY_SERVICE_NAME ] ? data -> set . str [ STRING_PROXY_SERVICE_NAME ] : ""rcmd"" ;', u'struct connectdata * conn', u'service . length = serviceptr_length + strlen ( conn -> socks_proxy . host . name ) + 1'])","set([1, 50, 46, 22])","[['proxy'], ['socks_proxy', 'host']]",2017-02-07T16:37:30,Brad King,-42287986040224554,350
4cc2908fdaaf1ab8afe5c2ae5dbb3401859a9aab,"curl 2016-12-22 (44b9b4d4)

Code extracted from:

    https://github.com/curl/curl.git

at commit 44b9b4d4f56d6f6de92c89636994c03984e9cd01 (curl-7_52_1).",[],lib/vauth/digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_113.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_113.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_113.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_310.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_310.cpp,684,684,686,690,"snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             Curl_rand(data), Curl_rand(data),
             Curl_rand(data), Curl_rand(data));","snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             rnd[0], rnd[1], rnd[2], rnd[3]);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_263.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_263.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_263.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_263.cpp,29,"[""char *"", ""unkown"", ""string"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret""]","[""member""]","set([u'result = Curl_rand ( data , & rnd [ 0 ] , 4 )', u'char cnoncebuf [ 33 ] ;', u'unsigned int rnd [ 4 ] ;'])","set([25, 26, 14])","[['Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data'], ['rnd[0]', 'rnd[1]', 'rnd[2]', 'rnd[3]']]",2017-02-07T16:37:30,Brad King,34369324096795992142,351
c5df1f165c7f8f1e31e3144d326c6836af2e678d,"Regenerate lexer source code

Revise the manual procedure in the `*Lexer.in.l` files.  Some of our
post-processing steps are no longer necessary with the current set of
supported compilers.  Some steps changed with newer versions of flex.

Then regenerate all lexers with flex version 2.6.1.",[],Source/cmCommandArgumentLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_117.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_117.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_117.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_321.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_321.cpp,1802,1809,1813,1820,"yy_fatal_error( ""cmCommandArgument_yyset_lineno called with no buffer"" , yyscanner);","YY_FATAL_ERROR( ""cmCommandArgument_yyset_lineno called with no buffer"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_264.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_264.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_264.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_264.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([]),set([]),"[['yy_fatal_error', 'yyscanner'], ['YY_FATAL_ERROR']]",2016-12-14T14:40:33,Brad King,-3528205590648888989,546
c5df1f165c7f8f1e31e3144d326c6836af2e678d,"Regenerate lexer source code

Revise the manual procedure in the `*Lexer.in.l` files.  Some of our
post-processing steps are no longer necessary with the current set of
supported compilers.  Some steps changed with newer versions of flex.

Then regenerate all lexers with flex version 2.6.1.",[],Source/cmCommandArgumentLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_117.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_117.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_117.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_321.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_321.cpp,1802,1809,1828,1835,"yy_fatal_error( ""cmCommandArgument_yyset_column called with no buffer"" , yyscanner);","YY_FATAL_ERROR( ""cmCommandArgument_yyset_column called with no buffer"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_265.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_265.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_265.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_265.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([]),set([]),"[['yy_fatal_error', 'yyscanner'], ['YY_FATAL_ERROR']]",2016-12-14T14:40:33,Brad King,-3528205590648888989,546
c5df1f165c7f8f1e31e3144d326c6836af2e678d,"Regenerate lexer source code

Revise the manual procedure in the `*Lexer.in.l` files.  Some of our
post-processing steps are no longer necessary with the current set of
supported compilers.  Some steps changed with newer versions of flex.

Then regenerate all lexers with flex version 2.6.1.",[],Source/cmExprLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_118.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_118.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_118.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_323.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_323.cpp,676,684,1097,1125,,"YY_FATAL_ERROR( ""out of dynamic memory in yy_get_next_buffer()"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_266.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_266.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_266.cpp,116,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_266.cpp,121,[],"[""member"", ""null"", ""=="", ""!""]","set([u'YY_CURRENT_BUFFER_LVALUE -> yy_ch_buf = ( char * ) cmExpr_yyrealloc ( ( void * ) YY_CURRENT_BUFFER_LVALUE -> yy_ch_buf , new_size , yyscanner )'])",set([119]),"[[], ['YY_FATAL_ERROR', 'out', 'of', 'dynamic', 'memory', 'in', 'yy_get_next_buffer']]",2016-12-14T14:40:33,Brad King,24360157688648809926,483
c5df1f165c7f8f1e31e3144d326c6836af2e678d,"Regenerate lexer source code

Revise the manual procedure in the `*Lexer.in.l` files.  Some of our
post-processing steps are no longer necessary with the current set of
supported compilers.  Some steps changed with newer versions of flex.

Then regenerate all lexers with flex version 2.6.1.",[],Source/cmExprLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_118.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_118.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_118.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_325.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_325.cpp,1454,1523,1491,1558,,"YY_FATAL_ERROR( ""out of dynamic memory in cmExpr_yyensure_buffer_stack()"" );",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_268.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_268.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_268.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_268.cpp,16,[],"[""member""]","set([u'yyg -> yy_buffer_stack = ( struct yy_buffer_state * * ) cmExpr_yyalloc ( num_to_alloc * sizeof ( struct yy_buffer_state * ) , yyscanner )', u'struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;'])","set([3, 12])","[[], ['YY_FATAL_ERROR', 'out', 'of', 'dynamic', 'memory', 'in', 'cmExpr_yyensure_buffer_stack']]",2016-12-14T14:40:33,Brad King,25416020386542938098,22
c5df1f165c7f8f1e31e3144d326c6836af2e678d,"Regenerate lexer source code

Revise the manual procedure in the `*Lexer.in.l` files.  Some of our
post-processing steps are no longer necessary with the current set of
supported compilers.  Some steps changed with newer versions of flex.

Then regenerate all lexers with flex version 2.6.1.",[],Source/cmExprLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_118.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_118.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_118.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_327.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_327.cpp,1709,1784,1720,1795,"yy_fatal_error( ""cmExpr_yyset_lineno called with no buffer"" , yyscanner);","YY_FATAL_ERROR( ""cmExpr_yyset_lineno called with no buffer"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_270.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_270.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_270.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_270.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([]),set([]),"[['yy_fatal_error', 'yyscanner'], ['YY_FATAL_ERROR']]",2016-12-14T14:40:33,Brad King,-3528205590648888989,546
c5df1f165c7f8f1e31e3144d326c6836af2e678d,"Regenerate lexer source code

Revise the manual procedure in the `*Lexer.in.l` files.  Some of our
post-processing steps are no longer necessary with the current set of
supported compilers.  Some steps changed with newer versions of flex.

Then regenerate all lexers with flex version 2.6.1.",[],Source/cmExprLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_118.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_118.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_118.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_327.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_327.cpp,1709,1784,1735,1810,"yy_fatal_error( ""cmExpr_yyset_column called with no buffer"" , yyscanner);","YY_FATAL_ERROR( ""cmExpr_yyset_column called with no buffer"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_271.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_271.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_271.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_271.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([]),set([]),"[['yy_fatal_error', 'yyscanner'], ['YY_FATAL_ERROR']]",2016-12-14T14:40:33,Brad King,-3528205590648888989,546
f8a1ba202f51e70510f12f46fe0633ea908d5144,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-11-02 (3c561c65)",[],Utilities/cmcurl/lib/easy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_120.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_120.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_120.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_331.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_331.cpp,144,143,159,-1,"snprintf(buf, sizeof(buf), ""CHARSET=cp%u"", cp);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_272.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_272.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_272.cpp,7,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_272.cpp,-1,"[""char *"", ""unkown"", ""string"", ""UINT""]","[""getenv_ret"", ""!"", ""UINT"", ""null"", "">"", ""&&""]",set([]),set([]),"[['snprintf', 'buf', 'sizeof', 'buf', 'CHARSET', 'cp%u', 'cp'], []]",2016-12-05T16:50:43,Brad King,74637942229087335,352
f8a1ba202f51e70510f12f46fe0633ea908d5144,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-11-02 (3c561c65)",[],Utilities/cmcurl/lib/easy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_120.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_120.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_120.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_332.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_332.cpp,262,239,269,241,"DEBUGF(fprintf(stderr, ""Error: resolver_global_init failed\n""));","f(Curl_resolver_global_init()) {
    DEBUGF(fprintf(stderr, ""Error: resolver_global_init failed\n""));
    return CURLE_FAILED_INIT;;",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_273.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_273.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_273.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_273.cpp,42,"[""fprintf_ret""]","[""Curl_resolver_global_init_ret""]",set([]),set([]),"[[], ['f', 'Curl_resolver_global_init', 'return', 'CURLE_FAILED_INIT']]",2016-12-05T16:50:43,Brad King,4670250677698627631,353
f8a1ba202f51e70510f12f46fe0633ea908d5144,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-11-02 (3c561c65)",[],Utilities/cmcurl/lib/easy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_120.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_120.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_120.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_332.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_332.cpp,262,239,269,242,,"DEBUGF(fprintf(stderr, ""Error: resolver_global_init failed\n""));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_274.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_274.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_274.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_274.cpp,43,"[""fprintf_ret""]","[""Curl_resolver_global_init_ret""]",set([]),set([]),"[[], ['DEBUGF', 'fprintf', 'stderr', 'Error', 'resolver_global_init', 'failed\\n']]",2016-12-05T16:50:43,Brad King,-14230106996048175930,354
f8a1ba202f51e70510f12f46fe0633ea908d5144,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-11-02 (3c561c65)",[],Utilities/cmcurl/lib/formdata.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_121.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_121.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_121.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_333.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_333.cpp,906,914,911,920,"vsnprintf(s, sizeof(s), fmt, ap);","s = curl_mvaprintf(fmt, ap);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_275.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_275.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_275.cpp,7,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_275.cpp,8,"[""char *"", ""unkown"", ""const char *"", ""va_list""]",[],"set([u'const char * fmt', u'va_list ap ;'])","set([2, 6])","[['vsnprintf', 'sizeof', 's'], ['curl_mvaprintf']]",2016-12-05T16:50:43,Brad King,14853697093131552429,355
f8a1ba202f51e70510f12f46fe0633ea908d5144,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-11-02 (3c561c65)",[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_122.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_122.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_122.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_334.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_334.cpp,4107,4103,4111,-1,"write_len = vsnprintf(s, SBUF_SIZE-3, fmt, ap);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_276.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_276.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_276.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_276.cpp,-1,"[""char *"", ""macro"", ""const char *"", ""va_list""]",[],"set([u'const char * fmt', u'va_list ap ;'])","set([2, 6])","[['write_len', 'vsnprintf', 's', 'SBUF_SIZE', '3', 'fmt', 'ap'], []]",2016-12-05T16:50:43,Brad King,9294472544760925789,356
f8a1ba202f51e70510f12f46fe0633ea908d5144,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-11-02 (3c561c65)",[],Utilities/cmcurl/lib/version.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_127.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_127.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_127.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_339.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_339.cpp,111,111,115,115,"len = snprintf(ptr, left, "" libidn/%s"", stringprep_check_version(NULL));","len = snprintf(ptr, left, "" libidn2/%s"", idn2_check_version(NULL));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_277.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_277.cpp,39,"[""snprintf_ret"", ""snprintf_ret"", ""string"", ""stringprep_check_version_ret""]","[""stringprep_check_version_ret""]","set([u'ptr += len', u'left -= len'])","set([34, 35])","[['libidn/%s', 'stringprep_check_version'], ['libidn2/%s', 'idn2_check_version']]",2016-12-05T16:50:43,Brad King,7029134246239022420,357
93cc249f3dd7ecd621cd063e4c08bbdb54d971e8,"curl 2016-11-02 (3c561c65)

Code extracted from:

    https://github.com/curl/curl.git

at commit 3c561c657c2f0e553b19115a506592a8bbd744bc (curl-7_51_0).",[],lib/easy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_129.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_129.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_129.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_341.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_341.cpp,144,143,159,-1,"snprintf(buf, sizeof(buf), ""CHARSET=cp%u"", cp);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_278.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_278.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_278.cpp,7,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_278.cpp,-1,"[""char *"", ""unkown"", ""string"", ""UINT""]","[""getenv_ret"", ""!"", ""UINT"", ""null"", "">"", ""&&""]","set([u'ptr += len', u'left -= len'])","set([34, 35])","[['snprintf', 'buf', 'sizeof', 'buf', 'CHARSET', 'cp%u', 'cp'], []]",2016-12-05T16:39:32,Brad King,74637942229087335,352
93cc249f3dd7ecd621cd063e4c08bbdb54d971e8,"curl 2016-11-02 (3c561c65)

Code extracted from:

    https://github.com/curl/curl.git

at commit 3c561c657c2f0e553b19115a506592a8bbd744bc (curl-7_51_0).",[],lib/easy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_129.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_129.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_129.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_342.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_342.cpp,262,239,269,241,"DEBUGF(fprintf(stderr, ""Error: resolver_global_init failed\n""));","f(Curl_resolver_global_init()) {
    DEBUGF(fprintf(stderr, ""Error: resolver_global_init failed\n""));
    return CURLE_FAILED_INIT;;",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_279.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_279.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_279.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_279.cpp,42,"[""fprintf_ret""]","[""Curl_resolver_global_init_ret""]",set([]),set([]),"[[], ['f', 'Curl_resolver_global_init', 'return', 'CURLE_FAILED_INIT']]",2016-12-05T16:39:32,Brad King,4670250677698627631,353
93cc249f3dd7ecd621cd063e4c08bbdb54d971e8,"curl 2016-11-02 (3c561c65)

Code extracted from:

    https://github.com/curl/curl.git

at commit 3c561c657c2f0e553b19115a506592a8bbd744bc (curl-7_51_0).",[],lib/easy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_129.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_129.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_129.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_342.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_342.cpp,262,239,269,242,,"DEBUGF(fprintf(stderr, ""Error: resolver_global_init failed\n""));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_280.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_280.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_280.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_280.cpp,43,"[""fprintf_ret""]","[""Curl_resolver_global_init_ret""]",set([]),set([]),"[[], ['DEBUGF', 'fprintf', 'stderr', 'Error', 'resolver_global_init', 'failed\\n']]",2016-12-05T16:39:32,Brad King,-14230106996048175930,354
93cc249f3dd7ecd621cd063e4c08bbdb54d971e8,"curl 2016-11-02 (3c561c65)

Code extracted from:

    https://github.com/curl/curl.git

at commit 3c561c657c2f0e553b19115a506592a8bbd744bc (curl-7_51_0).",[],lib/formdata.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_130.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_130.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_130.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_343.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_343.cpp,906,914,911,920,"vsnprintf(s, sizeof(s), fmt, ap);","s = curl_mvaprintf(fmt, ap);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_281.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_281.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_281.cpp,7,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_281.cpp,8,"[""char *"", ""unkown"", ""const char *"", ""va_list""]",[],"set([u'const char * fmt', u'va_list ap ;'])","set([2, 6])","[['vsnprintf', 'sizeof', 's'], ['curl_mvaprintf']]",2016-12-05T16:39:32,Brad King,14853697093131552429,355
93cc249f3dd7ecd621cd063e4c08bbdb54d971e8,"curl 2016-11-02 (3c561c65)

Code extracted from:

    https://github.com/curl/curl.git

at commit 3c561c657c2f0e553b19115a506592a8bbd744bc (curl-7_51_0).",[],lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_131.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_131.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_131.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_344.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_344.cpp,4106,4102,4110,-1,"write_len = vsnprintf(s, SBUF_SIZE-3, fmt, ap);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_282.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_282.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_282.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_282.cpp,-1,"[""char *"", ""macro"", ""const char *"", ""va_list""]",[],"set([u'const char * fmt', u'va_list ap ;'])","set([2, 6])","[['write_len', 'vsnprintf', 's', 'SBUF_SIZE', '3', 'fmt', 'ap'], []]",2016-12-05T16:39:32,Brad King,9294472544760925789,356
93cc249f3dd7ecd621cd063e4c08bbdb54d971e8,"curl 2016-11-02 (3c561c65)

Code extracted from:

    https://github.com/curl/curl.git

at commit 3c561c657c2f0e553b19115a506592a8bbd744bc (curl-7_51_0).",[],lib/version.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_136.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_136.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_136.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_349.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_349.cpp,111,111,115,115,"len = snprintf(ptr, left, "" libidn/%s"", stringprep_check_version(NULL));","len = snprintf(ptr, left, "" libidn2/%s"", idn2_check_version(NULL));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_283.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_283.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_283.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_283.cpp,39,"[""snprintf_ret"", ""snprintf_ret"", ""string"", ""stringprep_check_version_ret""]","[""stringprep_check_version_ret""]","set([u'ptr += len', u'left -= len'])","set([34, 35])","[['libidn/%s', 'stringprep_check_version'], ['libidn2/%s', 'idn2_check_version']]",2016-12-05T16:39:32,Brad King,7029134246239022420,357
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/conncache.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_157.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_157.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_157.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_410.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_410.cpp,132,131,134,-1,"aprintf(""%s:%d"",
                 conn->bits.proxy?conn->proxy.name:conn->host.name,
                 conn->localport);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_284.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_284.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_284.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_284.cpp,-1,"[""string"", ""member"", ""member""]",[],"set([u'ptr += len', u'left -= len'])","set([34, 35])","[['aprintf', '%s', '%d', 'conn', 'bits', 'proxy', 'conn', 'proxy', 'name', 'conn', 'host', 'name', 'conn', 'localport'], []]",2016-08-03T19:08:56,Brad King,-8091184050309945257,358
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/conncache.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_157.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_157.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_157.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_410.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_410.cpp,132,131,134,142,,"aprintf(""%s:%d"", hostname, conn->port);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_285.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_285.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_285.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_285.cpp,11,"[""string"", ""member"", ""member""]",[],"set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[[], ['aprintf', '%s', '%d', 'hostname', 'conn', 'port']]",2016-08-03T19:08:56,Brad King,9391077503287599664,359
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,168,-1,"snprintf((char *)&dest[i*2], 3, ""%02x"", source[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_286.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_286.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_286.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_286.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""int"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', 'char', '*', '&dest[i*2]', '3', '%02x', 'source[i]'], []]",2016-08-03T19:08:56,Brad King,-16861158296773085366,523
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,277,-1,"aprintf(""%s/%s"", service, host);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_287.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_287.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_287.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_287.cpp,-1,"[""string"", ""const char *"", ""const char *""]",[],"set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['aprintf', '%s/%s', 'service', 'host'], []]",2016-08-03T19:08:56,Brad King,-7211121862954708517,360
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,474,-1,"response = aprintf(
      ""%s %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x"",
           userp, digest[0], digest[1], digest[2], digest[3], digest[4],
           digest[5], digest[6], digest[7], digest[8], digest[9], digest[10],
           digest[11], digest[12], digest[13], digest[14], digest[15]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_288.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_288.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_288.cpp,31,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_288.cpp,-1,"[""string"", ""const char *"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""Curl_HMAC_init_ret"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', '%s', '%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x', 'userp', 'digest[0]', 'digest[1]', 'digest[2]', 'digest[3]', 'digest[4]', 'digest[5]', 'digest[6]', 'digest[7]', 'digest[8]', 'digest[9]', 'digest[10]', 'digest[11]', 'digest[12]', 'digest[13]', 'digest[14]', 'digest[15]'], []]",2016-08-03T19:08:56,Brad King,26774133747013968064,361
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,636,-1,"snprintf(cnonce, sizeof(cnonce), ""%08x%08x%08x%08x"",
           entropy[0], entropy[1], entropy[2], entropy[3]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_289.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_289.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_289.cpp,55,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_289.cpp,-1,"[""char *"", ""unkown"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""bool"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', 'cnonce', 'sizeof', 'cnonce', '%08x%08x%08x%08x', 'entropy[0]', 'entropy[1]', 'entropy[2]', 'entropy[3]'], []]",2016-08-03T19:08:56,Brad King,44726269606322736130,522
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,669,-1,"snprintf(&HA1_hex[2 * i], 3, ""%02x"", digest[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_290.cpp,88,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_290.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""macro"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', '&HA1_hex[2', '*', 'i]', '3', '%02x', 'digest[i]'], []]",2016-08-03T19:08:56,Brad King,4094572559904127957,362
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,692,-1,"snprintf(&HA2_hex[2 * i], 3, ""%02x"", digest[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_291.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_291.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_291.cpp,111,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_291.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""macro"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', '&HA2_hex[2', '*', 'i]', '3', '%02x', 'digest[i]'], []]",2016-08-03T19:08:56,Brad King,-9142477204060879984,363
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,722,-1,"snprintf(&resp_hash_hex[2 * i], 3, ""%02x"", digest[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_292.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_292.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_292.cpp,141,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_292.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""macro"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', '&resp_hash_hex[2', '*', 'i]', '3', '%02x', 'digest[i]'], []]",2016-08-03T19:08:56,Brad King,-6126715762547806482,364
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,725,-1,"response = aprintf(""username=\""%s\"",realm=\""%s\"",nonce=\""%s\"",""
                     ""cnonce=\""%s\"",nc=\""%s\"",digest-uri=\""%s\"",response=%s,""
                     ""qop=%s"",
                     userp, realm, nonce,
                     cnonce, nonceCount, spn, resp_hash_hex, qop);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_293.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_293.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_293.cpp,144,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_293.cpp,-1,[],"[""Curl_MD5_init_ret"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', 'username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'cnonce', '\\', '%s\\', 'nc', '\\', '%s\\', 'digest', 'uri', '\\', '%s\\', 'response', '%s', 'qop', '%s', 'userp', 'realm', 'nonce', 'cnonce', 'nonceCount', 'spn', 'resp_hash_hex', 'qop'], []]",2016-08-03T19:08:56,Brad King,61981850257420696529,365
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,921,-1,"snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             Curl_rand(data), Curl_rand(data),
             Curl_rand(data), Curl_rand(data));",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_294.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_294.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_294.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_294.cpp,-1,"[""char *"", ""unkown"", ""string"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', 'cnoncebuf', 'sizeof', 'cnoncebuf', '%08x%08x%08x%08x', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data'], []]",2016-08-03T19:08:56,Brad King,11735648100075555272,524
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,956,-1,"tmp = aprintf(""%s:%s:%s"", ha1, digest->nonce, digest->cnonce);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_296.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_296.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_296.cpp,60,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_296.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""member""]","[""member"", ""macro"", ""==""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['tmp', 'aprintf', '%s', '%s', '%s', 'ha1', 'digest', 'nonce', 'digest', 'cnonce'], []]",2016-08-03T19:08:56,Brad King,20581314590089289316,366
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,979,-1,"md5this = (unsigned char *)aprintf(""%s:%s"", request, uripath);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_297.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_297.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_297.cpp,83,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_297.cpp,-1,"[""string"", ""const unsigned char *"", ""const unsigned char *""]","[""aprintf_ret"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', 'request', 'uripath'], []]",2016-08-03T19:08:56,Brad King,12885430693237486210,367
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,999,-1,"md5this = (unsigned char *)aprintf(""%s:%s:%08x:%s:%s:%s"",
                                       ha1,
                                       digest->nonce,
                                       digest->nc,
                                       digest->cnonce,
                                       digest->qop,
                                       ha2);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_299.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_299.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_299.cpp,103,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_299.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""member"", ""member"", ""member"", ""unsigned char *""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', '%08x', '%s', '%s', '%s', 'ha1', 'digest', 'nonce', 'digest', 'nc', 'digest', 'cnonce', 'digest', 'qop', 'ha2'], []]",2016-08-03T19:08:56,Brad King,18976453480924230526,368
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,1008,-1,"md5this = (unsigned char *)aprintf(""%s:%s:%s"",
                                       ha1,
                                       digest->nonce,
                                       ha2);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_300.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_300.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_300.cpp,112,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_300.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""unsigned char *""]","[""member"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', '%s', 'ha1', 'digest', 'nonce', 'ha2'], []]",2016-08-03T19:08:56,Brad King,12597458016617160035,369
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,1040,-1,"response = aprintf(""username=\""%s\"", ""
                       ""realm=\""%s\"", ""
                       ""nonce=\""%s\"", ""
                       ""uri=\""%s\"", ""
                       ""cnonce=\""%s\"", ""
                       ""nc=%08x, ""
                       ""qop=%s, ""
                       ""response=\""%s\"""",
                       userp_quoted,
                       digest->realm,
                       digest->nonce,
                       uripath,
                       digest->cnonce,
                       digest->nc,
                       digest->qop,
                       request_digest);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_301.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_301.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_301.cpp,144,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_301.cpp,-1,[],"[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', 'username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'uri', '\\', '%s\\', 'cnonce', '\\', '%s\\', 'nc', '%08x', 'qop', '%s', 'response', '\\', '%s\\', 'userp_quoted', 'digest', 'realm', 'digest', 'nonce', 'uripath', 'digest', 'cnonce', 'digest', 'nc', 'digest', 'qop', 'request_digest'], []]",2016-08-03T19:08:56,Brad King,79336617183366657733,370
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,1063,-1,"response = aprintf(""username=\""%s\"", ""
                       ""realm=\""%s\"", ""
                       ""nonce=\""%s\"", ""
                       ""uri=\""%s\"", ""
                       ""response=\""%s\"""",
                       userp_quoted,
                       digest->realm,
                       digest->nonce,
                       uripath,
                       request_digest);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_302.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_302.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_302.cpp,167,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_302.cpp,-1,[],"[""member"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', 'username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'uri', '\\', '%s\\', 'response', '\\', '%s\\', 'userp_quoted', 'digest', 'realm', 'digest', 'nonce', 'uripath', 'request_digest'], []]",2016-08-03T19:08:56,Brad King,63091598768108785136,371
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,1081,-1,"tmp = aprintf(""%s, opaque=\""%s\"""", response, digest->opaque);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_303.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_303.cpp,185,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_303.cpp,-1,"[""string"", ""char *"", ""member""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['tmp', 'aprintf', '%s', 'opaque', '\\', '%s\\', 'response', 'digest', 'opaque'], []]",2016-08-03T19:08:56,Brad King,14702664524258322286,372
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,1091,-1,"tmp = aprintf(""%s, algorithm=\""%s\"""", response, digest->algorithm);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_304.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_304.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_304.cpp,195,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_304.cpp,-1,"[""string"", ""aprintf_ret"", ""member""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['tmp', 'aprintf', '%s', 'algorithm', '\\', '%s\\', 'response', 'digest', 'algorithm'], []]",2016-08-03T19:08:56,Brad King,12064220101636319472,373
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_159.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_412.cpp,56,57,1180,-1,"xoauth = aprintf(""user=%s\1auth=Bearer %s\1\1"", user, bearer);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_305.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_305.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_305.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_305.cpp,-1,"[""string"", ""const char *"", ""const char *""]",[],"set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['xoauth', 'aprintf', 'user', '%s\\1auth', 'Bearer', '%s\\1\\1', 'user', 'bearer'], []]",2016-08-03T19:08:56,Brad King,-18470778124222651531,374
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/easy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_160.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_160.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_160.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_413.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_413.cpp,269,271,273,277,"DEBUGF(fprintf(stderr, ""Error: libssh2_init failed\n""));","DEBUGF(fprintf(stderr, ""Error: libssh2_init failed\n""));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_306.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_306.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_306.cpp,51,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_306.cpp,55,"[""fprintf_ret""]","[""libssh2_init_ret""]",set([]),set([]),"[[], []]",2016-08-03T19:08:56,Brad King,0,550
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_161.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_161.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_161.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_416.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_416.cpp,479,486,490,494,"snprintf(buf, BUFSIZE-1,
               ""Last-Modified: %s, %02d %s %4d %02d:%02d:%02d GMT\r\n"",
               Curl_wkday[tm->tm_wday?tm->tm_wday-1:6],
               tm->tm_mday,
               Curl_month[tm->tm_mon],
               tm->tm_year + 1900,
               tm->tm_hour,
               tm->tm_min,
               tm->tm_sec);","snprintf(buf, BUFSIZE-1,
             ""Last-Modified: %s, %02d %s %4d %02d:%02d:%02d GMT\r\n"",
             Curl_wkday[tm->tm_wday?tm->tm_wday-1:6],
             tm->tm_mday,
             Curl_month[tm->tm_mon],
             tm->tm_year + 1900,
             tm->tm_hour,
             tm->tm_min,
             tm->tm_sec);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_307.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_307.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_307.cpp,74,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_307.cpp,75,"[""char *"", ""macro"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""Curl_gmtime_ret"", ""!""]","set([u'char * buf = data -> state . buffer ;', u'result = Curl_gmtime ( filetime , & buffer )', u'const struct tm * tm = & buffer ;'])","set([16, 57, 70])","[[], []]",2016-08-03T19:08:56,Brad King,0,550
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/http_negotiate.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_165.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_165.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_165.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_420.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_420.cpp,22,22,172,109,"userp = aprintf(""%sAuthorization: Negotiate %s\r\n"", proxy ? ""Proxy-"" : """",
                  encoded);","userp = aprintf(""%sAuthorization: Negotiate %s\r\n"", proxy ? ""Proxy-"" : """",
                  base64);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_308.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_308.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_308.cpp,28,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_308.cpp,13,[],"[""char *"", ""!"", ""size_t"", ""!"", ""||"", ""!""]","set([u'char * base64 = NULL ;', u'bool proxy', u'result = Curl_auth_create_spnego_message ( conn -> data , neg_ctx , & base64 , & len )'])","set([0, 9, 4])","[['encoded'], ['base64']]",2016-08-03T19:08:56,Brad King,13728776900319432914,375
5bcbc3857fd9976389d8eee3bb54e352ea950aec,Merge branch 'update-curl' into release,[],Utilities/cmcurl/lib/http_proxy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_166.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_166.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_166.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_421.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_421.cpp,150,160,160,172,,"(""%s%s%s:%hu"";",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_310.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_310.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_310.cpp,68,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_310.cpp,70,[],"[""Curl_http_output_auth_ret"", ""!""]","set([u'char * base64 = NULL ;', u'bool proxy', u'result = Curl_auth_create_spnego_message ( conn -> data , neg_ctx , & base64 , & len )'])","set([0, 9, 4])","[[], ['%s%s%s', '%hu']]",2016-08-03T19:08:56,Brad King,-772288953237803043,376
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/conncache.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_172.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_172.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_172.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_428.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_428.cpp,132,131,134,-1,"aprintf(""%s:%d"",
                 conn->bits.proxy?conn->proxy.name:conn->host.name,
                 conn->localport);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_312.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_312.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_312.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_312.cpp,-1,"[""string"", ""member"", ""member""]",[],"set([u'char * base64 = NULL ;', u'bool proxy', u'result = Curl_auth_create_spnego_message ( conn -> data , neg_ctx , & base64 , & len )'])","set([0, 9, 4])","[['aprintf', '%s', '%d', 'conn', 'bits', 'proxy', 'conn', 'proxy', 'name', 'conn', 'host', 'name', 'conn', 'localport'], []]",2016-08-03T18:26:53,Brad King,-8091184050309945257,358
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/conncache.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_172.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_172.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_172.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_428.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_428.cpp,132,131,134,142,,"aprintf(""%s:%d"", hostname, conn->port);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_313.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_313.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_313.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_313.cpp,11,"[""string"", ""member"", ""member""]",[],"set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[[], ['aprintf', '%s', '%d', 'hostname', 'conn', 'port']]",2016-08-03T18:26:53,Brad King,9391077503287599664,359
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,168,-1,"snprintf((char *)&dest[i*2], 3, ""%02x"", source[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_314.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_314.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_314.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_314.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""int"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', 'char', '*', '&dest[i*2]', '3', '%02x', 'source[i]'], []]",2016-08-03T18:26:53,Brad King,-16861158296773085366,523
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,277,-1,"aprintf(""%s/%s"", service, host);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_315.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_315.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_315.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_315.cpp,-1,"[""string"", ""const char *"", ""const char *""]",[],"set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['aprintf', '%s/%s', 'service', 'host'], []]",2016-08-03T18:26:53,Brad King,-7211121862954708517,360
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,474,-1,"response = aprintf(
      ""%s %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x"",
           userp, digest[0], digest[1], digest[2], digest[3], digest[4],
           digest[5], digest[6], digest[7], digest[8], digest[9], digest[10],
           digest[11], digest[12], digest[13], digest[14], digest[15]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_316.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_316.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_316.cpp,31,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_316.cpp,-1,"[""string"", ""const char *"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""Curl_HMAC_init_ret"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', '%s', '%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x', 'userp', 'digest[0]', 'digest[1]', 'digest[2]', 'digest[3]', 'digest[4]', 'digest[5]', 'digest[6]', 'digest[7]', 'digest[8]', 'digest[9]', 'digest[10]', 'digest[11]', 'digest[12]', 'digest[13]', 'digest[14]', 'digest[15]'], []]",2016-08-03T18:26:53,Brad King,26774133747013968064,361
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,636,-1,"snprintf(cnonce, sizeof(cnonce), ""%08x%08x%08x%08x"",
           entropy[0], entropy[1], entropy[2], entropy[3]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_317.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_317.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_317.cpp,55,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_317.cpp,-1,"[""char *"", ""unkown"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""bool"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', 'cnonce', 'sizeof', 'cnonce', '%08x%08x%08x%08x', 'entropy[0]', 'entropy[1]', 'entropy[2]', 'entropy[3]'], []]",2016-08-03T18:26:53,Brad King,44726269606322736130,522
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,669,-1,"snprintf(&HA1_hex[2 * i], 3, ""%02x"", digest[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_318.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_318.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_318.cpp,88,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_318.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""macro"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', '&HA1_hex[2', '*', 'i]', '3', '%02x', 'digest[i]'], []]",2016-08-03T18:26:53,Brad King,4094572559904127957,362
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,692,-1,"snprintf(&HA2_hex[2 * i], 3, ""%02x"", digest[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_319.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_319.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_319.cpp,111,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_319.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""macro"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', '&HA2_hex[2', '*', 'i]', '3', '%02x', 'digest[i]'], []]",2016-08-03T18:26:53,Brad King,-9142477204060879984,363
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,722,-1,"snprintf(&resp_hash_hex[2 * i], 3, ""%02x"", digest[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_320.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_320.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_320.cpp,141,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_320.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""macro"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', '&resp_hash_hex[2', '*', 'i]', '3', '%02x', 'digest[i]'], []]",2016-08-03T18:26:53,Brad King,-6126715762547806482,364
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,725,-1,"response = aprintf(""username=\""%s\"",realm=\""%s\"",nonce=\""%s\"",""
                     ""cnonce=\""%s\"",nc=\""%s\"",digest-uri=\""%s\"",response=%s,""
                     ""qop=%s"",
                     userp, realm, nonce,
                     cnonce, nonceCount, spn, resp_hash_hex, qop);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_321.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_321.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_321.cpp,144,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_321.cpp,-1,[],"[""Curl_MD5_init_ret"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', 'username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'cnonce', '\\', '%s\\', 'nc', '\\', '%s\\', 'digest', 'uri', '\\', '%s\\', 'response', '%s', 'qop', '%s', 'userp', 'realm', 'nonce', 'cnonce', 'nonceCount', 'spn', 'resp_hash_hex', 'qop'], []]",2016-08-03T18:26:53,Brad King,61981850257420696529,365
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,921,-1,"snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             Curl_rand(data), Curl_rand(data),
             Curl_rand(data), Curl_rand(data));",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_322.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_322.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_322.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_322.cpp,-1,"[""char *"", ""unkown"", ""string"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', 'cnoncebuf', 'sizeof', 'cnoncebuf', '%08x%08x%08x%08x', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data'], []]",2016-08-03T18:26:53,Brad King,11735648100075555272,524
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,956,-1,"tmp = aprintf(""%s:%s:%s"", ha1, digest->nonce, digest->cnonce);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_324.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_324.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_324.cpp,60,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_324.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""member""]","[""member"", ""macro"", ""==""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['tmp', 'aprintf', '%s', '%s', '%s', 'ha1', 'digest', 'nonce', 'digest', 'cnonce'], []]",2016-08-03T18:26:53,Brad King,20581314590089289316,366
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,979,-1,"md5this = (unsigned char *)aprintf(""%s:%s"", request, uripath);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_325.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_325.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_325.cpp,83,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_325.cpp,-1,"[""string"", ""const unsigned char *"", ""const unsigned char *""]","[""aprintf_ret"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', 'request', 'uripath'], []]",2016-08-03T18:26:53,Brad King,12885430693237486210,367
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,999,-1,"md5this = (unsigned char *)aprintf(""%s:%s:%08x:%s:%s:%s"",
                                       ha1,
                                       digest->nonce,
                                       digest->nc,
                                       digest->cnonce,
                                       digest->qop,
                                       ha2);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_327.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_327.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_327.cpp,103,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_327.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""member"", ""member"", ""member"", ""unsigned char *""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', '%08x', '%s', '%s', '%s', 'ha1', 'digest', 'nonce', 'digest', 'nc', 'digest', 'cnonce', 'digest', 'qop', 'ha2'], []]",2016-08-03T18:26:53,Brad King,18976453480924230526,368
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,1008,-1,"md5this = (unsigned char *)aprintf(""%s:%s:%s"",
                                       ha1,
                                       digest->nonce,
                                       ha2);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_328.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_328.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_328.cpp,112,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_328.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""unsigned char *""]","[""member"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', '%s', 'ha1', 'digest', 'nonce', 'ha2'], []]",2016-08-03T18:26:53,Brad King,12597458016617160035,369
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,1040,-1,"response = aprintf(""username=\""%s\"", ""
                       ""realm=\""%s\"", ""
                       ""nonce=\""%s\"", ""
                       ""uri=\""%s\"", ""
                       ""cnonce=\""%s\"", ""
                       ""nc=%08x, ""
                       ""qop=%s, ""
                       ""response=\""%s\"""",
                       userp_quoted,
                       digest->realm,
                       digest->nonce,
                       uripath,
                       digest->cnonce,
                       digest->nc,
                       digest->qop,
                       request_digest);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_329.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_329.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_329.cpp,144,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_329.cpp,-1,[],"[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', 'username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'uri', '\\', '%s\\', 'cnonce', '\\', '%s\\', 'nc', '%08x', 'qop', '%s', 'response', '\\', '%s\\', 'userp_quoted', 'digest', 'realm', 'digest', 'nonce', 'uripath', 'digest', 'cnonce', 'digest', 'nc', 'digest', 'qop', 'request_digest'], []]",2016-08-03T18:26:53,Brad King,79336617183366657733,370
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,1063,-1,"response = aprintf(""username=\""%s\"", ""
                       ""realm=\""%s\"", ""
                       ""nonce=\""%s\"", ""
                       ""uri=\""%s\"", ""
                       ""response=\""%s\"""",
                       userp_quoted,
                       digest->realm,
                       digest->nonce,
                       uripath,
                       request_digest);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_330.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_330.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_330.cpp,167,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_330.cpp,-1,[],"[""member"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', 'username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'uri', '\\', '%s\\', 'response', '\\', '%s\\', 'userp_quoted', 'digest', 'realm', 'digest', 'nonce', 'uripath', 'request_digest'], []]",2016-08-03T18:26:53,Brad King,63091598768108785136,371
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,1081,-1,"tmp = aprintf(""%s, opaque=\""%s\"""", response, digest->opaque);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_331.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_331.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_331.cpp,185,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_331.cpp,-1,"[""string"", ""char *"", ""member""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['tmp', 'aprintf', '%s', 'opaque', '\\', '%s\\', 'response', 'digest', 'opaque'], []]",2016-08-03T18:26:53,Brad King,14702664524258322286,372
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,1091,-1,"tmp = aprintf(""%s, algorithm=\""%s\"""", response, digest->algorithm);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_332.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_332.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_332.cpp,195,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_332.cpp,-1,"[""string"", ""aprintf_ret"", ""member""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['tmp', 'aprintf', '%s', 'algorithm', '\\', '%s\\', 'response', 'digest', 'algorithm'], []]",2016-08-03T18:26:53,Brad King,12064220101636319472,373
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_174.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_174.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_430.cpp,56,57,1180,-1,"xoauth = aprintf(""user=%s\1auth=Bearer %s\1\1"", user, bearer);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_333.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_333.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_333.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_333.cpp,-1,"[""string"", ""const char *"", ""const char *""]",[],"set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['xoauth', 'aprintf', 'user', '%s\\1auth', 'Bearer', '%s\\1\\1', 'user', 'bearer'], []]",2016-08-03T18:26:53,Brad King,-18470778124222651531,374
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/easy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_175.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_175.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_175.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_431.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_431.cpp,269,271,273,277,"DEBUGF(fprintf(stderr, ""Error: libssh2_init failed\n""));","DEBUGF(fprintf(stderr, ""Error: libssh2_init failed\n""));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_334.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_334.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_334.cpp,51,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_334.cpp,55,"[""fprintf_ret""]","[""libssh2_init_ret""]",set([]),set([]),"[[], []]",2016-08-03T18:26:53,Brad King,0,550
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_176.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_176.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_176.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_434.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_434.cpp,479,486,490,494,"snprintf(buf, BUFSIZE-1,
               ""Last-Modified: %s, %02d %s %4d %02d:%02d:%02d GMT\r\n"",
               Curl_wkday[tm->tm_wday?tm->tm_wday-1:6],
               tm->tm_mday,
               Curl_month[tm->tm_mon],
               tm->tm_year + 1900,
               tm->tm_hour,
               tm->tm_min,
               tm->tm_sec);","snprintf(buf, BUFSIZE-1,
             ""Last-Modified: %s, %02d %s %4d %02d:%02d:%02d GMT\r\n"",
             Curl_wkday[tm->tm_wday?tm->tm_wday-1:6],
             tm->tm_mday,
             Curl_month[tm->tm_mon],
             tm->tm_year + 1900,
             tm->tm_hour,
             tm->tm_min,
             tm->tm_sec);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_335.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_335.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_335.cpp,74,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_335.cpp,75,"[""char *"", ""macro"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""Curl_gmtime_ret"", ""!""]","set([u'char * buf = data -> state . buffer ;', u'result = Curl_gmtime ( filetime , & buffer )', u'const struct tm * tm = & buffer ;'])","set([16, 57, 70])","[[], []]",2016-08-03T18:26:53,Brad King,0,550
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/http_negotiate.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_180.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_180.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_180.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_438.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_438.cpp,22,22,172,109,"userp = aprintf(""%sAuthorization: Negotiate %s\r\n"", proxy ? ""Proxy-"" : """",
                  encoded);","userp = aprintf(""%sAuthorization: Negotiate %s\r\n"", proxy ? ""Proxy-"" : """",
                  base64);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_336.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_336.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_336.cpp,28,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_336.cpp,13,[],"[""char *"", ""!"", ""size_t"", ""!"", ""||"", ""!""]","set([u'char * base64 = NULL ;', u'bool proxy', u'result = Curl_auth_create_spnego_message ( conn -> data , neg_ctx , & base64 , & len )'])","set([0, 9, 4])","[['encoded'], ['base64']]",2016-08-03T18:26:53,Brad King,13728776900319432914,375
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/http_proxy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_181.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_181.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_181.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_439.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_439.cpp,150,160,160,172,,"(""%s%s%s:%hu"";",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_338.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_338.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_338.cpp,68,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_338.cpp,70,[],"[""Curl_http_output_auth_ret"", ""!""]","set([u'char * base64 = NULL ;', u'bool proxy', u'result = Curl_auth_create_spnego_message ( conn -> data , neg_ctx , & base64 , & len )'])","set([0, 9, 4])","[[], ['%s%s%s', '%hu']]",2016-08-03T18:26:53,Brad King,-772288953237803043,376
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/tftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_186.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_186.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_186.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_445.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_445.cpp,494,494,509,511,"snprintf( buf, sizeof(buf), ""%d"", state->requested_blksize );","snprintf(buf, sizeof(buf), ""%d"", state->requested_blksize);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_340.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_340.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_340.cpp,64,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_340.cpp,66,"[""char *"", ""unkown"", ""string"", ""member""]","[""curl_easy_unescape_ret"", ""!"", ""!""]","set([u'char buf [ 64 ] ;', u'struct Curl_easy * data = state -> conn -> data ;', u'tftp_state_data_t * state', u'state -> retries ++'])","set([0, 19, 6, 7])","[[], []]",2016-08-03T18:26:53,Brad King,0,550
f53f4a8a2d215dac634effea575a27e000dfcb29,"Merge branch 'upstream-curl' into update-curl

* upstream-curl:
  curl 2016-08-03 (f2cb3a01)",[],Utilities/cmcurl/lib/tftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_186.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_186.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_186.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_445.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_445.cpp,494,494,517,519,"snprintf( buf, sizeof(buf), ""%d"", state->retry_time);","snprintf(buf, sizeof(buf), ""%d"", state->retry_time);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_341.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_341.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_341.cpp,72,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_341.cpp,74,"[""char *"", ""unkown"", ""string"", ""member""]","[""curl_easy_unescape_ret"", ""!"", ""!""]","set([u'char buf [ 64 ] ;', u'struct Curl_easy * data = state -> conn -> data ;', u'tftp_state_data_t * state', u'state -> retries ++'])","set([0, 19, 6, 7])","[[], []]",2016-08-03T18:26:53,Brad King,0,550
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/conncache.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_188.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_188.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_188.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_447.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_447.cpp,132,131,134,-1,"aprintf(""%s:%d"",
                 conn->bits.proxy?conn->proxy.name:conn->host.name,
                 conn->localport);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_342.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_342.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_342.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_342.cpp,-1,"[""string"", ""member"", ""member""]",[],"set([u'char buf [ 64 ] ;', u'struct Curl_easy * data = state -> conn -> data ;', u'tftp_state_data_t * state', u'state -> retries ++'])","set([0, 19, 6, 7])","[['aprintf', '%s', '%d', 'conn', 'bits', 'proxy', 'conn', 'proxy', 'name', 'conn', 'host', 'name', 'conn', 'localport'], []]",2016-08-03T18:26:29,Brad King,-8091184050309945257,358
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/conncache.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_188.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_188.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_188.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_447.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_447.cpp,132,131,134,142,,"aprintf(""%s:%d"", hostname, conn->port);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_343.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_343.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_343.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_343.cpp,11,"[""string"", ""member"", ""member""]",[],"set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[[], ['aprintf', '%s', '%d', 'hostname', 'conn', 'port']]",2016-08-03T18:26:29,Brad King,9391077503287599664,359
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,168,-1,"snprintf((char *)&dest[i*2], 3, ""%02x"", source[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_344.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_344.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_344.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_344.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""int"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', 'char', '*', '&dest[i*2]', '3', '%02x', 'source[i]'], []]",2016-08-03T18:26:29,Brad King,-16861158296773085366,523
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,277,-1,"aprintf(""%s/%s"", service, host);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_345.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_345.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_345.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_345.cpp,-1,"[""string"", ""const char *"", ""const char *""]",[],"set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['aprintf', '%s/%s', 'service', 'host'], []]",2016-08-03T18:26:29,Brad King,-7211121862954708517,360
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,474,-1,"response = aprintf(
      ""%s %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x"",
           userp, digest[0], digest[1], digest[2], digest[3], digest[4],
           digest[5], digest[6], digest[7], digest[8], digest[9], digest[10],
           digest[11], digest[12], digest[13], digest[14], digest[15]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_346.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_346.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_346.cpp,31,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_346.cpp,-1,"[""string"", ""const char *"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""Curl_HMAC_init_ret"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', '%s', '%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x', 'userp', 'digest[0]', 'digest[1]', 'digest[2]', 'digest[3]', 'digest[4]', 'digest[5]', 'digest[6]', 'digest[7]', 'digest[8]', 'digest[9]', 'digest[10]', 'digest[11]', 'digest[12]', 'digest[13]', 'digest[14]', 'digest[15]'], []]",2016-08-03T18:26:29,Brad King,26774133747013968064,361
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,636,-1,"snprintf(cnonce, sizeof(cnonce), ""%08x%08x%08x%08x"",
           entropy[0], entropy[1], entropy[2], entropy[3]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_347.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_347.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_347.cpp,55,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_347.cpp,-1,"[""char *"", ""unkown"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""bool"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', 'cnonce', 'sizeof', 'cnonce', '%08x%08x%08x%08x', 'entropy[0]', 'entropy[1]', 'entropy[2]', 'entropy[3]'], []]",2016-08-03T18:26:29,Brad King,44726269606322736130,522
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,669,-1,"snprintf(&HA1_hex[2 * i], 3, ""%02x"", digest[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_348.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_348.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_348.cpp,88,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_348.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""macro"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', '&HA1_hex[2', '*', 'i]', '3', '%02x', 'digest[i]'], []]",2016-08-03T18:26:29,Brad King,4094572559904127957,362
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,692,-1,"snprintf(&HA2_hex[2 * i], 3, ""%02x"", digest[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_349.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_349.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_349.cpp,111,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_349.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""macro"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', '&HA2_hex[2', '*', 'i]', '3', '%02x', 'digest[i]'], []]",2016-08-03T18:26:29,Brad King,-9142477204060879984,363
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,722,-1,"snprintf(&resp_hash_hex[2 * i], 3, ""%02x"", digest[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_350.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_350.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_350.cpp,141,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_350.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""macro"", ""<""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', '&resp_hash_hex[2', '*', 'i]', '3', '%02x', 'digest[i]'], []]",2016-08-03T18:26:29,Brad King,-6126715762547806482,364
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,725,-1,"response = aprintf(""username=\""%s\"",realm=\""%s\"",nonce=\""%s\"",""
                     ""cnonce=\""%s\"",nc=\""%s\"",digest-uri=\""%s\"",response=%s,""
                     ""qop=%s"",
                     userp, realm, nonce,
                     cnonce, nonceCount, spn, resp_hash_hex, qop);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_351.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_351.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_351.cpp,144,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_351.cpp,-1,[],"[""Curl_MD5_init_ret"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', 'username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'cnonce', '\\', '%s\\', 'nc', '\\', '%s\\', 'digest', 'uri', '\\', '%s\\', 'response', '%s', 'qop', '%s', 'userp', 'realm', 'nonce', 'cnonce', 'nonceCount', 'spn', 'resp_hash_hex', 'qop'], []]",2016-08-03T18:26:29,Brad King,61981850257420696529,365
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,921,-1,"snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             Curl_rand(data), Curl_rand(data),
             Curl_rand(data), Curl_rand(data));",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_352.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_352.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_352.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_352.cpp,-1,"[""char *"", ""unkown"", ""string"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['snprintf', 'cnoncebuf', 'sizeof', 'cnoncebuf', '%08x%08x%08x%08x', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data'], []]",2016-08-03T18:26:29,Brad King,11735648100075555272,524
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,956,-1,"tmp = aprintf(""%s:%s:%s"", ha1, digest->nonce, digest->cnonce);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_354.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_354.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_354.cpp,60,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_354.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""member""]","[""member"", ""macro"", ""==""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['tmp', 'aprintf', '%s', '%s', '%s', 'ha1', 'digest', 'nonce', 'digest', 'cnonce'], []]",2016-08-03T18:26:29,Brad King,20581314590089289316,366
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,979,-1,"md5this = (unsigned char *)aprintf(""%s:%s"", request, uripath);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_355.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_355.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_355.cpp,83,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_355.cpp,-1,"[""string"", ""const unsigned char *"", ""const unsigned char *""]","[""aprintf_ret"", ""!"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', 'request', 'uripath'], []]",2016-08-03T18:26:29,Brad King,12885430693237486210,367
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,999,-1,"md5this = (unsigned char *)aprintf(""%s:%s:%08x:%s:%s:%s"",
                                       ha1,
                                       digest->nonce,
                                       digest->nc,
                                       digest->cnonce,
                                       digest->qop,
                                       ha2);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_357.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_357.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_357.cpp,103,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_357.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""member"", ""member"", ""member"", ""unsigned char *""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', '%08x', '%s', '%s', '%s', 'ha1', 'digest', 'nonce', 'digest', 'nc', 'digest', 'cnonce', 'digest', 'qop', 'ha2'], []]",2016-08-03T18:26:29,Brad King,18976453480924230526,368
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,1008,-1,"md5this = (unsigned char *)aprintf(""%s:%s:%s"",
                                       ha1,
                                       digest->nonce,
                                       ha2);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_358.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_358.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_358.cpp,112,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_358.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""unsigned char *""]","[""member"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', '%s', 'ha1', 'digest', 'nonce', 'ha2'], []]",2016-08-03T18:26:29,Brad King,12597458016617160035,369
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,1040,-1,"response = aprintf(""username=\""%s\"", ""
                       ""realm=\""%s\"", ""
                       ""nonce=\""%s\"", ""
                       ""uri=\""%s\"", ""
                       ""cnonce=\""%s\"", ""
                       ""nc=%08x, ""
                       ""qop=%s, ""
                       ""response=\""%s\"""",
                       userp_quoted,
                       digest->realm,
                       digest->nonce,
                       uripath,
                       digest->cnonce,
                       digest->nc,
                       digest->qop,
                       request_digest);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_359.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_359.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_359.cpp,144,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_359.cpp,-1,[],"[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', 'username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'uri', '\\', '%s\\', 'cnonce', '\\', '%s\\', 'nc', '%08x', 'qop', '%s', 'response', '\\', '%s\\', 'userp_quoted', 'digest', 'realm', 'digest', 'nonce', 'uripath', 'digest', 'cnonce', 'digest', 'nc', 'digest', 'qop', 'request_digest'], []]",2016-08-03T18:26:29,Brad King,79336617183366657733,370
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,1063,-1,"response = aprintf(""username=\""%s\"", ""
                       ""realm=\""%s\"", ""
                       ""nonce=\""%s\"", ""
                       ""uri=\""%s\"", ""
                       ""response=\""%s\"""",
                       userp_quoted,
                       digest->realm,
                       digest->nonce,
                       uripath,
                       request_digest);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_360.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_360.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_360.cpp,167,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_360.cpp,-1,[],"[""member"", ""!""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['response', 'aprintf', 'username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'uri', '\\', '%s\\', 'response', '\\', '%s\\', 'userp_quoted', 'digest', 'realm', 'digest', 'nonce', 'uripath', 'request_digest'], []]",2016-08-03T18:26:29,Brad King,63091598768108785136,371
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,1081,-1,"tmp = aprintf(""%s, opaque=\""%s\"""", response, digest->opaque);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_361.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_361.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_361.cpp,185,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_361.cpp,-1,"[""string"", ""char *"", ""member""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['tmp', 'aprintf', '%s', 'opaque', '\\', '%s\\', 'response', 'digest', 'opaque'], []]",2016-08-03T18:26:29,Brad King,14702664524258322286,372
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,1091,-1,"tmp = aprintf(""%s, algorithm=\""%s\"""", response, digest->algorithm);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_362.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_362.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_362.cpp,195,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_362.cpp,-1,"[""string"", ""aprintf_ret"", ""member""]","[""member""]","set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['tmp', 'aprintf', '%s', 'algorithm', '\\', '%s\\', 'response', 'digest', 'algorithm'], []]",2016-08-03T18:26:29,Brad King,12064220101636319472,373
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/curl_sasl.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_190.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_449.cpp,56,57,1180,-1,"xoauth = aprintf(""user=%s\1auth=Bearer %s\1\1"", user, bearer);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_363.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_363.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_363.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_363.cpp,-1,"[""string"", ""const char *"", ""const char *""]",[],"set([u'struct connectdata * conn', u'hostname = conn -> proxy . name', u'hostname = conn -> conn_to_host . name', u'hostname = conn -> host . name'])","set([0, 9, 5, 7])","[['xoauth', 'aprintf', 'user', '%s\\1auth', 'Bearer', '%s\\1\\1', 'user', 'bearer'], []]",2016-08-03T18:26:29,Brad King,-18470778124222651531,374
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/easy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_191.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_191.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_191.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_450.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_450.cpp,269,271,273,277,"DEBUGF(fprintf(stderr, ""Error: libssh2_init failed\n""));","DEBUGF(fprintf(stderr, ""Error: libssh2_init failed\n""));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_364.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_364.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_364.cpp,51,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_364.cpp,55,"[""fprintf_ret""]","[""libssh2_init_ret""]",set([]),set([]),"[[], []]",2016-08-03T18:26:29,Brad King,0,550
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_192.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_192.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_192.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_453.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_453.cpp,479,486,490,494,"snprintf(buf, BUFSIZE-1,
               ""Last-Modified: %s, %02d %s %4d %02d:%02d:%02d GMT\r\n"",
               Curl_wkday[tm->tm_wday?tm->tm_wday-1:6],
               tm->tm_mday,
               Curl_month[tm->tm_mon],
               tm->tm_year + 1900,
               tm->tm_hour,
               tm->tm_min,
               tm->tm_sec);","snprintf(buf, BUFSIZE-1,
             ""Last-Modified: %s, %02d %s %4d %02d:%02d:%02d GMT\r\n"",
             Curl_wkday[tm->tm_wday?tm->tm_wday-1:6],
             tm->tm_mday,
             Curl_month[tm->tm_mon],
             tm->tm_year + 1900,
             tm->tm_hour,
             tm->tm_min,
             tm->tm_sec);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_365.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_365.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_365.cpp,74,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_365.cpp,75,"[""char *"", ""macro"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""Curl_gmtime_ret"", ""!""]","set([u'char * buf = data -> state . buffer ;', u'result = Curl_gmtime ( filetime , & buffer )', u'const struct tm * tm = & buffer ;'])","set([16, 57, 70])","[[], []]",2016-08-03T18:26:29,Brad King,0,550
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/http_negotiate.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_196.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_196.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_196.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_457.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_457.cpp,22,22,172,109,"userp = aprintf(""%sAuthorization: Negotiate %s\r\n"", proxy ? ""Proxy-"" : """",
                  encoded);","userp = aprintf(""%sAuthorization: Negotiate %s\r\n"", proxy ? ""Proxy-"" : """",
                  base64);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_366.cpp,28,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_366.cpp,13,[],"[""char *"", ""!"", ""size_t"", ""!"", ""||"", ""!""]","set([u'char * base64 = NULL ;', u'bool proxy', u'result = Curl_auth_create_spnego_message ( conn -> data , neg_ctx , & base64 , & len )'])","set([0, 9, 4])","[['encoded'], ['base64']]",2016-08-03T18:26:29,Brad King,13728776900319432914,375
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/http_proxy.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_197.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_197.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_197.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_458.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_458.cpp,150,160,160,172,,"(""%s%s%s:%hu"";",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_368.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_368.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_368.cpp,68,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_368.cpp,70,[],"[""Curl_http_output_auth_ret"", ""!""]","set([u'char * base64 = NULL ;', u'bool proxy', u'result = Curl_auth_create_spnego_message ( conn -> data , neg_ctx , & base64 , & len )'])","set([0, 9, 4])","[[], ['%s%s%s', '%hu']]",2016-08-03T18:26:29,Brad King,-772288953237803043,376
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/tftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_202.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_202.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_202.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_464.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_464.cpp,494,494,509,511,"snprintf( buf, sizeof(buf), ""%d"", state->requested_blksize );","snprintf(buf, sizeof(buf), ""%d"", state->requested_blksize);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_370.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_370.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_370.cpp,64,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_370.cpp,66,"[""char *"", ""unkown"", ""string"", ""member""]","[""curl_easy_unescape_ret"", ""!"", ""!""]","set([u'char buf [ 64 ] ;', u'struct Curl_easy * data = state -> conn -> data ;', u'tftp_state_data_t * state', u'state -> retries ++'])","set([0, 19, 6, 7])","[[], []]",2016-08-03T18:26:29,Brad King,0,550
202adcfe056681109fe61569ecdb3bd69f0b4f97,"curl 2016-08-03 (f2cb3a01)

Code extracted from:

    https://github.com/bagder/curl.git

at commit f2cb3a01192d36395d16acec6cdb93446ca6fd45 (curl-7_50_1).",[],lib/tftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_202.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_202.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_202.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_464.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_464.cpp,494,494,517,519,"snprintf( buf, sizeof(buf), ""%d"", state->retry_time);","snprintf(buf, sizeof(buf), ""%d"", state->retry_time);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_371.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_371.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_371.cpp,72,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_371.cpp,74,"[""char *"", ""unkown"", ""string"", ""member""]","[""curl_easy_unescape_ret"", ""!"", ""!""]","set([u'char buf [ 64 ] ;', u'struct Curl_easy * data = state -> conn -> data ;', u'tftp_state_data_t * state', u'state -> retries ++'])","set([0, 19, 6, 7])","[[], []]",2016-08-03T18:26:29,Brad King,0,550
d38fc22132db1b82fad1ef5b8a7f5e030c71a90f,Merge branch 'update-libarchive' into release,[],Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_205.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_205.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_205.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_468.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_468.cpp,2127,2127,2129,2130,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                          ""Invalid zero dictionary size"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_372.cpp,68,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_372.cpp,69,"[""member"", ""member"", ""unkown""]","[""bool"", ""int"", ""=="", ""!""]","set([u'struct archive_read * a', u'rar -> range_dec . Stream = & rar -> bytein', u'struct rar * rar = ( struct rar * ) ( a -> format -> data ) ;', u'rar -> dictionary_size = ( rar_br_bits ( br , 8 ) + 1 ) << 20'])","set([1, 31, 65, 7])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Invalid', 'zero', 'dictionary', 'size']]",2016-06-20T14:53:25,Brad King,4794432139839251159,377
d38fc22132db1b82fad1ef5b8a7f5e030c71a90f,Merge branch 'update-libarchive' into release,[],Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_205.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_205.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_205.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_470.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_470.cpp,2900,2905,2906,2912,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                        ""Bad RAR file data"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_373.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_373.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_373.cpp,38,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_373.cpp,38,[],"[""lzss_size_ret"", ""null"", ""<"", ""!""]","set([u'struct rar * rar = ( struct rar * ) ( a -> format -> data ) ;', u'int length', u'struct archive_read * a'])","set([1, 2, 5])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Bad', 'RAR', 'file', 'data']]",2016-06-20T14:53:25,Brad King,-7062901460062136790,378
52f58267c311550db83f4a9430f378e730bd3d6b,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2016-06-19 (139d0576)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_207.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_207.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_207.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_472.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_472.cpp,2127,2127,2129,2130,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                          ""Invalid zero dictionary size"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_374.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_374.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_374.cpp,68,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_374.cpp,69,"[""member"", ""member"", ""unkown""]","[""bool"", ""int"", ""=="", ""!""]","set([u'rar -> dictionary_size = ( rar_br_bits ( br , 8 ) + 1 ) << 20', u'rar -> range_dec . Stream = & rar -> bytein', u'struct rar * rar = ( struct rar * ) ( a -> format -> data ) ;', u'struct archive_read * a'])","set([65, 31, 1, 7])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Invalid', 'zero', 'dictionary', 'size']]",2016-06-20T14:50:13,Brad King,4794432139839251159,377
52f58267c311550db83f4a9430f378e730bd3d6b,"Merge branch 'upstream-LibArchive' into update-libarchive

* upstream-LibArchive:
  LibArchive 2016-06-19 (139d0576)",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_207.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_207.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_207.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_474.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_474.cpp,2900,2905,2906,2912,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                        ""Bad RAR file data"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_375.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_375.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_375.cpp,38,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_375.cpp,38,[],"[""lzss_offset_for_position_ret"", ""lzss_size_ret"", ""<=""]","set([u'struct archive_read * a', u'int length', u'struct rar * rar = ( struct rar * ) ( a -> format -> data ) ;'])","set([1, 2, 5])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Bad', 'RAR', 'file', 'data']]",2016-06-20T14:50:13,Brad King,-7062901460062136790,378
2b94d71d8850d68b677d5653c698371528344a10,"LibArchive 2016-06-19 (139d0576)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 139d0576b51a253732a5ab1f66805dffbf8b00af (master).",[],libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_209.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_209.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_209.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_476.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_476.cpp,2127,2127,2129,2130,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                          ""Invalid zero dictionary size"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_376.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_376.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_376.cpp,68,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_376.cpp,69,"[""member"", ""member"", ""unkown""]","[""int"", ""int"", ""=="", ""!""]","set([u'rar -> dictionary_size = ( rar_br_bits ( br , 8 ) + 1 ) << 20', u'rar -> range_dec . Stream = & rar -> bytein', u'struct archive_read * a', u'struct rar * rar = ( struct rar * ) ( a -> format -> data ) ;'])","set([1, 7, 65, 31])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Invalid', 'zero', 'dictionary', 'size']]",2016-06-20T14:50:05,Brad King,4794432139839251159,377
2b94d71d8850d68b677d5653c698371528344a10,"LibArchive 2016-06-19 (139d0576)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 139d0576b51a253732a5ab1f66805dffbf8b00af (master).",[],libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_209.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_209.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_209.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_478.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_478.cpp,2900,2905,2906,2912,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                        ""Bad RAR file data"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_377.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_377.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_377.cpp,38,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_377.cpp,38,[],"[""lzss_size_ret"", ""null"", ""<"", ""!""]","set([u'struct rar * rar = ( struct rar * ) ( a -> format -> data ) ;', u'int length', u'struct archive_read * a'])","set([1, 2, 5])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Bad', 'RAR', 'file', 'data']]",2016-06-20T14:50:05,Brad King,-7062901460062136790,378
fb4791b37ccea1f38b8625b31df952408ab942f3,"cmCoreTryCompile: Refactor forwarding of variables to test project

De-duplicate the logic that constructs the cmake `-D` flag used to pass
variables into the test project cache.  Also subsume variables that were
propagated by generating `set()` commands in the project and pass them
as cache entries instead.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_211.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_211.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_211.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_480.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_480.cpp,383,405,446,-1,"fprintf(fout, ""set(CMAKE_POSITION_INDEPENDENT_CODE \""ON\"")\n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_378.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_378.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_378.cpp,424,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_378.cpp,-1,"[""FILE *"", ""string""]","[""this -> Makefile -> GetDefinition_ret"", ""null"", ""!=""]","set([u'struct rar * rar = ( struct rar * ) ( a -> format -> data ) ;', u'int length', u'struct archive_read * a'])","set([1, 2, 5])","[['fprintf', 'fout', 'set', 'CMAKE_POSITION_INDEPENDENT_CODE', '\\', 'ON\\', '\\n'], []]",2016-05-25T13:36:19,Brad King,-2788827996048506769,23
fb4791b37ccea1f38b8625b31df952408ab942f3,"cmCoreTryCompile: Refactor forwarding of variables to test project

De-duplicate the logic that constructs the cmake `-D` flag used to pass
variables into the test project cache.  Also subsume variables that were
propagated by generating `set()` commands in the project and pass them
as cache entries instead.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_211.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_211.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_211.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_480.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_480.cpp,383,405,450,-1,"fprintf(fout, ""set(CMAKE_LINK_SEARCH_START_STATIC \""%s\"")\n"", lssDef);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_379.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_379.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_379.cpp,428,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_379.cpp,-1,"[""FILE *"", ""string"", ""unkown""]","[""unkown"", ""this -> Makefile -> GetDefinition_ret""]","set([u'struct rar * rar = ( struct rar * ) ( a -> format -> data ) ;', u'int length', u'struct archive_read * a'])","set([1, 2, 5])","[['fprintf', 'fout', 'set', 'CMAKE_LINK_SEARCH_START_STATIC', '\\', '%s\\', '\\n', 'lssDef'], []]",2016-05-25T13:36:19,Brad King,19595671266818122665,24
fb4791b37ccea1f38b8625b31df952408ab942f3,"cmCoreTryCompile: Refactor forwarding of variables to test project

De-duplicate the logic that constructs the cmake `-D` flag used to pass
variables into the test project cache.  Also subsume variables that were
propagated by generating `set()` commands in the project and pass them
as cache entries instead.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_211.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_211.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_211.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_480.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_480.cpp,383,405,454,-1,"fprintf(fout, ""set(CMAKE_LINK_SEARCH_END_STATIC \""%s\"")\n"", lssDef);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_380.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_380.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_380.cpp,432,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_380.cpp,-1,"[""FILE *"", ""string"", ""unkown""]","[""unkown"", ""this -> Makefile -> GetDefinition_ret""]","set([u'struct rar * rar = ( struct rar * ) ( a -> format -> data ) ;', u'int length', u'struct archive_read * a'])","set([1, 2, 5])","[['fprintf', 'fout', 'set', 'CMAKE_LINK_SEARCH_END_STATIC', '\\', '%s\\', '\\n', 'lssDef'], []]",2016-05-25T13:36:19,Brad King,10825080114001287452,25
fb4791b37ccea1f38b8625b31df952408ab942f3,"cmCoreTryCompile: Refactor forwarding of variables to test project

De-duplicate the logic that constructs the cmake `-D` flag used to pass
variables into the test project cache.  Also subsume variables that were
propagated by generating `set()` commands in the project and pass them
as cache entries instead.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_211.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_211.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_211.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_481.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_481.cpp,461,451,465,-1,"fprintf(fout, ""set(CMAKE_ENABLE_EXPORTS %s)\n"", ee);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_381.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_381.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_381.cpp,443,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_381.cpp,-1,"[""FILE *"", ""string"", ""unkown""]","[""unkown"", ""this -> Makefile -> GetDefinition_ret""]","set([u'struct rar * rar = ( struct rar * ) ( a -> format -> data ) ;', u'int length', u'struct archive_read * a'])","set([1, 2, 5])","[['fprintf', 'fout', 'set', 'CMAKE_ENABLE_EXPORTS', '%s', '\\n', 'ee'], []]",2016-05-25T13:36:19,Brad King,8591344984148387584,26
e4a92dab3fa81a893a52dd1a774db79c4363fda6,"cmListFileLexer: Update to flex 2.6

Revise the documented modifications we need to make to the
flex-generated source file according to the needs of the new version.
Update our own implementation to avoid warnings with flex types.",[],Source/cmListFileLexer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_212.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_212.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_212.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_489.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_489.cpp,2091,2156,2102,2167,"yy_fatal_error( ""cmListFileLexer_yyset_lineno called with no buffer"" , yyscanner);","YY_FATAL_ERROR( ""cmListFileLexer_yyset_lineno called with no buffer"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_383.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_383.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_383.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_383.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([]),set([]),"[['yy_fatal_error', 'yyscanner'], ['YY_FATAL_ERROR']]",2016-05-17T14:56:37,Brad King,-3528205590648888989,546
e4a92dab3fa81a893a52dd1a774db79c4363fda6,"cmListFileLexer: Update to flex 2.6

Revise the documented modifications we need to make to the
flex-generated source file according to the needs of the new version.
Update our own implementation to avoid warnings with flex types.",[],Source/cmListFileLexer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_212.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_212.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_212.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_489.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_489.cpp,2091,2156,2117,2182,"yy_fatal_error( ""cmListFileLexer_yyset_column called with no buffer"" , yyscanner);","YY_FATAL_ERROR( ""cmListFileLexer_yyset_column called with no buffer"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_384.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_384.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_384.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_384.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([]),set([]),"[['yy_fatal_error', 'yyscanner'], ['YY_FATAL_ERROR']]",2016-05-17T14:56:37,Brad King,-3528205590648888989,546
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_xar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_219.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_219.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_219.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_502.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_502.cpp,1939,1939,1942,-1,"fprintf(stderr, ""unknowntag_start:%s\n"", name);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_385.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_385.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_385.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_385.cpp,-1,"[""unkown"", ""string"", ""const char *""]",[],set([]),set([]),"[['fprintf', 'stderr', 'unknowntag_start', '%s\\n', 'name'], []]",2016-05-02T14:48:48,Brad King,16468113237548309376,379
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_xar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_219.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_219.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_219.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_503.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_503.cpp,1951,1948,1954,1951,,"fprintf(stderr, ""UNKNOWNTAG_START:%s\n"", name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_386.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_386.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_386.cpp,15,[],"[""member"", ""null"", ""==""]","set([u'struct xar * xar', u'const char * name'])",set([1]),"[[], ['fprintf', 'stderr', 'UNKNOWNTAG_START', '%s\\n', 'name']]",2016-05-02T14:48:48,Brad King,-16468113237548309376,380
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_xar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_219.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_219.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_219.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_504.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_504.cpp,1963,1963,1966,1974,"fprintf(stderr, ""unknowntag_end:%s\n"", name);","fprintf(stderr, ""UNKNOWNTAG_END:%s\n"", name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_387.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_387.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_387.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_387.cpp,14,"[""unkown"", ""string"", ""const char *""]",[],"set([u'struct xar * xar', u'xar -> unknowntags = tag -> next', u'const char * name'])","set([9, 1])","[['unknowntag_end'], ['UNKNOWNTAG_END']]",2016-05-02T14:48:48,Brad King,0,550
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_220.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_220.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_220.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_507.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_507.cpp,810,825,814,829,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Truncated ZIP file header"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_388.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_388.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_388.cpp,108,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_388.cpp,108,[],"[""archive_entry_copy_pathname_l_ret"", ""null"", ""!="", ""!""]","set([u'struct archive_read * a', u'extra_length = archive_le16dec ( p + 28 )'])","set([65, 1])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Truncated', 'ZIP', 'file', 'header']]",2016-05-02T14:48:48,Brad King,-20397270103879960314,381
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_220.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_220.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_220.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_508.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_508.cpp,843,868,847,878,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Truncated ZIP file header"");","archive_wstrcat(&s, wp);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_389.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_389.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_389.cpp,141,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_389.cpp,157,"[""member"", ""macro"", ""string""]","[""__archive_read_ahead_ret"", ""null"", ""==""]",set([u'wp = archive_entry_pathname_w ( entry )']),set([151]),"[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Truncated', 'ZIP', 'file', 'header'], ['archive_wstrcat', '&s', 'wp']]",2016-05-02T14:48:48,Brad King,24769708278161601044,382
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_220.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_220.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_220.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_510.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_510.cpp,2746,2803,2749,2806,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Mac metadata is too large: %jd > 4M bytes"",
		    (intmax_t)rsrc->compressed_size);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_391.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_391.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_391.cpp,34,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_391.cpp,39,"[""member""]","[""member"", ""int"", "">"", ""!""]","set([u'struct zip_entry * rsrc', u'struct archive_read * a'])","set([1, 2])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Mac', 'metadata', 'is', 'too', 'large', '%jd', '4M', 'bytes', 'intmax_t', 'rsrc', 'compressed_size']]",2016-05-02T14:48:48,Brad King,-13317889119178648419,383
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_write_add_filter_lz4.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_221.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_221.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_221.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_512.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_512.cpp,160,160,166,170,,"archive_set_error(f->archive, ARCHIVE_ERRNO_PROGRAMMER,
				""High compression not included in this build"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_392.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_392.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_392.cpp,11,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_392.cpp,15,[],"[""const char *"", ""null"", ""=="", ""member"", ""char"", "">="", ""member"", ""char"", ""<="", ""&&"", ""!"", ""member"", ""char"", ""!="", ""||"", ""||"", ""!""]","set([u""value == NULL || ! ( ( val = value [ 0 ] - '0' ) >= 1 && val <= 9 ) || value [ 1 ] != '\\0'"", u'struct archive_write_filter * f'])","set([8, 1])","[[], ['archive_set_error', 'f', 'archive', 'ARCHIVE_ERRNO_PROGRAMMER', 'High', 'compression', 'not', 'included', 'in', 'this', 'build']]",2016-05-02T14:48:48,Brad King,16761169265135671312,384
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_write_add_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_222.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_222.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_222.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_514.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_514.cpp,231,233,232,234,"archive_set_error(f->archive, EINVAL,
		    ""Can't initialise filter"");","archive_set_error(f->archive, EINVAL,
		    ""Can't launch external program: %s"", cmd);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_393.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_393.cpp,26,"[""member"", ""macro"", ""string""]","[""__archive_create_child_ret"", ""int"", ""==""]","set([u'struct archive_write_filter * f', u'child = __archive_create_child ( cmd , & data -> child_stdin , & data -> child_stdout )', u'const char * cmd'])","set([1, 2, 23])","[['initialise', 'filter'], ['launch', 'external', 'program', '%s', 'cmd']]",2016-05-02T14:48:48,Brad King,-7904468385680866795,525
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_write_add_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_222.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_222.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_222.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_515.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_515.cpp,242,244,243,245,"archive_set_error(f->archive, EINVAL,
		    ""Can't initialise filter"");","archive_set_error(f->archive, EINVAL,
		    ""Can't launch external program: %s"", cmd);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_394.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_394.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_394.cpp,37,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_394.cpp,37,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""==""]","set([u'struct archive_write_filter * f', u'data -> child = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , child )', u'const char * cmd', u'struct archive_write_program_data * data'])","set([1, 2, 31])","[['initialise', 'filter'], ['launch', 'external', 'program', '%s', 'cmd']]",2016-05-02T14:48:48,Brad King,-7904468385680866795,525
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_write_add_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_222.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_222.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_222.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_516.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_516.cpp,334,336,335,337,"archive_set_error(f->archive, EIO,
			    ""Can't write to filter"");","archive_set_error(f->archive, EIO,
			    ""Can't write to program: %s"", data->program_name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_395.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_395.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_395.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_395.cpp,14,"[""member"", ""macro"", ""string""]","[""child_write_ret"", ""int"", ""=="", ""child_write_ret"", ""null"", ""=="", ""||""]","set([u'ret = child_write ( f , data , buf , length )', u'struct archive_write_program_data * data', u'struct archive_write_filter * f'])","set([1, 2, 12])","[['filter'], ['program', '%s', 'data', 'program_name']]",2016-05-02T14:48:48,Brad King,-8666764854539332521,385
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_write_add_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_222.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_222.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_222.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_517.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_517.cpp,373,375,374,376,"archive_set_error(f->archive, errno,
			    ""Read from filter failed unexpectedly."");","archive_set_error(f->archive, errno,
			    ""Error reading from program: %s"", data->program_name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_396.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_396.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_396.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_396.cpp,26,"[""member"", ""unkown"", ""constant""]","[""read_ret"", ""int"", ""==""]","set([u'data -> child_stdin = - 1', u'struct archive_write_filter * f', u'bytes_read = read ( data -> child_stdout , data -> child_buf + data -> child_buf_avail , data -> child_buf_len - data -> child_buf_avail )', u'data -> child_buf_avail = 0', u'struct archive_write_program_data * data'])","set([17, 2, 12, 1, 39])","[['Read', 'filter', 'failed', 'unexpectedly'], ['Error', 'reading', 'program', '%s', 'data', 'program_name']]",2016-05-02T14:48:48,Brad King,14520298122781847424,386
e9bc469b2abcd0ad4cb3ad4bfefbc5ef1f559c1b,"Merge branch 'upstream-LibArchive' into update-libarchive

Resolve conflicts in C code by taking their side.  Resolve conflicts in
CMake code by integrating the changes.",[],Utilities/cmlibarchive/libarchive/archive_write_add_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_222.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_222.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_222.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_518.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_518.cpp,403,405,404,406,"archive_set_error(f->archive, EIO,
		    ""Filter exited with failure."");","archive_set_error(f->archive, EIO,
		    ""Error closing program: %s"", data->program_name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_397.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_397.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_397.cpp,56,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_397.cpp,56,"[""member"", ""macro"", ""constant""]","[""int"", ""null"", ""!=""]","set([u'int ret , r1 , status ;', u'struct archive_write_filter * f', u'data -> child = 0', u'struct archive_write_program_data * data'])","set([1, 2, 4, 53])","[['Filter', 'exited', 'with', 'failure'], ['Error', 'closing', 'program', '%s', 'data', 'program_name']]",2016-05-02T14:48:48,Brad King,-646437507453453410,387
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_read_support_format_xar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_228.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_228.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_228.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_527.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_527.cpp,1939,1939,1942,-1,"fprintf(stderr, ""unknowntag_start:%s\n"", name);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_398.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_398.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_398.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_398.cpp,-1,"[""unkown"", ""string"", ""const char *""]",[],"set([u'int ret , r1 , status ;', u'struct archive_write_filter * f', u'data -> child = 0', u'struct archive_write_program_data * data'])","set([1, 2, 4, 53])","[['fprintf', 'stderr', 'unknowntag_start', '%s\\n', 'name'], []]",2016-05-02T14:25:52,Brad King,16468113237548309376,379
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_read_support_format_xar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_228.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_228.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_228.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_528.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_528.cpp,1951,1948,1954,1951,,"fprintf(stderr, ""UNKNOWNTAG_START:%s\n"", name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_399.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_399.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_399.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_399.cpp,15,[],"[""member"", ""null"", ""==""]","set([u'struct xar * xar', u'const char * name'])",set([1]),"[[], ['fprintf', 'stderr', 'UNKNOWNTAG_START', '%s\\n', 'name']]",2016-05-02T14:25:52,Brad King,-16468113237548309376,380
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_read_support_format_xar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_228.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_228.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_228.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_529.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_529.cpp,1963,1963,1966,1974,"fprintf(stderr, ""unknowntag_end:%s\n"", name);","fprintf(stderr, ""UNKNOWNTAG_END:%s\n"", name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_400.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_400.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_400.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_400.cpp,14,"[""unkown"", ""string"", ""const char *""]",[],"set([u'struct xar * xar', u'xar -> unknowntags = tag -> next', u'const char * name'])","set([9, 1])","[['unknowntag_end'], ['UNKNOWNTAG_END']]",2016-05-02T14:25:52,Brad King,0,550
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_229.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_229.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_229.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_532.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_532.cpp,810,825,814,829,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Truncated ZIP file header"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_401.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_401.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_401.cpp,108,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_401.cpp,108,[],"[""archive_entry_copy_pathname_l_ret"", ""null"", ""!="", ""!""]","set([u'struct archive_read * a', u'extra_length = archive_le16dec ( p + 28 )'])","set([65, 1])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Truncated', 'ZIP', 'file', 'header']]",2016-05-02T14:25:52,Brad King,-20397270103879960314,381
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_229.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_229.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_229.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_533.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_533.cpp,843,868,847,878,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Truncated ZIP file header"");","archive_wstrcat(&s, wp);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_402.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_402.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_402.cpp,141,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_402.cpp,157,"[""member"", ""macro"", ""string""]","[""__archive_read_ahead_ret"", ""null"", ""==""]",set([u'wp = archive_entry_pathname_w ( entry )']),set([151]),"[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Truncated', 'ZIP', 'file', 'header'], ['archive_wstrcat', '&s', 'wp']]",2016-05-02T14:25:52,Brad King,24769708278161601044,382
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_229.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_229.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_229.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_535.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_535.cpp,2746,2803,2749,2806,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Mac metadata is too large: %jd > 4M bytes"",
		    (intmax_t)rsrc->compressed_size);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_404.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_404.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_404.cpp,34,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_404.cpp,39,"[""member""]","[""member"", ""int"", "">"", ""!""]","set([u'struct zip_entry * rsrc', u'struct archive_read * a'])","set([1, 2])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Mac', 'metadata', 'is', 'too', 'large', '%jd', '4M', 'bytes', 'intmax_t', 'rsrc', 'compressed_size']]",2016-05-02T14:25:52,Brad King,-13317889119178648419,383
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_write_add_filter_lz4.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_230.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_230.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_230.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_537.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_537.cpp,160,160,166,170,,"archive_set_error(f->archive, ARCHIVE_ERRNO_PROGRAMMER,
				""High compression not included in this build"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_405.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_405.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_405.cpp,11,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_405.cpp,15,[],"[""const char *"", ""null"", ""=="", ""member"", ""char"", "">="", ""member"", ""char"", ""<="", ""&&"", ""!"", ""member"", ""char"", ""!="", ""||"", ""||"", ""!""]","set([u""value == NULL || ! ( ( val = value [ 0 ] - '0' ) >= 1 && val <= 9 ) || value [ 1 ] != '\\0'"", u'struct archive_write_filter * f'])","set([8, 1])","[[], ['archive_set_error', 'f', 'archive', 'ARCHIVE_ERRNO_PROGRAMMER', 'High', 'compression', 'not', 'included', 'in', 'this', 'build']]",2016-05-02T14:25:52,Brad King,16761169265135671312,384
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_write_add_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_231.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_231.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_231.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_539.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_539.cpp,231,233,232,234,"archive_set_error(f->archive, EINVAL,
		    ""Can't initialise filter"");","archive_set_error(f->archive, EINVAL,
		    ""Can't launch external program: %s"", cmd);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_406.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_406.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_406.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_406.cpp,26,"[""member"", ""macro"", ""string""]","[""__archive_create_child_ret"", ""int"", ""==""]","set([u'struct archive_write_filter * f', u'child = __archive_create_child ( cmd , & data -> child_stdin , & data -> child_stdout )', u'const char * cmd'])","set([1, 2, 23])","[['initialise', 'filter'], ['launch', 'external', 'program', '%s', 'cmd']]",2016-05-02T14:25:52,Brad King,-7904468385680866795,525
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_write_add_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_231.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_231.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_231.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_540.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_540.cpp,242,244,243,245,"archive_set_error(f->archive, EINVAL,
		    ""Can't initialise filter"");","archive_set_error(f->archive, EINVAL,
		    ""Can't launch external program: %s"", cmd);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_407.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_407.cpp,37,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_407.cpp,37,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""==""]","set([u'struct archive_write_filter * f', u'data -> child = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , child )', u'const char * cmd', u'struct archive_write_program_data * data'])","set([1, 2, 31])","[['initialise', 'filter'], ['launch', 'external', 'program', '%s', 'cmd']]",2016-05-02T14:25:52,Brad King,-7904468385680866795,525
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_write_add_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_231.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_231.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_231.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_541.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_541.cpp,334,336,335,337,"archive_set_error(f->archive, EIO,
			    ""Can't write to filter"");","archive_set_error(f->archive, EIO,
			    ""Can't write to program: %s"", data->program_name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_408.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_408.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_408.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_408.cpp,14,"[""member"", ""macro"", ""string""]","[""child_write_ret"", ""int"", ""=="", ""child_write_ret"", ""null"", ""=="", ""||""]","set([u'ret = child_write ( f , data , buf , length )', u'struct archive_write_filter * f', u'struct archive_write_program_data * data'])","set([1, 2, 12])","[['filter'], ['program', '%s', 'data', 'program_name']]",2016-05-02T14:25:52,Brad King,-8666764854539332521,385
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_write_add_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_231.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_231.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_231.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_542.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_542.cpp,373,375,374,376,"archive_set_error(f->archive, errno,
			    ""Read from filter failed unexpectedly."");","archive_set_error(f->archive, errno,
			    ""Error reading from program: %s"", data->program_name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_409.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_409.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_409.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_409.cpp,26,"[""member"", ""unkown"", ""constant""]","[""read_ret"", ""int"", ""==""]","set([u'data -> child_stdin = - 1', u'struct archive_write_filter * f', u'bytes_read = read ( data -> child_stdout , data -> child_buf + data -> child_buf_avail , data -> child_buf_len - data -> child_buf_avail )', u'struct archive_write_program_data * data', u'data -> child_buf_avail = 0'])","set([17, 2, 12, 1, 39])","[['Read', 'filter', 'failed', 'unexpectedly'], ['Error', 'reading', 'program', '%s', 'data', 'program_name']]",2016-05-02T14:25:52,Brad King,14520298122781847424,386
501345e470bb9c5b0cb61aff84bd50ffdd95b92d,"LibArchive 2016-04-30 (167e97be)

Code extracted from:

    https://github.com/libarchive/libarchive.git

at commit 167e97be1d35c1e0947d768adbf94712244aad6b (master).",[],libarchive/archive_write_add_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_231.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_231.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_231.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_543.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_543.cpp,403,405,404,406,"archive_set_error(f->archive, EIO,
		    ""Filter exited with failure."");","archive_set_error(f->archive, EIO,
		    ""Error closing program: %s"", data->program_name);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_410.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_410.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_410.cpp,56,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_410.cpp,56,"[""member"", ""macro"", ""constant""]","[""int"", ""null"", ""!=""]","set([u'struct archive_write_filter * f', u'struct archive_write_program_data * data', u'int ret , r1 , status ;', u'data -> child = 0'])","set([1, 2, 4, 53])","[['Filter', 'exited', 'with', 'failure'], ['Error', 'closing', 'program', '%s', 'data', 'program_name']]",2016-05-02T14:25:52,Brad King,-646437507453453410,387
7f1bd9fe6910f7633d98dec018cc01331a46b87e,"try_compile: Add option to control type of target

Create a `CMAKE_TRY_COMPILE_TARGET_TYPE` option to specify use
of `add_library(... STATIC ...)` for the generated test project.
This will be useful for cross-compiling toolchains that cannot
link a binary without custom flags or scripts.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_233.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_545.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_545.cpp,486,515,489,-1,"f(fout, ""set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \""%s\"")\n"",
            this->BinaryDirectory.c_str());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_411.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_411.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_411.cpp,468,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_411.cpp,-1,"[""FILE *"", ""string"", ""this -> BinaryDirectory . c_str_ret""]","[""tcfg . GenerateImportFile_ret"", ""!""]","set([u'struct archive_write_filter * f', u'struct archive_write_program_data * data', u'int ret , r1 , status ;', u'data -> child = 0'])","set([1, 2, 4, 53])","[['f', 'fout', 'set', 'CMAKE_RUNTIME_OUTPUT_DIRECTORY', '\\', '%s\\', '\\n', 'this', 'BinaryDirectory', 'c_str'], []]",2016-02-19T19:07:38,Brad King,8227568388036273317,27
7f1bd9fe6910f7633d98dec018cc01331a46b87e,"try_compile: Add option to control type of target

Create a `CMAKE_TRY_COMPILE_TARGET_TYPE` option to specify use
of `add_library(... STATIC ...)` for the generated test project.
This will be useful for cross-compiling toolchains that cannot
link a binary without custom flags or scripts.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_233.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_545.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_545.cpp,486,515,492,517,"fprintf(fout, ""add_executable(%s"", targetName.c_str());","(targetType == cmState::EXECUTABLE)
      {
      /* Put the executable at a known location (for COPY_FILE).  */
      fprintf(fout, ""set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \""%s\"")\n"",
              this->BinaryDirectory.c_str());
      /* Create the actual executable.  */
      fprintf(fout, ""add_executable(%s"", targetName.c_str());
      };",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_412.cpp,471,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_412.cpp,496,"[""FILE *"", ""string"", ""targetName . c_str_ret""]","[""targets . empty_ret"", ""!""]","set([u'std :: vector < std :: string > targets ;', u'targetType = cmState :: STATIC_LIBRARY', u'cmExportTryCompileFileGenerator tcfg ( gg , targets , this -> Makefile ) ;', u'targetType = cmState :: EXECUTABLE', u'cmState :: TargetType targetType = cmState :: EXECUTABLE ;'])","set([8, 385, 44, 20, 15])","[[], ['targetType', 'cmState', 'EXECUTABLE', '/*', 'Put', 'the', 'executable', 'at', 'a', 'known', 'location', 'for', 'COPY_FILE', '*/', 'set', 'CMAKE_RUNTIME_OUTPUT_DIRECTORY', '\\', '%s\\', '\\n', 'this', 'BinaryDirectory', '/*', 'Create', 'the', 'actual', 'executable', '*/', 'fprintf', 'fout', 'c_str']]",2016-02-19T19:07:38,Brad King,4847676516501967382,28
7f1bd9fe6910f7633d98dec018cc01331a46b87e,"try_compile: Add option to control type of target

Create a `CMAKE_TRY_COMPILE_TARGET_TYPE` option to specify use
of `add_library(... STATIC ...)` for the generated test project.
This will be useful for cross-compiling toolchains that cannot
link a binary without custom flags or scripts.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_233.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_545.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_545.cpp,486,515,492,520,,"fprintf(fout, ""set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \""%s\"")\n"",
              this->BinaryDirectory.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_413.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_413.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_413.cpp,471,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_413.cpp,499,"[""FILE *"", ""string"", ""targetName . c_str_ret""]","[""tcfg . GenerateImportFile_ret"", ""!""]","set([u'targetType = cmState :: STATIC_LIBRARY', u'cmState :: TargetType targetType = cmState :: EXECUTABLE ;', u'this -> SrcFileSignature = true', u'this -> BinaryDirectory += ""/CMakeTmp""', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName , ""w"" ) ;', u'this -> BinaryDirectory = argv [ 1 ] . c_str ( )', u'targetType = cmState :: EXECUTABLE', u'this -> SrcFileSignature = false'])","set([3, 6, 8, 202, 15, 147, 20, 280])","[[], ['fprintf', 'fout', 'set', 'CMAKE_RUNTIME_OUTPUT_DIRECTORY', '\\', '%s\\', '\\n', 'this', 'BinaryDirectory', 'c_str']]",2016-02-19T19:07:38,Brad King,-13431706875402183800,29
7f1bd9fe6910f7633d98dec018cc01331a46b87e,"try_compile: Add option to control type of target

Create a `CMAKE_TRY_COMPILE_TARGET_TYPE` option to specify use
of `add_library(... STATIC ...)` for the generated test project.
This will be useful for cross-compiling toolchains that cannot
link a binary without custom flags or scripts.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_233.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_545.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_545.cpp,486,515,492,523,,"fprintf(fout, ""add_executable(%s"", targetName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_414.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_414.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_414.cpp,471,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_414.cpp,502,"[""FILE *"", ""string"", ""targetName . c_str_ret""]","[""tcfg . GenerateImportFile_ret"", ""!""]","set([u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName , ""w"" ) ;', u'targetName = targetNameBuf', u'targetType = cmState :: EXECUTABLE', u'cmState :: TargetType targetType = cmState :: EXECUTABLE ;', u'targetType = cmState :: STATIC_LIBRARY'])","set([8, 280, 380, 20, 15])","[[], ['fprintf', 'fout', 'add_executable', '%s', 'targetName', 'c_str']]",2016-02-19T19:07:38,Brad King,-19302527051556474736,30
7f1bd9fe6910f7633d98dec018cc01331a46b87e,"try_compile: Add option to control type of target

Create a `CMAKE_TRY_COMPILE_TARGET_TYPE` option to specify use
of `add_library(... STATIC ...)` for the generated test project.
This will be useful for cross-compiling toolchains that cannot
link a binary without custom flags or scripts.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_233.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_545.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_545.cpp,486,515,493,528,,"fprintf(fout, ""set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \""%s\"")\n"",
              this->BinaryDirectory.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_415.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_415.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_415.cpp,472,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_415.cpp,507,[],"[""targets . empty_ret"", ""!""]","set([u'targetType = cmState :: STATIC_LIBRARY', u'cmState :: TargetType targetType = cmState :: EXECUTABLE ;', u'this -> SrcFileSignature = true', u'this -> BinaryDirectory += ""/CMakeTmp""', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName , ""w"" ) ;', u'this -> BinaryDirectory = argv [ 1 ] . c_str ( )', u'targetType = cmState :: EXECUTABLE', u'this -> SrcFileSignature = false'])","set([3, 6, 8, 202, 15, 147, 20, 280])","[[], ['fprintf', 'fout', 'set', 'CMAKE_ARCHIVE_OUTPUT_DIRECTORY', '\\', '%s\\', '\\n', 'this', 'BinaryDirectory', 'c_str']]",2016-02-19T19:07:38,Brad King,-13784690946064249438,31
7f1bd9fe6910f7633d98dec018cc01331a46b87e,"try_compile: Add option to control type of target

Create a `CMAKE_TRY_COMPILE_TARGET_TYPE` option to specify use
of `add_library(... STATIC ...)` for the generated test project.
This will be useful for cross-compiling toolchains that cannot
link a binary without custom flags or scripts.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_233.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_233.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_545.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_545.cpp,486,515,493,531,,"fprintf(fout, ""add_library(%s STATIC"", targetName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_416.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_416.cpp,472,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_416.cpp,510,[],"[""targets . empty_ret"", ""!""]","set([u'targetName = targetNameBuf', u'targetType = cmState :: EXECUTABLE', u'cmState :: TargetType targetType = cmState :: EXECUTABLE ;', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName , ""w"" ) ;', u'targetType = cmState :: STATIC_LIBRARY'])","set([8, 20, 380, 280, 15])","[[], ['fprintf', 'fout', 'add_library', '%s', 'STATIC', 'targetName', 'c_str']]",2016-02-19T19:07:38,Brad King,-17458282166243757976,32
1c1ace2db012919f23b6de5400ab192b9277dfc6,"De-duplicate symbols listed in generated module definition files

MS tools have a limit on the number of symbols that can be listed
in a `.def` file.  If multiple `.obj` files provide a symbol then
avoid listing it more than once in the generated `.def` file to
avoid counting toward the limit.",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_234.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_234.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_234.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_546.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_546.cpp,296,298,300,-1,"fprintf(this->FileOut,""EXPORTS \n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_417.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_417.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_417.cpp,44,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_417.cpp,-1,"[""member"", ""string""]","[""member""]","set([u'targetName = targetNameBuf', u'targetType = cmState :: EXECUTABLE', u'cmState :: TargetType targetType = cmState :: EXECUTABLE ;', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName , ""w"" ) ;', u'targetType = cmState :: STATIC_LIBRARY'])","set([8, 20, 380, 280, 15])","[['fprintf', 'this', 'FileOut', 'EXPORTS', '\\n'], []]",2015-11-18T15:02:48,Brad King,-10053527261097950207,33
1c1ace2db012919f23b6de5400ab192b9277dfc6,"De-duplicate symbols listed in generated module definition files

MS tools have a limit on the number of symbols that can be listed
in a `.def` file.  If multiple `.obj` files provide a symbol then
avoid listing it more than once in the generated `.def` file to
avoid counting toward the limit.",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_234.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_234.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_234.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_547.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_547.cpp,319,317,321,319,"fprintf(this->FileOut, ""\t%s \t DATA\n"", symbol.c_str());",this->DataSymbols.insert(symbol);,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_418.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_418.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_418.cpp,65,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_418.cpp,61,"[""member"", ""string"", ""symbol . c_str_ret""]","[""member"", ""bool"", ""&&""]","set([u'symbol = """"', u'SectChar = this -> SectionHeaders [ pSymbolTable -> SectionNumber - 1 ] . Characteristics', u'symbol = stringTable + pSymbolTable -> N . Name . Long', u'pSymbolTable ++', u'SymbolTableType * pSymbolTable = this -> SymbolTable ;'])","set([56, 9, 18, 91, 21])","[['fprintf', 'FileOut', '\\t%s', '\\t', 'DATA\\n', 'c_str'], ['DataSymbols', 'insert']]",2015-11-18T15:02:48,Brad King,-5613835652776915960,34
1c1ace2db012919f23b6de5400ab192b9277dfc6,"De-duplicate symbols listed in generated module definition files

MS tools have a limit on the number of symbols that can be listed
in a `.def` file.  If multiple `.obj` files provide a symbol then
avoid listing it more than once in the generated `.def` file to
avoid counting toward the limit.",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_234.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_234.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_234.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_547.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_547.cpp,319,317,325,323,"fprintf(this->FileOut, ""\t%s\n"", symbol.c_str());",this->Symbols.insert(symbol);,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_419.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_419.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_419.cpp,69,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_419.cpp,65,"[""member"", ""string"", ""symbol . c_str_ret""]","[""member"", ""bool"", ""!"", ""||""]","set([u'symbol = """"', u'SectChar = this -> SectionHeaders [ pSymbolTable -> SectionNumber - 1 ] . Characteristics', u'symbol = stringTable + pSymbolTable -> N . Name . Long', u'pSymbolTable ++', u'SymbolTableType * pSymbolTable = this -> SymbolTable ;'])","set([56, 9, 18, 91, 21])","[['fprintf', 'FileOut', '\\t%s\\n', 'c_str'], ['Symbols', 'insert']]",2015-11-18T15:02:48,Brad King,7773652303779591138,35
1c1ace2db012919f23b6de5400ab192b9277dfc6,"De-duplicate symbols listed in generated module definition files

MS tools have a limit on the number of symbols that can be listed
in a `.def` file.  If multiple `.obj` files provide a symbol then
avoid listing it more than once in the generated `.def` file to
avoid counting toward the limit.",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_234.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_234.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_234.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_548.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_548.cpp,340,338,344,-1,"fprintf(this->FileOut,""IMPORTS \n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_420.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_420.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_420.cpp,88,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_420.cpp,-1,"[""member"", ""string""]","[""member""]","set([u'symbol = """"', u'SectChar = this -> SectionHeaders [ pSymbolTable -> SectionNumber - 1 ] . Characteristics', u'symbol = stringTable + pSymbolTable -> N . Name . Long', u'pSymbolTable ++', u'SymbolTableType * pSymbolTable = this -> SymbolTable ;'])","set([56, 9, 18, 91, 21])","[['fprintf', 'this', 'FileOut', 'IMPORTS', '\\n'], []]",2015-11-18T15:02:48,Brad King,-4852317213511330630,36
1c1ace2db012919f23b6de5400ab192b9277dfc6,"De-duplicate symbols listed in generated module definition files

MS tools have a limit on the number of symbols that can be listed
in a `.def` file.  If multiple `.obj` files provide a symbol then
avoid listing it more than once in the generated `.def` file to
avoid counting toward the limit.",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_234.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_234.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_234.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_548.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_548.cpp,340,338,346,340,"fprintf(this->FileOut, ""\t%s DATA \n"", symbol.c_str()+1);",this->DataSymbols.insert(symbol);,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_421.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_421.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_421.cpp,90,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_421.cpp,82,"[""member"", ""string"", ""symbol . c_str_ret""]","[""member"", ""macro"", ""==""]","set([u'symbol = stringTable + pSymbolTable -> N . Name . Long', u'pSymbolTable ++', u'SymbolTableType * pSymbolTable = this -> SymbolTable ;'])","set([9, 91, 79])","[['fprintf', 'FileOut', '\\t%s', 'DATA', '\\n', 'c_str', '1'], ['DataSymbols', 'insert']]",2015-11-18T15:02:48,Brad King,12413850858514677882,37
ba819f49df33b546072a5928de3253770c4716b9,"cmFortranParser: Parse #line directives

Teach the lexer to extract the #line directive prefix and line number as
a new token type.  Teach the parser to recognize this token followed by
a string as the file name (plus possibly other content).  Report the
named file as included by the source file.",[],Source/cmFortranLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_235.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_235.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_235.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_550.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_550.cpp,2174,2192,2176,2194,"yy_fatal_error( ""cmFortran_yyset_lineno called with no buffer"" , yyscanner);","YY_FATAL_ERROR( ""cmFortran_yyset_lineno called with no buffer"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_425.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_425.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_425.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_425.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([]),set([]),"[['yy_fatal_error', 'yyscanner'], ['YY_FATAL_ERROR']]",2015-11-02T20:29:52,Brad King,-3528205590648888989,546
ba819f49df33b546072a5928de3253770c4716b9,"cmFortranParser: Parse #line directives

Teach the lexer to extract the #line directive prefix and line number as
a new token type.  Teach the parser to recognize this token followed by
a string as the file name (plus possibly other content).  Report the
named file as included by the source file.",[],Source/cmFortranLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_235.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_235.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_235.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_551.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_551.cpp,2189,2207,2191,2209,"yy_fatal_error( ""cmFortran_yyset_column called with no buffer"" , yyscanner);","YY_FATAL_ERROR( ""cmFortran_yyset_column called with no buffer"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_426.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_426.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_426.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_426.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([]),set([]),"[['yy_fatal_error', 'yyscanner'], ['YY_FATAL_ERROR']]",2015-11-02T20:29:52,Brad King,-3528205590648888989,546
7f8bb857b8ab714b80acfa6a6e2c34195fabff6f,VS6: Port to cmGeneratorTarget.,[],Source/cmLocalVisualStudio6Generator.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_236.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_236.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_236.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_552.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_552.cpp,575,570,584,579,"sprintf(output,""%s/%s_force_%i"", this->GetCurrentBinaryDirectory(),
          target.GetName().c_str(), count);","sprintf(output,""%s/%s_force_%i"", this->GetCurrentBinaryDirectory(),
          target->GetName().c_str(), count);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_427.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_427.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_427.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_427.cpp,9,"[""char *"", ""string"", ""this -> GetCurrentBinaryDirectory_ret"", ""target . GetName ( ) . c_str_ret"", ""int""]",[],"set([u'char * output = new char [ ( strlen ( this -> GetCurrentBinaryDirectory ( ) ) + target -> GetName ( ) . size ( ) + 30 ) ] ;', u'int count', u'cmGeneratorTarget * target'])","set([2, 7])","[[], []]",2015-10-24T07:19:55,Stephen Kelly,0,550
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_237.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_237.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_237.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_553.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_553.cpp,230,233,233,236,,"archive_set_error(&self->archive->archive, ARCHIVE_ERRNO_MISC,
		    ""Current client reader does not support seeking a device"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_428.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_428.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_428.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_428.cpp,9,[],"[""member"", ""null"", ""==""]",set([u'struct archive_read_filter * self']),set([1]),"[[], ['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Current', 'client', 'reader', 'does', 'not', 'support', 'seeking', 'a', 'device']]",2015-10-21T14:18:52,Brad King,-15773193200006745074,388
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_237.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_237.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_237.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_555.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_555.cpp,843,850,845,852,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Encountered out-of-order sparse blocks"");","archive_set_error(a, ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Encountered out-of-order sparse blocks"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_430.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_430.cpp,33,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_430.cpp,33,"[""member"", ""macro"", ""string""]","[""member"", ""member"", ""<""]","set([u'struct archive * a = ( struct archive * ) _a ;', u'a -> read_data_offset += len', u'a -> read_data_block = read_buf', u'a -> read_data_output_offset += len'])","set([20, 66, 3, 52, 65])","[['&a', 'archive'], ['a']]",2015-10-21T14:18:52,Brad King,-7621921761809200718,389
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_237.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_237.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_237.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_556.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_556.cpp,953,975,953,975,"archive_set_error(&a->archive, ARCHIVE_ERRNO_PROGRAMMER,
		    ""Internal error: ""
		    ""No format_read_data_block function registered"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_PROGRAMMER,
		    ""Internal error: ""
		    ""No format->read_data function registered"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_431.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_431.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_431.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_431.cpp,9,[],"[""member"", ""null"", ""==""]",set([u'struct archive_read * a = ( struct archive_read * ) _a ;']),set([4]),"[['format_read_data_block'], ['format', 'read_data']]",2015-10-21T14:18:52,Brad King,5492009010411712682,390
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_ar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_238.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_238.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_238.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_560.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_560.cpp,311,318,312,319,"archive_set_error(&a->archive, EINVAL,
			    ""Can't find long filename for entry"");","archive_set_error(&a->archive, EINVAL,
			    ""Can't find long filename for GNU/SVR4 archive entry"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_432.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_432.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_432.cpp,145,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_432.cpp,152,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""=="", ""ar_atol10_ret"", ""member"", "">"", ""||""]","set([u'struct ar * ar', u'number = ar_atol10 ( h + AR_name_offset + 1 , AR_name_size - 1 )', u'struct archive_read * a'])","set([1, 146, 2])","[[], ['GNU/SVR4', 'archive']]",2015-10-21T14:18:52,Brad King,16673403364174568431,391
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_239.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_239.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_239.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_563.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_563.cpp,1793,1801,1797,1807,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Directory structure contains loop"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_434.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_434.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_434.cpp,56,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_434.cpp,58,[],"[""toi_ret"", ""null"", ""!="", ""archive_le32dec_ret"", ""null"", ""<"", ""&&"", ""!""]","set([u'offset = iso9660 -> logical_block_size * ( uint64_t ) location', u'filep = parent ;', u'struct archive_read * a', u'filep = filep -> parent'])","set([56, 1, 55])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Directory', 'structure', 'contains', 'loop']]",2015-10-21T14:18:52,Brad King,11778273834211189553,392
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_lha.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_240.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_240.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_240.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_565.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_565.cpp,1390,1374,1395,-1,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""LHa data CRC error"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_436.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_436.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_436.cpp,16,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_436.cpp,-1,"[""member"", ""macro"", ""string""]","[""bool"", ""member"", ""member"", ""!="", ""&&""]","set([u'offset = iso9660 -> logical_block_size * ( uint64_t ) location', u'filep = parent ;', u'struct archive_read * a', u'filep = filep -> parent'])","set([56, 1, 55])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'LHa', 'data', 'CRC', 'error'], []]",2015-10-21T14:18:52,Brad King,-3568893041123257701,393
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_lha.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_240.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_240.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_240.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_566.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_566.cpp,1477,1449,1485,-1,"archive_set_error(&a->archive, ENOMEM,
			    ""No memory for lzh decompression"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_437.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_437.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_437.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_437.cpp,-1,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""==""]","set([u'offset = iso9660 -> logical_block_size * ( uint64_t ) location', u'filep = parent ;', u'struct archive_read * a', u'filep = filep -> parent'])","set([56, 1, 55])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'No', 'memory', 'for', 'lzh', 'decompression'], []]",2015-10-21T14:18:52,Brad King,-7666077166799469613,394
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_mtree.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_241.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_241.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_241.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_568.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_568.cpp,1175,1177,1218,1219,"archive_set_error(&a->archive,
									ARCHIVE_ERRNO_MISC,
									""mtree specification has different type for %s"",
									archive_entry_pathname(entry));","archive_set_error(&a->archive,
					    ARCHIVE_ERRNO_MISC,
					    ""mtree specification has different""
					    "" type for %s"",
					    archive_entry_pathname(entry));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_438.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_438.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_438.cpp,147,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_438.cpp,146,"[""member"", ""macro"", ""string"", ""archive_entry_pathname_ret""]","[""parse_line_ret"", ""macro"", ""==""]","set([u'r = r1', u'r = ARCHIVE_WARN', u'r = parse_line ( a , entry , mtree , mentry , & parsed_kws )'])","set([41, 19, 86, 95])","[[], []]",2015-10-21T14:18:52,Brad King,0,550
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_mtree.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_241.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_241.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_241.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_570.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_570.cpp,1583,1589,1608,1619,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_FILE_FORMAT,
				    ""Unrecognized file type \""%s\""; assuming \""file\"""", val);","archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_FILE_FORMAT,
				    ""Unrecognized file type \""%s\""; ""
				    ""assuming \""file\"""", val);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_439.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_439.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_439.cpp,206,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_439.cpp,211,"[""member"", ""macro"", ""string"", ""strchr_ret""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u""* val = '\\0'"", u""val = strchr ( key , '=' )""])","set([35, 28])","[[], []]",2015-10-21T14:18:52,Brad King,0,550
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_243.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_573.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_573.cpp,248,418,258,428,"fprintf(stderr, ""Header id 0x%x, length %d\n"",
		    headerid, datasize);","fprintf(stderr, ""Header id 0x%04x, length %d\n"",
		    headerid, datasize);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_440.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_440.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_440.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_440.cpp,13,"[""unkown"", ""string"", ""unsigned short"", ""unsigned short""]","[""int"", ""size_t"", "">"", ""!""]","set([u'size_t extra_length', u'unsigned short headerid = archive_le16dec ( p + offset ) ;', u'offset += 4', u'unsigned short datasize = archive_le16dec ( p + offset + 2 ) ;'])","set([9, 7, 6, 1])","[['0x%x'], ['0x%04x']]",2015-10-21T14:18:52,Brad King,7390396691600662994,395
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_243.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_575.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_575.cpp,687,910,691,915,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Zip file with oversized link entry"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_441.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_441.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_441.cpp,199,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_441.cpp,205,"[""struct archive_entry *"", ""null""]","[""bool"", ""macro"", ""==""]","set([u'zip_entry -> mode |= AE_IFREG', u'struct zip_entry * zip_entry = zip -> entry ;', u'zip_entry -> mode |= AE_IFDIR', u'zip_entry -> compressed_size = archive_le32dec ( p + 18 )', u'zip_entry -> zip_flags &= ~ZIP_LENGTH_AT_END', u'zip_entry -> mode |= 0775', u'zip_entry -> mode |= 0664', u'struct archive_read * a', u'zip_entry -> crc32 = zip_entry_central_dir . crc32', u'zip_entry -> uncompressed_size = zip_entry_central_dir . uncompressed_size', u'zip_entry -> compressed_size = zip_entry_central_dir . compressed_size'])","set([128, 1, 130, 133, 166, 135, 10, 179, 152, 121, 123, 157, 62])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Zip', 'file', 'with', 'oversized', 'link', 'entry']]",2015-10-21T14:18:52,Brad King,-18117340599876781602,396
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_243.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_576.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_576.cpp,696,927,699,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Read error skipping symlink target name"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_442.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_442.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_442.cpp,207,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_442.cpp,-1,"[""member"", ""macro"", ""string""]","[""__archive_read_consume_ret"", ""null"", ""<""]","set([u'zip_entry -> mode |= AE_IFREG', u'struct zip_entry * zip_entry = zip -> entry ;', u'zip_entry -> mode |= AE_IFDIR', u'zip_entry -> compressed_size = archive_le32dec ( p + 18 )', u'zip_entry -> zip_flags &= ~ZIP_LENGTH_AT_END', u'zip_entry -> mode |= 0775', u'zip_entry -> mode |= 0664', u'struct archive_read * a', u'zip_entry -> crc32 = zip_entry_central_dir . crc32', u'zip_entry -> uncompressed_size = zip_entry_central_dir . uncompressed_size', u'zip_entry -> compressed_size = zip_entry_central_dir . compressed_size'])","set([128, 1, 130, 133, 166, 135, 10, 179, 152, 121, 123, 157, 62])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Read', 'error', 'skipping', 'symlink', 'target', 'name'], []]",2015-10-21T14:18:52,Brad King,5029534340303921757,397
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_243.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_577.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_577.cpp,735,961,737,965,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Read error skipping symlink target name"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_443.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_443.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_443.cpp,245,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_443.cpp,255,[],"[""bool"", ""macro"", ""=="", ""!""]","set([u'struct archive_read * a', u'linkname_length = ( size_t ) zip_entry -> compressed_size'])","set([1, 210])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Read', 'error', 'skipping', 'symlink', 'target', 'name']]",2015-10-21T14:18:52,Brad King,-5029534340303921757,398
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_243.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_578.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_578.cpp,748,980,750,982,"snprintf(zip->format_name, sizeof(zip->format_name), ""ZIP %d.%d (%s)"",
	    version / 10, version % 10,
	    compression_name(zip->entry->compression));","archive_string_sprintf(&zip->format_name, ""ZIP %d.%d (%s)"",
	    version / 10, version % 10,
	    compression_name(zip->entry->compression));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_444.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_444.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_444.cpp,258,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_444.cpp,272,"[""member"", ""member"", ""constant"", ""member"", ""member"", ""compression_name_ret""]","[""unkown"", ""macro"", ""=="", ""!""]","set([u'zip -> init_decryption = ( zip_entry -> zip_flags & ZIP_ENCRYPTED )', u'zip -> sconv_utf8 = archive_string_conversion_from_charset ( & a -> archive , ""UTF-8"" , 1 )', u'zip -> end_of_entry = 1', u'version = p [ 4 ]', u'zip -> entry_bytes_remaining = zip_entry -> compressed_size', u'struct archive_read * a', u'struct zip * zip', u'linkname_length = ( size_t ) zip_entry -> compressed_size'])","set([1, 2, 264, 41, 269, 78, 210, 54])","[['snprintf', 'sizeof', 'zip', 'format_name', 'zip'], ['archive_string_sprintf', '&zip']]",2015-10-21T14:18:52,Brad King,12668620441433505916,399
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_243.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_243.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_580.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_580.cpp,1037,1790,1041,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Encrypted file is unsupported"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_467.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_467.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_467.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_467.cpp,-1,"[""member"", ""macro"", ""string""]","[""bool""]","set([u'zip -> init_decryption = ( zip_entry -> zip_flags & ZIP_ENCRYPTED )', u'zip -> sconv_utf8 = archive_string_conversion_from_charset ( & a -> archive , ""UTF-8"" , 1 )', u'zip -> end_of_entry = 1', u'version = p [ 4 ]', u'zip -> entry_bytes_remaining = zip_entry -> compressed_size', u'struct archive_read * a', u'struct zip * zip', u'linkname_length = ( size_t ) zip_entry -> compressed_size'])","set([1, 2, 264, 41, 269, 78, 210, 54])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Encrypted', 'file', 'is', 'unsupported'], []]",2015-10-21T14:18:52,Brad King,3582816709635432215,400
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_add_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_244.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_244.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_244.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_585.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_585.cpp,221,223,238,254,"archive_set_error(f->archive, ARCHIVE_ERRNO_MISC,
			    ""Unacceptable dictionary dize for lzip: %d"",
			    dict_size);","archive_set_error(f->archive, ARCHIVE_ERRNO_MISC,
			    ""Unacceptable dictionary size for lzip: %d"",
			    dict_size);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_468.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_468.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_468.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_468.cpp,35,"[""member"", ""macro"", ""string"", ""int""]","[""int"", ""int"", ""<"", ""int"", ""int"", "">"", ""||""]","set([u'struct archive_write_filter * f', u'int dict_size = data -> lzma_opt . dict_size ;'])","set([1, 30])","[['dize'], ['size']]",2015-10-21T14:18:52,Brad King,6978291736712448545,401
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_245.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_245.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_245.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_586.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_586.cpp,1467,1468,1468,1469,"archive_set_error(&a->archive, 0,
		    ""Write request too large"");","archive_set_error(&a->archive, 0,
		    ""Too much data: Truncating file at %ju bytes"", (uintmax_t)a->filesize);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_469.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_469.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_469.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_469.cpp,18,"[""member"", ""null"", ""string""]","[""hfs_write_data_block_ret"", ""size_t"", ""<""]","set([u'struct archive_write_disk * a = ( struct archive_write_disk * ) _a ;', u'a -> offset = offset', u'r = write_data_block ( a , buff , size )', u'size_t size', u'r = hfs_write_data_block ( a , buff , size )'])","set([4, 2, 12, 10, 14])","[['Write', 'request', 'too', 'large'], ['Too', 'much', 'data', 'Truncating', 'file', 'at', '%ju', 'bytes', 'uintmax_t', 'a', 'filesize']]",2015-10-21T14:18:52,Brad King,-37345832416010247605,402
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_245.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_245.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_245.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_587.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_587.cpp,1869,1876,1871,1879,,"archive_set_error(&a->archive, en,
		    ""Hard-link target '%s' does not exist."",
		    archive_entry_hardlink(a->entry));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_470.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_470.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_470.cpp,41,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_470.cpp,44,[],"[""unlink_ret"", ""null"", ""=="", ""!""]","set([u'a -> pst = NULL', u'struct archive_write_disk * a', u'en = create_filesystem_object ( a )'])","set([40, 33, 18, 1, 23])","[[], ['archive_set_error', '&a', 'archive', 'en', 'Hard', 'link', 'target', '%s', 'does', 'not', 'exist', 'archive_entry_hardlink', 'a', 'entry']]",2015-10-21T14:18:52,Brad King,12513697104880435007,403
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_245.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_245.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_245.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_590.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_590.cpp,2525,2544,2527,2548,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			                  ""Path is absolute"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_471.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_471.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_471.cpp,17,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_471.cpp,19,[],"[""member"", ""char"", ""=="", ""!""]",set([u'struct archive_write_disk * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Path', 'is', 'absolute']]",2015-10-21T14:18:52,Brad King,3973982570481086397,404
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_247.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_595.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_595.cpp,227,274,229,290,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""deflate compression not supported"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_473.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_473.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_473.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_473.cpp,43,"[""const char *"", ""string""]","[""strcmp_ret"", ""null"", ""=="", ""!""]",set([u'struct archive_write_disk * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'deflate', 'compression', 'not', 'supported']]",2015-10-21T14:18:52,Brad King,-2957661176388680943,405
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_247.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_595.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_595.cpp,227,274,229,305,,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""encryption not supported"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_474.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_474.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_474.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_474.cpp,58,"[""const char *"", ""string""]","[""strcmp_ret"", ""null"", ""=="", ""!""]",set([u'struct archive_write * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'encryption', 'not', 'supported']]",2015-10-21T14:18:52,Brad King,14151876018870131527,526
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_247.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_595.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_595.cpp,227,274,229,315,,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""encryption not supported"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_475.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_475.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_475.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_475.cpp,68,"[""const char *"", ""string""]","[""strcmp_ret"", ""null"", ""=="", ""!""]",set([u'struct archive_write * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'encryption', 'not', 'supported']]",2015-10-21T14:18:52,Brad King,14151876018870131527,526
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_247.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_595.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_595.cpp,227,274,229,325,,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""encryption not supported"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_476.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_476.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_476.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_476.cpp,78,"[""const char *"", ""string""]","[""strcmp_ret"", ""null"", ""=="", ""!""]",set([u'struct archive_write * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'encryption', 'not', 'supported']]",2015-10-21T14:18:52,Brad King,14151876018870131527,526
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_247.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_595.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_595.cpp,227,274,229,330,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""%s: unknown encryption '%s'"",
			    a->format_name, val);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_477.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_477.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_477.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_477.cpp,83,"[""const char *"", ""string""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'const char * val', u'struct archive_write * a'])","set([1, 2])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', '%s', 'unknown', 'encryption', '%s', 'a', 'format_name', 'val']]",2015-10-21T14:18:52,Brad King,-4598661536674037955,406
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_247.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_598.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_598.cpp,782,1010,784,1056,,"archive_set_error(&a->archive,
						    ARCHIVE_ERRNO_MISC,
						    ""Failed to encrypt file"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_478.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_478.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_478.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_478.cpp,56,[],"[""size_t"", ""null"", ""=="", ""!""]","set([u'ret = archive_encrypto_aes_ctr_update ( & zip -> cctx , rb , re - rb , zip -> buf , & l )', u'struct archive_write * a'])","set([1, 52])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Failed', 'to', 'encrypt', 'file']]",2015-10-21T14:18:52,Brad King,-16310483564057009321,527
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_247.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_599.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_599.cpp,799,1086,800,1099,,"archive_set_error(&a->archive,
						    ARCHIVE_ERRNO_MISC,
						    ""Failed to encrypt file"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_479.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_479.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_479.cpp,28,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_479.cpp,99,[],"[""deflate_ret"", ""macro"", ""=="", ""!""]","set([u'ret = archive_encrypto_aes_ctr_update ( & zip -> cctx , zip -> buf , zip -> len_buf , zip -> buf , & outl )', u'struct archive_write * a'])","set([1, 94])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Failed', 'to', 'encrypt', 'file']]",2015-10-21T14:18:52,Brad King,-16310483564057009321,527
932848f420a738ee07997198fead5b2c2fbf4787,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts by integrating changes from both sides.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_247.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_247.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_600.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_600.cpp,834,1142,840,1158,,"archive_set_error(&a->archive,
					    ARCHIVE_ERRNO_MISC,
					    ""Failed to encrypt file"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_480.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_480.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_480.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_480.cpp,24,"[""struct archive_write *"", ""member"", ""member""]","[""deflate_ret"", ""macro"", ""=="", ""!""]","set([u'struct archive_write * a', u'ret = archive_encrypto_aes_ctr_update ( & zip -> cctx , zip -> buf , remainder , zip -> buf , & outl )'])","set([1, 20])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Failed', 'to', 'encrypt', 'file']]",2015-10-21T14:18:52,Brad King,-16310483564057009321,527
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_248.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_248.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_248.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_603.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_603.cpp,230,233,233,236,,"archive_set_error(&self->archive->archive, ARCHIVE_ERRNO_MISC,
		    ""Current client reader does not support seeking a device"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_487.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_487.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_487.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_487.cpp,9,[],"[""member"", ""null"", ""==""]",set([u'struct archive_read_filter * self']),set([1]),"[[], ['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Current', 'client', 'reader', 'does', 'not', 'support', 'seeking', 'a', 'device']]",2015-10-21T13:37:00,Brad King,-15773193200006745074,388
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_248.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_248.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_248.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_605.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_605.cpp,843,850,845,852,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Encountered out-of-order sparse blocks"");","archive_set_error(a, ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Encountered out-of-order sparse blocks"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_489.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_489.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_489.cpp,33,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_489.cpp,33,"[""member"", ""macro"", ""string""]","[""member"", ""member"", ""<""]","set([u'struct archive * a = ( struct archive * ) _a ;', u'a -> read_data_offset += len', u'a -> read_data_block = read_buf', u'a -> read_data_output_offset += len'])","set([65, 66, 3, 52, 20])","[['&a', 'archive'], ['a']]",2015-10-21T13:37:00,Brad King,-7621921761809200718,389
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_248.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_248.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_248.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_606.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_606.cpp,953,975,953,975,"archive_set_error(&a->archive, ARCHIVE_ERRNO_PROGRAMMER,
		    ""Internal error: ""
		    ""No format_read_data_block function registered"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_PROGRAMMER,
		    ""Internal error: ""
		    ""No format->read_data function registered"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_490.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_490.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_490.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_490.cpp,9,[],"[""member"", ""null"", ""==""]",set([u'struct archive_read * a = ( struct archive_read * ) _a ;']),set([4]),"[['format_read_data_block'], ['format', 'read_data']]",2015-10-21T13:37:00,Brad King,5492009010411712682,390
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_ar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_249.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_249.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_249.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_610.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_610.cpp,311,318,312,319,"archive_set_error(&a->archive, EINVAL,
			    ""Can't find long filename for entry"");","archive_set_error(&a->archive, EINVAL,
			    ""Can't find long filename for GNU/SVR4 archive entry"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_491.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_491.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_491.cpp,145,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_491.cpp,152,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""=="", ""ar_atol10_ret"", ""member"", "">"", ""||""]","set([u'struct ar * ar', u'number = ar_atol10 ( h + AR_name_offset + 1 , AR_name_size - 1 )', u'struct archive_read * a'])","set([1, 2, 146])","[[], ['GNU/SVR4', 'archive']]",2015-10-21T13:37:00,Brad King,16673403364174568431,391
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_iso9660.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_250.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_250.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_250.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_613.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_613.cpp,1793,1801,1797,1807,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Directory structure contains loop"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_493.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_493.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_493.cpp,56,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_493.cpp,58,[],"[""toi_ret"", ""null"", ""!="", ""archive_le32dec_ret"", ""null"", ""<"", ""&&"", ""!""]","set([u'offset = iso9660 -> logical_block_size * ( uint64_t ) location', u'filep = parent ;', u'struct archive_read * a', u'filep = filep -> parent'])","set([56, 1, 55])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Directory', 'structure', 'contains', 'loop']]",2015-10-21T13:37:00,Brad King,11778273834211189553,392
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_lha.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_251.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_251.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_251.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_615.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_615.cpp,1390,1374,1395,-1,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""LHa data CRC error"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_495.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_495.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_495.cpp,16,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_495.cpp,-1,"[""member"", ""macro"", ""string""]","[""bool"", ""member"", ""member"", ""!="", ""&&""]","set([u'offset = iso9660 -> logical_block_size * ( uint64_t ) location', u'filep = parent ;', u'struct archive_read * a', u'filep = filep -> parent'])","set([56, 1, 55])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'LHa', 'data', 'CRC', 'error'], []]",2015-10-21T13:37:00,Brad King,-3568893041123257701,393
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_lha.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_251.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_251.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_251.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_616.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_616.cpp,1477,1449,1485,-1,"archive_set_error(&a->archive, ENOMEM,
			    ""No memory for lzh decompression"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_496.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_496.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_496.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_496.cpp,-1,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""==""]","set([u'offset = iso9660 -> logical_block_size * ( uint64_t ) location', u'filep = parent ;', u'struct archive_read * a', u'filep = filep -> parent'])","set([56, 1, 55])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'No', 'memory', 'for', 'lzh', 'decompression'], []]",2015-10-21T13:37:00,Brad King,-7666077166799469613,394
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_mtree.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_252.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_252.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_252.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_618.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_618.cpp,1175,1177,1218,1219,"archive_set_error(&a->archive,
									ARCHIVE_ERRNO_MISC,
									""mtree specification has different type for %s"",
									archive_entry_pathname(entry));","archive_set_error(&a->archive,
					    ARCHIVE_ERRNO_MISC,
					    ""mtree specification has different""
					    "" type for %s"",
					    archive_entry_pathname(entry));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_497.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_497.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_497.cpp,147,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_497.cpp,146,"[""member"", ""macro"", ""string"", ""archive_entry_pathname_ret""]","[""parse_line_ret"", ""macro"", ""==""]","set([u'r = r1', u'r = ARCHIVE_WARN', u'r = parse_line ( a , entry , mtree , mentry , & parsed_kws )'])","set([41, 19, 86, 95])","[[], []]",2015-10-21T13:37:00,Brad King,0,550
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_mtree.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_252.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_252.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_252.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_620.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_620.cpp,1583,1589,1608,1619,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_FILE_FORMAT,
				    ""Unrecognized file type \""%s\""; assuming \""file\"""", val);","archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_FILE_FORMAT,
				    ""Unrecognized file type \""%s\""; ""
				    ""assuming \""file\"""", val);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_498.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_498.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_498.cpp,206,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_498.cpp,211,"[""member"", ""macro"", ""string"", ""strchr_ret""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u""* val = '\\0'"", u""val = strchr ( key , '=' )""])","set([35, 28])","[[], []]",2015-10-21T13:37:00,Brad King,0,550
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_623.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_623.cpp,244,414,254,424,"fprintf(stderr, ""Header id 0x%x, length %d\n"",
		    headerid, datasize);","fprintf(stderr, ""Header id 0x%04x, length %d\n"",
		    headerid, datasize);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_499.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_499.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_499.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_499.cpp,13,"[""unkown"", ""string"", ""unsigned short"", ""unsigned short""]","[""int"", ""size_t"", "">"", ""!""]","set([u'size_t extra_length', u'unsigned short headerid = archive_le16dec ( p + offset ) ;', u'offset += 4', u'unsigned short datasize = archive_le16dec ( p + offset + 2 ) ;'])","set([9, 7, 6, 1])","[['0x%x'], ['0x%04x']]",2015-10-21T13:37:00,Brad King,7390396691600662994,395
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_625.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_625.cpp,683,906,687,911,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Zip file with oversized link entry"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_500.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_500.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_500.cpp,199,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_500.cpp,205,"[""struct archive_entry *"", ""null""]","[""bool"", ""macro"", ""==""]","set([u'zip_entry -> mode |= AE_IFREG', u'struct zip_entry * zip_entry = zip -> entry ;', u'zip_entry -> mode |= AE_IFDIR', u'zip_entry -> compressed_size = archive_le32dec ( p + 18 )', u'zip_entry -> uncompressed_size = zip_entry_central_dir . uncompressed_size', u'zip_entry -> zip_flags &= ~ZIP_LENGTH_AT_END', u'zip_entry -> mode |= 0775', u'zip_entry -> mode |= 0664', u'struct archive_read * a', u'zip_entry -> crc32 = zip_entry_central_dir . crc32', u'zip_entry -> compressed_size = zip_entry_central_dir . compressed_size'])","set([128, 1, 130, 133, 166, 135, 10, 179, 152, 121, 123, 157, 62])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Zip', 'file', 'with', 'oversized', 'link', 'entry']]",2015-10-21T13:37:00,Brad King,-18117340599876781602,396
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_626.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_626.cpp,692,923,695,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Read error skipping symlink target name"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_501.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_501.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_501.cpp,207,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_501.cpp,-1,"[""member"", ""macro"", ""string""]","[""__archive_read_consume_ret"", ""null"", ""<""]","set([u'zip_entry -> mode |= AE_IFREG', u'struct zip_entry * zip_entry = zip -> entry ;', u'zip_entry -> mode |= AE_IFDIR', u'zip_entry -> compressed_size = archive_le32dec ( p + 18 )', u'zip_entry -> uncompressed_size = zip_entry_central_dir . uncompressed_size', u'zip_entry -> zip_flags &= ~ZIP_LENGTH_AT_END', u'zip_entry -> mode |= 0775', u'zip_entry -> mode |= 0664', u'struct archive_read * a', u'zip_entry -> crc32 = zip_entry_central_dir . crc32', u'zip_entry -> compressed_size = zip_entry_central_dir . compressed_size'])","set([128, 1, 130, 133, 166, 135, 10, 179, 152, 121, 123, 157, 62])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Read', 'error', 'skipping', 'symlink', 'target', 'name'], []]",2015-10-21T13:37:00,Brad King,5029534340303921757,397
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_627.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_627.cpp,731,957,733,961,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Read error skipping symlink target name"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_502.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_502.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_502.cpp,245,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_502.cpp,255,[],"[""bool"", ""macro"", ""=="", ""!""]","set([u'struct archive_read * a', u'linkname_length = ( size_t ) zip_entry -> compressed_size'])","set([1, 210])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Read', 'error', 'skipping', 'symlink', 'target', 'name']]",2015-10-21T13:37:00,Brad King,-5029534340303921757,398
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_628.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_628.cpp,744,976,746,978,"snprintf(zip->format_name, sizeof(zip->format_name), ""ZIP %d.%d (%s)"",
	    version / 10, version % 10,
	    compression_name(zip->entry->compression));","archive_string_sprintf(&zip->format_name, ""ZIP %d.%d (%s)"",
	    version / 10, version % 10,
	    compression_name(zip->entry->compression));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_503.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_503.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_503.cpp,258,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_503.cpp,272,"[""member"", ""member"", ""constant"", ""member"", ""member"", ""compression_name_ret""]","[""unkown"", ""macro"", ""=="", ""!""]","set([u'zip -> init_decryption = ( zip_entry -> zip_flags & ZIP_ENCRYPTED )', u'zip -> sconv_utf8 = archive_string_conversion_from_charset ( & a -> archive , ""UTF-8"" , 1 )', u'struct zip * zip', u'version = p [ 4 ]', u'zip -> entry_bytes_remaining = zip_entry -> compressed_size', u'struct archive_read * a', u'zip -> end_of_entry = 1', u'linkname_length = ( size_t ) zip_entry -> compressed_size'])","set([1, 2, 264, 41, 269, 78, 210, 54])","[['snprintf', 'sizeof', 'zip', 'format_name', 'zip'], ['archive_string_sprintf', '&zip']]",2015-10-21T13:37:00,Brad King,12668620441433505916,399
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_254.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_630.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_630.cpp,1033,1786,1037,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Encrypted file is unsupported"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_526.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_526.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_526.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_526.cpp,-1,"[""member"", ""macro"", ""string""]","[""bool""]","set([u'zip -> init_decryption = ( zip_entry -> zip_flags & ZIP_ENCRYPTED )', u'zip -> sconv_utf8 = archive_string_conversion_from_charset ( & a -> archive , ""UTF-8"" , 1 )', u'struct zip * zip', u'version = p [ 4 ]', u'zip -> entry_bytes_remaining = zip_entry -> compressed_size', u'struct archive_read * a', u'zip -> end_of_entry = 1', u'linkname_length = ( size_t ) zip_entry -> compressed_size'])","set([1, 2, 264, 41, 269, 78, 210, 54])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Encrypted', 'file', 'is', 'unsupported'], []]",2015-10-21T13:37:00,Brad King,3582816709635432215,400
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_add_filter_xz.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_255.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_255.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_255.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_635.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_635.cpp,221,223,238,254,"archive_set_error(f->archive, ARCHIVE_ERRNO_MISC,
			    ""Unacceptable dictionary dize for lzip: %d"",
			    dict_size);","archive_set_error(f->archive, ARCHIVE_ERRNO_MISC,
			    ""Unacceptable dictionary size for lzip: %d"",
			    dict_size);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_527.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_527.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_527.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_527.cpp,35,"[""member"", ""macro"", ""string"", ""int""]","[""int"", ""int"", ""<"", ""int"", ""int"", "">"", ""||""]","set([u'struct archive_write_filter * f', u'int dict_size = data -> lzma_opt . dict_size ;'])","set([1, 30])","[['dize'], ['size']]",2015-10-21T13:37:00,Brad King,6978291736712448545,401
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_256.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_256.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_256.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_636.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_636.cpp,1467,1468,1468,1469,"archive_set_error(&a->archive, 0,
		    ""Write request too large"");","archive_set_error(&a->archive, 0,
		    ""Too much data: Truncating file at %ju bytes"", (uintmax_t)a->filesize);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_528.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_528.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_528.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_528.cpp,18,"[""member"", ""null"", ""string""]","[""hfs_write_data_block_ret"", ""size_t"", ""<""]","set([u'struct archive_write_disk * a = ( struct archive_write_disk * ) _a ;', u'a -> offset = offset', u'r = write_data_block ( a , buff , size )', u'size_t size', u'r = hfs_write_data_block ( a , buff , size )'])","set([4, 10, 12, 2, 14])","[['Write', 'request', 'too', 'large'], ['Too', 'much', 'data', 'Truncating', 'file', 'at', '%ju', 'bytes', 'uintmax_t', 'a', 'filesize']]",2015-10-21T13:37:00,Brad King,-37345832416010247605,402
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_256.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_256.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_256.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_637.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_637.cpp,1869,1876,1871,1879,,"archive_set_error(&a->archive, en,
		    ""Hard-link target '%s' does not exist."",
		    archive_entry_hardlink(a->entry));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_529.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_529.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_529.cpp,41,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_529.cpp,44,[],"[""rmdir_ret"", ""null"", ""==""]","set([u'a -> pst = NULL', u'struct archive_write_disk * a', u'en = create_filesystem_object ( a )'])","set([40, 33, 18, 1, 23])","[[], ['archive_set_error', '&a', 'archive', 'en', 'Hard', 'link', 'target', '%s', 'does', 'not', 'exist', 'archive_entry_hardlink', 'a', 'entry']]",2015-10-21T13:37:00,Brad King,12513697104880435007,403
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_256.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_256.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_256.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_640.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_640.cpp,2525,2544,2527,2548,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			                  ""Path is absolute"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_530.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_530.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_530.cpp,17,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_530.cpp,19,[],"[""member"", ""char"", ""=="", ""!""]",set([u'struct archive_write_disk * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Path', 'is', 'absolute']]",2015-10-21T13:37:00,Brad King,3973982570481086397,404
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_645.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_645.cpp,227,274,229,290,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""deflate compression not supported"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_532.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_532.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_532.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_532.cpp,43,"[""const char *"", ""string""]","[""strcmp_ret"", ""null"", ""=="", ""!""]",set([u'struct archive_write_disk * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'deflate', 'compression', 'not', 'supported']]",2015-10-21T13:37:00,Brad King,-2957661176388680943,405
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_645.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_645.cpp,227,274,229,305,,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""encryption not supported"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_533.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_533.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_533.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_533.cpp,58,"[""const char *"", ""string""]","[""strcmp_ret"", ""null"", ""=="", ""!""]",set([u'struct archive_write * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'encryption', 'not', 'supported']]",2015-10-21T13:37:00,Brad King,14151876018870131527,526
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_645.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_645.cpp,227,274,229,315,,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""encryption not supported"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_534.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_534.cpp,68,"[""const char *"", ""string""]","[""strcmp_ret"", ""null"", ""=="", ""!""]",set([u'struct archive_write * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'encryption', 'not', 'supported']]",2015-10-21T13:37:00,Brad King,14151876018870131527,526
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_645.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_645.cpp,227,274,229,325,,"archive_set_error(&a->archive,
				    ARCHIVE_ERRNO_MISC,
				    ""encryption not supported"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_535.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_535.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_535.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_535.cpp,78,"[""const char *"", ""string""]","[""strcmp_ret"", ""null"", ""=="", ""!""]",set([u'struct archive_write * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'encryption', 'not', 'supported']]",2015-10-21T13:37:00,Brad King,14151876018870131527,526
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_645.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_645.cpp,227,274,229,330,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""%s: unknown encryption '%s'"",
			    a->format_name, val);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_536.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_536.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_536.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_536.cpp,83,"[""const char *"", ""string""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'const char * val', u'struct archive_write * a'])","set([1, 2])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', '%s', 'unknown', 'encryption', '%s', 'a', 'format_name', 'val']]",2015-10-21T13:37:00,Brad King,-4598661536674037955,406
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_647.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_647.cpp,782,1007,784,1053,,"archive_set_error(&a->archive,
						    ARCHIVE_ERRNO_MISC,
						    ""Failed to encrypt file"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_537.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_537.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_537.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_537.cpp,56,[],"[""size_t"", ""null"", ""=="", ""!""]","set([u'struct archive_write * a', u'ret = archive_encrypto_aes_ctr_update ( & zip -> cctx , rb , re - rb , zip -> buf , & l )'])","set([1, 52])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Failed', 'to', 'encrypt', 'file']]",2015-10-21T13:37:00,Brad King,-16310483564057009321,527
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_648.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_648.cpp,799,1083,800,1096,,"archive_set_error(&a->archive,
						    ARCHIVE_ERRNO_MISC,
						    ""Failed to encrypt file"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_538.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_538.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_538.cpp,28,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_538.cpp,99,[],"[""deflate_ret"", ""macro"", ""=="", ""!""]","set([u'struct archive_write * a', u'ret = archive_encrypto_aes_ctr_update ( & zip -> cctx , zip -> buf , zip -> len_buf , zip -> buf , & outl )'])","set([1, 94])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Failed', 'to', 'encrypt', 'file']]",2015-10-21T13:37:00,Brad King,-16310483564057009321,527
1a8c7bc2c649781d1163c1966245a45e0fb829ba,"libarchive 3.1.2-601-g3bfe5f1 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-601-g3bfe5f1 &&
r=3bfe5f1 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_258.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_649.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_649.cpp,834,1139,840,1155,,"archive_set_error(&a->archive,
					    ARCHIVE_ERRNO_MISC,
					    ""Failed to encrypt file"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_539.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_539.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_539.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_539.cpp,24,"[""struct archive_write *"", ""member"", ""member""]","[""deflate_ret"", ""macro"", ""=="", ""!""]","set([u'struct archive_write * a', u'ret = archive_encrypto_aes_ctr_update ( & zip -> cctx , zip -> buf , remainder , zip -> buf , & outl )'])","set([1, 20])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Failed', 'to', 'encrypt', 'file']]",2015-10-21T13:37:00,Brad King,-16310483564057009321,527
bbef3c2da83b7a69d1f99b21dc92d5506d98fb35,cmLocalGenerator: Add current binary directory accessor.,[],Source/cmLocalVisualStudio6Generator.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_259.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_259.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_259.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_652.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_652.cpp,578,578,582,582,"sprintf(output,""%s/%s_force_%i"", this->Makefile->GetCurrentBinaryDirectory(),
          target.GetName().c_str(), count);","sprintf(output,""%s/%s_force_%i"", this->GetCurrentBinaryDirectory(),
          target.GetName().c_str(), count);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_546.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_546.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_546.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_546.cpp,9,"[""char *"", ""string"", ""this -> Makefile -> GetCurrentBinaryDirectory_ret"", ""target . GetName ( ) . c_str_ret"", ""int""]",[],"set([u'cmTarget & target', u'char * output = new char [ ( strlen ( this -> GetCurrentBinaryDirectory ( ) ) + target . GetName ( ) . size ( ) + 30 ) ] ;', u'int count'])","set([2, 7])","[['Makefile'], []]",2015-10-10T09:04:39,Stephen Kelly,3792860744015348948,38
2e6063068c94d4045e699fed51e6d1e9af344bbf,"Merge branch 'improve-variable-help-formatting' into revert-cmake-W-options

Resolve conflicts in

 Help/variable/CMAKE_ERROR_DEPRECATED.rst
 Help/variable/CMAKE_WARN_DEPRECATED.rst

by integrating changes from both sides.",[],Source/cmGlobalGenerator.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_261.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_261.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_261.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_654.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_654.cpp,1111,1148,1113,1150,"sprintf(num,""%d"",static_cast<int>(this->LocalGenerators.size()));","sprintf(num,""%d"",static_cast<int>(this->Makefiles.size()));",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_547.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_547.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_547.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_547.cpp,26,"[""char *"", ""string"", ""bool""]",[],"set([u'char num [ 100 ] ;', u'this -> FirstTimeProgress = 0.0f'])","set([25, 2])","[['LocalGenerators'], ['Makefiles']]",2015-09-22T17:57:08,Brad King,6919714983562672698,407
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_275.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_275.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_275.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_675.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_675.cpp,1933,1967,1943,-1,"snprintf(ftpc->newhost, sizeof(ftpc->newhost), ""%s"",
                     conn->host.name);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_548.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_548.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_548.cpp,50,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_548.cpp,-1,"[""member"", ""member"", ""string"", ""member""]","[""member"", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""||"", ""||"", ""||"", ""||""]","set([u'char num [ 100 ] ;', u'this -> FirstTimeProgress = 0.0f'])","set([25, 2])","[['snprintf', 'ftpc', 'newhost', 'sizeof', 'ftpc', 'newhost', '%s', 'conn', 'host', 'name'], []]",2015-08-12T19:43:52,Brad King,4237709208395580589,528
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_275.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_275.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_275.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_675.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_675.cpp,1933,1967,1947,-1,"snprintf(ftpc->newhost, NEWHOST_BUFSIZE, ""%s"", conn->ip_addr_str);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_549.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_549.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_549.cpp,54,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_549.cpp,-1,"[""member"", ""macro"", ""string"", ""member""]","[""member"", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""||"", ""||"", ""||"", ""||"", ""!""]","set([u'char num [ 100 ] ;', u'this -> FirstTimeProgress = 0.0f'])","set([25, 2])","[['snprintf', 'ftpc', 'newhost', 'NEWHOST_BUFSIZE', '%s', 'conn', 'ip_addr_str'], []]",2015-08-12T19:43:52,Brad King,-2458479027313200788,408
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_275.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_275.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_275.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_676.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_676.cpp,1986,2010,2000,-1,"snprintf(ftpc->newhost, sizeof(ftpc->newhost), ""%s"", conn->host.name);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_550.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_550.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_550.cpp,107,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_550.cpp,-1,"[""member"", ""member"", ""string"", ""member""]","[""member"", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""||"", ""||"", ""||"", ""||""]","set([u'char num [ 100 ] ;', u'this -> FirstTimeProgress = 0.0f'])","set([25, 2])","[['snprintf', 'ftpc', 'newhost', 'sizeof', 'ftpc', 'newhost', '%s', 'conn', 'host', 'name'], []]",2015-08-12T19:43:52,Brad King,4237709208395580589,528
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_275.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_275.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_275.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_676.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_676.cpp,1986,2010,2002,-1,"snprintf(ftpc->newhost, sizeof(ftpc->newhost), ""%s"",
                 conn->ip_addr_str);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_551.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_551.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_551.cpp,109,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_551.cpp,-1,"[""member"", ""member"", ""string"", ""member""]","[""member"", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""||"", ""||"", ""||"", ""||"", ""!""]","set([u'char num [ 100 ] ;', u'this -> FirstTimeProgress = 0.0f'])","set([25, 2])","[['snprintf', 'ftpc', 'newhost', 'sizeof', 'ftpc', 'newhost', '%s', 'conn', 'ip_addr_str'], []]",2015-08-12T19:43:52,Brad King,2531966516240612120,409
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_275.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_275.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_275.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_676.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_676.cpp,1986,2010,2006,2020,"snprintf(ftpc->newhost, sizeof(ftpc->newhost),
               ""%d.%d.%d.%d"", ip[0], ip[1], ip[2], ip[3]);","ftpc->newhost = aprintf(""%d.%d.%d.%d"", ip[0], ip[1], ip[2], ip[3]);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_552.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_552.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_552.cpp,113,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_552.cpp,96,"[""member"", ""member"", ""constant"", ""member"", ""member"", ""member"", ""member""]","[""member"", ""!""]","set([u'struct ftp_conn * ftpc = & conn -> proto . ftpc ;', u'int ip [ 4 ] ;', u'struct SessionHandle * data = conn -> data ;'])","set([3, 61, 5])","[['snprintf', 'sizeof', 'ftpc', 'newhost'], ['aprintf']]",2015-08-12T19:43:52,Brad King,5055081340454859011,410
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_276.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_276.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_276.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_678.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_678.cpp,1958,1996,1960,1999,,"conn->allocptr.host = aprintf(""%s\r\n"", ptr);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_553.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_553.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_553.cpp,247,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_553.cpp,251,[],"[""char *"", ""!"", ""!""]","set([u'conn -> allocptr . cookiehost = cookiehost', u'conn -> allocptr . accept_encoding = aprintf ( ""Accept-Encoding: %s\\r\\n"" , data -> set . str [ STRING_ENCODING ] )', u'ptr = Curl_checkheaders ( conn , ""Host:"" )', u'struct connectdata * conn', u'conn -> allocptr . ref = NULL', u'conn -> allocptr . ref = aprintf ( ""Referer: %s\\r\\n"" , data -> change . referer )'])","set([0, 129, 134, 144, 212, 246])","[[], ['conn', 'allocptr', 'host', 'aprintf', '%s\\r\\n', 'ptr']]",2015-08-12T19:43:52,Brad King,22665962818085581257,411
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_276.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_276.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_276.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_679.cpp,2153,2198,2157,2201,"conn->allocptr.rangeline = aprintf(""Range: bytes=%s\r\n"",
                                         data->state.range);","conn->allocptr.rangeline = aprintf(""Range: bytes=%s\r\n"",
                                         data->state.range);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_554.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_554.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_554.cpp,444,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_554.cpp,453,"[""string"", ""member""]","[""Curl_HttpReq"", ""macro"", ""=="", ""Curl_HttpReq"", ""macro"", ""=="", ""||"", ""Curl_checkheaders_ret"", ""!"", ""&&""]","set([u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> state . resume_from = 0', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = TRUE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> req . upload_chunky = FALSE', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )'])","set([0, 65, 322, 389, 193, 73, 202, 12, 2, 269, 433, 274, 181, 251, 257])","[[], []]",2015-08-12T19:43:52,Brad King,0,550
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_680.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_680.cpp,26,26,261,-1,"snprintf((char *)&dest[i*2], 3, ""%02x"", source[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_555.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_555.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_555.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_555.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""int"", ""<""]","set([u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> state . resume_from = 0', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = TRUE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> req . upload_chunky = FALSE', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )'])","set([0, 65, 322, 389, 193, 73, 202, 12, 2, 269, 433, 274, 181, 251, 257])","[['snprintf', 'char', '*', '&dest[i*2]', '3', '%02x', 'source[i]'], []]",2015-08-12T19:43:52,Brad King,-16861158296773085366,523
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_681.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_681.cpp,352,112,369,-1,"snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             Curl_rand(data), Curl_rand(data),
             Curl_rand(data), Curl_rand(data));",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_556.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_556.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_556.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_556.cpp,-1,"[""char *"", ""unkown"", ""string"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret""]","[""member""]","set([u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> state . resume_from = 0', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = TRUE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> req . upload_chunky = FALSE', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )'])","set([0, 65, 322, 389, 193, 73, 202, 12, 2, 269, 433, 274, 181, 251, 257])","[['snprintf', 'cnoncebuf', 'sizeof', 'cnoncebuf', '%08x%08x%08x%08x', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data'], []]",2015-08-12T19:43:52,Brad King,11735648100075555272,524
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_681.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_681.cpp,352,112,402,-1,"tmp = aprintf(""%s:%s:%s"", ha1, d->nonce, d->cnonce);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_558.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_558.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_558.cpp,106,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_558.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""member""]","[""member"", ""macro"", ""==""]","set([u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> state . resume_from = 0', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = TRUE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> req . upload_chunky = FALSE', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )'])","set([0, 65, 322, 389, 193, 73, 202, 12, 2, 269, 433, 274, 181, 251, 257])","[['tmp', 'aprintf', '%s', '%s', '%s', 'ha1', 'd', 'nonce', 'd', 'cnonce'], []]",2015-08-12T19:43:52,Brad King,15619547470382740950,412
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_682.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_682.cpp,435,141,442,-1,"md5this = (unsigned char *)aprintf(""%s:%.*s"", request, urilen, uripath);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_559.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_559.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_559.cpp,146,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_559.cpp,-1,"[""constant"", ""const unsigned char *"", ""strchr_ret"", ""const unsigned char *""]","[""aprintf_ret"", ""!"", ""!""]","set([u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> state . resume_from = 0', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = TRUE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> req . upload_chunky = FALSE', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )'])","set([0, 65, 322, 389, 193, 73, 202, 12, 2, 269, 433, 274, 181, 251, 257])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%', '*s', 'request', 'urilen', 'uripath'], []]",2015-08-12T19:43:52,Brad King,17867711757821100480,413
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_682.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_682.cpp,435,141,462,-1,"md5this = (unsigned char *)aprintf(""%s:%s:%08x:%s:%s:%s"",
                                       ha1,
                                       d->nonce,
                                       d->nc,
                                       d->cnonce,
                                       d->qop,
                                       ha2);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_561.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_561.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_561.cpp,166,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_561.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""member"", ""member"", ""member"", ""unsigned char *""]","[""member""]","set([u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> state . resume_from = 0', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = TRUE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> req . upload_chunky = FALSE', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )'])","set([0, 65, 322, 389, 193, 73, 202, 12, 2, 269, 433, 274, 181, 251, 257])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', '%08x', '%s', '%s', '%s', 'ha1', 'd', 'nonce', 'd', 'nc', 'd', 'cnonce', 'd', 'qop', 'ha2'], []]",2015-08-12T19:43:52,Brad King,9052919241511133794,414
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_682.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_682.cpp,435,141,471,-1,"md5this = (unsigned char *)aprintf(""%s:%s:%s"",
                                       ha1,
                                       d->nonce,
                                       ha2);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_562.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_562.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_562.cpp,175,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_562.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""unsigned char *""]","[""member"", ""!""]","set([u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> state . resume_from = 0', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = TRUE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> req . upload_chunky = FALSE', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )'])","set([0, 65, 322, 389, 193, 73, 202, 12, 2, 269, 433, 274, 181, 251, 257])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', '%s', 'ha1', 'd', 'nonce', 'ha2'], []]",2015-08-12T19:43:52,Brad King,10116574456763885852,415
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_682.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_682.cpp,435,141,503,160,"""%sAuthorization: Digest ""
               ""username=\""%s\"", ""
               ""realm=\""%s\"", ""
               ""nonce=\""%s\"", ""
               ""uri=\""%.*s\"", ""
               ""cnonce=\""%s\"", ""
               ""nc=%08x, ""
               ""qop=%s, ""
               ""response=\""%s\"""";","(""%sAuthorization: Digest %s\r\n"";",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_563.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_563.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_563.cpp,207,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_563.cpp,90,[],"[""member""]","set([u'allocuserpwd = & conn -> allocptr . userpwd', u'allocuserpwd = & conn -> allocptr . proxyuserpwd', u'bool proxy', u'result = Curl_sasl_create_digest_http_message ( data , userp , passwdp , request , path , digest , & response , & len )', u'char * response ;'])","set([9, 34, 27, 84, 1])","[['username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'uri', '\\', '%', '*s\\', 'cnonce', '\\', '%s\\', 'nc', '%08x', 'qop', '%s', 'response', '\\', '%s\\'], ['%s\\r\\n']]",2015-08-12T19:43:52,Brad King,37060432716637841266,416
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_682.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_682.cpp,435,141,529,-1,"""%sAuthorization: Digest ""
               ""username=\""%s\"", ""
               ""realm=\""%s\"", ""
               ""nonce=\""%s\"", ""
               ""uri=\""%.*s\"", ""
               ""response=\""%s\"""";",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_564.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_564.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_564.cpp,233,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_564.cpp,-1,[],"[""member"", ""!""]","set([u'allocuserpwd = & conn -> allocptr . userpwd', u'allocuserpwd = & conn -> allocptr . proxyuserpwd', u'bool proxy', u'result = Curl_sasl_create_digest_http_message ( data , userp , passwdp , request , path , digest , & response , & len )', u'char * response ;'])","set([9, 34, 27, 84, 1])","[['%sAuthorization', 'Digest', 'username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'uri', '\\', '%', '*s\\', 'response', '\\', '%s\\'], []]",2015-08-12T19:43:52,Brad King,27124392518197397619,417
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_682.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_682.cpp,435,141,549,-1,"tmp = aprintf(""%s, opaque=\""%s\"""", *allocuserpwd, d->opaque);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_565.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_565.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_565.cpp,253,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_565.cpp,-1,"[""string"", ""member"", ""member""]","[""member""]","set([u'allocuserpwd = & conn -> allocptr . userpwd', u'allocuserpwd = & conn -> allocptr . proxyuserpwd', u'bool proxy', u'result = Curl_sasl_create_digest_http_message ( data , userp , passwdp , request , path , digest , & response , & len )', u'char * response ;'])","set([9, 34, 27, 84, 1])","[['tmp', 'aprintf', '%s', 'opaque', '\\', '%s\\', '*allocuserpwd', 'd', 'opaque'], []]",2015-08-12T19:43:52,Brad King,15191539412821562420,418
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_682.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_682.cpp,435,141,558,-1,"tmp = aprintf(""%s, algorithm=\""%s\"""", *allocuserpwd, d->algorithm);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_566.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_566.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_566.cpp,262,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_566.cpp,-1,"[""string"", ""member"", ""member""]","[""member""]","set([u'allocuserpwd = & conn -> allocptr . userpwd', u'allocuserpwd = & conn -> allocptr . proxyuserpwd', u'bool proxy', u'result = Curl_sasl_create_digest_http_message ( data , userp , passwdp , request , path , digest , & response , & len )', u'char * response ;'])","set([9, 34, 27, 84, 1])","[['tmp', 'aprintf', '%s', 'algorithm', '\\', '%s\\', '*allocuserpwd', 'd', 'algorithm'], []]",2015-08-12T19:43:52,Brad King,12553094990199559606,419
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_277.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_682.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_682.cpp,435,141,438,146,,"path = (unsigned char *) aprintf(""%.*s"", urilen, uripath);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_567.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_567.cpp,142,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_567.cpp,76,[],"[""member"", ""strchr_ret"", ""null"", ""!="", ""&&""]","set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[[], ['path', 'unsigned', 'char', '*', 'aprintf', '%', '*s', 'urilen', 'uripath']]",2015-08-12T19:43:52,Brad King,-16964577715776506072,420
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_negotiate.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_278.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_278.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_278.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_683.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_683.cpp,22,22,60,-1,"snprintf(name, sizeof(name), ""%s@%s"", service, proxy ? conn->proxy.name :
           conn->host.name);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_568.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_568.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_568.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_568.cpp,-1,"[""char *"", ""unkown"", ""string"", ""const char *"", ""member""]","[""member"", ""unkown"", "">"", ""!""]","set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[['snprintf', 'name', 'sizeof', 'name', '%s', '%s', 'service', 'proxy', 'conn', 'proxy', 'name', 'conn', 'host', 'name'], []]",2015-08-12T19:43:52,Brad King,8704418510416207794,421
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_negotiate.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_278.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_278.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_278.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_683.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_683.cpp,22,22,82,-1,"snprintf(buf, sizeof(buf), ""%s"", prefix);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_569.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_569.cpp,-1,"[""char *"", ""unkown"", ""string"", ""const char *""]",[],"set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[['snprintf', 'buf', 'sizeof', 'buf', '%s', 'prefix'], []]",2015-08-12T19:43:52,Brad King,14289162229529384888,422
91e8d35ab8ec2d62478a42eff10af88713497fad,"Merge branch 'curl-upstream' into update-curl

Resolve conflicts by taking upstream side when possible and otherwise
integrating the changes from both sides.  Be carful in CMakeLists.txt
where the OPENSSL code block that we modified previously has moved, and
preserve our previous modifications in the new location.",[],Utilities/cmcurl/lib/http_negotiate.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_278.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_278.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_278.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_683.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_683.cpp,22,22,92,-1,"snprintf(buf + len, sizeof(buf) - len,
                 "": %s"", (char*) status_string.value);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_570.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_570.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_570.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_570.cpp,-1,"[""char *"", ""strlen_ret"", ""string"", ""member""]","[""unkown"", ""strlen_ret"", "">""]","set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[['snprintf', 'buf', 'len', 'sizeof', 'buf', 'len', '%s', 'char*', 'status_string', 'value'], []]",2015-08-12T19:43:52,Brad King,8585342237959506498,423
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_288.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_288.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_288.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_699.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_699.cpp,1933,1967,1943,-1,"snprintf(ftpc->newhost, sizeof(ftpc->newhost), ""%s"",
                     conn->host.name);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_571.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_571.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_571.cpp,50,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_571.cpp,-1,"[""member"", ""member"", ""string"", ""member""]","[""member"", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""||"", ""||"", ""||"", ""||""]","set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[['snprintf', 'ftpc', 'newhost', 'sizeof', 'ftpc', 'newhost', '%s', 'conn', 'host', 'name'], []]",2015-08-12T18:18:06,Brad King,4237709208395580589,528
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_288.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_288.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_288.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_699.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_699.cpp,1933,1967,1947,-1,"snprintf(ftpc->newhost, NEWHOST_BUFSIZE, ""%s"", conn->ip_addr_str);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_572.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_572.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_572.cpp,54,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_572.cpp,-1,"[""member"", ""macro"", ""string"", ""member""]","[""member"", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""||"", ""||"", ""||"", ""||"", ""!""]","set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[['snprintf', 'ftpc', 'newhost', 'NEWHOST_BUFSIZE', '%s', 'conn', 'ip_addr_str'], []]",2015-08-12T18:18:06,Brad King,-2458479027313200788,408
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_288.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_288.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_288.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_700.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_700.cpp,1986,2010,2000,-1,"snprintf(ftpc->newhost, sizeof(ftpc->newhost), ""%s"", conn->host.name);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_573.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_573.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_573.cpp,107,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_573.cpp,-1,"[""member"", ""member"", ""string"", ""member""]","[""member"", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""||"", ""||"", ""||"", ""||""]","set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[['snprintf', 'ftpc', 'newhost', 'sizeof', 'ftpc', 'newhost', '%s', 'conn', 'host', 'name'], []]",2015-08-12T18:18:06,Brad King,4237709208395580589,528
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_288.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_288.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_288.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_700.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_700.cpp,1986,2010,2002,-1,"snprintf(ftpc->newhost, sizeof(ftpc->newhost), ""%s"",
                 conn->ip_addr_str);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_574.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_574.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_574.cpp,109,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_574.cpp,-1,"[""member"", ""member"", ""string"", ""member""]","[""member"", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""||"", ""||"", ""||"", ""||"", ""!""]","set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[['snprintf', 'ftpc', 'newhost', 'sizeof', 'ftpc', 'newhost', '%s', 'conn', 'ip_addr_str'], []]",2015-08-12T18:18:06,Brad King,2531966516240612120,409
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_288.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_288.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_288.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_700.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_700.cpp,1986,2010,2006,2020,"snprintf(ftpc->newhost, sizeof(ftpc->newhost),
               ""%d.%d.%d.%d"", ip[0], ip[1], ip[2], ip[3]);","ftpc->newhost = aprintf(""%d.%d.%d.%d"", ip[0], ip[1], ip[2], ip[3]);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_575.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_575.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_575.cpp,113,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_575.cpp,96,"[""member"", ""member"", ""constant"", ""member"", ""member"", ""member"", ""member""]","[""member"", ""!""]","set([u'struct ftp_conn * ftpc = & conn -> proto . ftpc ;', u'int ip [ 4 ] ;', u'struct SessionHandle * data = conn -> data ;'])","set([3, 61, 5])","[['snprintf', 'sizeof', 'ftpc', 'newhost'], ['aprintf']]",2015-08-12T18:18:06,Brad King,5055081340454859011,410
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_289.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_289.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_289.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_702.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_702.cpp,1958,1996,1960,1999,,"conn->allocptr.host = aprintf(""%s\r\n"", ptr);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_576.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_576.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_576.cpp,247,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_576.cpp,251,[],"[""char *"", ""!"", ""!""]","set([u'conn -> allocptr . cookiehost = cookiehost', u'conn -> allocptr . accept_encoding = aprintf ( ""Accept-Encoding: %s\\r\\n"" , data -> set . str [ STRING_ENCODING ] )', u'ptr = Curl_checkheaders ( conn , ""Host:"" )', u'struct connectdata * conn', u'conn -> allocptr . ref = NULL', u'conn -> allocptr . ref = aprintf ( ""Referer: %s\\r\\n"" , data -> change . referer )'])","set([0, 129, 134, 144, 212, 246])","[[], ['conn', 'allocptr', 'host', 'aprintf', '%s\\r\\n', 'ptr']]",2015-08-12T18:18:06,Brad King,22665962818085581257,411
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_289.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_289.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_289.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_703.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_703.cpp,2153,2198,2157,2201,"conn->allocptr.rangeline = aprintf(""Range: bytes=%s\r\n"",
                                         data->state.range);","conn->allocptr.rangeline = aprintf(""Range: bytes=%s\r\n"",
                                         data->state.range);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_577.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_577.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_577.cpp,444,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_577.cpp,453,"[""string"", ""member""]","[""macro"", ""macro"", ""=="", ""macro"", ""macro"", ""=="", ""||"", ""Curl_checkheaders_ret"", ""!"", ""&&""]","set([u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )', u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> req . upload_chunky = TRUE', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = FALSE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'data -> state . resume_from = 0'])","set([0, 65, 2, 389, 257, 73, 202, 12, 322, 269, 433, 274, 193, 181, 251])","[[], []]",2015-08-12T18:18:06,Brad King,0,550
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_704.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_704.cpp,26,26,261,-1,"snprintf((char *)&dest[i*2], 3, ""%02x"", source[i]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_578.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_578.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_578.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_578.cpp,-1,"[""member"", ""int"", ""string"", ""member""]","[""null"", ""int"", ""<""]","set([u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )', u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> req . upload_chunky = TRUE', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = FALSE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'data -> state . resume_from = 0'])","set([0, 65, 2, 389, 257, 73, 202, 12, 322, 269, 433, 274, 193, 181, 251])","[['snprintf', 'char', '*', '&dest[i*2]', '3', '%02x', 'source[i]'], []]",2015-08-12T18:18:06,Brad King,-16861158296773085366,523
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_705.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_705.cpp,352,112,369,-1,"snprintf(cnoncebuf, sizeof(cnoncebuf), ""%08x%08x%08x%08x"",
             Curl_rand(data), Curl_rand(data),
             Curl_rand(data), Curl_rand(data));",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_579.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_579.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_579.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_579.cpp,-1,"[""char *"", ""unkown"", ""string"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret"", ""Curl_rand_ret""]","[""member""]","set([u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )', u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> req . upload_chunky = TRUE', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = FALSE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'data -> state . resume_from = 0'])","set([0, 65, 2, 389, 257, 73, 202, 12, 322, 269, 433, 274, 193, 181, 251])","[['snprintf', 'cnoncebuf', 'sizeof', 'cnoncebuf', '%08x%08x%08x%08x', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data', 'Curl_rand', 'data'], []]",2015-08-12T18:18:06,Brad King,11735648100075555272,524
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_705.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_705.cpp,352,112,402,-1,"tmp = aprintf(""%s:%s:%s"", ha1, d->nonce, d->cnonce);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_581.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_581.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_581.cpp,106,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_581.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""member""]","[""member"", ""macro"", ""==""]","set([u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )', u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> req . upload_chunky = TRUE', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = FALSE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'data -> state . resume_from = 0'])","set([0, 65, 2, 389, 257, 73, 202, 12, 322, 269, 433, 274, 193, 181, 251])","[['tmp', 'aprintf', '%s', '%s', '%s', 'ha1', 'd', 'nonce', 'd', 'cnonce'], []]",2015-08-12T18:18:06,Brad King,15619547470382740950,412
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_706.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_706.cpp,435,141,442,-1,"md5this = (unsigned char *)aprintf(""%s:%.*s"", request, urilen, uripath);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_582.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_582.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_582.cpp,146,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_582.cpp,-1,"[""constant"", ""const unsigned char *"", ""strchr_ret"", ""const unsigned char *""]","[""aprintf_ret"", ""!"", ""!""]","set([u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )', u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> req . upload_chunky = TRUE', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = FALSE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'data -> state . resume_from = 0'])","set([0, 65, 2, 389, 257, 73, 202, 12, 322, 269, 433, 274, 193, 181, 251])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%', '*s', 'request', 'urilen', 'uripath'], []]",2015-08-12T18:18:06,Brad King,17867711757821100480,413
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_706.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_706.cpp,435,141,462,-1,"md5this = (unsigned char *)aprintf(""%s:%s:%08x:%s:%s:%s"",
                                       ha1,
                                       d->nonce,
                                       d->nc,
                                       d->cnonce,
                                       d->qop,
                                       ha2);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_584.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_584.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_584.cpp,166,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_584.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""member"", ""member"", ""member"", ""unsigned char *""]","[""member""]","set([u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )', u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> req . upload_chunky = TRUE', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = FALSE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'data -> state . resume_from = 0'])","set([0, 65, 2, 389, 257, 73, 202, 12, 322, 269, 433, 274, 193, 181, 251])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', '%08x', '%s', '%s', '%s', 'ha1', 'd', 'nonce', 'd', 'nc', 'd', 'cnonce', 'd', 'qop', 'ha2'], []]",2015-08-12T18:18:06,Brad King,9052919241511133794,414
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_706.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_706.cpp,435,141,471,-1,"md5this = (unsigned char *)aprintf(""%s:%s:%s"",
                                       ha1,
                                       d->nonce,
                                       ha2);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_585.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_585.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_585.cpp,175,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_585.cpp,-1,"[""string"", ""unsigned char *"", ""member"", ""unsigned char *""]","[""member"", ""!""]","set([u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%hu\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )', u'struct SessionHandle * data = conn -> data ;', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> req . upload_chunky = TRUE', u'struct connectdata * conn', u'data -> state . first_host = strdup ( conn -> host . name )', u'data -> req . upload_chunky = FALSE', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""%s\\r\\n"" , ptr )', u'data -> state . infilesize -= data -> state . resume_from', u'data -> req . upload_chunky = Curl_compareheader ( ptr , ""Transfer-Encoding:"" , ""chunked"" )', u'data -> state . resume_from = 0'])","set([0, 65, 2, 389, 257, 73, 202, 12, 322, 269, 433, 274, 193, 181, 251])","[['md5this', 'unsigned', 'char', '*', 'aprintf', '%s', '%s', '%s', 'ha1', 'd', 'nonce', 'ha2'], []]",2015-08-12T18:18:06,Brad King,10116574456763885852,415
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_706.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_706.cpp,435,141,503,160,"""%sAuthorization: Digest ""
               ""username=\""%s\"", ""
               ""realm=\""%s\"", ""
               ""nonce=\""%s\"", ""
               ""uri=\""%.*s\"", ""
               ""cnonce=\""%s\"", ""
               ""nc=%08x, ""
               ""qop=%s, ""
               ""response=\""%s\"""";","(""%sAuthorization: Digest %s\r\n"";",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_586.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_586.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_586.cpp,207,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_586.cpp,90,[],"[""member""]","set([u'char * response ;', u'allocuserpwd = & conn -> allocptr . proxyuserpwd', u'bool proxy', u'result = Curl_sasl_create_digest_http_message ( data , userp , passwdp , request , path , digest , & response , & len )', u'allocuserpwd = & conn -> allocptr . userpwd'])","set([9, 34, 27, 84, 1])","[['username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'uri', '\\', '%', '*s\\', 'cnonce', '\\', '%s\\', 'nc', '%08x', 'qop', '%s', 'response', '\\', '%s\\'], ['%s\\r\\n']]",2015-08-12T18:18:06,Brad King,37060432716637841266,416
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_706.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_706.cpp,435,141,529,-1,"""%sAuthorization: Digest ""
               ""username=\""%s\"", ""
               ""realm=\""%s\"", ""
               ""nonce=\""%s\"", ""
               ""uri=\""%.*s\"", ""
               ""response=\""%s\"""";",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_587.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_587.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_587.cpp,233,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_587.cpp,-1,[],"[""member"", ""!""]","set([u'char * response ;', u'allocuserpwd = & conn -> allocptr . proxyuserpwd', u'bool proxy', u'result = Curl_sasl_create_digest_http_message ( data , userp , passwdp , request , path , digest , & response , & len )', u'allocuserpwd = & conn -> allocptr . userpwd'])","set([9, 34, 27, 84, 1])","[['%sAuthorization', 'Digest', 'username', '\\', '%s\\', 'realm', '\\', '%s\\', 'nonce', '\\', '%s\\', 'uri', '\\', '%', '*s\\', 'response', '\\', '%s\\'], []]",2015-08-12T18:18:06,Brad King,27124392518197397619,417
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_706.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_706.cpp,435,141,549,-1,"tmp = aprintf(""%s, opaque=\""%s\"""", *allocuserpwd, d->opaque);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_588.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_588.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_588.cpp,253,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_588.cpp,-1,"[""string"", ""member"", ""member""]","[""member""]","set([u'char * response ;', u'allocuserpwd = & conn -> allocptr . proxyuserpwd', u'bool proxy', u'result = Curl_sasl_create_digest_http_message ( data , userp , passwdp , request , path , digest , & response , & len )', u'allocuserpwd = & conn -> allocptr . userpwd'])","set([9, 34, 27, 84, 1])","[['tmp', 'aprintf', '%s', 'opaque', '\\', '%s\\', '*allocuserpwd', 'd', 'opaque'], []]",2015-08-12T18:18:06,Brad King,15191539412821562420,418
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_706.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_706.cpp,435,141,558,-1,"tmp = aprintf(""%s, algorithm=\""%s\"""", *allocuserpwd, d->algorithm);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_589.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_589.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_589.cpp,262,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_589.cpp,-1,"[""string"", ""member"", ""member""]","[""member""]","set([u'char * response ;', u'allocuserpwd = & conn -> allocptr . proxyuserpwd', u'bool proxy', u'result = Curl_sasl_create_digest_http_message ( data , userp , passwdp , request , path , digest , & response , & len )', u'allocuserpwd = & conn -> allocptr . userpwd'])","set([9, 34, 27, 84, 1])","[['tmp', 'aprintf', '%s', 'algorithm', '\\', '%s\\', '*allocuserpwd', 'd', 'algorithm'], []]",2015-08-12T18:18:06,Brad King,12553094990199559606,419
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_digest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_290.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_706.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_706.cpp,435,141,438,146,,"path = (unsigned char *) aprintf(""%.*s"", urilen, uripath);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_590.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_590.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_590.cpp,142,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_590.cpp,76,[],"[""member"", ""strchr_ret"", ""null"", ""!="", ""&&""]","set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[[], ['path', 'unsigned', 'char', '*', 'aprintf', '%', '*s', 'urilen', 'uripath']]",2015-08-12T18:18:06,Brad King,-16964577715776506072,420
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_negotiate.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_291.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_291.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_291.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_707.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_707.cpp,22,22,60,-1,"snprintf(name, sizeof(name), ""%s@%s"", service, proxy ? conn->proxy.name :
           conn->host.name);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_591.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_591.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_591.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_591.cpp,-1,"[""char *"", ""unkown"", ""string"", ""const char *"", ""member""]","[""member"", ""unkown"", "">"", ""!""]","set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[['snprintf', 'name', 'sizeof', 'name', '%s', '%s', 'service', 'proxy', 'conn', 'proxy', 'name', 'conn', 'host', 'name'], []]",2015-08-12T18:18:06,Brad King,8704418510416207794,421
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_negotiate.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_291.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_291.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_291.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_707.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_707.cpp,22,22,82,-1,"snprintf(buf, sizeof(buf), ""%s"", prefix);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_592.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_592.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_592.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_592.cpp,-1,"[""char *"", ""unkown"", ""string"", ""const char *""]",[],"set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[['snprintf', 'buf', 'sizeof', 'buf', '%s', 'prefix'], []]",2015-08-12T18:18:06,Brad King,14289162229529384888,422
706542615828488a5ad197d0ef3dd5e42eb739c4,"curl 7.44.0 (reduced)

Extract upstream curl using the following shell code.

url=git://github.com/bagder/curl.git &&
v=7.44.0 &&
r=1a7f66a3 &&
paths=""
  CMake/*
  CMakeLists.txt
  COPYING
  include/curl/*.h
  include/curl/curlbuild.h.cmake
  lib/*.c
  lib/*.h
  lib/CMakeLists.txt
  lib/Makefile.inc
  lib/curl_config.h.cmake
  lib/libcurl.rc
  lib/vtls/*.c
  lib/vtls/*.h
"" &&
mkdir curl-$v-g$r-reduced &&
git clone $url curl-git &&
date=$(cd curl-git && git log -n 1 --format='%cd' $r) &&
(cd curl-git && git checkout $r &&
 git archive --format=tar $r -- $paths) |
(cd curl-$v-g$r-reduced && tar xv &&
 rm lib/config-*.h) &&
echo ""g$r date: $date""",[],lib/http_negotiate.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_291.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_291.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_291.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_707.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_707.cpp,22,22,92,-1,"snprintf(buf + len, sizeof(buf) - len,
                 "": %s"", (char*) status_string.value);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_593.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_593.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_593.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_593.cpp,-1,"[""char *"", ""strlen_ret"", ""string"", ""member""]","[""unkown"", ""strlen_ret"", "">""]","set([u'const unsigned char * uripath', u'size_t urilen = tmp - ( char * ) uripath ;', u'authp = & data -> state . authproxy', u'authp = & data -> state . authhost'])","set([74, 3, 37, 30])","[['snprintf', 'buf', 'len', 'sizeof', 'buf', 'len', '%s', 'char*', 'status_string', 'value'], []]",2015-08-12T18:18:06,Brad King,8585342237959506498,423
f8be9ba9c258698ed88a7510cf2ba3335491f3da,"cmGlobalGenerator: Base progress on Makefiles, not LocalGenerators.",[],Source/cmGlobalGenerator.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_295.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_295.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_295.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_712.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_712.cpp,1148,1148,1150,1150,"sprintf(num,""%d"",static_cast<int>(this->LocalGenerators.size()));","sprintf(num,""%d"",static_cast<int>(this->Makefiles.size()));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_594.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_594.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_594.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_594.cpp,26,"[""char *"", ""string"", ""bool""]",[],"set([u'char num [ 100 ] ;', u'this -> FirstTimeProgress = 0.0f'])","set([25, 2])","[['LocalGenerators'], ['Makefiles']]",2015-08-07T02:10:28,Stephen Kelly,6919714983562672698,407
d0915bc86f294707411ae525e70fa20965f1aeec,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_297.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_297.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_297.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_719.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_719.cpp,217,231,224,253,,"fprintf(stdout, ""Output on stdout before grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_597.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_597.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_597.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_597.cpp,16,[],[],set([]),set([]),"[[], ['fprintf', 'stdout', 'Output', 'on', 'stdout', 'before', 'grandchild', 'test', '\\n']]",2015-07-31T13:26:35,Brad King,-15171082967762468031,490
d0915bc86f294707411ae525e70fa20965f1aeec,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_297.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_297.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_297.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_719.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_719.cpp,217,231,224,254,,"fprintf(stderr, ""Output on stderr before grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_598.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_598.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_598.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_598.cpp,17,[],[],set([]),set([]),"[[], ['fprintf', 'stderr', 'Output', 'on', 'stderr', 'before', 'grandchild', 'test', '\\n']]",2015-07-31T13:26:35,Brad King,-15171070967760467681,491
d0915bc86f294707411ae525e70fa20965f1aeec,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_297.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_297.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_297.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_719.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_719.cpp,217,231,224,264,,"fprintf(stdout, ""Output on stdout after grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_599.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_599.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_599.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_599.cpp,27,[],[],set([]),set([]),"[[], ['fprintf', 'stdout', 'Output', 'on', 'stdout', 'after', 'grandchild', 'test', '\\n']]",2015-07-31T13:26:35,Brad King,-30681774763426127123,492
d0915bc86f294707411ae525e70fa20965f1aeec,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_297.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_297.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_297.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_719.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_719.cpp,217,231,224,265,,"fprintf(stderr, ""Output on stderr after grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_600.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_600.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_600.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_600.cpp,28,[],[],set([]),set([]),"[[], ['fprintf', 'stderr', 'Output', 'on', 'stderr', 'after', 'grandchild', 'test', '\\n']]",2015-07-31T13:26:35,Brad King,-30681762763424126773,493
1feafc643b1c50fd0fa8171a4170065ca39d4d4c,"KWSys 2015-07-30 (f63febb7)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ f63febb7 | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' c9336bcf..f63febb7
Brad King (1):
      83b4a6b8 Process: Fix conversion warning in testProcess.c

James Johnston (7):
      4cd8846c Process: Remove trailing whitespace in ProcessUNIX.c
      b1c44c58 Process: Refactor sleeping code in testProcess.c.
      faff2ab0 Process: Wait for children to terminate on Ctrl+C.
      ef517b19 Process: Added initial support for process groups.
      906c2cae Process: Added test cases for testing Ctrl+C and process groups.
      52874e6a Process: Fix leaked file descriptor in ProcessUNIX
      f63febb7 Process: Fix error message for startup failure on Windows",[],testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_299.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_299.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_299.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_730.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_730.cpp,217,231,224,253,,"fprintf(stdout, ""Output on stdout before grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_615.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_615.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_615.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_615.cpp,16,[],[],set([]),set([]),"[[], ['fprintf', 'stdout', 'Output', 'on', 'stdout', 'before', 'grandchild', 'test', '\\n']]",2015-07-31T13:26:30,Brad King,-15171082967762468031,490
1feafc643b1c50fd0fa8171a4170065ca39d4d4c,"KWSys 2015-07-30 (f63febb7)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ f63febb7 | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' c9336bcf..f63febb7
Brad King (1):
      83b4a6b8 Process: Fix conversion warning in testProcess.c

James Johnston (7):
      4cd8846c Process: Remove trailing whitespace in ProcessUNIX.c
      b1c44c58 Process: Refactor sleeping code in testProcess.c.
      faff2ab0 Process: Wait for children to terminate on Ctrl+C.
      ef517b19 Process: Added initial support for process groups.
      906c2cae Process: Added test cases for testing Ctrl+C and process groups.
      52874e6a Process: Fix leaked file descriptor in ProcessUNIX
      f63febb7 Process: Fix error message for startup failure on Windows",[],testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_299.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_299.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_299.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_730.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_730.cpp,217,231,224,254,,"fprintf(stderr, ""Output on stderr before grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_616.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_616.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_616.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_616.cpp,17,[],[],set([]),set([]),"[[], ['fprintf', 'stderr', 'Output', 'on', 'stderr', 'before', 'grandchild', 'test', '\\n']]",2015-07-31T13:26:30,Brad King,-15171070967760467681,491
1feafc643b1c50fd0fa8171a4170065ca39d4d4c,"KWSys 2015-07-30 (f63febb7)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ f63febb7 | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' c9336bcf..f63febb7
Brad King (1):
      83b4a6b8 Process: Fix conversion warning in testProcess.c

James Johnston (7):
      4cd8846c Process: Remove trailing whitespace in ProcessUNIX.c
      b1c44c58 Process: Refactor sleeping code in testProcess.c.
      faff2ab0 Process: Wait for children to terminate on Ctrl+C.
      ef517b19 Process: Added initial support for process groups.
      906c2cae Process: Added test cases for testing Ctrl+C and process groups.
      52874e6a Process: Fix leaked file descriptor in ProcessUNIX
      f63febb7 Process: Fix error message for startup failure on Windows",[],testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_299.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_299.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_299.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_730.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_730.cpp,217,231,224,264,,"fprintf(stdout, ""Output on stdout after grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_617.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_617.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_617.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_617.cpp,27,[],[],set([]),set([]),"[[], ['fprintf', 'stdout', 'Output', 'on', 'stdout', 'after', 'grandchild', 'test', '\\n']]",2015-07-31T13:26:30,Brad King,-30681774763426127123,492
1feafc643b1c50fd0fa8171a4170065ca39d4d4c,"KWSys 2015-07-30 (f63febb7)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ f63febb7 | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' c9336bcf..f63febb7
Brad King (1):
      83b4a6b8 Process: Fix conversion warning in testProcess.c

James Johnston (7):
      4cd8846c Process: Remove trailing whitespace in ProcessUNIX.c
      b1c44c58 Process: Refactor sleeping code in testProcess.c.
      faff2ab0 Process: Wait for children to terminate on Ctrl+C.
      ef517b19 Process: Added initial support for process groups.
      906c2cae Process: Added test cases for testing Ctrl+C and process groups.
      52874e6a Process: Fix leaked file descriptor in ProcessUNIX
      f63febb7 Process: Fix error message for startup failure on Windows",[],testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_299.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_299.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_299.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_730.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_730.cpp,217,231,224,265,,"fprintf(stderr, ""Output on stderr after grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_618.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_618.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_618.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_618.cpp,28,[],[],set([]),set([]),"[[], ['fprintf', 'stderr', 'Output', 'on', 'stderr', 'after', 'grandchild', 'test', '\\n']]",2015-07-31T13:26:30,Brad King,-30681762763424126773,493
069aa93b555293679f4b8c07623133ba62a74ee4,"bindexplib: Add support for ""/bigobj"" format objects",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_300.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_300.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_300.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_735.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_735.cpp,209,288,213,292,"fprintf(fout,""EXPORTS \n"");","fprintf(this->FileOut,""EXPORTS \n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_631.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_631.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_631.cpp,43,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_631.cpp,37,"[""FILE *"", ""string""]","[""int""]","set([u'this -> ImportFlag = false', u'this -> ImportFlag = true'])","set([80, 36])","[['fout'], ['this', 'FileOut']]",2015-07-06T15:11:01,Brad King,11813164863111737243,529
069aa93b555293679f4b8c07623133ba62a74ee4,"bindexplib: Add support for ""/bigobj"" format objects",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_300.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_300.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_300.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_736.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_736.cpp,228,307,233,313,"fprintf(fout, ""\t%s \t DATA\n"", symbol.c_str());","fprintf(this->FileOut, ""\t%s \t DATA\n"", symbol.c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_632.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_632.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_632.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_632.cpp,58,"[""FILE *"", ""string"", ""symbol . c_str_ret""]","[""member"", ""bool"", ""&&""]","set([u'symbol = stringTable + pSymbolTable -> N . Name . Long', u'pSymbolTable ++', u'this -> ImportFlag = false', u'symbol = """"', u'this -> ImportFlag = true', u'SectChar = this -> SectionHeaders [ pSymbolTable -> SectionNumber - 1 ] . Characteristics', u'SymbolTableType * pSymbolTable = this -> SymbolTable ;'])","set([36, 9, 80, 18, 53, 92, 21])","[['fout'], ['this', 'FileOut']]",2015-07-06T15:11:01,Brad King,11813164863111737243,529
069aa93b555293679f4b8c07623133ba62a74ee4,"bindexplib: Add support for ""/bigobj"" format objects",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_300.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_300.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_300.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_736.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_736.cpp,228,307,237,317,"fprintf(fout, ""\t%s\n"", symbol.c_str());","fprintf(this->FileOut, ""\t%s\n"", symbol.c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_633.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_633.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_633.cpp,67,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_633.cpp,62,"[""FILE *"", ""string"", ""symbol . c_str_ret""]","[""member"", ""bool"", ""!"", ""||""]","set([u'symbol = stringTable + pSymbolTable -> N . Name . Long', u'pSymbolTable ++', u'this -> ImportFlag = false', u'this -> ImportFlag = true', u'symbol = """"', u'SectChar = this -> SectionHeaders [ pSymbolTable -> SectionNumber - 1 ] . Characteristics', u'SymbolTableType * pSymbolTable = this -> SymbolTable ;'])","set([36, 9, 80, 18, 53, 92, 21])","[['fout'], ['this', 'FileOut']]",2015-07-06T15:11:01,Brad King,11813164863111737243,529
069aa93b555293679f4b8c07623133ba62a74ee4,"bindexplib: Add support for ""/bigobj"" format objects",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_300.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_300.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_300.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_737.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_737.cpp,252,332,256,336,"fprintf(fout,""IMPORTS \n"");","fprintf(this->FileOut,""IMPORTS \n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_634.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_634.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_634.cpp,86,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_634.cpp,81,"[""FILE *"", ""string""]","[""int"", ""!""]","set([u'this -> ImportFlag = false', u'this -> ImportFlag = true'])","set([80, 36])","[['fout'], ['this', 'FileOut']]",2015-07-06T15:11:01,Brad King,11813164863111737243,529
069aa93b555293679f4b8c07623133ba62a74ee4,"bindexplib: Add support for ""/bigobj"" format objects",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_300.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_300.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_300.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_737.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_737.cpp,252,332,258,338,"fprintf(fout, ""\t%s DATA \n"", symbol.c_str()+1);","fprintf(this->FileOut, ""\t%s DATA \n"", symbol.c_str()+1);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_635.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_635.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_635.cpp,88,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_635.cpp,83,"[""FILE *"", ""string"", ""symbol . c_str_ret""]","[""member"", ""macro"", ""==""]","set([u'this -> ImportFlag = true', u'this -> ImportFlag = false', u'symbol = stringTable + pSymbolTable -> N . Name . Long', u'pSymbolTable ++', u'SymbolTableType * pSymbolTable = this -> SymbolTable ;'])","set([80, 9, 92, 76, 36])","[['fout'], ['this', 'FileOut']]",2015-07-06T15:11:01,Brad King,11813164863111737243,529
de70c922d9c846cf3a6fabfbedd054c02f4b8934,"bindexplib: Teach DumpFile to return errors

This will allow callers to know if it worked.",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_301.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_301.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_301.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_739.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_739.cpp,309,310,311,312,"fprintf(stderr, ""Couldn't open file with CreateFile()\n"");","fprintf(stderr, ""Couldn't open file '%s' with CreateFile()\n"", filename);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_636.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_636.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_636.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_636.cpp,13,"[""unkown"", ""string""]","[""CreateFileW_ret"", ""macro"", ""==""]","set([u'const char * filename', u'hFile = CreateFileW ( cmsys :: Encoding :: ToWide ( filename ) . c_str ( ) , GENERIC_READ , FILE_SHARE_READ , NULL , OPEN_EXISTING , FILE_ATTRIBUTE_NORMAL , 0 )'])","set([8, 1])","[[], ['%s', 'filename']]",2015-07-06T15:11:01,Brad King,-6664874364539191539,39
de70c922d9c846cf3a6fabfbedd054c02f4b8934,"bindexplib: Teach DumpFile to return errors

This will allow callers to know if it worked.",[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_301.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_301.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_301.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_740.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_740.cpp,346,347,348,349,"printf(""unrecognized file format\n"");","printf(""unrecognized file format in '%s'\n"", filename);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_637.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_637.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_637.cpp,50,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_637.cpp,50,"[""string"", ""const char *""]","[""member"", ""macro"", ""=="", ""member"", ""macro"", ""=="", ""||"", ""member"", ""null"", ""=="", ""&&"", ""!""]","set([u'const char * filename', u'dosHeader = ( PIMAGE_DOS_HEADER ) lpFileBase'])","set([32, 1])","[['format\\n'], ['format', 'in', '%s', '\\n', 'filename']]",2015-07-06T15:11:01,Brad King,-1759356702368566360,40
4ff09893232b26b5c2961fb1e2a31836cad00a35,bindexplib: Drop code that CMake does not need,[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_303.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_742.cpp,71,71,263,-1,"fprintf(fout, ""Symbol Table - %X entries  (* = auxillary symbol)\n"",
      cSymbols);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_638.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_638.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_638.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_638.cpp,-1,"[""FILE *"", ""string"", ""unsigned""]",[],"set([u'const char * filename', u'dosHeader = ( PIMAGE_DOS_HEADER ) lpFileBase'])","set([32, 1])","[['fprintf', 'fout', 'Symbol', 'Table', '%X', 'entries', '*', 'auxillary', 'symbol', '\\n', 'cSymbols'], []]",2015-07-06T15:11:00,Brad King,598670320111370794,41
4ff09893232b26b5c2961fb1e2a31836cad00a35,bindexplib: Drop code that CMake does not need,[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_303.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_742.cpp,71,71,266,-1,"fprintf(fout,
      ""Indx Name                 Value    Section    cAux  Type    Storage  Character\n""
      ""---- -------------------- -------- ---------- ----- ------- -------- ---------\n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_639.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_639.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_639.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_639.cpp,-1,[],[],"set([u'const char * filename', u'dosHeader = ( PIMAGE_DOS_HEADER ) lpFileBase'])","set([32, 1])","[['fprintf', 'fout', 'Indx', 'Name', 'Value', 'Section', 'cAux', 'Type', 'Storage', 'Character\\n', '\\n'], []]",2015-07-06T15:11:00,Brad King,1475239448345914261,42
4ff09893232b26b5c2961fb1e2a31836cad00a35,bindexplib: Drop code that CMake does not need,[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_303.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_742.cpp,71,71,276,-1,"fprintf(fout, ""%04X "", i);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_640.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_640.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_640.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_640.cpp,-1,"[""FILE *"", ""string"", ""member""]","[""member"", ""unsigned"", ""<""]","set([u'const char * filename', u'dosHeader = ( PIMAGE_DOS_HEADER ) lpFileBase'])","set([32, 1])","[['fprintf', 'fout', '%04X', 'i'], []]",2015-07-06T15:11:00,Brad King,-431236394766094425,43
4ff09893232b26b5c2961fb1e2a31836cad00a35,bindexplib: Drop code that CMake does not need,[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_303.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_742.cpp,71,71,278,-1,"fprintf(fout, ""%-20.8s"", pSymbolTable->N.ShortName);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_641.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_641.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_641.cpp,24,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_641.cpp,-1,"[""FILE *"", ""constant"", ""member""]","[""member"", ""null"", ""!=""]","set([u'const char * filename', u'dosHeader = ( PIMAGE_DOS_HEADER ) lpFileBase'])","set([32, 1])","[['fprintf', 'fout', '%', '20', '8s', 'pSymbolTable', 'N', 'ShortName'], []]",2015-07-06T15:11:00,Brad King,5074523336375274920,44
4ff09893232b26b5c2961fb1e2a31836cad00a35,bindexplib: Drop code that CMake does not need,[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_303.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_742.cpp,71,71,280,-1,"fprintf(fout, ""%-20s"", stringTable + pSymbolTable->N.Name.Long);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_642.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_642.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_642.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_642.cpp,-1,"[""FILE *"", ""string"", ""member""]","[""member"", ""null"", ""!="", ""!""]","set([u'const char * filename', u'dosHeader = ( PIMAGE_DOS_HEADER ) lpFileBase'])","set([32, 1])","[['fprintf', 'fout', '%', '20s', 'stringTable', 'pSymbolTable', 'N', 'Name', 'Long'], []]",2015-07-06T15:11:00,Brad King,18651818784714559936,45
4ff09893232b26b5c2961fb1e2a31836cad00a35,bindexplib: Drop code that CMake does not need,[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_303.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_742.cpp,71,71,282,-1,"fprintf(fout, "" %08X"", pSymbolTable->Value);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_643.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_643.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_643.cpp,28,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_643.cpp,-1,"[""FILE *"", ""string"", ""member""]","[""member"", ""unsigned"", ""<""]","set([u'const char * filename', u'dosHeader = ( PIMAGE_DOS_HEADER ) lpFileBase'])","set([32, 1])","[['fprintf', 'fout', '%08X', 'pSymbolTable', 'Value'], []]",2015-07-06T15:11:00,Brad King,14494933814776180401,46
4ff09893232b26b5c2961fb1e2a31836cad00a35,bindexplib: Drop code that CMake does not need,[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_303.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_742.cpp,71,71,286,-1,"fprintf(fout, "" sect:%s aux:%X type:%02X st:%s"",
         sectionName.c_str(),
         pSymbolTable->NumberOfAuxSymbols,
         pSymbolTable->Type,
         GetSZStorageClass(pSymbolTable->StorageClass) );",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_644.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_644.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_644.cpp,32,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_644.cpp,-1,"[""FILE *"", ""string"", ""sectionName . c_str_ret"", ""member"", ""member"", ""GetSZStorageClass_ret""]","[""member"", ""unsigned"", ""<""]","set([u'const char * filename', u'dosHeader = ( PIMAGE_DOS_HEADER ) lpFileBase'])","set([32, 1])","[['fprintf', 'fout', 'sect', '%s', 'aux', '%X', 'type', '%02X', 'st', '%s', 'sectionName', 'c_str', 'pSymbolTable', 'NumberOfAuxSymbols', 'pSymbolTable', 'Type', 'GetSZStorageClass', 'pSymbolTable', 'StorageClass'], []]",2015-07-06T15:11:00,Brad King,18467353064508033743,47
4ff09893232b26b5c2961fb1e2a31836cad00a35,bindexplib: Drop code that CMake does not need,[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_303.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_742.cpp,71,71,293,-1,"fprintf(fout,"" hc: %s \n"",sectionCharacter.c_str());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_645.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_645.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_645.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_645.cpp,-1,"[""FILE *"", ""string"", ""sectionCharacter . c_str_ret""]","[""member"", ""unsigned"", ""<""]","set([u'const char * filename', u'dosHeader = ( PIMAGE_DOS_HEADER ) lpFileBase'])","set([32, 1])","[['fprintf', 'fout', 'hc', '%s', '\\n', 'sectionCharacter', 'c_str'], []]",2015-07-06T15:11:00,Brad King,13288551946009288155,48
4ff09893232b26b5c2961fb1e2a31836cad00a35,bindexplib: Drop code that CMake does not need,[],Source/bindexplib.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_303.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_303.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_742.cpp,71,71,340,-1,"fprintf(fout, ""\t%s\n"", symbol.c_str());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_646.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_646.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_646.cpp,24,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_646.cpp,-1,"[""FILE *"", ""string"", ""symbol . c_str_ret""]","[""member"", ""macro"", ""==""]","set([u'const char * filename', u'dosHeader = ( PIMAGE_DOS_HEADER ) lpFileBase'])","set([32, 1])","[['fprintf', 'fout', '\\t%s\\n', 'symbol', 'c_str'], []]",2015-07-06T15:11:00,Brad King,9553943472725811674,49
59e21ffa134faf0b089d9a704b3763e7f6f237d5,Port static calls from cmLocalGenerator to cmOutputConverter.,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_306.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_306.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_306.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_748.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_748.cpp,322,322,323,323,"fprintf(fout, ""set(CMAKE_%s_FLAGS %s)\n"", li->c_str(),
              cmLocalGenerator::EscapeForCMake(flags?flags:"""").c_str());","fprintf(fout, ""set(CMAKE_%s_FLAGS %s)\n"", li->c_str(),
              cmOutputConverter::EscapeForCMake(flags?flags:"""").c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_656.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_656.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_656.cpp,302,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_656.cpp,302,"[""FILE *"", ""string"", ""li -> c_str_ret"", ""cmLocalGenerator :: EscapeForCMake ( flags ? flags : \""\"" ) . c_str_ret""]","[""testLangs . begin_ret"", ""testLangs . end_ret"", ""!=""]","set([u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName , ""w"" ) ;', u'std :: set < std :: string > testLangs ;', u'std :: set < std :: string > :: iterator li = testLangs . begin ( ) ;', u'const char * flags = this -> Makefile -> GetDefinition ( langFlags ) ;'])","set([224, 297, 301, 255])","[['cmLocalGenerator'], ['cmOutputConverter']]",2015-06-06T07:15:58,Stephen Kelly,5867024458060635668,424
59e21ffa134faf0b089d9a704b3763e7f6f237d5,Port static calls from cmLocalGenerator to cmOutputConverter.,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_306.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_306.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_306.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_749.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_749.cpp,355,355,356,356,"fprintf(fout, ""set(CMAKE_EXE_LINKER_FLAGS %s)\n"",
                cmLocalGenerator::EscapeForCMake(
                    exeLinkFlags ? exeLinkFlags : """").c_str());","fprintf(fout, ""set(CMAKE_EXE_LINKER_FLAGS %s)\n"",
                cmOutputConverter::EscapeForCMake(
                    exeLinkFlags ? exeLinkFlags : """").c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_657.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_657.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_657.cpp,335,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_657.cpp,335,"[""FILE *"", ""string"", ""cmLocalGenerator :: EscapeForCMake ( exeLinkFlags ? exeLinkFlags : \""\"" ) . c_str_ret""]","[""this -> Makefile -> GetPolicyStatus_ret""]","set([u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName , ""w"" ) ;', u'this -> SrcFileSignature = true', u'this -> BinaryDirectory += ""/CMakeTmp""', u'this -> SrcFileSignature = false', u'const char * exeLinkFlags = this -> Makefile -> GetDefinition ( ""CMAKE_EXE_LINKER_FLAGS"" ) ;'])","set([177, 122, 5, 333, 255])","[['cmLocalGenerator'], ['cmOutputConverter']]",2015-06-06T07:15:58,Stephen Kelly,5867024458060635668,424
9486769866661e3aa76dd588ca5a7466e2969dc3,Don't use a cmLocalGenerator instance to call static methods.,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_308.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_308.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_308.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_751.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_751.cpp,323,322,324,323,"fprintf(fout, ""set(CMAKE_%s_FLAGS %s)\n"", li->c_str(),
              lg->EscapeForCMake(flags?flags:"""").c_str());","fprintf(fout, ""set(CMAKE_%s_FLAGS %s)\n"", li->c_str(),
              cmLocalGenerator::EscapeForCMake(flags?flags:"""").c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_658.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_658.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_658.cpp,303,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_658.cpp,302,"[""FILE *"", ""string"", ""li -> c_str_ret"", ""lg -> EscapeForCMake ( flags ? flags : \""\"" ) . c_str_ret""]","[""testLangs . begin_ret"", ""testLangs . end_ret"", ""!=""]","set([u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName , ""w"" ) ;', u'std :: set < std :: string > testLangs ;', u'std :: set < std :: string > :: iterator li = testLangs . begin ( ) ;', u'const char * flags = this -> Makefile -> GetDefinition ( langFlags ) ;'])","set([224, 297, 301, 255])","[['lg'], ['cmLocalGenerator']]",2015-05-14T18:30:09,Stephen Kelly,-3158198730242445509,425
9486769866661e3aa76dd588ca5a7466e2969dc3,Don't use a cmLocalGenerator instance to call static methods.,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_308.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_308.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_308.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_752.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_752.cpp,356,355,357,356,"fprintf(fout, ""set(CMAKE_EXE_LINKER_FLAGS %s)\n"",
                lg->EscapeForCMake(exeLinkFlags?exeLinkFlags:"""").c_str());","fprintf(fout, ""set(CMAKE_EXE_LINKER_FLAGS %s)\n"",
                cmLocalGenerator::EscapeForCMake(
                    exeLinkFlags ? exeLinkFlags : """").c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_659.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_659.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_659.cpp,336,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_659.cpp,335,"[""FILE *"", ""string"", ""lg -> EscapeForCMake ( exeLinkFlags ? exeLinkFlags : \""\"" ) . c_str_ret""]","[""this -> Makefile -> GetPolicyStatus_ret""]","set([u'this -> BinaryDirectory += ""/CMakeTmp""', u'this -> SrcFileSignature = true', u'const char * exeLinkFlags = this -> Makefile -> GetDefinition ( ""CMAKE_EXE_LINKER_FLAGS"" ) ;', u'this -> SrcFileSignature = false', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName , ""w"" ) ;'])","set([177, 122, 255, 333, 5])","[['lg'], ['cmLocalGenerator']]",2015-05-14T18:30:09,Stephen Kelly,-3158198730242445509,425
8521fdf56e4908676c28c6bbdda3f1fb2284d3d7,"Makefile: Fix output during parallel builds (#12991)

Replace use of separate ""cmake -E cmake_progress_report"" and ""cmake -E
cmake_echo_color"" commands to report the progress and message portions
of build output lines with --progress-* options to the latter to print
everything with a single command.  The line buffering of the stdout FILE
stream should cause the whole line to be printed with one atomic write.
This will avoid inter-mixing of line-wise messages from different
processes during a parallel build.",[u'https://gitlab.kitware.com/cmake/cmake/issues/12991'],Source/cmcmd.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_313.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_313.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_313.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_759.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_759.cpp,534,534,567,-1,"fprintf(progFile,""empty"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_660.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_660.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_660.cpp,426,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_660.cpp,-1,"[""cmsys :: SystemTools :: Fopen_ret"", ""string""]","[""cmsys :: SystemTools :: Fopen_ret""]","set([u'this -> BinaryDirectory += ""/CMakeTmp""', u'this -> SrcFileSignature = true', u'const char * exeLinkFlags = this -> Makefile -> GetDefinition ( ""CMAKE_EXE_LINKER_FLAGS"" ) ;', u'this -> SrcFileSignature = false', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName , ""w"" ) ;'])","set([177, 122, 255, 333, 5])","[['fprintf', 'progFile', 'empty'], []]",2015-02-06T13:36:51,Brad King,2390663386294908208,426
8521fdf56e4908676c28c6bbdda3f1fb2284d3d7,"Makefile: Fix output during parallel builds (#12991)

Replace use of separate ""cmake -E cmake_progress_report"" and ""cmake -E
cmake_echo_color"" commands to report the progress and message portions
of build output lines with --progress-* options to the latter to print
everything with a single command.  The line buffering of the stdout FILE
stream should cause the whole line to be printed with one atomic write.
This will avoid inter-mixing of line-wise messages from different
processes during a parallel build.",[u'https://gitlab.kitware.com/cmake/cmake/issues/12991'],Source/cmcmd.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_313.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_313.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_313.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_759.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_759.cpp,534,534,576,-1,"fprintf(stdout,""[%3i%%] "",((fileNum-3)*100)/count);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_661.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_661.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_661.cpp,435,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_661.cpp,-1,"[""unkown"", ""string"", ""int""]","[""int"", ""null"", "">""]","set([u'this -> BinaryDirectory += ""/CMakeTmp""', u'this -> SrcFileSignature = true', u'const char * exeLinkFlags = this -> Makefile -> GetDefinition ( ""CMAKE_EXE_LINKER_FLAGS"" ) ;', u'this -> SrcFileSignature = false', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName , ""w"" ) ;'])","set([177, 122, 255, 333, 5])","[['fprintf', 'stdout', '[%3i%%]', 'fileNum', '3', '*100', '/count'], []]",2015-02-06T13:36:51,Brad King,10273923533894255873,427
8521fdf56e4908676c28c6bbdda3f1fb2284d3d7,"Makefile: Fix output during parallel builds (#12991)

Replace use of separate ""cmake -E cmake_progress_report"" and ""cmake -E
cmake_echo_color"" commands to report the progress and message portions
of build output lines with --progress-* options to the latter to print
everything with a single command.  The line buffering of the stdout FILE
stream should cause the whole line to be printed with one atomic write.
This will avoid inter-mixing of line-wise messages from different
processes during a parallel build.",[u'https://gitlab.kitware.com/cmake/cmake/issues/12991'],Source/cmcmd.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_313.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_313.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_313.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_760.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_760.cpp,987,948,989,988,,"fprintf(progFile,""empty"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_662.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_662.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_662.cpp,0,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_662.cpp,38,[],[],"set([u'progFile = cmsys :: SystemTools :: Fopen ( fName , ""w"" )'])",set([35]),"[[], ['fprintf', 'progFile', 'empty']]",2015-02-06T13:36:51,Brad King,-2390663386294908208,50
8521fdf56e4908676c28c6bbdda3f1fb2284d3d7,"Makefile: Fix output during parallel builds (#12991)

Replace use of separate ""cmake -E cmake_progress_report"" and ""cmake -E
cmake_echo_color"" commands to report the progress and message portions
of build output lines with --progress-* options to the latter to print
everything with a single command.  The line buffering of the stdout FILE
stream should cause the whole line to be printed with one atomic write.
This will avoid inter-mixing of line-wise messages from different
processes during a parallel build.",[u'https://gitlab.kitware.com/cmake/cmake/issues/12991'],Source/cmcmd.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_313.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_313.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_313.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_760.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_760.cpp,987,948,989,1004,,"fprintf(stdout,""[%3i%%] "",((fileNum-3)*100)/count);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_663.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_663.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_663.cpp,0,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_663.cpp,54,[],[],"set([u'int fileNum = static_cast < int > ( cmsys :: Directory :: GetNumberOfFilesInDirectory ( dirName ) ) ;', u'int count = 0 ;'])","set([49, 12])","[[], ['fprintf', 'stdout', '[%3i%%]', 'fileNum', '3', '*100', '/count']]",2015-02-06T13:36:51,Brad King,-10273923533894255873,51
60c783676c91ff1ded2ed5e6fd50d0f9664032e5,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/Directory.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_322.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_322.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_322.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_775.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_775.cpp,112,112,118,118,"sprintf(buf, ""%s*"", name);","sprintf(buf, ""%s*"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_666.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_666.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_666.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_666.cpp,13,"[""int"", ""string"", ""const char *""]","[""member"", ""char"", ""=="", ""member"", ""char"", ""=="", ""||""]","set([u'const kwsys_stl :: string & name', u'buf = new char [ n + 1 + 1 ]'])","set([0, 12])","[[], ['c_str']]",2014-08-04T14:16:34,Brad King,604061038622547682,549
60c783676c91ff1ded2ed5e6fd50d0f9664032e5,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/Directory.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_322.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_322.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_322.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_775.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_775.cpp,112,112,127,127,"sprintf(buf, ""%s\\*"", name);","sprintf(buf, ""%s\\*"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_667.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_667.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_667.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_667.cpp,22,"[""int"", ""string"", ""const char *""]","[""strchr_ret""]","set([u'const kwsys_stl :: string & name', u'buf = new char [ n + 2 + 1 ]'])","set([0, 19])","[[], ['c_str']]",2014-08-04T14:16:34,Brad King,604061038622547682,549
60c783676c91ff1ded2ed5e6fd50d0f9664032e5,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/Directory.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_322.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_322.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_322.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_775.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_775.cpp,112,112,131,131,"sprintf(buf, ""%s/*"", name);","sprintf(buf, ""%s/*"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_668.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_668.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_668.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_668.cpp,26,"[""int"", ""string"", ""const char *""]","[""strchr_ret"", ""!""]","set([u'const kwsys_stl :: string & name', u'buf = new char [ n + 2 + 1 ]'])","set([0, 19])","[[], ['c_str']]",2014-08-04T14:16:34,Brad King,604061038622547682,549
60c783676c91ff1ded2ed5e6fd50d0f9664032e5,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/Directory.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_322.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_322.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_322.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_776.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_776.cpp,153,153,167,167,"sprintf(buf, ""%s*"", name);","sprintf(buf, ""%s*"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_669.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_669.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_669.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_669.cpp,12,"[""int"", ""string"", ""const char *""]","[""member"", ""char"", ""==""]","set([u'const kwsys_stl :: string & name', u'buf = new char [ n + 1 + 1 ]'])","set([0, 11])","[[], ['c_str']]",2014-08-04T14:16:34,Brad King,604061038622547682,549
60c783676c91ff1ded2ed5e6fd50d0f9664032e5,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/Directory.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_322.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_322.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_322.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_776.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_776.cpp,153,153,172,172,"sprintf(buf, ""%s/*"", name);","sprintf(buf, ""%s/*"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_670.cpp,17,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_670.cpp,17,"[""int"", ""string"", ""const char *""]","[""member"", ""char"", ""=="", ""!""]","set([u'const kwsys_stl :: string & name', u'buf = new char [ n + 2 + 1 ]'])","set([16, 0])","[[], ['c_str']]",2014-08-04T14:16:34,Brad King,604061038622547682,549
158c6d1cffe863fde284d4e5eeeb8129d40ce0e9,"KWSys 2014-08-04 (e787837a)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ e787837a | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' 65b36ede..e787837a
Ben Boeckel (4):
      9927862c SystemTools: more string replacements
      b3d598b0 strings: remove unnecessary c_str calls
      ffe94132 SystemTools: use char instead of const char*
      f29fec7c Directory: accept strings in methods

Rashad M (1):
      e787837a SharedForward: Cast away const to call execvp on MinGW 64-bit

Change-Id: I96437b332971670cfcd953717c5563e9ba0f2b99",[],Directory.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_323.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_323.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_323.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_777.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_777.cpp,112,112,118,118,"sprintf(buf, ""%s*"", name);","sprintf(buf, ""%s*"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_671.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_671.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_671.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_671.cpp,13,"[""int"", ""string"", ""const char *""]","[""member"", ""char"", ""=="", ""member"", ""char"", ""=="", ""||""]","set([u'const kwsys_stl :: string & name', u'buf = new char [ n + 1 + 1 ]'])","set([0, 12])","[[], ['c_str']]",2014-08-04T14:16:30,Brad King,604061038622547682,549
158c6d1cffe863fde284d4e5eeeb8129d40ce0e9,"KWSys 2014-08-04 (e787837a)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ e787837a | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' 65b36ede..e787837a
Ben Boeckel (4):
      9927862c SystemTools: more string replacements
      b3d598b0 strings: remove unnecessary c_str calls
      ffe94132 SystemTools: use char instead of const char*
      f29fec7c Directory: accept strings in methods

Rashad M (1):
      e787837a SharedForward: Cast away const to call execvp on MinGW 64-bit

Change-Id: I96437b332971670cfcd953717c5563e9ba0f2b99",[],Directory.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_323.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_323.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_323.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_777.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_777.cpp,112,112,127,127,"sprintf(buf, ""%s\\*"", name);","sprintf(buf, ""%s\\*"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_672.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_672.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_672.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_672.cpp,22,"[""int"", ""string"", ""const char *""]","[""strchr_ret""]","set([u'const kwsys_stl :: string & name', u'buf = new char [ n + 2 + 1 ]'])","set([0, 19])","[[], ['c_str']]",2014-08-04T14:16:30,Brad King,604061038622547682,549
158c6d1cffe863fde284d4e5eeeb8129d40ce0e9,"KWSys 2014-08-04 (e787837a)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ e787837a | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' 65b36ede..e787837a
Ben Boeckel (4):
      9927862c SystemTools: more string replacements
      b3d598b0 strings: remove unnecessary c_str calls
      ffe94132 SystemTools: use char instead of const char*
      f29fec7c Directory: accept strings in methods

Rashad M (1):
      e787837a SharedForward: Cast away const to call execvp on MinGW 64-bit

Change-Id: I96437b332971670cfcd953717c5563e9ba0f2b99",[],Directory.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_323.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_323.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_323.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_777.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_777.cpp,112,112,131,131,"sprintf(buf, ""%s/*"", name);","sprintf(buf, ""%s/*"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_673.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_673.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_673.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_673.cpp,26,"[""int"", ""string"", ""const char *""]","[""strchr_ret"", ""!""]","set([u'const kwsys_stl :: string & name', u'buf = new char [ n + 2 + 1 ]'])","set([0, 19])","[[], ['c_str']]",2014-08-04T14:16:30,Brad King,604061038622547682,549
158c6d1cffe863fde284d4e5eeeb8129d40ce0e9,"KWSys 2014-08-04 (e787837a)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ e787837a | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' 65b36ede..e787837a
Ben Boeckel (4):
      9927862c SystemTools: more string replacements
      b3d598b0 strings: remove unnecessary c_str calls
      ffe94132 SystemTools: use char instead of const char*
      f29fec7c Directory: accept strings in methods

Rashad M (1):
      e787837a SharedForward: Cast away const to call execvp on MinGW 64-bit

Change-Id: I96437b332971670cfcd953717c5563e9ba0f2b99",[],Directory.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_323.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_323.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_323.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_778.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_778.cpp,153,153,167,167,"sprintf(buf, ""%s*"", name);","sprintf(buf, ""%s*"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_674.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_674.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_674.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_674.cpp,12,"[""int"", ""string"", ""const char *""]","[""member"", ""char"", ""==""]","set([u'const kwsys_stl :: string & name', u'buf = new char [ n + 1 + 1 ]'])","set([0, 11])","[[], ['c_str']]",2014-08-04T14:16:30,Brad King,604061038622547682,549
158c6d1cffe863fde284d4e5eeeb8129d40ce0e9,"KWSys 2014-08-04 (e787837a)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ e787837a | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' 65b36ede..e787837a
Ben Boeckel (4):
      9927862c SystemTools: more string replacements
      b3d598b0 strings: remove unnecessary c_str calls
      ffe94132 SystemTools: use char instead of const char*
      f29fec7c Directory: accept strings in methods

Rashad M (1):
      e787837a SharedForward: Cast away const to call execvp on MinGW 64-bit

Change-Id: I96437b332971670cfcd953717c5563e9ba0f2b99",[],Directory.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_323.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_323.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_323.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_778.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_778.cpp,153,153,172,172,"sprintf(buf, ""%s/*"", name);","sprintf(buf, ""%s/*"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_675.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_675.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_675.cpp,17,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_675.cpp,17,"[""int"", ""string"", ""const char *""]","[""member"", ""char"", ""=="", ""!""]","set([u'const kwsys_stl :: string & name', u'buf = new char [ n + 2 + 1 ]'])","set([16, 0])","[[], ['c_str']]",2014-08-04T14:16:30,Brad King,604061038622547682,549
71c981a213a463d05b4bdc73dfb445c80ce2a476,"Encoding: Fix potential encoding issues with libarchive on Windows.

Because the 8bit string encoding in libarchive can be different than
the 8bit string encoding in CMake, change to call the wide version
of libarchive functions.  They are different if CMake is configured
to use UTF-8 as the internal encoding.

Create helper functions for some libarchive calls to use wstring
internally on platforms supporting it.",[],Source/cmSystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_324.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_324.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_324.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_779.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_779.cpp,1581,1606,1583,1608,"fprintf(out, ""%s"", archive_entry_pathname(entry));","fprintf(out, ""%s"", cm_archive_entry_pathname(entry).c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_676.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_676.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_676.cpp,102,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_676.cpp,102,"[""FILE *"", ""string"", ""char *""]",[],"set([u'char tmp [ 100 ] ;', u'FILE * out'])","set([1, 3])","[['archive_entry_pathname'], ['cm_archive_entry_pathname', 'c_str']]",2014-07-02T13:49:45,Brad King,-729143821572334754,52
e4e76f286c2eb5cfa822f89145611d02dc9d39b3,"Merge branch 'master' into osx-CFBundle-info-plist

Resolve conflict in Source/cmOSXBundleGenerator.cxx by taking
the side from 'master'.",[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_326.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_326.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_326.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_781.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_781.cpp,254,255,255,256,"fprintf(stderr, ""Link dependency analysis for target %s, config %s\n"",
            this->Target->GetName(), this->Config?this->Config:""noconfig"");","fprintf(stderr, ""Link dependency analysis for target %s, config %s\n"",
            this->Target->GetName().c_str(),
            this->HasConfig?this->Config.c_str():""noconfig"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_677.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_677.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_677.cpp,37,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_677.cpp,37,"[""unkown"", ""string"", ""this -> Target -> GetName_ret"", ""member""]","[""member""]",set([]),set([]),"[['Config'], ['c_str', 'HasConfig', 'c_str']]",2014-04-22T16:51:55,Brad King,5825515546723203891,434
e4e76f286c2eb5cfa822f89145611d02dc9d39b3,"Merge branch 'master' into osx-CFBundle-info-plist

Resolve conflict in Source/cmOSXBundleGenerator.cxx by taking
the side from 'master'.",[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_326.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_326.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_326.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_782.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_782.cpp,968,970,970,972,"fprintf(stderr, ""target [%s] links to:\n"", this->Target->GetName());","fprintf(stderr, ""target [%s] links to:\n"", this->Target->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_678.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_678.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_678.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_678.cpp,2,"[""unkown"", ""string"", ""this -> Target -> GetName_ret""]",[],set([]),set([]),"[[], ['c_str']]",2014-04-22T16:51:55,Brad King,604061038622547682,549
e4e76f286c2eb5cfa822f89145611d02dc9d39b3,"Merge branch 'master' into osx-CFBundle-info-plist

Resolve conflict in Source/cmOSXBundleGenerator.cxx by taking
the side from 'master'.",[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_326.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_326.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_326.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_782.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_782.cpp,968,970,977,979,"fprintf(stderr, ""  target [%s]\n"", lei->Target->GetName());","fprintf(stderr, ""  target [%s]\n"", lei->Target->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_679.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_679.cpp,9,"[""unkown"", ""string"", ""lei -> Target -> GetName_ret""]","[""member""]",set([u'std :: vector < LinkEntry > :: const_iterator lei = this -> FinalLinkEntries . begin ( ) ;']),set([3]),"[[], ['c_str']]",2014-04-22T16:51:55,Brad King,604061038622547682,549
e4e76f286c2eb5cfa822f89145611d02dc9d39b3,"Merge branch 'master' into osx-CFBundle-info-plist

Resolve conflict in Source/cmOSXBundleGenerator.cxx by taking
the side from 'master'.",[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_327.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_327.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_327.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_783.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_783.cpp,435,435,439,440,"fprintf(stderr, ""The %s target dependency graph is:\n"", name);","fprintf(stderr, ""The %s target dependency graph is:\n"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_680.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_680.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_680.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_680.cpp,4,"[""unkown"", ""string"", ""const char *""]",[],set([u'const std :: string & name']),set([2]),"[[], ['c_str']]",2014-04-22T16:51:55,Brad King,604061038622547682,549
e4e76f286c2eb5cfa822f89145611d02dc9d39b3,"Merge branch 'master' into osx-CFBundle-info-plist

Resolve conflict in Source/cmOSXBundleGenerator.cxx by taking
the side from 'master'.",[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_327.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_327.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_327.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_783.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_783.cpp,435,435,445,446,"fprintf(stderr, ""target %d is [%s]\n"",
            depender_index, depender->GetName());","fprintf(stderr, ""target %d is [%s]\n"",
            depender_index, depender->GetName().c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_681.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_681.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_681.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_681.cpp,10,"[""unkown"", ""string"", ""null"", ""depender -> GetName_ret""]","[""null"", ""int"", ""<""]","set([u'int depender_index = 0 ;', u'cmTarget const * depender = this -> Targets [ depender_index ] ;', u'int n = static_cast < int > ( graph . size ( ) ) ;'])","set([9, 5, 6])","[[], ['c_str']]",2014-04-22T16:51:55,Brad King,604061038622547682,549
e4e76f286c2eb5cfa822f89145611d02dc9d39b3,"Merge branch 'master' into osx-CFBundle-info-plist

Resolve conflict in Source/cmOSXBundleGenerator.cxx by taking
the side from 'master'.",[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_327.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_327.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_327.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_783.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_783.cpp,435,435,451,452,"fprintf(stderr, ""  depends on target %d [%s] (%s)\n"", dependee_index,
              dependee->GetName(), ni->IsStrong()? ""strong"" : ""weak"");","fprintf(stderr, ""  depends on target %d [%s] (%s)\n"", dependee_index,
              dependee->GetName().c_str(), ni->IsStrong()? ""strong"" : ""weak"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_682.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_682.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_682.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_682.cpp,16,"[""unkown"", ""string"", ""int"", ""dependee -> GetName_ret"", ""string""]","[""nl . begin_ret"", ""nl . end_ret"", ""!=""]","set([u'EdgeList const & nl = graph [ depender_index ] ;', u'cmTarget const * dependee = this -> Targets [ dependee_index ] ;', u'int dependee_index = * ni ;', u'EdgeList :: const_iterator ni = nl . begin ( ) ;'])","set([8, 12, 14, 15])","[[], ['c_str']]",2014-04-22T16:51:55,Brad King,604061038622547682,549
e4e76f286c2eb5cfa822f89145611d02dc9d39b3,"Merge branch 'master' into osx-CFBundle-info-plist

Resolve conflict in Source/cmOSXBundleGenerator.cxx by taking
the side from 'master'.",[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_327.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_327.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_327.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_784.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_784.cpp,472,473,473,474,"fprintf(stderr, ""  contains target %d [%s]\n"",
              i, this->Targets[i]->GetName());","fprintf(stderr, ""  contains target %d [%s]\n"",
              i, this->Targets[i]->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_683.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_683.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_683.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_683.cpp,14,"[""unkown"", ""string"", ""int"", ""this -> Targets [ i ] -> GetName_ret""]","[""nl . begin_ret"", ""nl . end_ret"", ""!=""]","set([u'NodeList const & nl = components [ c ] ;', u'NodeList :: const_iterator ni = nl . begin ( ) ;', u'int i = * ni ;'])","set([9, 11, 13])","[[], ['c_str']]",2014-04-22T16:51:55,Brad King,604061038622547682,549
e4e76f286c2eb5cfa822f89145611d02dc9d39b3,"Merge branch 'master' into osx-CFBundle-info-plist

Resolve conflict in Source/cmOSXBundleGenerator.cxx by taking
the side from 'master'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_328.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_328.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_328.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_787.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_787.cpp,449,450,451,452,"fprintf(fout, ""add_executable(%s"", targetName);","fprintf(fout, ""add_executable(%s"", targetName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_684.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_684.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_684.cpp,430,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_684.cpp,431,"[""FILE *"", ""string"", ""char *""]","[""tcfg . GenerateImportFile_ret"", ""!""]","set([u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'cmExportTryCompileFileGenerator tcfg ;', u'std :: vector < cmTarget const * > targets ;'])","set([330, 15, 260, 335])","[[], ['c_str']]",2014-04-22T16:51:55,Brad King,604061038622547682,549
e4e76f286c2eb5cfa822f89145611d02dc9d39b3,"Merge branch 'master' into osx-CFBundle-info-plist

Resolve conflict in Source/cmOSXBundleGenerator.cxx by taking
the side from 'master'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_328.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_328.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_328.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_788.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_788.cpp,465,466,466,467,"fprintf(fout,
              ""target_link_libraries(%s ${LINK_LIBRARIES})\n"",targetName);","fprintf(fout,
              ""target_link_libraries(%s ${LINK_LIBRARIES})\n"",
              targetName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_685.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_685.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_685.cpp,445,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_685.cpp,446,"[""FILE *"", ""string"", ""char *""]","[""bool""]","set([u'bool useOldLinkLibs = true ;', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'useOldLinkLibs = false'])","set([17, 330, 260, 46])","[[], ['c_str']]",2014-04-22T16:51:55,Brad King,604061038622547682,549
e4e76f286c2eb5cfa822f89145611d02dc9d39b3,"Merge branch 'master' into osx-CFBundle-info-plist

Resolve conflict in Source/cmOSXBundleGenerator.cxx by taking
the side from 'master'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_328.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_328.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_328.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_788.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_788.cpp,465,466,471,473,"fprintf(fout, ""target_link_libraries(%s %s)\n"",
              targetName,
              libsToLink.c_str());","fprintf(fout, ""target_link_libraries(%s %s)\n"",
              targetName.c_str(),
              libsToLink.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_686.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_686.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_686.cpp,450,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_686.cpp,452,"[""FILE *"", ""string"", ""char *"", ""libsToLink . c_str_ret""]","[""bool"", ""!""]","set([u'bool useOldLinkLibs = true ;', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += ""\\"""" + cmSystemTools :: TrimWhitespace ( argv [ i ] ) + ""\\"" ""', u'useOldLinkLibs = false'])","set([260, 73, 330, 46, 16, 17])","[[], ['c_str']]",2014-04-22T16:51:55,Brad King,604061038622547682,549
2f1978632b709a9370b3cb1137375c05351d149c,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts in favor of the upstream side where possible.
Resolve a logical conflict in archive_windows.h where the upstream
port to Watcom was done slightly differently from ours.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_330.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_330.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_330.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_790.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_790.cpp,1203,1285,1206,1295,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Crypto codec not supported yet (ID: 0x%lX)"", zip->codec);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_687.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_687.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_687.cpp,284,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_687.cpp,291,"[""member"", ""macro"", ""string"", ""member""]","[""member""]","set([u'struct _7zip * zip', u'zip -> has_encrypted_entries = 1', u'zip -> bcj_state = 0', u'struct archive_read * a', u'zip -> codec2 = - 1', u'zip -> codec = coder1 -> codec'])","set([24, 289, 1, 6, 7])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Crypto', 'codec', 'not', 'supported', 'yet', 'ID', '0x%lX', 'zip', 'codec']]",2014-04-03T19:02:49,Brad King,10935920232515470365,428
2f1978632b709a9370b3cb1137375c05351d149c,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts in favor of the upstream side where possible.
Resolve a logical conflict in archive_windows.h where the upstream
port to Watcom was done slightly differently from ours.",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_mtree.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_331.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_331.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_331.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_793.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_793.cpp,1292,1319,1313,1361,"archive_set_error(a, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Malformed device attribute"");","archive_set_error(a, ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Unknown format `%s'"", val);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_688.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_688.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_688.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_688.cpp,19,"[""struct archive *"", ""macro"", ""string""]","[""strchr_ret"", ""null"", ""==""]","set([u'struct archive * a', u'char * val'])",set([1]),"[['Malformed', 'device', 'attribute'], ['Unknown', 'format', '%s', 'val']]",2014-04-03T19:02:49,Brad King,6642188957084415997,429
2f1978632b709a9370b3cb1137375c05351d149c,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts in favor of the upstream side where possible.
Resolve a logical conflict in archive_windows.h where the upstream
port to Watcom was done slightly differently from ours.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_mtree.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_334.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_334.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_334.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_799.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_799.cpp,983,992,985,995,,"archive_string_sprintf(str, "" inode=%jd"", (intmax_t)me->ino);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_693.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_693.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_693.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_693.cpp,74,[],[],"set([u'struct mtree_entry * me', u'keys = get_global_set_keys ( mtree , me )', u'str = ( mtree -> indent || mtree -> classic ) ? & mtree -> ebuf : & mtree -> buf'])","set([41, 29, 1])","[[], ['archive_string_sprintf', 'str', 'inode', '%jd', 'intmax_t', 'me', 'ino']]",2014-04-03T19:02:49,Brad King,-19505024091247539346,430
2f1978632b709a9370b3cb1137375c05351d149c,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts in favor of the upstream side where possible.
Resolve a logical conflict in archive_windows.h where the upstream
port to Watcom was done slightly differently from ours.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_mtree.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_334.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_334.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_334.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_799.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_799.cpp,983,992,985,997,,"archive_string_sprintf(str,
		    "" resdevice=native,%ju,%ju"",
		    (uintmax_t)me->devmajor,
		    (uintmax_t)me->devminor);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_694.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_694.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_694.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_694.cpp,76,[],[],"set([u'struct mtree_entry * me', u'keys = get_global_set_keys ( mtree , me )', u'str = ( mtree -> indent || mtree -> classic ) ? & mtree -> ebuf : & mtree -> buf'])","set([41, 29, 1])","[[], ['archive_string_sprintf', 'str', 'resdevice', 'native', '%ju', '%ju', 'uintmax_t', 'me', 'devmajor', 'uintmax_t', 'me', 'devminor']]",2014-04-03T19:02:49,Brad King,-34821452303941175393,431
2f1978632b709a9370b3cb1137375c05351d149c,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts in favor of the upstream side where possible.
Resolve a logical conflict in archive_windows.h where the upstream
port to Watcom was done slightly differently from ours.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_335.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_335.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_335.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_804.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_804.cpp,376,399,442,434,"archive_set_error(&a->archive, ENOMEM,
		    ""Can't allocate zip header data"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Archives > 4GB require Zip64 extensions"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_695.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_695.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_695.cpp,67,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_695.cpp,36,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""==""]","set([u'struct archive_write * a', u'struct zip * zip = a -> format_data ;'])","set([1, 5])","[['ENOMEM', 'Can', 't', 'allocate', 'zip', 'header', 'data'], ['ARCHIVE_ERRNO_MISC', 'Archives', '4GB', 'require', 'Zip64', 'extensions']]",2014-04-03T19:02:49,Brad King,7034573793183691138,432
2f1978632b709a9370b3cb1137375c05351d149c,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts in favor of the upstream side where possible.
Resolve a logical conflict in archive_windows.h where the upstream
port to Watcom was done slightly differently from ours.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_335.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_335.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_335.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_804.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_804.cpp,376,399,402,428,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Files > 4GB require Zip64 extensions"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_696.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_696.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_696.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_696.cpp,30,[],"[""archive_entry_filetype_ret"", ""macro"", ""!="", ""archive_entry_filetype_ret"", ""macro"", ""!="", ""archive_entry_filetype_ret"", ""macro"", ""!="", ""&&"", ""&&"", ""!""]","set([u'struct archive_write * a', u'struct archive_entry * entry'])",set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Files', '4GB', 'require', 'Zip64', 'extensions']]",2014-04-03T19:02:49,Brad King,-2280186867934082461,433
2f1978632b709a9370b3cb1137375c05351d149c,"Merge branch 'libarchive-upstream' into update-libarchive

Resolve conflicts in favor of the upstream side where possible.
Resolve a logical conflict in archive_windows.h where the upstream
port to Watcom was done slightly differently from ours.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_335.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_335.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_335.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_806.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_806.cpp,663,803,678,815,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Invalid ZIP compression type"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Invalid ZIP compression type"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_697.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_697.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_697.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_697.cpp,43,"[""member"", ""macro"", ""string""]","[""member""]","set([u'zip -> entry_uncompressed_written += s', u'struct archive_write * a', u'struct zip * zip = a -> format_data ;'])","set([8, 1, 4])","[[], []]",2014-04-03T19:02:49,Brad King,0,550
64713ae3ffddf6fbbfa7ea762c3d756cb245a066,"libarchive 3.1.2-218-g00f4bd83 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-218-g00f4bd83 &&
r=00f4bd83 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_337.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_337.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_337.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_808.cpp,1203,1285,1206,1295,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Crypto codec not supported yet (ID: 0x%lX)"", zip->codec);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_699.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_699.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_699.cpp,284,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_699.cpp,291,"[""member"", ""macro"", ""string"", ""member""]","[""member""]","set([u'struct _7zip * zip', u'zip -> has_encrypted_entries = 1', u'zip -> codec2 = - 1', u'struct archive_read * a', u'zip -> bcj_state = 0', u'zip -> codec = coder1 -> codec'])","set([24, 289, 1, 6, 7])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Crypto', 'codec', 'not', 'supported', 'yet', 'ID', '0x%lX', 'zip', 'codec']]",2014-04-03T18:19:12,Brad King,10935920232515470365,428
64713ae3ffddf6fbbfa7ea762c3d756cb245a066,"libarchive 3.1.2-218-g00f4bd83 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-218-g00f4bd83 &&
r=00f4bd83 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_mtree.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_338.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_338.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_338.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_811.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_811.cpp,1292,1319,1313,1361,"archive_set_error(a, ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Malformed device attribute"");","archive_set_error(a, ARCHIVE_ERRNO_FILE_FORMAT,
			    ""Unknown format `%s'"", val);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_700.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_700.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_700.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_700.cpp,19,"[""struct archive *"", ""macro"", ""string""]","[""strchr_ret"", ""null"", ""==""]","set([u'struct archive * a', u'char * val'])",set([1]),"[['Malformed', 'device', 'attribute'], ['Unknown', 'format', '%s', 'val']]",2014-04-03T18:19:12,Brad King,6642188957084415997,429
64713ae3ffddf6fbbfa7ea762c3d756cb245a066,"libarchive 3.1.2-218-g00f4bd83 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-218-g00f4bd83 &&
r=00f4bd83 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_mtree.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_341.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_341.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_341.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_817.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_817.cpp,983,992,985,995,,"archive_string_sprintf(str, "" inode=%jd"", (intmax_t)me->ino);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_705.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_705.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_705.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_705.cpp,74,[],[],"set([u'struct mtree_entry * me', u'keys = get_global_set_keys ( mtree , me )', u'str = ( mtree -> indent || mtree -> classic ) ? & mtree -> ebuf : & mtree -> buf'])","set([41, 29, 1])","[[], ['archive_string_sprintf', 'str', 'inode', '%jd', 'intmax_t', 'me', 'ino']]",2014-04-03T18:19:12,Brad King,-19505024091247539346,430
64713ae3ffddf6fbbfa7ea762c3d756cb245a066,"libarchive 3.1.2-218-g00f4bd83 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-218-g00f4bd83 &&
r=00f4bd83 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_mtree.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_341.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_341.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_341.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_817.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_817.cpp,983,992,985,997,,"archive_string_sprintf(str,
		    "" resdevice=native,%ju,%ju"",
		    (uintmax_t)me->devmajor,
		    (uintmax_t)me->devminor);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_706.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_706.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_706.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_706.cpp,76,[],[],"set([u'struct mtree_entry * me', u'keys = get_global_set_keys ( mtree , me )', u'str = ( mtree -> indent || mtree -> classic ) ? & mtree -> ebuf : & mtree -> buf'])","set([1, 29, 41])","[[], ['archive_string_sprintf', 'str', 'resdevice', 'native', '%ju', '%ju', 'uintmax_t', 'me', 'devmajor', 'uintmax_t', 'me', 'devminor']]",2014-04-03T18:19:12,Brad King,-34821452303941175393,431
64713ae3ffddf6fbbfa7ea762c3d756cb245a066,"libarchive 3.1.2-218-g00f4bd83 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-218-g00f4bd83 &&
r=00f4bd83 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_342.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_342.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_342.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_822.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_822.cpp,376,399,442,434,"archive_set_error(&a->archive, ENOMEM,
		    ""Can't allocate zip header data"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Archives > 4GB require Zip64 extensions"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_707.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_707.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_707.cpp,67,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_707.cpp,36,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""==""]","set([u'struct archive_write * a', u'struct zip * zip = a -> format_data ;'])","set([1, 5])","[['ENOMEM', 'Can', 't', 'allocate', 'zip', 'header', 'data'], ['ARCHIVE_ERRNO_MISC', 'Archives', '4GB', 'require', 'Zip64', 'extensions']]",2014-04-03T18:19:12,Brad King,7034573793183691138,432
64713ae3ffddf6fbbfa7ea762c3d756cb245a066,"libarchive 3.1.2-218-g00f4bd83 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-218-g00f4bd83 &&
r=00f4bd83 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_342.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_342.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_342.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_822.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_822.cpp,376,399,402,428,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Files > 4GB require Zip64 extensions"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_708.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_708.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_708.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_708.cpp,30,[],"[""archive_entry_filetype_ret"", ""macro"", ""!="", ""archive_entry_filetype_ret"", ""macro"", ""!="", ""archive_entry_filetype_ret"", ""macro"", ""!="", ""&&"", ""&&"", ""!""]","set([u'struct archive_write * a', u'struct archive_entry * entry'])",set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Files', '4GB', 'require', 'Zip64', 'extensions']]",2014-04-03T18:19:12,Brad King,-2280186867934082461,433
64713ae3ffddf6fbbfa7ea762c3d756cb245a066,"libarchive 3.1.2-218-g00f4bd83 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2-218-g00f4bd83 &&
r=00f4bd83 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_write_set_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_342.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_342.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_342.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_824.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_824.cpp,663,803,678,815,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Invalid ZIP compression type"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Invalid ZIP compression type"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_709.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_709.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_709.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_709.cpp,43,"[""member"", ""macro"", ""string""]","[""member""]","set([u'zip -> entry_uncompressed_written += s', u'struct archive_write * a', u'struct zip * zip = a -> format_data ;'])","set([8, 1, 4])","[[], []]",2014-04-03T18:19:12,Brad King,0,550
8018fcca6e055a0f12a17fc8324128080a9ec568,Merge branch 'master' into revise-compiler-id-policies,[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_343.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_343.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_343.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_825.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_825.cpp,254,255,255,256,"fprintf(stderr, ""Link dependency analysis for target %s, config %s\n"",
            this->Target->GetName(), this->Config?this->Config:""noconfig"");","fprintf(stderr, ""Link dependency analysis for target %s, config %s\n"",
            this->Target->GetName().c_str(),
            this->HasConfig?this->Config.c_str():""noconfig"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_711.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_711.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_711.cpp,37,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_711.cpp,37,"[""unkown"", ""string"", ""this -> Target -> GetName_ret"", ""member""]","[""member""]",set([]),set([]),"[['Config'], ['c_str', 'HasConfig', 'c_str']]",2014-04-02T18:44:35,Brad King,5825515546723203891,434
8018fcca6e055a0f12a17fc8324128080a9ec568,Merge branch 'master' into revise-compiler-id-policies,[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_343.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_343.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_343.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_826.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_826.cpp,968,970,970,972,"fprintf(stderr, ""target [%s] links to:\n"", this->Target->GetName());","fprintf(stderr, ""target [%s] links to:\n"", this->Target->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_712.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_712.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_712.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_712.cpp,2,"[""unkown"", ""string"", ""this -> Target -> GetName_ret""]",[],set([]),set([]),"[[], ['c_str']]",2014-04-02T18:44:35,Brad King,604061038622547682,549
8018fcca6e055a0f12a17fc8324128080a9ec568,Merge branch 'master' into revise-compiler-id-policies,[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_343.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_343.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_343.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_826.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_826.cpp,968,970,977,979,"fprintf(stderr, ""  target [%s]\n"", lei->Target->GetName());","fprintf(stderr, ""  target [%s]\n"", lei->Target->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_713.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_713.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_713.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_713.cpp,9,"[""unkown"", ""string"", ""lei -> Target -> GetName_ret""]","[""member""]",set([u'std :: vector < LinkEntry > :: const_iterator lei = this -> FinalLinkEntries . begin ( ) ;']),set([3]),"[[], ['c_str']]",2014-04-02T18:44:35,Brad King,604061038622547682,549
8018fcca6e055a0f12a17fc8324128080a9ec568,Merge branch 'master' into revise-compiler-id-policies,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_344.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_344.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_344.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_827.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_827.cpp,434,435,438,440,"fprintf(stderr, ""The %s target dependency graph is:\n"", name);","fprintf(stderr, ""The %s target dependency graph is:\n"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_714.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_714.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_714.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_714.cpp,4,"[""unkown"", ""string"", ""const char *""]",[],set([u'const std :: string & name']),set([2]),"[[], ['c_str']]",2014-04-02T18:44:35,Brad King,604061038622547682,549
8018fcca6e055a0f12a17fc8324128080a9ec568,Merge branch 'master' into revise-compiler-id-policies,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_344.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_344.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_344.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_827.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_827.cpp,434,435,444,446,"fprintf(stderr, ""target %d is [%s]\n"",
            depender_index, depender->GetName());","fprintf(stderr, ""target %d is [%s]\n"",
            depender_index, depender->GetName().c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_715.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_715.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_715.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_715.cpp,10,"[""unkown"", ""string"", ""null"", ""depender -> GetName_ret""]","[""null"", ""int"", ""<""]","set([u'int depender_index = 0 ;', u'cmTarget const * depender = this -> Targets [ depender_index ] ;', u'int n = static_cast < int > ( graph . size ( ) ) ;'])","set([9, 5, 6])","[[], ['c_str']]",2014-04-02T18:44:35,Brad King,604061038622547682,549
8018fcca6e055a0f12a17fc8324128080a9ec568,Merge branch 'master' into revise-compiler-id-policies,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_344.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_344.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_344.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_827.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_827.cpp,434,435,450,452,"fprintf(stderr, ""  depends on target %d [%s] (%s)\n"", dependee_index,
              dependee->GetName(), ni->IsStrong()? ""strong"" : ""weak"");","fprintf(stderr, ""  depends on target %d [%s] (%s)\n"", dependee_index,
              dependee->GetName().c_str(), ni->IsStrong()? ""strong"" : ""weak"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_716.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_716.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_716.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_716.cpp,16,"[""unkown"", ""string"", ""int"", ""dependee -> GetName_ret"", ""string""]","[""nl . begin_ret"", ""nl . end_ret"", ""!=""]","set([u'cmTarget const * dependee = this -> Targets [ dependee_index ] ;', u'EdgeList const & nl = graph [ depender_index ] ;', u'int dependee_index = * ni ;', u'EdgeList :: const_iterator ni = nl . begin ( ) ;'])","set([8, 12, 14, 15])","[[], ['c_str']]",2014-04-02T18:44:35,Brad King,604061038622547682,549
8018fcca6e055a0f12a17fc8324128080a9ec568,Merge branch 'master' into revise-compiler-id-policies,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_344.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_344.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_344.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_828.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_828.cpp,471,473,472,474,"fprintf(stderr, ""  contains target %d [%s]\n"",
              i, this->Targets[i]->GetName());","fprintf(stderr, ""  contains target %d [%s]\n"",
              i, this->Targets[i]->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_717.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_717.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_717.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_717.cpp,14,"[""unkown"", ""string"", ""int"", ""this -> Targets [ i ] -> GetName_ret""]","[""nl . begin_ret"", ""nl . end_ret"", ""!=""]","set([u'NodeList const & nl = components [ c ] ;', u'int i = * ni ;', u'NodeList :: const_iterator ni = nl . begin ( ) ;'])","set([9, 11, 13])","[[], ['c_str']]",2014-04-02T18:44:35,Brad King,604061038622547682,549
8018fcca6e055a0f12a17fc8324128080a9ec568,Merge branch 'master' into revise-compiler-id-policies,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_345.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_345.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_345.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_831.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_831.cpp,449,450,451,452,"fprintf(fout, ""add_executable(%s"", targetName);","fprintf(fout, ""add_executable(%s"", targetName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_718.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_718.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_718.cpp,430,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_718.cpp,431,"[""FILE *"", ""string"", ""char *""]","[""targets . empty_ret"", ""!""]","set([u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'cmExportTryCompileFileGenerator tcfg ;', u'std :: vector < cmTarget const * > targets ;'])","set([330, 15, 260, 335])","[[], ['c_str']]",2014-04-02T18:44:35,Brad King,604061038622547682,549
8018fcca6e055a0f12a17fc8324128080a9ec568,Merge branch 'master' into revise-compiler-id-policies,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_345.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_345.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_345.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_832.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_832.cpp,465,466,466,467,"fprintf(fout,
              ""target_link_libraries(%s ${LINK_LIBRARIES})\n"",targetName);","fprintf(fout,
              ""target_link_libraries(%s ${LINK_LIBRARIES})\n"",
              targetName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_719.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_719.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_719.cpp,445,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_719.cpp,446,"[""FILE *"", ""string"", ""char *""]","[""bool""]","set([u'bool useOldLinkLibs = true ;', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'useOldLinkLibs = false'])","set([17, 330, 260, 46])","[[], ['c_str']]",2014-04-02T18:44:35,Brad King,604061038622547682,549
8018fcca6e055a0f12a17fc8324128080a9ec568,Merge branch 'master' into revise-compiler-id-policies,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_345.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_345.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_345.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_832.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_832.cpp,465,466,471,473,"fprintf(fout, ""target_link_libraries(%s %s)\n"",
              targetName,
              libsToLink.c_str());","fprintf(fout, ""target_link_libraries(%s %s)\n"",
              targetName.c_str(),
              libsToLink.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_720.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_720.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_720.cpp,450,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_720.cpp,452,"[""FILE *"", ""string"", ""char *"", ""libsToLink . c_str_ret""]","[""bool"", ""!""]","set([u'bool useOldLinkLibs = true ;', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += ""\\"""" + cmSystemTools :: TrimWhitespace ( argv [ i ] ) + ""\\"" ""', u'useOldLinkLibs = false'])","set([260, 73, 330, 46, 16, 17])","[[], ['c_str']]",2014-04-02T18:44:35,Brad King,604061038622547682,549
6e466c6f2ee5160202aaa76a9d643d34bd7d908a,Merge branch 'master' into CONFIG-LOCATION-CMP0026,[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_346.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_346.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_346.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_833.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_833.cpp,254,255,255,256,"fprintf(stderr, ""Link dependency analysis for target %s, config %s\n"",
            this->Target->GetName(), this->Config?this->Config:""noconfig"");","fprintf(stderr, ""Link dependency analysis for target %s, config %s\n"",
            this->Target->GetName().c_str(),
            this->HasConfig?this->Config.c_str():""noconfig"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_721.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_721.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_721.cpp,37,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_721.cpp,37,"[""unkown"", ""string"", ""this -> Target -> GetName_ret"", ""member""]","[""member""]",set([]),set([]),"[['Config'], ['c_str', 'HasConfig', 'c_str']]",2014-03-17T13:31:21,Brad King,5825515546723203891,434
6e466c6f2ee5160202aaa76a9d643d34bd7d908a,Merge branch 'master' into CONFIG-LOCATION-CMP0026,[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_346.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_346.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_346.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_834.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_834.cpp,968,970,970,972,"fprintf(stderr, ""target [%s] links to:\n"", this->Target->GetName());","fprintf(stderr, ""target [%s] links to:\n"", this->Target->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_722.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_722.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_722.cpp,2,"[""unkown"", ""string"", ""this -> Target -> GetName_ret""]",[],set([]),set([]),"[[], ['c_str']]",2014-03-17T13:31:21,Brad King,604061038622547682,549
6e466c6f2ee5160202aaa76a9d643d34bd7d908a,Merge branch 'master' into CONFIG-LOCATION-CMP0026,[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_346.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_346.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_346.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_834.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_834.cpp,968,970,977,979,"fprintf(stderr, ""  target [%s]\n"", lei->Target->GetName());","fprintf(stderr, ""  target [%s]\n"", lei->Target->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_723.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_723.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_723.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_723.cpp,9,"[""unkown"", ""string"", ""lei -> Target -> GetName_ret""]","[""member""]",set([u'std :: vector < LinkEntry > :: const_iterator lei = this -> FinalLinkEntries . begin ( ) ;']),set([3]),"[[], ['c_str']]",2014-03-17T13:31:21,Brad King,604061038622547682,549
6e466c6f2ee5160202aaa76a9d643d34bd7d908a,Merge branch 'master' into CONFIG-LOCATION-CMP0026,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_347.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_347.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_347.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_835.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_835.cpp,434,434,438,439,"fprintf(stderr, ""The %s target dependency graph is:\n"", name);","fprintf(stderr, ""The %s target dependency graph is:\n"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_724.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_724.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_724.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_724.cpp,4,"[""unkown"", ""string"", ""const char *""]",[],set([u'const std :: string & name']),set([2]),"[[], ['c_str']]",2014-03-17T13:31:21,Brad King,604061038622547682,549
6e466c6f2ee5160202aaa76a9d643d34bd7d908a,Merge branch 'master' into CONFIG-LOCATION-CMP0026,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_347.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_347.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_347.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_835.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_835.cpp,434,434,444,445,"fprintf(stderr, ""target %d is [%s]\n"",
            depender_index, depender->GetName());","fprintf(stderr, ""target %d is [%s]\n"",
            depender_index, depender->GetName().c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_725.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_725.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_725.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_725.cpp,10,"[""unkown"", ""string"", ""null"", ""depender -> GetName_ret""]","[""null"", ""int"", ""<""]","set([u'int depender_index = 0 ;', u'cmTarget const * depender = this -> Targets [ depender_index ] ;', u'int n = static_cast < int > ( graph . size ( ) ) ;'])","set([9, 5, 6])","[[], ['c_str']]",2014-03-17T13:31:21,Brad King,604061038622547682,549
6e466c6f2ee5160202aaa76a9d643d34bd7d908a,Merge branch 'master' into CONFIG-LOCATION-CMP0026,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_347.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_347.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_347.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_835.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_835.cpp,434,434,450,451,"fprintf(stderr, ""  depends on target %d [%s] (%s)\n"", dependee_index,
              dependee->GetName(), ni->IsStrong()? ""strong"" : ""weak"");","fprintf(stderr, ""  depends on target %d [%s] (%s)\n"", dependee_index,
              dependee->GetName().c_str(), ni->IsStrong()? ""strong"" : ""weak"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_726.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_726.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_726.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_726.cpp,16,"[""unkown"", ""string"", ""int"", ""dependee -> GetName_ret"", ""string""]","[""nl . begin_ret"", ""nl . end_ret"", ""!=""]","set([u'EdgeList const & nl = graph [ depender_index ] ;', u'cmTarget const * dependee = this -> Targets [ dependee_index ] ;', u'EdgeList :: const_iterator ni = nl . begin ( ) ;', u'int dependee_index = * ni ;'])","set([8, 12, 14, 15])","[[], ['c_str']]",2014-03-17T13:31:21,Brad King,604061038622547682,549
6e466c6f2ee5160202aaa76a9d643d34bd7d908a,Merge branch 'master' into CONFIG-LOCATION-CMP0026,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_347.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_347.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_347.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_836.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_836.cpp,471,472,472,473,"fprintf(stderr, ""  contains target %d [%s]\n"",
              i, this->Targets[i]->GetName());","fprintf(stderr, ""  contains target %d [%s]\n"",
              i, this->Targets[i]->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_727.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_727.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_727.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_727.cpp,14,"[""unkown"", ""string"", ""int"", ""this -> Targets [ i ] -> GetName_ret""]","[""nl . begin_ret"", ""nl . end_ret"", ""!=""]","set([u'NodeList const & nl = components [ c ] ;', u'NodeList :: const_iterator ni = nl . begin ( ) ;', u'int i = * ni ;'])","set([9, 11, 13])","[[], ['c_str']]",2014-03-17T13:31:21,Brad King,604061038622547682,549
6e466c6f2ee5160202aaa76a9d643d34bd7d908a,Merge branch 'master' into CONFIG-LOCATION-CMP0026,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_348.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_348.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_348.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_839.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_839.cpp,449,450,451,452,"fprintf(fout, ""add_executable(%s"", targetName);","fprintf(fout, ""add_executable(%s"", targetName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_728.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_728.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_728.cpp,430,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_728.cpp,431,"[""FILE *"", ""string"", ""char *""]","[""targets . empty_ret"", ""!""]","set([u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'cmExportTryCompileFileGenerator tcfg ;', u'std :: vector < cmTarget const * > targets ;'])","set([330, 15, 260, 335])","[[], ['c_str']]",2014-03-17T13:31:21,Brad King,604061038622547682,549
6e466c6f2ee5160202aaa76a9d643d34bd7d908a,Merge branch 'master' into CONFIG-LOCATION-CMP0026,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_348.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_348.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_348.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_840.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_840.cpp,465,466,466,467,"fprintf(fout,
              ""target_link_libraries(%s ${LINK_LIBRARIES})\n"",targetName);","fprintf(fout,
              ""target_link_libraries(%s ${LINK_LIBRARIES})\n"",
              targetName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_729.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_729.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_729.cpp,445,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_729.cpp,446,"[""FILE *"", ""string"", ""char *""]","[""bool""]","set([u'bool useOldLinkLibs = true ;', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'useOldLinkLibs = false'])","set([17, 330, 260, 46])","[[], ['c_str']]",2014-03-17T13:31:21,Brad King,604061038622547682,549
6e466c6f2ee5160202aaa76a9d643d34bd7d908a,Merge branch 'master' into CONFIG-LOCATION-CMP0026,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_348.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_348.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_348.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_840.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_840.cpp,465,466,471,473,"fprintf(fout, ""target_link_libraries(%s %s)\n"",
              targetName,
              libsToLink.c_str());","fprintf(fout, ""target_link_libraries(%s %s)\n"",
              targetName.c_str(),
              libsToLink.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_730.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_730.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_730.cpp,450,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_730.cpp,452,"[""FILE *"", ""string"", ""char *"", ""libsToLink . c_str_ret""]","[""bool"", ""!""]","set([u'bool useOldLinkLibs = true ;', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += ""\\"""" + cmSystemTools :: TrimWhitespace ( argv [ i ] ) + ""\\"" ""', u'useOldLinkLibs = false'])","set([260, 73, 330, 46, 16, 17])","[[], ['c_str']]",2014-03-17T13:31:21,Brad King,604061038622547682,549
fabf1fbabb4fc67844d5b2210e70a9829a59ff23,stringapi: Use strings in target name,[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_355.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_355.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_355.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_850.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_850.cpp,254,254,255,255,"fprintf(stderr, ""Link dependency analysis for target %s, config %s\n"",
            this->Target->GetName(), this->Config?this->Config:""noconfig"");","fprintf(stderr, ""Link dependency analysis for target %s, config %s\n"",
            this->Target->GetName().c_str(),
            this->Config?this->Config:""noconfig"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_731.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_731.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_731.cpp,37,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_731.cpp,37,"[""unkown"", ""string"", ""this -> Target -> GetName_ret"", ""member""]","[""member""]",set([]),set([]),"[[], ['c_str']]",2014-03-08T18:05:31,Brad King,604061038622547682,549
fabf1fbabb4fc67844d5b2210e70a9829a59ff23,stringapi: Use strings in target name,[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_355.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_355.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_355.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_851.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_851.cpp,968,969,970,971,"fprintf(stderr, ""target [%s] links to:\n"", this->Target->GetName());","fprintf(stderr, ""target [%s] links to:\n"", this->Target->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_732.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_732.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_732.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_732.cpp,2,"[""unkown"", ""string"", ""this -> Target -> GetName_ret""]",[],set([]),set([]),"[[], ['c_str']]",2014-03-08T18:05:31,Brad King,604061038622547682,549
fabf1fbabb4fc67844d5b2210e70a9829a59ff23,stringapi: Use strings in target name,[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_355.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_355.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_355.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_851.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_851.cpp,968,969,977,978,"fprintf(stderr, ""  target [%s]\n"", lei->Target->GetName());","fprintf(stderr, ""  target [%s]\n"", lei->Target->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_733.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_733.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_733.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_733.cpp,9,"[""unkown"", ""string"", ""lei -> Target -> GetName_ret""]","[""member""]",set([u'std :: vector < LinkEntry > :: const_iterator lei = this -> FinalLinkEntries . begin ( ) ;']),set([3]),"[[], ['c_str']]",2014-03-08T18:05:31,Brad King,604061038622547682,549
fabf1fbabb4fc67844d5b2210e70a9829a59ff23,stringapi: Use strings in target name,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_356.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_356.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_356.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_852.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_852.cpp,434,434,438,439,"fprintf(stderr, ""The %s target dependency graph is:\n"", name);","fprintf(stderr, ""The %s target dependency graph is:\n"", name.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_734.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_734.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_734.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_734.cpp,4,"[""unkown"", ""string"", ""const char *""]",[],set([u'const std :: string & name']),set([2]),"[[], ['c_str']]",2014-03-08T18:05:31,Brad King,604061038622547682,549
fabf1fbabb4fc67844d5b2210e70a9829a59ff23,stringapi: Use strings in target name,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_356.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_356.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_356.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_852.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_852.cpp,434,434,444,445,"fprintf(stderr, ""target %d is [%s]\n"",
            depender_index, depender->GetName());","fprintf(stderr, ""target %d is [%s]\n"",
            depender_index, depender->GetName().c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_735.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_735.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_735.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_735.cpp,10,"[""unkown"", ""string"", ""null"", ""depender -> GetName_ret""]","[""null"", ""int"", ""<""]","set([u'int depender_index = 0 ;', u'cmTarget const * depender = this -> Targets [ depender_index ] ;', u'int n = static_cast < int > ( graph . size ( ) ) ;'])","set([9, 5, 6])","[[], ['c_str']]",2014-03-08T18:05:31,Brad King,604061038622547682,549
fabf1fbabb4fc67844d5b2210e70a9829a59ff23,stringapi: Use strings in target name,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_356.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_356.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_356.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_852.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_852.cpp,434,434,450,451,"fprintf(stderr, ""  depends on target %d [%s] (%s)\n"", dependee_index,
              dependee->GetName(), ni->IsStrong()? ""strong"" : ""weak"");","fprintf(stderr, ""  depends on target %d [%s] (%s)\n"", dependee_index,
              dependee->GetName().c_str(), ni->IsStrong()? ""strong"" : ""weak"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_736.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_736.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_736.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_736.cpp,16,"[""unkown"", ""string"", ""int"", ""dependee -> GetName_ret"", ""string""]","[""nl . begin_ret"", ""nl . end_ret"", ""!=""]","set([u'cmTarget const * dependee = this -> Targets [ dependee_index ] ;', u'EdgeList const & nl = graph [ depender_index ] ;', u'int dependee_index = * ni ;', u'EdgeList :: const_iterator ni = nl . begin ( ) ;'])","set([8, 12, 14, 15])","[[], ['c_str']]",2014-03-08T18:05:31,Brad King,604061038622547682,549
fabf1fbabb4fc67844d5b2210e70a9829a59ff23,stringapi: Use strings in target name,[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_356.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_356.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_356.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_853.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_853.cpp,471,472,472,473,"fprintf(stderr, ""  contains target %d [%s]\n"",
              i, this->Targets[i]->GetName());","fprintf(stderr, ""  contains target %d [%s]\n"",
              i, this->Targets[i]->GetName().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_737.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_737.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_737.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_737.cpp,14,"[""unkown"", ""string"", ""int"", ""this -> Targets [ i ] -> GetName_ret""]","[""nl . begin_ret"", ""nl . end_ret"", ""!=""]","set([u'NodeList const & nl = components [ c ] ;', u'NodeList :: const_iterator ni = nl . begin ( ) ;', u'int i = * ni ;'])","set([9, 11, 13])","[[], ['c_str']]",2014-03-08T18:05:31,Brad King,604061038622547682,549
fabf1fbabb4fc67844d5b2210e70a9829a59ff23,stringapi: Use strings in target name,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_357.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_357.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_357.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_854.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_854.cpp,450,450,452,452,"fprintf(fout, ""add_executable(%s"", targetName);","fprintf(fout, ""add_executable(%s"", targetName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_738.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_738.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_738.cpp,431,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_738.cpp,431,"[""FILE *"", ""string"", ""char *""]","[""targets . empty_ret"", ""!""]","set([u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'std :: vector < cmTarget const * > targets ;', u'cmExportTryCompileFileGenerator tcfg ;'])","set([330, 335, 260, 15])","[[], ['c_str']]",2014-03-08T18:05:31,Brad King,604061038622547682,549
fabf1fbabb4fc67844d5b2210e70a9829a59ff23,stringapi: Use strings in target name,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_357.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_357.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_357.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_855.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_855.cpp,466,466,467,467,"fprintf(fout,
              ""target_link_libraries(%s ${LINK_LIBRARIES})\n"",targetName);","fprintf(fout,
              ""target_link_libraries(%s ${LINK_LIBRARIES})\n"",
              targetName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_739.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_739.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_739.cpp,446,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_739.cpp,446,"[""FILE *"", ""string"", ""char *""]","[""bool""]","set([u'bool useOldLinkLibs = true ;', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'useOldLinkLibs = false'])","set([17, 330, 260, 46])","[[], ['c_str']]",2014-03-08T18:05:31,Brad King,604061038622547682,549
fabf1fbabb4fc67844d5b2210e70a9829a59ff23,stringapi: Use strings in target name,[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_357.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_357.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_357.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_855.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_855.cpp,466,466,472,473,"fprintf(fout, ""target_link_libraries(%s %s)\n"",
              targetName,
              libsToLink.c_str());","fprintf(fout, ""target_link_libraries(%s %s)\n"",
              targetName.c_str(),
              libsToLink.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_740.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_740.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_740.cpp,451,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_740.cpp,452,"[""FILE *"", ""string"", ""char *"", ""libsToLink . c_str_ret""]","[""bool"", ""!""]","set([u'bool useOldLinkLibs = true ;', u'FILE * fout = cmsys :: SystemTools :: Fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += ""\\"""" + cmSystemTools :: TrimWhitespace ( argv [ i ] ) + ""\\"" ""', u'useOldLinkLibs = false'])","set([260, 73, 330, 46, 16, 17])","[[], ['c_str']]",2014-03-08T18:05:31,Brad King,604061038622547682,549
fabf1fbabb4fc67844d5b2210e70a9829a59ff23,stringapi: Use strings in target name,[],Source/cmLocalVisualStudio6Generator.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_358.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_358.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_358.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_856.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_856.cpp,572,572,575,575,"sprintf(output,""%s/%s_force_%i"", this->Makefile->GetStartOutputDirectory(),
          target.GetName(), count);","sprintf(output,""%s/%s_force_%i"", this->Makefile->GetStartOutputDirectory(),
          target.GetName().c_str(), count);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_741.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_741.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_741.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_741.cpp,9,"[""char *"", ""string"", ""this -> Makefile -> GetStartOutputDirectory_ret"", ""target . GetName_ret"", ""int""]",[],"set([u'char * output = new char [ ( strlen ( this -> Makefile -> GetStartOutputDirectory ( ) ) + target . GetName ( ) . size ( ) + 30 ) ] ;', u'cmTarget & target', u'int count'])","set([2, 7])","[[], ['c_str']]",2014-03-08T18:05:31,Brad King,604061038622547682,549
f668112039798f5ebc955e127f9c3e4e7cdb5cc4,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_362.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_362.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_362.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_862.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_862.cpp,2222,2242,2224,2244,"sprintf(cp->ExitExceptionString, ""Exit code 0x%x\n"", code);","_snprintf(cp->ExitExceptionString, KWSYSPE_PIPE_BUFFER_SIZE, ""Exit code 0x%x\n"", code);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_742.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_742.cpp,59,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_742.cpp,59,"[""member"", ""string"", ""int""]","[""int""]","set([u'int code', u'kwsysProcess * cp', u'cp -> ExitException = kwsysProcess_Exception_Other'])","set([0, 58])","[['sprintf'], ['_snprintf', 'KWSYSPE_PIPE_BUFFER_SIZE']]",2013-11-25T16:19:42,Brad King,17022640507569344935,435
704ab3d24827cfe5754a00028086f21503c2e08b,"KWSys 2013-11-21 (1010d0e3)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ 1010d0e3 | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' 6eab64c3..1010d0e3
Brad King (2):
      ace1364c Encoding: Remove unused include
      1010d0e3 SystemTools: Avoid unused function warnings

Clinton Stimpson (4):
      0c2ff1f7 Encoding: Add Encoding module.
      8abbad82 FStream: Add FStream module.
      0a98de97 KWSys: Port to use wide character Windows APIs throughout.
      2b0c683d Encoding: Default to ANSI code page on Windows

David Cole (1):
      f67bb2ba SystemTools: Move typedef mode_t inside the SystemTools class

Sean McBride (1):
      a40b9263 SystemInformation: Work around gcc -Wliteral-suffix warning

Change-Id: Ie52df972331cc7377c236d410ead86024e9d15ab",[],ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_364.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_364.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_364.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_865.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_865.cpp,2222,2242,2224,2244,"sprintf(cp->ExitExceptionString, ""Exit code 0x%x\n"", code);","_snprintf(cp->ExitExceptionString, KWSYSPE_PIPE_BUFFER_SIZE, ""Exit code 0x%x\n"", code);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_743.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_743.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_743.cpp,59,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_743.cpp,59,"[""member"", ""string"", ""int""]","[""int""]","set([u'kwsysProcess * cp', u'int code', u'cp -> ExitException = kwsysProcess_Exception_Other'])","set([0, 58])","[['sprintf'], ['_snprintf', 'KWSYSPE_PIPE_BUFFER_SIZE']]",2013-11-25T16:19:37,Brad King,17022640507569344935,435
c04995b46eb93d39f97ee12ab63a5479c0b79b41,"cmake: Split -E command implementation into separate source file

Move the cmake::ExecuteCMakeCommand static method and all the static
methods it calls out of the 'cmake' class to a separate 'cmcmd' class.
Build the latter as part of the main cmake executable with cmakemain.cxx
and not in CMakeLib.  Drop unused header includes from ""cmake.cxx"".

By moving this implementation out of cmake.cxx we avoid carrying it
around in all the executables that use class 'cmake'.  It is needed only
for the main ""cmake -E"" functionality.",[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_365.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_365.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_365.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_866.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_866.cpp,1128,1112,1503,-1,"fprintf(progFile,""%i\n"",count);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_744.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_744.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_744.cpp,309,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_744.cpp,-1,"[""FILE *"", ""string"", ""atoi_ret""]","[""FILE *""]","set([u'kwsysProcess * cp', u'int code', u'cp -> ExitException = kwsysProcess_Exception_Other'])","set([0, 58])","[['fprintf', 'progFile', '%i\\n', 'count'], []]",2013-10-03T21:30:28,Brad King,-11966505253222070450,53
c04995b46eb93d39f97ee12ab63a5479c0b79b41,"cmake: Split -E command implementation into separate source file

Move the cmake::ExecuteCMakeCommand static method and all the static
methods it calls out of the 'cmake' class to a separate 'cmcmd' class.
Build the latter as part of the main cmake executable with cmakemain.cxx
and not in CMakeLib.  Drop unused header includes from ""cmake.cxx"".

By moving this implementation out of cmake.cxx we avoid carrying it
around in all the executables that use class 'cmake'.  It is needed only
for the main ""cmake -E"" functionality.",[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_365.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_365.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_365.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_866.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_866.cpp,1128,1112,1544,-1,"fprintf(progFile,""empty"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_745.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_745.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_745.cpp,350,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_745.cpp,-1,"[""fopen_ret"", ""string""]","[""fopen_ret""]","set([u'kwsysProcess * cp', u'int code', u'cp -> ExitException = kwsysProcess_Exception_Other'])","set([0, 58])","[['fprintf', 'progFile', 'empty'], []]",2013-10-03T21:30:28,Brad King,2390663386294908208,426
c04995b46eb93d39f97ee12ab63a5479c0b79b41,"cmake: Split -E command implementation into separate source file

Move the cmake::ExecuteCMakeCommand static method and all the static
methods it calls out of the 'cmake' class to a separate 'cmcmd' class.
Build the latter as part of the main cmake executable with cmakemain.cxx
and not in CMakeLib.  Drop unused header includes from ""cmake.cxx"".

By moving this implementation out of cmake.cxx we avoid carrying it
around in all the executables that use class 'cmake'.  It is needed only
for the main ""cmake -E"" functionality.",[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_365.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_365.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_365.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_866.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_866.cpp,1128,1112,1553,-1,"fprintf(stdout,""[%3i%%] "",((fileNum-3)*100)/count);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_746.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_746.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_746.cpp,359,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_746.cpp,-1,"[""unkown"", ""string"", ""int""]","[""int"", ""null"", "">""]","set([u'kwsysProcess * cp', u'int code', u'cp -> ExitException = kwsysProcess_Exception_Other'])","set([0, 58])","[['fprintf', 'stdout', '[%3i%%]', 'fileNum', '3', '*100', '/count'], []]",2013-10-03T21:30:28,Brad King,10273923533894255873,427
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_867.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_867.cpp,294,294,296,296,"fprintf(fout, ""SET(CMAKE_MODULE_PATH %s)\n"", def);","fprintf(fout, ""set(CMAKE_MODULE_PATH %s)\n"", def);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_747.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_747.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_747.cpp,275,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_747.cpp,275,"[""FILE *"", ""string"", ""const char *""]","[""const char *""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'const char * def = this -> Makefile -> GetDefinition ( ""CMAKE_MODULE_PATH"" ) ;'])","set([258, 269])","[['SET'], ['set']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_868.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_868.cpp,307,307,309,309,"fprintf(fout, ""SET(%s \""%s\"")\n"",
                rulesOverrideLang.c_str(), rulesOverridePath);","fprintf(fout, ""set(%s \""%s\"")\n"",
                rulesOverrideLang.c_str(), rulesOverridePath);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_748.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_748.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_748.cpp,288,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_748.cpp,288,"[""FILE *"", ""string"", ""rulesOverrideLang . c_str_ret"", ""unkown""]","[""unkown"", ""this -> Makefile -> GetDefinition_ret""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'this -> SrcFileSignature = true', u'this -> BinaryDirectory += ""/CMakeTmp""', u'this -> SrcFileSignature = false', u'std :: string rulesOverrideLang = rulesOverrideBase + ""_"" + * li ;'])","set([176, 121, 258, 284, 5])","[['SET'], ['set']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_868.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_868.cpp,307,307,315,315,"fprintf(fout, ""SET(%s \""%s\"")\n"",
                rulesOverrideBase.c_str(), rulesOverridePath2);","fprintf(fout, ""set(%s \""%s\"")\n"",
                rulesOverrideBase.c_str(), rulesOverridePath2);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_749.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_749.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_749.cpp,294,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_749.cpp,294,"[""FILE *"", ""string"", ""rulesOverrideBase . c_str_ret"", ""unkown""]","[""unkown"", ""this -> Makefile -> GetDefinition_ret""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'this -> SrcFileSignature = true', u'this -> BinaryDirectory += ""/CMakeTmp""', u'std :: string rulesOverrideBase = ""CMAKE_USER_MAKE_RULES_OVERRIDE"" ;', u'this -> SrcFileSignature = false'])","set([176, 121, 258, 283, 5])","[['SET'], ['set']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_868.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_868.cpp,307,307,319,319,"f(fout, ""PROJECT(CMAKE_TRY_COMPILE%s)\n"", projectLangs.c_str());","f(fout, ""project(CMAKE_TRY_COMPILE%s)\n"", projectLangs.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_750.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_750.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_750.cpp,298,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_750.cpp,298,"[""FILE *"", ""string"", ""projectLangs . c_str_ret""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'std :: string projectLangs ;', u'projectLangs += "" "" + * li'])","set([258, 282, 278])","[['PROJECT'], ['project']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_868.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_868.cpp,307,307,320,320,"fprintf(fout, ""SET(CMAKE_VERBOSE_MAKEFILE 1)\n"");","fprintf(fout, ""set(CMAKE_VERBOSE_MAKEFILE 1)\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_751.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_751.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_751.cpp,299,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_751.cpp,299,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])",set([258]),"[['SET'], ['set']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_868.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_868.cpp,307,307,326,326,"fprintf(fout, ""SET(CMAKE_%s_FLAGS %s)\n"", li->c_str(),
              lg->EscapeForCMake(flags?flags:"""").c_str());","fprintf(fout, ""set(CMAKE_%s_FLAGS %s)\n"", li->c_str(),
              lg->EscapeForCMake(flags?flags:"""").c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_752.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_752.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_752.cpp,305,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_752.cpp,305,"[""FILE *"", ""string"", ""li -> c_str_ret"", ""lg -> EscapeForCMake ( flags ? flags : \""\"" ) . c_str_ret""]","[""testLangs . begin_ret"", ""testLangs . end_ret"", ""!=""]","set([u'const char * flags = this -> Makefile -> GetDefinition ( langFlags . c_str ( ) ) ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'std :: set < std :: string > testLangs ;', u'cmLocalGenerator * lg = this -> Makefile -> GetLocalGenerator ( ) ;', u'std :: set < std :: string > :: iterator li = testLangs . begin ( ) ;'])","set([224, 304, 258, 300, 222])","[['SET'], ['set']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_868.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_868.cpp,307,307,328,328,"fprintf(fout, ""SET(CMAKE_%s_FLAGS \""${CMAKE_%s_FLAGS}""
              "" ${COMPILE_DEFINITIONS}\"")\n"", li->c_str(), li->c_str());","fprintf(fout, ""set(CMAKE_%s_FLAGS \""${CMAKE_%s_FLAGS}""
              "" ${COMPILE_DEFINITIONS}\"")\n"", li->c_str(), li->c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_753.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_753.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_753.cpp,307,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_753.cpp,307,[],"[""testLangs . begin_ret"", ""testLangs . end_ret"", ""!=""]","set([u'std :: set < std :: string > testLangs ;', u'std :: set < std :: string > :: iterator li = testLangs . begin ( ) ;'])","set([224, 300])","[['SET'], ['set']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_868.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_868.cpp,307,307,331,331,"fprintf(fout, ""INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES})\n"");","fprintf(fout, ""include_directories(${INCLUDE_DIRECTORIES})\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_754.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_754.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_754.cpp,310,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_754.cpp,310,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])",set([258]),"[['INCLUDE_DIRECTORIES'], ['include_directories']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_868.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_868.cpp,307,307,332,332,"fprintf(fout, ""SET(CMAKE_SUPPRESS_REGENERATION 1)\n"");","fprintf(fout, ""set(CMAKE_SUPPRESS_REGENERATION 1)\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_755.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_755.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_755.cpp,311,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_755.cpp,311,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])",set([258]),"[['SET'], ['set']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_868.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_868.cpp,307,307,333,333,"fprintf(fout, ""LINK_DIRECTORIES(${LINK_DIRECTORIES})\n"");","fprintf(fout, ""link_directories(${LINK_DIRECTORIES})\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_756.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_756.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_756.cpp,312,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_756.cpp,312,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])",set([258]),"[['LINK_DIRECTORIES'], ['link_directories']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_868.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_868.cpp,307,307,337,337,"fprintf(fout, ""ADD_DEFINITIONS( "");","fprintf(fout, ""add_definitions( "");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_757.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_757.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_757.cpp,316,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_757.cpp,316,"[""FILE *"", ""string""]","[""compileDefs . size_ret""]","set([u'std :: vector < std :: string > compileDefs ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([258, 11])","[['ADD_DEFINITIONS'], ['add_definitions']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_869.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_869.cpp,406,406,408,408,"fprintf(fout, ""SET(CMAKE_POSITION_INDEPENDENT_CODE \""ON\"")\n"");","fprintf(fout, ""set(CMAKE_POSITION_INDEPENDENT_CODE \""ON\"")\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_758.cpp,387,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_758.cpp,387,"[""FILE *"", ""string""]","[""this -> Makefile -> GetDefinition_ret"", ""null"", ""!=""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'this -> SrcFileSignature = true', u'this -> BinaryDirectory += ""/CMakeTmp""', u'this -> SrcFileSignature = false'])","set([176, 121, 258, 5])","[['SET'], ['set']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_869.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_869.cpp,406,406,415,415,"fprintf(fout, ""ADD_EXECUTABLE(%s"", targetName);","fprintf(fout, ""add_executable(%s"", targetName);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_759.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_759.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_759.cpp,394,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_759.cpp,394,"[""FILE *"", ""string"", ""char *""]","[""targets . empty_ret"", ""!""]","set([u'cmExportTryCompileFileGenerator tcfg ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'std :: vector < cmTarget * > targets ;'])","set([328, 258, 333, 15])","[['ADD_EXECUTABLE'], ['add_executable']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_870.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_870.cpp,429,429,430,430,"fprintf(fout,
              ""TARGET_LINK_LIBRARIES(%s ${LINK_LIBRARIES})\n"",targetName);","fprintf(fout,
              ""target_link_libraries(%s ${LINK_LIBRARIES})\n"",targetName);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_760.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_760.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_760.cpp,409,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_760.cpp,409,"[""FILE *"", ""string"", ""char *""]","[""bool""]","set([u'bool useOldLinkLibs = true ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'useOldLinkLibs = false'])","set([328, 17, 258, 46])","[['TARGET_LINK_LIBRARIES'], ['target_link_libraries']]",2013-08-22T10:06:58,Stephen Kelly,0,550
33055c405ed3b0e1df52c186f0d8a3e878aa88a8,"Generate modern-style cmake code.

The commits 9db31162 (Remove CMake-language block-end command
arguments, 2012-08-13) and 77543bde (Convert CMake-language
commands to lower case, 2012-08-13) changed most cmake code
to use lowercase commands and no parameters in termination
commands. However, those changes excluded cmake code generated
in c++ by cmake.

Make a similar style change to code generated by cmake.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_366.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_870.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_870.cpp,429,429,435,435,"fprintf(fout, ""TARGET_LINK_LIBRARIES(%s %s)\n"",
              targetName,
              libsToLink.c_str());","fprintf(fout, ""target_link_libraries(%s %s)\n"",
              targetName,
              libsToLink.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_761.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_761.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_761.cpp,414,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_761.cpp,414,"[""FILE *"", ""string"", ""char *"", ""libsToLink . c_str_ret""]","[""bool"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'libsToLink += ""\\"""" + cmSystemTools :: TrimWhitespace ( argv [ i ] ) + ""\\"" ""', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'useOldLinkLibs = false'])","set([258, 328, 73, 46, 16, 17])","[['TARGET_LINK_LIBRARIES'], ['target_link_libraries']]",2013-08-22T10:06:58,Stephen Kelly,0,550
1eafa3edaf34569cb6fa7eb449a9825049fe6270,"cmListFileLexer: Fix line number after backslash in string

If a line inside a string ends in a backslash count the following
newline character as a line increment.  Add a test covering this case to
verify that subsequent line numbers are correct.",[],Source/cmListFileLexer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_367.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_367.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_367.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_871.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_871.cpp,1240,1278,1242,1285,,"YY_FATAL_ERROR( ""out of dynamic memory in yy_get_next_buffer()"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_762.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_762.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_762.cpp,116,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_762.cpp,121,[],"[""member"", ""null"", ""=="", ""!""]","set([u'YY_CURRENT_BUFFER_LVALUE -> yy_ch_buf = ( char * ) cmListFileLexer_yyrealloc ( ( void * ) YY_CURRENT_BUFFER_LVALUE -> yy_ch_buf , new_size , yyscanner )'])",set([119]),"[[], ['YY_FATAL_ERROR', 'out', 'of', 'dynamic', 'memory', 'in', 'yy_get_next_buffer']]",2013-08-08T17:26:26,Brad King,24360157688648809926,483
1eafa3edaf34569cb6fa7eb449a9825049fe6270,"cmListFileLexer: Fix line number after backslash in string

If a line inside a string ends in a backslash count the following
newline character as a line increment.  Add a test covering this case to
verify that subsequent line numbers are correct.",[],Source/cmListFileLexer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_367.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_367.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_367.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_872.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_872.cpp,1633,1679,1636,1682,,"YY_FATAL_ERROR( ""out of dynamic memory in cmListFileLexer_yyensure_buffer_stack()"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_763.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_763.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_763.cpp,16,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_763.cpp,16,"[""member"", ""null"", ""int""]","[""member""]","set([u'yyg -> yy_buffer_stack = ( struct yy_buffer_state * * ) cmListFileLexer_yyalloc ( num_to_alloc * sizeof ( struct yy_buffer_state * ) , yyscanner )', u'struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;'])","set([3, 12])","[[], ['YY_FATAL_ERROR', 'out', 'of', 'dynamic', 'memory', 'in', 'cmListFileLexer_yyensure_buffer_stack']]",2013-08-08T17:26:26,Brad King,10108976974263884194,54
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_369.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_369.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_369.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_878.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_878.cpp,1130,1326,1131,1327,"archive_set_error(
							&filter->archive->archive,
							ENOMEM,
						    ""Unable to allocate copy buffer"");","archive_set_error(
						    &filter->archive->archive,
						    ENOMEM,
						    ""Unable to allocate copy""
						    "" buffer"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_770.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_770.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_770.cpp,107,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_770.cpp,117,"[""member"", ""macro"", ""string""]","[""int"", ""size_t"", ""<=""]","set([u's = min', u't *= 2', u's = t = filter -> buffer_size', u's = t'])","set([127, 113, 115, 111])","[[], []]",2013-07-31T12:19:13,Brad King,0,550
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_370.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_370.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_370.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_884.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_884.cpp,726,920,728,929,,"archive_set_error(&a->archive, errno,
				    ""Couldn't access %s"", path);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_774.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_774.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_774.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_774.cpp,21,[],[],"set([u'path = archive_entry_sourcepath ( entry )', u'path = archive_entry_pathname ( entry )', u'struct archive_read_disk * a'])","set([1, 10, 12])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Couldn', 't', 'access', '%s', 'path']]",2013-07-31T12:19:13,Brad King,7079093771367386589,436
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_370.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_370.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_370.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_886.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_886.cpp,856,1070,866,-1,"archive_set_error(&a->archive, errno,
				    ""FIEMAP failed"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_775.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_775.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_775.cpp,50,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_775.cpp,-1,"[""member"", ""unkown"", ""string""]","[""unkown"", ""macro"", ""!="", ""unkown"", ""macro"", ""!="", ""&&""]","set([u'path = archive_entry_sourcepath ( entry )', u'path = archive_entry_pathname ( entry )', u'struct archive_read_disk * a'])","set([1, 10, 12])","[['archive_set_error', '&a', 'archive', 'errno', 'FIEMAP', 'failed'], []]",2013-07-31T12:19:13,Brad King,142256030917833619,437
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_370.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_370.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_370.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_887.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_887.cpp,926,1130,943,1164,,"archive_set_error(&a->archive, errno,
			    ""Can't open `%s'"", path);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_776.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_776.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_776.cpp,31,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_776.cpp,47,[],"[""pathconf_ret"", ""null"", ""<="", ""!""]","set([u'path = archive_entry_sourcepath ( entry )', u'path = archive_entry_pathname ( entry )', u'struct archive_read_disk * a', u'* fd = open ( path , O_RDONLY | O_NONBLOCK | O_CLOEXEC )', u'int * fd'])","set([41, 2, 1, 45, 39])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Can', 't', 'open', '%s', 'path']]",2013-07-31T12:19:13,Brad King,16137937622806740697,438
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_371.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_371.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_371.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_889.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_889.cpp,897,970,945,1051,,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_779.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_779.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_779.cpp,142,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_779.cpp,195,"[""struct archive_entry *"", ""tree_current_path_ret""]","[""update_current_filesystem_ret"", ""macro"", ""!="", ""!""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([92, 193, 105, 1])","[[], ['archive_set_error', '&', 'a', 'archive', 'errno', 'Faild', '%s', 'archive_error_string', 'a', 'matching']]",2013-07-31T12:19:13,Brad King,20425500126860247101,534
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_371.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_371.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_371.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_890.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_890.cpp,1028,1241,1034,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Ignored the request descending the current object"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_780.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_780.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_780.cpp,-1,"[""member"", ""macro"", ""string""]","[""member"", ""macro"", ""!="", ""member"", ""||""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([92, 193, 105, 1])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Ignored', 'the', 'request', 'descending', 'the', 'current', 'object'], []]",2013-07-31T12:19:13,Brad King,30140998294450614549,530
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_371.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_371.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_371.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_896.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_896.cpp,1360,1586,1362,1589,,"archive_set_error(&a->archive, errno, ""fchdir failed"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_784.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_784.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_784.cpp,8,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_784.cpp,9,"[""struct tree *""]",[],"set([u'struct archive_read_disk * a', u'struct tree * t = a -> tree ;'])","set([1, 3])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'fchdir', 'failed']]",2013-07-31T12:19:13,Brad King,2607046211820406179,531
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_371.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_371.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_371.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_903.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_903.cpp,1622,1866,1625,1870,,"archive_set_error(&a->archive, errno, ""fchdir failed"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_789.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_789.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_789.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_789.cpp,21,"[""tree_current_access_path_ret"", ""macro""]","[""tree_current_is_symblic_link_target_ret""]","set([u'struct archive_read_disk * a', u'struct tree * t = a -> tree ;'])","set([1, 3])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'fchdir', 'failed']]",2013-07-31T12:19:13,Brad King,2607046211820406179,531
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_904.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_904.cpp,557,549,608,591,"archive_set_error(&a->archive, errno, ""Seek error"");","archive_set_error(&a->archive, errno,
			    ""CreateEvent failed"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_790.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_790.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_790.cpp,49,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_790.cpp,29,"[""member"", ""macro"", ""string""]","[""SetFilePointerEx_perso_ret""]","set([u'struct archive_read_disk * a', u'olp -> ol . hEvent = CreateEventW ( NULL , TRUE , FALSE , NULL )', u'olp = & ( t -> ol [ t -> ol_idx_doing ] )'])","set([9, 26, 1])","[['Seek', 'error'], ['CreateEvent', 'failed']]",2013-07-31T12:19:13,Brad King,-18489488998263210691,439
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_905.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_905.cpp,701,768,703,770,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""%ls: Couldn't visit directory"",
			    tree_current_path(t));","archive_set_error(&a->archive, t->tree_errno,
			    ""%ls: Couldn't visit directory"",
			    tree_current_path(t));",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_794.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_794.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_794.cpp,30,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_794.cpp,21,"[""member"", ""macro"", ""string"", ""tree_current_path_ret""]","[""tree_next_ret""]","set([u't -> descend = 0', u'struct archive_read_disk * a', u'struct tree * t'])","set([1, 11])","[['ARCHIVE_ERRNO_MISC'], ['tree_errno', 't']]",2013-07-31T12:19:13,Brad King,9538248633774475232,440
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_906.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_906.cpp,713,780,715,782,"archive_set_error(&a->archive, errno,
				    ""%ls: Cannot stat"",
				    tree_current_path(t));","archive_set_error(&a->archive, t->tree_errno,
				    ""%ls: Cannot stat"",
				    tree_current_path(t));",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_795.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_795.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_795.cpp,42,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_795.cpp,33,"[""member"", ""unkown"", ""string"", ""tree_current_path_ret""]","[""tree_current_lstat_ret"", ""null"", ""==""]","set([u't -> descend = 0', u'struct archive_read_disk * a', u'struct tree * t', u'lst = tree_current_lstat ( t )'])","set([1, 11, 31])","[['errno'], ['tree_errno', 't']]",2013-07-31T12:19:13,Brad King,-5875065792580759809,441
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_908.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_908.cpp,759,846,774,871,,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_797.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_797.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_797.cpp,101,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_797.cpp,122,[],"[""update_current_filesystem_ret"", ""macro"", ""!="", ""!""]","set([u'r = archive_match_time_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([120, 1, 76, 89])","[[], ['archive_set_error', '&', 'a', 'archive', 'errno', 'Faild', '%s', 'archive_error_string', 'a', 'matching']]",2013-07-31T12:19:13,Brad King,20425500126860247101,534
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_908.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_908.cpp,759,846,781,897,,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_798.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_798.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_798.cpp,108,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_798.cpp,148,"[""struct archive_entry *"", ""struct archive_entry *""]","[""update_current_filesystem_ret"", ""macro"", ""!="", ""!""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([1, 146, 76, 89])","[[], ['archive_set_error', '&', 'a', 'archive', 'errno', 'Faild', '%s', 'archive_error_string', 'a', 'matching']]",2013-07-31T12:19:13,Brad King,20425500126860247101,534
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_909.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_909.cpp,878,1129,884,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Ignored the request descending the current object"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_799.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_799.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_799.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_799.cpp,-1,"[""member"", ""macro"", ""string""]","[""member"", ""macro"", ""!="", ""member"", ""||""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([1, 146, 76, 89])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Ignored', 'the', 'request', 'descending', 'the', 'current', 'object'], []]",2013-07-31T12:19:13,Brad King,30140998294450614549,530
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_913.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_913.cpp,1109,1365,1111,1370,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
                        ""GetDiskFreeSpace failed: %d"", (int)GetLastError());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_801.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_801.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_801.cpp,30,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_801.cpp,34,[],"[""GetVolumePathNameW_ret"", ""!"", ""!""]","set([u'struct archive_read_disk * a', u'struct tree * t = a -> tree ;', u'wchar_t vol [ 256 ] ;'])","set([1, 3, 4])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'GetDiskFreeSpace', 'failed', '%d', 'int', 'GetLastError']]",2013-07-31T12:19:13,Brad King,-34087995311007121496,442
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_915.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_915.cpp,1298,1567,1300,1581,,"fprintf(stderr, ""LIBARCHIVE_DIRECT_IO=%s\n"",
				(t->direct_io)?""Enabled"":""Disabled"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_802.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_802.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_802.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_802.cpp,80,[],"[""__la_win_permissive_name_w_ret"", ""null"", ""==""]","set([u't -> direct_io = 0', u't -> direct_io = 1', u'struct tree * t'])","set([1, 77, 79])","[[], ['fprintf', 'stderr', 'LIBARCHIVE_DIRECT_IO', '%s\\n', 't', 'direct_io', 'Enabled', 'Disabled']]",2013-07-31T12:19:13,Brad King,-9634741319136734306,443
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_915.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_915.cpp,1298,1567,1300,1590,,"fprintf(stderr, ""LIBARCHIVE_ASYNC_IO=%s\n"",
			    (t->async_io)?""Enabled"":""Disabled"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_803.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_803.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_803.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_803.cpp,89,[],"[""__la_win_permissive_name_w_ret"", ""null"", ""==""]","set([u't -> async_io = 0', u't -> async_io = 1', u'struct tree * t'])","set([88, 1, 86])","[[], ['fprintf', 'stderr', 'LIBARCHIVE_ASYNC_IO', '%s\\n', 't', 'async_io', 'Enabled', 'Disabled']]",2013-07-31T12:19:13,Brad King,-22584085485135369856,444
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_916.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_916.cpp,1775,2084,1777,2087,"archive_set_error(&a->archive, GetLastError(),
				    ""Can't GetFileInformationByHandle"");","archive_set_error(&a->archive, errno,
				    ""Can't GetFileInformationByHandle"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_804.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_804.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_804.cpp,32,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_804.cpp,33,"[""member"", ""GetLastError_ret"", ""string""]","[""GetFileInformationByHandle_ret"", ""null"", ""==""]","set([u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;', u'r = GetFileInformationByHandle ( h , & bhfi )'])","set([4, 30])","[['GetLastError'], ['errno']]",2013-07-31T12:19:13,Brad King,14513706561783353927,547
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_917.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_917.cpp,1785,2095,1788,2099,"archive_set_error(&a->archive, GetLastError(),
				    ""Can't FindFirstFileW"");","archive_set_error(&a->archive, errno,
				    ""Can't FindFirstFileW"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_805.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_805.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_805.cpp,43,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_805.cpp,45,"[""member"", ""GetLastError_ret"", ""string""]","[""FindFirstFileW_ret"", ""macro"", ""==""]","set([u'h = FindFirstFileW ( path , & findData )', u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;'])","set([42, 4])","[['GetLastError'], ['errno']]",2013-07-31T12:19:13,Brad King,14513706561783353927,547
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_918.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_918.cpp,1807,2118,1809,2121,"archive_set_error(&a->archive,
				    GetLastError(),
				    ""Can't CreateFileW"");","archive_set_error(&a->archive, errno,
				    ""Can't CreateFileW"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_806.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_806.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_806.cpp,64,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_806.cpp,67,"[""member"", ""GetLastError_ret"", ""string""]","[""CreateFileW_ret"", ""macro"", ""==""]","set([u'h = CreateFileW ( path , desiredAccess , 0 , NULL , OPEN_EXISTING , flag , NULL )', u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;'])","set([4, 63])","[['GetLastError'], ['errno']]",2013-07-31T12:19:13,Brad King,14513706561783353927,547
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_918.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_918.cpp,1807,2118,1816,2128,"archive_set_error(&a->archive,
				    GetLastError(),
				    ""Can't GetFileInformationByHandle"");","archive_set_error(&a->archive, errno,
				    ""Can't GetFileInformationByHandle"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_807.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_807.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_807.cpp,71,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_807.cpp,74,"[""member"", ""GetLastError_ret"", ""string""]","[""GetFileInformationByHandle_ret"", ""null"", ""==""]","set([u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;', u'r = GetFileInformationByHandle ( h , & bhfi )'])","set([4, 71])","[['GetLastError'], ['errno']]",2013-07-31T12:19:13,Brad King,14513706561783353927,547
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_919.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_919.cpp,1854,2165,1856,2168,"archive_set_error(&a->archive, GetLastError(),
				    ""Can't CreateFileW"");","archive_set_error(&a->archive, errno,
				    ""Can't CreateFileW"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_808.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_808.cpp,111,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_808.cpp,114,"[""member"", ""GetLastError_ret"", ""string""]","[""CreateFileW_ret"", ""macro"", ""==""]","set([u'h = CreateFileW ( path , GENERIC_READ , 0 , NULL , OPEN_EXISTING , FILE_FLAG_BACKUP_SEMANTICS , NULL )', u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;'])","set([4, 110])","[['GetLastError'], ['errno']]",2013-07-31T12:19:13,Brad King,14513706561783353927,547
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_919.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_919.cpp,1854,2165,1863,2176,"archive_set_error(&a->archive, GetLastError(),
			    ""Can't GetFileInformationByHandle"");","archive_set_error(&a->archive, errno,
			    ""Can't GetFileInformationByHandle"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_809.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_809.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_809.cpp,118,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_809.cpp,122,"[""member"", ""GetLastError_ret"", ""string""]","[""GetFileInformationByHandle_ret"", ""null"", ""==""]","set([u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;', u'r = GetFileInformationByHandle ( h , & bhfi )'])","set([4, 119])","[['GetLastError'], ['errno']]",2013-07-31T12:19:13,Brad King,14513706561783353927,547
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_920.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_920.cpp,1909,2222,1911,2224,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			""Couldn't allocate memory"");","archive_set_error(&a->archive, ENOMEM,
			""Couldn't allocate memory"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_810.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_810.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_810.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_810.cpp,14,"[""member"", ""macro"", ""string""]","[""malloc_ret"", ""null"", ""==""]","set([u'struct archive_read_disk * a', u'outranges = ( FILE_ALLOCATED_RANGE_BUFFER * ) malloc ( outranges_size )'])","set([1, 12])","[['ARCHIVE_ERRNO_MISC'], ['ENOMEM']]",2013-07-31T12:19:13,Brad King,5089808708356969577,532
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_921.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_921.cpp,1923,2236,1932,2245,"archive_set_error(&a->archive,
					    ARCHIVE_ERRNO_MISC,
					    ""Couldn't allocate memory"");","archive_set_error(&a->archive, ENOMEM,
					    ""Couldn't allocate memory"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_811.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_811.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_811.cpp,35,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_811.cpp,35,"[""member"", ""macro"", ""string""]","[""malloc_ret"", ""null"", ""==""]","set([u'struct archive_read_disk * a', u'outranges = ( FILE_ALLOCATED_RANGE_BUFFER * ) malloc ( outranges_size )'])","set([32, 1])","[['ARCHIVE_ERRNO_MISC'], ['ENOMEM']]",2013-07-31T12:19:13,Brad King,5089808708356969577,532
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_372.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_922.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_922.cpp,1968,2280,1970,2283,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""DeviceIoControl Failed: %lu"", GetLastError());","archive_set_error(&a->archive, errno,
			    ""DeviceIoControl Failed: %lu"", GetLastError());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_812.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_812.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_812.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_812.cpp,73,"[""member"", ""macro"", ""string"", ""GetLastError_ret""]","[""DeviceIoControl_ret"", ""null"", ""!="", ""!""]","set([u'struct archive_read_disk * a', u'BOOL ret ;', u'ret = DeviceIoControl ( handle , FSCTL_QUERY_ALLOCATED_RANGES , & range , sizeof ( range ) , outranges , ( DWORD ) outranges_size , & retbytes , NULL )'])","set([1, 22, 25])","[['ARCHIVE_ERRNO_MISC'], ['errno']]",2013-07-31T12:19:13,Brad King,15413314426355235041,445
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_open_filename.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_374.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_374.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_374.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_924.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_924.cpp,98,103,115,163,,"archive_set_error(a, ENOMEM, ""No memory"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_815.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_815.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_815.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_815.cpp,8,[],[],"set([u'struct archive * a', u'struct read_file_data * mine = ( struct read_file_data * ) calloc ( 1 , sizeof ( * mine ) + wcslen ( wfilename ) * sizeof ( wchar_t ) ) ;'])","set([1, 4])","[[], ['archive_set_error', 'a', 'ENOMEM', 'No', 'memory']]",2013-07-31T12:19:13,Brad King,1805198593993291444,446
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_377.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_377.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_377.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_930.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_930.cpp,79,82,99,-1,"archive_set_error(_a, -1,
	    ""External compression programs not supported on this platform"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_819.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_819.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_819.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_819.cpp,-1,"[""struct archive *"", ""int"", ""string""]",[],"set([u'struct archive * a', u'struct read_file_data * mine = ( struct read_file_data * ) calloc ( 1 , sizeof ( * mine ) + wcslen ( wfilename ) * sizeof ( wchar_t ) ) ;'])","set([1, 4])","[['archive_set_error', '_a', '1', 'External', 'compression', 'programs', 'not', 'supported', 'on', 'this', 'platform'], []]",2013-07-31T12:19:13,Brad King,-9678706963157090417,447
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_377.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_377.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_377.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_930.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_930.cpp,79,82,110,-1,"archive_set_error(&self->archive->archive, -1,
	    ""External compression programs not supported on this platform"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_820.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_820.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_820.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_820.cpp,-1,"[""member"", ""int"", ""string""]",[],"set([u'struct archive * a', u'struct read_file_data * mine = ( struct read_file_data * ) calloc ( 1 , sizeof ( * mine ) + wcslen ( wfilename ) * sizeof ( wchar_t ) ) ;'])","set([1, 4])","[['archive_set_error', '&self', 'archive', 'archive', '1', 'External', 'compression', 'programs', 'not', 'supported', 'on', 'this', 'platform'], []]",2013-07-31T12:19:13,Brad King,-19655507066692448550,448
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_378.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_378.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_378.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_933.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_933.cpp,485,491,493,501,"archive_set_error(&self->archive->archive,
			    ARCHIVE_ERRNO_MISC,
			    ""Insufficient compressed data"");",uudecode->state = ST_IGNORE;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_822.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_822.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_822.cpp,46,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_822.cpp,52,"[""member"", ""macro"", ""string""]","[""get_line_ret"", ""null"", ""<""]","set([u'uudecode -> state = ST_READ_UU', u'uudecode -> in_cnt = ( int ) len', u'uudecode -> in_cnt = 0', u'total ++', u'total = 0', u'uudecode -> state = ST_FIND_HEAD', u'uudecode -> state = ST_UUEND', u'uudecode -> state = ST_READ_BASE64', u'uudecode = ( struct uudecode * ) self -> data'])","set([128, 11, 166, 103, 200, 105, 209, 139, 72, 146, 180, 22, 41, 153, 191])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Insufficient', 'compressed', 'data'], ['uudecode', 'state', 'ST_IGNORE']]",2013-07-31T12:19:13,Brad King,-4395964712971121937,449
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_381.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_381.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_381.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_945.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_945.cpp,478,481,481,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""cab: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_825.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_825.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_825.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_825.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'uudecode -> state = ST_READ_UU', u'uudecode -> in_cnt = ( int ) len', u'uudecode -> in_cnt = 0', u'total ++', u'total = 0', u'uudecode -> state = ST_FIND_HEAD', u'uudecode -> state = ST_UUEND', u'uudecode -> state = ST_READ_BASE64', u'uudecode = ( struct uudecode * ) self -> data'])","set([128, 11, 166, 103, 200, 105, 209, 139, 72, 146, 180, 22, 41, 153, 191])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'cab', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-31T12:19:13,Brad King,7173471416832465161,450
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_cpio.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_382.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_382.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_382.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_948.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_948.cpp,339,340,342,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""cpio: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_826.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_826.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_826.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_826.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'uudecode -> state = ST_READ_UU', u'uudecode -> in_cnt = ( int ) len', u'uudecode -> in_cnt = 0', u'total ++', u'total = 0', u'uudecode -> state = ST_FIND_HEAD', u'uudecode -> state = ST_UUEND', u'uudecode -> state = ST_READ_BASE64', u'uudecode = ( struct uudecode * ) self -> data'])","set([128, 11, 166, 103, 200, 105, 209, 139, 72, 146, 180, 22, 41, 153, 191])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'cpio', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-31T12:19:13,Brad King,901040822794901045,451
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_383.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_383.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_383.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_954.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_954.cpp,1286,1310,1309,1329,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Ignoring out-of-order file @%jx (%s) %jd < %jd"",
		    (intmax_t)file->number,
		    iso9660->pathname.s,
		    (intmax_t)file->offset,
		    (intmax_t)iso9660->current_position);","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Ignoring out-of-order file @%jx (%s) %jd < %jd"",
			    (intmax_t)file->number,
			    iso9660->pathname.s,
			    (intmax_t)file->offset,
			    (intmax_t)iso9660->current_position);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_827.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_827.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_827.cpp,248,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_827.cpp,167,"[""member"", ""macro"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""bool"", ""macro"", ""!="", ""member"", ""member"", ""<"", ""&&""]","set([u'iso9660 = ( struct iso9660 * ) ( a -> format -> data )', u'iso9660 -> entry_sparse_offset = 0', u'struct archive_read * a', u'r64 = __archive_read_seek ( a , file -> offset , SEEK_SET )', u'file = NULL'])","set([8, 1, 92, 157, 21])","[[], []]",2013-07-31T12:19:13,Brad King,0,550
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_383.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_383.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_383.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_958.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_958.cpp,2882,2888,2883,2889,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
	    ""Failed to connect 'CL' pointer to 'RE' rr_moved pointer of""
	    ""Rockridge extensions"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
	    ""Failed to connect 'CL' pointer to 'RE' rr_moved pointer of ""
	    ""Rockridge extensions: current position = %jd, CL offset = %jd"",
	    (intmax_t)iso9660->current_position, (intmax_t)file->cl_offset);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_828.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_828.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_828.cpp,203,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_828.cpp,203,[],"[""rede_add_entry_ret"", ""null"", ""<""]","set([u'( d = rede_get_entry ( re ) ) != NULL', u'( re = re_get_entry ( iso9660 ) ) != first_re'])","set([65, 50])","[[], ['current', 'position', '%jd', 'CL', 'offset', '%jd', 'intmax_t', 'iso9660', 'current_position', 'intmax_t', 'file', 'cl_offset']]",2013-07-31T12:19:13,Brad King,10726901843529205891,452
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_lha.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_384.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_384.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_384.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_960.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_960.cpp,445,446,448,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""lha: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_829.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_829.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_829.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_829.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'( d = rede_get_entry ( re ) ) != NULL', u'( re = re_get_entry ( iso9660 ) ) != first_re'])","set([65, 50])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'lha', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-31T12:19:13,Brad King,-1138773044406366052,453
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_386.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_964.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_964.cpp,757,770,760,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
        ""rar: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_830.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_830.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_830.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_830.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'( d = rede_get_entry ( re ) ) != NULL', u'( re = re_get_entry ( iso9660 ) ) != first_re'])","set([65, 50])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'rar', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-31T12:19:13,Brad King,5617560030629781230,454
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_386.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_965.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_965.cpp,842,857,847,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                          ""RAR volume support unavailable."");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_831.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_831.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_831.cpp,81,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_831.cpp,-1,"[""member"", ""macro"", ""constant""]","[""bool"", ""bool"", ""||""]","set([u'( d = rede_get_entry ( re ) ) != NULL', u'( re = re_get_entry ( iso9660 ) ) != first_re'])","set([65, 50])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'RAR', 'volume', 'support', 'unavailable'], []]",2013-07-31T12:19:13,Brad King,5937195885143328923,455
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_386.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_965.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_965.cpp,842,857,853,859,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                          ""RAR encryption support unavailable."");","(rar->main_flags & MHD_PASSWORD)
      {
        archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                          ""RAR encryption support unavailable."");
        return (ARCHIVE_FATAL);
      };",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_832.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_832.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_832.cpp,87,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_832.cpp,78,"[""member"", ""macro"", ""constant""]","[""bool""]","set([u'rar -> encryptver = * ( p + 7 + sizeof ( rar -> reserved1 ) + sizeof ( rar -> reserved2 ) )', u'rar -> main_flags = archive_le16dec ( p + 3 )', u'rar = ( struct rar * ) ( a -> format -> data )', u'skip = archive_le16dec ( p + 5 )'])","set([16, 56, 74, 55])","[[], ['rar', 'main_flags', '&', 'MHD_PASSWORD', 'return', 'ARCHIVE_FATAL']]",2013-07-31T12:19:13,Brad King,-2773425908662595901,456
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_386.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_965.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_965.cpp,842,857,853,861,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                          ""RAR encryption support unavailable."");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_833.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_833.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_833.cpp,87,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_833.cpp,80,"[""member"", ""macro"", ""constant""]","[""bool""]","set([u'rar -> encryptver = * ( p + 7 + sizeof ( rar -> reserved1 ) + sizeof ( rar -> reserved2 ) )', u'rar -> main_flags = archive_le16dec ( p + 3 )', u'rar = ( struct rar * ) ( a -> format -> data )', u'struct archive_read * a'])","set([16, 1, 74, 55])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'RAR', 'encryption', 'support', 'unavailable']]",2013-07-31T12:19:13,Brad King,-674539078461012674,457
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_386.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_973.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_973.cpp,1272,1467,1276,1481,,"archive_set_error(&a->archive, ENOMEM, ""Couldn't allocate memory."");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_838.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_838.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_838.cpp,268,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_838.cpp,290,[],"[""bool""]","set([u'rar -> nodes ++', u'rar = ( struct rar * ) ( a -> format -> data )', u'struct archive_read * a'])","set([1, 20, 286])","[[], ['archive_set_error', '&a', 'archive', 'ENOMEM', 'Couldn', 't', 'allocate', 'memory']]",2013-07-31T12:19:13,Brad King,12732937391818048874,533
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_386.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_386.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_973.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_973.cpp,1272,1467,1274,1505,,"archive_set_error(&a->archive, ENOMEM, ""Couldn't allocate memory."");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_839.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_839.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_839.cpp,266,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_839.cpp,314,[],"[""member"", ""null"", ""=="", ""!""]","set([u'rar = ( struct rar * ) ( a -> format -> data )', u'struct archive_read * a', u'rar -> filename_save = ( char * ) realloc ( rar -> filename_save , filename_size + 1 )'])","set([1, 306, 20])","[[], ['archive_set_error', '&a', 'archive', 'ENOMEM', 'Couldn', 't', 'allocate', 'memory']]",2013-07-31T12:19:13,Brad King,12732937391818048874,533
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_387.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_387.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_387.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_977.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_977.cpp,383,384,386,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""tar: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_840.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_840.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_840.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_840.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'rar = ( struct rar * ) ( a -> format -> data )', u'struct archive_read * a', u'rar -> filename_save = ( char * ) realloc ( rar -> filename_save , filename_size + 1 )'])","set([1, 306, 20])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'tar', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-31T12:19:13,Brad King,7869671055639496956,458
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_388.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_388.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_388.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_982.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_982.cpp,373,750,379,764,"archive_set_error(&a->archive, ENOMEM,
			    ""Can't allocate memory for Symlink"");","archive_set_error(&a->archive, ENOMEM,
				    ""Can't allocate memory for Symlink"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_847.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_847.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_847.cpp,49,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_847.cpp,77,"[""member"", ""macro"", ""string""]","[""archive_entry_copy_symlink_l_ret"", ""null"", ""!=""]",set([u'struct archive_read * a']),set([1]),"[[], []]",2013-07-31T12:19:13,Brad King,0,550
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_388.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_388.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_388.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_984.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_984.cpp,439,850,442,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""zip: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_849.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_849.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_849.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_849.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]",set([u'struct archive_read * a']),set([1]),"[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'zip', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-31T12:19:13,Brad King,14626004130740644188,459
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_388.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_388.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_388.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_988.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_988.cpp,781,1222,788,1231,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""ZIP compressed data is wrong size (read %jd, expected %jd)"",
			    (intmax_t)zip->entry_compressed_bytes_read,
			    (intmax_t)zip->entry->compressed_size);","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""ZIP compressed data is wrong size ""
			    ""(read %jd, expected %jd)"",
			    (intmax_t)zip->entry_compressed_bytes_read,
			    (intmax_t)zip->entry->compressed_size);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_852.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_852.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_852.cpp,56,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_852.cpp,58,"[""member"", ""macro"", ""string"", ""member"", ""member""]","[""member"", ""member"", ""!=""]","set([u'zip -> entry_crc32 = crc32 ( zip -> entry_crc32 , * buff , ( unsigned ) * size )', u'zip -> unconsumed = 0', u'struct zip * zip = ( struct zip * ) ( a -> format -> data ) ;'])","set([26, 51, 5])","[[], []]",2013-07-31T12:19:13,Brad King,0,550
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_388.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_388.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_388.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_989.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_989.cpp,797,1241,798,1242,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""ZIP uncompressed data is wrong size (read %jd, expected %jd)"",
			    (intmax_t)zip->entry_uncompressed_bytes_read,
			    (intmax_t)zip->entry->uncompressed_size);","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""ZIP uncompressed data is wrong size ""
			    ""(read %jd, expected %jd)"",
			    (intmax_t)zip->entry_uncompressed_bytes_read,
			    (intmax_t)zip->entry->uncompressed_size);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_853.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_853.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_853.cpp,66,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_853.cpp,69,"[""member"", ""macro"", ""string"", ""member"", ""member""]","[""bool"", ""bool"", ""!=""]","set([u'zip -> entry_crc32 = crc32 ( zip -> entry_crc32 , * buff , ( unsigned ) * size )', u'zip -> unconsumed = 0', u'struct zip * zip = ( struct zip * ) ( a -> format -> data ) ;'])","set([26, 51, 5])","[[], []]",2013-07-31T12:19:13,Brad King,0,550
102071f80cf4ad7aa97bf8a1618cfc6ee6689ab6,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive.h
	Utilities/cmlibarchive/libarchive/archive_entry.h
	Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
	Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
	Utilities/cmlibarchive/libarchive/archive_windows.h
	Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_388.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_388.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_388.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_993.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_993.cpp,940,1419,950,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Can't initialize ZIP decompression."");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_855.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_855.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_855.cpp,31,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_855.cpp,-1,"[""member"", ""macro"", ""constant""]","[""inflateReset_ret"", ""macro"", ""!=""]","set([u'zip -> entry_crc32 = crc32 ( zip -> entry_crc32 , * buff , ( unsigned ) * size )', u'zip -> unconsumed = 0', u'struct zip * zip = ( struct zip * ) ( a -> format -> data ) ;'])","set([26, 51, 5])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Can', 't', 'initialize', 'ZIP', 'decompression'], []]",2013-07-31T12:19:13,Brad King,10864122764354403881,460
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_390.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_390.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_390.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_999.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_999.cpp,1130,1326,1131,1327,"archive_set_error(
							&filter->archive->archive,
							ENOMEM,
						    ""Unable to allocate copy buffer"");","archive_set_error(
						    &filter->archive->archive,
						    ENOMEM,
						    ""Unable to allocate copy""
						    "" buffer"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_861.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_861.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_861.cpp,107,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_861.cpp,117,"[""member"", ""macro"", ""string""]","[""int"", ""int"", ""<=""]","set([u's = min', u's = t = filter -> buffer_size', u't *= 2', u's = t'])","set([115, 113, 111, 127])","[[], []]",2013-07-26T19:45:29,Brad King,0,550
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_391.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_391.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_391.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1005.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1005.cpp,723,920,725,929,,"archive_set_error(&a->archive, errno,
				    ""Couldn't access %s"", path);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_865.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_865.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_865.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_865.cpp,21,[],[],"set([u'path = archive_entry_sourcepath ( entry )', u'path = archive_entry_pathname ( entry )', u'struct archive_read_disk * a'])","set([1, 10, 12])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Couldn', 't', 'access', '%s', 'path']]",2013-07-26T19:45:29,Brad King,7079093771367386589,436
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_391.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_391.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_391.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1007.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1007.cpp,853,1070,863,-1,"archive_set_error(&a->archive, errno,
				    ""FIEMAP failed"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_866.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_866.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_866.cpp,50,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_866.cpp,-1,"[""member"", ""unkown"", ""string""]","[""unkown"", ""macro"", ""!="", ""unkown"", ""macro"", ""!="", ""&&""]","set([u'path = archive_entry_sourcepath ( entry )', u'path = archive_entry_pathname ( entry )', u'struct archive_read_disk * a'])","set([1, 10, 12])","[['archive_set_error', '&a', 'archive', 'errno', 'FIEMAP', 'failed'], []]",2013-07-26T19:45:29,Brad King,142256030917833619,437
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_entry_from_file.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_391.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_391.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_391.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1008.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1008.cpp,923,1130,940,1164,,"archive_set_error(&a->archive, errno,
			    ""Can't open `%s'"", path);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_867.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_867.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_867.cpp,31,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_867.cpp,47,[],"[""pathconf_ret"", ""null"", ""<="", ""!""]","set([u'path = archive_entry_sourcepath ( entry )', u'int * fd', u'struct archive_read_disk * a', u'* fd = open ( path , O_RDONLY | O_NONBLOCK | O_CLOEXEC )', u'path = archive_entry_pathname ( entry )'])","set([41, 2, 1, 45, 39])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'Can', 't', 'open', '%s', 'path']]",2013-07-26T19:45:29,Brad King,16137937622806740697,438
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_392.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_392.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_392.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1010.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1010.cpp,897,970,945,1051,,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_870.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_870.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_870.cpp,142,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_870.cpp,195,"[""struct archive_entry *"", ""tree_current_path_ret""]","[""update_current_filesystem_ret"", ""macro"", ""!="", ""!""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([105, 193, 92, 1])","[[], ['archive_set_error', '&', 'a', 'archive', 'errno', 'Faild', '%s', 'archive_error_string', 'a', 'matching']]",2013-07-26T19:45:29,Brad King,20425500126860247101,534
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_392.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_392.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_392.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1011.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1011.cpp,1028,1241,1034,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Ignored the request descending the current object"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_871.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_871.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_871.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_871.cpp,-1,"[""member"", ""macro"", ""string""]","[""member"", ""macro"", ""!="", ""member"", ""||""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([105, 193, 92, 1])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Ignored', 'the', 'request', 'descending', 'the', 'current', 'object'], []]",2013-07-26T19:45:29,Brad King,30140998294450614549,530
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_392.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_392.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_392.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1017.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1017.cpp,1360,1586,1362,1589,,"archive_set_error(&a->archive, errno, ""fchdir failed"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_875.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_875.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_875.cpp,8,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_875.cpp,9,"[""struct tree *""]",[],"set([u'struct archive_read_disk * a', u'struct tree * t = a -> tree ;'])","set([1, 3])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'fchdir', 'failed']]",2013-07-26T19:45:29,Brad King,2607046211820406179,531
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_posix.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_392.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_392.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_392.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1024.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1024.cpp,1615,1866,1618,1870,,"archive_set_error(&a->archive, errno, ""fchdir failed"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_880.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_880.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_880.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_880.cpp,21,"[""tree_current_access_path_ret"", ""macro""]","[""tree_current_is_symblic_link_target_ret""]","set([u'struct archive_read_disk * a', u'struct tree * t = a -> tree ;'])","set([1, 3])","[[], ['archive_set_error', '&a', 'archive', 'errno', 'fchdir', 'failed']]",2013-07-26T19:45:29,Brad King,2607046211820406179,531
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1025.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1025.cpp,557,549,608,591,"archive_set_error(&a->archive, errno, ""Seek error"");","archive_set_error(&a->archive, errno,
			    ""CreateEvent failed"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_881.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_881.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_881.cpp,49,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_881.cpp,29,"[""member"", ""macro"", ""string""]","[""SetFilePointerEx_perso_ret""]","set([u'olp -> ol . hEvent = CreateEventW ( NULL , TRUE , FALSE , NULL )', u'struct archive_read_disk * a', u'olp = & ( t -> ol [ t -> ol_idx_doing ] )'])","set([9, 26, 1])","[['Seek', 'error'], ['CreateEvent', 'failed']]",2013-07-26T19:45:29,Brad King,-18489488998263210691,439
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1026.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1026.cpp,701,768,703,770,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""%ls: Couldn't visit directory"",
			    tree_current_path(t));","archive_set_error(&a->archive, t->tree_errno,
			    ""%ls: Couldn't visit directory"",
			    tree_current_path(t));",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_885.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_885.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_885.cpp,30,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_885.cpp,21,"[""member"", ""macro"", ""string"", ""tree_current_path_ret""]","[""tree_next_ret""]","set([u't -> descend = 0', u'struct archive_read_disk * a', u'struct tree * t'])","set([1, 11])","[['ARCHIVE_ERRNO_MISC'], ['tree_errno', 't']]",2013-07-26T19:45:29,Brad King,9538248633774475232,440
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1027.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1027.cpp,713,780,715,782,"archive_set_error(&a->archive, errno,
				    ""%ls: Cannot stat"",
				    tree_current_path(t));","archive_set_error(&a->archive, t->tree_errno,
				    ""%ls: Cannot stat"",
				    tree_current_path(t));",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_886.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_886.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_886.cpp,42,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_886.cpp,33,"[""member"", ""unkown"", ""string"", ""tree_current_path_ret""]","[""tree_current_lstat_ret"", ""null"", ""==""]","set([u't -> descend = 0', u'struct archive_read_disk * a', u'struct tree * t', u'lst = tree_current_lstat ( t )'])","set([1, 11, 31])","[['errno'], ['tree_errno', 't']]",2013-07-26T19:45:29,Brad King,-5875065792580759809,441
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1029.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1029.cpp,759,846,774,871,,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_888.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_888.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_888.cpp,101,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_888.cpp,122,[],"[""update_current_filesystem_ret"", ""macro"", ""!="", ""!""]","set([u'r = archive_match_time_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([120, 1, 76, 89])","[[], ['archive_set_error', '&', 'a', 'archive', 'errno', 'Faild', '%s', 'archive_error_string', 'a', 'matching']]",2013-07-26T19:45:29,Brad King,20425500126860247101,534
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1029.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1029.cpp,759,846,781,897,,"archive_set_error(&(a->archive), errno,
			    ""Faild : %s"", archive_error_string(a->matching));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_889.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_889.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_889.cpp,108,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_889.cpp,148,"[""struct archive_entry *"", ""struct archive_entry *""]","[""update_current_filesystem_ret"", ""macro"", ""!="", ""!""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([1, 146, 76, 89])","[[], ['archive_set_error', '&', 'a', 'archive', 'errno', 'Faild', '%s', 'archive_error_string', 'a', 'matching']]",2013-07-26T19:45:29,Brad King,20425500126860247101,534
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1030.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1030.cpp,878,1129,884,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Ignored the request descending the current object"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_890.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_890.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_890.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_890.cpp,-1,"[""member"", ""macro"", ""string""]","[""member"", ""macro"", ""!="", ""member"", ""||""]","set([u'r = archive_match_owner_excluded ( a -> matching , entry )', u'struct archive_read_disk * a', u'a -> follow_symlinks = 1', u'a -> follow_symlinks = 0'])","set([1, 146, 76, 89])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Ignored', 'the', 'request', 'descending', 'the', 'current', 'object'], []]",2013-07-26T19:45:29,Brad King,30140998294450614549,530
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1032.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1032.cpp,955,1208,956,1209,"archive_set_error(&a->archive, ENOMEM,
		    ""Can't allocate direcotry traversal data"");","archive_set_error(&a->archive, ENOMEM,
		    ""Can't allocate directory traversal data"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_892.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_892.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_892.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_892.cpp,10,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""==""]","set([u'a -> tree = tree_open ( pathname , a -> symlink_mode , a -> restore_time )', u'a -> tree = tree_reopen ( a -> tree , pathname , a -> restore_time )', u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;'])","set([8, 3, 6])","[['direcotry'], ['directory']]",2013-07-26T19:45:29,Brad King,-5000148000693000786,55
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1035.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1035.cpp,1109,1365,1111,1370,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
                        ""GetDiskFreeSpace failed: %d"", (int)GetLastError());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_893.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_893.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_893.cpp,30,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_893.cpp,34,[],"[""GetVolumePathNameW_ret"", ""!"", ""!""]","set([u'struct archive_read_disk * a', u'wchar_t vol [ 256 ] ;', u'struct tree * t = a -> tree ;'])","set([1, 3, 4])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'GetDiskFreeSpace', 'failed', '%d', 'int', 'GetLastError']]",2013-07-26T19:45:29,Brad King,-34087995311007121496,442
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1037.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1037.cpp,1298,1567,1300,1581,,"fprintf(stderr, ""LIBARCHIVE_DIRECT_IO=%s\n"",
				(t->direct_io)?""Enabled"":""Disabled"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_894.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_894.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_894.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_894.cpp,80,[],"[""__la_win_permissive_name_w_ret"", ""null"", ""==""]","set([u't -> direct_io = 0', u't -> direct_io = 1', u'struct tree * t'])","set([1, 77, 79])","[[], ['fprintf', 'stderr', 'LIBARCHIVE_DIRECT_IO', '%s\\n', 't', 'direct_io', 'Enabled', 'Disabled']]",2013-07-26T19:45:29,Brad King,-9634741319136734306,443
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1037.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1037.cpp,1298,1567,1300,1590,,"fprintf(stderr, ""LIBARCHIVE_ASYNC_IO=%s\n"",
			    (t->async_io)?""Enabled"":""Disabled"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_895.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_895.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_895.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_895.cpp,89,[],"[""__la_win_permissive_name_w_ret"", ""null"", ""==""]","set([u't -> async_io = 0', u't -> async_io = 1', u'struct tree * t'])","set([88, 1, 86])","[[], ['fprintf', 'stderr', 'LIBARCHIVE_ASYNC_IO', '%s\\n', 't', 'async_io', 'Enabled', 'Disabled']]",2013-07-26T19:45:29,Brad King,-22584085485135369856,444
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1038.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1038.cpp,1775,2084,1777,2087,"archive_set_error(&a->archive, GetLastError(),
				    ""Can't GetFileInformationByHandle"");","archive_set_error(&a->archive, errno,
				    ""Can't GetFileInformationByHandle"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_896.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_896.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_896.cpp,32,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_896.cpp,33,"[""member"", ""GetLastError_ret"", ""string""]","[""GetFileInformationByHandle_ret"", ""null"", ""==""]","set([u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;', u'r = GetFileInformationByHandle ( h , & bhfi )'])","set([4, 30])","[['GetLastError'], ['errno']]",2013-07-26T19:45:29,Brad King,14513706561783353927,547
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1039.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1039.cpp,1785,2095,1788,2099,"archive_set_error(&a->archive, GetLastError(),
				    ""Can't FindFirstFileW"");","archive_set_error(&a->archive, errno,
				    ""Can't FindFirstFileW"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_897.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_897.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_897.cpp,43,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_897.cpp,45,"[""member"", ""GetLastError_ret"", ""string""]","[""FindFirstFileW_ret"", ""macro"", ""==""]","set([u'h = FindFirstFileW ( path , & findData )', u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;'])","set([42, 4])","[['GetLastError'], ['errno']]",2013-07-26T19:45:29,Brad King,14513706561783353927,547
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1040.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1040.cpp,1807,2118,1809,2121,"archive_set_error(&a->archive,
				    GetLastError(),
				    ""Can't CreateFileW"");","archive_set_error(&a->archive, errno,
				    ""Can't CreateFileW"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_898.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_898.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_898.cpp,64,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_898.cpp,67,"[""member"", ""GetLastError_ret"", ""string""]","[""CreateFileW_ret"", ""macro"", ""==""]","set([u'h = CreateFileW ( path , desiredAccess , 0 , NULL , OPEN_EXISTING , flag , NULL )', u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;'])","set([4, 63])","[['GetLastError'], ['errno']]",2013-07-26T19:45:29,Brad King,14513706561783353927,547
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1040.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1040.cpp,1807,2118,1816,2128,"archive_set_error(&a->archive,
				    GetLastError(),
				    ""Can't GetFileInformationByHandle"");","archive_set_error(&a->archive, errno,
				    ""Can't GetFileInformationByHandle"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_899.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_899.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_899.cpp,71,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_899.cpp,74,"[""member"", ""GetLastError_ret"", ""string""]","[""GetFileInformationByHandle_ret"", ""null"", ""==""]","set([u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;', u'r = GetFileInformationByHandle ( h , & bhfi )'])","set([4, 71])","[['GetLastError'], ['errno']]",2013-07-26T19:45:29,Brad King,14513706561783353927,547
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1041.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1041.cpp,1854,2165,1856,2168,"archive_set_error(&a->archive, GetLastError(),
				    ""Can't CreateFileW"");","archive_set_error(&a->archive, errno,
				    ""Can't CreateFileW"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_900.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_900.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_900.cpp,111,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_900.cpp,114,"[""member"", ""GetLastError_ret"", ""string""]","[""CreateFileW_ret"", ""macro"", ""==""]","set([u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;', u'h = CreateFileW ( path , GENERIC_READ , 0 , NULL , OPEN_EXISTING , FILE_FLAG_BACKUP_SEMANTICS , NULL )'])","set([4, 110])","[['GetLastError'], ['errno']]",2013-07-26T19:45:29,Brad King,14513706561783353927,547
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1041.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1041.cpp,1854,2165,1863,2176,"archive_set_error(&a->archive, GetLastError(),
			    ""Can't GetFileInformationByHandle"");","archive_set_error(&a->archive, errno,
			    ""Can't GetFileInformationByHandle"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_901.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_901.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_901.cpp,118,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_901.cpp,122,"[""member"", ""GetLastError_ret"", ""string""]","[""GetFileInformationByHandle_ret"", ""null"", ""==""]","set([u'struct archive_read_disk * a = ( struct archive_read_disk * ) _a ;', u'r = GetFileInformationByHandle ( h , & bhfi )'])","set([4, 119])","[['GetLastError'], ['errno']]",2013-07-26T19:45:29,Brad King,14513706561783353927,547
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1042.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1042.cpp,1909,2222,1911,2224,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			""Couldn't allocate memory"");","archive_set_error(&a->archive, ENOMEM,
			""Couldn't allocate memory"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_902.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_902.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_902.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_902.cpp,14,"[""member"", ""macro"", ""string""]","[""malloc_ret"", ""null"", ""==""]","set([u'struct archive_read_disk * a', u'outranges = ( FILE_ALLOCATED_RANGE_BUFFER * ) malloc ( outranges_size )'])","set([1, 12])","[['ARCHIVE_ERRNO_MISC'], ['ENOMEM']]",2013-07-26T19:45:29,Brad King,5089808708356969577,532
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1043.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1043.cpp,1923,2236,1932,2245,"archive_set_error(&a->archive,
					    ARCHIVE_ERRNO_MISC,
					    ""Couldn't allocate memory"");","archive_set_error(&a->archive, ENOMEM,
					    ""Couldn't allocate memory"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_903.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_903.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_903.cpp,35,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_903.cpp,35,"[""member"", ""macro"", ""string""]","[""malloc_ret"", ""null"", ""==""]","set([u'struct archive_read_disk * a', u'outranges = ( FILE_ALLOCATED_RANGE_BUFFER * ) malloc ( outranges_size )'])","set([32, 1])","[['ARCHIVE_ERRNO_MISC'], ['ENOMEM']]",2013-07-26T19:45:29,Brad King,5089808708356969577,532
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_disk_windows.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_393.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1044.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1044.cpp,1968,2280,1970,2283,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""DeviceIoControl Failed: %lu"", GetLastError());","archive_set_error(&a->archive, errno,
			    ""DeviceIoControl Failed: %lu"", GetLastError());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_904.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_904.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_904.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_904.cpp,73,"[""member"", ""macro"", ""string"", ""GetLastError_ret""]","[""DeviceIoControl_ret"", ""null"", ""!="", ""!""]","set([u'struct archive_read_disk * a', u'BOOL ret ;', u'ret = DeviceIoControl ( handle , FSCTL_QUERY_ALLOCATED_RANGES , & range , sizeof ( range ) , outranges , ( DWORD ) outranges_size , & retbytes , NULL )'])","set([1, 22, 25])","[['ARCHIVE_ERRNO_MISC'], ['errno']]",2013-07-26T19:45:29,Brad King,15413314426355235041,445
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_open_filename.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_395.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_395.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_395.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1046.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1046.cpp,98,103,115,163,,"archive_set_error(a, ENOMEM, ""No memory"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_907.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_907.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_907.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_907.cpp,8,[],[],"set([u'struct archive * a', u'struct read_file_data * mine = ( struct read_file_data * ) calloc ( 1 , sizeof ( * mine ) + wcslen ( wfilename ) * sizeof ( wchar_t ) ) ;'])","set([1, 4])","[[], ['archive_set_error', 'a', 'ENOMEM', 'No', 'memory']]",2013-07-26T19:45:29,Brad King,1805198593993291444,446
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_398.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_398.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_398.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1052.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1052.cpp,79,82,99,-1,"archive_set_error(_a, -1,
	    ""External compression programs not supported on this platform"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_911.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_911.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_911.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_911.cpp,-1,"[""struct archive *"", ""int"", ""string""]",[],"set([u'struct archive * a', u'struct read_file_data * mine = ( struct read_file_data * ) calloc ( 1 , sizeof ( * mine ) + wcslen ( wfilename ) * sizeof ( wchar_t ) ) ;'])","set([1, 4])","[['archive_set_error', '_a', '1', 'External', 'compression', 'programs', 'not', 'supported', 'on', 'this', 'platform'], []]",2013-07-26T19:45:29,Brad King,-9678706963157090417,447
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_filter_program.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_398.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_398.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_398.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1052.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1052.cpp,79,82,110,-1,"archive_set_error(&self->archive->archive, -1,
	    ""External compression programs not supported on this platform"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_912.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_912.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_912.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_912.cpp,-1,"[""member"", ""int"", ""string""]",[],"set([u'struct archive * a', u'struct read_file_data * mine = ( struct read_file_data * ) calloc ( 1 , sizeof ( * mine ) + wcslen ( wfilename ) * sizeof ( wchar_t ) ) ;'])","set([1, 4])","[['archive_set_error', '&self', 'archive', 'archive', '1', 'External', 'compression', 'programs', 'not', 'supported', 'on', 'this', 'platform'], []]",2013-07-26T19:45:29,Brad King,-19655507066692448550,448
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_filter_uu.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_399.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_399.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_399.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1055.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1055.cpp,485,491,493,501,"archive_set_error(&self->archive->archive,
			    ARCHIVE_ERRNO_MISC,
			    ""Insufficient compressed data"");",uudecode->state = ST_IGNORE;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_914.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_914.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_914.cpp,46,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_914.cpp,52,"[""member"", ""macro"", ""string""]","[""get_line_ret"", ""null"", ""<""]","set([u'uudecode -> state = ST_READ_UU', u'uudecode -> in_cnt = ( int ) len', u'uudecode -> in_cnt = 0', u'total ++', u'total = 0', u'uudecode -> state = ST_FIND_HEAD', u'uudecode -> state = ST_UUEND', u'uudecode -> state = ST_READ_BASE64', u'uudecode = ( struct uudecode * ) self -> data'])","set([128, 11, 166, 103, 200, 41, 209, 139, 72, 146, 180, 22, 105, 153, 191])","[['archive_set_error', '&self', 'archive', 'archive', 'ARCHIVE_ERRNO_MISC', 'Insufficient', 'compressed', 'data'], ['uudecode', 'state', 'ST_IGNORE']]",2013-07-26T19:45:29,Brad King,-4395964712971121937,449
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_cab.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_402.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_402.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_402.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1067.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1067.cpp,478,481,481,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""cab: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_917.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_917.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_917.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_917.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'uudecode -> state = ST_READ_UU', u'uudecode -> in_cnt = ( int ) len', u'uudecode -> in_cnt = 0', u'total ++', u'total = 0', u'uudecode -> state = ST_FIND_HEAD', u'uudecode -> state = ST_UUEND', u'uudecode -> state = ST_READ_BASE64', u'uudecode = ( struct uudecode * ) self -> data'])","set([128, 11, 166, 103, 200, 41, 209, 139, 72, 146, 180, 22, 105, 153, 191])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'cab', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-26T19:45:29,Brad King,7173471416832465161,450
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_cpio.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_403.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_403.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_403.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1070.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1070.cpp,339,340,342,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""cpio: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_918.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_918.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_918.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_918.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'uudecode -> state = ST_READ_UU', u'uudecode -> in_cnt = ( int ) len', u'uudecode -> in_cnt = 0', u'total ++', u'total = 0', u'uudecode -> state = ST_FIND_HEAD', u'uudecode -> state = ST_UUEND', u'uudecode -> state = ST_READ_BASE64', u'uudecode = ( struct uudecode * ) self -> data'])","set([128, 11, 166, 103, 200, 41, 209, 139, 72, 146, 180, 22, 105, 153, 191])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'cpio', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-26T19:45:29,Brad King,901040822794901045,451
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_iso9660.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_404.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_404.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_404.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1076.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1076.cpp,1286,1310,1309,1329,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""Ignoring out-of-order file @%jx (%s) %jd < %jd"",
		    (intmax_t)file->number,
		    iso9660->pathname.s,
		    (intmax_t)file->offset,
		    (intmax_t)iso9660->current_position);","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Ignoring out-of-order file @%jx (%s) %jd < %jd"",
			    (intmax_t)file->number,
			    iso9660->pathname.s,
			    (intmax_t)file->offset,
			    (intmax_t)iso9660->current_position);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_919.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_919.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_919.cpp,248,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_919.cpp,167,"[""member"", ""macro"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""bool"", ""macro"", ""!="", ""member"", ""member"", ""<"", ""&&""]","set([u'iso9660 = ( struct iso9660 * ) ( a -> format -> data )', u'iso9660 -> entry_sparse_offset = 0', u'struct archive_read * a', u'file = NULL', u'r64 = __archive_read_seek ( a , file -> offset , SEEK_SET )'])","set([8, 1, 92, 21, 157])","[[], []]",2013-07-26T19:45:29,Brad King,0,550
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_iso9660.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_404.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_404.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_404.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1080.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1080.cpp,2882,2888,2883,2889,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
	    ""Failed to connect 'CL' pointer to 'RE' rr_moved pointer of""
	    ""Rockridge extensions"");","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
	    ""Failed to connect 'CL' pointer to 'RE' rr_moved pointer of ""
	    ""Rockridge extensions: current position = %jd, CL offset = %jd"",
	    (intmax_t)iso9660->current_position, (intmax_t)file->cl_offset);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_920.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_920.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_920.cpp,203,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_920.cpp,203,[],"[""rede_add_entry_ret"", ""null"", ""<""]","set([u'( re = re_get_entry ( iso9660 ) ) != first_re', u'( d = rede_get_entry ( re ) ) != NULL'])","set([65, 50])","[[], ['current', 'position', '%jd', 'CL', 'offset', '%jd', 'intmax_t', 'iso9660', 'current_position', 'intmax_t', 'file', 'cl_offset']]",2013-07-26T19:45:29,Brad King,10726901843529205891,452
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_lha.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_405.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_405.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_405.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1082.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1082.cpp,445,446,448,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""lha: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_921.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_921.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_921.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_921.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'( re = re_get_entry ( iso9660 ) ) != first_re', u'( d = rede_get_entry ( re ) ) != NULL'])","set([65, 50])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'lha', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-26T19:45:29,Brad King,-1138773044406366052,453
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_407.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1086.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1086.cpp,757,770,760,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
        ""rar: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_922.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_922.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_922.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_922.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'( re = re_get_entry ( iso9660 ) ) != first_re', u'( d = rede_get_entry ( re ) ) != NULL'])","set([65, 50])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'rar', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-26T19:45:29,Brad King,5617560030629781230,454
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_407.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1087.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1087.cpp,842,857,847,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                          ""RAR volume support unavailable."");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_923.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_923.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_923.cpp,81,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_923.cpp,-1,"[""member"", ""macro"", ""constant""]","[""bool"", ""bool"", ""||""]","set([u'( re = re_get_entry ( iso9660 ) ) != first_re', u'( d = rede_get_entry ( re ) ) != NULL'])","set([65, 50])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'RAR', 'volume', 'support', 'unavailable'], []]",2013-07-26T19:45:29,Brad King,5937195885143328923,455
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_407.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1087.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1087.cpp,842,857,853,859,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                          ""RAR encryption support unavailable."");","(rar->main_flags & MHD_PASSWORD)
      {
        archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                          ""RAR encryption support unavailable."");
        return (ARCHIVE_FATAL);
      };",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_924.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_924.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_924.cpp,87,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_924.cpp,78,"[""member"", ""macro"", ""constant""]","[""bool""]","set([u'rar -> encryptver = * ( p + 7 + sizeof ( rar -> reserved1 ) + sizeof ( rar -> reserved2 ) )', u'rar -> main_flags = archive_le16dec ( p + 3 )', u'rar = ( struct rar * ) ( a -> format -> data )', u'skip = archive_le16dec ( p + 5 )'])","set([16, 56, 74, 55])","[[], ['rar', 'main_flags', '&', 'MHD_PASSWORD', 'return', 'ARCHIVE_FATAL']]",2013-07-26T19:45:29,Brad King,-2773425908662595901,456
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_407.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1087.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1087.cpp,842,857,853,861,,"archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
                          ""RAR encryption support unavailable."");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_925.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_925.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_925.cpp,87,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_925.cpp,80,"[""member"", ""macro"", ""constant""]","[""bool""]","set([u'rar -> encryptver = * ( p + 7 + sizeof ( rar -> reserved1 ) + sizeof ( rar -> reserved2 ) )', u'rar -> main_flags = archive_le16dec ( p + 3 )', u'rar = ( struct rar * ) ( a -> format -> data )', u'struct archive_read * a'])","set([16, 1, 74, 55])","[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'RAR', 'encryption', 'support', 'unavailable']]",2013-07-26T19:45:29,Brad King,-674539078461012674,457
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_407.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1095.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1095.cpp,1272,1467,1276,1481,,"archive_set_error(&a->archive, ENOMEM, ""Couldn't allocate memory."");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_930.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_930.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_930.cpp,268,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_930.cpp,290,[],"[""bool""]","set([u'rar -> nodes ++', u'rar = ( struct rar * ) ( a -> format -> data )', u'struct archive_read * a'])","set([1, 20, 286])","[[], ['archive_set_error', '&a', 'archive', 'ENOMEM', 'Couldn', 't', 'allocate', 'memory']]",2013-07-26T19:45:29,Brad King,12732937391818048874,533
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_rar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_407.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_407.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1095.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1095.cpp,1272,1467,1274,1505,,"archive_set_error(&a->archive, ENOMEM, ""Couldn't allocate memory."");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_931.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_931.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_931.cpp,266,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_931.cpp,314,[],"[""member"", ""null"", ""=="", ""!""]","set([u'rar -> filename_save = ( char * ) realloc ( rar -> filename_save , filename_size + 1 )', u'struct archive_read * a', u'rar = ( struct rar * ) ( a -> format -> data )'])","set([1, 306, 20])","[[], ['archive_set_error', '&a', 'archive', 'ENOMEM', 'Couldn', 't', 'allocate', 'memory']]",2013-07-26T19:45:29,Brad King,12732937391818048874,533
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_tar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_408.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_408.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_408.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1099.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1099.cpp,383,384,386,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""tar: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_932.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_932.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_932.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_932.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'rar -> filename_save = ( char * ) realloc ( rar -> filename_save , filename_size + 1 )', u'struct archive_read * a', u'rar = ( struct rar * ) ( a -> format -> data )'])","set([1, 306, 20])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'tar', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-26T19:45:29,Brad King,7869671055639496956,458
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_409.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_409.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_409.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1104.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1104.cpp,373,750,379,764,"archive_set_error(&a->archive, ENOMEM,
			    ""Can't allocate memory for Symlink"");","archive_set_error(&a->archive, ENOMEM,
				    ""Can't allocate memory for Symlink"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_939.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_939.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_939.cpp,49,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_939.cpp,77,"[""member"", ""macro"", ""string""]","[""archive_entry_copy_symlink_l_ret"", ""null"", ""!=""]",set([u'struct archive_read * a']),set([1]),"[[], []]",2013-07-26T19:45:29,Brad King,0,550
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_409.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_409.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_409.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1106.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1106.cpp,439,850,442,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
		    ""zip: unknown keyword ``%s''"", key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_941.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_941.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_941.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_941.cpp,-1,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]",set([u'struct archive_read * a']),set([1]),"[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'zip', 'unknown', 'keyword', '%s', 'key'], []]",2013-07-26T19:45:29,Brad King,14626004130740644188,459
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_409.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_409.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_409.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1110.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1110.cpp,781,1222,788,1231,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""ZIP compressed data is wrong size (read %jd, expected %jd)"",
			    (intmax_t)zip->entry_compressed_bytes_read,
			    (intmax_t)zip->entry->compressed_size);","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""ZIP compressed data is wrong size ""
			    ""(read %jd, expected %jd)"",
			    (intmax_t)zip->entry_compressed_bytes_read,
			    (intmax_t)zip->entry->compressed_size);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_944.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_944.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_944.cpp,56,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_944.cpp,58,"[""member"", ""macro"", ""string"", ""member"", ""member""]","[""member"", ""member"", ""!=""]","set([u'zip -> entry_crc32 = crc32 ( zip -> entry_crc32 , * buff , ( unsigned ) * size )', u'zip -> unconsumed = 0', u'struct zip * zip = ( struct zip * ) ( a -> format -> data ) ;'])","set([26, 51, 5])","[[], []]",2013-07-26T19:45:29,Brad King,0,550
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_409.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_409.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_409.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1111.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1111.cpp,797,1241,798,1242,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""ZIP uncompressed data is wrong size (read %jd, expected %jd)"",
			    (intmax_t)zip->entry_uncompressed_bytes_read,
			    (intmax_t)zip->entry->uncompressed_size);","archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""ZIP uncompressed data is wrong size ""
			    ""(read %jd, expected %jd)"",
			    (intmax_t)zip->entry_uncompressed_bytes_read,
			    (intmax_t)zip->entry->uncompressed_size);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_945.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_945.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_945.cpp,66,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_945.cpp,69,"[""member"", ""macro"", ""string"", ""member"", ""member""]","[""bool"", ""bool"", ""!=""]","set([u'zip -> entry_crc32 = crc32 ( zip -> entry_crc32 , * buff , ( unsigned ) * size )', u'zip -> unconsumed = 0', u'struct zip * zip = ( struct zip * ) ( a -> format -> data ) ;'])","set([26, 51, 5])","[[], []]",2013-07-26T19:45:29,Brad King,0,550
35df7c8ba8854e97bd6994c4d1143f57535ed6f2,"libarchive 3.1.2 (reduced)

Extract upstream libarchive using the following shell code.

url=git://github.com/libarchive/libarchive.git &&
v=3.1.2 &&
r=19f23e19 &&
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
"" &&
mkdir libarchive-$v-g$r-reduced &&
git clone $url libarchive-git &&
date=$(cd libarchive-git && git log -n 1 --format='%cd' $r) &&
(cd libarchive-git && git archive --format=tar $r -- $paths) |
(cd libarchive-$v-g$r-reduced && tar xv) &&
fromdos libarchive-$v-g$r-reduced/build/cmake/Find*.cmake &&
echo ""g$r date: $date""",[],libarchive/archive_read_support_format_zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_409.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_409.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_409.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1115.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1115.cpp,940,1419,950,-1,"archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
			    ""Can't initialize ZIP decompression."");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_947.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_947.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_947.cpp,31,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_947.cpp,-1,"[""member"", ""macro"", ""constant""]","[""inflateInit2_ret"", ""macro"", ""!=""]","set([u'zip -> entry_crc32 = crc32 ( zip -> entry_crc32 , * buff , ( unsigned ) * size )', u'zip -> unconsumed = 0', u'struct zip * zip = ( struct zip * ) ( a -> format -> data ) ;'])","set([26, 51, 5])","[['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Can', 't', 'initialize', 'ZIP', 'decompression'], []]",2013-07-26T19:45:29,Brad King,10864122764354403881,460
4e5cb398ae392079031ae6a880569349c29770a6,"Merge branch 'master' into vs12-generator

Resolve conflicts in Tests/Preprocess/CMakeLists.txt by keeping
the side from 'master'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1122.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1122.cpp,242,270,256,288,"fprintf(fout, ""SET(%s \""%s\"")\n"",
              rulesOverrideBase, rulesOverridePath2);","fprintf(fout, ""SET(%s \""%s\"")\n"",
                rulesOverrideBase.c_str(), rulesOverridePath2);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_948.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_948.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_948.cpp,236,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_948.cpp,268,"[""FILE *"", ""string"", ""const char *"", ""unkown""]","[""unkown"", ""this -> Makefile -> GetDefinition_ret""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'this -> SrcFileSignature = true', u'this -> BinaryDirectory += ""/CMakeTmp""', u'std :: string rulesOverrideBase = ""CMAKE_USER_MAKE_RULES_OVERRIDE"" ;', u'this -> SrcFileSignature = false'])","set([232, 257, 5, 150, 109])","[[], ['c_str']]",2013-06-28T22:29:54,Brad King,604061038622547682,549
4e5cb398ae392079031ae6a880569349c29770a6,"Merge branch 'master' into vs12-generator

Resolve conflicts in Tests/Preprocess/CMakeLists.txt by keeping
the side from 'master'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1122.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1122.cpp,242,270,262,-1,"fprintf(fout, ""PROJECT(CMAKE_TRY_COMPILE %s)\n"", lang);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_949.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_949.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_949.cpp,242,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_949.cpp,-1,"[""FILE *"", ""string"", ""const char *""]","[""const char *""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'this -> SrcFileSignature = true', u'this -> BinaryDirectory += ""/CMakeTmp""', u'std :: string rulesOverrideBase = ""CMAKE_USER_MAKE_RULES_OVERRIDE"" ;', u'this -> SrcFileSignature = false'])","set([232, 257, 5, 150, 109])","[['fprintf', 'fout', 'PROJECT', 'CMAKE_TRY_COMPILE', '%s', '\\n', 'lang'], []]",2013-06-28T22:29:54,Brad King,-3842753962263011884,461
4e5cb398ae392079031ae6a880569349c29770a6,"Merge branch 'master' into vs12-generator

Resolve conflicts in Tests/Preprocess/CMakeLists.txt by keeping
the side from 'master'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1122.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1122.cpp,242,270,288,297,"fprintf(fout, ""SET(CMAKE_%s_FLAGS \"""", lang);","fprintf(fout, ""SET(CMAKE_%s_FLAGS \"""", li->c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_950.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_950.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_950.cpp,268,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_950.cpp,277,"[""FILE *"", ""string"", ""const char *""]","[""const char *""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'std :: set < std :: string > testLangs ;', u'std :: set < std :: string > :: iterator li = testLangs . begin ( ) ;'])","set([232, 274, 198])","[['lang'], ['li', 'c_str']]",2013-06-28T22:29:54,Brad King,-5353152203913633487,462
4e5cb398ae392079031ae6a880569349c29770a6,"Merge branch 'master' into vs12-generator

Resolve conflicts in Tests/Preprocess/CMakeLists.txt by keeping
the side from 'master'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1122.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1122.cpp,242,270,294,303,"fprintf(fout, "" ${COMPILE_DEFINITIONS}\"")\n"");","fprintf(fout, "" ${COMPILE_DEFINITIONS}\"")\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_951.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_951.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_951.cpp,274,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_951.cpp,283,"[""FILE *"", ""string""]","[""const char *""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'std :: set < std :: string > testLangs ;', u'std :: set < std :: string > :: iterator li = testLangs . begin ( ) ;'])","set([232, 274, 198])","[[], []]",2013-06-28T22:29:54,Brad King,0,550
4e5cb398ae392079031ae6a880569349c29770a6,"Merge branch 'master' into vs12-generator

Resolve conflicts in Tests/Preprocess/CMakeLists.txt by keeping
the side from 'master'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1122.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1122.cpp,242,270,304,314,"fprintf(fout,""%s "",compileFlags[i].c_str());","fprintf(fout,""%s "",compileDefs[i].c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_952.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_952.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_952.cpp,284,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_952.cpp,294,"[""FILE *"", ""string"", ""compileFlags [ i ] . c_str_ret""]","[""null"", ""compileFlags . size_ret"", ""<""]","set([u'std :: vector < std :: string > compileDefs ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'size_t i = 0 ;'])","set([232, 11, 292])","[['compileFlags[i]'], ['compileDefs[i]']]",2013-06-28T22:29:54,Brad King,168522055845398188,463
4e5cb398ae392079031ae6a880569349c29770a6,"Merge branch 'master' into vs12-generator

Resolve conflicts in Tests/Preprocess/CMakeLists.txt by keeping
the side from 'master'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1123.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1123.cpp,377,387,379,389,"fprintf(fout, ""ADD_EXECUTABLE(%s \""%s\"")\n"", targetName, source.c_str());","fprintf(fout, ""ADD_EXECUTABLE(%s"", targetName);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_954.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_954.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_954.cpp,359,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_954.cpp,369,"[""FILE *"", ""string"", ""char *"", ""source . c_str_ret""]","[""targets . empty_ret"", ""!""]","set([u'cmExportTryCompileFileGenerator tcfg ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'std :: vector < cmTarget * > targets ;'])","set([232, 308, 14, 303])","[['\\', '%s\\', '\\n', 'source', 'c_str'], []]",2013-06-28T22:29:54,Brad King,-1497054561474194483,464
4e5cb398ae392079031ae6a880569349c29770a6,"Merge branch 'master' into vs12-generator

Resolve conflicts in Tests/Preprocess/CMakeLists.txt by keeping
the side from 'master'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1123.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1123.cpp,377,387,380,393,,"fprintf(fout, "" \""%s\"""", si->c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_955.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_955.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_955.cpp,360,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_955.cpp,373,[],"[""tcfg . GenerateImportFile_ret"", ""!""]","set([u'std :: vector < std :: string > :: iterator si = sources . begin ( ) ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'std :: vector < std :: string > sources ;'])","set([232, 370, 21])","[[], ['fprintf', 'fout', '\\', '%s\\', 'si', 'c_str']]",2013-06-28T22:29:54,Brad King,-9865452534064575706,465
4e5cb398ae392079031ae6a880569349c29770a6,"Merge branch 'master' into vs12-generator

Resolve conflicts in Tests/Preprocess/CMakeLists.txt by keeping
the side from 'master'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_412.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1123.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1123.cpp,377,387,380,401,,"fprintf(fout, "")\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_956.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_956.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_956.cpp,360,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_956.cpp,381,[],"[""targets . empty_ret"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmExportTryCompileFileGenerator tcfg ;', u'std :: vector < cmTarget * > targets ;'])","set([232, 308, 14])","[[], ['fprintf', 'fout', '\\n']]",2013-06-28T22:29:54,Brad King,-5701891786934548446,513
482f1122ad5db4c51b26a6e943b4bb5ef3d800cc,"try_compile: Add signature to allow multiple SOURCES

Extend the signature

 try_compile(RESULT_VAR <bindir> <srcfile> ...)

to allow multiple sources as

 try_compile(RESULT_VAR <bindir> SOURCES <srcfile>... ...)

Process the sources to generate a CMakeLists.txt that enables all needed
languages.

Teach the TryCompile test to try cases with two sources of the same
language and of mixed languages.  Teach RunCMake.try_compile to cover
error cases for the signature.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_416.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1131.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1131.cpp,222,270,236,288,"fprintf(fout, ""SET(%s \""%s\"")\n"",
              rulesOverrideBase, rulesOverridePath2);","fprintf(fout, ""SET(%s \""%s\"")\n"",
                rulesOverrideBase.c_str(), rulesOverridePath2);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_957.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_957.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_957.cpp,216,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_957.cpp,268,"[""FILE *"", ""string"", ""const char *"", ""unkown""]","[""unkown"", ""this -> Makefile -> GetDefinition_ret""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'this -> SrcFileSignature = true', u'this -> BinaryDirectory += ""/CMakeTmp""', u'std :: string rulesOverrideBase = ""CMAKE_USER_MAKE_RULES_OVERRIDE"" ;', u'this -> SrcFileSignature = false'])","set([232, 257, 5, 150, 109])","[[], ['c_str']]",2013-06-06T18:35:20,Brad King,604061038622547682,549
482f1122ad5db4c51b26a6e943b4bb5ef3d800cc,"try_compile: Add signature to allow multiple SOURCES

Extend the signature

 try_compile(RESULT_VAR <bindir> <srcfile> ...)

to allow multiple sources as

 try_compile(RESULT_VAR <bindir> SOURCES <srcfile>... ...)

Process the sources to generate a CMakeLists.txt that enables all needed
languages.

Teach the TryCompile test to try cases with two sources of the same
language and of mixed languages.  Teach RunCMake.try_compile to cover
error cases for the signature.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_416.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1131.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1131.cpp,222,270,242,-1,"fprintf(fout, ""PROJECT(CMAKE_TRY_COMPILE %s)\n"", lang);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_958.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_958.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_958.cpp,222,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_958.cpp,-1,"[""FILE *"", ""string"", ""const char *""]","[""const char *""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'this -> SrcFileSignature = true', u'this -> BinaryDirectory += ""/CMakeTmp""', u'std :: string rulesOverrideBase = ""CMAKE_USER_MAKE_RULES_OVERRIDE"" ;', u'this -> SrcFileSignature = false'])","set([232, 257, 5, 150, 109])","[['fprintf', 'fout', 'PROJECT', 'CMAKE_TRY_COMPILE', '%s', '\\n', 'lang'], []]",2013-06-06T18:35:20,Brad King,-3842753962263011884,461
482f1122ad5db4c51b26a6e943b4bb5ef3d800cc,"try_compile: Add signature to allow multiple SOURCES

Extend the signature

 try_compile(RESULT_VAR <bindir> <srcfile> ...)

to allow multiple sources as

 try_compile(RESULT_VAR <bindir> SOURCES <srcfile>... ...)

Process the sources to generate a CMakeLists.txt that enables all needed
languages.

Teach the TryCompile test to try cases with two sources of the same
language and of mixed languages.  Teach RunCMake.try_compile to cover
error cases for the signature.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_416.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1131.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1131.cpp,222,270,268,297,"fprintf(fout, ""SET(CMAKE_%s_FLAGS \"""", lang);","fprintf(fout, ""SET(CMAKE_%s_FLAGS \"""", li->c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_959.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_959.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_959.cpp,248,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_959.cpp,277,"[""FILE *"", ""string"", ""const char *""]","[""const char *""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'std :: set < std :: string > testLangs ;', u'std :: set < std :: string > :: iterator li = testLangs . begin ( ) ;'])","set([232, 274, 198])","[['lang'], ['li', 'c_str']]",2013-06-06T18:35:20,Brad King,-5353152203913633487,462
482f1122ad5db4c51b26a6e943b4bb5ef3d800cc,"try_compile: Add signature to allow multiple SOURCES

Extend the signature

 try_compile(RESULT_VAR <bindir> <srcfile> ...)

to allow multiple sources as

 try_compile(RESULT_VAR <bindir> SOURCES <srcfile>... ...)

Process the sources to generate a CMakeLists.txt that enables all needed
languages.

Teach the TryCompile test to try cases with two sources of the same
language and of mixed languages.  Teach RunCMake.try_compile to cover
error cases for the signature.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_416.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1131.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1131.cpp,222,270,274,303,"fprintf(fout, "" ${COMPILE_DEFINITIONS}\"")\n"");","fprintf(fout, "" ${COMPILE_DEFINITIONS}\"")\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_960.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_960.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_960.cpp,254,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_960.cpp,283,"[""FILE *"", ""string""]","[""const char *""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'std :: set < std :: string > testLangs ;', u'std :: set < std :: string > :: iterator li = testLangs . begin ( ) ;'])","set([232, 274, 198])","[[], []]",2013-06-06T18:35:20,Brad King,0,550
482f1122ad5db4c51b26a6e943b4bb5ef3d800cc,"try_compile: Add signature to allow multiple SOURCES

Extend the signature

 try_compile(RESULT_VAR <bindir> <srcfile> ...)

to allow multiple sources as

 try_compile(RESULT_VAR <bindir> SOURCES <srcfile>... ...)

Process the sources to generate a CMakeLists.txt that enables all needed
languages.

Teach the TryCompile test to try cases with two sources of the same
language and of mixed languages.  Teach RunCMake.try_compile to cover
error cases for the signature.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_416.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1132.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1132.cpp,357,387,359,389,"fprintf(fout, ""ADD_EXECUTABLE(%s \""%s\"")\n"", targetName, source.c_str());","fprintf(fout, ""ADD_EXECUTABLE(%s"", targetName);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_962.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_962.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_962.cpp,339,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_962.cpp,369,"[""FILE *"", ""string"", ""char *"", ""source . c_str_ret""]","[""tcfg . GenerateImportFile_ret"", ""!""]","set([u'targetName = targetNameBuf', u'std :: vector < cmTarget * > targets ;', u'cmExportTryCompileFileGenerator tcfg ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([232, 308, 14, 303])","[['\\', '%s\\', '\\n', 'source', 'c_str'], []]",2013-06-06T18:35:20,Brad King,-1497054561474194483,464
482f1122ad5db4c51b26a6e943b4bb5ef3d800cc,"try_compile: Add signature to allow multiple SOURCES

Extend the signature

 try_compile(RESULT_VAR <bindir> <srcfile> ...)

to allow multiple sources as

 try_compile(RESULT_VAR <bindir> SOURCES <srcfile>... ...)

Process the sources to generate a CMakeLists.txt that enables all needed
languages.

Teach the TryCompile test to try cases with two sources of the same
language and of mixed languages.  Teach RunCMake.try_compile to cover
error cases for the signature.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_416.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1132.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1132.cpp,357,387,360,393,,"fprintf(fout, "" \""%s\"""", si->c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_963.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_963.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_963.cpp,340,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_963.cpp,373,[],"[""targets . empty_ret"", ""!""]","set([u'std :: vector < std :: string > sources ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'std :: vector < std :: string > :: iterator si = sources . begin ( ) ;'])","set([232, 370, 21])","[[], ['fprintf', 'fout', '\\', '%s\\', 'si', 'c_str']]",2013-06-06T18:35:20,Brad King,-9865452534064575706,465
482f1122ad5db4c51b26a6e943b4bb5ef3d800cc,"try_compile: Add signature to allow multiple SOURCES

Extend the signature

 try_compile(RESULT_VAR <bindir> <srcfile> ...)

to allow multiple sources as

 try_compile(RESULT_VAR <bindir> SOURCES <srcfile>... ...)

Process the sources to generate a CMakeLists.txt that enables all needed
languages.

Teach the TryCompile test to try cases with two sources of the same
language and of mixed languages.  Teach RunCMake.try_compile to cover
error cases for the signature.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_416.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_416.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1132.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1132.cpp,357,387,360,401,,"fprintf(fout, "")\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_964.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_964.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_964.cpp,340,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_964.cpp,381,[],"[""targets . empty_ret"", ""!""]","set([u'std :: vector < cmTarget * > targets ;', u'cmExportTryCompileFileGenerator tcfg ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([232, 308, 14])","[[], ['fprintf', 'fout', '\\n']]",2013-06-06T18:35:20,Brad King,-5701891786934548446,513
d06db7ebe80636876d9701064b16cec9d3e2e3cb,"try_compile: Refactor argument processing

Process all arguments in a single loop using a simple state machine.
While at it, fix some error message typos.  Also allow LINK_LIBRARIES
with no actual libraries to disable use of the -DLINK_LIBRARIES=...
from the CMAKE_FLAGS.  This was already possible in the old logic if
LINK_LIBRARIES was immediately followed by another keyword argument
instead of the end of the argument list, so allow it in general.
Update the RunCMake.try_compile test cases accordingly.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_419.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_419.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_419.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1137.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1137.cpp,297,277,304,284,"fprintf(fout,""%s "",compileFlags[i].c_str());","fprintf(fout,""%s "",compileDefs[i].c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_965.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_965.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_965.cpp,284,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_965.cpp,264,"[""FILE *"", ""string"", ""compileFlags [ i ] . c_str_ret""]","[""null"", ""compileFlags . size_ret"", ""<""]","set([u'std :: vector < std :: string > compileDefs ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'size_t i = 0 ;'])","set([11, 180, 262])","[['compileFlags[i]'], ['compileDefs[i]']]",2013-05-31T14:01:50,Brad King,168522055845398188,463
ddac8d3d2d027dd50d729918078f57628855a568,Fix spelling and typos (affecting binary data / module messages),[],Utilities/cmlibarchive/libarchive/archive_write_set_format_xar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_422.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_422.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_422.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1142.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1142.cpp,414,414,414,414,"archive_set_error(&(a->archive),
			    ARCHIVE_ERRNO_MISC,
			    ""Unkonwn checksum name: `%s'"",
			    value);","archive_set_error(&(a->archive),
			    ARCHIVE_ERRNO_MISC,
			    ""Unknown checksum name: `%s'"",
			    value);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_966.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_966.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_966.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_966.cpp,15,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'const char * value', u'struct archive_write * a'])",set([1]),"[['Unkonwn'], ['Unknown']]",2013-05-07T12:39:19,Brad King,-999875999112998610,466
ddac8d3d2d027dd50d729918078f57628855a568,Fix spelling and typos (affecting binary data / module messages),[],Utilities/cmlibarchive/libarchive/archive_write_set_format_xar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_422.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_422.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_422.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1143.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1143.cpp,448,448,448,448,"archive_set_error(&(a->archive),
			    ARCHIVE_ERRNO_MISC,
			    ""Unkonwn compression name: `%s'"",
			    value);","archive_set_error(&(a->archive),
			    ARCHIVE_ERRNO_MISC,
			    ""Unknown compression name: `%s'"",
			    value);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_967.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_967.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_967.cpp,49,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_967.cpp,49,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'const char * value', u'struct archive_write * a'])",set([1]),"[['Unkonwn'], ['Unknown']]",2013-05-07T12:39:19,Brad King,-999875999112998610,466
ddac8d3d2d027dd50d729918078f57628855a568,Fix spelling and typos (affecting binary data / module messages),[],Utilities/cmlibarchive/libarchive/archive_write_set_format_xar.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_422.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_422.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_422.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1144.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1144.cpp,485,485,485,485,"archive_set_error(&(a->archive),
			    ARCHIVE_ERRNO_MISC,
			    ""Unkonwn checksum name: `%s'"",
			    value);","archive_set_error(&(a->archive),
			    ARCHIVE_ERRNO_MISC,
			    ""Unknown checksum name: `%s'"",
			    value);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_968.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_968.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_968.cpp,86,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_968.cpp,86,"[""member"", ""macro"", ""string"", ""const char *""]","[""strcmp_ret"", ""null"", ""=="", ""!""]","set([u'const char * value', u'struct archive_write * a'])",set([1]),"[['Unkonwn'], ['Unknown']]",2013-05-07T12:39:19,Brad King,-999875999112998610,466
236133e79e2d047810eeba90915e38d9861e2a22,"Handle targets in the LINK_LIBRARIES of try_compile.

Imported targets are re-exported so that they can be used by the
try_compile generated code with target_link_libraries.

This makes the use of the cmake_expand_imported_targets macro
obsolete. The macro is not able to expand the generator expressions
which may appear in the IMPORTED_LINK_INTERFACE_LIBRARIES content.
Instead it just sees them as 'not a target'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_423.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_423.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_423.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1146.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1146.cpp,286,372,290,-1,"f(targetNameBuf, ""cmTryCompileExec%u"",
            cmSystemTools::RandomSeed());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_971.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_971.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_971.cpp,273,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_971.cpp,-1,"[""char *"", ""string"", ""cmSystemTools :: RandomSeed_ret""]","[""const char *""]","set([u'const char * value', u'struct archive_write * a'])",set([1]),"[['f', 'targetNameBuf', 'cmTryCompileExec%u', 'cmSystemTools', 'RandomSeed'], []]",2013-02-22T13:35:39,Brad King,15186604548073405147,56
236133e79e2d047810eeba90915e38d9861e2a22,"Handle targets in the LINK_LIBRARIES of try_compile.

Imported targets are re-exported so that they can be used by the
try_compile generated code with target_link_libraries.

This makes the use of the cmake_expand_imported_targets macro
obsolete. The macro is not able to expand the generator expressions
which may appear in the IMPORTED_LINK_INTERFACE_LIBRARIES content.
Instead it just sees them as 'not a target'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_423.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_423.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_423.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1146.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1146.cpp,286,372,295,375,"fprintf(fout, ""SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY \""%s\"")\n"",
            this->BinaryDirectory.c_str());","f(fout, ""SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY \""%s\"")\n"",
            this->BinaryDirectory.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_972.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_972.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_972.cpp,278,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_972.cpp,355,"[""FILE *"", ""string"", ""this -> BinaryDirectory . c_str_ret""]","[""const char *""]","set([u'std :: vector < cmTarget * > targets ;', u'cmExportTryCompileFileGenerator tcfg ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'this -> SrcFileSignature = true', u'this -> BinaryDirectory += ""/CMakeTmp""', u'this -> BinaryDirectory = argv [ 1 ] . c_str ( )', u'this -> SrcFileSignature = false'])","set([2, 5, 72, 298, 200, 148, 156])","[['fprintf'], ['f']]",2013-02-22T13:35:39,Brad King,5204138487365910483,57
236133e79e2d047810eeba90915e38d9861e2a22,"Handle targets in the LINK_LIBRARIES of try_compile.

Imported targets are re-exported so that they can be used by the
try_compile generated code with target_link_libraries.

This makes the use of the cmake_expand_imported_targets macro
obsolete. The macro is not able to expand the generator expressions
which may appear in the IMPORTED_LINK_INTERFACE_LIBRARIES content.
Instead it just sees them as 'not a target'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_423.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_423.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_423.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1146.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1146.cpp,286,372,299,381,"fprintf(fout, ""TARGET_LINK_LIBRARIES(%s ${LINK_LIBRARIES})\n"",targetName);","fprintf(fout,
              ""TARGET_LINK_LIBRARIES(%s ${LINK_LIBRARIES})\n"",targetName);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_973.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_973.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_973.cpp,282,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_973.cpp,361,"[""FILE *"", ""string"", ""char *""]","[""const char *""]","set([u'bool useOldLinkLibs = true ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'targetName = targetNameBuf', u'useOldLinkLibs = false'])","set([200, 74, 293, 87])","[[], []]",2013-02-22T13:35:39,Brad King,0,550
236133e79e2d047810eeba90915e38d9861e2a22,"Handle targets in the LINK_LIBRARIES of try_compile.

Imported targets are re-exported so that they can be used by the
try_compile generated code with target_link_libraries.

This makes the use of the cmake_expand_imported_targets macro
obsolete. The macro is not able to expand the generator expressions
which may appear in the IMPORTED_LINK_INTERFACE_LIBRARIES content.
Instead it just sees them as 'not a target'.",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_423.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_423.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_423.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1146.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1146.cpp,286,372,300,386,,"fprintf(fout, ""TARGET_LINK_LIBRARIES(%s %s)\n"",
              targetName,
              libsToLink.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_974.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_974.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_974.cpp,283,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_974.cpp,366,"[""FILE *""]","[""const char *""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[[], ['fprintf', 'fout', 'TARGET_LINK_LIBRARIES', '%s', '%s', '\\n', 'targetName', 'libsToLink', 'c_str']]",2013-02-22T13:35:39,Brad King,-14289603105897112560,58
badb40d0f841dcfc4d098e59c5c570e73767cf68,"Merge branch 'master' into sublime-text-2-generator

Resolve conflict in Source/cmDocumentVariables.cxx by adding both
variables.",[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_424.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_424.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_424.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1147.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1147.cpp,365,335,379,-1,"sprintf(fwdName, KWSYS_NAMESPACE_STRING ""pew9xfwd_%ld_%p.exe"",
            GetCurrentProcessId(), cp);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_975.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_975.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_975.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_975.cpp,-1,[],"[""member"", ""macro"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'fwdName', 'KWSYS_NAMESPACE_STRING', 'pew9xfwd_%ld_%p', 'exe', 'GetCurrentProcessId', 'cp'], []]",2013-02-19T19:42:00,Brad King,16239029922523690180,535
badb40d0f841dcfc4d098e59c5c570e73767cf68,"Merge branch 'master' into sublime-text-2-generator

Resolve conflict in Source/cmDocumentVariables.cxx by adding both
variables.",[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_424.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_424.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_424.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1147.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1147.cpp,365,335,395,-1,"sprintf(win9x, ""%s%s"", tempDir, fwdName);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_976.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_976.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_976.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_976.cpp,-1,"[""malloc_ret"", ""string"", ""char *"", ""char *""]","[""malloc_ret"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'win9x', '%s%s', 'tempDir', 'fwdName'], []]",2013-02-19T19:42:00,Brad King,8426305006996968910,536
badb40d0f841dcfc4d098e59c5c570e73767cf68,"Merge branch 'master' into sublime-text-2-generator

Resolve conflict in Source/cmDocumentVariables.cxx by adding both
variables.",[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_424.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_424.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_424.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1148.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1148.cpp,1815,1653,1847,-1,"sprintf(realCommand, ""%s %p %p %p %d %s"", cp->Win9x,
            si->ErrorPipeWrite, cp->Win9xResumeEvent, cp->Win9xKillEvent,
            cp->HideWindow, cp->Commands[index]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_977.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_977.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_977.cpp,161,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_977.cpp,-1,"[""malloc_ret"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""malloc_ret"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'realCommand', '%s', '%p', '%p', '%p', '%d', '%s', 'cp', 'Win9x', 'si', 'ErrorPipeWrite', 'cp', 'Win9xResumeEvent', 'cp', 'Win9xKillEvent', 'cp', 'HideWindow', 'cp', 'Commands[index]'], []]",2013-02-19T19:42:00,Brad King,35601108973641368407,537
95a9c80cacea50e2b5d52d67d0a7f5c9b50192dd,"Merge topic 'LINK_LIBRARIES-property' into rpath-use-implicit-link-dirs

Resolve a logical conflict in the signature of cmTarget::GetLinkClosure.",[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_425.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_425.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_425.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1149.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1149.cpp,365,335,379,-1,"sprintf(fwdName, KWSYS_NAMESPACE_STRING ""pew9xfwd_%ld_%p.exe"",
            GetCurrentProcessId(), cp);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_978.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_978.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_978.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_978.cpp,-1,[],"[""member"", ""macro"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'fwdName', 'KWSYS_NAMESPACE_STRING', 'pew9xfwd_%ld_%p', 'exe', 'GetCurrentProcessId', 'cp'], []]",2013-02-14T15:18:31,Brad King,16239029922523690180,535
95a9c80cacea50e2b5d52d67d0a7f5c9b50192dd,"Merge topic 'LINK_LIBRARIES-property' into rpath-use-implicit-link-dirs

Resolve a logical conflict in the signature of cmTarget::GetLinkClosure.",[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_425.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_425.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_425.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1149.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1149.cpp,365,335,395,-1,"sprintf(win9x, ""%s%s"", tempDir, fwdName);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_979.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_979.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_979.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_979.cpp,-1,"[""malloc_ret"", ""string"", ""char *"", ""char *""]","[""malloc_ret"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'win9x', '%s%s', 'tempDir', 'fwdName'], []]",2013-02-14T15:18:31,Brad King,8426305006996968910,536
95a9c80cacea50e2b5d52d67d0a7f5c9b50192dd,"Merge topic 'LINK_LIBRARIES-property' into rpath-use-implicit-link-dirs

Resolve a logical conflict in the signature of cmTarget::GetLinkClosure.",[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_425.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_425.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_425.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1150.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1150.cpp,1815,1653,1847,-1,"sprintf(realCommand, ""%s %p %p %p %d %s"", cp->Win9x,
            si->ErrorPipeWrite, cp->Win9xResumeEvent, cp->Win9xKillEvent,
            cp->HideWindow, cp->Commands[index]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_980.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_980.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_980.cpp,161,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_980.cpp,-1,"[""malloc_ret"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""malloc_ret"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'realCommand', '%s', '%p', '%p', '%p', '%d', '%s', 'cp', 'Win9x', 'si', 'ErrorPipeWrite', 'cp', 'Win9xResumeEvent', 'cp', 'Win9xKillEvent', 'cp', 'HideWindow', 'cp', 'Commands[index]'], []]",2013-02-14T15:18:31,Brad King,35601108973641368407,537
7df291fb6e6971f60cc7b338bcaa81069ed11757,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/SystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_427.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_427.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_427.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1155.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1155.cpp,196,196,201,-1,"fprintf(stderr, ""No current working directory.\n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_981.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_981.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_981.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_981.cpp,-1,"[""unkown"", ""constant""]","[""const char *"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['fprintf', 'stderr', 'No', 'current', 'working', 'directory', '\\n'], []]",2013-02-07T13:34:56,Brad King,25631361648025746953,467
7df291fb6e6971f60cc7b338bcaa81069ed11757,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/SystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_427.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_427.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_427.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1156.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1156.cpp,245,243,250,-1,"fprintf(stderr, ""No current working directory\n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_982.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_982.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_982.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_982.cpp,-1,"[""unkown"", ""string""]","[""const char *"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['fprintf', 'stderr', 'No', 'current', 'working', 'directory\\n'], []]",2013-02-07T13:34:56,Brad King,24187215539735224241,468
9d66f74335a09019644c7b82af0860da439fce87,"KWSys 2013-02-05 (5c34ed2e)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ 5c34ed2e | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' 5b0d1bd9..5c34ed2e
Brad King (1):
      5c34ed2e SystemTools: Do not abort with no current directory

Change-Id: Id054017eac2bf10c71ca721df48298cdff2bea82",[],SystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_428.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_428.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_428.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1157.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1157.cpp,196,196,201,-1,"fprintf(stderr, ""No current working directory.\n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_983.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_983.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_983.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_983.cpp,-1,"[""unkown"", ""constant""]","[""const char *"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['fprintf', 'stderr', 'No', 'current', 'working', 'directory', '\\n'], []]",2013-02-07T13:34:52,Brad King,25631361648025746953,467
9d66f74335a09019644c7b82af0860da439fce87,"KWSys 2013-02-05 (5c34ed2e)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ 5c34ed2e | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' 5b0d1bd9..5c34ed2e
Brad King (1):
      5c34ed2e SystemTools: Do not abort with no current directory

Change-Id: Id054017eac2bf10c71ca721df48298cdff2bea82",[],SystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_428.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_428.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_428.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1158.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1158.cpp,245,243,250,-1,"fprintf(stderr, ""No current working directory\n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_984.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_984.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_984.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_984.cpp,-1,"[""unkown"", ""string""]","[""const char *"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['fprintf', 'stderr', 'No', 'current', 'working', 'directory\\n'], []]",2013-02-07T13:34:52,Brad King,24187215539735224241,468
118c32f8f211b0bb9a096fbb0711cacf2b68f057,Merge branch 'xcode-duplicate-flags-13354' into generator-toolset,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_431.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_431.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_431.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1167.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1167.cpp,365,335,379,-1,"sprintf(fwdName, KWSYS_NAMESPACE_STRING ""pew9xfwd_%ld_%p.exe"",
            GetCurrentProcessId(), cp);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_985.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_985.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_985.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_985.cpp,-1,[],"[""member"", ""macro"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'fwdName', 'KWSYS_NAMESPACE_STRING', 'pew9xfwd_%ld_%p', 'exe', 'GetCurrentProcessId', 'cp'], []]",2013-01-31T14:58:50,Brad King,16239029922523690180,535
118c32f8f211b0bb9a096fbb0711cacf2b68f057,Merge branch 'xcode-duplicate-flags-13354' into generator-toolset,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_431.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_431.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_431.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1167.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1167.cpp,365,335,395,-1,"sprintf(win9x, ""%s%s"", tempDir, fwdName);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_986.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_986.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_986.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_986.cpp,-1,"[""malloc_ret"", ""string"", ""char *"", ""char *""]","[""malloc_ret"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'win9x', '%s%s', 'tempDir', 'fwdName'], []]",2013-01-31T14:58:50,Brad King,8426305006996968910,536
118c32f8f211b0bb9a096fbb0711cacf2b68f057,Merge branch 'xcode-duplicate-flags-13354' into generator-toolset,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_431.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_431.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_431.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1168.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1168.cpp,1815,1653,1847,-1,"sprintf(realCommand, ""%s %p %p %p %d %s"", cp->Win9x,
            si->ErrorPipeWrite, cp->Win9xResumeEvent, cp->Win9xKillEvent,
            cp->HideWindow, cp->Commands[index]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_987.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_987.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_987.cpp,161,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_987.cpp,-1,"[""malloc_ret"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""malloc_ret"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'realCommand', '%s', '%p', '%p', '%p', '%d', '%s', 'cp', 'Win9x', 'si', 'ErrorPipeWrite', 'cp', 'Win9xResumeEvent', 'cp', 'Win9xKillEvent', 'cp', 'HideWindow', 'cp', 'Commands[index]'], []]",2013-01-31T14:58:50,Brad King,35601108973641368407,537
e33fa5b67880e47fb350d5545a5ba04b8d6f3eb3,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_432.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_432.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_432.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1169.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1169.cpp,365,335,379,-1,"sprintf(fwdName, KWSYS_NAMESPACE_STRING ""pew9xfwd_%ld_%p.exe"",
            GetCurrentProcessId(), cp);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_988.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_988.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_988.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_988.cpp,-1,[],"[""member"", ""macro"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'fwdName', 'KWSYS_NAMESPACE_STRING', 'pew9xfwd_%ld_%p', 'exe', 'GetCurrentProcessId', 'cp'], []]",2012-12-19T13:09:36,Brad King,16239029922523690180,535
e33fa5b67880e47fb350d5545a5ba04b8d6f3eb3,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_432.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_432.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_432.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1169.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1169.cpp,365,335,395,-1,"sprintf(win9x, ""%s%s"", tempDir, fwdName);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_989.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_989.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_989.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_989.cpp,-1,"[""malloc_ret"", ""string"", ""char *"", ""char *""]","[""malloc_ret"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'win9x', '%s%s', 'tempDir', 'fwdName'], []]",2012-12-19T13:09:36,Brad King,8426305006996968910,536
e33fa5b67880e47fb350d5545a5ba04b8d6f3eb3,Merge branch 'upstream-kwsys' into update-kwsys,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_432.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_432.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_432.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1170.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1170.cpp,1815,1653,1847,-1,"sprintf(realCommand, ""%s %p %p %p %d %s"", cp->Win9x,
            si->ErrorPipeWrite, cp->Win9xResumeEvent, cp->Win9xKillEvent,
            cp->HideWindow, cp->Commands[index]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_990.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_990.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_990.cpp,161,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_990.cpp,-1,"[""malloc_ret"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""malloc_ret"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'realCommand', '%s', '%p', '%p', '%p', '%d', '%s', 'cp', 'Win9x', 'si', 'ErrorPipeWrite', 'cp', 'Win9xResumeEvent', 'cp', 'Win9xKillEvent', 'cp', 'HideWindow', 'cp', 'Commands[index]'], []]",2012-12-19T13:09:36,Brad King,35601108973641368407,537
a0f91f1daa7765066a784e4479da7e231374a065,"KWSys 2012-12-19 (933eb822)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ 933eb822 | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' 3b17de34..933eb822
Brad King (2):
      fea37696 Process: Remove support for Windows 98
      01e15c22 Remove KWSys Registry

Rolf Eike Beer (7):
      f376ec32 SystemInformation: fix typos
      bfee5174 SystemInformation: sum up all caches found in /proc/cpuinfo
      5690d711 SystemInformation: fix value extraction from /proc/cpuinfo
      36295981 SystemInformation: PA-RISC chips are from HP
      72e9d02e SystemInformation: try harder to find a useful processor name
      b39de34c SystemInformation: try harder to find the CPU family
      933eb822 SystemInformation: extract CPU stepping information from /proc/cpuinfo, too

Sean McBride (2):
      5e17bfde Process: Dereference NULL++ instead of NULL to force crash
      86a78cb7 SystemTools: Add check for empty strings to prevent integer underflow

Change-Id: Id7194f434fe67be81e6ee9e96d705010a1171a06",[],ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_433.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_433.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_433.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1171.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1171.cpp,365,335,379,-1,"sprintf(fwdName, KWSYS_NAMESPACE_STRING ""pew9xfwd_%ld_%p.exe"",
            GetCurrentProcessId(), cp);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_991.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_991.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_991.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_991.cpp,-1,[],"[""member"", ""macro"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'fwdName', 'KWSYS_NAMESPACE_STRING', 'pew9xfwd_%ld_%p', 'exe', 'GetCurrentProcessId', 'cp'], []]",2012-12-19T13:08:36,Brad King,16239029922523690180,535
a0f91f1daa7765066a784e4479da7e231374a065,"KWSys 2012-12-19 (933eb822)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ 933eb822 | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' 3b17de34..933eb822
Brad King (2):
      fea37696 Process: Remove support for Windows 98
      01e15c22 Remove KWSys Registry

Rolf Eike Beer (7):
      f376ec32 SystemInformation: fix typos
      bfee5174 SystemInformation: sum up all caches found in /proc/cpuinfo
      5690d711 SystemInformation: fix value extraction from /proc/cpuinfo
      36295981 SystemInformation: PA-RISC chips are from HP
      72e9d02e SystemInformation: try harder to find a useful processor name
      b39de34c SystemInformation: try harder to find the CPU family
      933eb822 SystemInformation: extract CPU stepping information from /proc/cpuinfo, too

Sean McBride (2):
      5e17bfde Process: Dereference NULL++ instead of NULL to force crash
      86a78cb7 SystemTools: Add check for empty strings to prevent integer underflow

Change-Id: Id7194f434fe67be81e6ee9e96d705010a1171a06",[],ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_433.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_433.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_433.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1171.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1171.cpp,365,335,395,-1,"sprintf(win9x, ""%s%s"", tempDir, fwdName);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_992.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_992.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_992.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_992.cpp,-1,"[""malloc_ret"", ""string"", ""char *"", ""char *""]","[""malloc_ret"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'win9x', '%s%s', 'tempDir', 'fwdName'], []]",2012-12-19T13:08:36,Brad King,8426305006996968910,536
a0f91f1daa7765066a784e4479da7e231374a065,"KWSys 2012-12-19 (933eb822)

Extract upstream KWSys using the following shell commands.

$ git archive --prefix=upstream-kwsys/ 933eb822 | tar x
$ git shortlog --no-merges --abbrev=8 --format='%h %s' 3b17de34..933eb822
Brad King (2):
      fea37696 Process: Remove support for Windows 98
      01e15c22 Remove KWSys Registry

Rolf Eike Beer (7):
      f376ec32 SystemInformation: fix typos
      bfee5174 SystemInformation: sum up all caches found in /proc/cpuinfo
      5690d711 SystemInformation: fix value extraction from /proc/cpuinfo
      36295981 SystemInformation: PA-RISC chips are from HP
      72e9d02e SystemInformation: try harder to find a useful processor name
      b39de34c SystemInformation: try harder to find the CPU family
      933eb822 SystemInformation: extract CPU stepping information from /proc/cpuinfo, too

Sean McBride (2):
      5e17bfde Process: Dereference NULL++ instead of NULL to force crash
      86a78cb7 SystemTools: Add check for empty strings to prevent integer underflow

Change-Id: Id7194f434fe67be81e6ee9e96d705010a1171a06",[],ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_433.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_433.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_433.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1172.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1172.cpp,1815,1653,1847,-1,"sprintf(realCommand, ""%s %p %p %p %d %s"", cp->Win9x,
            si->ErrorPipeWrite, cp->Win9xResumeEvent, cp->Win9xKillEvent,
            cp->HideWindow, cp->Commands[index]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_993.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_993.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_993.cpp,161,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_993.cpp,-1,"[""malloc_ret"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""malloc_ret"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['sprintf', 'realCommand', '%s', '%p', '%p', '%p', '%d', '%s', 'cp', 'Win9x', 'si', 'ErrorPipeWrite', 'cp', 'Win9xResumeEvent', 'cp', 'Win9xKillEvent', 'cp', 'HideWindow', 'cp', 'Commands[index]'], []]",2012-12-19T13:08:36,Brad King,35601108973641368407,537
5f12424ebc9f810ef279d09f1e660e20558dd535,"Remove process execution code from cmcldeps and have it use cmake code.

This simplifies the code in cmcldeps and avoids having yet another
set of process execution code.",[],Source/cmcldeps.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_439.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_439.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_439.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1178.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1178.cpp,132,35,221,-1,"snprintf(pipe_name, sizeof(pipe_name),
           ""\\\\.\\pipe\\ninja_pid%u_sp%p"", GetCurrentProcessId(), this);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_994.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_994.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_994.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_994.cpp,-1,"[""char *"", ""unkown"", ""constant"", ""GetCurrentProcessId_ret"", ""unkown""]",[],"set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'bool useOldLinkLibs = true ;', u'targetName = targetNameBuf', u'std :: string libsToLink = "" "" ;', u'libsToLink += argv [ i ] + "" ""', u'useOldLinkLibs = false'])","set([293, 200, 73, 74, 87, 93])","[['snprintf', 'pipe_name', 'sizeof', 'pipe_name', '\\\\\\\\', '\\\\pipe\\\\ninja_pid%u_sp%p', 'GetCurrentProcessId', 'this'], []]",2012-06-27T16:28:12,Bill Hoffman,-8853030318407231485,59
1a38a5d65fa33f8ff06104b23f9bd38110387ddc,Ninja: allow spaces in cldeps's .d file,[],Source/cmcldeps.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_447.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_447.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_447.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1190.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1190.cpp,560,560,562,564,"fprintf(out, ""%s: \\\n"", objfile.c_str());","fprintf(out, ""%s: \\\n"", tmp.c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_995.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_995.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_995.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_995.cpp,15,"[""FILE *"", ""string"", ""objfile . c_str_ret""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * out = fopen ( dfile . c_str ( ) , ""wb"" ) ;', u'string tmp = objfile ;'])","set([13, 7])","[['objfile'], ['tmp']]",2012-06-10T13:22:01,Peter Kuemmel,-6823903917850701910,60
156cb3bbf257f747672eac945fa2e19d33fc3a63,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive_windows.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_450.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1195.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1195.cpp,2686,2629,2703,-1,"archive_set_error(&a->archive, ENOMEM,
		    ""No memory for 7-Zip decompression"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_996.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_996.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_996.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_996.cpp,-1,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""==""]","set([u'FILE * out = fopen ( dfile . c_str ( ) , ""wb"" ) ;', u'string tmp = objfile ;'])","set([13, 7])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'No', 'memory', 'for', '7', 'Zip', 'decompression'], []]",2012-01-05T14:02:58,Brad King,8098700001325519432,469
156cb3bbf257f747672eac945fa2e19d33fc3a63,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive_windows.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_450.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1195.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1195.cpp,2686,2629,2735,2658,"archive_set_error(&a->archive, -1,
				    ""Malformed 7-Zip archive file"");",zip->header_bytes_remaining -= bytes;,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_997.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_997.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_997.cpp,80,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_997.cpp,24,"[""member"", ""int"", ""string""]","[""const void * *"", ""member"", ""!="", ""!""]","set([u'bytes = read_stream ( a , & buff , rbytes , rbytes )', u'struct _7zip * zip = ( struct _7zip * ) a -> format -> data ;'])","set([3, 21])","[['archive_set_error', '&a', 'archive', '1', 'Malformed', '7', 'Zip', 'archive', 'file'], ['zip', 'header_bytes_remaining', 'bytes']]",2012-01-05T14:02:58,Brad King,-9816107379389393610,470
156cb3bbf257f747672eac945fa2e19d33fc3a63,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive_windows.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_450.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1195.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1195.cpp,2686,2629,2756,-1,"archive_set_error(&a->archive, -1, ""Header CRC error"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_998.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_998.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_998.cpp,101,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_998.cpp,-1,"[""member"", ""int"", ""string""]","[""uint32_t"", ""member"", ""!=""]","set([u'bytes = read_stream ( a , & buff , rbytes , rbytes )', u'struct _7zip * zip = ( struct _7zip * ) a -> format -> data ;'])","set([3, 21])","[['archive_set_error', '&a', 'archive', '1', 'Header', 'CRC', 'error'], []]",2012-01-05T14:02:58,Brad King,-6174872207051354652,471
156cb3bbf257f747672eac945fa2e19d33fc3a63,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive_windows.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_450.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1196.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1196.cpp,2810,2712,2827,2731,,"archive_set_error(&a->archive,
		    ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Truncated 7-Zip file body"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_999.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_999.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_999.cpp,64,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_999.cpp,64,[],"[""crc32_ret"", ""archive_le32dec_ret"", ""!="", ""!""]",set([u'struct archive_read * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Truncated', '7', 'Zip', 'file', 'body']]",2012-01-05T14:02:58,Brad King,-13250668967796371605,472
156cb3bbf257f747672eac945fa2e19d33fc3a63,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive_windows.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_450.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1197.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1197.cpp,2858,2786,2860,2800,,"archive_set_error(&a->archive, -1,
			    ""Malformed 7-Zip archive"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1000.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1000.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1000.cpp,97,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1000.cpp,133,[],"[""read_Header_ret"", ""null"", ""<"", ""!""]","set([u'next_header_crc = zip -> si . ci . folders [ 0 ] . digest', u'check_header_crc = 0', u'check_header_crc = 1', u'zip -> header_is_being_read = 1', u'zip -> header_crc32 = 0', u'struct _7zip * zip', u'struct archive_read * a', u'next_header_crc = archive_le32dec ( p + 28 )'])","set([1, 37, 104, 86, 88, 58, 60, 61])","[[], ['archive_set_error', '&a', 'archive', '1', 'Malformed', '7', 'Zip', 'archive']]",2012-01-05T14:02:58,Brad King,7353574681677354034,473
156cb3bbf257f747672eac945fa2e19d33fc3a63,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive_windows.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_450.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1199.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1199.cpp,2961,2908,2962,2947,,"archive_set_error(&a->archive, ENOMEM,
				    ""No memory for 7-Zip decompression"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1001.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1001.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1001.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1001.cpp,66,[],"[""member"", ""macro"", ""=="", ""member"", ""int"", ""=="", ""&&"", ""!""]","set([u'zip -> uncompressed_buffer = realloc ( zip -> uncompressed_buffer , zip -> uncompressed_buffer_size )', u'struct archive_read * a', u'struct _7zip * zip = ( struct _7zip * ) a -> format -> data ;'])","set([1, 3, 62])","[[], ['archive_set_error', '&a', 'archive', 'ENOMEM', 'No', 'memory', 'for', '7', 'Zip', 'decompression']]",2012-01-05T14:02:58,Brad King,-8098700001325519432,474
156cb3bbf257f747672eac945fa2e19d33fc3a63,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive_windows.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_450.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1200.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1200.cpp,3035,3028,3037,3031,,"archive_set_error(&(a->archive),
		    ARCHIVE_ERRNO_MISC, ""Damaged 7-Zip archive"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1002.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1002.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1002.cpp,101,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1002.cpp,150,[],"[""member"", ""member"", ""==""]","set([u'zip -> uncompressed_buffer_bytes_remaining = 0', u'size_t minimum', u'zip -> uncompressed_buffer_bytes_remaining += bytes_out', u'struct archive_read * a', u'struct _7zip * zip = ( struct _7zip * ) a -> format -> data ;', u'zip -> pack_stream_bytes_unconsumed = bytes_in', u'zip -> uncompressed_buffer_pointer = NULL'])","set([1, 3, 41, 80, 81, 126, 127])","[[], ['archive_set_error', '&', 'a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Damaged', '7', 'Zip', 'archive']]",2012-01-05T14:02:58,Brad King,764774046313933644,475
156cb3bbf257f747672eac945fa2e19d33fc3a63,"Merge branch 'libarchive-upstream' into update-libarchive

Conflicts:
	Utilities/cmlibarchive/CMakeLists.txt
	Utilities/cmlibarchive/libarchive/archive_windows.c",[],Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_450.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_450.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1201.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1201.cpp,3065,3063,3074,3095,,"archive_set_error(&(a->archive),
			    ARCHIVE_ERRNO_MISC, ""Malformed 7-Zip archive"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1003.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1003.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1003.cpp,8,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1003.cpp,31,[],"[""member"", ""null"", ""==""]","set([u'struct archive_read * a', u'struct _7zip * zip = ( struct _7zip * ) a -> format -> data ;'])","set([1, 4])","[[], ['archive_set_error', '&', 'a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Malformed', '7', 'Zip', 'archive']]",2012-01-05T14:02:58,Brad King,220535022108488512,476
4f4fe6e50bb3dbe59f9bc3cc848cbd07dead324d,"libarchive 3.0.2-r4051 (reduced)

Extract upstream libarchive using the following shell code.

url=https://libarchive.googlecode.com/svn/release/3.0
v=3.0.2
r=4051
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
""
date=$(svn log -q -c$r $url |
       sed -n ""/^r/ {s/[^|]*|[^|]*|//;p;}"")
svn export -r$r $url libarchive-$v-r$r &&
mkdir libarchive-$v-r$r-reduced &&
(cd libarchive-$v-r$r && tar c $paths) |
(cd libarchive-$v-r$r-reduced && tar x)
echo ""r$r date: $date""",[],libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_454.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1210.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1210.cpp,2686,2629,2703,-1,"archive_set_error(&a->archive, ENOMEM,
		    ""No memory for 7-Zip decompression"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1004.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1004.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1004.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1004.cpp,-1,"[""member"", ""macro"", ""string""]","[""member"", ""null"", ""==""]","set([u'struct archive_read * a', u'struct _7zip * zip = ( struct _7zip * ) a -> format -> data ;'])","set([1, 4])","[['archive_set_error', '&a', 'archive', 'ENOMEM', 'No', 'memory', 'for', '7', 'Zip', 'decompression'], []]",2012-01-05T13:52:42,Brad King,8098700001325519432,469
4f4fe6e50bb3dbe59f9bc3cc848cbd07dead324d,"libarchive 3.0.2-r4051 (reduced)

Extract upstream libarchive using the following shell code.

url=https://libarchive.googlecode.com/svn/release/3.0
v=3.0.2
r=4051
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
""
date=$(svn log -q -c$r $url |
       sed -n ""/^r/ {s/[^|]*|[^|]*|//;p;}"")
svn export -r$r $url libarchive-$v-r$r &&
mkdir libarchive-$v-r$r-reduced &&
(cd libarchive-$v-r$r && tar c $paths) |
(cd libarchive-$v-r$r-reduced && tar x)
echo ""r$r date: $date""",[],libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_454.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1210.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1210.cpp,2686,2629,2735,2658,"archive_set_error(&a->archive, -1,
				    ""Malformed 7-Zip archive file"");",zip->header_bytes_remaining -= bytes;,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1005.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1005.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1005.cpp,80,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1005.cpp,24,"[""member"", ""int"", ""string""]","[""const void * *"", ""member"", ""!="", ""!""]","set([u'bytes = read_stream ( a , & buff , rbytes , rbytes )', u'struct _7zip * zip = ( struct _7zip * ) a -> format -> data ;'])","set([3, 21])","[['archive_set_error', '&a', 'archive', '1', 'Malformed', '7', 'Zip', 'archive', 'file'], ['zip', 'header_bytes_remaining', 'bytes']]",2012-01-05T13:52:42,Brad King,-9816107379389393610,470
4f4fe6e50bb3dbe59f9bc3cc848cbd07dead324d,"libarchive 3.0.2-r4051 (reduced)

Extract upstream libarchive using the following shell code.

url=https://libarchive.googlecode.com/svn/release/3.0
v=3.0.2
r=4051
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
""
date=$(svn log -q -c$r $url |
       sed -n ""/^r/ {s/[^|]*|[^|]*|//;p;}"")
svn export -r$r $url libarchive-$v-r$r &&
mkdir libarchive-$v-r$r-reduced &&
(cd libarchive-$v-r$r && tar c $paths) |
(cd libarchive-$v-r$r-reduced && tar x)
echo ""r$r date: $date""",[],libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_454.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1210.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1210.cpp,2686,2629,2756,-1,"archive_set_error(&a->archive, -1, ""Header CRC error"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1006.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1006.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1006.cpp,101,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1006.cpp,-1,"[""member"", ""int"", ""string""]","[""uint32_t"", ""member"", ""!=""]","set([u'bytes = read_stream ( a , & buff , rbytes , rbytes )', u'struct _7zip * zip = ( struct _7zip * ) a -> format -> data ;'])","set([3, 21])","[['archive_set_error', '&a', 'archive', '1', 'Header', 'CRC', 'error'], []]",2012-01-05T13:52:42,Brad King,-6174872207051354652,471
4f4fe6e50bb3dbe59f9bc3cc848cbd07dead324d,"libarchive 3.0.2-r4051 (reduced)

Extract upstream libarchive using the following shell code.

url=https://libarchive.googlecode.com/svn/release/3.0
v=3.0.2
r=4051
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
""
date=$(svn log -q -c$r $url |
       sed -n ""/^r/ {s/[^|]*|[^|]*|//;p;}"")
svn export -r$r $url libarchive-$v-r$r &&
mkdir libarchive-$v-r$r-reduced &&
(cd libarchive-$v-r$r && tar c $paths) |
(cd libarchive-$v-r$r-reduced && tar x)
echo ""r$r date: $date""",[],libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_454.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1211.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1211.cpp,2810,2712,2827,2731,,"archive_set_error(&a->archive,
		    ARCHIVE_ERRNO_FILE_FORMAT,
		    ""Truncated 7-Zip file body"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1007.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1007.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1007.cpp,64,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1007.cpp,64,[],"[""crc32_ret"", ""archive_le32dec_ret"", ""!="", ""!""]",set([u'struct archive_read * a']),set([1]),"[[], ['archive_set_error', '&a', 'archive', 'ARCHIVE_ERRNO_FILE_FORMAT', 'Truncated', '7', 'Zip', 'file', 'body']]",2012-01-05T13:52:42,Brad King,-13250668967796371605,472
4f4fe6e50bb3dbe59f9bc3cc848cbd07dead324d,"libarchive 3.0.2-r4051 (reduced)

Extract upstream libarchive using the following shell code.

url=https://libarchive.googlecode.com/svn/release/3.0
v=3.0.2
r=4051
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
""
date=$(svn log -q -c$r $url |
       sed -n ""/^r/ {s/[^|]*|[^|]*|//;p;}"")
svn export -r$r $url libarchive-$v-r$r &&
mkdir libarchive-$v-r$r-reduced &&
(cd libarchive-$v-r$r && tar c $paths) |
(cd libarchive-$v-r$r-reduced && tar x)
echo ""r$r date: $date""",[],libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_454.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1212.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1212.cpp,2858,2786,2860,2800,,"archive_set_error(&a->archive, -1,
			    ""Malformed 7-Zip archive"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1008.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1008.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1008.cpp,97,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1008.cpp,133,[],"[""read_Header_ret"", ""null"", ""<"", ""!""]","set([u'next_header_crc = zip -> si . ci . folders [ 0 ] . digest', u'check_header_crc = 0', u'check_header_crc = 1', u'zip -> header_is_being_read = 1', u'zip -> header_crc32 = 0', u'struct _7zip * zip', u'struct archive_read * a', u'next_header_crc = archive_le32dec ( p + 28 )'])","set([1, 37, 104, 86, 88, 58, 60, 61])","[[], ['archive_set_error', '&a', 'archive', '1', 'Malformed', '7', 'Zip', 'archive']]",2012-01-05T13:52:42,Brad King,7353574681677354034,473
4f4fe6e50bb3dbe59f9bc3cc848cbd07dead324d,"libarchive 3.0.2-r4051 (reduced)

Extract upstream libarchive using the following shell code.

url=https://libarchive.googlecode.com/svn/release/3.0
v=3.0.2
r=4051
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
""
date=$(svn log -q -c$r $url |
       sed -n ""/^r/ {s/[^|]*|[^|]*|//;p;}"")
svn export -r$r $url libarchive-$v-r$r &&
mkdir libarchive-$v-r$r-reduced &&
(cd libarchive-$v-r$r && tar c $paths) |
(cd libarchive-$v-r$r-reduced && tar x)
echo ""r$r date: $date""",[],libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_454.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1214.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1214.cpp,2961,2908,2962,2947,,"archive_set_error(&a->archive, ENOMEM,
				    ""No memory for 7-Zip decompression"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1009.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1009.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1009.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1009.cpp,66,[],"[""member"", ""macro"", ""=="", ""member"", ""int"", ""=="", ""&&"", ""!""]","set([u'struct archive_read * a', u'zip -> uncompressed_buffer = realloc ( zip -> uncompressed_buffer , zip -> uncompressed_buffer_size )', u'struct _7zip * zip = ( struct _7zip * ) a -> format -> data ;'])","set([1, 3, 62])","[[], ['archive_set_error', '&a', 'archive', 'ENOMEM', 'No', 'memory', 'for', '7', 'Zip', 'decompression']]",2012-01-05T13:52:42,Brad King,-8098700001325519432,474
4f4fe6e50bb3dbe59f9bc3cc848cbd07dead324d,"libarchive 3.0.2-r4051 (reduced)

Extract upstream libarchive using the following shell code.

url=https://libarchive.googlecode.com/svn/release/3.0
v=3.0.2
r=4051
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
""
date=$(svn log -q -c$r $url |
       sed -n ""/^r/ {s/[^|]*|[^|]*|//;p;}"")
svn export -r$r $url libarchive-$v-r$r &&
mkdir libarchive-$v-r$r-reduced &&
(cd libarchive-$v-r$r && tar c $paths) |
(cd libarchive-$v-r$r-reduced && tar x)
echo ""r$r date: $date""",[],libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_454.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1215.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1215.cpp,3035,3028,3037,3031,,"archive_set_error(&(a->archive),
		    ARCHIVE_ERRNO_MISC, ""Damaged 7-Zip archive"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1010.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1010.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1010.cpp,101,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1010.cpp,150,[],"[""member"", ""member"", ""==""]","set([u'zip -> uncompressed_buffer_bytes_remaining = 0', u'size_t minimum', u'zip -> uncompressed_buffer_bytes_remaining += bytes_out', u'zip -> pack_stream_bytes_unconsumed = bytes_in', u'struct _7zip * zip = ( struct _7zip * ) a -> format -> data ;', u'struct archive_read * a', u'zip -> uncompressed_buffer_pointer = NULL'])","set([1, 3, 41, 80, 81, 126, 127])","[[], ['archive_set_error', '&', 'a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Damaged', '7', 'Zip', 'archive']]",2012-01-05T13:52:42,Brad King,764774046313933644,475
4f4fe6e50bb3dbe59f9bc3cc848cbd07dead324d,"libarchive 3.0.2-r4051 (reduced)

Extract upstream libarchive using the following shell code.

url=https://libarchive.googlecode.com/svn/release/3.0
v=3.0.2
r=4051
paths=""
  CMakeLists.txt
  COPYING
  CTestConfig.cmake
  build/cmake
  build/pkgconfig
  build/utils
  build/version
  libarchive/*.*
""
date=$(svn log -q -c$r $url |
       sed -n ""/^r/ {s/[^|]*|[^|]*|//;p;}"")
svn export -r$r $url libarchive-$v-r$r &&
mkdir libarchive-$v-r$r-reduced &&
(cd libarchive-$v-r$r && tar c $paths) |
(cd libarchive-$v-r$r-reduced && tar x)
echo ""r$r date: $date""",[],libarchive/archive_read_support_format_7zip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_454.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_454.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1216.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1216.cpp,3065,3063,3074,3095,,"archive_set_error(&(a->archive),
			    ARCHIVE_ERRNO_MISC, ""Malformed 7-Zip archive"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1011.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1011.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1011.cpp,8,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1011.cpp,31,[],"[""member"", ""null"", ""==""]","set([u'struct archive_read * a', u'struct _7zip * zip = ( struct _7zip * ) a -> format -> data ;'])","set([1, 4])","[[], ['archive_set_error', '&', 'a', 'archive', 'ARCHIVE_ERRNO_MISC', 'Malformed', '7', 'Zip', 'archive']]",2012-01-05T13:52:42,Brad King,220535022108488512,476
fd63219557c4acc6e474263302ab9c78985f6d91,"ccmake: Align 'g' and 'q' key instructions.

They were miss-aligned with the 'enter' key instruction.

Before:
----
Press [enter] to edit option           CMake Version 2.8.3.20110107-g4b05a-dirty
Press [c] to configure
Press [h] for help         Press [q] to quit without generating
----

After:
----
Press [enter] to edit option           CMake Version 2.8.3.20110107-g4b05a-dirty
Press [c] to configure
Press [h] for help           Press [q] to quit without generating
----",[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_459.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_459.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_459.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1225.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1225.cpp,421,421,422,422,"sprintf(firstLine,
              ""Press [c] to configure     Press [g] to generate and exit"");","sprintf(firstLine,
              ""Press [c] to configure       Press [g] to generate and exit"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1012.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1012.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1012.cpp,44,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1012.cpp,44,"[""char *"", ""string""]","[""member""]","set([u'char firstLine [ 512 ] = """" ;'])",set([28]),"[[], []]",2011-10-23T20:18:14,Nicolas Despres,0,550
fd63219557c4acc6e474263302ab9c78985f6d91,"ccmake: Align 'g' and 'q' key instructions.

They were miss-aligned with the 'enter' key instruction.

Before:
----
Press [enter] to edit option           CMake Version 2.8.3.20110107-g4b05a-dirty
Press [c] to configure
Press [h] for help         Press [q] to quit without generating
----

After:
----
Press [enter] to edit option           CMake Version 2.8.3.20110107-g4b05a-dirty
Press [c] to configure
Press [h] for help           Press [q] to quit without generating
----",[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_459.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_459.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_459.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1226.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1226.cpp,437,437,438,438,"f(secondLine,
            ""Press [h] for help         Press [q] to quit without generating"");","f(secondLine,
            ""Press [h] for help           ""
            ""Press [q] to quit without generating"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1013.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1013.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1013.cpp,60,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1013.cpp,60,"[""char *"", ""string""]","[""int"", ""!""]",set([u'int process']),set([0]),"[[], []]",2011-10-23T20:18:14,Nicolas Despres,0,550
58b7fe65453f1d4b25537950de2277af2951fd85,"Use cout instead of printf()

Alex",[],Source/cmQtAutomoc.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_465.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_465.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_465.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1243.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1243.cpp,405,405,407,407,"printf(""Checking -%s-\n"", absFilename.c_str());","std::cout << ""AUTOMOC: Checking "" << absFilename << std::endl;",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1014.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1014.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1014.cpp,32,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1014.cpp,32,"[""string"", ""absFilename . c_str_ret""]","[""member""]",set([u'this -> GenerateAll = true']),set([5]),"[['printf', '%s', '\\n', 'c_str'], ['std', 'cout', 'AUTOMOC', 'std', 'endl']]",2011-08-14T15:17:01,Alex Neundorf,-16290749846782889846,477
58b7fe65453f1d4b25537950de2277af2951fd85,"Use cout instead of printf()

Alex",[],Source/cmQtAutomoc.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_465.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_465.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_465.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1244.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1244.cpp,419,419,421,421,"printf(""Checking -%s-\n"", absFilename.c_str());","std::cout << ""AUTOMOC: Checking "" << absFilename << std::endl;",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1015.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1015.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1015.cpp,46,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1015.cpp,46,"[""string"", ""absFilename . c_str_ret""]","[""member""]",set([u'this -> GenerateAll = true']),set([5]),"[['printf', '%s', '\\n', 'c_str'], ['std', 'cout', 'AUTOMOC', 'std', 'endl']]",2011-08-14T15:17:01,Alex Neundorf,-16290749846782889846,477
58b7fe65453f1d4b25537950de2277af2951fd85,"Use cout instead of printf()

Alex",[],Source/cmQtAutomoc.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_465.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_465.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_465.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1245.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1245.cpp,728,728,730,730,"printf(""%s "", command[i].c_str());","std::cout << command[i] << "" "";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1016.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1016.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1016.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1016.cpp,48,"[""string"", ""command [ i ] . c_str_ret""]","[""null"", ""command . size_ret"", ""<""]","set([u'i ++', u'std :: vector < cmStdString > command ;', u'int i = 0 ;'])","set([46, 23])","[['printf', '%s', 'c_str'], ['std', 'cout']]",2011-08-14T15:17:01,Alex Neundorf,-2742001745846997234,61
58b7fe65453f1d4b25537950de2277af2951fd85,"Use cout instead of printf()

Alex",[],Source/cmQtAutomoc.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_465.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_465.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_465.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1245.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1245.cpp,728,728,732,732,"printf(""\n"");",std::cout << std::endl;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1017.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1017.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1017.cpp,50,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1017.cpp,50,"[""string""]","[""member""]",set([]),set([]),"[['printf', '\\n'], ['std', 'cout', 'std', 'endl']]",2011-08-14T15:17:01,Alex Neundorf,-7178402686300362221,62
dd2f81491e6e17681dd18882a8ccfa01fa32a3f7,"Merge branch 'dev/add_test-working-directory' into dev/strict-mode

Conflicts:
	Tests/CMakeLists.txt",[],Source/cmCoreTryCompile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_469.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_469.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_469.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1250.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1250.cpp,169,169,171,171,"fprintf(fout, ""cmake_minimum_required(VERSION %u.%u)\n"",
            cmVersion::GetMajorVersion(), cmVersion::GetMinorVersion());","fprintf(fout, ""cmake_minimum_required(VERSION %u.%u.%u.%u)\n"",
            cmVersion::GetMajorVersion(), cmVersion::GetMinorVersion(),
            cmVersion::GetPatchVersion(), cmVersion::GetTweakVersion());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1018.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1018.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1018.cpp,154,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1018.cpp,154,"[""FILE *"", ""constant"", ""cmVersion :: GetMajorVersion_ret"", ""cmVersion :: GetMinorVersion_ret""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])",set([140]),"[[], ['%u', '%u', 'cmVersion', 'GetPatchVersion', 'cmVersion', 'GetTweakVersion']]",2011-01-27T19:39:55,Brad King,1374061433707908090,63
aeb6cd8a8920c398b923d3ce383c06ed4643727f,"Merge branch 'honor-explicit-zero-timeout' into resolve/mingw-cross-compile-resources/honor-explicit-zero-timeout

Conflicts:
	Tests/CMakeLists.txt",[],Source/CTest/cmCTestGIT.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_470.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_470.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_470.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1251.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1251.cpp,503,503,511,-1,"sprintf(dt, ""%04d-%02d-%02d %02d:%02d:%02d"",
              t->tm_year+1900, t->tm_mon+1, t->tm_mday,
              t->tm_hour, t->tm_min, t->tm_sec);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1019.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1019.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1019.cpp,19,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1019.cpp,-1,"[""char *"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""strncmp_ret"", ""null"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])",set([140]),"[['sprintf', 'dt', '%04d', '%02d', '%02d', '%02d', '%02d', '%02d', 't', 'tm_year', '1900', 't', 'tm_mon', '1', 't', 'tm_mday', 't', 'tm_hour', 't', 'tm_min', 't', 'tm_sec'], []]",2011-01-14T15:44:41,Brad King,-40922137334495896785,478
aeb6cd8a8920c398b923d3ce383c06ed4643727f,"Merge branch 'honor-explicit-zero-timeout' into resolve/mingw-cross-compile-resources/honor-explicit-zero-timeout

Conflicts:
	Tests/CMakeLists.txt",[],Source/CTest/cmCTestGIT.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_470.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_470.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_470.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1251.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1251.cpp,503,503,520,-1,"sprintf(tz, "" +%04ld"", author.TimeZone);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1020.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1020.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1020.cpp,28,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1020.cpp,-1,"[""char *"", ""string"", ""member""]","[""member"", ""null"", "">=""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])",set([140]),"[['sprintf', 'tz', '%04ld', 'author', 'TimeZone'], []]",2011-01-14T15:44:41,Brad King,10731934434435189187,538
aeb6cd8a8920c398b923d3ce383c06ed4643727f,"Merge branch 'honor-explicit-zero-timeout' into resolve/mingw-cross-compile-resources/honor-explicit-zero-timeout

Conflicts:
	Tests/CMakeLists.txt",[],Source/CTest/cmCTestGIT.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_470.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_470.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_470.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1251.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1251.cpp,503,503,524,-1,"sprintf(tz, "" -%04ld"", -author.TimeZone);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1021.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1021.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1021.cpp,32,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1021.cpp,-1,"[""char *"", ""string"", ""member""]","[""member"", ""null"", "">="", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])",set([140]),"[['sprintf', 'tz', '%04ld', 'author', 'TimeZone'], []]",2011-01-14T15:44:41,Brad King,10731934434435189187,538
4c88a8622dd25bc3d630f2d35e3a4acca9a7a5a2,"KWSys: Avoid buffer overflow in SystemInformation (#11018)

Use std::string instead of fixed-size char arrays.

Author: Ben Boeckel <ben.boeckel@kitware.com>",[u'https://gitlab.kitware.com/cmake/cmake/issues/11018'],Source/kwsys/SystemInformation.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_471.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_471.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_471.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1253.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1253.cpp,3175,3166,3181,3172,"sprintf(this->ChipID.ProcessorName,""%s"",this->ParseValueFromKStat(""-s cpu_type"").c_str());","this->ChipID.ProcessorName = this->ParseValueFromKStat(""-s cpu_type"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1025.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1025.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1025.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1025.cpp,22,"[""member"", ""string"", ""this -> ParseValueFromKStat ( \""-s cpu_type\"" ) . c_str_ret""]",[],"set([u'this -> ChipID . Vendor = ""Sun""'])",set([18]),"[['sprintf', '%s', 'c_str'], []]",2010-12-21T13:25:33,Brad King,8461625783623599115,64
59925264829e5c9509f505897aafd33478e80cfe,"CTest: Factor out duplicate Git author/committer code

Factor out date/time format code into FormatDateTime function instead of
duplicating it.",[],Source/CTest/cmCTestGIT.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_472.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1254.cpp,503,503,511,-1,"sprintf(dt, ""%04d-%02d-%02d %02d:%02d:%02d"",
              t->tm_year+1900, t->tm_mon+1, t->tm_mday,
              t->tm_hour, t->tm_min, t->tm_sec);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1026.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1026.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1026.cpp,19,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1026.cpp,-1,"[""char *"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""strncmp_ret"", ""null"", ""==""]","set([u'this -> ChipID . Vendor = ""Sun""'])",set([18]),"[['sprintf', 'dt', '%04d', '%02d', '%02d', '%02d', '%02d', '%02d', 't', 'tm_year', '1900', 't', 'tm_mon', '1', 't', 'tm_mday', 't', 'tm_hour', 't', 'tm_min', 't', 'tm_sec'], []]",2010-12-20T22:16:25,Brad King,-40922137334495896785,478
59925264829e5c9509f505897aafd33478e80cfe,"CTest: Factor out duplicate Git author/committer code

Factor out date/time format code into FormatDateTime function instead of
duplicating it.",[],Source/CTest/cmCTestGIT.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_472.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1254.cpp,503,503,520,-1,"sprintf(tz, "" +%04ld"", author.TimeZone);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1027.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1027.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1027.cpp,28,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1027.cpp,-1,"[""char *"", ""string"", ""member""]","[""member"", ""null"", "">=""]","set([u'this -> ChipID . Vendor = ""Sun""'])",set([18]),"[['sprintf', 'tz', '%04ld', 'author', 'TimeZone'], []]",2010-12-20T22:16:25,Brad King,10731934434435189187,538
59925264829e5c9509f505897aafd33478e80cfe,"CTest: Factor out duplicate Git author/committer code

Factor out date/time format code into FormatDateTime function instead of
duplicating it.",[],Source/CTest/cmCTestGIT.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_472.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1254.cpp,503,503,524,-1,"sprintf(tz, "" -%04ld"", -author.TimeZone);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1028.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1028.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1028.cpp,32,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1028.cpp,-1,"[""char *"", ""string"", ""member""]","[""member"", ""null"", "">="", ""!""]","set([u'this -> ChipID . Vendor = ""Sun""'])",set([18]),"[['sprintf', 'tz', '%04ld', 'author', 'TimeZone'], []]",2010-12-20T22:16:25,Brad King,10731934434435189187,538
59925264829e5c9509f505897aafd33478e80cfe,"CTest: Factor out duplicate Git author/committer code

Factor out date/time format code into FormatDateTime function instead of
duplicating it.",[],Source/CTest/cmCTestGIT.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_472.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1254.cpp,503,503,540,-1,"sprintf(dt, ""%04d-%02d-%02d %02d:%02d:%02d"",
              t->tm_year+1900, t->tm_mon+1, t->tm_mday,
              t->tm_hour, t->tm_min, t->tm_sec);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1029.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1029.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1029.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1029.cpp,-1,"[""char *"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""strncmp_ret"", ""null"", ""==""]","set([u'this -> ChipID . Vendor = ""Sun""'])",set([18]),"[['sprintf', 'dt', '%04d', '%02d', '%02d', '%02d', '%02d', '%02d', 't', 'tm_year', '1900', 't', 'tm_mon', '1', 't', 'tm_mday', 't', 'tm_hour', 't', 'tm_min', 't', 'tm_sec'], []]",2010-12-20T22:16:25,Brad King,-40922137334495896785,478
59925264829e5c9509f505897aafd33478e80cfe,"CTest: Factor out duplicate Git author/committer code

Factor out date/time format code into FormatDateTime function instead of
duplicating it.",[],Source/CTest/cmCTestGIT.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_472.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1254.cpp,503,503,549,-1,"sprintf(tz, "" +%04ld"", committer.TimeZone);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1030.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1030.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1030.cpp,57,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1030.cpp,-1,"[""char *"", ""string"", ""member""]","[""member"", ""null"", "">=""]","set([u'this -> ChipID . Vendor = ""Sun""'])",set([18]),"[['sprintf', 'tz', '%04ld', 'committer', 'TimeZone'], []]",2010-12-20T22:16:25,Brad King,11031500372858733929,479
59925264829e5c9509f505897aafd33478e80cfe,"CTest: Factor out duplicate Git author/committer code

Factor out date/time format code into FormatDateTime function instead of
duplicating it.",[],Source/CTest/cmCTestGIT.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_472.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_472.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1254.cpp,503,503,553,-1,"sprintf(tz, "" -%04ld"", -committer.TimeZone);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1031.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1031.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1031.cpp,61,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1031.cpp,-1,"[""char *"", ""string"", ""member""]","[""member"", ""null"", "">="", ""!""]","set([u'this -> ChipID . Vendor = ""Sun""'])",set([18]),"[['sprintf', 'tz', '%04ld', 'committer', 'TimeZone'], []]",2010-12-20T22:16:25,Brad King,11031500372858733929,479
a4a5e375685adcfe765c45be086706720a96dbea,"Use iostream to make Borland happy

It seems as though cstdio doesn't bring in stdio.h with the Borland
compilers.",[],Tests/TestsWorkingDirectory/main.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_473.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_473.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_473.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1256.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1256.cpp,18,19,20,21,"fprintf(stderr, ""No current working directory.\n"");","std::cerr << ""No current working directory."" << std::endl;",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1035.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1035.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1035.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1035.cpp,5,"[""unkown"", ""constant""]","[""const char *"", ""!""]","set([u'const char * ret = _getcwd ( buf , len ) ;'])",set([2]),"[['fprintf', 'stderr', '\\n'], ['std', 'cerr', 'std', 'endl']]",2010-12-17T16:07:40,Ben Boeckel,13984668153010652175,65
a4a5e375685adcfe765c45be086706720a96dbea,"Use iostream to make Borland happy

It seems as though cstdio doesn't bring in stdio.h with the Borland
compilers.",[],Tests/TestsWorkingDirectory/main.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_473.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_473.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_473.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1257.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1257.cpp,46,47,48,49,"fprintf(stderr, ""No current working directory\n"");","std::cerr << ""No current working directory"" << std::endl;",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1036.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1036.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1036.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1036.cpp,5,"[""unkown"", ""string""]","[""const char *"", ""!""]","set([u'const char * ret = getcwd ( buf , len ) ;'])",set([2]),"[['fprintf', 'stderr', 'directory\\n'], ['std', 'cerr', 'directory', 'std', 'endl']]",2010-12-17T16:07:40,Ben Boeckel,12540522044720129463,66
a4a5e375685adcfe765c45be086706720a96dbea,"Use iostream to make Borland happy

It seems as though cstdio doesn't bring in stdio.h with the Borland
compilers.",[],Tests/TestsWorkingDirectory/main.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_473.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_473.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_473.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1258.cpp,59,60,61,62,"fprintf(stdout, ""Working directory: -->%s<--"", cwd);","std::cout << ""Working directory: -->"" << cwd << ""<--"";;",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1037.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1037.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1037.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1037.cpp,5,"[""unkown"", ""constant"", ""const char *""]",[],set([]),set([]),"[['fprintf', 'stdout', '%s'], ['std', 'cout']]",2010-12-17T16:07:40,Ben Boeckel,19025130132086564844,67
9bcaff02ff066e9bdd69e3e1e3134aa65c53c121,"Merge branch 'cmake-guiRememberAdvancedCheckbox' into dev/strict-mode

Conflicts:
	Source/QtDialog/CMakeSetupDialog.cxx",[],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_474.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_474.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_474.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1259.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1259.cpp,758,758,763,764,"fprintf(stderr, ""  followed by Component (%d)\n"", *oi);","fprintf(stderr, ""  followed by Component (%d)\n"", i);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1038.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1038.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1038.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1038.cpp,19,"[""unkown"", ""string"", ""ol . begin_ret""]","[""ol . begin_ret"", ""ol . end_ret"", ""!=""]","set([u'EdgeList :: const_iterator oi = ol . begin ( ) ;', u'EdgeList const & ol = this -> CCG -> GetComponentGraphEdges ( c ) ;', u'int i = * oi ;'])","set([16, 18, 15])","[['*oi'], ['i']]",2010-12-17T15:31:19,Brad King,-8045900682375584433,68
9bcaff02ff066e9bdd69e3e1e3134aa65c53c121,"Merge branch 'cmake-guiRememberAdvancedCheckbox' into dev/strict-mode

Conflicts:
	Source/QtDialog/CMakeSetupDialog.cxx",[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_475.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_475.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_475.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1260.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1260.cpp,283,291,293,301,"fprintf(stderr, ""  depends on target %d [%s]\n"", dependee_index,
              dependee->GetName());","fprintf(stderr, ""  depends on target %d [%s] (%s)\n"", dependee_index,
              dependee->GetName(), ni->IsStrong()? ""strong"" : ""weak"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1039.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1039.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1039.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1039.cpp,15,"[""unkown"", ""string"", ""int"", ""dependee -> GetName_ret""]","[""nl . begin_ret"", ""nl . end_ret"", ""!=""]","set([u'EdgeList const & nl = graph [ depender_index ] ;', u'cmTarget * dependee = this -> Targets [ dependee_index ] ;', u'int dependee_index = * ni ;', u'EdgeList :: const_iterator ni = nl . begin ( ) ;'])","set([11, 13, 14, 7])","[['[%s]\\n'], ['[%s]', '%s', '\\n', 'ni', 'IsStrong', 'strong', 'weak']]",2010-12-17T15:31:19,Brad King,-10842780404471680141,480
2a5790a080d86c63daf3d2c17d533c919cbef582,"Use std::cout instead of fprintf

Alex",[],Source/cmGraphVizWriter.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_476.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_476.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_476.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1261.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1261.cpp,164,164,166,166,"f(stderr, ""Writing %s...\n"", currentFilename.c_str());","d::cout << ""Writing "" << currentFilename << ""..."" << std::endl;",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1040.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1040.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1040.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1040.cpp,29,"[""unkown"", ""constant"", ""currentFilename . c_str_ret""]","[""cmGeneratedFileStream"", ""!"", ""!""]",set([u'cmGeneratedFileStream str ( currentFilename . c_str ( ) ) ;']),set([23]),"[['f', 'stderr', '%s', '\\n', 'c_str'], ['d', 'cout', 'std', 'endl']]",2010-11-14T18:33:12,Alex Neundorf,8540902033375980306,69
2a5790a080d86c63daf3d2c17d533c919cbef582,"Use std::cout instead of fprintf

Alex",[],Source/cmGraphVizWriter.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_476.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_476.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_476.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1262.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1262.cpp,184,184,186,186,"fprintf(stderr, ""Writing %s...\n"", fileName);","std::cout << ""Writing "" << fileName << ""..."" << std::endl;",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1041.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1041.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1041.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1041.cpp,9,"[""unkown"", ""constant"", ""const char *""]","[""cmGeneratedFileStream"", ""!"", ""!""]",set([u'cmGeneratedFileStream str ( fileName ) ;']),set([2]),"[['fprintf', 'stderr', '%s', '\\n'], ['std', 'cout', 'std', 'endl']]",2010-11-14T18:33:12,Alex Neundorf,13979926124556609218,70
487bd571d56134b15b1060e1921a7e16711f12e6,"Properly insert all targets, also those which don't link to anything.

Alex",[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_477.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_477.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_477.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1263.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1263.cpp,3094,3069,3099,-1,"fprintf(stderr, "" + %s\n"", realTargetName);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1042.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1042.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1042.cpp,32,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1042.cpp,-1,"[""unkown"", ""string"", ""const char *""]","[""ll -> size_ret"", ""null"", "">""]",set([u'cmGeneratedFileStream str ( fileName ) ;']),set([2]),"[['fprintf', 'stderr', '%s\\n', 'realTargetName'], []]",2010-10-31T15:23:40,Alex Neundorf,14581784161933315816,71
681cf011dde81c08c0404569289110f9585c6daf,"Distinguish ""strong"" and ""weak"" target dependency edges

Utility dependencies are ""strong"" because they must be enforced to
generate a working build.  Link dependencies are ""weak"" because they can
be broken in the case of a static library cycle.",[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_479.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_479.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_479.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1266.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1266.cpp,291,296,293,298,"fprintf(stderr, ""  depends on target %d [%s]\n"", dependee_index,
              dependee->GetName());","fprintf(stderr, ""  depends on target %d [%s] (%s)\n"", dependee_index,
              dependee->GetName(), ni->IsStrong()? ""strong"" : ""weak"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1043.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1043.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1043.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1043.cpp,15,"[""unkown"", ""string"", ""int"", ""dependee -> GetName_ret""]","[""nl . begin_ret"", ""nl . end_ret"", ""!=""]","set([u'EdgeList const & nl = graph [ depender_index ] ;', u'cmTarget * dependee = this -> Targets [ dependee_index ] ;', u'EdgeList :: const_iterator ni = nl . begin ( ) ;', u'int dependee_index = * ni ;'])","set([11, 13, 14, 7])","[['[%s]\\n'], ['[%s]', '%s', '\\n', 'ni', 'IsStrong', 'strong', 'weak']]",2010-08-25T21:10:00,Brad King,-10842780404471680141,480
a61c5ab6e59a458ad34383e64d0679a7fe898c61,"Add CMAKE_TESTS_CDASH_SERVER variable and CTestSubmitLargeOutput test.

If defined and non-empty, the value of CMAKE_TESTS_CDASH_SERVER should point
to a CDash server willing to accept submissions for a project named
PublicDashboard. On machines that also run a CDash dashboard, set this
variable to ""http://localhost/CDash-trunk-Testing"" so that the CMake tests
that submit dashboards do not have to send those submissions over the wire.

The CTestSubmitLargeOutput test runs a dashboard that has a test that produces
very large amount of output on stdout/stderr. Since we do not even want	 to
attempt to send such large output over the wire, this test is off by default
unless the CMAKE_TESTS_CDASH_SERVER server is localhost. This test is expected
to cause a submission failure when sent to CDash. It passes if the submit
results contain error output. It fails if the submit succeeds.

CMAKE_TESTS_CDASH_SERVER: CDash server used by CMake/Tests.

If not defined or """", this variable defaults to the server at
http://www.cdash.org/CDash.

If set explicitly to ""NOTFOUND"", curl tests and ctest tests that use the
network are skipped.

If set to something starting with ""http://localhost/"", the CDash is expected
to be an instance of CDash used for CDash testing, pointing to a
cdash4simpletest database. In these cases, the CDash dashboards should be
run first.",[],Utilities/cmcurl/Testing/curltest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_484.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_484.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_484.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1273.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1273.cpp,98,98,104,104,"printf(""Error fetching: http://www.cmake.org/page1.html\n"");","printf(""Error fetching: %s\n"", url1);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1044.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1044.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1044.cpp,66,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1044.cpp,66,"[""constant""]","[""curl_easy_perform_ret"", ""null"", ""!=""]","set([u'res = curl_easy_perform ( curl )', u'char * url1'])","set([0, 63])","[['http', '//www', 'cmake', 'org/page1', 'html\\n'], ['%s\\n', 'url1']]",2010-03-08T18:25:58,David Cole,6001083409427584061,72
a61c5ab6e59a458ad34383e64d0679a7fe898c61,"Add CMAKE_TESTS_CDASH_SERVER variable and CTestSubmitLargeOutput test.

If defined and non-empty, the value of CMAKE_TESTS_CDASH_SERVER should point
to a CDash server willing to accept submissions for a project named
PublicDashboard. On machines that also run a CDash dashboard, set this
variable to ""http://localhost/CDash-trunk-Testing"" so that the CMake tests
that submit dashboards do not have to send those submissions over the wire.

The CTestSubmitLargeOutput test runs a dashboard that has a test that produces
very large amount of output on stdout/stderr. Since we do not even want	 to
attempt to send such large output over the wire, this test is off by default
unless the CMAKE_TESTS_CDASH_SERVER server is localhost. This test is expected
to cause a submission failure when sent to CDash. It passes if the submit
results contain error output. It fails if the submit succeeds.

CMAKE_TESTS_CDASH_SERVER: CDash server used by CMake/Tests.

If not defined or """", this variable defaults to the server at
http://www.cdash.org/CDash.

If set explicitly to ""NOTFOUND"", curl tests and ctest tests that use the
network are skipped.

If set to something starting with ""http://localhost/"", the CDash is expected
to be an instance of CDash used for CDash testing, pointing to a
cdash4simpletest database. In these cases, the CDash dashboards should be
run first.",[],Utilities/cmcurl/Testing/curltest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_484.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_484.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_484.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1274.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1274.cpp,130,132,136,147,,"printf(""error: first argument should be a url to download\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1045.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1045.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1045.cpp,4,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1045.cpp,12,[],[],set([u'int argc']),set([0]),"[[], ['printf', 'error', 'first', 'argument', 'should', 'be', 'a', 'url', 'to', 'download\\n']]",2010-03-08T18:25:58,David Cole,6730043351895775907,73
dc1d2189ae922be9d6e7f5fde698532db47e46aa,CMake 2.8.1-rc1,[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_486.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_486.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_486.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1276.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1276.cpp,2364,2316,2374,-1,"sprintf(tmp,""Version %s"", cmVersion::GetCMakeVersion());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1046.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1046.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1046.cpp,8,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1046.cpp,-1,"[""char *"", ""string"", ""cmVersion :: GetCMakeVersion_ret""]",[],set([u'int argc']),set([0]),"[['sprintf', 'tmp', 'Version', '%s', 'cmVersion', 'GetCMakeVersion'], []]",2010-01-28T21:48:20,Brad King,-8796789740710407323,74
8ba2a4040484d0aa1be26ad8fde3d7109a7c2fb1,"Fixes for borland, compiles with lots of warnings, but compiles, might fix vs70 again too.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_490.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_490.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_490.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1282.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1282.cpp,479,479,481,481,"archive_set_error(&a->archive, EILSEQ,
            ""Can't translate pathname '%s' to UTF-8"", path);","archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
            ""Can't translate pathname '%s' to UTF-8"", path);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1047.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1047.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1047.cpp,84,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1047.cpp,84,"[""member"", ""macro"", ""string"", ""archive_entry_pathname_ret""]","[""archive_entry_pathname_ret"", ""null"", ""!="", ""archive_entry_pathname_w_ret"", ""null"", ""=="", ""&&""]","set([u'struct archive_write * a', u'path_w = archive_entry_pathname_w ( entry_main )', u'path = archive_entry_pathname ( entry_main )'])","set([1, 82, 81])","[['EILSEQ'], ['ARCHIVE_ERRNO_FILE_FORMAT']]",2009-11-01T17:41:17,Bill Hoffman,597473303142671218,539
8ba2a4040484d0aa1be26ad8fde3d7109a7c2fb1,"Fixes for borland, compiles with lots of warnings, but compiles, might fix vs70 again too.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_490.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_490.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_490.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1282.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1282.cpp,479,479,489,489,"archive_set_error(&a->archive, EILSEQ,
            ""Can't translate uname '%s' to UTF-8"", uname);","archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
            ""Can't translate uname '%s' to UTF-8"", uname);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1048.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1048.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1048.cpp,92,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1048.cpp,92,"[""member"", ""macro"", ""string"", ""archive_entry_uname_ret""]","[""archive_entry_uname_ret"", ""null"", ""!="", ""archive_entry_uname_w_ret"", ""null"", ""=="", ""&&""]","set([u'uname_w = archive_entry_uname_w ( entry_main )', u'struct archive_write * a', u'uname = archive_entry_uname ( entry_main )'])","set([1, 90, 89])","[['EILSEQ'], ['ARCHIVE_ERRNO_FILE_FORMAT']]",2009-11-01T17:41:17,Bill Hoffman,597473303142671218,539
8ba2a4040484d0aa1be26ad8fde3d7109a7c2fb1,"Fixes for borland, compiles with lots of warnings, but compiles, might fix vs70 again too.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_490.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_490.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_490.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1282.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1282.cpp,479,479,497,497,"archive_set_error(&a->archive, EILSEQ,
            ""Can't translate gname '%s' to UTF-8"", gname);","archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
            ""Can't translate gname '%s' to UTF-8"", gname);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1049.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1049.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1049.cpp,100,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1049.cpp,100,"[""member"", ""macro"", ""string"", ""archive_entry_gname_ret""]","[""archive_entry_gname_ret"", ""null"", ""!="", ""archive_entry_gname_w_ret"", ""null"", ""=="", ""&&""]","set([u'gname_w = archive_entry_gname_w ( entry_main )', u'struct archive_write * a', u'gname = archive_entry_gname ( entry_main )'])","set([97, 98, 1])","[['EILSEQ'], ['ARCHIVE_ERRNO_FILE_FORMAT']]",2009-11-01T17:41:17,Bill Hoffman,597473303142671218,539
8ba2a4040484d0aa1be26ad8fde3d7109a7c2fb1,"Fixes for borland, compiles with lots of warnings, but compiles, might fix vs70 again too.",[],Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_490.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_490.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_490.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1283.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1283.cpp,509,509,511,511,"archive_set_error(&a->archive, EILSEQ,
            ""Can't translate linkpath '%s' to UTF-8"", linkpath);","archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
            ""Can't translate linkpath '%s' to UTF-8"", linkpath);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1050.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1050.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1050.cpp,114,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1050.cpp,114,"[""member"", ""macro"", ""string"", ""archive_entry_symlink_ret""]","[""archive_entry_hardlink_ret"", ""null"", ""!="", ""archive_entry_hardlink_w_ret"", ""null"", ""=="", ""&&""]","set([u'struct archive_write * a', u'linkpath_w = archive_entry_symlink_w ( entry_main )', u'linkpath_w = archive_entry_hardlink_w ( entry_main )', u'linkpath = hardlink', u'linkpath = archive_entry_symlink ( entry_main )', u'const wchar_t * path_w = NULL , * linkpath_w = NULL ;'])","set([1, 105, 107, 109, 15, 111])","[['EILSEQ'], ['ARCHIVE_ERRNO_FILE_FORMAT']]",2009-11-01T17:41:17,Bill Hoffman,597473303142671218,539
8a690289c205da90133e704439dc6f7ef1a08680,"Add label summary times to ctest default output.  Also, remove parallel time output.  Add flag to disable label summary.",[],Source/CTest/cmCTestTestHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_495.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_495.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_495.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1291.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1291.cpp,589,589,606,-1,"sprintf(totalBuf, ""%6.2f sec"", totalTestTime);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1051.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1051.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1051.cpp,112,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1051.cpp,-1,"[""char *"", ""constant"", ""double""]","[""int_ret"", ""null"", ""=="", ""!""]","set([u'struct archive_write * a', u'linkpath_w = archive_entry_symlink_w ( entry_main )', u'linkpath_w = archive_entry_hardlink_w ( entry_main )', u'linkpath = hardlink', u'linkpath = archive_entry_symlink ( entry_main )', u'const wchar_t * path_w = NULL , * linkpath_w = NULL ;'])","set([1, 105, 107, 109, 15, 111])","[['sprintf', 'totalBuf', '%6', '2f', 'sec', 'totalTestTime'], []]",2009-09-11T17:34:35,Bill Hoffman,10693537661147611581,75
177edc5ed1bed7306a122129dfcaf13d898f83ef,Fixed ctest -N segfault issue.  Further refactored ctest.  Enabled failover for ctest,[],Source/CTest/cmCTestRunTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_497.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_497.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_497.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1294.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1294.cpp,67,67,175,174,"sprintf(buf, ""%6.2f sec"", this->TestProcess->GetTotalTime());","sprintf(buf, ""%6.2f sec"", this->TestProcess->GetTotalTime());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1053.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1053.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1053.cpp,118,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1053.cpp,117,"[""char *"", ""constant"", ""this -> TestProcess -> GetTotalTime_ret""]","[""this -> CTest -> GetShowOnly_ret""]","set([u'this -> TestResult . Status = cmCTestTestHandler :: COMPLETED', u'this -> TestResult . Status = cmCTestTestHandler :: BAD_COMMAND', u'this -> TestResult . Status = cmCTestTestHandler :: OTHER_FAULT', u'this -> TestResult . Status = cmCTestTestHandler :: NUMERICAL', u'this -> TestResult . Status = cmCTestTestHandler :: ILLEGAL', u'char buf [ 1024 ] ;', u'this -> TestResult . Status = cmCTestTestHandler :: FAILED', u'this -> TestResult . Status = cmCTestTestHandler :: TIMEOUT', u'this -> TestResult . Status = cmCTestTestHandler :: INTERRUPT', u'this -> TestResult . Status = cmCTestTestHandler :: SEGFAULT'])","set([97, 68, 101, 73, 111, 80, 116, 105, 89, 93])","[[], []]",2009-08-27T14:37:30,Zach Mullen,0,550
8ffd8d0a03d68241ce4f5f8a9fd266bee1032e1d,"ENH: refactored ctest.  All testing is now parallel.  If no -j option is specified, defaults to a MP level of 1 (non parallel)",[],Source/CTest/cmCTestRunTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_499.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_499.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_499.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1296.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1296.cpp,273,173,275,175,"sprintf(buf, ""%6.2f sec"", this->TestResult.ExecutionTime);","sprintf(buf, ""%6.2f sec"", this->TestProcess->GetTotalTime());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1054.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1054.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1054.cpp,235,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1054.cpp,118,"[""char *"", ""constant"", ""member""]","[""this -> CTest -> GetShowOnly_ret""]","set([u'this -> TestResult . Status = cmCTestTestHandler :: COMPLETED', u'this -> TestResult . Status = cmCTestTestHandler :: BAD_COMMAND', u'this -> TestResult . Status = cmCTestTestHandler :: OTHER_FAULT', u'this -> TestResult . Status = cmCTestTestHandler :: NUMERICAL', u'this -> TestResult . Status = cmCTestTestHandler :: ILLEGAL', u'char buf [ 1024 ] ;', u'this -> TestResult . Status = cmCTestTestHandler :: FAILED', u'this -> TestResult . Status = cmCTestTestHandler :: TIMEOUT', u'this -> TestResult . Status = cmCTestTestHandler :: INTERRUPT', u'this -> TestResult . Status = cmCTestTestHandler :: SEGFAULT'])","set([98, 69, 102, 106, 112, 81, 117, 90, 74, 94])","[['TestResult', 'ExecutionTime'], ['TestProcess', 'GetTotalTime']]",2009-08-26T16:09:06,Zach Mullen,2726362145731977180,76
8ffd8d0a03d68241ce4f5f8a9fd266bee1032e1d,"ENH: refactored ctest.  All testing is now parallel.  If no -j option is specified, defaults to a MP level of 1 (non parallel)",[],Source/CTest/cmCTestTestHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_500.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_500.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_500.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1297.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1297.cpp,591,598,594,606,"sprintf(buf, ""%6.2f sec"", totalTestTime);","sprintf(totalBuf, ""%6.2f sec"", totalTestTime);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1055.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1055.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1055.cpp,101,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1055.cpp,113,"[""char *"", ""constant"", ""double""]","[""this -> CTest -> GetParallelSubprocess_ret""]","set([u'totalTestTime += result -> ExecutionTime', u'double totalTestTime = 0 ;', u'char totalBuf [ 1024 ] ;', u'this -> LogFile = & mLogFile'])","set([112, 104, 98, 47])","[['buf'], ['totalBuf']]",2009-08-26T16:09:06,Zach Mullen,2430032098504911069,77
8ffd8d0a03d68241ce4f5f8a9fd266bee1032e1d,"ENH: refactored ctest.  All testing is now parallel.  If no -j option is specified, defaults to a MP level of 1 (non parallel)",[],Source/CTest/cmCTestTestHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_500.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_500.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_500.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1297.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1297.cpp,591,598,594,601,,"sprintf(realBuf, ""%6.2f sec"", (double)(clock_finish - clock_start));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1056.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1056.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1056.cpp,101,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1056.cpp,108,"[""char *"", ""constant"", ""double""]","[""this -> CTest -> GetParallelSubprocess_ret""]","set([u'char realBuf [ 1024 ] ;', u'this -> LogFile = & mLogFile', u'clock_start = cmSystemTools :: GetTime ( )', u'clock_finish = cmSystemTools :: GetTime ( )'])","set([55, 107, 59, 47])","[[], ['sprintf', 'realBuf', '%6', '2f', 'sec', 'double', 'clock_finish', 'clock_start']]",2009-08-26T16:09:06,Zach Mullen,-13508703803817636893,78
98c51ff6dcd5e6aa80050cfc00f19eb6092e79c0,"ENH: Overhaul CMake version numbering

This moves the version numbers into an isolated configured header so
that not all of CMake needs to rebuild when the version changes.

Previously we had spaces, dashes and/or the word 'patch' randomly chosen
before the patch number.  Now we always report version numbers in the
traditional format ""<major>.<minor>.<patch>[-rc<rc>]"".

We still use odd minor numbers for development versions.  Now we also
use the CCYYMMDD date as the patch number of development versions, thus
allowing tests for exact CMake versions.",[],Source/WXDialog/CMakeSetupFrame.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_507.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_507.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_507.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1310.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1310.cpp,700,700,702,702,"str.Printf(""CMake %d.%d - %s"", cmVersion::GetMajorVersion(),
               cmVersion::GetMinorVersion(), 
               cmVersion::GetReleaseVersion().c_str());","str.Printf(""CMake %s"", cmVersion::GetCMakeVersion());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1057.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1057.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1057.cpp,86,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1057.cpp,86,"[""constant"", ""cmVersion :: GetMajorVersion_ret"", ""cmVersion :: GetMinorVersion_ret"", ""cmVersion :: GetReleaseVersion ( ) . c_str_ret""]",[],set([u'wxString str ;']),set([85]),"[['%d', '%d', 'GetMajorVersion', 'cmVersion', 'GetMinorVersion', 'cmVersion', 'GetReleaseVersion', 'c_str'], ['GetCMakeVersion']]",2009-03-05T20:17:07,Brad King,-13577673780287002106,79
3043ddf1445de03556564917e01a4f9748b04d89,BUG: #8611 add pass fail reasons into log file,[u'https://gitlab.kitware.com/cmake/cmake/issues/8611'],Source/CTest/cmCTestTestHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_508.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_508.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_508.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1312.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1312.cpp,761,761,770,-1,"sprintf(buffer, ""%02d:%02d:%02d"", hours, minutes, seconds);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1058.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1058.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1058.cpp,126,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1058.cpp,-1,"[""char *"", ""string"", ""int"", ""int"", ""int""]","[""member""]",set([u'wxString str ;']),set([85]),"[['sprintf', 'buffer', '%02d', '%02d', '%02d', 'hours', 'minutes', 'seconds'], []]",2009-02-27T21:28:07,Bill Hoffman,-12628380378576715800,503
3043ddf1445de03556564917e01a4f9748b04d89,BUG: #8611 add pass fail reasons into log file,[u'https://gitlab.kitware.com/cmake/cmake/issues/8611'],Source/CTest/cmCTestTestHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_508.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_508.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_508.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1313.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1313.cpp,949,932,951,949,,"sprintf(buffer, ""%02d:%02d:%02d"", hours, minutes, seconds);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1059.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1059.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1059.cpp,307,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1059.cpp,305,[],"[""std :: string"", ""string"", ""==""]","set([u'int minutes = static_cast < int > ( ttime / 60 ) % 60 ;', u'int hours = static_cast < int > ( ttime / ( 60 * 60 ) ) ;', u'char buffer [ 100 ] ;', u'int seconds = static_cast < int > ( ttime ) % 60 ;'])","set([304, 301, 302, 303])","[[], ['sprintf', 'buffer', '%02d', '%02d', '%02d', 'hours', 'minutes', 'seconds']]",2009-02-27T21:28:07,Bill Hoffman,12628380378576715800,506
dc13914cd698b49cbae491c1e1aebbcd44fbe932,"ENH: Create cmXMLSafe to help escapes in XML

This class provides easy syntax to efficiently insert blocks of data
into XML documents with proper escapes.  It replaces the old
cmCTest::MakeXMLSafe and cmSystemTools::MakeXMLSafe methods which
allocated extra memory instead of directly streaming the data.",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_509.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_509.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_509.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1314.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1314.cpp,149,150,168,-1,"sprintf(buffer, ""&lt;%d&gt;"", (int)ch);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1060.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1060.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1060.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1060.cpp,-1,"[""char *"", ""string"", ""char""]","[""char"", ""int"", "">"", ""char"", ""int"", ""<"", ""||"", ""char"", ""int"", ""!="", ""char"", ""int"", ""!="", ""char"", ""int"", ""!="", ""char"", ""char"", ""!="", ""&&"", ""&&"", ""&&"", ""&&""]","set([u'int minutes = static_cast < int > ( ttime / 60 ) % 60 ;', u'int hours = static_cast < int > ( ttime / ( 60 * 60 ) ) ;', u'char buffer [ 100 ] ;', u'int seconds = static_cast < int > ( ttime ) % 60 ;'])","set([304, 301, 302, 303])","[['sprintf', 'buffer', '&lt', '%d&gt', 'int', 'ch'], []]",2009-02-05T21:31:37,Brad King,14515098099290020964,80
ae7f2b47b3f94ec023f19474755cc76a2c0c6edc,"COMP: Fix unused yyunput warning in lexer

This adds the ""nounput"" option to the flex input file so that yyunput is
not generated.  The function is static but not used so some compilers
warn.",[],Source/cmCommandArgumentLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_511.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_511.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_511.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1316.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1316.cpp,1264,1262,1294,-1,"YY_FATAL_ERROR( ""flex scanner push-back overflow"" );",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1061.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1061.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1061.cpp,28,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1061.cpp,-1,"[""string""]","[""member"", ""member"", ""<""]","set([u'int minutes = static_cast < int > ( ttime / 60 ) % 60 ;', u'int hours = static_cast < int > ( ttime / ( 60 * 60 ) ) ;', u'char buffer [ 100 ] ;', u'int seconds = static_cast < int > ( ttime ) % 60 ;'])","set([304, 301, 302, 303])","[['YY_FATAL_ERROR', 'flex', 'scanner', 'push', 'back', 'overflow'], []]",2008-12-17T14:33:18,Brad King,-13089941603600733105,81
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1318.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1318.cpp,565,574,571,580,"sprintf(buf, ""%u"", this->VersionPatch);","sprintf(buf, ""%u"", this->VersionPatch);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1062.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1062.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1062.cpp,36,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1062.cpp,36,"[""char *"", ""string"", ""member""]","[""member""]",set([u'char buf [ 64 ] ;']),set([31]),"[[], []]",2008-09-10T14:11:48,Brad King,0,550
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1318.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1318.cpp,565,574,576,578,"sprintf(buf, ""%u"", this->VersionMinor);","sprintf(buf, ""%u"", this->VersionMinor);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1063.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1063.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1063.cpp,41,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1063.cpp,34,"[""char *"", ""string"", ""member""]","[""member""]",set([u'char buf [ 64 ] ;']),set([31]),"[[], []]",2008-09-10T14:11:48,Brad King,0,550
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1318.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1318.cpp,565,574,581,576,"sprintf(buf, ""%u"", this->VersionMajor);","sprintf(buf, ""%u"", this->VersionMajor);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1064.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1064.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1064.cpp,46,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1064.cpp,32,"[""char *"", ""string"", ""member""]","[""member""]",set([u'char buf [ 64 ] ;']),set([31]),"[[], []]",2008-09-10T14:11:48,Brad King,0,550
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1318.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1318.cpp,565,574,588,582,,"sprintf(buf, ""%u"", this->VersionTweak);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1065.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1065.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1065.cpp,53,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1065.cpp,38,[],"[""this -> Version . empty_ret""]",set([u'char buf [ 64 ] ;']),set([31]),"[[], ['sprintf', 'buf', '%u', 'this', 'VersionTweak']]",2008-09-10T14:11:48,Brad King,-4291428101206391715,481
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1318.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1318.cpp,565,574,588,584,,"sprintf(buf, ""%u"", this->VersionCount);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1066.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1066.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1066.cpp,53,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1066.cpp,40,[],"[""this -> Version . empty_ret""]",set([u'char buf [ 64 ] ;']),set([31]),"[[], ['sprintf', 'buf', '%u', 'this', 'VersionCount']]",2008-09-10T14:11:48,Brad King,2201581367064854174,482
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1319.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1319.cpp,1234,1234,1239,1241,"sprintf(buf, ""%u"", this->VersionPatch);","sprintf(buf, ""%u"", this->VersionPatch);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1067.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1067.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1067.cpp,17,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1067.cpp,19,"[""char *"", ""string"", ""member""]","[""member"", ""int"", "">=""]",set([u'char buf [ 64 ] ;']),set([14]),"[[], []]",2008-09-10T14:11:48,Brad King,0,550
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1319.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1319.cpp,1234,1234,1249,1239,"sprintf(buf, ""%u"", this->VersionMinor);","sprintf(buf, ""%u"", this->VersionMinor);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1068.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1068.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1068.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1068.cpp,17,"[""char *"", ""string"", ""member""]","[""member"", ""int"", "">=""]",set([u'char buf [ 64 ] ;']),set([14]),"[[], []]",2008-09-10T14:11:48,Brad King,0,550
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1319.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1319.cpp,1234,1234,1259,1237,"sprintf(buf, ""%u"", this->VersionMajor);","sprintf(buf, ""%u"", this->VersionMajor);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1069.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1069.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1069.cpp,37,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1069.cpp,15,"[""char *"", ""string"", ""member""]","[""member"", ""int"", "">=""]",set([u'char buf [ 64 ] ;']),set([14]),"[[], []]",2008-09-10T14:11:48,Brad King,0,550
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1319.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1319.cpp,1234,1234,1268,1243,,"sprintf(buf, ""%u"", this->VersionTweak);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1070.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1070.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1070.cpp,46,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1070.cpp,21,[],[],set([u'char buf [ 64 ] ;']),set([14]),"[[], ['sprintf', 'buf', '%u', 'this', 'VersionTweak']]",2008-09-10T14:11:48,Brad King,-4291428101206391715,481
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1319.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1319.cpp,1234,1234,1268,1245,,"sprintf(buf, ""%u"", this->VersionCount);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1071.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1071.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1071.cpp,46,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1071.cpp,23,[],[],set([u'char buf [ 64 ] ;']),set([14]),"[[], ['sprintf', 'buf', '%u', 'this', 'VersionCount']]",2008-09-10T14:11:48,Brad King,2201581367064854174,482
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1320.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1320.cpp,1321,1305,1329,1313,"sprintf(buf, ""%u"", this->VersionFoundPatch);","sprintf(buf, ""%u"", this->VersionFoundPatch);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1072.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1072.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1072.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1072.cpp,20,"[""char *"", ""string"", ""member""]","[""member""]",set([u'char buf [ 64 ] ;']),set([15]),"[[], []]",2008-09-10T14:11:48,Brad King,0,550
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1320.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1320.cpp,1321,1305,1334,1311,"sprintf(buf, ""%u"", this->VersionFoundMinor);","sprintf(buf, ""%u"", this->VersionFoundMinor);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1073.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1073.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1073.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1073.cpp,18,"[""char *"", ""string"", ""member""]","[""member""]",set([u'char buf [ 64 ] ;']),set([15]),"[[], []]",2008-09-10T14:11:48,Brad King,0,550
994262e5cc05abfb96da9af38f8d84988405ea5b,"ENH: Improve find_package version numbering

Make the number of version components specified explicitly available.
Set variables for unspecified version components to ""0"" instead of
leaving them unset.  This simplifies version number handling for find-
and config-modules.  Also support a fourth ""tweak"" version component
since some packages use them.",[],Source/cmFindPackageCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_513.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_513.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1320.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1320.cpp,1321,1305,1339,1309,"sprintf(buf, ""%u"", this->VersionFoundMajor);","sprintf(buf, ""%u"", this->VersionFoundMajor);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1074.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1074.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1074.cpp,30,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1074.cpp,16,"[""char *"", ""string"", ""member""]","[""member""]",set([u'char buf [ 64 ] ;']),set([15]),"[[], []]",2008-09-10T14:11:48,Brad King,0,550
816ee0f83cd9775e3b378fe3b074efe06d6b29a6,"ENH: New link line item ordering algorithm

This change introduces a new algorithm for link line construction.  The
order it computes always begins with the exact link line specified by
the user.  Dependencies of items specified by the user are tracked, and
those that are not already satisified by the line are appended to it at
the end with minimal repeats.  This restores the behavior of CMake 2.4
and below while still fixing some of its bugs.  See issue #7546.",[u'https://gitlab.kitware.com/cmake/cmake/issues/7546'],Source/cmComputeLinkDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_514.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_514.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_514.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1323.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1323.cpp,793,835,796,842,"fprintf(stderr, ""\n"");","fprintf(stderr, ""  topo order index %d\n"",
            this->ComponentOrder[c]);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1077.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1077.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1077.cpp,16,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1077.cpp,20,"[""unkown"", ""string""]",[],"set([u'std :: vector < NodeList > const & components = this -> CCG -> GetComponents ( ) ;', u'unsigned int c = 0 ;'])","set([4, 5])","[['\\n'], ['topo', 'order', 'index', '%d\\n', 'this', 'ComponentOrder[c]']]",2008-08-27T14:21:57,Brad King,-104599794397777562,82
68dfcefbcb755018ddadfa8bf132114a1b3fa28c,"COMP: sprintf warnings. DWORD should use %ld rather than %d. Also, const char *p, a shadowed variable warning.",[],Source/kwsys/SystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_516.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_516.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_516.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1325.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1325.cpp,4279,4279,4281,4281,"sprintf(buffer, ""%d"", osvi.dwMajorVersion);","sprintf(buffer, ""%ld"", osvi.dwMajorVersion);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1080.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1080.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1080.cpp,175,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1080.cpp,175,"[""char *"", ""string"", ""member""]","[""RegQueryValueEx_ret"", ""macro"", ""!="", ""DWORD"", ""macro"", "">"", ""||"", ""!""]","set([u'osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )', u'lRet = RegQueryValueEx ( hKey , ""ProductType"" , NULL , NULL , ( LPBYTE ) szProductType , & dwBufLen )', u'DWORD dwBufLen = BUFSIZE ;', u'osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )', u'char buffer [ 256 ] ;'])","set([19, 139, 5, 14, 151])","[['%d'], ['%ld']]",2008-05-11T02:48:53,Bill Lorensen,-4775301843693679707,540
68dfcefbcb755018ddadfa8bf132114a1b3fa28c,"COMP: sprintf warnings. DWORD should use %ld rather than %d. Also, const char *p, a shadowed variable warning.",[],Source/kwsys/SystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_516.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_516.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_516.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1325.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1325.cpp,4279,4279,4284,4284,"sprintf(buffer, ""%d"", osvi.dwMinorVersion);","sprintf(buffer, ""%ld"", osvi.dwMinorVersion);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1081.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1081.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1081.cpp,178,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1081.cpp,178,"[""char *"", ""string"", ""member""]","[""RegQueryValueEx_ret"", ""macro"", ""!="", ""DWORD"", ""macro"", "">"", ""||"", ""!""]","set([u'char buffer [ 256 ] ;', u'lRet = RegQueryValueEx ( hKey , ""ProductType"" , NULL , NULL , ( LPBYTE ) szProductType , & dwBufLen )', u'DWORD dwBufLen = BUFSIZE ;', u'osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )', u'osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )'])","set([19, 139, 5, 14, 151])","[['%d'], ['%ld']]",2008-05-11T02:48:53,Bill Lorensen,-4775301843693679707,540
68dfcefbcb755018ddadfa8bf132114a1b3fa28c,"COMP: sprintf warnings. DWORD should use %ld rather than %d. Also, const char *p, a shadowed variable warning.",[],Source/kwsys/SystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_516.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_516.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_516.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1326.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1326.cpp,4304,4304,4306,4306,"sprintf(buffer, ""%d"", osvi.dwBuildNumber & 0xFFFF);","sprintf(buffer, ""%ld"", osvi.dwBuildNumber & 0xFFFF);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1082.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1082.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1082.cpp,200,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1082.cpp,200,"[""char *"", ""string"", ""bool""]","[""RegOpenKeyEx_ret"", ""macro"", ""==""]","set([u'osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )', u'lRet = RegOpenKeyEx ( HKEY_LOCAL_MACHINE , ""SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Hotfix\\\\Q246009"" , 0 , KEY_QUERY_VALUE , & hKey )', u'osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )', u'char buffer [ 256 ] ;'])","set([192, 19, 5, 14])","[['%d'], ['%ld']]",2008-05-11T02:48:53,Bill Lorensen,-4775301843693679707,540
68dfcefbcb755018ddadfa8bf132114a1b3fa28c,"COMP: sprintf warnings. DWORD should use %ld rather than %d. Also, const char *p, a shadowed variable warning.",[],Source/kwsys/SystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_516.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_516.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_516.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1327.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1327.cpp,4313,4313,4315,4315,"sprintf(buffer, ""%d"", osvi.dwBuildNumber & 0xFFFF);","sprintf(buffer, ""%ld"", osvi.dwBuildNumber & 0xFFFF);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1083.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1083.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1083.cpp,209,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1083.cpp,209,"[""char *"", ""string"", ""bool""]","[""RegOpenKeyEx_ret"", ""macro"", ""=="", ""!""]","set([u'char buffer [ 256 ] ;', u'lRet = RegOpenKeyEx ( HKEY_LOCAL_MACHINE , ""SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Hotfix\\\\Q246009"" , 0 , KEY_QUERY_VALUE , & hKey )', u'osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )', u'osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )'])","set([192, 19, 5, 14])","[['%d'], ['%ld']]",2008-05-11T02:48:53,Bill Lorensen,-4775301843693679707,540
68dfcefbcb755018ddadfa8bf132114a1b3fa28c,"COMP: sprintf warnings. DWORD should use %ld rather than %d. Also, const char *p, a shadowed variable warning.",[],Source/kwsys/SystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_516.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_516.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_516.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1328.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1328.cpp,4325,4325,4327,4327,"sprintf(buffer, ""%d"", osvi.dwBuildNumber & 0xFFFF);","sprintf(buffer, ""%ld"", osvi.dwBuildNumber & 0xFFFF);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1084.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1084.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1084.cpp,221,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1084.cpp,221,"[""char *"", ""string"", ""bool""]","[""member"", ""int"", ""=="", ""lstrcmpi_ret"", ""null"", ""=="", ""&&"", ""!""]","set([u'osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )', u'osvi . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )', u'char buffer [ 256 ] ;'])","set([19, 5, 14])","[['%d'], ['%ld']]",2008-05-11T02:48:53,Bill Lorensen,-4775301843693679707,540
52898fe9250aaa16904640874852c45bfc4c325b,"BUG: Fix Fortran dependency parser preprocessor handling crash.

  - Do not crash if a #elseif occurs out of order
  - Recognize preprocessor directives only at the beginning of lines.
  - See issue #6855",[u'https://gitlab.kitware.com/cmake/cmake/issues/6855'],Source/cmDependsFortranLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_517.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_517.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_517.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1329.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1329.cpp,1427,1476,1429,1483,,"YY_FATAL_ERROR( ""out of dynamic memory in yy_get_next_buffer()"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1085.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1085.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1085.cpp,116,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1085.cpp,121,[],"[""member"", ""null"", ""=="", ""!""]","set([u'YY_CURRENT_BUFFER_LVALUE -> yy_ch_buf = ( char * ) cmDependsFortran_yyrealloc ( ( void * ) YY_CURRENT_BUFFER_LVALUE -> yy_ch_buf , new_size , yyscanner )'])",set([119]),"[[], ['YY_FATAL_ERROR', 'out', 'of', 'dynamic', 'memory', 'in', 'yy_get_next_buffer']]",2008-04-21T15:15:56,Brad King,24360157688648809926,483
52898fe9250aaa16904640874852c45bfc4c325b,"BUG: Fix Fortran dependency parser preprocessor handling crash.

  - Do not crash if a #elseif occurs out of order
  - Recognize preprocessor directives only at the beginning of lines.
  - See issue #6855",[u'https://gitlab.kitware.com/cmake/cmake/issues/6855'],Source/cmDependsFortranLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_517.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_517.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_517.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1331.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1331.cpp,1858,1915,1861,1918,,"YY_FATAL_ERROR( ""out of dynamic memory in cmDependsFortran_yyensure_buffer_stack()"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1086.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1086.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1086.cpp,16,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1086.cpp,16,"[""member"", ""null"", ""int""]","[""member""]","set([u'yyg -> yy_buffer_stack = ( struct yy_buffer_state * * ) cmDependsFortran_yyalloc ( num_to_alloc * sizeof ( struct yy_buffer_state * ) , yyscanner )', u'struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;'])","set([3, 12])","[[], ['YY_FATAL_ERROR', 'out', 'of', 'dynamic', 'memory', 'in', 'cmDependsFortran_yyensure_buffer_stack']]",2008-04-21T15:15:56,Brad King,18412251163381513300,83
5233b75a777b0f3379408291e6f32b0eb15c2f54,"ENH: Improve handling of old-style compatibility.

  - Remove CMP_0001 (no slash in target name) and restore
    old CMAKE_BACKWARDS_COMPATIBILITY check for it
  - Replace all checks of CMAKE_BACKWARDS_COMPATIBILITY
    with cmLocalGenerator::NeedBackwardsCompatibility calls
  - Create new CMP_0001 to determine whether or not
    CMAKE_BACKWARDS_COMPATIBILITY is used.
    (old = use, new = ignore)
  - Show CMAKE_BACKWARDS_COMPATIBILITY in cache only when
    CMP_0001 is set to OLD or WARN
  - Update documentation of cmake_policy and cmake_minimum_required
    to indicate their relationship and the 2.4 version boundary
  - When no cmake policy version is set in top level makefile
    implicitly call cmake_policy(VERSION 2.4) which restores
    CMAKE_BACKWARDS_COMPATIBILITY and other 2.4 compatibility
  - Fix tests MakeClean and Preprocess to call
    cmake_policy(VERSION 2.6) because they depend on new policies",[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_518.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_518.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_518.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1335.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1335.cpp,1899,1899,1905,-1,"sprintf(ver,""%i.%i"",cmVersion::GetMajorVersion(),
            cmVersion::GetMinorVersion());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1088.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1088.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1088.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1088.cpp,-1,"[""char *"", ""constant"", ""cmVersion :: GetMajorVersion_ret"", ""cmVersion :: GetMinorVersion_ret""]","[""this -> CacheManager -> GetCacheValue_ret""]","set([u'yyg -> yy_buffer_stack = ( struct yy_buffer_state * * ) cmDependsFortran_yyalloc ( num_to_alloc * sizeof ( struct yy_buffer_state * ) , yyscanner )', u'struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;'])","set([3, 12])","[['sprintf', 'ver', '%i', '%i', 'cmVersion', 'GetMajorVersion', 'cmVersion', 'GetMinorVersion'], []]",2008-03-07T20:30:35,Brad King,-9255104011295747707,541
5233b75a777b0f3379408291e6f32b0eb15c2f54,"ENH: Improve handling of old-style compatibility.

  - Remove CMP_0001 (no slash in target name) and restore
    old CMAKE_BACKWARDS_COMPATIBILITY check for it
  - Replace all checks of CMAKE_BACKWARDS_COMPATIBILITY
    with cmLocalGenerator::NeedBackwardsCompatibility calls
  - Create new CMP_0001 to determine whether or not
    CMAKE_BACKWARDS_COMPATIBILITY is used.
    (old = use, new = ignore)
  - Show CMAKE_BACKWARDS_COMPATIBILITY in cache only when
    CMP_0001 is set to OLD or WARN
  - Update documentation of cmake_policy and cmake_minimum_required
    to indicate their relationship and the 2.4 version boundary
  - When no cmake policy version is set in top level makefile
    implicitly call cmake_policy(VERSION 2.4) which restores
    CMAKE_BACKWARDS_COMPATIBILITY and other 2.4 compatibility
  - Fix tests MakeClean and Preprocess to call
    cmake_policy(VERSION 2.6) because they depend on new policies",[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_518.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_518.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_518.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1336.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1336.cpp,2392,2379,2399,-1,"sprintf(ver,""%i.%i"",cmVersion::GetMajorVersion(),
            cmVersion::GetMinorVersion());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1089.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1089.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1089.cpp,36,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1089.cpp,-1,"[""char *"", ""constant"", ""cmVersion :: GetMajorVersion_ret"", ""cmVersion :: GetMinorVersion_ret""]","[""this -> CacheManager -> GetCacheValue_ret""]","set([u'yyg -> yy_buffer_stack = ( struct yy_buffer_state * * ) cmDependsFortran_yyalloc ( num_to_alloc * sizeof ( struct yy_buffer_state * ) , yyscanner )', u'struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;'])","set([3, 12])","[['sprintf', 'ver', '%i', '%i', 'cmVersion', 'GetMajorVersion', 'cmVersion', 'GetMinorVersion'], []]",2008-03-07T20:30:35,Brad King,-9255104011295747707,541
cd4d2acbe654ca57a9ffc7ca34dcf4835bfc77c3,ENH: more policy changes,[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_519.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_519.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_519.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1337.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1337.cpp,1899,1899,1905,-1,"sprintf(ver,""%i.%i"",cmVersion::GetMajorVersion(),
            cmVersion::GetMinorVersion());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1090.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1090.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1090.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1090.cpp,-1,"[""char *"", ""constant"", ""cmVersion :: GetMajorVersion_ret"", ""cmVersion :: GetMinorVersion_ret""]","[""this -> CacheManager -> GetCacheValue_ret""]","set([u'yyg -> yy_buffer_stack = ( struct yy_buffer_state * * ) cmDependsFortran_yyalloc ( num_to_alloc * sizeof ( struct yy_buffer_state * ) , yyscanner )', u'struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;'])","set([3, 12])","[['sprintf', 'ver', '%i', '%i', 'cmVersion', 'GetMajorVersion', 'cmVersion', 'GetMinorVersion'], []]",2008-03-04T19:51:25,Ken Martin,-9255104011295747707,541
cd4d2acbe654ca57a9ffc7ca34dcf4835bfc77c3,ENH: more policy changes,[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_519.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_519.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_519.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1338.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1338.cpp,2393,2380,2399,-1,"sprintf(ver,""%i.%i"",cmVersion::GetMajorVersion(),
            cmVersion::GetMinorVersion());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1091.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1091.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1091.cpp,36,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1091.cpp,-1,"[""char *"", ""constant"", ""cmVersion :: GetMajorVersion_ret"", ""cmVersion :: GetMinorVersion_ret""]","[""this -> CacheManager -> GetCacheValue_ret""]","set([u'yyg -> yy_buffer_stack = ( struct yy_buffer_state * * ) cmDependsFortran_yyalloc ( num_to_alloc * sizeof ( struct yy_buffer_state * ) , yyscanner )', u'struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;'])","set([3, 12])","[['sprintf', 'ver', '%i', '%i', 'cmVersion', 'GetMajorVersion', 'cmVersion', 'GetMinorVersion'], []]",2008-03-04T19:51:25,Ken Martin,-9255104011295747707,541
4987e17f46cb2542106ee2d9afe2752ef78d0f1f,"ENH: Improve link line generation for static library cycles.

  - Move Tarjan algorithm from cmComputeTargetDepends
    into its own class cmComputeComponentGraph
  - Use cmComputeComponentGraph to identify the component DAG
    of link dependencies in cmComputeLinkDepends
  - Emit non-trivial component members more than once but always
    in a contiguous group on the link line",[],Source/cmComputeTargetDepends.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_520.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_520.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_520.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1340.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1340.cpp,295,292,396,-1,"fprintf(stderr, ""The strongly connected components are:\n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1092.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1092.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1092.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1092.cpp,-1,"[""unkown"", ""string""]",[],"set([u'yyg -> yy_buffer_stack = ( struct yy_buffer_state * * ) cmDependsFortran_yyalloc ( num_to_alloc * sizeof ( struct yy_buffer_state * ) , yyscanner )', u'struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;'])","set([3, 12])","[['fprintf', 'stderr', 'The', 'strongly', 'connected', 'components', 'are', '\\n'], []]",2008-02-07T21:14:05,Brad King,28722890713370325925,84
433099ecddb334cc6e43c6302594d7c713ef4d1e,ENH: Converted cmMakefile DefineFlags added by ADD_DEFINITIONS command into a COMPILE_DEFINITIONS directory property.,[],Tests/Preprocess/preprocess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_522.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_522.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_522.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1345.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1345.cpp,82,94,86,98,,"fprintf(stderr, ""DIRECTORY_DEF_DEBUG should be defined in C\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1102.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1102.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1102.cpp,78,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1102.cpp,90,"[""unkown"", ""string""]",[],set([]),set([]),"[[], ['fprintf', 'stderr', 'DIRECTORY_DEF_DEBUG', 'should', 'be', 'defined', 'in', 'C\\n']]",2008-01-18T00:29:43,Brad King,-14656618301910722731,85
433099ecddb334cc6e43c6302594d7c713ef4d1e,ENH: Converted cmMakefile DefineFlags added by ADD_DEFINITIONS command into a COMPILE_DEFINITIONS directory property.,[],Tests/Preprocess/preprocess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_522.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_522.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_522.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1347.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1347.cpp,153,177,157,181,,"fprintf(stderr, ""DIRECTORY_DEF not defined in C\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1104.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1104.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1104.cpp,149,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1104.cpp,173,"[""unkown"", ""string""]",[],set([]),set([]),"[[], ['fprintf', 'stderr', 'DIRECTORY_DEF', 'not', 'defined', 'in', 'C\\n']]",2008-01-18T00:29:43,Brad King,-13571962450052168265,86
433099ecddb334cc6e43c6302594d7c713ef4d1e,ENH: Converted cmMakefile DefineFlags added by ADD_DEFINITIONS command into a COMPILE_DEFINITIONS directory property.,[],Tests/Preprocess/preprocess.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_523.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_523.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_523.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1350.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1350.cpp,84,96,88,100,,"fprintf(stderr, ""DIRECTORY_DEF_DEBUG should be defined in CXX\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1107.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1107.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1107.cpp,78,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1107.cpp,90,"[""unkown"", ""string""]",[],set([]),set([]),"[[], ['fprintf', 'stderr', 'DIRECTORY_DEF_DEBUG', 'should', 'be', 'defined', 'in', 'CXX\\n']]",2008-01-18T00:29:43,Brad King,-13360521822054457153,87
433099ecddb334cc6e43c6302594d7c713ef4d1e,ENH: Converted cmMakefile DefineFlags added by ADD_DEFINITIONS command into a COMPILE_DEFINITIONS directory property.,[],Tests/Preprocess/preprocess.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_523.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_523.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_523.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1352.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1352.cpp,155,179,159,183,,"fprintf(stderr, ""DIRECTORY_DEF not defined in CXX\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1109.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1109.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1109.cpp,149,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1109.cpp,173,"[""unkown"", ""string""]",[],set([]),set([]),"[[], ['fprintf', 'stderr', 'DIRECTORY_DEF', 'not', 'defined', 'in', 'CXX\\n']]",2008-01-18T00:29:43,Brad King,-12275865970195902687,88
50c5d5a3d5b6edc32baf3f6102368aae535262e0,ENH: fix leaks and turn on by default,[],Source/kwsys/SystemInformation.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_524.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_524.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_524.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1353.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1353.cpp,171,172,176,177,"sprintf(temp,""%d"",this->ChipID.Type);",str << this->ChipID.Type;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1110.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1110.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1110.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1110.cpp,3,"[""char *"", ""string"", ""member""]",[],set([]),set([]),"[['sprintf', 'temp', '%d'], ['str']]",2008-01-08T19:59:57,Bill Hoffman,6382453178153965330,542
50c5d5a3d5b6edc32baf3f6102368aae535262e0,ENH: fix leaks and turn on by default,[],Source/kwsys/SystemInformation.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_524.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_524.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_524.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1353.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1353.cpp,171,172,184,185,"sprintf(temp,""%d"",this->ChipID.Family);",str << this->ChipID.Family;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1111.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1111.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1111.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1111.cpp,3,"[""char *"", ""string"", ""member""]",[],set([]),set([]),"[['sprintf', 'temp', '%d'], ['str']]",2008-01-08T19:59:57,Bill Hoffman,6382453178153965330,542
50c5d5a3d5b6edc32baf3f6102368aae535262e0,ENH: fix leaks and turn on by default,[],Source/kwsys/SystemInformation.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_524.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_524.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_524.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1353.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1353.cpp,171,172,192,193,"sprintf(temp,""%d"",this->ChipID.Model);",str << this->ChipID.Model;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1112.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1112.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1112.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1112.cpp,3,"[""char *"", ""string"", ""member""]",[],set([]),set([]),"[['sprintf', 'temp', '%d'], ['str']]",2008-01-08T19:59:57,Bill Hoffman,6382453178153965330,542
50c5d5a3d5b6edc32baf3f6102368aae535262e0,ENH: fix leaks and turn on by default,[],Source/kwsys/SystemInformation.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_524.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_524.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_524.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1353.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1353.cpp,171,172,200,201,"sprintf(temp,""%d"",this->ChipID.Revision);",str << this->ChipID.Revision;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1113.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1113.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1113.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1113.cpp,3,"[""char *"", ""string"", ""member""]",[],set([]),set([]),"[['sprintf', 'temp', '%d'], ['str']]",2008-01-08T19:59:57,Bill Hoffman,6382453178153965330,542
a65193857293f065139bc991488d0cef9a199c16,ENH: fix the compile and add install rule,[],Source/WXDialog/CMakeSetupFrame.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_526.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_526.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_526.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1356.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1356.cpp,1693,1696,1695,-1,"cmversion.Printf(""v%i.%i %s"", cmake::GetMajorVersion(), cmake::GetMinorVersion(), cmake::GetReleaseVersion());",,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1115.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1115.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1115.cpp,11,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1115.cpp,-1,"[""constant"", ""cmake :: GetMajorVersion_ret"", ""cmake :: GetMinorVersion_ret"", ""cmake :: GetReleaseVersion_ret""]",[],set([]),set([]),"[['cmversion', 'Printf', 'v%i', '%i', '%s', 'cmake', 'GetMajorVersion', 'cmake', 'GetMinorVersion', 'cmake', 'GetReleaseVersion'], []]",2007-11-05T19:47:20,Bill Hoffman,-34414947944146045549,89
3edcd70754afe7c6b2ff71e0010c6b3d64b4fe37,ENH: Update zlib to 1.2.3. Addresses bugs #5445 and #3473.,"[u'https://gitlab.kitware.com/cmake/cmake/issues/5445', u'https://gitlab.kitware.com/cmake/cmake/issues/3473']",Utilities/cmzlib/gzio.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_529.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_529.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_529.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1365.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1365.cpp,528,606,537,617,,"len = vsprintf(buf, format, va);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1117.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1117.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1117.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1117.cpp,15,"[""char *""]",[],"set([u'va_list va ;', u'buf [ sizeof ( buf ) - 1 ] = 0', u'char buf [ Z_PRINTF_BUFSIZE ] ;', u'len ++', u'const char * format', u'len = 0 ;'])","set([0, 2, 3, 12, 6])","[[], ['len', 'vsprintf', 'buf', 'format', 'va']]",2007-09-11T15:22:29,David Cole,10751895095830079854,90
9c2d6f98d7e0fd42bcf2ec78fbd66190c6dc439e,"ENH: apply patch from Mathieu which creates a deb file (not finishsed yet)

Alex",[],Source/CPack/cmCPackGenerators.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_530.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_530.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_530.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1367.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1367.cpp,90,90,92,-1,"fprintf(stderr, ""********* NewGen %s\n"", name);",,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1122.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1122.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1122.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1122.cpp,-1,"[""unkown"", ""string"", ""const char *""]",[],"set([u'va_list va ;', u'buf [ sizeof ( buf ) - 1 ] = 0', u'char buf [ Z_PRINTF_BUFSIZE ] ;', u'len ++', u'const char * format', u'len = 0 ;'])","set([0, 2, 3, 12, 6])","[['fprintf', 'stderr', '*********', 'NewGen', '%s\\n', 'name'], []]",2007-07-25T17:08:17,Alexander Neundorf,735695396589925946,91
9c2d6f98d7e0fd42bcf2ec78fbd66190c6dc439e,"ENH: apply patch from Mathieu which creates a deb file (not finishsed yet)

Alex",[],Source/CPack/cmCPackGenerators.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_530.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_530.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_530.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1368.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1368.cpp,106,105,108,-1,"fprintf(stderr, ""*** 1 name==0\n"");",,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1123.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1123.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1123.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1123.cpp,-1,"[""unkown"", ""string""]","[""const char *"", ""!""]","set([u'va_list va ;', u'buf [ sizeof ( buf ) - 1 ] = 0', u'char buf [ Z_PRINTF_BUFSIZE ] ;', u'len ++', u'const char * format', u'len = 0 ;'])","set([0, 2, 3, 12, 6])","[['fprintf', 'stderr', '***', '1', 'name', '0\\n'], []]",2007-07-25T17:08:17,Alexander Neundorf,8756765448481028227,92
9c2d6f98d7e0fd42bcf2ec78fbd66190c6dc439e,"ENH: apply patch from Mathieu which creates a deb file (not finishsed yet)

Alex",[],Source/CPack/cmCPackGenerators.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_530.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_530.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_530.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1368.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1368.cpp,106,105,111,-1,"fprintf(stderr, ""*** 2 name==%s\n"", name);",,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1124.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1124.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1124.cpp,8,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1124.cpp,-1,"[""unkown"", ""string"", ""const char *""]","[""const char *"", ""!"", ""!""]","set([u'va_list va ;', u'buf [ sizeof ( buf ) - 1 ] = 0', u'char buf [ Z_PRINTF_BUFSIZE ] ;', u'len ++', u'const char * format', u'len = 0 ;'])","set([0, 2, 3, 12, 6])","[['fprintf', 'stderr', '***', '2', 'name', '%s\\n', 'name'], []]",2007-07-25T17:08:17,Alexander Neundorf,8067946317039495410,93
9c2d6f98d7e0fd42bcf2ec78fbd66190c6dc439e,"ENH: apply patch from Mathieu which creates a deb file (not finishsed yet)

Alex",[],Source/CPack/cmCPackGenerators.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_530.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_530.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_530.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1368.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1368.cpp,106,105,116,-1,"fprintf(stderr, ""*** 2 name==%s not found\n"", name);",,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1125.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1125.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1125.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1125.cpp,-1,"[""unkown"", ""string"", ""const char *""]","[""cmCPackGenerators :: t_GeneratorCreatorsMap :: iterator"", ""this -> GeneratorCreators . end_ret"", ""==""]","set([u'va_list va ;', u'buf [ sizeof ( buf ) - 1 ] = 0', u'char buf [ Z_PRINTF_BUFSIZE ] ;', u'len ++', u'const char * format', u'len = 0 ;'])","set([0, 2, 3, 12, 6])","[['fprintf', 'stderr', '***', '2', 'name', '%s', 'not', 'found\\n', 'name'], []]",2007-07-25T17:08:17,Alexander Neundorf,1901824396554198237,94
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,55,,"fprintf(ofp, ""# include <io.h>\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1127.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1127.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1127.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1127.cpp,38,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', 'include', 'io', 'h', '\\n']]",2007-04-19T16:11:16,Brad King,3644737738125508664,95
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,56,,"fprintf(ofp, ""#else\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1128.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1128.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1128.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1128.cpp,39,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', 'else\\n']]",2007-04-19T16:11:16,Brad King,-3993310516106425371,484
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,57,,"fprintf(ofp, ""# include <unistd.h>\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1129.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1129.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1129.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1129.cpp,40,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', 'include', 'unistd', 'h', '\\n']]",2007-04-19T16:11:16,Brad King,-676627815756314707,96
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,58,,"fprintf(ofp, ""#endif\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1130.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1130.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1130.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1130.cpp,41,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', 'endif\\n']]",2007-04-19T16:11:16,Brad King,6657444937423611005,485
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,59,,"fprintf(ofp, ""\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1131.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1131.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1131.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1131.cpp,42,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', '\\n']]",2007-04-19T16:11:16,Brad King,-1057315775540124162,543
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,60,,"fprintf(ofp, ""static void kwsys_unlink(const char* fname)\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1132.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1132.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1132.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1132.cpp,43,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', 'static', 'void', 'kwsys_unlink', 'const', 'char*', 'fname', '\\n']]",2007-04-19T16:11:16,Brad King,1509637170934934866,97
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,61,,"fprintf(ofp, ""{\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1133.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1133.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1133.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1133.cpp,44,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', '\\n']]",2007-04-19T16:11:16,Brad King,-1057315775540124162,543
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,62,,"fprintf(ofp, ""#if defined(__WATCOMC__)\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1134.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1134.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1134.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1134.cpp,45,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', 'if', 'defined', '__WATCOMC__', '\\n']]",2007-04-19T16:11:16,Brad King,-7448076144337393134,98
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,63,,"fprintf(ofp, ""  unlink(fname);\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1135.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1135.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1135.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1135.cpp,46,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', 'unlink', 'fname', '\\n']]",2007-04-19T16:11:16,Brad King,3687891824458562447,99
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,64,,"fprintf(ofp, ""#else\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1136.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1136.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1136.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1136.cpp,47,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', 'else\\n']]",2007-04-19T16:11:16,Brad King,-3993310516106425371,484
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,65,,"fprintf(ofp, ""  _unlink(fname);\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1137.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1137.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1137.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1137.cpp,48,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', '_unlink', 'fname', '\\n']]",2007-04-19T16:11:16,Brad King,4688843922970785901,100
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,66,,"fprintf(ofp, ""#endif\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1138.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1138.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1138.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1138.cpp,49,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', 'endif\\n']]",2007-04-19T16:11:16,Brad King,6657444937423611005,485
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,67,,"fprintf(ofp, ""}\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1139.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1139.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1139.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1139.cpp,50,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', '\\n']]",2007-04-19T16:11:16,Brad King,-1057315775540124162,543
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1372.cpp,52,52,56,68,,"fprintf(ofp, ""\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1140.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1140.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1140.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1140.cpp,51,"[""unsigned char *"", ""int"", ""int"", ""fopen_ret""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[[], ['fprintf', 'ofp', '\\n']]",2007-04-19T16:11:16,Brad King,-1057315775540124162,543
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1373.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1373.cpp,78,93,80,-1,"fprintf(ofp, ""#ifdef __WATCOMC__\n"");",,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1141.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1141.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1141.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1141.cpp,-1,"[""fopen_ret"", ""string""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[['fprintf', 'ofp', 'ifdef', '__WATCOMC__\\n'], []]",2007-04-19T16:11:16,Brad King,8313528935175683002,101
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1373.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1373.cpp,78,93,81,-1,"fprintf(ofp, ""#define _unlink unlink\n"");",,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1142.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1142.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1142.cpp,64,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1142.cpp,-1,"[""fopen_ret"", ""string""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[['fprintf', 'ofp', 'define', '_unlink', 'unlink\\n'], []]",2007-04-19T16:11:16,Brad King,-12078741431914041221,102
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1373.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1373.cpp,78,93,82,-1,"fprintf(ofp, ""#endif\n"");",,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1143.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1143.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1143.cpp,65,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1143.cpp,-1,"[""fopen_ret"", ""string""]","[""fopen_ret"", ""!"", ""!""]","set([u'ofp = fopen ( argv [ 2 ] , ""w"" )'])",set([24]),"[['fprintf', 'ofp', 'endif\\n'], []]",2007-04-19T16:11:16,Brad King,-6657444937423611005,103
d75bfedab59d325b72d575beac8844290de0c279,COMP: Need to include header for unlink function.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_534.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_534.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1374.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1374.cpp,91,103,93,105,"fprintf(ofp, ""    _unlink(fname);\n"");","fprintf(ofp, ""    kwsys_unlink(fname);\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1144.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1144.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1144.cpp,76,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1144.cpp,88,"[""fopen_ret"", ""string""]","[""null"", ""fopen_ret"", ""<""]","set([u'i = 0 ;', u'fprintf ( ofp , ""static unsigned char kwsysEncodedArray%s_%d[%d] = {\\n"" , argv [ 4 ] , count ++ , n )', u'ofp = fopen ( argv [ 2 ] , ""w"" )', u'int count = 0 ;'])","set([80, 56, 6, 24])","[['_unlink'], ['kwsys_unlink']]",2007-04-19T16:11:16,Brad King,-521878868106058160,104
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/base64.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_535.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_535.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_535.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1375.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1375.cpp,205,256,212,272,"fprintf(stdout, ""%s"",   base64);","fprintf(stdout, ""%s\n"", base64);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1145.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1145.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1145.cpp,11,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1145.cpp,20,"[""unkown"", ""string"", ""char *""]",[],"set([u'handle = curl_easy_init ( )', u'char * base64 ;'])","set([2, 10])","[['%s'], ['%s\\n']]",2007-03-15T19:22:15,Andy Cedilnik,6140229210961666644,105
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/base64.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_535.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_535.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_535.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1375.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1375.cpp,205,256,214,264,,"fprintf(stderr, ""Error: curl_easy_init failed\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1146.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1146.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1146.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1146.cpp,12,"[""suck_ret""]",[],set([u'handle = curl_easy_init ( )']),set([10]),"[[], ['fprintf', 'stderr', 'Error', 'curl_easy_init', 'failed\\n']]",2007-03-15T19:22:15,Andy Cedilnik,-18478041827446790412,486
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/base64.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_535.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_535.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_535.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1376.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1376.cpp,235,298,242,304,,"fprintf(stderr, ""Error: curl_easy_init failed\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1147.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1147.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1147.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1147.cpp,11,"[""unkown"", ""string"", ""Curl_base64_decode_ret""]",[],set([u'struct SessionHandle * handle = curl_easy_init ( ) ;']),set([9]),"[[], ['fprintf', 'stderr', 'Error', 'curl_easy_init', 'failed\\n']]",2007-03-15T19:22:15,Andy Cedilnik,-18478041827446790412,486
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/base64.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_535.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_535.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_535.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1377.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1377.cpp,253,323,256,331,"printf(""%c"", isgraph(data[i+j])?data[i+j]:'.');","printf(""%c"", ISGRAPH(data[i+j])?data[i+j]:'.');",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1148.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1148.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1148.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1148.cpp,38,"[""string"", ""member""]","[""null"", ""Curl_base64_decode_ret"", ""<""]","set([u'i = 0 ;', u'dataLen = Curl_base64_decode ( base64 , & data )', u'i += 0x10', u'unsigned char * data ;', u'j = 0 ;', u'j ++', u""data [ i + j ] = '.'""])","set([4, 17, 36, 21, 31])","[['isgraph'], ['ISGRAPH']]",2007-03-15T19:22:15,Andy Cedilnik,0,550
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/hostip4.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_541.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_541.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_541.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1385.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1385.cpp,125,101,163,-1,"snprintf((char*)(h->h_name), 16, ""%s"", hostname);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1154.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1154.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1154.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1154.cpp,-1,"[""member"", ""int"", ""string"", ""char *""]",[],"set([u'i = 0 ;', u'dataLen = Curl_base64_decode ( base64 , & data )', u'i += 0x10', u'unsigned char * data ;', u'j = 0 ;', u'j ++', u""data [ i + j ] = '.'""])","set([4, 17, 36, 21, 31])","[['snprintf', 'char*', 'h', 'h_name', '16', '%s', 'hostname'], []]",2007-03-15T19:22:15,Andy Cedilnik,-7147695836161283590,106
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/hostip6.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_542.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_542.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_542.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1388.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1388.cpp,244,272,251,290,"snprintf(sbuf, sizeof(sbuf), ""%d"", port);","snprintf(sbuf, sizeof(sbuf), ""%d"", port);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1159.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1159.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1159.cpp,49,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1159.cpp,62,"[""char *"", ""unkown"", ""string"", ""int""]",[],"set([u'char sbuf [ NI_MAXSERV ] ;', u'int port'])","set([2, 7])","[[], []]",2007-03-15T19:22:15,Andy Cedilnik,0,550
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_543.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1389.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1389.cpp,145,150,152,157,"*userp = aprintf( ""%sAuthorization: Basic %s\015\012"",
                      proxy?""Proxy-"":"""",
                      authorization);","*userp = aprintf( ""%sAuthorization: Basic %s\r\n"",
                      proxy?""Proxy-"":"""",
                      authorization);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1160.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1160.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1160.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1160.cpp,25,"[""string"", ""string"", ""char *""]","[""Curl_base64_encode_ret"", ""null"", "">""]","set([u'char * authorization ;', u'userp = & conn -> allocptr . userpwd', u'struct SessionHandle * data = conn -> data ;', u'bool proxy', u'userp = & conn -> allocptr . proxyuserpwd'])","set([0, 9, 2, 3, 14])","[['%s\\015\\012'], ['%s\\r\\n']]",2007-03-15T19:22:15,Andy Cedilnik,13209083978346519233,487
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_543.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1390.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1390.cpp,895,1093,969,1167,,"host = aprintf(""Host: %s\r\n"", host_port);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1161.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1161.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1161.cpp,67,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1161.cpp,60,"[""unkown""]","[""Curl_http_output_auth_ret"", ""!""]","set([u'struct SessionHandle * data = conn -> data ;', u'host_port = aprintf ( ""%s:%d"" , hostname , remote_port )'])","set([6, 47])","[[], ['host', 'aprintf', 'Host', '%s\\r\\n', 'host_port']]",2007-03-15T19:22:15,Andy Cedilnik,25880189899401809502,107
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_543.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1391.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1391.cpp,1300,1710,1319,1724,"conn->allocptr.ref = aprintf(""Referer: %s\015\012"", data->change.referer);","conn->allocptr.ref = aprintf(""Referer: %s\r\n"", data->change.referer);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1162.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1162.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1162.cpp,92,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1162.cpp,93,"[""string"", ""member""]","[""member"", ""checkheaders_ret"", ""!"", ""&&""]","set([u'conn -> allocptr . uagent = NULL', u'conn -> bits . authneg = FALSE', u'struct SessionHandle * data = conn -> data ;', u'data -> reqdata . proto . http = http', u'struct connectdata * conn', u'conn -> bits . authneg = TRUE'])","set([0, 2, 73, 86, 89, 27])","[['%s\\015\\012'], ['%s\\r\\n']]",2007-03-15T19:22:15,Andy Cedilnik,13209083978346519233,487
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_543.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1391.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1391.cpp,1300,1710,1352,1735,,"(""Accept-Encoding: %s\r\n"";",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1163.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1163.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1163.cpp,125,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1163.cpp,104,"[""member""]","[""Curl_http_output_auth_ret"", ""!""]","set([u'conn -> allocptr . uagent = NULL', u'conn -> bits . authneg = FALSE', u'struct SessionHandle * data = conn -> data ;', u'data -> reqdata . proto . http = http', u'struct connectdata * conn', u'conn -> bits . authneg = TRUE'])","set([0, 2, 73, 86, 89, 27])","[[], ['Accept', 'Encoding', '%s\\r\\n']]",2007-03-15T19:22:15,Andy Cedilnik,-8290298080566915805,108
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_543.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1392.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1392.cpp,1533,1942,1535,1944,"conn->allocptr.rangeline = aprintf(""Range: bytes=%s\r\n"", conn->range);","conn->allocptr.rangeline = aprintf(""Range: bytes=%s\r\n"", data->reqdata.range);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1164.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1164.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1164.cpp,308,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1164.cpp,313,"[""string"", ""member""]","[""macro"", ""macro"", ""=="", ""checkheaders_ret"", ""!"", ""&&""]","set([u'struct SessionHandle * data = conn -> data ;', u'data -> set . infilesize -= data -> reqdata . resume_from', u'conn -> allocptr . host = NULL', u'data -> change . url_alloc = TRUE', u'Curl_HttpReq httpreq = data -> set . httpreq ;', u'data -> reqdata . proto . http = http', u'httpreq = HTTPREQ_PUT', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" )', u'struct connectdata * conn', u'conn -> allocptr . host = aprintf ( ""Host: %s%s%s:%d\\r\\n"" , conn -> bits . ipv6_ip ? ""["" : """" , host , conn -> bits . ipv6_ip ? ""]"" : """" , conn -> remote_port )', u'data -> reqdata . resume_from = 0'])","set([0, 2, 163, 292, 37, 168, 11, 213, 153, 260, 27])","[['conn'], ['data', 'reqdata']]",2007-03-15T19:22:15,Andy Cedilnik,-19645347029931465883,109
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_543.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_543.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1393.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1393.cpp,1674,2089,1683,2097,,"snprintf(buf, BUFSIZE-1,
               ""%s, %02d %s %4d %02d:%02d:%02d GMT"",
               Curl_wkday[tm->tm_wday?tm->tm_wday-1:6],
               tm->tm_mday,
               Curl_month[tm->tm_mon],
               tm->tm_year + 1900,
               tm->tm_hour,
               tm->tm_min,
               tm->tm_sec);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1165.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1165.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1165.cpp,456,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1165.cpp,466,"[""char *"", ""macro"", ""string"", ""gmtime_r_ret""]","[""member""]","set([u'struct SessionHandle * data = conn -> data ;', u'data -> set . infilesize -= data -> reqdata . resume_from', u'tm = ( struct tm * ) gmtime_r ( & data -> set . timevalue , & keeptime )', u'data -> change . url_alloc = TRUE', u'data -> reqdata . proto . http = http', u'char * buf = data -> state . buffer ;', u'data -> reqdata . resume_from = 0'])","set([2, 3, 260, 460, 213, 292, 27])","[[], ['snprintf', 'buf', 'BUFSIZE', '1', '%s', '%02d', '%s', '%4d', '%02d', '%02d', '%02d', 'GMT', 'Curl_wkday[tm', 'tm_wday', 'tm', 'tm_wday', '1', '6]', 'tm', 'tm_mday', 'Curl_month[tm', 'tm_mon]', 'tm', 'tm_year', '1900', 'tm', 'tm_hour', 'tm', 'tm_min', 'tm', 'tm_sec']]",2007-03-15T19:22:15,Andy Cedilnik,46105769606166545635,110
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/http_ntlm.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_545.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_545.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_545.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1400.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1400.cpp,372,708,387,745,,"DEBUG_OUT(fprintf(stderr, ""**** Header %s\n "", *allocuserpwd));",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1200.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1200.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1200.cpp,111,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1200.cpp,259,"[""char *""]","[""Curl_base64_encode_ret"", ""null"", "">""]","set([u'allocuserpwd = & conn -> allocptr . userpwd', u'allocuserpwd = & conn -> allocptr . proxyuserpwd', u'* allocuserpwd = aprintf ( ""%sAuthorization: NTLM %s\\r\\n"" , proxy ? ""Proxy-"" : """" , base64 )', u'size = Curl_base64_encode ( NULL , ( char * ) ntlmbuf , size , & base64 )'])","set([256, 252, 38, 31])","[[], ['DEBUG_OUT', 'fprintf', 'stderr', '****', 'Header', '%s\\n', '*allocuserpwd']]",2007-03-15T19:22:15,Andy Cedilnik,-14094108825563928010,111
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/http_ntlm.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_545.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_545.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_545.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1401.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1401.cpp,411,770,449,911,"size = snprintf((char *)ntlmbuf, sizeof(ntlmbuf),
                    ""NTLMSSP%c""
                    ""\x03%c%c%c"" /* type-3, 32 bits */

                    ""%c%c%c%c"" /* LanManager length + allocated space */
                    ""%c%c"" /* LanManager offset */
                    ""%c%c"";","size = snprintf((char *)ntlmbuf, sizeof(ntlmbuf),
                    NTLMSSP_SIGNATURE ""%c""
                    ""\x03%c%c%c"" /* type-3, 32 bits */

                    ""%c%c"" /* LanManager length */
                    ""%c%c"" /* LanManager allocated space */
                    ""%c%c"" /* LanManager offset */
                    ""%c%c"";",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1201.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1201.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1201.cpp,173,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1201.cpp,425,[],"[""member""]","set([u'allocuserpwd = & conn -> allocptr . userpwd', u'allocuserpwd = & conn -> allocptr . proxyuserpwd', u'* allocuserpwd = aprintf ( ""%sAuthorization: NTLM %s\\r\\n"" , proxy ? ""Proxy-"" : """" , base64 )', u'size = Curl_base64_encode ( NULL , ( char * ) ntlmbuf , size , & base64 )'])","set([256, 252, 38, 31])","[['NTLMSSP%c', '%c%c%c%c'], ['NTLMSSP_SIGNATURE', '%c', '%c%c', '/*', 'LanManager', '*/', '%c%c']]",2007-03-15T19:22:15,Andy Cedilnik,-1155948357714714867,112
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/http_ntlm.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_545.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_545.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_545.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1402.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1402.cpp,518,983,560,1067,,"DEBUG_OUT(fprintf(stderr, ""**** %s\n "", *allocuserpwd));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1202.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1202.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1202.cpp,284,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1202.cpp,581,"[""char *""]","[""Curl_base64_encode_ret"", ""null"", "">""]","set([u'size = Curl_base64_encode ( NULL , ( char * ) ntlmbuf , size , & base64 )', u'allocuserpwd = & conn -> allocptr . proxyuserpwd', u'* allocuserpwd = aprintf ( ""%sAuthorization: NTLM %s\\r\\n"" , proxy ? ""Proxy-"" : """" , base64 )', u'allocuserpwd = & conn -> allocptr . userpwd'])","set([578, 38, 574, 31])","[[], ['DEBUG_OUT', 'fprintf', 'stderr', '****', '%s\\n', '*allocuserpwd']]",2007-03-15T19:22:15,Andy Cedilnik,-8266457864933034715,113
9314bb49e09b323f1c889d95448ca5dd0a42cc61,ENH: Update Curl to 7.16.1,[],Utilities/cmcurl/memdebug.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_547.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_547.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_547.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1407.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1407.cpp,200,205,202,207,"fprintf(logfile, ""MEM %s:%d realloc(0x%x, %zd) = %p\n"",
            source, line, ptr, wantedsize, mem?mem->mem:NULL);","fprintf(logfile, ""MEM %s:%d realloc(%p, %zd) = %p\n"",
            source, line, ptr, wantedsize, mem?mem->mem:NULL);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1203.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1203.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1203.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1203.cpp,15,"[""unkown"", ""string"", ""const char *"", ""int"", ""void *"", ""size_t"", ""member""]","[""unkown""]","set([u'void * ptr', u'int line', u'size_t wantedsize', u'mem = ( struct memdebug * ) ( Curl_crealloc ) ( mem , size )', u'const char * source'])","set([0, 1, 13])","[['0x%x'], ['%p']]",2007-03-15T19:22:15,Andy Cedilnik,3499754574407978738,114
2f84bd17581920eb5cbfc3b41e8cf477ba6a5853,ENH: added per test timeout support,[],Source/CTest/cmCTestTestHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_548.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_548.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_548.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1408.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1408.cpp,559,559,561,686,,"sprintf(buffer, ""%02d:%02d:%02d"", hours, minutes, seconds);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1204.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1204.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1204.cpp,0,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1204.cpp,125,[],[],"set([u'int minutes = static_cast < int > ( ttime / 60 ) % 60 ;', u'int seconds = static_cast < int > ( ttime ) % 60 ;', u'char buffer [ 100 ] ;', u'int hours = static_cast < int > ( ttime / ( 60 * 60 ) ) ;'])","set([121, 122, 123, 124])","[[], ['sprintf', 'buffer', '%02d', '%02d', '%02d', 'hours', 'minutes', 'seconds']]",2007-01-25T16:16:16,Ken Martin,12628380378576715800,506
2f84bd17581920eb5cbfc3b41e8cf477ba6a5853,ENH: added per test timeout support,[],Source/CTest/cmCTestTestHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_548.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_548.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_548.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1409.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1409.cpp,649,924,765,-1,"sprintf(buffer, ""%02d:%02d:%02d"", hours, minutes, seconds);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1205.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1205.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1205.cpp,204,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1205.cpp,-1,"[""char *"", ""string"", ""int"", ""int"", ""int""]","[""member""]","set([u'int minutes = static_cast < int > ( ttime / 60 ) % 60 ;', u'int seconds = static_cast < int > ( ttime ) % 60 ;', u'char buffer [ 100 ] ;', u'int hours = static_cast < int > ( ttime / ( 60 * 60 ) ) ;'])","set([121, 122, 123, 124])","[['sprintf', 'buffer', '%02d', '%02d', '%02d', 'hours', 'minutes', 'seconds'], []]",2007-01-25T16:16:16,Ken Martin,-12628380378576715800,503
3a32cec96923cf057aad00274b4a8ab7ad82a82f,ENH: merge in changes for beos support,[],Utilities/cmtar/extract.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_549.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_549.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_549.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1410.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1410.cpp,750,751,753,754,"f(""  ==> extracting: %s (mode %04o, directory)\n"", filename,
         mode);","y(buf, filename, sizeof(buf)-1);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1206.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1206.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1206.cpp,40,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1206.cpp,41,"[""string"", ""th_get_pathname_ret"", ""th_get_mode_ret""]","[""mkdirhier_ret"", ""int"", ""=="", ""!""]","set([u'filename = realname', u'char buf [ T_BLOCKSIZE ] ;', u'filename = pathname'])","set([17, 5, 22])","[['f', 'extracting', '%s', 'mode', '%04o', 'directory', '\\n', 'mode'], ['y', 'buf', 'sizeof', 'buf', '1']]",2006-12-04T22:26:41,Bill Hoffman,6204279035476210060,115
ccb77b65c673037780483e23c7bc1b4bf1d17cbc,"ENH: unify version stuff, get rid of it out of cmake and cmMakefile and only use cmVersion",[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_551.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_551.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_551.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1413.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1413.cpp,1487,1487,1489,1489,"sprintf(ver,""%i.%i"",cmMakefile::GetMajorVersion(),
            cmMakefile::GetMinorVersion());","sprintf(ver,""%i.%i"",cmVersion::GetMajorVersion(),
            cmVersion::GetMinorVersion());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1208.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1208.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1208.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1208.cpp,29,"[""char *"", ""constant"", ""cmMakefile :: GetMajorVersion_ret"", ""cmMakefile :: GetMinorVersion_ret""]","[""this -> CacheManager -> GetCacheValue_ret""]",set([u'char ver [ 256 ] ;']),set([28]),"[['cmMakefile', 'cmMakefile'], ['cmVersion', 'cmVersion']]",2006-11-29T20:59:16,Bill Hoffman,24140392967015467550,488
ccb77b65c673037780483e23c7bc1b4bf1d17cbc,"ENH: unify version stuff, get rid of it out of cmake and cmMakefile and only use cmVersion",[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_551.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_551.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_551.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1414.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1414.cpp,1852,1837,1854,1839,"sprintf(tmp,""Version %d.%d (%s)"", cmake::GetMajorVersion(),
          cmake::GetMinorVersion(), cmVersion::GetReleaseVersion().c_str());","sprintf(tmp,""Version %d.%d (%s)"", cmVersion::GetMajorVersion(),
          cmVersion::GetMinorVersion(),
          cmVersion::GetReleaseVersion().c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1209.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1209.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1209.cpp,8,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1209.cpp,8,"[""char *"", ""constant"", ""cmake :: GetMajorVersion_ret"", ""cmake :: GetMinorVersion_ret"", ""cmVersion :: GetReleaseVersion ( ) . c_str_ret""]",[],set([u'char tmp [ 1024 ] ;']),set([7]),"[['cmake', 'cmake'], ['cmVersion', 'cmVersion']]",2006-11-29T20:59:16,Bill Hoffman,5164162527666323242,116
ccb77b65c673037780483e23c7bc1b4bf1d17cbc,"ENH: unify version stuff, get rid of it out of cmake and cmMakefile and only use cmVersion",[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_551.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_551.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_551.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1415.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1415.cpp,1959,1945,1961,1947,"sprintf(ver,""%i.%i"",cmMakefile::GetMajorVersion(),
            cmMakefile::GetMinorVersion());","sprintf(ver,""%i.%i"",cmVersion::GetMajorVersion(),
            cmVersion::GetMinorVersion());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1210.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1210.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1210.cpp,36,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1210.cpp,36,"[""char *"", ""constant"", ""cmMakefile :: GetMajorVersion_ret"", ""cmMakefile :: GetMinorVersion_ret""]","[""this -> CacheManager -> GetCacheValue_ret""]",set([u'char ver [ 256 ] ;']),set([35]),"[['cmMakefile', 'cmMakefile'], ['cmVersion', 'cmVersion']]",2006-11-29T20:59:16,Bill Hoffman,24140392967015467550,488
bdf8e186e5084020a4cbbbe9aa2f63af0febf4ff,BUG: Need to match shared library names before static because some platforms have static name patterns that match their shared patterns but not vice versa.  This is needed for implementing bug#1644 on cygwin.,[u'https://gitlab.kitware.com/cmake/cmake/issues/1644'],Source/cmOrderLinkDirectories.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_555.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_555.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_555.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1420.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1420.cpp,267,267,273,-1,"fprintf(stderr, ""static regex matched [%s] [%s] [%s]\n"",
              this->ExtractStaticLibraryName.match(1).c_str(),
              this->ExtractStaticLibraryName.match(2).c_str(),
              this->ExtractStaticLibraryName.match(3).c_str());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1212.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1212.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1212.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1212.cpp,-1,"[""unkown"", ""string"", ""this -> ExtractStaticLibraryName . match ( 1 ) . c_str_ret"", ""this -> ExtractStaticLibraryName . match ( 2 ) . c_str_ret"", ""this -> ExtractStaticLibraryName . match ( 3 ) . c_str_ret""]","[""this -> ExtractStaticLibraryName . find_ret""]",set([u'char ver [ 256 ] ;']),set([35]),"[['fprintf', 'stderr', 'static', 'regex', 'matched', '[%s]', '[%s]', '[%s]\\n', 'this', 'ExtractStaticLibraryName', 'match', '1', 'c_str', 'this', 'ExtractStaticLibraryName', 'match', '2', 'c_str', 'this', 'ExtractStaticLibraryName', 'match', '3', 'c_str'], []]",2006-10-05T20:59:46,Brad King,-6721826600592427351,117
bdf8e186e5084020a4cbbbe9aa2f63af0febf4ff,BUG: Need to match shared library names before static because some platforms have static name patterns that match their shared patterns but not vice versa.  This is needed for implementing bug#1644 on cygwin.,[u'https://gitlab.kitware.com/cmake/cmake/issues/1644'],Source/cmOrderLinkDirectories.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_555.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_555.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_555.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1421.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1421.cpp,290,288,292,293,,"fprintf(stderr, ""static regex matched [%s] [%s] [%s]\n"",
              this->ExtractStaticLibraryName.match(1).c_str(),
              this->ExtractStaticLibraryName.match(2).c_str(),
              this->ExtractStaticLibraryName.match(3).c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1213.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1213.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1213.cpp,31,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1213.cpp,32,"[""originalLinkItems . begin_ret""]","[""this -> ExtractSharedLibraryName . find_ret"", ""!""]","set([u'this -> CurrentLinkType = this -> StartLinkType', u'std :: vector < cmStdString > :: iterator i = originalLinkItems . begin ( ) ;'])","set([4, 5])","[[], ['fprintf', 'stderr', 'static', 'regex', 'matched', '[%s]', '[%s]', '[%s]\\n', 'this', 'ExtractStaticLibraryName', 'match', '1', 'c_str', 'this', 'ExtractStaticLibraryName', 'match', '2', 'c_str', 'this', 'ExtractStaticLibraryName', 'match', '3', 'c_str']]",2006-10-05T20:59:46,Brad King,6721826600592427351,118
f1ea7e88dc8322d4344e6b7acde6bf7bcffd7806,ENH: Exposed pattern->regex API.  Cleaned up and commented implementation of pattern->regex conversion.,[],Source/kwsys/Glob.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_557.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_557.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_557.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1428.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1428.cpp,73,72,82,-1,"sprintf(buffer, ""\\%c"", ch);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1215.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1215.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1215.cpp,7,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1215.cpp,-1,"[""char *"", ""string"", ""int""]","[""char"", ""int"", ""<="", ""int"", ""char"", ""<="", ""&&"", ""char"", ""int"", ""<="", ""int"", ""char"", ""<="", ""&&"", ""char"", ""int"", ""<="", ""int"", ""char"", ""<="", ""&&"", ""||"", ""||"", ""!""]","set([u'this -> CurrentLinkType = this -> StartLinkType', u'std :: vector < cmStdString > :: iterator i = originalLinkItems . begin ( ) ;'])","set([4, 5])","[['sprintf', 'buffer', '\\\\%c', 'ch'], []]",2006-08-21T18:17:58,Brad King,11959775316089533488,119
f1ea7e88dc8322d4344e6b7acde6bf7bcffd7806,ENH: Exposed pattern->regex API.  Cleaned up and commented implementation of pattern->regex conversion.,[],Source/kwsys/Glob.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_557.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_557.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_557.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1428.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1428.cpp,73,72,88,186,"sprintf(buffer, ""%c"", tolower(ch));",ch = tolower(ch);,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1216.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1216.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1216.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1216.cpp,106,"[""char *"", ""string"", ""tolower_ret""]","[""char"", ""int"", ""<="", ""int"", ""char"", ""<="", ""&&"", ""char"", ""int"", ""<="", ""int"", ""char"", ""<="", ""&&"", ""char"", ""int"", ""<="", ""int"", ""char"", ""<="", ""&&"", ""||"", ""||"", ""!"", ""!""]",set([u'int ch = c ;']),set([93]),"[['sprintf', 'buffer', '%c'], ['ch']]",2006-08-21T18:17:58,Brad King,6818709899016303672,120
d4ae4849f77082ee48f61e5b130ca6fd153b71ea,ENH: reorder code to remove forward declarations,[],Utilities/cmcompress/cmcompress.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_558.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_558.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_558.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1429.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1429.cpp,92,89,120,-1,"printf(""Error...\n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1218.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1218.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1218.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1218.cpp,-1,"[""constant""]","[""ferror_ret""]",set([u'int ch = c ;']),set([93]),"[['printf', 'Error', '\\n'], []]",2006-08-17T16:04:26,Ken Martin,-15534324410612049158,121
d4ae4849f77082ee48f61e5b130ca6fd153b71ea,ENH: reorder code to remove forward declarations,[],Utilities/cmcompress/cmcompress.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_558.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_558.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_558.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1430.cpp,350,123,370,-1,"fprintf(stream, ""%d.%02d%%"", q / 100, q % 100);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1219.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1219.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1219.cpp,17,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1219.cpp,-1,"[""FILE *"", ""constant"", ""constant"", ""constant""]",[],set([u'int ch = c ;']),set([93]),"[['fprintf', 'stream', '%d', '%02d%%', 'q', '/', '100', 'q', '%', '100'], []]",2006-08-17T16:04:26,Ken Martin,8278039269833539390,122
11d18d65dc97ca52d372c8e5ef8294a7f27cb08e,ENH: revert change in parser as it sent the parser into an infinite loop,[],Source/cmDependsFortranLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_559.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_559.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_559.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1438.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1438.cpp,2049,2107,2051,2109,"yy_fatal_error( ""cmDependsFortran_yyset_lineno called with no buffer"" );","yy_fatal_error( ""cmDependsFortran_yyset_lineno called with no buffer"" , yyscanner);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1222.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1222.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1222.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1222.cpp,6,"[""string""]","[""macro"", ""!""]",set([u'yyscan_t yyscanner']),set([0]),"[[], ['yyscanner']]",2006-08-16T18:22:40,Bill Hoffman,3528205590648888989,489
11d18d65dc97ca52d372c8e5ef8294a7f27cb08e,ENH: revert change in parser as it sent the parser into an infinite loop,[],Source/cmDependsFortranLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_559.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_559.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_559.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1439.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1439.cpp,2064,2122,2066,2124,"yy_fatal_error( ""cmDependsFortran_yyset_column called with no buffer"" );","yy_fatal_error( ""cmDependsFortran_yyset_column called with no buffer"" , yyscanner);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1223.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1223.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1223.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1223.cpp,6,"[""string""]","[""macro"", ""!""]",set([u'yyscan_t yyscanner']),set([0]),"[[], ['yyscanner']]",2006-08-16T18:22:40,Bill Hoffman,3528205590648888989,489
7169980b59c16370fa5abec8159afc5cc84a96cd,ENH: change comment for fortran depend parsing,[],Source/cmDependsFortranLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_560.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_560.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_560.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1446.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1446.cpp,2107,2049,2109,2051,"yy_fatal_error( ""cmDependsFortran_yyset_lineno called with no buffer"" , yyscanner);","yy_fatal_error( ""cmDependsFortran_yyset_lineno called with no buffer"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1224.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1224.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1224.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1224.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([]),set([]),"[['yyscanner'], []]",2006-08-15T14:56:00,Bill Hoffman,-3528205590648888989,546
7169980b59c16370fa5abec8159afc5cc84a96cd,ENH: change comment for fortran depend parsing,[],Source/cmDependsFortranLexer.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_560.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_560.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_560.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1447.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1447.cpp,2122,2064,2124,2066,"yy_fatal_error( ""cmDependsFortran_yyset_column called with no buffer"" , yyscanner);","yy_fatal_error( ""cmDependsFortran_yyset_column called with no buffer"" );",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1225.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1225.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1225.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1225.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([]),set([]),"[['yyscanner'], []]",2006-08-15T14:56:00,Bill Hoffman,-3528205590648888989,546
898dfe5a2deff445d501f3991b7553c3b3332dff,ENH: Cleanup. Replace c-style cast with static_cast and replace sprintf with cmOStringStream,[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_561.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_561.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_561.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1448.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1448.cpp,2384,2383,2386,2386,"f(tgtName, ""%s%d"", graphNodePrefix, cnt++);",ostr << graphNodePrefix << cnt++;,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1226.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1226.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1226.cpp,94,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1226.cpp,94,"[""char *"", ""string"", ""unkown"", ""int""]","[""ignoreTargetsSet . find_ret"", ""ignoreTargetsSet . end_ret"", ""!="", ""!""]","set([u'ostr << graphNodePrefix << cnt ++', u'std :: set < cmStdString > ignoreTargetsSet ;', u'const char * realTargetName = tit -> first . c_str ( ) ;', u'int cnt = 0 ;'])","set([50, 78, 86, 94])","[['f', 'tgtName', '%s%d'], ['ostr']]",2006-07-21T17:05:56,Andy Cedilnik,2509619690924804383,123
898dfe5a2deff445d501f3991b7553c3b3332dff,ENH: Cleanup. Replace c-style cast with static_cast and replace sprintf with cmOStringStream,[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_561.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_561.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_561.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1449.cpp,2421,2421,2423,-1,"sprintf(tgtName, ""%s%d"", graphNodePrefix, cnt++);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1227.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1227.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1227.cpp,131,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1227.cpp,-1,"[""char *"", ""string"", ""unkown"", ""int""]","[""std :: map < cmStdString , cmStdString > :: iterator"", ""targetNamesNodes . end_ret"", ""==""]","set([u'ostr << graphNodePrefix << cnt ++', u'std :: set < cmStdString > ignoreTargetsSet ;', u'const char * realTargetName = tit -> first . c_str ( ) ;', u'int cnt = 0 ;'])","set([50, 78, 86, 94])","[['sprintf', 'tgtName', '%s%d', 'graphNodePrefix', 'cnt'], []]",2006-07-21T17:05:56,Andy Cedilnik,4937645142456714904,124
9bf5af6e32570195b06df594c1cb07f8c7a6a83e,ENH: Moved unique object file name computation from cmLocalUnixMakefileGenerator3 up to cmLocalGenerator for use by all generators.  Created cmLocalVisualStudioGenerator as superclass for all VS generators.  Implemented on-demand unique object file name computation for VS 7 generator to avoid slow compiles when all sources are in subdirectories.,[],Source/cmLocalUnixMakefileGenerator3.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_563.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_563.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_563.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1451.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1451.cpp,1062,1062,1097,-1,"sprintf(rpstr, ""_p_"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1228.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1228.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1228.cpp,33,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1228.cpp,-1,"[""char *"", ""string""]","[""this -> Makefile -> IsOn_ret""]","set([u'ostr << graphNodePrefix << cnt ++', u'std :: set < cmStdString > ignoreTargetsSet ;', u'const char * realTargetName = tit -> first . c_str ( ) ;', u'int cnt = 0 ;'])","set([50, 78, 86, 94])","[['sprintf', 'rpstr', '_p_'], []]",2006-07-11T15:41:38,Brad King,6799266134401403550,125
9bf5af6e32570195b06df594c1cb07f8c7a6a83e,ENH: Moved unique object file name computation from cmLocalUnixMakefileGenerator3 up to cmLocalGenerator for use by all generators.  Created cmLocalVisualStudioGenerator as superclass for all VS generators.  Implemented on-demand unique object file name computation for VS 7 generator to avoid slow compiles when all sources are in subdirectories.,[],Source/cmLocalUnixMakefileGenerator3.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_563.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_563.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_563.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1451.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1451.cpp,1062,1062,1118,-1,"sprintf(rpstr, ""_p%d_"", cc++);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1229.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1229.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1229.cpp,54,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1229.cpp,-1,"[""char *"", ""string"", ""int""]","[""unkown"", ""!""]","set([u'ostr << graphNodePrefix << cnt ++', u'std :: set < cmStdString > ignoreTargetsSet ;', u'const char * realTargetName = tit -> first . c_str ( ) ;', u'int cnt = 0 ;'])","set([50, 78, 86, 94])","[['sprintf', 'rpstr', '_p%d_', 'cc'], []]",2006-07-11T15:41:38,Brad King,10463391973406016533,126
da285df242411b2b798018009e1c2f37e5515c60,ENH: Added test 8 to test grandchildren running after children exit.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_567.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1456.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1456.cpp,163,151,170,164,,"fprintf(stdout, ""Output on stdout before grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1230.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1230.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1230.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1230.cpp,11,[],[],set([]),set([]),"[[], ['fprintf', 'stdout', 'Output', 'on', 'stdout', 'before', 'grandchild', 'test', '\\n']]",2006-05-21T14:28:14,Brad King,-15171082967762468031,490
da285df242411b2b798018009e1c2f37e5515c60,ENH: Added test 8 to test grandchildren running after children exit.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_567.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1456.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1456.cpp,163,151,170,165,,"fprintf(stderr, ""Output on stderr before grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1231.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1231.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1231.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1231.cpp,12,[],[],set([]),set([]),"[[], ['fprintf', 'stderr', 'Output', 'on', 'stderr', 'before', 'grandchild', 'test', '\\n']]",2006-05-21T14:28:14,Brad King,-15171070967760467681,491
da285df242411b2b798018009e1c2f37e5515c60,ENH: Added test 8 to test grandchildren running after children exit.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_567.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1456.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1456.cpp,163,151,170,170,,"fprintf(stdout, ""Output on stdout after grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1232.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1232.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1232.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1232.cpp,17,[],[],set([]),set([]),"[[], ['fprintf', 'stdout', 'Output', 'on', 'stdout', 'after', 'grandchild', 'test', '\\n']]",2006-05-21T14:28:14,Brad King,-30681774763426127123,492
da285df242411b2b798018009e1c2f37e5515c60,ENH: Added test 8 to test grandchildren running after children exit.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_567.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1456.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1456.cpp,163,151,170,171,,"fprintf(stderr, ""Output on stderr after grandchild test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1233.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1233.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1233.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1233.cpp,18,[],[],set([]),set([]),"[[], ['fprintf', 'stderr', 'Output', 'on', 'stderr', 'after', 'grandchild', 'test', '\\n']]",2006-05-21T14:28:14,Brad King,-30681762763424126773,493
da285df242411b2b798018009e1c2f37e5515c60,ENH: Added test 8 to test grandchildren running after children exit.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_567.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1456.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1456.cpp,163,151,170,180,,"fprintf(stdout, ""Output on stdout from grandchild before sleep.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1234.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1234.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1234.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1234.cpp,3,[],[],set([]),set([]),"[[], ['fprintf', 'stdout', 'Output', 'on', 'stdout', 'from', 'grandchild', 'before', 'sleep', '\\n']]",2006-05-21T14:28:14,Brad King,-26107303396215212863,127
da285df242411b2b798018009e1c2f37e5515c60,ENH: Added test 8 to test grandchildren running after children exit.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_567.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1456.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1456.cpp,163,151,170,181,,"fprintf(stderr, ""Output on stderr from grandchild before sleep.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1235.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1235.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1235.cpp,5,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1235.cpp,4,[],[],set([]),set([]),"[[], ['fprintf', 'stderr', 'Output', 'on', 'stderr', 'from', 'grandchild', 'before', 'sleep', '\\n']]",2006-05-21T14:28:14,Brad King,-26107291396213212513,128
da285df242411b2b798018009e1c2f37e5515c60,ENH: Added test 8 to test grandchildren running after children exit.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_567.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_567.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1457.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1457.cpp,258,303,261,306,,"printf(""Child was disowned.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1236.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1236.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1236.cpp,96,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1236.cpp,107,"[""string"", ""kwsysProcess_GetErrorString_ret""]","[""kwsysProcess_GetState_ret""]",set([u'kwsysProcess * kp']),set([0]),"[[], ['printf', 'Child', 'was', 'disowned', '\\n']]",2006-05-21T14:28:14,Brad King,13569026711401620897,129
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapPythonCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_568.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_568.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_568.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1460.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1460.cpp,196,198,198,200,"fprintf(fout,
            ""extern  \""C\"" {__declspec( dllexport) PyObject *PyVTKClass_%sNew(char *); }\n"",classes[i].c_str());","fprintf(fout, ""extern  \""C\"" {__declspec( dllexport) ""
            ""PyObject *PyVTKClass_%sNew(char *); }\n"", classes[i].c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1237.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1237.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1237.cpp,25,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1237.cpp,25,"[""FILE *"", ""string"", ""classes [ i ] . c_str_ret""]","[""null"", ""classes . size_ret"", ""<""]","set([u'i = 0 ;', u'i ++', u'std :: vector < std :: string > & classes'])","set([2, 22])","[[], []]",2006-05-12T18:12:13,Ken Martin,0,550
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapPythonCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_568.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_568.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_568.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1461.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1461.cpp,229,231,231,233,"fprintf(fout,""  if (!d) Py_FatalError(\""can't get dictionary for module %s!\"");\n\n"",
          kitName);","fprintf(fout,""  if (!d) Py_FatalError""
          ""(\""can't get dictionary for module %s!\"");\n\n"", kitName);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1238.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1238.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1238.cpp,58,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1238.cpp,58,"[""FILE *"", ""string"", ""const char *""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([7]),"[[], []]",2006-05-12T18:12:13,Ken Martin,0,550
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1462.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1462.cpp,247,252,246,251,"fprintf(fout,
          ""extern \""C\""\n""
          ""{\n""
          ""#if (TCL_MAJOR_VERSION == 8) && (TCL_MINOR_VERSION >= 4) && (TCL_RELEASE_LEVEL >= TCL_FINAL_RELEASE)\n""
          ""  typedef int (*vtkTclCommandType)(ClientData, Tcl_Interp *,int, CONST84 char *[]);\n""
          ""#else\n""
          ""  typedef int (*vtkTclCommandType)(ClientData, Tcl_Interp *,int, char *[]);\n""
          ""#endif\n""
          ""}\n""
          ""\n"");","fprintf(fout,
          ""extern \""C\""\n""
          ""{\n""
          ""#if (TCL_MAJOR_VERSION == 8) && (TCL_MINOR_VERSION >= 4) ""
          ""&& (TCL_RELEASE_LEVEL >= TCL_FINAL_RELEASE)\n""
          ""  typedef int (*vtkTclCommandType)(ClientData, Tcl_Interp *,""
          ""int, CONST84 char *[]);\n""
          ""#else\n""
          ""  typedef int (*vtkTclCommandType)(ClientData, Tcl_Interp *,""
          ""int, char *[]);\n""
          ""#endif\n""
          ""}\n""
          ""\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1239.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1239.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1239.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1239.cpp,27,[],"[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[[], []]",2006-05-12T18:12:13,Ken Martin,0,550
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1462.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1462.cpp,247,252,259,267,"fprintf(fout,""int %sCommand(ClientData cd, Tcl_Interp *interp,\n             int argc, char *argv[]);\n"",classes[i].c_str());","fprintf(fout,""int %sCommand(ClientData cd, Tcl_Interp *interp,\n""
            ,classes[i].c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1240.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1240.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1240.cpp,40,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1240.cpp,43,"[""FILE *"", ""string"", ""classes [ i ] . c_str_ret""]","[""null"", ""classes . size_ret"", ""<""]","set([u'i = 0 ;', u'i ++', u'std :: vector < std :: string > & classes', u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])","set([41, 2, 6])","[['int', 'argc', 'char', '*argv[]', '\\n'], []]",2006-05-12T18:12:13,Ken Martin,-2410309367540786046,130
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1462.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1462.cpp,247,252,260,269,,"fprintf(fout,""             int argc, char *argv[]);\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1241.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1241.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1241.cpp,41,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1241.cpp,45,"[""FILE *"", ""string"", ""classes [ i ] . c_str_ret""]","[""null"", ""classes . size_ret"", ""<""]","set([u'i = 0 ;', u'i ++', u'std :: vector < std :: string > & classes', u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])","set([41, 2, 6])","[[], ['fprintf', 'fout', 'int', 'argc', 'char', '*argv[]', '\\n']]",2006-05-12T18:12:13,Ken Martin,-3303358490141868760,131
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1463.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1463.cpp,280,290,282,292,"fprintf(fout,""extern void vtkTclListInstances(Tcl_Interp *interp, ClientData arg);\n"");","fprintf(fout,""extern void vtkTclListInstances(Tcl_Interp *interp,""
          ""ClientData arg);\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1242.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1242.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1242.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1242.cpp,68,"[""FILE *"", ""string""]","[""FILE *"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[[], []]",2006-05-12T18:12:13,Ken Martin,0,550
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1463.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1463.cpp,280,290,290,302,"fprintf(fout,""\n\nextern \""C\"" {int VTK_EXPORT %s_SafeInit(Tcl_Interp *interp);}\n"",
          kitName);","fprintf(fout,""\n\nextern \""C\"" {int VTK_EXPORT ""
          ""%s_SafeInit(Tcl_Interp *interp);}\n"", kitName);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1243.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1243.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1243.cpp,71,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1243.cpp,78,"[""FILE *"", ""string"", ""const char *""]","[""FILE *"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[[], []]",2006-05-12T18:12:13,Ken Martin,0,550
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1463.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1463.cpp,280,290,292,304,"fprintf(fout,""\nextern \""C\"" {int VTK_EXPORT %s_Init(Tcl_Interp *interp);}\n"",
          kitName);","fprintf(fout,""\nextern \""C\"" {int VTK_EXPORT %s_Init""
          ""(Tcl_Interp *interp);}\n"", kitName);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1244.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1244.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1244.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1244.cpp,80,"[""FILE *"", ""string"", ""const char *""]","[""FILE *"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[[], []]",2006-05-12T18:12:13,Ken Martin,0,550
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1463.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1463.cpp,280,290,300,312,"fprintf(fout,""extern \""C\""\n{\nvoid vtkCommonDeleteAssocData(ClientData cd)\n"");","fprintf(fout,""extern \""C\""\n{\nvoid ""
            ""vtkCommonDeleteAssocData(ClientData cd)\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1245.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1245.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1245.cpp,81,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1245.cpp,88,"[""FILE *"", ""string""]","[""strcmp_ret"", ""!""]",set([u'const char * kitName']),set([0]),"[[], []]",2006-05-12T18:12:13,Ken Martin,0,550
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1463.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1463.cpp,280,290,302,315,"fprintf(fout,""  vtkTclInterpStruct *tis = static_cast<vtkTclInterpStruct*>(cd);\n"");","fprintf(fout,""  vtkTclInterpStruct *tis = ""
            ""static_cast<vtkTclInterpStruct*>(cd);\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1246.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1246.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1246.cpp,83,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1246.cpp,91,"[""FILE *"", ""string""]","[""strcmp_ret"", ""!""]",set([u'const char * kitName']),set([0]),"[[], []]",2006-05-12T18:12:13,Ken Martin,0,550
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1464.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1464.cpp,324,339,326,341,"fprintf(fout,
            ""  Tcl_SetAssocData(interp,(char *) \""vtk\"",NULL,(ClientData *)info);\n"");","fprintf(fout, ""  Tcl_SetAssocData(interp,(char *) ""
            ""\""vtk\"",NULL,(ClientData *)info);\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1247.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1247.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1247.cpp,107,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1247.cpp,117,"[""FILE *"", ""string""]","[""strcmp_ret"", ""!""]",set([u'const char * kitName']),set([0]),"[[], []]",2006-05-12T18:12:13,Ken Martin,0,550
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1464.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1464.cpp,324,339,328,343,"fprintf(fout,
            ""  Tcl_CreateExitHandler(vtkCommonDeleteAssocData,(ClientData *)info);\n"");","fprintf(fout, ""  Tcl_CreateExitHandler(vtkCommonDeleteAssocData""
            "",(ClientData *)info);\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1248.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1248.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1248.cpp,109,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1248.cpp,119,"[""FILE *"", ""string""]","[""strcmp_ret"", ""!""]",set([u'const char * kitName']),set([0]),"[[], []]",2006-05-12T18:12:13,Ken Martin,0,550
cac30b5ff8f7034b5290700a4dee28c84e001ac9,STYLE: fix line length,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_569.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_569.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1464.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1464.cpp,324,339,332,347,"fprintf(fout,""  Tcl_CreateCommand(interp,(char *) \""vtkCommand\"",\n""
                 ""                    reinterpret_cast<vtkTclCommandType>(vtkCommandForward),\n""
                 ""                    (ClientData *)NULL, NULL);\n\n"");","fprintf(fout,
            ""  Tcl_CreateCommand(interp,(char *) \""vtkCommand\"",\n""
            ""                    reinterpret_cast<vtkTclCommandType>(""
            ""vtkCommandForward),\n""
            ""                    (ClientData *)NULL, NULL);\n\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1249.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1249.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1249.cpp,113,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1249.cpp,123,[],"[""strcmp_ret"", ""!""]",set([u'const char * kitName']),set([0]),"[[], []]",2006-05-12T18:12:13,Ken Martin,0,550
1794836ee3e8727c9eed233f1ebaa0a1dbf76e57,ENH: fix build c stuff with c and c++ with c++,[],Tests/COnly/conly.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_573.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_573.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_573.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1471.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1471.cpp,17,18,19,20,"f(""Foo: %s\n"", foo);","f(""Foo: %s %d\n"", foo, class);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1250.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1250.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1250.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1250.cpp,13,"[""string"", ""unkown""]","[""LibC2Func_ret"", ""constant"", ""!="", ""!""]",set([]),set([]),"[['%s\\n'], ['%s', '%d\\n', 'class']]",2006-05-04T17:35:56,Bill Hoffman,6948491286430243558,132
fb5d92ea37b6b7cbd9eda84538ce072b90b80b73,ENH: m_ cleanup for curses,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_578.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_578.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_578.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1479.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1479.cpp,441,441,443,443,"sprintf(firstLine, ""Page %d of %d"", cw->GetPage(), m_NumberOfPages);","sprintf(firstLine, ""Page %d of %d"", cw->GetPage(), this->NumberOfPages);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1251.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1251.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1251.cpp,80,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1251.cpp,80,"[""char *"", ""string"", ""cw -> GetPage_ret"", ""unkown""]","[""cmCursesWidget *""]","set([u'cmCursesWidget * cw = 0 ;', u'char firstLine [ 512 ] = """" ;'])","set([12, 28])","[['m_NumberOfPages'], ['this', 'NumberOfPages']]",2006-03-16T15:44:55,Ken Martin,2125281957722411038,133
3d96e522617647665d7e99919ba71d34b1db870c,STYLE: some m_ to this-> cleanup,[],Source/cmGlobalGenerator.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_581.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_581.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_581.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1485.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1485.cpp,581,581,583,583,"sprintf(num,""%d"",static_cast<int>(m_LocalGenerators.size()));","sprintf(num,""%d"",static_cast<int>(this->LocalGenerators.size()));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1252.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1252.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1252.cpp,30,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1252.cpp,30,"[""char *"", ""string"", ""bool""]",[],set([u'char num [ 100 ] ;']),set([29]),"[['m_LocalGenerators'], ['this', 'LocalGenerators']]",2006-03-15T16:02:08,Ken Martin,-2155391284413308246,134
3d96e522617647665d7e99919ba71d34b1db870c,STYLE: some m_ to this-> cleanup,[],Source/cmLocalVisualStudio6Generator.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_584.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_584.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_584.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1489.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1489.cpp,536,537,540,541,"sprintf(output,""%s/%s_force_%i"", m_Makefile->GetStartOutputDirectory(),
          target.GetName(), count);","sprintf(output,""%s/%s_force_%i"", this->Makefile->GetStartOutputDirectory(),
          target.GetName(), count);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1253.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1253.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1253.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1253.cpp,9,"[""char *"", ""string"", ""m_Makefile -> GetStartOutputDirectory_ret"", ""target . GetName_ret"", ""int""]",[],"set([u'char * output = new char [ ( strlen ( this -> Makefile -> GetStartOutputDirectory ( ) ) + strlen ( target . GetName ( ) ) + 30 ) ] ;', u'cmTarget & target', u'int count'])","set([2, 7])","[['m_Makefile'], ['this', 'Makefile']]",2006-03-15T16:02:08,Ken Martin,5089723740108367998,135
3d96e522617647665d7e99919ba71d34b1db870c,STYLE: some m_ to this-> cleanup,[],Source/cmOutputRequiredFilesCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_585.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_585.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_585.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1490.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1490.cpp,199,199,214,214,"fprintf(fout,""%s\n"",(*d)->m_FullPath.c_str());","fprintf(fout,""%s\n"",(*d)->FullPath.c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1254.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1254.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1254.cpp,21,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1254.cpp,21,"[""FILE *"", ""string"", ""( * d ) -> m_FullPath . c_str_ret""]","[""std :: string :: size_type"", ""unkown"", ""!="", ""tmp . substr_ret"", ""constant"", ""!="", ""&&""]","set([u'FILE * fout', u'std :: string tmp = ( * d ) -> FullPath ;', u'cmDependInformation :: DependencySetType :: const_iterator d = info -> DependencySet . begin ( ) ;', u""std :: string :: size_type pos = tmp . rfind ( '.' ) ;""])","set([16, 8, 2, 17])","[['m_FullPath'], ['FullPath']]",2006-03-15T16:02:08,Ken Martin,8017269055076949194,136
3d96e522617647665d7e99919ba71d34b1db870c,STYLE: some m_ to this-> cleanup,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_586.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_586.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_586.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1494.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1494.cpp,348,348,350,350,"f(fout,""  char pkgName[]=\""%s\"";\n"", m_LibraryName.c_str());","f(fout,""  char pkgName[]=\""%s\"";\n"", this->LibraryName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1255.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1255.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1255.cpp,131,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1255.cpp,131,"[""FILE *"", ""string"", ""m_LibraryName . c_str_ret""]","[""FILE *"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[['m_LibraryName'], ['this', 'LibraryName']]",2006-03-15T16:02:08,Ken Martin,1754659415493069502,137
ccac9542b109ca6f1edc8a2460310068e90019aa,ENH: Add a way to overwrite some preferences and ignore certain targets,[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_606.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_606.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_606.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1529.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1529.cpp,2033,2083,2036,2092,"sprintf(tgtName, ""node%d"", cnt++);","sprintf(tgtName, ""%s%d"", graphNodePrefix, cnt++);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1256.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1256.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1256.cpp,33,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1256.cpp,89,"[""char *"", ""string"", ""int""]","[""targets -> begin_ret"", ""targets -> end_ret"", ""!=""]","set([u'char tgtName [ 100 ] ;', u'sprintf ( tgtName , ""%s%d"" , graphNodePrefix , cnt ++ )', u'int cnt = 0 ;', u'const char * realTargetName = tit -> first . c_str ( ) ;', u'std :: set < cmStdString > ignoreTargetsSet ;'])","set([89, 82, 74, 73, 47])","[['node%d'], ['%s%d', 'graphNodePrefix']]",2006-03-07T20:31:05,Andy Cedilnik,8107360528355722837,494
ccac9542b109ca6f1edc8a2460310068e90019aa,ENH: Add a way to overwrite some preferences and ignore certain targets,[],Source/cmake.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_606.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_606.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_606.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1530.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1530.cpp,2049,2105,2061,2128,"sprintf(tgtName, ""node%d"", cnt++);","sprintf(tgtName, ""%s%d"", graphNodePrefix, cnt++);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1257.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1257.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1257.cpp,58,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1257.cpp,125,"[""char *"", ""string"", ""int""]","[""std :: map < cmStdString , cmStdString > :: iterator"", ""targetNamesNodes . end_ret"", ""==""]","set([u'std :: map < cmStdString , cmStdString > targetNamesNodes ;', u'char tgtName [ 100 ] ;', u'std :: map < cmStdString , cmStdString > :: iterator tarIt = targetNamesNodes . find ( libName ) ;', u'sprintf ( tgtName , ""%s%d"" , graphNodePrefix , cnt ++ )', u'int cnt = 0 ;'])","set([72, 73, 74, 117, 89, 125])","[['node%d'], ['%s%d', 'graphNodePrefix']]",2006-03-07T20:31:05,Andy Cedilnik,8107360528355722837,494
0323a0d6d20402d994f4f886d51b8c33c02ed73a,BUG: Fix mem leaks related to th_get_pathname. Change this implementation of th_get_pathname so that it *always* returns a strdup'ed value. Callers must now free non-NULL returns from th_get_pathname. Change all callers to call free appropriately.,[],Utilities/cmtar/extract.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_607.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_607.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_607.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1531.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1531.cpp,170,197,175,203,"printf(""tar_extract_file(): calling libtar_hash_add(): key=\""%s\"", ""
         ""value=\""%s\""\n"", th_get_pathname(t), realname);","printf(""tar_extract_file(): calling libtar_hash_add(): key=\""%s\"", ""
         ""value=\""%s\""\n"", pathname, realname);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1258.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1258.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1258.cpp,55,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1258.cpp,57,[],"[""calloc_ret"", ""null"", ""=="", ""!""]","set([u'lnp = ( linkname_t * ) calloc ( 1 , sizeof ( linkname_t ) )'])",set([50]),"[['th_get_pathname', 't'], ['pathname']]",2006-02-03T16:48:44,David Cole,-753171792611967008,138
0323a0d6d20402d994f4f886d51b8c33c02ed73a,BUG: Fix mem leaks related to th_get_pathname. Change this implementation of th_get_pathname so that it *always* returns a strdup'ed value. Callers must now free non-NULL returns from th_get_pathname. Change all callers to call free appropriately.,[],Utilities/cmtar/extract.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_607.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_607.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_607.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1533.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1533.cpp,268,325,284,357,"printf(""### done extracting %s\n"", filename);","f(""### done extracting %s\n"", filename);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1259.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1259.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1259.cpp,98,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1259.cpp,139,"[""string"", ""th_get_pathname_ret""]","[""close_ret"", ""int"", ""=="", ""!""]","set([u'filename = realname', u'int fdout ;', u'filename = pathname'])","set([26, 7, 31])","[['printf'], ['f']]",2006-02-03T16:48:44,David Cole,-7237409541808523184,139
0323a0d6d20402d994f4f886d51b8c33c02ed73a,BUG: Fix mem leaks related to th_get_pathname. Change this implementation of th_get_pathname so that it *always* returns a strdup'ed value. Callers must now free non-NULL returns from th_get_pathname. Change all callers to call free appropriately.,[],Utilities/cmtar/output.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_608.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_608.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_608.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1538.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1538.cpp,124,125,126,127,"printf("" %s"", th_get_pathname(t));",pathname = th_get_pathname(t);,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1260.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1260.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1260.cpp,62,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1260.cpp,63,[],[],set([u'TAR * t']),set([1]),"[['printf', '%s'], ['pathname']]",2006-02-03T16:48:44,David Cole,-5610566501718343809,140
bdbb7f84bc85c27aa49133f060e3407aa3990eea,ENH: Added special test 0 to just run a given command line.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_612.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_612.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_612.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1544.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1544.cpp,330,330,339,-1,"fprintf(stdout, ""Usage: %s <test number>\n"", argv[0]);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1262.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1262.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1262.cpp,30,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1262.cpp,-1,"[""unkown"", ""string"", ""member""]","[""atoi_ret"", ""int"", ""<"", ""atoi_ret"", ""int"", "">"", ""int"", ""int"", ""=="", ""strcmp_ret"", ""null"", ""!="", ""&&"", ""||"", ""||""]",set([u'TAR * t']),set([1]),"[['fprintf', 'stdout', 'Usage', '%s', 'test', 'number', '\\n', 'argv[0]'], []]",2006-01-05T20:49:34,Brad King,20953669545274039339,141
c5e532d07dd4e820be2a81b07e12629690425027,COMP: Try to remove warnings and add support for cygwin,[],Utilities/cmtar/output.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_617.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_617.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_617.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1552.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1552.cpp,85,87,93,95,"snprintf(username, sizeof(username), ""%d"", uid);","snprintf(username, sizeof(username), ""%d"", (int)uid);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1264.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1264.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1264.cpp,31,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1264.cpp,31,"[""char *"", ""unkown"", ""string"", ""th_get_uid_ret""]","[""getpwuid_ret"", ""null"", ""!="", ""!""]","set([u'uid = th_get_uid ( t )', u'char username [ _POSIX_LOGIN_NAME_MAX ] ;', u'pw = getpwuid ( uid )'])","set([24, 10, 26])","[[], ['int']]",2005-12-29T16:15:36,Andy Cedilnik,-7555364370854764664,495
c5e532d07dd4e820be2a81b07e12629690425027,COMP: Try to remove warnings and add support for cygwin,[],Utilities/cmtar/output.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_617.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_617.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_617.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1552.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1552.cpp,85,87,101,103,"snprintf(groupname, sizeof(groupname), ""%d"", gid);","snprintf(groupname, sizeof(groupname), ""%d"", (int)gid);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1265.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1265.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1265.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1265.cpp,39,"[""char *"", ""unkown"", ""string"", ""th_get_gid_ret""]","[""getgrgid_ret"", ""null"", ""!="", ""!""]","set([u'gid = th_get_gid ( t )', u'char groupname [ _POSIX_LOGIN_NAME_MAX ] ;', u'gr = getgrgid ( gid )'])","set([32, 34, 11])","[[], ['int']]",2005-12-29T16:15:36,Andy Cedilnik,-7555364370854764664,495
d1180fc4e1545f98fddd9a51bb2140f04af0730d,ENH: Add untaring support,[],Source/cmSystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_618.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_618.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_618.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1554.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1554.cpp,1382,1382,1384,1384,"fprintf(stderr, ""tar_open(): %s\n"", strerror(errno));","cmSystemTools::Error(""Problem with tar_open(): "", strerror(errno));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1266.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1266.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1266.cpp,17,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1266.cpp,17,"[""unkown"", ""string"", ""strerror_ret""]","[""tar_open_ret"", ""int"", ""==""]",set([u'char * realName = new char [ strlen ( outFileName ) + 1 ] ;']),set([8]),"[['fprintf', 'stderr', '%s\\n'], ['cmSystemTools', 'Error', 'Problem', 'with']]",2005-12-29T15:43:12,Andy Cedilnik,9045570064739835802,496
d1180fc4e1545f98fddd9a51bb2140f04af0730d,ENH: Add untaring support,[],Source/cmSystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_618.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_618.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_618.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1555.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1555.cpp,1395,1395,1397,1442,"fprintf(stderr,
        ""tar_append_tree(\""%s\"", \""%s\""): %s\n"", buf,
        pathname, strerror(errno));","cmSystemTools::Error(""Problem with tar_open(): "", strerror(errno));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1267.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1267.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1267.cpp,30,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1267.cpp,18,"[""unkown"", ""string"", ""char *"", ""char *"", ""strerror_ret""]","[""tar_append_tree_ret"", ""null"", ""!=""]",set([]),set([]),"[['fprintf', 'stderr', 'tar_append_tree', '\\', '%s\\', '\\', '%s\\', '%s\\n', 'buf', 'pathname'], ['cmSystemTools', 'Error', 'Problem', 'with', 'tar_open']]",2005-12-29T15:43:12,Andy Cedilnik,2215838729385568306,142
d1180fc4e1545f98fddd9a51bb2140f04af0730d,ENH: Add untaring support,[],Source/cmSystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_618.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_618.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_618.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1555.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1555.cpp,1395,1395,1407,1408,"fprintf(stderr, ""tar_append_eof(): %s\n"", strerror(errno));","cmSystemTools::Error(""Problem with tar_append_eof(): "", strerror(errno));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1268.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1268.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1268.cpp,40,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1268.cpp,41,"[""unkown"", ""string"", ""strerror_ret""]","[""tar_append_eof_ret"", ""null"", ""!=""]",set([u'TAR * t ;']),set([3]),"[['fprintf', 'stderr', '%s\\n'], ['cmSystemTools', 'Error', 'Problem', 'with']]",2005-12-29T15:43:12,Andy Cedilnik,9045570064739835802,496
d1180fc4e1545f98fddd9a51bb2140f04af0730d,ENH: Add untaring support,[],Source/cmSystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_618.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_618.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_618.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1555.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1555.cpp,1395,1395,1414,1415,"fprintf(stderr, ""tar_close(): %s\n"", strerror(errno));","cmSystemTools::Error(""Problem with tar_close(): "", strerror(errno));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1269.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1269.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1269.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1269.cpp,48,"[""unkown"", ""string"", ""strerror_ret""]","[""tar_close_ret"", ""null"", ""!=""]",set([u'TAR * t ;']),set([3]),"[['fprintf', 'stderr', '%s\\n'], ['cmSystemTools', 'Error', 'Problem', 'with']]",2005-12-29T15:43:12,Andy Cedilnik,9045570064739835802,496
18d31fd97c3305b54a6d1d56b6ef8600089ef6da,COMP: Several borland fixes,[],Utilities/cmtar/wrapper.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_623.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_623.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_623.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1562.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1562.cpp,145,145,147,147,"snprintf(realpath, MAXPATHLEN, ""%s/%s"", realdir,
       dent->d_name);","snprintf(realpath, TAR_MAXPATHLEN, ""%s/%s"", realdir,
       dent->d_name);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1270.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1270.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1270.cpp,48,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1270.cpp,48,"[""char *"", ""macro"", ""string"", ""char *"", ""member""]","[""strcmp_ret"", ""null"", ""=="", ""strcmp_ret"", ""null"", ""=="", ""||"", ""!""]","set([u'char * realdir', u'( dent = kwReadDir ( dp ) ) != NULL', u'char realpath [ TAR_MAXPATHLEN ] ;'])","set([1, 3, 39])","[['MAXPATHLEN'], ['TAR_MAXPATHLEN']]",2005-12-28T19:58:07,Andy Cedilnik,-4674000254527198548,497
18d31fd97c3305b54a6d1d56b6ef8600089ef6da,COMP: Several borland fixes,[],Utilities/cmtar/wrapper.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_623.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_623.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_623.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1562.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1562.cpp,145,145,150,150,"snprintf(savepath, MAXPATHLEN, ""%s/%s"", savedir,
         dent->d_name);","snprintf(savepath, TAR_MAXPATHLEN, ""%s/%s"", savedir,
         dent->d_name);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1271.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1271.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1271.cpp,51,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1271.cpp,51,"[""char *"", ""macro"", ""string"", ""char *"", ""member""]","[""char *""]","set([u'char * savedir', u'char savepath [ TAR_MAXPATHLEN ] ;', u'( dent = kwReadDir ( dp ) ) != NULL'])","set([1, 4, 39])","[['MAXPATHLEN'], ['TAR_MAXPATHLEN']]",2005-12-28T19:58:07,Andy Cedilnik,-4674000254527198548,497
9b486bacfc98d6878b0e48f0136653c98cc5b385,ENH: Modify API a little bit to allow arbitrary length values. Encode certain characters. Rename UNIX registry to FILE registry. More testing,[],Source/kwsys/Registry.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_626.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_626.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_626.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1565.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1565.cpp,630,653,656,-1,"::sprintf(newkey, ""%s\\%s"", this->m_SubKey.c_str(), key);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1272.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1272.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1272.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1272.cpp,-1,"[""int"", ""string"", ""this -> m_SubKey . c_str_ret"", ""const char *""]","[""unkown"", ""!"", ""m_SubKey . empty_ret"", ""const char *"", ""!"", ""||"", ""||"", ""!""]","set([u'char * savedir', u'char savepath [ TAR_MAXPATHLEN ] ;', u'( dent = kwReadDir ( dp ) ) != NULL'])","set([1, 4, 39])","[['sprintf', 'newkey', '%s\\\\%s', 'this', 'm_SubKey', 'c_str', 'key'], []]",2005-09-16T17:38:25,Andy Cedilnik,-9051672098127972295,143
3f14dae7162f5a78748a13b03d6501b52bbea784,ENH: Extended test 0 to run the executable twice using the same process object.  This tests the reusability of the objects.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_629.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_629.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_629.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1570.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1570.cpp,150,151,164,-1,"fprintf(stderr, ""kwsysProcess_New returned NULL!\n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1275.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1275.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1275.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1275.cpp,-1,"[""unkown"", ""string""]","[""kwsysProcess *"", ""!""]","set([u'char * savedir', u'char savepath [ TAR_MAXPATHLEN ] ;', u'( dent = kwReadDir ( dp ) ) != NULL'])","set([1, 4, 39])","[['fprintf', 'stderr', 'kwsysProcess_New', 'returned', 'NULL', '\\n'], []]",2005-07-07T13:06:56,Brad King,14614463811852971103,144
3f14dae7162f5a78748a13b03d6501b52bbea784,ENH: Extended test 0 to run the executable twice using the same process object.  This tests the reusability of the objects.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_629.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_629.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_629.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1571.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1571.cpp,288,283,292,297,,"fprintf(stderr, ""kwsysProcess_New returned NULL!\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1276.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1276.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1276.cpp,140,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1276.cpp,8,[],"[""kwsysProcess *"", ""!"", ""!""]",set([u'kwsysProcess * kp = kwsysProcess_New ( ) ;']),set([5]),"[[], ['fprintf', 'stderr', 'kwsysProcess_New', 'returned', 'NULL', '\\n']]",2005-07-07T13:06:56,Brad King,-14614463811852971103,145
05d8429206d7192e328c2646cbc2b9776362dd7b,COMP: Remove warnings,[],Source/CTest/cmCTestSubmitHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_631.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_631.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_631.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1574.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1574.cpp,268,268,270,270,"sprintf(hex, ""%%%02X"", (int)c);","sprintf(hexCh, ""%%%02X"", (int)c);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1277.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1277.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1277.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1277.cpp,73,"[""char *"", ""string"", ""char""]","[""char""]","set([u'char c = remote_file [ kk ] ;', u'char hexCh [ 4 ] = { 0 , 0 , 0 , 0 } ;'])","set([60, 61])","[['hex'], ['hexCh']]",2005-06-24T13:41:01,Andy Cedilnik,7269948529438023227,498
05d8429206d7192e328c2646cbc2b9776362dd7b,COMP: Remove warnings,[],Source/CTest/cmCTestSubmitHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_631.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_631.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_631.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1575.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1575.cpp,419,419,421,421,"sprintf(hex, ""%%%02X"", (int)c);","sprintf(hexCh, ""%%%02X"", (int)c);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1278.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1278.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1278.cpp,72,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1278.cpp,72,"[""char *"", ""string"", ""char""]","[""char""]","set([u'char c = * kk ;', u'char hexCh [ 4 ] = { 0 , 0 , 0 , 0 } ;'])","set([59, 60])","[['hex'], ['hexCh']]",2005-06-24T13:41:01,Andy Cedilnik,7269948529438023227,498
1b578d3180ce60976e4cbe928fce988acfd0da39,"ENH: Several improvements with the way things are handled. Also, support multiple submited files",[],Source/CTest/cmCTestCoverageHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_632.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_632.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_632.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1576.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1576.cpp,39,39,47,48,"sprintf(covLogFilename, ""CoverageLog-%d.xml"", logFileCount);","sprintf(covLogFilename, ""CoverageLog-%d"", logFileCount);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1279.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1279.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1279.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1279.cpp,3,"[""char *"", ""constant"", ""int""]",[],"set([u'char covLogFilename [ 1024 ] ;', u'int logFileCount'])","set([0, 2])","[['xml'], []]",2005-06-23T17:04:18,Andy Cedilnik,5999452984715080672,146
dec5cc1082f92fd1ba56afe9efc596377afc4461,ENH: converted macro to use variables and fixed some case issues with some function blockers,[],Source/cmMacroCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_633.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_633.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_633.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1577.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1577.cpp,112,112,203,-1,"sprintf(argvName,""${ARGV%i}"",t);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1280.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1280.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1280.cpp,119,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1280.cpp,-1,"[""char *"", ""string"", ""null""]","[""null"", ""expandedArgs . size_ret"", ""<""]","set([u'char covLogFilename [ 1024 ] ;', u'int logFileCount'])","set([0, 2])","[['sprintf', 'argvName', 'ARGV%i', 't'], []]",2005-06-23T15:03:57,Ken Martin,13418585507712354785,147
dec5cc1082f92fd1ba56afe9efc596377afc4461,ENH: converted macro to use variables and fixed some case issues with some function blockers,[],Source/cmMacroCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_633.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_633.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_633.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1577.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1577.cpp,112,112,246,208,,"sprintf(argvName,""ARGV%i"",j);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1282.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1282.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1282.cpp,162,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1282.cpp,124,[],"[""null"", ""m_Functions . size_ret"", ""<"", ""!""]","set([u'unsigned int j = 0 ;', u'std :: vector < std :: string > oldARGVArgs ;', u'char argvName [ 60 ] ;'])","set([41, 122, 44])","[[], ['sprintf', 'argvName', 'ARGV%i', 'j']]",2005-06-23T15:03:57,Ken Martin,-13418585508992358635,148
28ffc134a097c77f3548cd236f2d00f0b5686c36,ENH: Added test 7 to expose problems with polling by WaitForData.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_634.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_634.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_634.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1580.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1580.cpp,140,167,154,194,,"fprintf(stdout, ""WaitForData timeout reached.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1287.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1287.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1287.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1287.cpp,42,[],"[""kwsysProcess_WaitForData_ret""]","set([u'p = kwsysProcess_WaitForData ( kp , & data , & length , pUserTimeout )', u'int poll'])","set([2, 36])","[[], ['fprintf', 'stdout', 'WaitForData', 'timeout', 'reached', '\\n']]",2005-06-17T17:59:22,Brad King,-14713579882405045583,149
28ffc134a097c77f3548cd236f2d00f0b5686c36,ENH: Added test 7 to expose problems with polling by WaitForData.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_634.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_634.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_634.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1580.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1580.cpp,140,167,154,201,,"fprintf(stdout, ""Poll count reached limit %d.\n"",
                    MAXPOLL);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1288.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1288.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1288.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1288.cpp,49,[],"[""kwsysProcess_WaitForData_ret""]",set([u'int poll']),set([2]),"[[], ['fprintf', 'stdout', 'Poll', 'count', 'reached', 'limit', '%d', '\\n', 'MAXPOLL']]",2005-06-17T17:59:22,Brad King,-6926369999553343482,150
28ffc134a097c77f3548cd236f2d00f0b5686c36,ENH: Added test 7 to expose problems with polling by WaitForData.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_634.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_634.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_634.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1581.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1581.cpp,217,279,220,286,,"fprintf(stderr, ""Poll count is %d, which is less than %d.\n"",
            poll, MINPOLL);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1289.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1289.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1289.cpp,92,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1289.cpp,134,"[""kwsysProcess *""]","[""kwsysProcess *"", ""!"", ""!""]",set([u'int poll']),set([2]),"[[], ['fprintf', 'stderr', 'Poll', 'count', 'is', '%d', 'which', 'is', 'less', 'than', '%d', '\\n', 'poll', 'MINPOLL']]",2005-06-17T17:59:22,Brad King,17957364907744468308,151
d36f3c5543eed9e120b855e3c1b0d55d800f374e,ENH: Handle errors and optimize a bit,[],Source/cmCommandArgumentParserHelper.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_635.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_635.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_635.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1585.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1585.cpp,296,303,298,-1,"fprintf(stderr, ""Argument Parser Error: %s (%lu / Line: %d)\n"", str, pos, this->CurrentLine);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1290.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1290.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1290.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1290.cpp,-1,"[""unkown"", ""string"", ""const char *"", ""unkown"", ""member""]",[],set([u'int poll']),set([2]),"[['fprintf', 'stderr', 'Argument', 'Parser', 'Error', '%s', '%lu', '/', 'Line', '%d', '\\n', 'str', 'pos', 'this', 'CurrentLine'], []]",2005-06-13T14:00:59,Andy Cedilnik,13209400015111496144,152
bbf1c3a0e87c4358b65d41393455fc393d8e16e0,ENH: Handle more cases,[],Source/cmCommandArgumentParserHelper.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_636.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_636.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_636.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1586.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1586.cpp,289,296,291,298,"fprintf(stderr, ""JPError: %s (%lu / Line: %d)\n"", str, pos, this->CurrentLine);","fprintf(stderr, ""Argument Parser Error: %s (%lu / Line: %d)\n"", str, pos, this->CurrentLine);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1291.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1291.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1291.cpp,3,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1291.cpp,3,"[""unkown"", ""string"", ""const char *"", ""unkown"", ""member""]",[],set([u'const char * str']),set([0]),"[['JPError'], ['Argument', 'Parser', 'Error']]",2005-06-08T18:18:31,Andy Cedilnik,-11054825742536352324,153
f6e5a878fc8de3ac3ef38b144a0a649a9f227682,"ENH: Add support for writing output file. While doing that, redesign the way ctest does output. There may still be problems with commands failing, but that should be fixed by applying the similar concept to whole CMake",[],Source/CTest/cmCTestTestHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_638.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_638.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_638.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1589.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1589.cpp,257,257,259,259,"fprintf(stderr,""\n%.0f%% tests passed, %i tests failed out of %i\n"",
      percent, int(failed.size()), total);","cmCTestLog(m_CTest, HANDLER_OUTPUT, std::endl << std::setprecision(0) << percent << ""% tests passed, ""
      << failed.size() << "" tests failed out of "" << total << std::endl);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1292.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1292.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1292.cpp,60,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1292.cpp,60,"[""unkown"", ""constant"", ""float"", ""int_ret"", ""int_ret""]","[""int_ret"", ""null"", ""=="", ""!""]","set([u'total = int ( passed . size ( ) ) + int ( failed . size ( ) )', u'percent = 99', u'std :: vector < cmStdString > failed ;', u'float percent = float ( passed . size ( ) ) * 100.0f / total ;'])","set([33, 58, 28, 55])","[['fprintf', 'stderr', '\\n%', '0f%%', '%i', '%i\\n', 'int'], ['cmCTestLog', 'm_CTest', 'HANDLER_OUTPUT', 'std', 'endl', 'std', 'setprecision', '0', '%', 'std', 'endl']]",2005-05-31T21:32:40,Andy Cedilnik,-11265670843400437856,154
f6e5a878fc8de3ac3ef38b144a0a649a9f227682,"ENH: Add support for writing output file. While doing that, redesign the way ctest does output. There may still be problems with commands failing, but that should be fixed by applying the similar concept to whole CMake",[],Source/CTest/cmCTestTestHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_638.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_638.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_638.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1590.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1590.cpp,274,276,276,278,"fprintf(stderr, ""\t%3d - %s (%s)\n"", ftit->m_TestCount, ftit->m_Name.c_str(),
            this->GetTestStatus(ftit->m_Status));","cmCTestLog(m_CTest, HANDLER_OUTPUT, ""\t"" << std::setw(3) << ftit->m_TestCount << "" - "" << ftit->m_Name.c_str() << "" ("" << this->GetTestStatus(ftit->m_Status) << "")"" << std::endl);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1293.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1293.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1293.cpp,77,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1293.cpp,79,"[""unkown"", ""string"", ""member"", ""ftit -> m_Name . c_str_ret"", ""this -> GetTestStatus_ret""]","[""member"", ""unkown"", ""!=""]",set([u'ftit = m_TestResults . begin ( ) ;']),set([73]),"[['fprintf', 'stderr', '\\t%3d', '%s', '%s', '\\n'], ['cmCTestLog', 'm_CTest', 'HANDLER_OUTPUT', '\\t', 'std', 'setw', '3', 'std', 'endl']]",2005-05-31T21:32:40,Andy Cedilnik,9487931616981736076,155
15c7d45ecd787b74eb4a4dc5cafe69bd92351938,BUG: Fixed ordering of multiple commands in a custom target when implemented as custom commands.  Also added support to execute pre-build rules first to be consistent with makefile generator.,[],Source/cmLocalVisualStudio6Generator.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_644.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_644.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_644.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1596.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1596.cpp,217,217,233,242,"sprintf(output,""%s/%s_force_%i"",
              m_Makefile->GetStartOutputDirectory(),
              libName, count);","depends.insert(depends.end(),
                     cr->GetDepends().begin(), cr->GetDepends().end());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1294.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1294.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1294.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1294.cpp,35,"[""char *"", ""string"", ""m_Makefile -> GetStartOutputDirectory_ret"", ""const char *"", ""int""]","[""target . GetPostBuildCommands ( ) . begin_ret"", ""target . GetPostBuildCommands ( ) . end_ret"", ""!=""]","set([u'std :: vector < std :: string > depends ;', u'cmTarget & target', u'std :: vector < cmCustomCommand > :: const_iterator cr = target . GetPostBuildCommands ( ) . begin ( ) ;'])","set([2, 23, 31])","[['sprintf', 'output', '%s/%s_force_%i', 'm_Makefile', 'GetStartOutputDirectory', 'libName', 'count'], ['depends', 'insert', 'depends', 'end', 'cr', 'GetDepends', 'begin', 'cr', 'GetDepends', 'end']]",2005-04-26T15:08:18,Brad King,40529725138784954795,156
f362d6e2ef1766425070e8dbfaa8a2fd668a988d,BUG: Expanded difference in timeouts between tests 4 and 5 so that 5 does not timeout while waiting for 4 to timeout.  This should fix the intermittent failure of test 5 on cygwin.  ENH: When a mismatch is reported it now reports what it was as well as what it should have been.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_647.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_647.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_647.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1601.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1601.cpp,198,198,200,200,"fprintf(stderr, ""Mismatch in exit exception.  Should have been %d.\n"",
              exception);","fprintf(stderr, ""Mismatch in exit exception.  ""
              ""Should have been %d, was %d.\n"",
              exception, kwsysProcess_GetExitException(kp));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1296.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1296.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1296.cpp,72,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1296.cpp,72,"[""unkown"", ""constant"", ""int""]","[""int"", ""kwsysProcess_GetExitException_ret"", ""!=""]","set([u'int exception', u'kwsysProcess * kp = kwsysProcess_New ( ) ;'])","set([0, 6])","[[], ['was', '%d', 'kwsysProcess_GetExitException', 'kp']]",2005-04-19T14:52:32,Brad King,-13584399322153503839,157
f362d6e2ef1766425070e8dbfaa8a2fd668a988d,BUG: Expanded difference in timeouts between tests 4 and 5 so that 5 does not timeout while waiting for 4 to timeout.  This should fix the intermittent failure of test 5 on cygwin.  ENH: When a mismatch is reported it now reports what it was as well as what it should have been.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_647.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_647.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_647.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1601.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1601.cpp,198,198,205,206,"fprintf(stderr, ""Mismatch in exit value.  Should have been %d.\n"",
              value);","fprintf(stderr, ""Mismatch in exit value.  ""
              ""Should have been %d, was %d.\n"",
              value, kwsysProcess_GetExitValue(kp));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1297.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1297.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1297.cpp,77,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1297.cpp,78,"[""unkown"", ""constant"", ""int""]","[""int"", ""kwsysProcess_GetExitValue_ret"", ""!=""]","set([u'int value', u'kwsysProcess * kp = kwsysProcess_New ( ) ;'])","set([0, 6])","[[], ['was', '%d', 'kwsysProcess_GetExitValue', 'kp']]",2005-04-19T14:52:32,Brad King,-3640649243036161103,158
f362d6e2ef1766425070e8dbfaa8a2fd668a988d,BUG: Expanded difference in timeouts between tests 4 and 5 so that 5 does not timeout while waiting for 4 to timeout.  This should fix the intermittent failure of test 5 on cygwin.  ENH: When a mismatch is reported it now reports what it was as well as what it should have been.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_647.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_647.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_647.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1601.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1601.cpp,198,198,212,214,"fprintf(stderr, ""Mismatch in state.  Should have been %d.\n"", state);","fprintf(stderr, ""Mismatch in state.  ""
            ""Should have been %d, was %d.\n"",
            state, kwsysProcess_GetState(kp));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1298.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1298.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1298.cpp,84,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1298.cpp,86,"[""unkown"", ""constant"", ""int""]","[""kwsysProcess_GetState_ret"", ""int"", ""!=""]","set([u'kwsysProcess * kp = kwsysProcess_New ( ) ;', u'int state'])","set([0, 6])","[[], ['was', '%d', 'kwsysProcess_GetState', 'kp']]",2005-04-19T14:52:32,Brad King,-3688801558629507663,159
3caedbdddb285909854833375ef736fef6a7b04a,ENH: Initial implementation of SVN support. Closes Bug #1601 - Add subversion support,[u'https://gitlab.kitware.com/cmake/cmake/issues/1601'],Source/CTest/cmCTestUpdateHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_650.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_650.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_650.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1605.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1605.cpp,45,166,81,268,"sprintf(current_time, ""%04d-%02d-%02d %02d:%02d:%02d UTC"",
      t->tm_year + 1900,
      t->tm_mon + 1,
      t->tm_mday,
      t->tm_hour,
      t->tm_min,
      t->tm_sec);","sprintf(current_time, ""%04d-%02d-%02d %02d:%02d:%02d"",
      t->tm_year + 1900,
      t->tm_mon + 1,
      t->tm_mday,
      t->tm_hour,
      t->tm_min,
      t->tm_sec);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1301.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1301.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1301.cpp,30,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1301.cpp,67,"[""char *"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""m_CTest -> GetTestModel_ret"", ""unkown"", ""==""]","set([u'struct tm * t = cmCTest :: GetNightlyTime ( m_CTest -> GetDartConfiguration ( ""NightlyStartTime"" ) , m_Verbose , m_CTest -> GetTomorrowTag ( ) ) ;', u'char current_time [ 1024 ] ;'])","set([64, 66])","[['UTC'], []]",2005-02-16T18:28:47,Andy Cedilnik,2621286447025506463,160
93384c776363f749c910ff95836533a1a9be0e4a,BUG: Removing debugging code now that the problem has been fixed on the remote dashboard.,[],Source/kwsys/SystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_651.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_651.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_651.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1606.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1606.cpp,2280,2280,2283,-1,"fprintf(stderr, ""cwd=[%s]\npwd=[%s]\npwd_path=[%s]\n"",
                cwd, pwd, pwd_path.c_str());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1302.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1302.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1302.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1302.cpp,-1,"[""unkown"", ""string"", ""unkown"", ""unkown"", ""pwd_path . c_str_ret""]","[""unkown"", ""kwsys_stl :: string"", ""=="", ""strcmp_ret"", ""null"", ""!="", ""&&""]","set([u'struct tm * t = cmCTest :: GetNightlyTime ( m_CTest -> GetDartConfiguration ( ""NightlyStartTime"" ) , m_Verbose , m_CTest -> GetTomorrowTag ( ) ) ;', u'char current_time [ 1024 ] ;'])","set([64, 66])","[['fprintf', 'stderr', 'cwd', '[%s]\\npwd', '[%s]\\npwd_path', '[%s]\\n', 'cwd', 'pwd', 'pwd_path', 'c_str'], []]",2005-02-16T13:56:17,Brad King,12962675135111450740,161
93384c776363f749c910ff95836533a1a9be0e4a,BUG: Removing debugging code now that the problem has been fixed on the remote dashboard.,[],Source/kwsys/SystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_651.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_651.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_651.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1607.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1607.cpp,2308,2304,2311,-1,"fprintf(stderr, ""adding [%s]->[%s]\n"", cwd_changed.c_str(),
                  pwd_changed.c_str());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1303.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1303.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1303.cpp,54,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1303.cpp,-1,"[""unkown"", ""constant"", ""cwd_changed . c_str_ret"", ""pwd_changed . c_str_ret""]","[""cwd_changed . empty_ret"", ""pwd_changed . empty_ret"", ""&&""]","set([u'struct tm * t = cmCTest :: GetNightlyTime ( m_CTest -> GetDartConfiguration ( ""NightlyStartTime"" ) , m_Verbose , m_CTest -> GetTomorrowTag ( ) ) ;', u'char current_time [ 1024 ] ;'])","set([64, 66])","[['fprintf', 'stderr', 'adding', '[%s]', '[%s]\\n', 'cwd_changed', 'c_str', 'pwd_changed', 'c_str'], []]",2005-02-16T13:56:17,Brad King,9977524092650642706,162
89a8261f68dd06778e14fc02ccf051489cdb4381,ENH: Mangled lexer symbols to begin in cmListFileLexer_yy instead of just yy to avoid conflict with other lexers that may be added.,[],Source/cmListFileLexer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_653.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1609.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1609.cpp,1479,1481,1487,1489,"YY_FATAL_ERROR( ""out of dynamic memory in yy_create_buffer()"" );","YY_FATAL_ERROR( ""out of dynamic memory in cmListFileLexer_yy_create_buffer()"" );",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1304.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1304.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1304.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1304.cpp,6,"[""string""]","[""yyalloc_ret"", ""!""]","set([u'b = ( YY_BUFFER_STATE ) cmListFileLexer_yyalloc ( sizeof ( struct yy_buffer_state ) , yyscanner )'])",set([4]),"[['yy_create_buffer'], ['cmListFileLexer_yy_create_buffer']]",2005-01-19T17:06:24,Brad King,-3633924246776766193,499
89a8261f68dd06778e14fc02ccf051489cdb4381,ENH: Mangled lexer symbols to begin in cmListFileLexer_yy instead of just yy to avoid conflict with other lexers that may be added.,[],Source/cmListFileLexer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_653.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1609.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1609.cpp,1479,1481,1496,1498,"YY_FATAL_ERROR( ""out of dynamic memory in yy_create_buffer()"" );","YY_FATAL_ERROR( ""out of dynamic memory in cmListFileLexer_yy_create_buffer()"" );",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1305.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1305.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1305.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1305.cpp,15,"[""string""]","[""member""]","set([u'b = ( YY_BUFFER_STATE ) cmListFileLexer_yyalloc ( sizeof ( struct yy_buffer_state ) , yyscanner )', u'b -> yy_ch_buf = ( char * ) cmListFileLexer_yyalloc ( b -> yy_buf_size + 2 , yyscanner )'])","set([4, 13])","[['yy_create_buffer'], ['cmListFileLexer_yy_create_buffer']]",2005-01-19T17:06:24,Brad King,-3633924246776766193,499
89a8261f68dd06778e14fc02ccf051489cdb4381,ENH: Mangled lexer symbols to begin in cmListFileLexer_yy instead of just yy to avoid conflict with other lexers that may be added.,[],Source/cmListFileLexer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_653.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1610.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1610.cpp,1697,1699,1701,1703,"YY_FATAL_ERROR( ""out of dynamic memory in yy_scan_buffer()"" );","YY_FATAL_ERROR( ""out of dynamic memory in cmListFileLexer_yy_scan_buffer()"" );",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1306.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1306.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1306.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1306.cpp,12,"[""string""]","[""yyalloc_ret"", ""!""]","set([u'b = ( YY_BUFFER_STATE ) cmListFileLexer_yyalloc ( sizeof ( struct yy_buffer_state ) , yyscanner )'])",set([10]),"[['yy_scan_buffer'], ['cmListFileLexer_yy_scan_buffer']]",2005-01-19T17:06:24,Brad King,7926756977697287341,163
89a8261f68dd06778e14fc02ccf051489cdb4381,ENH: Mangled lexer symbols to begin in cmListFileLexer_yy instead of just yy to avoid conflict with other lexers that may be added.,[],Source/cmListFileLexer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_653.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1611.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1611.cpp,1746,1748,1750,1752,"YY_FATAL_ERROR( ""out of dynamic memory in yy_scan_bytes()"" );","YY_FATAL_ERROR( ""out of dynamic memory in cmListFileLexer_yy_scan_bytes()"" );",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1307.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1307.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1307.cpp,11,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1307.cpp,11,"[""string""]","[""yyalloc_ret"", ""!""]","set([u'buf = ( char * ) cmListFileLexer_yyalloc ( n , yyscanner )'])",set([9]),"[['yy_scan_bytes'], ['cmListFileLexer_yy_scan_bytes']]",2005-01-19T17:06:24,Brad King,-7040228614918721113,500
89a8261f68dd06778e14fc02ccf051489cdb4381,ENH: Mangled lexer symbols to begin in cmListFileLexer_yy instead of just yy to avoid conflict with other lexers that may be added.,[],Source/cmListFileLexer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_653.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1611.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1611.cpp,1746,1748,1759,1761,"YY_FATAL_ERROR( ""bad buffer in yy_scan_bytes()"" );","YY_FATAL_ERROR( ""bad buffer in cmListFileLexer_yy_scan_bytes()"" );",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1308.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1308.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1308.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1308.cpp,20,"[""string""]","[""yy_scan_buffer_ret"", ""!""]","set([u'b = cmListFileLexer_yy_scan_buffer ( buf , n , yyscanner )'])",set([18]),"[['yy_scan_bytes'], ['cmListFileLexer_yy_scan_bytes']]",2005-01-19T17:06:24,Brad King,-7040228614918721113,500
89a8261f68dd06778e14fc02ccf051489cdb4381,ENH: Mangled lexer symbols to begin in cmListFileLexer_yy instead of just yy to avoid conflict with other lexers that may be added.,[],Source/cmListFileLexer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_653.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1612.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1612.cpp,1883,1885,1891,1893,"yy_fatal_error( ""yyset_lineno called with no buffer"" , yyscanner);","yy_fatal_error( ""cmListFileLexer_yyset_lineno called with no buffer"" , yyscanner);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1309.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1309.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1309.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1309.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([u'yyscan_t yyscanner']),set([0]),"[['yyset_lineno'], ['cmListFileLexer_yyset_lineno']]",2005-01-19T17:06:24,Brad King,1169388233445055067,164
89a8261f68dd06778e14fc02ccf051489cdb4381,ENH: Mangled lexer symbols to begin in cmListFileLexer_yy instead of just yy to avoid conflict with other lexers that may be added.,[],Source/cmListFileLexer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_653.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_653.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1613.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1613.cpp,1898,1900,1906,1908,"yy_fatal_error( ""yyset_column called with no buffer"" , yyscanner);","yy_fatal_error( ""cmListFileLexer_yyset_column called with no buffer"" , yyscanner);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1310.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1310.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1310.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1310.cpp,6,"[""string"", ""yyscan_t""]","[""macro"", ""!""]",set([u'yyscan_t yyscanner']),set([0]),"[['yyset_column'], ['cmListFileLexer_yyset_column']]",2005-01-19T17:06:24,Brad King,7075239842914816117,165
17619508e9d651f32cbd8d5bfbea6ac94ef975fc,"ENH: Update to the new coverage code. It may not be perfect yet, but it is a start",[],Source/CTest/cmCTestCoverageHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_655.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_655.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_655.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1615.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1615.cpp,19,19,449,-1,"sprintf(cfileoutputname, ""CoverageLog-%d.xml"", cfileoutputcount++);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1311.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1311.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1311.cpp,408,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1311.cpp,-1,"[""char *"", ""constant"", ""int""]","[""int"", ""null"", ""==""]",set([u'yyscan_t yyscanner']),set([0]),"[['sprintf', 'cfileoutputname', 'CoverageLog', '%d', 'xml', 'cfileoutputcount'], []]",2004-10-17T23:45:36,Andy Cedilnik,4939406204348862360,508
609801fe67c95f9959468df8316a8f4a26943842,ENH: Update Curl to 7.12.1,[],Source/CTest/Curl/base64.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_656.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_656.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_656.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1616.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1616.cpp,144,152,156,162,"sprintf(output, ""%c%c=="", 
              table64[obuf[0]],
              table64[obuf[1]]);","snprintf(output, 5, ""%c%c=="",
               table64[obuf[0]],
               table64[obuf[1]]);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1314.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1314.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1314.cpp,39,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1314.cpp,39,"[""malloc_ret"", ""string"", ""member"", ""member""]","[""null""]","set([u'base64data = output = ( char * ) malloc ( insize * 4 / 3 + 4 )', u'i = inputparts = 0 ;', u'obuf [ 3 ] = ibuf [ 2 ] & 0x3F', u'output += 4', u'unsigned char obuf [ 4 ] ;', u'inputparts ++'])","set([35, 16, 3, 21, 23, 57])","[['sprintf'], ['snprintf', '5']]",2004-10-05T13:34:20,Andy Cedilnik,3362612439986873733,501
609801fe67c95f9959468df8316a8f4a26943842,ENH: Update Curl to 7.12.1,[],Source/CTest/Curl/base64.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_656.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_656.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_656.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1616.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1616.cpp,144,152,161,167,"sprintf(output, ""%c%c%c="", 
              table64[obuf[0]],
              table64[obuf[1]],
              table64[obuf[2]]);","snprintf(output, 5, ""%c%c%c="",
               table64[obuf[0]],
               table64[obuf[1]],
               table64[obuf[2]]);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1315.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1315.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1315.cpp,44,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1315.cpp,44,"[""malloc_ret"", ""string"", ""member"", ""member"", ""member""]","[""null""]","set([u'base64data = output = ( char * ) malloc ( insize * 4 / 3 + 4 )', u'i = inputparts = 0 ;', u'obuf [ 3 ] = ibuf [ 2 ] & 0x3F', u'output += 4', u'unsigned char obuf [ 4 ] ;', u'inputparts ++'])","set([35, 16, 3, 21, 23, 57])","[['sprintf'], ['snprintf', '5']]",2004-10-05T13:34:20,Andy Cedilnik,3362612439986873733,501
609801fe67c95f9959468df8316a8f4a26943842,ENH: Update Curl to 7.12.1,[],Source/CTest/Curl/base64.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_656.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_656.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_656.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1616.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1616.cpp,144,152,167,173,"sprintf(output, ""%c%c%c%c"", 
              table64[obuf[0]],
              table64[obuf[1]],
              table64[obuf[2]],
              table64[obuf[3]] );","snprintf(output, 5, ""%c%c%c%c"",
               table64[obuf[0]],
               table64[obuf[1]],
               table64[obuf[2]],
               table64[obuf[3]] );",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1316.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1316.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1316.cpp,50,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1316.cpp,50,"[""malloc_ret"", ""string"", ""member"", ""member"", ""member"", ""member""]","[""null""]","set([u'base64data = output = ( char * ) malloc ( insize * 4 / 3 + 4 )', u'i = inputparts = 0 ;', u'obuf [ 3 ] = ibuf [ 2 ] & 0x3F', u'output += 4', u'unsigned char obuf [ 4 ] ;', u'inputparts ++'])","set([35, 16, 3, 21, 23, 57])","[['sprintf'], ['snprintf', '5']]",2004-10-05T13:34:20,Andy Cedilnik,3362612439986873733,501
609801fe67c95f9959468df8316a8f4a26943842,ENH: Update Curl to 7.12.1,[],Source/CTest/Curl/formdata.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_658.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_658.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_658.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1620.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1620.cpp,1006,780,1042,848,"vsprintf(s, fmt, ap);","vsnprintf(s, sizeof(s), fmt, ap);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1322.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1322.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1322.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1322.cpp,7,"[""char *"", ""const char *"", ""va_list""]",[],"set([u'char s [ 4096 ] ;', u'const char * fmt', u'va_list ap ;'])","set([2, 4, 5])","[['vsprintf'], ['vsnprintf', 'sizeof', 's']]",2004-10-05T13:34:20,Andy Cedilnik,-8838270357334836847,166
609801fe67c95f9959468df8316a8f4a26943842,ENH: Update Curl to 7.12.1,[],Source/CTest/Curl/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_659.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_659.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_659.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1622.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1622.cpp,770,932,772,934,"sprintf(buf, ""%04d%02d%02d %02d:%02d:%02d"",
                year, month, day, hour, minute, second);","snprintf(buf, sizeof(conn->data->state.buffer),
                 ""%04d%02d%02d %02d:%02d:%02d GMT"",
                 year, month, day, hour, minute, second);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1325.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1325.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1325.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1325.cpp,26,"[""char *"", ""string"", ""int"", ""int"", ""int"", ""int"", ""int"", ""int""]","[""int"", ""sscanf_ret"", ""==""]","set([u'int year , month , day , hour , minute , second ;', u'struct connectdata * conn', u'char * buf = conn -> data -> state . buffer ;'])","set([1, 21, 6])","[['sprintf'], ['snprintf', 'sizeof', 'conn', 'data', 'state', 'buffer', 'GMT']]",2004-10-05T13:34:20,Andy Cedilnik,-5169724837833776482,167
609801fe67c95f9959468df8316a8f4a26943842,ENH: Update Curl to 7.12.1,[],Source/CTest/Curl/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_659.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_659.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_659.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1625.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1625.cpp,1444,1507,1446,1509,"f(newhost, ""%d.%d.%d.%d"", ip[0], ip[1], ip[2], ip[3]);","f(newhost, sizeof(newhost),
             ""%d.%d.%d.%d"", ip[0], ip[1], ip[2], ip[3]);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1328.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1328.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1328.cpp,92,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1328.cpp,83,"[""char *"", ""constant"", ""member"", ""member"", ""member"", ""member""]","[""char *"", ""!"", ""!""]","set([u'int ip [ 4 ] ;', u'char newhost [ 48 ] ;', u'char * str = buf ;', u'str ++'])","set([35, 75, 57, 55])","[[], ['sizeof', 'newhost']]",2004-10-05T13:34:20,Andy Cedilnik,-5549718285027433447,168
609801fe67c95f9959468df8316a8f4a26943842,ENH: Update Curl to 7.12.1,[],Source/CTest/Curl/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_659.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_659.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_659.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1626.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1626.cpp,1999,2163,2001,2165,"sprintf(buf, ""Content-Length: %d\r\n"", filesize);","snprintf(buf, sizeof(data->state.buffer),
               ""Content-Length: %"" FORMAT_OFF_T ""\r\n"", filesize);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1329.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1329.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1329.cpp,61,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1329.cpp,98,"[""char *"", ""string"", ""ssize_t""]","[""macro"", ""ftp_getsize_ret"", ""==""]","set([u'result = ftp_getsize ( conn , ftp -> file , & filesize )'])",set([95]),"[['sprintf', '%d\\r\\n'], ['snprintf', 'sizeof', 'data', 'state', 'buffer', '%', 'FORMAT_OFF_T', '\\r\\n']]",2004-10-05T13:34:20,Andy Cedilnik,-2787494779561510706,169
6972cdf9e9ca78f9031bd419f48c270bd67c8a71,ENH: Move all extracting of variables to ExtractVariables. This way it is easy to know what variables are used,[],Source/CTest/cmCTestScriptHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_662.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_662.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_662.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1635.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1635.cpp,177,180,186,208,,"sprintf(updateVar,""CTEST_EXTRA_UPDATES_%i"",i);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1339.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1339.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1339.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1339.cpp,31,[],[],"set([u'i = 1 ;', u'char updateVar [ 40 ] ;'])","set([27, 29])","[[], ['sprintf', 'updateVar', 'CTEST_EXTRA_UPDATES_%i', 'i']]",2004-09-28T21:51:29,Andy Cedilnik,1521340646448159362,170
6972cdf9e9ca78f9031bd419f48c270bd67c8a71,ENH: Move all extracting of variables to ExtractVariables. This way it is easy to know what variables are used,[],Source/CTest/cmCTestScriptHandler.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_662.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_662.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_662.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1636.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1636.cpp,397,428,403,-1,"sprintf(updateVar,""CTEST_EXTRA_UPDATES_%i"",i);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1340.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1340.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1340.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1340.cpp,-1,"[""char *"", ""string"", ""int""]","[""int"", ""int"", ""<""]","set([u'i = 1 ;', u'char updateVar [ 40 ] ;'])","set([27, 29])","[['sprintf', 'updateVar', 'CTEST_EXTRA_UPDATES_%i', 'i'], []]",2004-09-28T21:51:29,Andy Cedilnik,-1521340646448159362,502
a2c19a4d46b82f747d97ad0005887ce44c89af72,"ENH: Condense help string, add support for setting line length and make it work",[],Source/kwsys/CommandLineArguments.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_664.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_664.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_664.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1638.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1638.cpp,539,550,543,556,"sprintf(format, ""%%%ds"", static_cast<unsigned int>(maxlen));","sprintf(format, ""%%%ds  "", static_cast<unsigned int>(maxlen-2));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1341.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1341.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1341.cpp,76,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1341.cpp,78,[],[],set([]),set([]),"[[], ['2']]",2004-09-16T14:27:17,Andy Cedilnik,6400019251,171
43d8918f4078dc2f99a868b23bcdffabaa739a95,more cleanup of ctest,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_666.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_666.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_666.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1641.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1641.cpp,558,472,1039,-1,"sprintf(cfileoutputname, ""CoverageLog-%d.xml"", cfileoutputcount++);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1342.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1342.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1342.cpp,406,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1342.cpp,-1,"[""char *"", ""constant"", ""int""]","[""int"", ""null"", ""==""]",set([]),set([]),"[['sprintf', 'cfileoutputname', 'CoverageLog', '%d', 'xml', 'cfileoutputcount'], []]",2004-09-09T12:41:05,Ken Martin,4939406204348862360,508
43d8918f4078dc2f99a868b23bcdffabaa739a95,more cleanup of ctest,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_666.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_666.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_666.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1641.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1641.cpp,558,472,1507,-1,"sprintf(buffer, ""%02d:%02d:%02d"", hours, minutes, seconds);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1343.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1343.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1343.cpp,180,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1343.cpp,-1,"[""char *"", ""string"", ""int"", ""int"", ""int""]","[""std :: ofstream *""]",set([]),set([]),"[['sprintf', 'buffer', '%02d', '%02d', '%02d', 'hours', 'minutes', 'seconds'], []]",2004-09-09T12:41:05,Ken Martin,-12628380378576715800,503
43d8918f4078dc2f99a868b23bcdffabaa739a95,more cleanup of ctest,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_666.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_666.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_666.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1641.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1641.cpp,558,472,1761,-1,"fprintf(stderr,""\n%.0f%% tests passed, %i tests failed out of %i\n"",
      percent, int(failed.size()), total);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1344.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1344.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1344.cpp,62,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1344.cpp,-1,"[""unkown"", ""constant"", ""int"", ""int_ret"", ""int_ret""]","[""int_ret"", ""null"", ""=="", ""!""]",set([]),set([]),"[['fprintf', 'stderr', '\\n%', '0f%%', 'tests', 'passed', '%i', 'tests', 'failed', 'out', 'of', '%i\\n', 'percent', 'int', 'failed', 'size', 'total'], []]",2004-09-09T12:41:05,Ken Martin,39299349369349538916,504
43d8918f4078dc2f99a868b23bcdffabaa739a95,more cleanup of ctest,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_666.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_666.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_666.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1641.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1641.cpp,558,472,1778,-1,"fprintf(stderr, ""\t%3d - %s (%s)\n"", ftit->m_TestCount, ftit->m_Name.c_str(),
            this->GetTestStatus(ftit->m_Status));",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1345.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1345.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1345.cpp,79,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1345.cpp,-1,"[""unkown"", ""string"", ""member"", ""ftit -> m_Name . c_str_ret"", ""this -> GetTestStatus_ret""]","[""member"", ""unkown"", ""!=""]",set([]),set([]),"[['fprintf', 'stderr', '\\t%3d', '%s', '%s', '\\n', 'ftit', 'm_TestCount', 'ftit', 'm_Name', 'c_str', 'this', 'GetTestStatus', 'ftit', 'm_Status'], []]",2004-09-09T12:41:05,Ken Martin,23976284795740873662,172
05d985c08277350c3a1ca5ea6023ac397cf9bf1b,some bug fixes for my recent checkins and some more cleanup,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_667.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_667.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_667.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1642.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1642.cpp,710,719,743,-1,"sprintf(current_time, ""%04d-%02d-%02d %02d:%02d:%02d UTC"",
      t->tm_year + 1900,
      t->tm_mon + 1,
      t->tm_mday,
      t->tm_hour,
      t->tm_min,
      t->tm_sec);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1346.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1346.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1346.cpp,31,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1346.cpp,-1,"[""char *"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""unkown"", ""unkown"", ""==""]",set([]),set([]),"[['sprintf', 'current_time', '%04d', '%02d', '%02d', '%02d', '%02d', '%02d', 'UTC', 't', 'tm_year', '1900', 't', 'tm_mon', '1', 't', 'tm_mday', 't', 'tm_hour', 't', 'tm_min', 't', 'tm_sec'], []]",2004-09-07T13:17:15,Ken Martin,-37193198563335335289,173
1b5b6ab30378d0648eccb66c1fc41a7e8c762dea,starting cleanup of ctest,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_668.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_668.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_668.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1643.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1643.cpp,3602,3598,3946,-1,"sprintf(updateVar,""CTEST_EXTRA_UPDATES_%i"",i);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1347.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1347.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1347.cpp,141,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1347.cpp,-1,"[""char *"", ""string"", ""int""]","[""int"", ""int"", ""<""]",set([]),set([]),"[['sprintf', 'updateVar', 'CTEST_EXTRA_UPDATES_%i', 'i'], []]",2004-09-06T16:46:35,Ken Martin,-1521340646448159362,502
66a08c10e5bd4b8eff58837cd58372a4dfdd19df,"ENH: more uniform approach to enable language, one step closer to being able to enable a language without modifing cmake source code",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_669.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_669.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_669.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1644.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1644.cpp,158,158,160,160,"fprintf(fout, ""PROJECT(CMAKE_TRY_COMPILE FORTRAN)\n"");","fprintf(fout, ""PROJECT(CMAKE_TRY_COMPILE Fortran)\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1348.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1348.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1348.cpp,138,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1348.cpp,138,"[""FILE *"", ""string""]","[""cmSystemTools :: FileFormat"", ""unkown"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmSystemTools :: FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([116, 125])","[['FORTRAN'], ['Fortran']]",2004-08-26T18:55:55,Bill Hoffman,0,550
66a08c10e5bd4b8eff58837cd58372a4dfdd19df,"ENH: more uniform approach to enable language, one step closer to being able to enable a language without modifing cmake source code",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_669.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_669.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_669.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1645.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1645.cpp,187,187,190,190,"fprintf(fout, ""SET(CMAKE_FORTRAN_FLAGS \""${CMAKE_FORTRAN_FLAGS} "");","fprintf(fout, ""SET(CMAKE_Fortran_FLAGS \""${CMAKE_Fortran_FLAGS} "");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1349.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1349.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1349.cpp,168,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1349.cpp,168,"[""FILE *"", ""string""]","[""cmSystemTools :: FileFormat"", ""unkown"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmSystemTools :: FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([116, 125])","[['CMAKE_FORTRAN_FLAGS', 'CMAKE_FORTRAN_FLAGS'], ['CMAKE_Fortran_FLAGS', 'CMAKE_Fortran_FLAGS']]",2004-08-26T18:55:55,Bill Hoffman,0,550
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1646.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1646.cpp,2156,2156,2158,-1,"fprintf(stderr,""%3d/%3d Testing %-30s\n"", cnt, (int)tmsize, testname.c_str());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1350.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1350.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1350.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1350.cpp,-1,"[""unkown"", ""string"", ""int"", ""tm_ListOfTests :: size_type"", ""testname . c_str_ret""]","[""unkown""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmSystemTools :: FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([116, 125])","[['fprintf', 'stderr', '%3d/%3d', 'Testing', '%', '30s\\n', 'cnt', 'int', 'tmsize', 'testname', 'c_str'], []]",2004-08-11T20:37:21,Bill Hoffman,16776029500946616821,174
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1646.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1646.cpp,2156,2156,2162,-1,"fprintf(stderr,""%3d/%3d Testing %-30s "", cnt, (int)tmsize, testname.c_str());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1351.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1351.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1351.cpp,67,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1351.cpp,-1,"[""unkown"", ""string"", ""int"", ""tm_ListOfTests :: size_type"", ""testname . c_str_ret""]","[""unkown"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmSystemTools :: FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([116, 125])","[['fprintf', 'stderr', '%3d/%3d', 'Testing', '%', '30s', 'cnt', 'int', 'tmsize', 'testname', 'c_str'], []]",2004-08-11T20:37:21,Bill Hoffman,25114283989570180497,175
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1647.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1647.cpp,2279,2293,2281,2295,"fprintf(stderr,""   Passed\n"");","std::cerr <<   ""   Passed\n"";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1352.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1352.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1352.cpp,186,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1352.cpp,200,"[""unkown"", ""string""]","[""this -> RunTest_ret"", ""unkown"", ""=="", ""int"", ""null"", ""=="", ""&&""]","set([u'res = this -> RunTest ( arguments , & output , & retVal , olog )', u'int res = 0 ;', u'int retVal = 0 ;'])","set([169, 163, 133])","[['fprintf', 'stderr'], ['std', 'cerr']]",2004-08-11T20:37:21,Bill Hoffman,19029866160539607626,548
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1648.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1648.cpp,2288,2302,2290,2304,"fprintf(stderr,""***Timeout\n"");","std::cerr << ""***Timeout\n"";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1353.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1353.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1353.cpp,195,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1353.cpp,209,"[""unkown"", ""string""]","[""this -> RunTest_ret"", ""unkown"", ""==""]","set([u'res = this -> RunTest ( arguments , & output , & retVal , olog )', u'int res = 0 ;'])","set([169, 163])","[['fprintf', 'stderr'], ['std', 'cerr']]",2004-08-11T20:37:21,Bill Hoffman,19029866160539607626,548
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1648.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1648.cpp,2288,2302,2295,2309,"fprintf(stderr,""***Exception: "");","std::cerr << ""***Exception: "";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1354.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1354.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1354.cpp,200,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1354.cpp,214,"[""unkown"", ""string""]","[""this -> RunTest_ret"", ""unkown"", ""==""]","set([u'res = this -> RunTest ( arguments , & output , & retVal , olog )', u'int res = 0 ;'])","set([169, 163])","[['fprintf', 'stderr'], ['std', 'cerr']]",2004-08-11T20:37:21,Bill Hoffman,19029866160539607626,548
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1648.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1648.cpp,2288,2302,2299,2313,"fprintf(stderr,""SegFault"");","std::cerr << ""SegFault"";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1355.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1355.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1355.cpp,204,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1355.cpp,218,"[""unkown"", ""string""]","[""int""]",set([u'int retVal = 0 ;']),set([133]),"[['fprintf', 'stderr'], ['std', 'cerr']]",2004-08-11T20:37:21,Bill Hoffman,19029866160539607626,548
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1648.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1648.cpp,2288,2302,2303,2317,"fprintf(stderr,""Illegal"");","std::cerr << ""Illegal"";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1356.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1356.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1356.cpp,208,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1356.cpp,222,"[""unkown"", ""string""]","[""int""]",set([u'int retVal = 0 ;']),set([133]),"[['fprintf', 'stderr'], ['std', 'cerr']]",2004-08-11T20:37:21,Bill Hoffman,19029866160539607626,548
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1648.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1648.cpp,2288,2302,2307,2321,"fprintf(stderr,""Interrupt"");","std::cerr << ""Interrupt"";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1357.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1357.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1357.cpp,212,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1357.cpp,226,"[""unkown"", ""string""]","[""int""]",set([u'int retVal = 0 ;']),set([133]),"[['fprintf', 'stderr'], ['std', 'cerr']]",2004-08-11T20:37:21,Bill Hoffman,19029866160539607626,548
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1648.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1648.cpp,2288,2302,2311,2325,"fprintf(stderr,""Numerical"");","std::cerr << ""Numerical"";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1358.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1358.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1358.cpp,216,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1358.cpp,230,"[""unkown"", ""string""]","[""int""]",set([u'int retVal = 0 ;']),set([133]),"[['fprintf', 'stderr'], ['std', 'cerr']]",2004-08-11T20:37:21,Bill Hoffman,19029866160539607626,548
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1648.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1648.cpp,2288,2302,2315,2329,"fprintf(stderr,""Other"");","std::cerr << ""Other"";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1359.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1359.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1359.cpp,220,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1359.cpp,234,"[""unkown"", ""string""]","[""int""]",set([u'int retVal = 0 ;']),set([133]),"[['fprintf', 'stderr'], ['std', 'cerr']]",2004-08-11T20:37:21,Bill Hoffman,19029866160539607626,548
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1648.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1648.cpp,2288,2302,2318,2332,"fprintf(stderr,""\n"");","std::cerr << ""\n"";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1360.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1360.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1360.cpp,223,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1360.cpp,237,"[""unkown"", ""string""]","[""this -> RunTest_ret"", ""unkown"", ""==""]","set([u'res = this -> RunTest ( arguments , & output , & retVal , olog )', u'int res = 0 ;'])","set([169, 163])","[['fprintf', 'stderr'], ['std', 'cerr']]",2004-08-11T20:37:21,Bill Hoffman,19029866160539607626,548
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1648.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1648.cpp,2288,2302,2322,2336,"fprintf(stderr,""***Bad command %d\n"", res);","std::cerr << ""***Bad command "" << res << ""\n"";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1361.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1361.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1361.cpp,227,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1361.cpp,241,"[""unkown"", ""string"", ""this -> RunTest_ret""]","[""this -> RunTest_ret"", ""unkown"", ""==""]","set([u'res = this -> RunTest ( arguments , & output , & retVal , olog )', u'int res = 0 ;'])","set([169, 163])","[['fprintf', 'stderr', '%d\\n'], ['std', 'cerr', '\\n']]",2004-08-11T20:37:21,Bill Hoffman,12896693991935004517,176
d2087dfe99d87356462a9a8b6608ca56d6293c5e,"ENH: fixes for RUN_TESTS from visual studio IDE, fprintf does not print right away, so std::cerr had to be used.  Also, allow .\ to start the config type",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_670.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_670.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1648.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1648.cpp,2288,2302,2327,2341,"fprintf(stderr,""***Failed\n"");","std::cerr << ""***Failed\n"";",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1362.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1362.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1362.cpp,232,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1362.cpp,246,"[""unkown"", ""string""]","[""this -> RunTest_ret"", ""unkown"", ""=="", ""!""]","set([u'res = this -> RunTest ( arguments , & output , & retVal , olog )', u'int res = 0 ;'])","set([169, 163])","[['fprintf', 'stderr'], ['std', 'cerr']]",2004-08-11T20:37:21,Bill Hoffman,19029866160539607626,548
9655299f08b5aa04ea63193ebecfa08efae7ca3d,ENH: initial fortran support,[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_671.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_671.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_671.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1650.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1650.cpp,181,185,183,190,,"fprintf(fout, ""SET(CMAKE_FORTRAN_FLAGS \""${CMAKE_FORTRAN_FLAGS} "");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1364.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1364.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1364.cpp,161,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1364.cpp,168,"[""FILE *"", ""string""]","[""cmSystemTools :: FileFormat"", ""unkown"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmSystemTools :: FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([116, 125])","[[], ['fprintf', 'fout', 'SET', 'CMAKE_FORTRAN_FLAGS', '\\', 'CMAKE_FORTRAN_FLAGS']]",2004-08-06T18:51:41,Bill Hoffman,-23742459721441166780,177
9655299f08b5aa04ea63193ebecfa08efae7ca3d,ENH: initial fortran support,[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_671.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_671.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_671.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1650.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1650.cpp,181,185,183,193,,"fprintf(fout, "" %s "", fflags);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1365.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1365.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1365.cpp,161,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1365.cpp,171,"[""FILE *"", ""string""]","[""cmSystemTools :: FileFormat"", ""unkown"", ""==""]","set([u'const char * fflags = mf -> GetDefinition ( ""CMAKE_FORTRAN_FLAGS"" ) ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([116, 167])","[[], ['fprintf', 'fout', '%s', 'fflags']]",2004-08-06T18:51:41,Bill Hoffman,-2395879565345455983,178
9655299f08b5aa04ea63193ebecfa08efae7ca3d,ENH: initial fortran support,[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_671.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_671.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_671.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1650.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1650.cpp,181,185,183,195,,(fout;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1366.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1366.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1366.cpp,161,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1366.cpp,173,"[""FILE *"", ""string""]","[""cmSystemTools :: FileFormat"", ""unkown"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmSystemTools :: FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([116, 125])","[[], ['fout']]",2004-08-06T18:51:41,Bill Hoffman,-509529383372783594,505
c19a70b3ada66a59c7a0ff78bf1a4a1cd557db9a,WRN: remove warnings,[],Source/cmMacroCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_674.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_674.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_674.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1657.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1657.cpp,71,71,76,74,"sprintf(argcDef,""%i"",expandedArguments.size());",argcDefStream << expandedArguments.size();,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1367.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1367.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1367.cpp,58,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1367.cpp,56,"[""char *"", ""string"", ""expandedArguments . size_ret""]","[""expandedArguments . size_ret"", ""m_Args . size_ret"", ""<"", ""!""]",set([u'std :: vector < std :: string > expandedArguments ;']),set([40]),"[['sprintf', 'argcDef', '%i'], ['argcDefStream']]",2004-04-27T12:30:25,Bill Hoffman,-1831989004962612299,179
824b231f42af0b228040202d3e62c781f5d6c409,ENH: Count tests while they go. Also in the logs report more stuff like elapsed time etc.,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_677.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_677.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_677.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1661.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1661.cpp,1929,1924,1961,2000,"fprintf(stderr,""Testing %-30s "",args[0].Value.c_str());","fprintf(stderr,""%3d/%3d Testing %-30s "", cnt, tmsize, testname.c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1368.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1368.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1368.cpp,133,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1368.cpp,54,"[""unkown"", ""string"", ""args [ 0 ] . Value . c_str_ret""]","[""unkown"", ""!""]","set([u'const std :: string & testname = it -> Name ;', u'cnt ++', u'tm_ListOfTests :: size_type tmsize = testlist . size ( ) ;'])","set([32, 33, 7])","[['args[0]', 'Value'], ['%3d/%3d', 'cnt', 'tmsize', 'testname']]",2004-03-14T16:23:57,Andy Cedilnik,4043100191516202791,180
824b231f42af0b228040202d3e62c781f5d6c409,ENH: Count tests while they go. Also in the logs report more stuff like elapsed time etc.,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_677.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_677.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_677.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1661.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1661.cpp,1929,1924,1971,1996,,"fprintf(stderr,""%3d/%3d Testing %-30s\n"", cnt, tmsize, testname.c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1369.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1369.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1369.cpp,143,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1369.cpp,50,[],"[""member"", ""member"", ""ereg . find_ret"", ""&&"", ""&&"", ""!""]","set([u'const std :: string & testname = it -> Name ;', u'cnt ++', u'tm_ListOfTests :: size_type tmsize = testlist . size ( ) ;'])","set([32, 33, 7])","[[], ['fprintf', 'stderr', '%3d/%3d', 'Testing', '%', '30s\\n', 'cnt', 'tmsize', 'testname', 'c_str']]",2004-03-14T16:23:57,Andy Cedilnik,-9220665130091852157,181
824b231f42af0b228040202d3e62c781f5d6c409,ENH: Count tests while they go. Also in the logs report more stuff like elapsed time etc.,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_677.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_677.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_677.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1661.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1661.cpp,1929,1924,1971,2100,,"sprintf(buffer, ""%02d:%02d:%02d"", hours, minutes, seconds);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1370.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1370.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1370.cpp,143,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1370.cpp,154,[],"[""member"", ""member"", ""ereg . find_ret"", ""&&"", ""&&"", ""!""]","set([u'int hours = static_cast < int > ( ttime / ( 60 * 60 ) ) ;', u'std :: ofstream * olog = 0 ;', u'olog = & ofs', u'int seconds = static_cast < int > ( ttime ) % 60 ;', u'char buffer [ 100 ] ;', u'int minutes = static_cast < int > ( ttime / 60 ) % 60 ;'])","set([10, 15, 150, 151, 152, 153])","[[], ['sprintf', 'buffer', '%02d', '%02d', '%02d', 'hours', 'minutes', 'seconds']]",2004-03-14T16:23:57,Andy Cedilnik,12628380378576715800,506
740505bb63b883d5350f8e8f5684b11a486ad792,ENH: Added a recursive process execution test.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1666.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1666.cpp,63,70,67,80,,"fprintf(stdout, ""Output on stdout before recursive test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1371.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1371.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1371.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1371.cpp,8,[],[],set([]),set([]),"[[], ['fprintf', 'stdout', 'Output', 'on', 'stdout', 'before', 'recursive', 'test', '\\n']]",2004-01-17T17:46:56,Brad King,-28917523840819242000,182
740505bb63b883d5350f8e8f5684b11a486ad792,ENH: Added a recursive process execution test.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1666.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1666.cpp,63,70,67,81,,"fprintf(stderr, ""Output on stderr before recursive test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1372.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1372.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1372.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1372.cpp,9,[],[],set([]),set([]),"[[], ['fprintf', 'stderr', 'Output', 'on', 'stderr', 'before', 'recursive', 'test', '\\n']]",2004-01-17T17:46:56,Brad King,-28917511840817241650,183
740505bb63b883d5350f8e8f5684b11a486ad792,ENH: Added a recursive process execution test.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1666.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1666.cpp,63,70,67,86,,"fprintf(stdout, ""Output on stdout after recursive test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1373.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1373.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1373.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1373.cpp,14,[],[],set([]),set([]),"[[], ['fprintf', 'stdout', 'Output', 'on', 'stdout', 'after', 'recursive', 'test', '\\n']]",2004-01-17T17:46:56,Brad King,-44428215636482901092,184
740505bb63b883d5350f8e8f5684b11a486ad792,ENH: Added a recursive process execution test.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1666.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1666.cpp,63,70,67,87,,"fprintf(stderr, ""Output on stderr after recursive test.\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1374.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1374.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1374.cpp,2,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1374.cpp,15,[],[],set([]),set([]),"[[], ['fprintf', 'stderr', 'Output', 'on', 'stderr', 'after', 'recursive', 'test', '\\n']]",2004-01-17T17:46:56,Brad King,-44428203636480900742,185
740505bb63b883d5350f8e8f5684b11a486ad792,ENH: Added a recursive process execution test.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1667.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1667.cpp,156,210,184,247,,"fprintf(stdout, ""Output on stdout before test %d.\n"", n);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1375.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1375.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1375.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1375.cpp,72,"[""const char * *"", ""member"", ""member"", ""member""]","[""atoi_ret"", ""int"", ""<=""]","set([u'int n = 0 ;', u'n = atoi ( argv [ 1 ] )', u'n = atoi ( argv [ 2 ] )'])","set([25, 2, 21])","[[], ['fprintf', 'stdout', 'Output', 'on', 'stdout', 'before', 'test', '%d', '\\n', 'n']]",2004-01-17T17:46:56,Brad King,-20240319322567357949,186
740505bb63b883d5350f8e8f5684b11a486ad792,ENH: Added a recursive process execution test.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1667.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1667.cpp,156,210,184,248,,"fprintf(stderr, ""Output on stderr before test %d.\n"", n);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1376.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1376.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1376.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1376.cpp,73,"[""const char * *"", ""member"", ""member"", ""member""]","[""atoi_ret"", ""int"", ""<=""]","set([u'int n = 0 ;', u'n = atoi ( argv [ 1 ] )', u'n = atoi ( argv [ 2 ] )'])","set([25, 2, 21])","[[], ['fprintf', 'stderr', 'Output', 'on', 'stderr', 'before', 'test', '%d', '\\n', 'n']]",2004-01-17T17:46:56,Brad King,-20240307322565357599,187
740505bb63b883d5350f8e8f5684b11a486ad792,ENH: Added a recursive process execution test.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1667.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1667.cpp,156,210,184,252,,"fprintf(stdout, ""Output on stdout after test %d.\n"", n);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1377.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1377.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1377.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1377.cpp,77,"[""const char * *"", ""member"", ""member"", ""member""]","[""atoi_ret"", ""int"", ""<=""]","set([u'int n = 0 ;', u'n = atoi ( argv [ 1 ] )', u'n = atoi ( argv [ 2 ] )'])","set([25, 2, 21])","[[], ['fprintf', 'stdout', 'Output', 'on', 'stdout', 'after', 'test', '%d', '\\n', 'n']]",2004-01-17T17:46:56,Brad King,-35751011118231017041,188
740505bb63b883d5350f8e8f5684b11a486ad792,ENH: Added a recursive process execution test.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1667.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1667.cpp,156,210,184,253,,"fprintf(stderr, ""Output on stderr after test %d.\n"", n);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1378.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1378.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1378.cpp,47,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1378.cpp,78,"[""const char * *"", ""member"", ""member"", ""member""]","[""atoi_ret"", ""int"", ""<=""]","set([u'int n = 0 ;', u'n = atoi ( argv [ 1 ] )', u'n = atoi ( argv [ 2 ] )'])","set([25, 2, 21])","[[], ['fprintf', 'stderr', 'Output', 'on', 'stderr', 'after', 'test', '%d', '\\n', 'n']]",2004-01-17T17:46:56,Brad King,-35750999118229016691,189
740505bb63b883d5350f8e8f5684b11a486ad792,ENH: Added a recursive process execution test.,[],Source/kwsys/testProcess.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_679.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1667.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1667.cpp,156,210,188,260,,"fprintf(stderr, ""Test number out of range\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1379.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1379.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1379.cpp,51,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1379.cpp,85,[],"[""atoi_ret"", ""int"", ""<="", ""!""]","set([u'int n = 0 ;', u'n = atoi ( argv [ 1 ] )', u'n = atoi ( argv [ 2 ] )'])","set([25, 2, 21])","[[], ['fprintf', 'stderr', 'Test', 'number', 'out', 'of', 'range\\n']]",2004-01-17T17:46:56,Brad King,-18869091012198698599,190
2c2291bbe03aec2dd6637a5311204f09ff6c58ba,"ENH: add new feature to ctest so that it can cmake, build and run a test executable",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_680.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_680.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_680.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1668.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1668.cpp,1961,1962,1963,1964,"fprintf(stderr,""***Bad command\n"");","fprintf(stderr,""***Bad command %d\n"", res);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1380.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1380.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1380.cpp,203,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1380.cpp,203,"[""unkown"", ""string""]","[""this -> RunTest_ret"", ""unkown"", ""==""]","set([u'int res = 0 ;', u'res = this -> RunTest ( arguments , & output , & retVal )'])","set([148, 151])","[['command\\n'], ['command', '%d\\n', 'res']]",2004-01-07T16:24:22,Bill Hoffman,11179262571913103378,191
5dcbef7dfe7e365b1cb2f5881be07bc934df8df5,ENH: Using CreateFile with FILE_FLAG_DELETE_ON_CLOSE to automatically delete the Win9x forwarding executable even if the parent process crashes.,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_684.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_684.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_684.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1672.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1672.cpp,286,289,288,291,"sprintf(fwdName, ""cmw9xfwd_%u_%p.exe"", GetCurrentProcessId(), cp);","sprintf(fwdName, KWSYS_NAMESPACE_STRING ""pew9xfwd_%u_%p.exe"",
            GetCurrentProcessId(), cp);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1381.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1381.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1381.cpp,44,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1381.cpp,44,"[""char *"", ""constant"", ""GetCurrentProcessId_ret"", ""malloc_ret""]","[""member"", ""macro"", ""==""]",set([u'osv . dwOSVersionInfoSize = sizeof ( osv )']),set([28]),"[['cmw9xfwd_%u_%p'], ['KWSYS_NAMESPACE_STRING', 'pew9xfwd_%u_%p']]",2003-12-14T18:47:39,Brad King,4130524980451669382,192
ad8bc4b1a43dd017d361f189ec2b38d97e7de987,ENH: Merged changes from KWSys-MultiProcess-bp to KWSys-MultiProcess-b2t-1-mp to main tree.  This introduces support for process pipelines.,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_687.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_687.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_687.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1677.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1677.cpp,698,779,771,-1,"sprintf(cp->RealCommand, ""%s %p %p %d %s"", cp->Win9x,
            cp->Pipe[CMPE_PIPE_ERROR].Write, cp->Win9xKillEvent,
            cp->HideWindow, cp->Command);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1382.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1382.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1382.cpp,75,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1382.cpp,-1,"[""member"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""member""]",set([u'osv . dwOSVersionInfoSize = sizeof ( osv )']),set([28]),"[['sprintf', 'cp', 'RealCommand', '%s', '%p', '%p', '%d', '%s', 'cp', 'Win9x', 'cp', 'Pipe[CMPE_PIPE_ERROR]', 'Write', 'cp', 'Win9xKillEvent', 'cp', 'HideWindow', 'cp', 'Command'], []]",2003-12-03T14:20:05,Brad King,9183509005377872229,193
ad8bc4b1a43dd017d361f189ec2b38d97e7de987,ENH: Merged changes from KWSys-MultiProcess-bp to KWSys-MultiProcess-b2t-1-mp to main tree.  This introduces support for process pipelines.,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_687.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_687.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_687.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1679.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1679.cpp,1258,1565,1269,1579,"_snprintf(cp->ErrorMessage, CMPE_PIPE_BUFFER_SIZE,
                ""Process execution failed with error 0x%X.  ""
                ""FormatMessage failed with error 0x%X"",
                original, GetLastError());","_snprintf(cp->ErrorMessage, KWSYSPE_PIPE_BUFFER_SIZE,
                  ""Process execution failed with error 0x%X.  ""
                  ""FormatMessage failed with error 0x%X"",
                  original, GetLastError());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1384.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1384.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1384.cpp,16,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1384.cpp,19,[],"[""DWORD"", ""int"", ""<""]","set([u'DWORD length = FormatMessage ( FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , 0 , original , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , cp -> ErrorMessage , KWSYSPE_PIPE_BUFFER_SIZE , 0 ) ;'])",set([12]),"[['CMPE_PIPE_BUFFER_SIZE'], ['KWSYSPE_PIPE_BUFFER_SIZE']]",2003-12-03T14:20:05,Brad King,11091551823123224134,194
3bbe95397a1331d52d53f66ab4a12baf63c02860,"ENH: Fix verbose output, fix error message, and fix the exit code check",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_690.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_690.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_690.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1684.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1684.cpp,1772,1772,1774,1774,"fprintf(stderr,""SegFault"");","fprintf(stderr,""Illegal"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1385.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1385.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1385.cpp,159,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1385.cpp,159,"[""unkown"", ""string""]","[""int""]",set([u'int retVal = 0 ;']),set([116]),"[['SegFault'], ['Illegal']]",2003-08-14T17:34:13,Andy Cedilnik,4450896515154241272,195
3bbe95397a1331d52d53f66ab4a12baf63c02860,"ENH: Fix verbose output, fix error message, and fix the exit code check",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_690.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_690.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_690.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1684.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1684.cpp,1772,1772,1778,1778,"fprintf(stderr,""SegFault"");","fprintf(stderr,""Interrupt"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1386.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1386.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1386.cpp,163,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1386.cpp,163,"[""unkown"", ""string""]","[""int""]",set([u'int retVal = 0 ;']),set([116]),"[['SegFault'], ['Interrupt']]",2003-08-14T17:34:13,Andy Cedilnik,-1626528512335523801,196
3bbe95397a1331d52d53f66ab4a12baf63c02860,"ENH: Fix verbose output, fix error message, and fix the exit code check",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_690.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_690.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_690.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1684.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1684.cpp,1772,1772,1782,1782,"fprintf(stderr,""SegFault"");","fprintf(stderr,""Numerical"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1387.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1387.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1387.cpp,167,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1387.cpp,167,"[""unkown"", ""string""]","[""int""]",set([u'int retVal = 0 ;']),set([116]),"[['SegFault'], ['Numerical']]",2003-08-14T17:34:13,Andy Cedilnik,-8101011504946367590,197
cbeeaa71880c565226efeab605e0492eb1806e66,ENH: Better error reporting,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_691.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_691.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_691.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1685.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1685.cpp,1750,1750,1754,1797,"fprintf(stderr,""***Failed\n"");","fprintf(stderr,""***Failed\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1388.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1388.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1388.cpp,139,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1388.cpp,182,"[""unkown"", ""string""]","[""cmSystemTools :: RunSingleCommand_ret"", ""!"", ""int"", ""null"", ""!="", ""||""]","set([u'int res = 0 ;', u'res = this -> RunTest ( testCommand . c_str ( ) , & output , & retVal )'])","set([128, 125])","[[], []]",2003-08-13T22:17:11,Andy Cedilnik,0,550
cbeeaa71880c565226efeab605e0492eb1806e66,ENH: Better error reporting,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_691.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_691.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_691.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1685.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1685.cpp,1750,1750,1772,1754,"fprintf(stderr,""   Passed\n"");","fprintf(stderr,""   Passed\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1389.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1389.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1389.cpp,157,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1389.cpp,139,"[""unkown"", ""string""]","[""cmSystemTools :: RunSingleCommand_ret"", ""!"", ""int"", ""null"", ""!="", ""||"", ""!""]","set([u'int res = 0 ;', u'int retVal = 0 ;', u'res = this -> RunTest ( testCommand . c_str ( ) , & output , & retVal )'])","set([128, 116, 125])","[[], []]",2003-08-13T22:17:11,Andy Cedilnik,0,550
beda09a96b2139a5e22f7f78c4cdff7783669d99,ENH: Made error message consistent between win9x and non-win9x version of error reporting.,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_692.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_692.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_692.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1686.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1686.cpp,1261,1266,1286,1271,"_snprintf(cp->ErrorMessage, CMPE_PIPE_BUFFER_SIZE,
                ""Process execution failed with error 0x%X.  ""
                ""FormatMessage failed with error 0x%X."",
                original, GetLastError());","_snprintf(cp->ErrorMessage, CMPE_PIPE_BUFFER_SIZE,
                ""Process execution failed with error 0x%X.  ""
                ""FormatMessage failed with error 0x%X"",
                original, GetLastError());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1398.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1398.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1398.cpp,36,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1398.cpp,16,[],"[""DWORD"", ""null"", "">"", ""!""]","set([u'DWORD length = FormatMessage ( FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , 0 , original , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , cp -> ErrorMessage , CMPE_PIPE_BUFFER_SIZE , 0 ) ;'])",set([9]),"[[], []]",2003-08-13T22:08:07,Brad King,0,550
8d22e9f70a1653fc6620cc8b5389d1036ec27596,ENH: On windows and apple handle lowercase/upercase file name problem,[],Source/cmGlob.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_696.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_696.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_696.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1691.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1691.cpp,51,52,53,56,,"sprintf(buffer, ""%c"", tolower(ch));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1399.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1399.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1399.cpp,11,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1399.cpp,13,"[""char *"", ""string"", ""int""]","[""char"", ""int"", ""<="", ""int"", ""char"", ""<="", ""&&"", ""char"", ""int"", ""<="", ""int"", ""char"", ""<="", ""&&"", ""char"", ""int"", ""<="", ""int"", ""char"", ""<="", ""&&"", ""||"", ""||"", ""!"", ""!""]","set([u'char * buffer', u'int ch'])",set([0]),"[[], ['sprintf', 'buffer', '%c', 'tolower', 'ch']]",2003-07-23T14:26:37,Andy Cedilnik,-9254282053590195821,198
36880845b66fbe9062fb9e72b703a14dfb2c2036,ERR: Using strncpy instead of snprintf for portability.,[],Source/kwsys/ProcessUNIX.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_697.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_697.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_697.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1692.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1692.cpp,526,526,528,528,"snprintf(cp->ErrorMessage, KWSYSPE_PIPE_BUFFER_SIZE,
               ""%s"", strerror(errno));","strncpy(cp->ErrorMessage, strerror(errno), KWSYSPE_PIPE_BUFFER_SIZE);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1400.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1400.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1400.cpp,145,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1400.cpp,145,"[""member"", ""macro"", ""string"", ""strerror_ret""]","[""select_ret"", ""null"", ""<""]","set([u'cp -> ErrorMessageLength += n', u'cp -> ChildError = 1', u'cp -> PipesLeft = 0', u'( ( numReady = select ( max + 1 , & cp -> PipeSet , 0 , 0 , timeout ) ) < 0 ) && ( errno == EINTR )', u'kwsysProcess * cp'])","set([0, 51, 60, 131, 151])","[['snprintf', '%s'], ['strncpy']]",2003-07-09T20:18:14,Brad King,12334693964415848506,507
36880845b66fbe9062fb9e72b703a14dfb2c2036,ERR: Using strncpy instead of snprintf for portability.,[],Source/kwsys/ProcessUNIX.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_697.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_697.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_697.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1693.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1693.cpp,730,729,732,731,"snprintf(cp->ErrorMessage, KWSYSPE_PIPE_BUFFER_SIZE, ""%s"", strerror(errno));","strncpy(cp->ErrorMessage, strerror(errno), KWSYSPE_PIPE_BUFFER_SIZE);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1401.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1401.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1401.cpp,7,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1401.cpp,7,"[""member"", ""macro"", ""string"", ""strerror_ret""]","[""int""]","set([u'int error', u'kwsysProcess * cp'])",set([0]),"[['snprintf', '%s'], ['strncpy']]",2003-07-09T20:18:14,Brad King,12334693964415848506,507
36880845b66fbe9062fb9e72b703a14dfb2c2036,ERR: Using strncpy instead of snprintf for portability.,[],Source/kwsys/ProcessUNIX.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_697.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_697.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_697.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1694.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1694.cpp,887,886,889,888,"snprintf(buffer, KWSYSPE_PIPE_BUFFER_SIZE, ""%s"", strerror(errno));","strncpy(buffer, strerror(errno), KWSYSPE_PIPE_BUFFER_SIZE);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1402.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1402.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1402.cpp,4,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1402.cpp,4,"[""char *"", ""macro"", ""string"", ""strerror_ret""]",[],set([u'char buffer [ KWSYSPE_PIPE_BUFFER_SIZE ] ;']),set([3]),"[['snprintf', '%s'], ['strncpy']]",2003-07-09T20:18:14,Brad King,12334693964415848506,507
179abe7ffeb125ef4bfa7c852dfad03544d66194,ENH: Using GetTempPath instead of TEMP environment variable to get a location to write the Win9x forwarding executable.,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_699.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_699.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_699.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1697.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1697.cpp,274,268,276,270,"f(win9x, ""%s/%s"", tempDir, fwdName);","f(win9x, ""%s%s"", tempDir, fwdName);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1403.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1403.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1403.cpp,65,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1403.cpp,59,"[""malloc_ret"", ""string"", ""char *"", ""char *""]","[""malloc_ret"", ""!"", ""!""]","set([u'char fwdName [ _MAX_FNAME + 1 ] = """" ;', u'win9x = ( char * ) malloc ( tdlen + strlen ( fwdName ) + 2 )', u'char tempDir [ _MAX_PATH + 1 ] = """" ;'])","set([51, 34, 35])","[['%s/%s'], ['%s%s']]",2003-07-07T00:40:51,Brad King,1856501937624903194,199
ef76ed76f8a31f706ee675160e5c57c34b608516,ENH: Added DLL support.,[],Source/kwsys/EncodeExecutable.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_700.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_700.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_700.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1699.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1699.cpp,74,75,76,77,"fprintf(ofp, ""extern int %sEncodedWriteArray%s(const char* fname)\n"",
          argv[3], argv[4]);","fprintf(ofp, ""extern %s_EXPORT int %sEncodedWriteArray%s(const char* fname)\n"",
          argv[3], argv[3], argv[4]);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1405.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1405.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1405.cpp,58,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1405.cpp,59,"[""fopen_ret"", ""string"", ""member"", ""member""]","[""fopen_ret"", ""!"", ""!""]","set([u'char * argv [ ]', u'ofp = fopen ( argv [ 2 ] , ""w"" )'])","set([24, 0])","[[], ['%s_EXPORT', 'argv[3]']]",2003-06-30T14:30:38,Brad King,-2796473623943608750,200
ef5214c6c52d81df38923feefd147dccb18200be,ERR: Using GetCurrentProcessId instead of _getpid so we don't need to include the system process.h header.  Also creating pipe threads with 1K stacks to save memory.,[],Source/kwsys/ProcessWin32.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_702.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_702.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_702.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1701.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1701.cpp,234,233,236,235,"sprintf(fwdName, ""cmw9xfwd_%u_%p.exe"", _getpid(), cp);","sprintf(fwdName, ""cmw9xfwd_%u_%p.exe"", GetCurrentProcessId(), cp);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1406.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1406.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1406.cpp,38,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1406.cpp,38,"[""char *"", ""constant"", ""_getpid_ret"", ""malloc_ret""]","[""member"", ""macro"", ""==""]","set([u'char fwdName [ _MAX_FNAME + 1 ] = """" ;', u'osv . dwOSVersionInfoSize = sizeof ( osv )', u'cp = ( kwsysProcess * ) malloc ( sizeof ( kwsysProcess ) )'])","set([29, 14, 23])","[['_getpid'], ['GetCurrentProcessId']]",2003-06-12T19:58:30,Brad King,8488624408021641467,201
7f48313225537a7bcc92c0f1c73754bdc50a2ca4,"Remove nan and inf, use iostreams to set precision, fix file name, and remove bogus files",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_709.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_709.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_709.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1710.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1710.cpp,1428,1437,1439,-1,"sprintf(cmbuff, ""%.2f"", cmet);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1407.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1407.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1407.cpp,356,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1407.cpp,-1,"[""char *"", ""constant"", ""float""]","[""this -> OpenOutputFile_ret""]","set([u'char fwdName [ _MAX_FNAME + 1 ] = """" ;', u'osv . dwOSVersionInfoSize = sizeof ( osv )', u'cp = ( kwsysProcess * ) malloc ( sizeof ( kwsysProcess ) )'])","set([29, 14, 23])","[['sprintf', 'cmbuff', '%', '2f', 'cmet'], []]",2003-04-08T14:57:30,Andy Cedilnik,1375716223738274361,202
7f48313225537a7bcc92c0f1c73754bdc50a2ca4,"Remove nan and inf, use iostreams to set precision, fix file name, and remove bogus files",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_709.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_709.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_709.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1710.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1710.cpp,1428,1437,1440,1454,"sprintf(cpbuff, ""%.2f"", cper);","log << FIXNUM(cper) << ""</PercentCoverage>\n""
      << ""\t\t<CoverageMetric>"";;",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1408.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1408.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1408.cpp,357,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1408.cpp,368,"[""char *"", ""constant"", ""float""]","[""int"", ""null"", ""=="", ""!""]","set([u'cper = ( 100 * static_cast < float > ( cov . m_Tested ) / static_cast < float > ( cov . m_Tested + cov . m_UnTested ) )', u'ccount ++', u'float cper = 0 ;', u'char cfileoutputname [ 100 ] ;', u'int ccount = 0 ;', u'std :: ofstream cfileoutput ;', u'ccount = 0'])","set([355, 278, 296, 275, 276, 374, 351])","[['sprintf', 'cpbuff', '%', '2f'], ['log', 'FIXNUM', '/PercentCoverage', '\\n', '\\t\\t', 'CoverageMetric']]",2003-04-08T14:57:30,Andy Cedilnik,16822681940053195819,203
7f48313225537a7bcc92c0f1c73754bdc50a2ca4,"Remove nan and inf, use iostreams to set precision, fix file name, and remove bogus files",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_709.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_709.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_709.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1711.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1711.cpp,1468,1479,1471,-1,"sprintf(buffer, ""%.2f"", percent_coverage);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1409.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1409.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1409.cpp,388,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1409.cpp,-1,"[""char *"", ""constant"", ""float""]","[""coverageresults . begin_ret"", ""coverageresults . end_ret"", ""!="", ""!""]","set([u'cper = ( 100 * static_cast < float > ( cov . m_Tested ) / static_cast < float > ( cov . m_Tested + cov . m_UnTested ) )', u'ccount ++', u'float cper = 0 ;', u'char cfileoutputname [ 100 ] ;', u'int ccount = 0 ;', u'std :: ofstream cfileoutput ;', u'ccount = 0'])","set([355, 278, 296, 275, 276, 374, 351])","[['sprintf', 'buffer', '%', '2f', 'percent_coverage'], []]",2003-04-08T14:57:30,Andy Cedilnik,2272456308966444597,204
a956b8c68c37eaa924ce3cfd57db2b7ec410a2b1,Some cov improvements and better esc,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_710.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_710.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_710.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1712.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1712.cpp,168,168,172,172,"sprintf(buffer, ""&gt;&lt;"");","sprintf(buffer, ""&gt;%d&lt;"", (int)ch);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1410.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1410.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1410.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1410.cpp,10,"[""char *"", ""string""]","[""unsigned char"", ""int"", "">"", ""unsigned char"", ""int"", ""<"", ""||"", ""unsigned char"", ""int"", ""!="", ""&&""]","set([u'char buffer [ 10 ] ;', u'unsigned char ch = str [ pos ] ;'])","set([4, 7])","[['&lt'], ['%d&lt', 'int', 'ch']]",2003-04-07T22:21:04,Andy Cedilnik,4088918407754201592,205
a956b8c68c37eaa924ce3cfd57db2b7ec410a2b1,Some cov improvements and better esc,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_710.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_710.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_710.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1713.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1713.cpp,1420,1435,1429,1439,,"sprintf(cmbuff, ""%.2f"", cmet);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1411.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1411.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1411.cpp,346,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1411.cpp,356,[],"[""int"", ""null"", ""=="", ""!""]","set([u'ccount ++', u'char cfileoutputname [ 100 ] ;', u'cmet = ( static_cast < float > ( cov . m_Tested + 10 ) / static_cast < float > ( cov . m_Tested + cov . m_UnTested + 10 ) )', u'int ccount = 0 ;', u'std :: ofstream cfileoutput ;', u'char cmbuff [ 100 ] ;', u'float cmet = 0 ;', u'ccount = 0'])","set([289, 354, 366, 273, 274, 276, 346, 351])","[[], ['sprintf', 'cmbuff', '%', '2f', 'cmet']]",2003-04-07T22:21:04,Andy Cedilnik,-1375716223738274361,206
a956b8c68c37eaa924ce3cfd57db2b7ec410a2b1,Some cov improvements and better esc,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_710.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_710.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_710.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1713.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1713.cpp,1420,1435,1429,1440,,"sprintf(cpbuff, ""%.2f"", cper);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1412.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1412.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1412.cpp,346,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1412.cpp,357,[],"[""this -> OpenOutputFile_ret""]","set([u'cper = ( 100 * static_cast < float > ( cov . m_Tested ) / static_cast < float > ( cov . m_Tested + cov . m_UnTested ) )', u'ccount ++', u'float cper = 0 ;', u'char cfileoutputname [ 100 ] ;', u'int ccount = 0 ;', u'std :: ofstream cfileoutput ;', u'char cpbuff [ 100 ] ;', u'ccount = 0'])","set([289, 355, 366, 273, 274, 276, 345, 349])","[[], ['sprintf', 'cpbuff', '%', '2f', 'cper']]",2003-04-07T22:21:04,Andy Cedilnik,-6443552091910269557,207
a956b8c68c37eaa924ce3cfd57db2b7ec410a2b1,Some cov improvements and better esc,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_710.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_710.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_710.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1714.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1714.cpp,1448,1468,1451,1471,,"sprintf(buffer, ""%.2f"", percent_coverage);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1413.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1413.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1413.cpp,368,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1413.cpp,388,[],"[""coverageresults . begin_ret"", ""coverageresults . end_ret"", ""!="", ""!""]","set([u'char buffer [ 100 ] ;', u'float percent_coverage = 100 * static_cast < float > ( total_tested ) / static_cast < float > ( total_lines ) ;', u'cit ++', u'cmCTest :: tm_CoverageMap coverageresults ;', u'cit = coverageresults . begin ( ) ;', u'percent_coverage = 0'])","set([379, 279, 387, 174, 383])","[[], ['sprintf', 'buffer', '%', '2f', 'percent_coverage']]",2003-04-07T22:21:04,Andy Cedilnik,-2272456308966444597,208
394149a03420c2160b4150f9481f82be27ba69a9,"Fix cov. problems, ignore nonascii char. Propagate verbosity",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_711.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_711.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_711.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1715.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1715.cpp,167,167,172,172,"sprintf(buffer, ""&%x"", (int)ch);","sprintf(buffer, ""&gt;&lt;"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1414.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1414.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1414.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1414.cpp,10,"[""char *"", ""string"", ""char""]","[""char"", ""int"", "">""]","set([u'char buffer [ 10 ] ;', u'unsigned char ch = str [ pos ] ;'])","set([4, 7])","[['&%x', 'int', 'ch'], ['&gt', '&lt']]",2003-04-01T20:31:27,Andy Cedilnik,1646070966808154860,209
394149a03420c2160b4150f9481f82be27ba69a9,"Fix cov. problems, ignore nonascii char. Propagate verbosity",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_711.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_711.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_711.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1716.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1716.cpp,1307,1320,1309,-1,"sprintf(cfileoutputname, ""CoverageLog-%d.xml"", cfileoutputcount++);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1415.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1415.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1415.cpp,254,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1415.cpp,-1,"[""char *"", ""constant"", ""int""]","[""cmSystemTools :: SimpleGlob_ret"", ""!""]","set([u'char buffer [ 10 ] ;', u'unsigned char ch = str [ pos ] ;'])","set([4, 7])","[['sprintf', 'cfileoutputname', 'CoverageLog', '%d', 'xml', 'cfileoutputcount'], []]",2003-04-01T20:31:27,Andy Cedilnik,4939406204348862360,508
394149a03420c2160b4150f9481f82be27ba69a9,"Fix cov. problems, ignore nonascii char. Propagate verbosity",[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_711.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_711.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_711.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1717.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1717.cpp,1321,1328,1326,1338,"sprintf(cfileoutputname, ""CoverageLog-%d.xml"", cfileoutputcount++);","sprintf(cfileoutputname, ""CoverageLog-%d.xml"", cfileoutputcount++);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1416.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1416.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1416.cpp,271,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1416.cpp,282,"[""char *"", ""constant"", ""char *""]","[""int"", ""int"", ""==""]","set([u'sprintf ( cfileoutputname , ""CoverageLog-%d.xml"" , cfileoutputcount ++ )', u'ccount ++', u'char cfileoutputname [ 100 ] ;', u'int ccount = 0 ;', u'int cfileoutputcount = 0 ;', u'ccount = 0'])","set([262, 264, 265, 278, 346, 282])","[[], []]",2003-04-01T20:31:27,Andy Cedilnik,0,550
d9324c178bbfa5e2ef1dcabb6ace504fe3c94328,Fix proxy code and fix comments to be C comments,[],Source/CTest/Curl/Testing/curltest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_715.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_715.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_715.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1722.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1722.cpp,46,46,48,48,"sprintf(""%s:%s"", getenv(""HTTP_PROXY""), getenv(""HTTP_PROXY_PORT""));","sprintf(proxy, ""%s:%s"", getenv(""HTTP_PROXY""), getenv(""HTTP_PROXY_PORT""));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1419.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1419.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1419.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1419.cpp,14,"[""string"", ""getenv_ret"", ""getenv_ret""]","[""getenv_ret""]",set([u'char proxy [ 1024 ] ;']),set([6]),"[[], ['proxy']]",2003-01-17T17:27:09,Bill Hoffman,-1221833637559758123,509
d9324c178bbfa5e2ef1dcabb6ace504fe3c94328,Fix proxy code and fix comments to be C comments,[],Source/CTest/Curl/Testing/curltest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_715.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_715.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_715.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1722.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1722.cpp,46,46,52,52,"sprintf(""%s"", getenv(""HTTP_PROXY""));","sprintf(proxy, ""%s"", getenv(""HTTP_PROXY""));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1420.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1420.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1420.cpp,18,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1420.cpp,18,"[""string"", ""getenv_ret""]","[""getenv_ret"", ""!""]",set([u'char proxy [ 1024 ] ;']),set([6]),"[[], ['proxy']]",2003-01-17T17:27:09,Bill Hoffman,-1221833637559758123,509
55e1cb875d87c50956f242c375848cbb3a1fc17a,Add proxy support,[],Source/CTest/Curl/Testing/curltest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_716.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_716.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_716.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1723.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1723.cpp,36,37,39,48,,"sprintf(""%s:%s"", getenv(""HTTP_PROXY""), getenv(""HTTP_PROXY_PORT""));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1421.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1421.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1421.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1421.cpp,14,[],[],set([]),set([]),"[[], ['sprintf', '%s', '%s', 'getenv', 'HTTP_PROXY', 'getenv', 'HTTP_PROXY_PORT']]",2003-01-17T15:15:03,Andy Cedilnik,-1455275106753870172,210
55e1cb875d87c50956f242c375848cbb3a1fc17a,Add proxy support,[],Source/CTest/Curl/Testing/curltest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_716.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_716.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_716.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1723.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1723.cpp,36,37,39,52,,"sprintf(""%s"", getenv(""HTTP_PROXY""));",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1422.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1422.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1422.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1422.cpp,18,[],[],set([]),set([]),"[[], ['sprintf', '%s', 'getenv', 'HTTP_PROXY']]",2003-01-17T15:15:03,Andy Cedilnik,-4449426415499097491,211
55e1cb875d87c50956f242c375848cbb3a1fc17a,Add proxy support,[],Source/CTest/Curl/Testing/curltest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_716.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_716.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_716.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1724.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1724.cpp,51,102,60,-1,"printf(""Error fetching: http://www.cmake.org/page2.html\n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1423.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1423.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1423.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1423.cpp,-1,"[""constant""]","[""curl_easy_perform_ret"", ""null"", ""!=""]",set([]),set([]),"[['printf', 'Error', 'fetching', 'http', '//www', 'cmake', 'org/page2', 'html\\n'], []]",2003-01-17T15:15:03,Andy Cedilnik,-25239979701788727650,212
587b06788071e818823aabb5e31ef283f9278506,New Curl version 7.10.3,[],Source/CTest/Curl/security.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_722.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1734.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1734.cpp,279,279,286,-1,"vfprintf(f, fmt, ap);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1424.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1424.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1424.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1424.cpp,-1,"[""FILE *"", ""const char *"", ""va_list""]","[""member"", ""unkown"", ""==""]",set([]),set([]),"[['vfprintf', 'f', 'fmt', 'ap'], []]",2003-01-14T14:12:37,Andy Cedilnik,-4092437658001255287,510
587b06788071e818823aabb5e31ef283f9278506,New Curl version 7.10.3,[],Source/CTest/Curl/security.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_722.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1734.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1734.cpp,279,279,288,-1,"buf = aprintf(fmt, ap);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1425.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1425.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1425.cpp,8,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1425.cpp,-1,"[""const char *"", ""va_list""]","[""member"", ""unkown"", ""=="", ""!""]",set([]),set([]),"[['buf', 'aprintf', 'fmt', 'ap'], []]",2003-01-14T14:12:37,Andy Cedilnik,10549757287348532294,511
587b06788071e818823aabb5e31ef283f9278506,New Curl version 7.10.3,[],Source/CTest/Curl/security.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_722.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1735.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1735.cpp,346,321,357,-1,"vfprintf(f, fmt, ap);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1426.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1426.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1426.cpp,8,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1426.cpp,-1,"[""FILE *"", ""const char *"", ""va_list""]","[""member""]",set([]),set([]),"[['vfprintf', 'f', 'fmt', 'ap'], []]",2003-01-14T14:12:37,Andy Cedilnik,-4092437658001255287,510
587b06788071e818823aabb5e31ef283f9278506,New Curl version 7.10.3,[],Source/CTest/Curl/security.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_722.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1735.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1735.cpp,346,321,359,-1,"buf = aprintf(fmt, ap);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1427.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1427.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1427.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1427.cpp,-1,"[""const char *"", ""va_list""]","[""member"", ""!""]",set([]),set([]),"[['buf', 'aprintf', 'fmt', 'ap'], []]",2003-01-14T14:12:37,Andy Cedilnik,10549757287348532294,511
587b06788071e818823aabb5e31ef283f9278506,New Curl version 7.10.3,[],Source/CTest/Curl/security.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_722.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1735.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1735.cpp,346,321,373,-1,"ret = fprintf(f, ""MIC %s"", buf);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1428.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1428.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1428.cpp,24,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1428.cpp,-1,"[""FILE *"", ""string"", ""aprintf_ret""]","[""member"", ""unkown"", ""==""]",set([]),set([]),"[['ret', 'fprintf', 'f', 'MIC', '%s', 'buf'], []]",2003-01-14T14:12:37,Andy Cedilnik,-2271659527443874573,213
587b06788071e818823aabb5e31ef283f9278506,New Curl version 7.10.3,[],Source/CTest/Curl/security.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_722.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1735.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1735.cpp,346,321,375,-1,"ret = fprintf(f, ""ENC %s"", buf);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1429.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1429.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1429.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1429.cpp,-1,"[""FILE *"", ""string"", ""aprintf_ret""]","[""member"", ""unkown"", ""==""]",set([]),set([]),"[['ret', 'fprintf', 'f', 'ENC', '%s', 'buf'], []]",2003-01-14T14:12:37,Andy Cedilnik,7166640446439814906,214
587b06788071e818823aabb5e31ef283f9278506,New Curl version 7.10.3,[],Source/CTest/Curl/security.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_722.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1735.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1735.cpp,346,321,377,-1,"ret = fprintf(f, ""CONF %s"", buf);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1430.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1430.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1430.cpp,28,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1430.cpp,-1,"[""FILE *"", ""string"", ""aprintf_ret""]","[""member"", ""unkown"", ""==""]",set([]),set([]),"[['ret', 'fprintf', 'f', 'CONF', '%s', 'buf'], []]",2003-01-14T14:12:37,Andy Cedilnik,-1357882172525464825,215
587b06788071e818823aabb5e31ef283f9278506,New Curl version 7.10.3,[],Source/CTest/Curl/security.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_722.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_722.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1735.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1735.cpp,346,321,389,-1,"ret = Curl_sec_vfprintf(conn, f, fmt, ap);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1431.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1431.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1431.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1431.cpp,-1,"[""struct connectdata *"", ""FILE *"", ""const char *"", ""va_list""]",[],set([]),set([]),"[['ret', 'Curl_sec_vfprintf', 'conn', 'f', 'fmt', 'ap'], []]",2003-01-14T14:12:37,Andy Cedilnik,-6222830989532963117,216
6beecfa3de806bf54de02d0a20c76c851e07a188,"Better page, so the resulting dart page will not refresh",[],Source/CTest/Curl/Testing/curltest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_724.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_724.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_724.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1737.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1737.cpp,16,16,18,18,"printf(""Error fetching: http://www.cmake.org/\n"");","printf(""Error fetching: ftp://public.kitware.com/pub/cmake/cygwin/setup.hint\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1432.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1432.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1432.cpp,16,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1432.cpp,16,"[""constant""]","[""curl_easy_perform_ret"", ""null"", ""!=""]",set([u'res = curl_easy_perform ( curl )']),set([13]),"[['http', '//www', 'cmake', 'org/\\n'], ['ftp', '//public', 'kitware', 'com/pub/cmake/cygwin/setup', 'hint\\n']]",2003-01-11T20:42:43,Andy Cedilnik,-28125861098822852149,217
6beecfa3de806bf54de02d0a20c76c851e07a188,"Better page, so the resulting dart page will not refresh",[],Source/CTest/Curl/Testing/curltest.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_724.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_724.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_724.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1738.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1738.cpp,43,43,49,49,"printf(""Error fetching: http://www.cmake.org/\n"");","printf(""Error fetching: http://www.cmake.org/HTML/Sponsors.html\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1433.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1433.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1433.cpp,16,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1433.cpp,16,"[""constant""]","[""curl_easy_perform_ret"", ""null"", ""!=""]",set([u'res = curl_easy_perform ( curl )']),set([13]),"[['org/\\n'], ['org/HTML/Sponsors', 'html\\n']]",2003-01-11T20:42:43,Andy Cedilnik,-1900202129477690945,218
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_725.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_725.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_725.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1739.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1739.cpp,1470,1477,1562,-1,"sprintf(buf, ""Content-Length: %d\r\n"", filesize);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1434.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1434.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1434.cpp,61,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1434.cpp,-1,"[""char *"", ""string"", ""ssize_t""]","[""macro"", ""ftp_getsize_ret"", ""==""]",set([u'res = curl_easy_perform ( curl )']),set([13]),"[['sprintf', 'buf', 'Content', 'Length', '%d\\r\\n', 'filesize'], []]",2003-01-10T04:26:37,Andy Cedilnik,16862172944675227719,219
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/ftp.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_725.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_725.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_725.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1741.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1741.cpp,2081,2117,2085,-1,"fprintf(conn->data->set.err, ""> %s\n"", s);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1436.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1436.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1436.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1436.cpp,-1,"[""member"", ""string"", ""char *""]","[""member""]",set([u'res = curl_easy_perform ( curl )']),set([13]),"[['fprintf', 'conn', 'data', 'set', 'err', '%s\\n', 's'], []]",2003-01-10T04:26:37,Andy Cedilnik,5824778309211625317,220
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/hostip.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_727.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_727.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_727.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1744.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1744.cpp,283,349,298,378,"snprintf(sbuf, sizeof(sbuf), ""%d"", port);","snprintf(sbuf, sizeof(sbuf), ""%d"", port);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1438.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1438.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1438.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1438.cpp,27,"[""char *"", ""unkown"", ""string"", ""int""]",[],"set([u'char sbuf [ NI_MAXSERV ] ;', u'int port'])","set([2, 7])","[[], []]",2003-01-10T04:26:37,Andy Cedilnik,0,550
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_728.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_728.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_728.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1746.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1746.cpp,579,587,585,596,"conn->allocptr.host = aprintf(""Host: %s\r\n"", host);","conn->allocptr.host = aprintf(""Host: %s%s%s\r\n"",
                                    conn->bits.ipv6_ip?""["":"""",
                                    host,
                                    conn->bits.ipv6_ip?""]"":"""");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1439.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1439.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1439.cpp,101,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1439.cpp,118,"[""string"", ""char *""]","[""bool"", ""member"", ""macro"", ""=="", ""&&"", ""bool"", ""member"", ""macro"", ""=="", ""&&"", ""||""]","set([u'conn -> allocptr . uagent = NULL', u'conn -> allocptr . userpwd = aprintf ( ""Authorization: Basic %s\\015\\012"" , authorization )', u'char * host = conn -> name ;', u'struct connectdata * conn', u'conn -> bits . close = FALSE', u'conn -> allocptr . cookie = aprintf ( ""Cookie: %s\\015\\012"" , data -> set . cookie )', u'conn -> allocptr . ref = aprintf ( ""Referer: %s\\015\\012"" , data -> change . referer )'])","set([0, 68, 37, 8, 54, 24, 63])","[['%s\\r\\n'], ['%s%s%s\\r\\n', 'conn', 'bits', 'ipv6_ip', '[', 'conn', 'bits', 'ipv6_ip', ']']]",2003-01-10T04:26:37,Andy Cedilnik,13681919042604359306,221
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/http.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_728.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_728.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_728.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1746.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1746.cpp,579,587,587,601,"conn->allocptr.host = aprintf(""Host: %s:%d\r\n"", host,
                                    conn->remote_port);","conn->allocptr.host = aprintf(""Host: %s%s%s:%d\r\n"",
                                    conn->bits.ipv6_ip?""["":"""",
                                    host,
                                    conn->bits.ipv6_ip?""]"":"""",
                                    conn->remote_port);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1440.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1440.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1440.cpp,103,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1440.cpp,123,"[""string"", ""char *"", ""member""]","[""bool"", ""member"", ""macro"", ""=="", ""&&"", ""bool"", ""member"", ""macro"", ""=="", ""&&"", ""||"", ""!""]","set([u'conn -> allocptr . uagent = NULL', u'conn -> allocptr . userpwd = aprintf ( ""Authorization: Basic %s\\015\\012"" , authorization )', u'char * host = conn -> name ;', u'struct connectdata * conn', u'conn -> bits . close = FALSE', u'conn -> allocptr . cookie = aprintf ( ""Cookie: %s\\015\\012"" , data -> set . cookie )', u'conn -> allocptr . ref = aprintf ( ""Referer: %s\\015\\012"" , data -> change . referer )'])","set([0, 68, 37, 8, 54, 24, 63])","[['%s'], ['%s%s%s', 'bits', 'ipv6_ip', '[', 'conn', 'bits', 'ipv6_ip', ']', 'conn']]",2003-01-10T04:26:37,Andy Cedilnik,32680830555320261266,222
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/netrc.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_730.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_730.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_730.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1750.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1750.cpp,116,119,119,130,,"printf(""NETRC: overridden .netrc file: %s\n"", home);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1441.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1441.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1441.cpp,46,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1441.cpp,57,[],"[""strlen_ret"", ""strlen_ret"", "">"", ""!""]","set([u'char * home = NULL ;', u'char * override = curl_getenv ( ""CURL_DEBUG_NETRC"" ) ;', u'home = curl_getenv ( ""HOME"" )'])","set([34, 10, 54])","[[], ['printf', 'NETRC', 'overridden', 'netrc', 'file', '%s\\n', 'home']]",2003-01-10T04:26:37,Andy Cedilnik,19492545784331903896,223
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/sendf.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_731.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_731.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_731.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1752.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1752.cpp,84,84,139,138,"vfprintf(data->set.err, fmt, ap);","vsnprintf(print_buffer, 1024, fmt, ap);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1442.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1442.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1442.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1442.cpp,6,"[""member"", ""const char *"", ""va_list""]","[""member""]","set([u'struct SessionHandle * data', u'const char * fmt', u'va_list ap ;', u'char print_buffer [ 1024 + 1 ] ;'])","set([0, 2, 4])","[['vfprintf', 'data', 'set', 'err'], ['vsnprintf', 'print_buffer', '1024']]",2003-01-10T04:26:37,Andy Cedilnik,-378969714679764446,224
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/sendf.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_731.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_731.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_731.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1754.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1754.cpp,163,167,174,192,"fprintf(data->set.err, ""> %s"", s);","Curl_debug(data, CURLINFO_DATA_OUT, sptr, bytes_written);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1443.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1443.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1443.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1443.cpp,28,"[""member"", ""string"", ""vaprintf_ret""]","[""member""]","set([u'sptr = s', u'struct SessionHandle * data = conn -> data ;', u'bytes_written = 0', u'sptr += bytes_written'])","set([16, 18, 3, 34])","[['fprintf', 'set', 'err', '%s', 's'], ['Curl_debug', 'CURLINFO_DATA_OUT', 'sptr', 'bytes_written']]",2003-01-10T04:26:37,Andy Cedilnik,-7901835677735177041,225
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/transfer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_732.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_732.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_732.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1755.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1755.cpp,748,899,753,919,,"int hexlen = snprintf(hexbuffer, sizeof(hexbuffer),
                                  ""%x\r\n"", nread);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1444.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1444.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1444.cpp,583,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1444.cpp,743,"[""member"", ""int"", ""macro"", ""member""]","[""null"", ""member"", ""==""]","set([u'conn -> bits . close = TRUE', u'conn -> bits . chunk = TRUE', u'struct connectdata * conn', u'conn -> bits . close = FALSE', u'nread = data -> set . fread ( conn -> upload_fromhere , 1 , buffersize , data -> set . in )', u'conn -> upload_fromhere += 10', u'conn -> upload_fromhere = k -> uploadbuf', u'char hexbuffer [ 9 ] ;'])","set([0, 737, 386, 742, 727, 418, 397, 734, 407, 318])","[[], ['int', 'hexlen', 'snprintf', 'hexbuffer', 'sizeof', 'hexbuffer', '%x\\r\\n', 'nread']]",2003-01-10T04:26:37,Andy Cedilnik,12086845712145188946,226
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/transfer.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_732.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_732.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_732.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1757.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1757.cpp,1136,1607,1227,-1,"sprintf(newest, ""%s%s%s"", url_clone, ('/' == newurl[0])?"""":""/"",
                  newurl);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1446.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1446.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1446.cpp,150,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1446.cpp,-1,"[""malloc_ret"", ""string"", ""char *"", ""string"", ""strdup_ret""]","[""malloc_ret"", ""!"", ""!""]","set([u'conn -> bits . close = TRUE', u'conn -> bits . chunk = TRUE', u'struct connectdata * conn', u'conn -> bits . close = FALSE', u'nread = data -> set . fread ( conn -> upload_fromhere , 1 , buffersize , data -> set . in )', u'conn -> upload_fromhere += 10', u'conn -> upload_fromhere = k -> uploadbuf', u'char hexbuffer [ 9 ] ;'])","set([0, 737, 386, 742, 727, 418, 397, 734, 407, 318])","[['sprintf', 'newest', '%s%s%s', 'url_clone', '/', 'newurl[0]', '/', 'newurl'], []]",2003-01-10T04:26:37,Andy Cedilnik,99925759660914322,227
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/url.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_733.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_733.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_733.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1759.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1759.cpp,2194,2766,2236,2770,"snprintf(hbuf, sizeof(hbuf), ""?"");",free(conn->allocptr.accept_encoding);,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1448.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1448.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1448.cpp,990,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1448.cpp,1081,"[""char *"", ""unkown"", ""string""]","[""getnameinfo_ret""]","set([u'conn -> port = conn -> remote_port', u'conn -> curl_done = Curl_http_done', u'conn -> remote_port = ( unsigned short ) port', u'conn -> allocptr . uagent = aprintf ( ""User-Agent: %s\\015\\012"" , data -> set . useragent )', u'conn = conn_temp', u'conn -> proxyhost = strdup ( proxyptr )', u'conn -> curl_done = NULL', u'conn -> bits . user_passwd = 1', u'conn -> ppath ++', u'conn -> bits . rangestringalloc = TRUE', u'conn = ( struct connectdata * ) malloc ( sizeof ( struct connectdata ) )', u'conn -> hostname ++', u'conn -> curl_done = Curl_telnet_done', u'conn -> name = conn -> hostname = ++ ptr', u'conn -> allocptr . proxyuserpwd = aprintf ( ""Proxy-authorization: Basic %s\\015\\012"" , authorization )', u'conn -> curl_connect = Curl_http_connect', u'conn -> bits . use_range = TRUE', u'conn -> resume_from = data -> set . set_resume_from'])","set([416, 897, 1059, 580, 37, 711, 456, 906, 1074, 434, 912, 554, 754, 661, 982, 567, 825, 634, 765, 868, 511])","[['snprintf', 'hbuf', 'sizeof', 'hbuf'], ['free', 'conn', 'allocptr', 'accept_encoding']]",2003-01-10T04:26:37,Andy Cedilnik,-1879264831410097904,228
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/url.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_733.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_733.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_733.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1759.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1759.cpp,2194,2766,2196,2772,,"(""Accept-Encoding: %s\015\012"";",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1449.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1449.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1449.cpp,950,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1449.cpp,1083,[],"[""macro"", ""!""]","set([u'conn -> port = conn -> remote_port', u'conn -> curl_done = Curl_http_done', u'conn -> remote_port = ( unsigned short ) port', u'conn -> allocptr . uagent = aprintf ( ""User-Agent: %s\\015\\012"" , data -> set . useragent )', u'conn = conn_temp', u'conn -> proxyhost = strdup ( proxyptr )', u'conn -> curl_done = NULL', u'conn -> bits . user_passwd = 1', u'conn -> ppath ++', u'conn -> bits . rangestringalloc = TRUE', u'conn = ( struct connectdata * ) malloc ( sizeof ( struct connectdata ) )', u'conn -> hostname ++', u'conn -> curl_done = Curl_telnet_done', u'conn -> name = conn -> hostname = ++ ptr', u'conn -> allocptr . proxyuserpwd = aprintf ( ""Proxy-authorization: Basic %s\\015\\012"" , authorization )', u'conn -> curl_connect = Curl_http_connect', u'conn -> bits . use_range = TRUE', u'conn -> resume_from = data -> set . set_resume_from'])","set([416, 897, 1059, 580, 37, 711, 456, 906, 1074, 434, 912, 554, 754, 661, 982, 567, 825, 634, 765, 868, 511])","[[], ['Accept', 'Encoding', '%s\\015\\012']]",2003-01-10T04:26:37,Andy Cedilnik,-21499382058913435038,229
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/version.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_734.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_734.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_734.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1760.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1760.cpp,56,52,58,54,"f(ptr, "" (OpenSSL %lx.%lx.%lx%s)"",
            (ssleay_value>>28)&0xf,
            (ssleay_value>>20)&0xff,
            (ssleay_value>>12)&0xff,
            sub);","f(ptr, "" OpenSSL/%lx.%lx.%lx%s"",
            (ssleay_value>>28)&0xf,
            (ssleay_value>>20)&0xff,
            (ssleay_value>>12)&0xff,
            sub);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1450.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1450.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1450.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1450.cpp,22,"[""strchr_ret"", ""constant"", ""bool"", ""bool"", ""bool"", ""char *""]",[],"set([u'char * ptr', u'char sub [ 2 ] ;', u'ssleay_value = SSLEAY_VERSION_NUMBER', u'ssleay_value = SSLeay ( )'])","set([8, 0, 11, 5])","[['OpenSSL', '%lx'], ['OpenSSL/%lx']]",2003-01-10T04:26:37,Andy Cedilnik,14334596023787805274,230
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/version.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_734.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_734.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_734.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1761.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1761.cpp,79,76,95,98,"sprintf(ptr, ""krb4 "");","getssl_version(ptr, &num);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1453.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1453.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1453.cpp,64,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1453.cpp,9,"[""int"", ""string""]",[],"set([u""ptr = strchr ( version , '\\0' )""])",set([6]),"[['sprintf', 'krb4'], ['getssl_version', '&num']]",2003-01-10T04:26:37,Andy Cedilnik,7492148535572229633,231
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/version.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_734.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_734.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_734.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1761.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1761.cpp,79,76,99,109,"sprintf(ptr, ""ipv6 "");","sprintf(ptr, "" ipv6"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1454.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1454.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1454.cpp,68,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1454.cpp,20,"[""strlen_ret"", ""string""]",[],set([u'ptr += strlen ( ptr )']),set([17]),"[[], []]",2003-01-10T04:26:37,Andy Cedilnik,0,550
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/version.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_734.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_734.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_734.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1761.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1761.cpp,79,76,102,105,"sprintf(ptr, ""enabled)"");","sprintf(ptr, "" krb4"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1455.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1455.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1455.cpp,71,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1455.cpp,16,"[""strlen_ret"", ""string""]",[],"set([u""ptr = strchr ( version , '\\0' )""])",set([10]),"[['enabled'], ['krb4']]",2003-01-10T04:26:37,Andy Cedilnik,-1803769368265388523,232
3ad91bf9d39c22dc6941068e6fdc1453988f0b07,New version of libcurl,[],Source/CTest/Curl/version.c,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_734.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_734.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_734.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1761.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1761.cpp,79,76,107,113,"sprintf(ptr, "" (zlib %s)"", zlibVersion());","sprintf(ptr, "" zlib/%s"", zlibVersion());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1456.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1456.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1456.cpp,76,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1456.cpp,24,"[""strlen_ret"", ""string"", ""zlibVersion_ret""]",[],set([u'ptr += strlen ( ptr )']),set([21]),"[['zlib', '%s'], ['zlib/%s']]",2003-01-10T04:26:37,Andy Cedilnik,-10271198354169825356,233
8aba833b7714c746436282a0db9f5a5478c75271,Work on submitting,[],Source/cmCTest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_735.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_735.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_735.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1762.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1762.cpp,273,277,273,277,"sprintf(datestring, ""%04d%02d%02d-%02d%02d"",
              lctime->tm_year + 1900,
              lctime->tm_mon,
              lctime->tm_mday,
              lctime->tm_hour,
              lctime->tm_min);","sprintf(datestring, ""%04d%02d%02d-%02d%02d"",
              lctime->tm_year + 1900,
              lctime->tm_mon+1,
              lctime->tm_mday,
              lctime->tm_hour,
              lctime->tm_min);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1457.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1457.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1457.cpp,91,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1457.cpp,91,"[""char *"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""tag . size_ret"", ""null"", ""==""]","set([u'struct tm * lctime = gmtime ( & tctime ) ;', u'std :: string tag ;', u'char datestring [ 100 ] ;', u'tag = """"'])","set([84, 90, 68, 66])","[[], ['1']]",2003-01-07T04:13:15,Andy Cedilnik,6272018864,234
190424b29ca2367bf2893736b9f929efbe35b127,ENH: Tcl packages now Tcl_PkgProvide their own name and version.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_736.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_736.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_736.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1763.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1763.cpp,228,228,231,230,,"fprintf(fout,""#include \""vtkVersion.h\""\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1458.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1458.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1458.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1458.cpp,21,[],"[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[[], ['fprintf', 'fout', 'include', '\\', 'vtkVersion', 'h\\', '\\n']]",2002-12-18T21:58:03,Brad King,1020030107681875213,235
190424b29ca2367bf2893736b9f929efbe35b127,ENH: Tcl packages now Tcl_PkgProvide their own name and version.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_736.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_736.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_736.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1763.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1763.cpp,228,228,231,231,,"fprintf(fout,""#define VTK_TCL_TO_STRING(x) VTK_TCL_TO_STRING0(x)\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1459.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1459.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1459.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1459.cpp,22,[],"[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[[], ['fprintf', 'fout', 'define', 'VTK_TCL_TO_STRING', 'x', 'VTK_TCL_TO_STRING0', 'x', '\\n']]",2002-12-18T21:58:03,Brad King,-924951878846323516,236
190424b29ca2367bf2893736b9f929efbe35b127,ENH: Tcl packages now Tcl_PkgProvide their own name and version.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_736.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_736.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_736.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1763.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1763.cpp,228,228,231,232,,"fprintf(fout,""#define VTK_TCL_TO_STRING0(x) #x\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1460.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1460.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1460.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1460.cpp,23,[],"[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[[], ['fprintf', 'fout', 'define', 'VTK_TCL_TO_STRING0', 'x', 'x\\n']]",2002-12-18T21:58:03,Brad King,-3915812972885453900,237
190424b29ca2367bf2893736b9f929efbe35b127,ENH: Tcl packages now Tcl_PkgProvide their own name and version.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_736.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_736.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_736.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1764.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1764.cpp,333,336,335,338,"f(fout,""  return TCL_OK;\n}\n"");","f(fout,""  Tcl_PkgProvide(interp, \""%s\"", ""
               ""VTK_TCL_TO_STRING(VTK_MAJOR_VERSION) \"".\"" ""
               ""VTK_TCL_TO_STRING(VTK_MINOR_VERSION));\n"",
          m_LibraryName.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1461.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1461.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1461.cpp,126,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1461.cpp,129,"[""FILE *"", ""string""]","[""FILE *"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[['return', 'TCL_OK', '\\n'], ['Tcl_PkgProvide', 'interp', '\\', '%s\\', 'VTK_TCL_TO_STRING', 'VTK_MAJOR_VERSION', '\\', '\\', 'VTK_TCL_TO_STRING', 'VTK_MINOR_VERSION', 'm_LibraryName', 'c_str']]",2002-12-18T21:58:03,Brad King,-22980792077229744794,238
190424b29ca2367bf2893736b9f929efbe35b127,ENH: Tcl packages now Tcl_PkgProvide their own name and version.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_736.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_736.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_736.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1764.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1764.cpp,333,336,336,342,,"fprintf(fout,""  return TCL_OK;\n}\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1462.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1462.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1462.cpp,127,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1462.cpp,133,"[""FILE *""]","[""FILE *"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[[], ['fprintf', 'fout', 'return', 'TCL_OK', '\\n', '\\n']]",2002-12-18T21:58:03,Brad King,7539935469131466186,239
e0cec1e650138f797467967e8a4c8ae66dc61e37,Add support for only showing what will be done. This way you can for example get a list of all tests: ctest -N or list of all tests that match regex: ctest -N -R regex,[],Source/ctest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_737.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_737.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_737.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1765.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1765.cpp,1163,1193,1165,1201,"fprintf(stderr,""Testing %-30s "",args[0].Value.c_str());","fprintf(stderr,""Testing %-30s "",args[0].Value.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1463.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1463.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1463.cpp,78,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1463.cpp,84,"[""unkown"", ""string"", ""args [ 0 ] . Value . c_str_ret""]","[""member"", ""member"", ""ereg . find_ret"", ""&&"", ""&&"", ""!""]",set([u'const std :: vector < cmListFileArgument > & args = lff . m_Arguments ;']),set([31]),"[[], []]",2002-12-15T18:45:43,Andy Cedilnik,0,550
e0cec1e650138f797467967e8a4c8ae66dc61e37,Add support for only showing what will be done. This way you can for example get a list of all tests: ctest -N or list of all tests that match regex: ctest -N -R regex,[],Source/ctest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_737.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_737.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_737.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1767.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1767.cpp,1163,1193,1165,1201,"fprintf(stderr,""Testing %-30s "",args[0].Value.c_str());","fprintf(stderr,""Testing %-30s "",args[0].Value.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1464.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1464.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1464.cpp,78,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1464.cpp,84,"[""unkown"", ""string"", ""args [ 0 ] . Value . c_str_ret""]","[""member"", ""member"", ""ereg . find_ret"", ""&&"", ""&&"", ""!""]",set([u'const std :: vector < cmListFileArgument > & args = lff . m_Arguments ;']),set([31]),"[[], []]",2002-12-15T18:45:43,Andy Cedilnik,0,550
4888c088ae0ca829862e8b2f9568abca12dc34d1,"ENH: Moved ExpandListVariables out of individual commands.  Argument evaluation rules are now very consistent.  Double quotes can always be used to create exactly one argument, regardless of contents inside.",[],Source/ctest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_738.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_738.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_738.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1769.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1769.cpp,1159,1162,1162,1165,"fprintf(stderr,""Testing %-30s "",args[0].c_str());","fprintf(stderr,""Testing %-30s "",args[0].Value.c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1465.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1465.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1465.cpp,76,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1465.cpp,78,"[""unkown"", ""string"", ""args [ 0 ] . c_str_ret""]","[""member"", ""member"", ""ereg . find_ret"", ""&&"", ""&&"", ""!""]","set([u'const std :: vector < cmListFileArgument > & args = lff . m_Arguments ;', u'cmRegularExpression ereg ( this -> m_ExcludeRegExp . c_str ( ) ) ;'])","set([21, 31])","[[], ['Value']]",2002-12-11T23:13:33,Brad King,-7965216691803464338,240
c1132e4b08da658a1eab86e212a9b205bce63337,ENH: move version to title bar,[],Source/MFCDialog/CMakeSetupDialog.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_741.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_741.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_741.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1774.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1774.cpp,288,287,290,289,"sprintf(tmp,""Version %d.%d - %s"", cmake::GetMajorVersion(),
          cmake::GetMinorVersion(), cmake::GetReleaseVersion());","sprintf(tmp,""CMake %d.%d - %s"", cmake::GetMajorVersion(),
          cmake::GetMinorVersion(), cmake::GetReleaseVersion());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1466.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1466.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1466.cpp,67,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1466.cpp,67,"[""char *"", ""constant"", ""cmake :: GetMajorVersion_ret"", ""cmake :: GetMinorVersion_ret"", ""cmake :: GetReleaseVersion_ret""]",[],set([u'char tmp [ 1024 ] ;']),set([66]),"[['Version'], ['CMake']]",2002-12-06T21:03:30,Bill Hoffman,3757722637320513265,241
145390fcc9f6d59435d03b6217e1adc4f8fc93d0,fix flag setting,[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_742.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_742.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1775.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1775.cpp,153,153,155,155,"f(fout, ""SET(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} ${COMPILE_DEFINITIONS})\n"");","f(fout, ""SET(CMAKE_C_FLAGS \""${CMAKE_C_FLAGS} ${COMPILE_DEFINITIONS}\""\"")\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1467.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1467.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1467.cpp,135,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1467.cpp,135,"[""FILE *"", ""string""]","[""cmSystemTools :: FileFormat"", ""unkown"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmSystemTools :: FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([108, 117])","[[], ['\\', '\\', '\\']]",2002-11-21T21:03:07,Bill Hoffman,35328106263,242
145390fcc9f6d59435d03b6217e1adc4f8fc93d0,fix flag setting,[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_742.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_742.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_742.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1775.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1775.cpp,153,153,156,156,"fprintf(fout, ""SET(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ${COMPILE_DEFINITIONS})\n"");","fprintf(fout, ""SET(CMAKE_CXX_FLAGS \""${CMAKE_CXX_FLAGS} ${COMPILE_DEFINITIONS}\"")\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1468.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1468.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1468.cpp,136,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1468.cpp,136,"[""FILE *"", ""string""]","[""cmSystemTools :: FileFormat"", ""unkown"", ""==""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmSystemTools :: FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([108, 117])","[[], ['\\', '\\']]",2002-11-21T21:03:07,Bill Hoffman,23552070842,243
1d39833446340e262020c83d9ef3124da6a1e3f7,Add progress to ccmake,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_743.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_743.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_743.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1776.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1776.cpp,381,381,384,388,,"sprintf(firstLine, 
            ""                                                               "");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1469.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1469.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1469.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1469.cpp,33,[],"[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""||"", ""!""]","set([u'int process', u'char firstLine [ 512 ] = """" ;'])","set([0, 28])","[[], ['sprintf', 'firstLine']]",2002-11-19T18:09:16,Andy Cedilnik,-12658131363428082502,244
1d39833446340e262020c83d9ef3124da6a1e3f7,Add progress to ccmake,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_743.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_743.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_743.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1776.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1776.cpp,381,381,384,390,,"sprintf(secondLine, 
            ""                                                               "");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1470.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1470.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1470.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1470.cpp,35,[],"[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""||"", ""!""]","set([u'int process', u'char secondLine [ 512 ] = """" ;'])","set([0, 29])","[[], ['sprintf', 'secondLine']]",2002-11-19T18:09:16,Andy Cedilnik,-3110587964835655627,245
1d39833446340e262020c83d9ef3124da6a1e3f7,Add progress to ccmake,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_743.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_743.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_743.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1776.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1776.cpp,381,381,384,392,,"sprintf(thirdLine, 
            ""                                                               "");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1471.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1471.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1471.cpp,29,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1471.cpp,37,[],"[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""||"", ""!""]","set([u'int process', u'char thirdLine [ 512 ] = """" ;'])","set([0, 30])","[[], ['sprintf', 'thirdLine']]",2002-11-19T18:09:16,Andy Cedilnik,-4806132836964691603,246
5b9feb6fdc32488e0f3fece5df9633981e11b06a,Fix network build,[],Source/cmWin32ProcessExecution.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_750.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_750.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_750.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1790.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1790.cpp,310,310,318,319,"sprintf(s2, ""%s%s%s"", s1, s3, cmdstring);","sprintf(s2, ""%s"", cmdstring);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1473.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1473.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1473.cpp,38,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1473.cpp,39,"[""_alloca_ret"", ""string"", ""_alloca_ret"", ""char *"", ""const char *""]","[""GetVersion_ret"", ""constant"", ""<"", ""STRICMP_ret"", ""null"", ""!="", ""&&""]","set([u'const char * cmdstring', u's2 = ( char * ) _alloca ( x )', u'comshell = s1 + x'])","set([0, 26, 36])","[['%s%s%s', 's1', 's3'], ['%s']]",2002-10-10T15:08:52,Andy Cedilnik,-4022981010416056814,247
ea87271c4a4e534772d7d8f14b70b6fd8ac648be,"Reorganization, cleanup and some improvement in dart emulation",[],Source/ctest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_751.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_751.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_751.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1793.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1793.cpp,547,589,570,-1,"sprintf(datestring, ""%4d%02d%02d-%d%d"",
          lctime->tm_year + 1900,
          lctime->tm_mon,
          lctime->tm_mday,
          lctime->tm_hour,
          lctime->tm_min);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1475.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1475.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1475.cpp,6,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1475.cpp,-1,"[""char *"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member""]",[],"set([u'const char * cmdstring', u's2 = ( char * ) _alloca ( x )', u'comshell = s1 + x'])","set([0, 26, 36])","[['sprintf', 'datestring', '%4d%02d%02d', '%d%d', 'lctime', 'tm_year', '1900', 'lctime', 'tm_mon', 'lctime', 'tm_mday', 'lctime', 'tm_hour', 'lctime', 'tm_min'], []]",2002-10-09T02:54:24,Andy Cedilnik,-52565826707745967329,512
ea87271c4a4e534772d7d8f14b70b6fd8ac648be,"Reorganization, cleanup and some improvement in dart emulation",[],Source/ctest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_751.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_751.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_751.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1795.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1795.cpp,795,929,800,-1,"sprintf(datestring, ""%4d%02d%02d-%d%d"",
          lctime->tm_year + 1900,
          lctime->tm_mon,
          lctime->tm_mday,
          lctime->tm_hour,
          lctime->tm_min);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1477.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1477.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1477.cpp,15,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1477.cpp,-1,"[""char *"", ""string"", ""member"", ""member"", ""member"", ""member"", ""member""]","[""m_TestResults . size_ret"", ""null"", ""=="", ""!""]","set([u'const char * cmdstring', u's2 = ( char * ) _alloca ( x )', u'comshell = s1 + x'])","set([0, 26, 36])","[['sprintf', 'datestring', '%4d%02d%02d', '%d%d', 'lctime', 'tm_year', '1900', 'lctime', 'tm_mon', 'lctime', 'tm_mday', 'lctime', 'tm_hour', 'lctime', 'tm_min'], []]",2002-10-09T02:54:24,Andy Cedilnik,-52565826707745967329,512
ea87271c4a4e534772d7d8f14b70b6fd8ac648be,"Reorganization, cleanup and some improvement in dart emulation",[],Source/ctest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_751.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_751.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_751.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1796.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1796.cpp,883,1007,910,-1,"fprintf(stderr,""\n%.0f%% tests passed, %i tests failed out of %i\n"",
              percent, int(failed.size()), total);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1478.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1478.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1478.cpp,53,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1478.cpp,-1,"[""unkown"", ""constant"", ""float"", ""int_ret"", ""int_ret""]","[""int_ret"", ""null"", ""=="", ""!""]","set([u'const char * cmdstring', u's2 = ( char * ) _alloca ( x )', u'comshell = s1 + x'])","set([0, 26, 36])","[['fprintf', 'stderr', '\\n%', '0f%%', 'tests', 'passed', '%i', 'tests', 'failed', 'out', 'of', '%i\\n', 'percent', 'int', 'failed', 'size', 'total'], []]",2002-10-09T02:54:24,Andy Cedilnik,39299349369349538916,504
a7692d84f038d24e167fdc8576713218ddcfb2f0,Cleanups and hopefully now it works on all windows platforms,[],Source/cmWin32ProcessExecution.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_755.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_755.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_755.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1803.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1803.cpp,61,61,77,-1,"printf(""%d - %s: %s (%d)\n"",line,str,msg, lastmsg);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1482.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1482.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1482.cpp,13,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1482.cpp,-1,"[""string"", ""int"", ""char *"", ""LPVOID"", ""DWORD""]",[],"set([u'const char * cmdstring', u's2 = ( char * ) _alloca ( x )', u'comshell = s1 + x'])","set([0, 26, 36])","[['printf', '%d', '%s', '%s', '%d', '\\n', 'line', 'str', 'msg', 'lastmsg'], []]",2002-09-30T19:00:42,Ken Martin,-13037835679313469185,248
aad36568ea85acc1305e1f3cad2b5e307d25472d,It is late and it at least seems to work better than before...,[],Source/cmSystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_756.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_756.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_756.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1806.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1806.cpp,1430,1430,1436,1436,"printf(""%s"",buf);",std::cout << buf << std::flush;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1484.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1484.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1484.cpp,112,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1484.cpp,112,"[""string"", ""char *""]","[""unsigned long"", ""int"", "">=""]",set([u'unsigned long bread ;']),set([81]),"[['printf', '%s'], ['std', 'cout', 'std', 'flush']]",2002-09-30T01:57:48,Andy Cedilnik,3545873943338147815,249
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1808.cpp,133,133,135,-1,"f(fout, ""PROJECT(CMAKE_TRY_COMPILE)\n"");",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1485.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1485.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1485.cpp,115,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1485.cpp,-1,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]",set([u'unsigned long bread ;']),set([81]),"[['f', 'fout', 'PROJECT', 'CMAKE_TRY_COMPILE', '\\n'], []]",2002-09-25T14:07:45,Andy Cedilnik,-3071119095587573697,250
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1808.cpp,133,133,136,157,"fprintf(fout, ""IF (CMAKE_ANSI_CXXFLAGS)\n"");","fprintf(fout, ""IF (CMAKE_ANSI_CXXFLAGS)\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1486.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1486.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1486.cpp,116,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1486.cpp,137,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([108, 117])","[[], []]",2002-09-25T14:07:45,Andy Cedilnik,0,550
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1808.cpp,133,133,137,142,"fprintf(fout, ""  SET(CMAKE_CXX_FLAGS \""${CMAKE_CXX_FLAGS} ${CMAKE_ANSI_CXXFLAGS}\"")\n"");","fprintf(fout, ""PROJECT(CMAKE_TRY_COMPILE C)\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1487.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1487.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1487.cpp,117,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1487.cpp,122,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([108, 117])","[['SET', 'CMAKE_CXX_FLAGS', '\\', 'CMAKE_CXX_FLAGS', 'CMAKE_ANSI_CXXFLAGS', '\\'], ['PROJECT', 'CMAKE_TRY_COMPILE', 'C']]",2002-09-25T14:07:45,Andy Cedilnik,-5745515361090041262,251
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1808.cpp,133,133,138,166,"fprintf(fout, ""  SET(CMAKE_C_FLAGS \""${CMAKE_C_FLAGS} ${CMAKE_ANSI_CFLAGS}\"")\n"");","fprintf(fout, ""  SET(CMAKE_C_FLAGS \""${CMAKE_C_FLAGS} ${CMAKE_ANSI_CFLAGS}\"")\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1488.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1488.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1488.cpp,118,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1488.cpp,146,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([108, 117])","[[], []]",2002-09-25T14:07:45,Andy Cedilnik,0,550
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1808.cpp,133,133,139,160,"fprintf(fout, ""ENDIF (CMAKE_ANSI_CXXFLAGS)\n"");","fprintf(fout, ""ENDIF (CMAKE_ANSI_CXXFLAGS)\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1489.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1489.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1489.cpp,119,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1489.cpp,140,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([108, 117])","[[], []]",2002-09-25T14:07:45,Andy Cedilnik,0,550
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1808.cpp,133,133,137,146,,"fprintf(fout, ""PROJECT(CMAKE_TRY_COMPILE CXX)\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1490.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1490.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1490.cpp,117,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1490.cpp,126,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([108, 117])","[[], ['fprintf', 'fout', 'PROJECT', 'CMAKE_TRY_COMPILE', 'CXX', '\\n']]",2002-09-25T14:07:45,Andy Cedilnik,-2932050687589954314,252
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1808.cpp,133,133,138,158,,"fprintf(fout, ""  SET(CMAKE_CXX_FLAGS \""${CMAKE_CXX_FLAGS}""
              "" ${CMAKE_ANSI_CXXFLAGS}\"")\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1491.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1491.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1491.cpp,118,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1491.cpp,138,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]",set([u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;']),set([117]),"[[], ['fprintf', 'fout', 'SET', 'CMAKE_CXX_FLAGS', '\\', 'CMAKE_CXX_FLAGS', 'CMAKE_ANSI_CXXFLAGS', '\\', '\\n']]",2002-09-25T14:07:45,Andy Cedilnik,3612495981983742590,253
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1808.cpp,133,133,139,165,,"fprintf(fout, ""IF (CMAKE_ANSI_CFLAGS)\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1492.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1492.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1492.cpp,119,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1492.cpp,145,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([108, 117])","[[], ['fprintf', 'fout', 'IF', 'CMAKE_ANSI_CFLAGS', '\\n']]",2002-09-25T14:07:45,Andy Cedilnik,-11022852386631192258,254
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1808.cpp,133,133,139,167,,"fprintf(fout, ""ENDIF (CMAKE_ANSI_CFLAGS)\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1493.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1493.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1493.cpp,119,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1493.cpp,147,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([108, 117])","[[], ['fprintf', 'fout', 'ENDIF', 'CMAKE_ANSI_CFLAGS', '\\n']]",2002-09-25T14:07:45,Andy Cedilnik,-12304767609909382762,255
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1808.cpp,133,133,141,170,,"fprintf(fout, ""INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES})\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1495.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1495.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1495.cpp,121,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1495.cpp,150,[],"[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([108, 117])","[[], ['fprintf', 'fout', 'INCLUDE_DIRECTORIES', 'INCLUDE_DIRECTORIES', '\\n']]",2002-09-25T14:07:45,Andy Cedilnik,4714120981743529176,256
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1808.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1808.cpp,133,133,141,171,,"fprintf(fout, ""LINK_DIRECTORIES(${LINK_DIRECTORIES})\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1496.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1496.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1496.cpp,121,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1496.cpp,151,[],"[""FILE *"", ""!"", ""!""]","set([u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([108, 117])","[[], ['fprintf', 'fout', 'LINK_DIRECTORIES', 'LINK_DIRECTORIES', '\\n']]",2002-09-25T14:07:45,Andy Cedilnik,-17067787157677195590,257
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1809.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1809.cpp,149,181,151,183,"f(fout, ""ADD_EXECUTABLE(cmTryCompileExec \""%s\"")\n"",argv[2].c_str());","f(fout, ""ADD_EXECUTABLE(cmTryCompileExec \""%s\"")\n"",source.c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1497.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1497.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1497.cpp,131,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1497.cpp,163,"[""FILE *"", ""string"", ""argv [ 2 ] . c_str_ret""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;', u'std :: string source = argv [ 2 ] ;', u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;'])","set([116, 108, 117])","[['argv[2]'], ['source']]",2002-09-25T14:07:45,Andy Cedilnik,4913352838345465796,258
561a3da2043c3fbebd1f90c88842513625076aed,"Several changes: COMPILE_DEFINITIONS is now depricated. If you want to specify some, use CMAKE_FLAGS -DCMAKE_DEFINITIONS:STRING=...; same goes for libraries, include path, ... It now detects wether the file is C or C++ and uses the apropriate project command, it also does the right thing when doing try_compile, so it does not execute configure for every single try_compile",[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_758.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_758.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1809.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1809.cpp,149,181,152,184,,"fprintf(fout, ""TARGET_LINK_LIBRARIES(cmTryCompileExec ${LINK_LIBRARIES})\n"");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1498.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1498.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1498.cpp,132,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1498.cpp,164,"[""FILE *""]","[""FILE *"", ""!"", ""!""]","set([u'cmSystemTools :: e_FileFormat format = cmSystemTools :: GetFileFormat ( cmSystemTools :: GetFilenameExtension ( source ) . c_str ( ) ) ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([108, 117])","[[], ['fprintf', 'fout', 'TARGET_LINK_LIBRARIES', 'cmTryCompileExec', 'LINK_LIBRARIES', '\\n']]",2002-09-25T14:07:45,Andy Cedilnik,-11558853628971013464,259
d4f5545007c99259dcb7414d975a5446d5163933,updated to try compile,[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_760.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_760.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_760.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1811.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1811.cpp,89,108,98,119,,"fprintf(fout, ""ADD_DEFINITIONS( "");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1499.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1499.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1499.cpp,78,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1499.cpp,100,"[""FILE *""]","[""FILE *"", ""!"", ""!""]","set([u'std :: vector < std :: string > compileFlags ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([52, 86])","[[], ['fprintf', 'fout', 'ADD_DEFINITIONS']]",2002-09-19T13:49:14,Ken Martin,-13429634290180641861,260
d4f5545007c99259dcb7414d975a5446d5163933,updated to try compile,[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_760.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_760.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_760.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1811.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1811.cpp,89,108,98,122,,"fprintf(fout,""%s "",compileFlags[i].c_str());",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1500.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1500.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1500.cpp,78,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1500.cpp,103,"[""FILE *""]","[""FILE *"", ""!"", ""!""]","set([u'i = 0 ;', u'std :: vector < std :: string > compileFlags ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([52, 101, 86])","[[], ['fprintf', 'fout', '%s', 'compileFlags[i]', 'c_str']]",2002-09-19T13:49:14,Ken Martin,-3695874053958280784,261
d4f5545007c99259dcb7414d975a5446d5163933,updated to try compile,[],Source/cmTryCompileCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_760.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_760.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_760.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1811.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1811.cpp,89,108,98,124,,"fprintf(fout, "")\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1501.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1501.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1501.cpp,78,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1501.cpp,105,"[""FILE *""]","[""FILE *"", ""!"", ""!""]","set([u'std :: vector < std :: string > compileFlags ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([52, 86])","[[], ['fprintf', 'fout', '\\n']]",2002-09-19T13:49:14,Ken Martin,-5701891786934548446,513
bea21587cf35f9d373314dd67c24b99fd0e11e49,updated makefile moved commands into cmake and fixed try compile,[],Source/cmMakefile.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_763.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_763.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_763.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1814.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1814.cpp,898,867,909,-1,"sprintf(tmp,""Version %d.%d"", cmMakefile::GetMajorVersion(),
          cmMakefile::GetMinorVersion());",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1503.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1503.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1503.cpp,9,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1503.cpp,-1,"[""char *"", ""constant"", ""cmMakefile :: GetMajorVersion_ret"", ""cmMakefile :: GetMinorVersion_ret""]",[],"set([u'std :: vector < std :: string > compileFlags ;', u'FILE * fout = fopen ( outFileName . c_str ( ) , ""w"" ) ;'])","set([52, 86])","[['sprintf', 'tmp', 'Version', '%d', '%d', 'cmMakefile', 'GetMajorVersion', 'cmMakefile', 'GetMinorVersion'], []]",2002-09-10T20:52:39,Ken Martin,10447007309200315498,262
25ff4552b3d17c9c4f601c7f488710c4350323d1,new arch,[],Source/MFCDialog/CMakeSetupDialog.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_765.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_765.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_765.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1817.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1817.cpp,266,265,268,267,"sprintf(tmp,""Version %d.%d - %s"", cmMakefile::GetMajorVersion(),
          cmMakefile::GetMinorVersion(), cmMakefile::GetReleaseVersion());","sprintf(tmp,""Version %d.%d - %s"", cmake::GetMajorVersion(),
          cmake::GetMinorVersion(), cmake::GetReleaseVersion());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1505.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1505.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1505.cpp,68,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1505.cpp,67,"[""char *"", ""constant"", ""cmMakefile :: GetMajorVersion_ret"", ""cmMakefile :: GetMinorVersion_ret"", ""cmMakefile :: GetReleaseVersion_ret""]",[],set([u'char tmp [ 1024 ] ;']),set([66]),"[['cmMakefile', 'cmMakefile', 'cmMakefile'], ['cmake', 'cmake', 'cmake']]",2002-09-06T17:06:23,Ken Martin,28464345659023716462,514
2c7e9b3b59cda840adc2aa4c3bfe1ffa0707be99,new architecture,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_766.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_766.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_766.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1818.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1818.cpp,362,368,376,386,"sprintf(firstLine,  ""Press [c] to configure"");","sprintf(firstLine,  ""Press [c] to configure                                   "");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1506.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1506.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1506.cpp,31,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1506.cpp,35,"[""char *"", ""string""]","[""unkown"", ""!""]","set([u'char firstLine [ 512 ] , secondLine [ 512 ] , thirdLine [ 512 ] ;'])",set([28]),"[[], []]",2002-09-06T17:00:12,Ken Martin,0,550
2c7e9b3b59cda840adc2aa4c3bfe1ffa0707be99,new architecture,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_766.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_766.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_766.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1819.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1819.cpp,504,514,506,516,"sprintf(vertmp,""CMake Version %d.%d - %s"", cmMakefile::GetMajorVersion(),
	  cmMakefile::GetMinorVersion(),cmMakefile::GetReleaseVersion());","sprintf(vertmp,""CMake Version %d.%d - %s"", cmake::GetMajorVersion(),
	  cmake::GetMinorVersion(),cmake::GetReleaseVersion());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1507.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1507.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1507.cpp,92,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1507.cpp,92,"[""char *"", ""constant"", ""cmMakefile :: GetMajorVersion_ret"", ""cmMakefile :: GetMinorVersion_ret"", ""cmMakefile :: GetReleaseVersion_ret""]","[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""||""]","set([u'char vertmp [ 128 ] ;', u'int x , y ;'])","set([2, 91])","[['cmMakefile', 'cmMakefile', 'cmMakefile'], ['cmake', 'cmake', 'cmake']]",2002-09-06T17:00:12,Ken Martin,28464345659023716462,514
20b1d940a407c4e8184e0aff73fa76ce0dafcb2b,"BUG: Generated call to Tcl_CreateCommand for vtkCommand should cast pointer to extern ""C"" version.",[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_769.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_769.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_769.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1825.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1825.cpp,229,229,231,231,,"fprintf(fout,
          ""extern \""C\""\n""
          ""{\n""
          ""  typedef int (*vtkTclCommandType)(ClientData, Tcl_Interp *,int, char *[]);\n""
          ""}\n""
          ""\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1509.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1509.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1509.cpp,22,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1509.cpp,22,[],"[""null"", ""classes . size_ret"", ""<""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[[], ['fprintf', 'fout', 'extern', '\\', 'C\\', '\\n', '\\n', 'typedef', 'int', '*vtkTclCommandType', 'ClientData', 'Tcl_Interp', '*', 'int', 'char', '*[]', '\\n', '\\n', '\\n']]",2002-07-26T13:54:47,Brad King,-21747592267801906732,263
20b1d940a407c4e8184e0aff73fa76ce0dafcb2b,"BUG: Generated call to Tcl_CreateCommand for vtkCommand should cast pointer to extern ""C"" version.",[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_769.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_769.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_769.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1826.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1826.cpp,300,307,302,309,"fprintf(fout,""  Tcl_CreateCommand(interp,(char *) \""vtkCommand\"",vtkCommand,\n		    (ClientData *)NULL, NULL);\n\n"");
    };","fprintf(fout,""  Tcl_CreateCommand(interp,(char *) \""vtkCommand\"",\n""
                 ""                    reinterpret_cast<vtkTclCommandType>(vtkCommand),\n""
                 ""                    (ClientData *)NULL, NULL);\n\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1510.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1510.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1510.cpp,93,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1510.cpp,100,"[""FILE *"", ""string""]","[""strcmp_ret"", ""!""]",set([u'const char * kitName']),set([0]),"[[], ['reinterpret_cast', 'vtkTclCommandType', '\\n']]",2002-07-26T13:54:47,Brad King,-2753003461172412652,264
a07cdc75e19f957b8ea3c6d5cd35514372eeb21a,use stream not sprintf,[],Source/cmSystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_770.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_770.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_770.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1827.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1827.cpp,997,997,1000,1000,"sprintf(msg, ""FilesDiffer failed to read files (allocated: %lu, source: %lu, dest: %lu)"", statSource.st_size, finSource.gcount(), finDestination.gcount());","msg << ""FilesDiffer failed to read files (allocated: "" 
        << statSource.st_size << "", read source: "" <<  finSource.gcount() 
        << "", read dest: "" << finDestination.gcount() << std::ends;",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1511.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1511.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1511.cpp,49,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1511.cpp,49,"[""char *"", ""string"", ""member"", ""finSource . gcount_ret"", ""finDestination . gcount_ret""]","[""member"", ""finSource . gcount_ret"", ""!="", ""member"", ""finDestination . gcount_ret"", ""!="", ""||""]","set([u'struct stat statSource ;', u'std :: ifstream finSource ( source , std :: ios :: binary | std :: ios :: in ) ;', u'std :: ifstream finDestination ( destination , std :: ios :: binary | std :: ios :: in ) ;'])","set([26, 3, 28])","[['sprintf', '%lu', '%lu', '%lu'], ['read', 'read', 'std', 'ends']]",2002-04-15T13:09:39,Bill Hoffman,6358558281915938816,265
a07cdc75e19f957b8ea3c6d5cd35514372eeb21a,use stream not sprintf,[],Source/cmSystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_770.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_770.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_770.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1828.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1828.cpp,1106,1105,1109,1108,"sprintf(msg, ""CopyFile failed to copy files (sizes differ, source: %lu, dest: %lu)"", statSource.st_size, statDestination.st_size);","msg << ""CopyFile failed to copy files (sizes differ, source: "" 
        << statSource.st_size << "" , dest: "" << statDestination.st_size 
        << std::ends;",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1512.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1512.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1512.cpp,85,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1512.cpp,85,"[""char *"", ""string"", ""member"", ""member""]","[""member"", ""member"", ""!=""]","set([u'struct stat statSource , statDestination ;'])",set([75]),"[['sprintf', '%lu', '%lu'], ['std', 'ends']]",2002-04-15T13:09:39,Bill Hoffman,13578132544399614319,266
95519ef1b7dcf4193aeccb1a0bc7f3344678ce8e,ENH: add -R (similar to ctest but use substr instead of regexp). indent.,[],Source/cmCreateTestSourceList.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_772.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1831.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1831.cpp,80,83,108,-1,"fout << ""    printf(\""Available tests:\\n\"");\n"";",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1515.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1515.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1515.cpp,88,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1515.cpp,-1,[],"[""std :: ofstream"", ""!"", ""!""]","set([u'struct stat statSource , statDestination ;'])",set([75]),"[['fout', 'printf', '\\', 'Available', 'tests', '\\\\n\\', '\\n'], []]",2002-03-26T22:53:07,Sebastien Barre,12399259403687809794,515
95519ef1b7dcf4193aeccb1a0bc7f3344678ce8e,ENH: add -R (similar to ctest but use substr instead of regexp). indent.,[],Source/cmCreateTestSourceList.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_772.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1831.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1831.cpp,80,83,111,-1,"fout << ""      printf(\""%d. %s\\n\"", i, cmakeGeneratedFunctionMapEntries[i].name);\n"";",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1516.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1516.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1516.cpp,91,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1516.cpp,-1,[],"[""std :: ofstream"", ""!"", ""!""]","set([u'struct stat statSource , statDestination ;'])",set([75]),"[['fout', 'printf', '\\', '%d', '%s\\\\n\\', 'i', 'cmakeGeneratedFunctionMapEntries[i]', 'name', '\\n'], []]",2002-03-26T22:53:07,Sebastien Barre,-4412301881688436376,516
95519ef1b7dcf4193aeccb1a0bc7f3344678ce8e,ENH: add -R (similar to ctest but use substr instead of regexp). indent.,[],Source/cmCreateTestSourceList.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_772.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1831.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1831.cpp,80,83,113,-1,"fout << ""    printf(\""To run a test, enter the test number: \"");\n"";",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1517.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1517.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1517.cpp,93,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1517.cpp,-1,[],"[""std :: ofstream"", ""!"", ""!""]","set([u'struct stat statSource , statDestination ;'])",set([75]),"[['fout', 'printf', '\\', 'To', 'run', 'a', 'test', 'enter', 'the', 'test', 'number', '\\', '\\n'], []]",2002-03-26T22:53:07,Sebastien Barre,-2157080975837743010,267
95519ef1b7dcf4193aeccb1a0bc7f3344678ce8e,ENH: add -R (similar to ctest but use substr instead of regexp). indent.,[],Source/cmCreateTestSourceList.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_772.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1831.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1831.cpp,80,83,118,-1,"fout << ""    printf(\""%d is an invalid test number.\\n\"", testNum);\n"";",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1518.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1518.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1518.cpp,98,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1518.cpp,-1,[],"[""std :: ofstream"", ""!""]","set([u'struct stat statSource , statDestination ;'])",set([75]),"[['fout', 'printf', '\\', '%d', 'is', 'an', 'invalid', 'test', 'number', '\\\\n\\', 'testNum', '\\n'], []]",2002-03-26T22:53:07,Sebastien Barre,15390940558592032084,268
95519ef1b7dcf4193aeccb1a0bc7f3344678ce8e,ENH: add -R (similar to ctest but use substr instead of regexp). indent.,[],Source/cmCreateTestSourceList.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_772.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1831.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1831.cpp,80,83,133,-1,"fout << ""  printf(\""Available tests:\\n\"");\n"";",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1519.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1519.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1519.cpp,113,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1519.cpp,-1,[],"[""std :: ofstream"", ""!""]","set([u'struct stat statSource , statDestination ;'])",set([75]),"[['fout', 'printf', '\\', 'Available', 'tests', '\\\\n\\', '\\n'], []]",2002-03-26T22:53:07,Sebastien Barre,12399259403687809794,515
95519ef1b7dcf4193aeccb1a0bc7f3344678ce8e,ENH: add -R (similar to ctest but use substr instead of regexp). indent.,[],Source/cmCreateTestSourceList.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_772.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1831.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1831.cpp,80,83,136,-1,"fout << ""    printf(\""%d. %s\\n\"", i, cmakeGeneratedFunctionMapEntries[i].name);\n"";",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1520.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1520.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1520.cpp,116,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1520.cpp,-1,[],"[""std :: ofstream"", ""!""]","set([u'struct stat statSource , statDestination ;'])",set([75]),"[['fout', 'printf', '\\', '%d', '%s\\\\n\\', 'i', 'cmakeGeneratedFunctionMapEntries[i]', 'name', '\\n'], []]",2002-03-26T22:53:07,Sebastien Barre,-4412301881688436376,516
95519ef1b7dcf4193aeccb1a0bc7f3344678ce8e,ENH: add -R (similar to ctest but use substr instead of regexp). indent.,[],Source/cmCreateTestSourceList.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_772.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_772.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1831.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1831.cpp,80,83,138,-1,"fout << ""  printf(\""Failed: %s is an invalid test name.\\n\"", av[1]);\n"";",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1521.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1521.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1521.cpp,118,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1521.cpp,-1,[],"[""std :: ofstream"", ""!""]","set([u'struct stat statSource , statDestination ;'])",set([75]),"[['fout', 'printf', '\\', 'Failed', '%s', 'is', 'an', 'invalid', 'test', 'name', '\\\\n\\', 'av[1]', '\\n'], []]",2002-03-26T22:53:07,Sebastien Barre,8481120687871052290,269
6fc30804589219d63062fe20cc2cf3ce617a5ce6,"BUG: fix RunCommand again... back to system, but with GetShortPath",[],Source/cmSystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_774.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_774.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_774.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1834.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1834.cpp,974,974,1077,-1,"printf(""%s"",buf);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1522.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1522.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1522.cpp,83,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1522.cpp,-1,"[""string"", ""char *""]","[""unsigned long"", ""int"", "">=""]","set([u'struct stat statSource , statDestination ;'])",set([75]),"[['printf', '%s', 'buf'], []]",2002-03-14T19:59:29,Bill Hoffman,-7569169800143846097,517
6fc30804589219d63062fe20cc2cf3ce617a5ce6,"BUG: fix RunCommand again... back to system, but with GetShortPath",[],Source/cmSystemTools.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_774.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_774.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_774.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1835.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1835.cpp,974,974,1077,-1,"printf(""%s"",buf);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1523.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1523.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1523.cpp,83,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1523.cpp,-1,"[""string"", ""char *""]","[""unsigned long"", ""int"", "">=""]","set([u'struct stat statSource , statDestination ;'])",set([75]),"[['printf', '%s', 'buf'], []]",2002-03-14T19:59:29,Bill Hoffman,-7569169800143846097,517
d8088655ffdbe947c9e701e49f2b95d6525b6f5d,minor fix,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_776.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_776.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_776.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1837.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1837.cpp,270,273,272,275,"fprintf(fout,""void vtkCommonDeleteAssocData(ClientData cd, Tcl_Interp *)\n"");","fprintf(fout,""void vtkCommonDeleteAssocData(ClientData cd)\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1524.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1524.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1524.cpp,60,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1524.cpp,60,"[""FILE *"", ""string""]","[""strcmp_ret"", ""!""]","set([u'const char * kitName', u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])","set([0, 6])","[['Tcl_Interp', '*'], []]",2002-01-03T18:56:30,Ken Martin,3794389334705028497,270
d8088655ffdbe947c9e701e49f2b95d6525b6f5d,minor fix,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_776.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_776.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_776.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1838.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1838.cpp,297,300,298,301,"fprintf(fout,
            ""  Tcl_SetAssocData(interp,(char *) \""vtk\"",vtkCommonDeleteAssocData,(ClientData *)info);\n"");","fprintf(fout,
            ""  Tcl_SetAssocData(interp,(char *) \""vtk\"",NULL,(ClientData *)info);\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1525.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1525.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1525.cpp,86,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1525.cpp,86,"[""FILE *"", ""string""]","[""strcmp_ret"", ""!""]","set([u'const char * kitName', u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])","set([0, 6])","[['vtkCommonDeleteAssocData'], ['NULL']]",2002-01-03T18:56:30,Ken Martin,-268169314508852001,271
69cb66f7ffd5541f60026135fa521f0369210bab,Updated toolbar.,[],Source/CursesDialog/cmCursesLongMessageForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_777.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_777.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_777.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1839.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1839.cpp,89,89,91,91,"sprintf(firstLine,  ""O)k"");","sprintf(firstLine,  ""Press [e] to exit help"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1527.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1527.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1527.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1527.cpp,10,"[""char *"", ""string""]","[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'char firstLine [ 512 ] ;', u'int x , y ;'])","set([9, 2])","[['O', 'k'], ['Press', '[e]', 'to', 'exit', 'help']]",2001-12-13T18:28:41,Berk Geveci,10137789591152243244,272
69cb66f7ffd5541f60026135fa521f0369210bab,Updated toolbar.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_778.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1840.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1840.cpp,299,325,304,348,"sprintf(firstLine,  ""C)onfigure                 G)enerate and Exit            H)elp"");","sprintf(firstLine,  ""Press [c] to configure"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1528.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1528.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1528.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1528.cpp,30,"[""char *"", ""string""]","[""unkown""]","set([u'char firstLine [ 512 ] , secondLine [ 512 ] , thirdLine [ 512 ] ;'])",set([23]),"[['C', 'onfigure', 'G', 'enerate', 'and', 'Exit', 'H', 'elp'], ['Press', '[c]', 'to', 'configure']]",2001-12-13T18:28:41,Berk Geveci,-1983094976279460311,273
69cb66f7ffd5541f60026135fa521f0369210bab,Updated toolbar.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_778.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1840.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1840.cpp,299,325,308,344,"sprintf(firstLine,  ""C)onfigure                                               H)elp"");","sprintf(firstLine,  ""Press [c] to configure     Press [g] to generate and exit"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1529.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1529.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1529.cpp,16,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1529.cpp,26,"[""char *"", ""string""]","[""unkown"", ""!""]","set([u'char firstLine [ 512 ] , secondLine [ 512 ] , thirdLine [ 512 ] ;'])",set([23]),"[['C', 'onfigure', 'H', 'elp'], ['Press', '[c]', 'to', 'configure', 'Press', '[g]', 'to', 'generate', 'and', 'exit']]",2001-12-13T18:28:41,Berk Geveci,-2495451193888429632,274
69cb66f7ffd5541f60026135fa521f0369210bab,Updated toolbar.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_778.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1840.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1840.cpp,299,325,312,352,"sprintf(secondLine, ""Q)uit Without Generating   T)oggle Advanced Mode (On)"");","sprintf(thirdLine,  ""Press [t] to toggle advanced mode (Currently On)"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1530.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1530.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1530.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1530.cpp,34,"[""char *"", ""string""]","[""unkown""]","set([u'char firstLine [ 512 ] , secondLine [ 512 ] , thirdLine [ 512 ] ;'])",set([23]),"[['secondLine', 'Q', 'uit', 'Without', 'Generating', 'T', 'oggle', 'Advanced', 'Mode'], ['thirdLine', 'Press', '[t]', 'to', 'toggle', 'advanced', 'mode', 'Currently']]",2001-12-13T18:28:41,Berk Geveci,10921306803463943147,275
69cb66f7ffd5541f60026135fa521f0369210bab,Updated toolbar.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_778.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1840.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1840.cpp,299,325,316,359,"sprintf(secondLine, ""Q)uit Without Generating   T)oggle Advanced Mode (Off)"");","sprintf(secondLine, ""Press [h] for help         Press [q] to quit without generating"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1531.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1531.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1531.cpp,24,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1531.cpp,41,"[""char *"", ""string""]","[""unkown"", ""!""]","set([u'char firstLine [ 512 ] , secondLine [ 512 ] , thirdLine [ 512 ] ;', u'cmCursesWidget * cw = 0 ;'])","set([11, 23])","[['Q', 'uit', 'Without', 'Generating', 'T', 'oggle', 'Advanced', 'Mode', 'Off'], ['Press', '[h]', 'for', 'help', 'Press', '[q]', 'to', 'quit', 'without', 'generating']]",2001-12-13T18:28:41,Berk Geveci,29816648549311711386,276
69cb66f7ffd5541f60026135fa521f0369210bab,Updated toolbar.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_778.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1840.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1840.cpp,299,325,319,356,,"sprintf(thirdLine,  ""Press [t] to toggle advanced mode (Currently Off)"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1532.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1532.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1532.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1532.cpp,38,"[""int"", ""null""]","[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'char firstLine [ 512 ] , secondLine [ 512 ] , thirdLine [ 512 ] ;'])",set([23]),"[[], ['sprintf', 'thirdLine', 'Press', '[t]', 'to', 'toggle', 'advanced', 'mode', 'Currently', 'Off']]",2001-12-13T18:28:41,Berk Geveci,-9572667652827474853,277
69cb66f7ffd5541f60026135fa521f0369210bab,Updated toolbar.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_778.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_778.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1840.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1840.cpp,299,325,319,373,,"sprintf(firstLine, ""Page %d of %d"", cw->GetPage(), m_NumberOfPages);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1533.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1533.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1533.cpp,27,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1533.cpp,55,"[""int"", ""null""]","[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'char firstLine [ 512 ] , secondLine [ 512 ] , thirdLine [ 512 ] ;', u'cmCursesWidget * cw = 0 ;'])","set([11, 23])","[[], ['sprintf', 'firstLine', 'Page', '%d', 'of', '%d', 'cw', 'GetPage', 'm_NumberOfPages']]",2001-12-13T18:28:41,Berk Geveci,-6955843817945187485,278
521d8d9410c7c7bb5958357933c9759035f51828,Improvements to the curses interface.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_780.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1845.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1845.cpp,205,242,240,306,"sprintf(firstLine,  ""C)onfigure             G)enerate and Exit"");","sprintf(firstLine,  ""C)onfigure                 G)enerate and Exit            H)elp"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1535.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1535.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1535.cpp,10,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1535.cpp,12,"[""char *"", ""string""]","[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'char firstLine [ 512 ] , secondLine [ 512 ] ;'])",set([9]),"[[], ['H', 'elp']]",2001-11-29T21:44:22,Berk Geveci,-3051142307529293149,279
521d8d9410c7c7bb5958357933c9759035f51828,Improvements to the curses interface.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_780.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1845.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1845.cpp,205,242,241,314,"sprintf(secondLine, ""Q)uit                  H)elp"");","sprintf(secondLine, ""Q)uit Without Generating   T)oggle Advanced Mode (On)"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1536.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1536.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1536.cpp,11,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1536.cpp,20,"[""char *"", ""string""]","[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'char firstLine [ 512 ] , secondLine [ 512 ] ;'])",set([9]),"[['H', 'elp'], ['Without', 'Generating', 'T', 'oggle', 'Advanced', 'Mode', 'On']]",2001-11-29T21:44:22,Berk Geveci,-15831796294038518512,280
521d8d9410c7c7bb5958357933c9759035f51828,Improvements to the curses interface.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_780.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1845.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1845.cpp,205,242,244,310,,"sprintf(firstLine,  ""C)onfigure                                               H)elp"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1537.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1537.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1537.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1537.cpp,16,"[""char *""]","[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'char firstLine [ 512 ] , secondLine [ 512 ] ;'])",set([9]),"[[], ['sprintf', 'firstLine', 'C', 'onfigure', 'H', 'elp']]",2001-11-29T21:44:22,Berk Geveci,-12054826794254479834,281
521d8d9410c7c7bb5958357933c9759035f51828,Improvements to the curses interface.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_780.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1845.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1845.cpp,205,242,244,318,,"sprintf(secondLine, ""Q)uit Without Generating   T)oggle Advanced Mode (Off)"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1538.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1538.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1538.cpp,14,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1538.cpp,24,"[""char *""]","[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'char firstLine [ 512 ] , secondLine [ 512 ] ;'])",set([9]),"[[], ['sprintf', 'secondLine', 'Q', 'uit', 'Without', 'Generating', 'T', 'oggle', 'Advanced', 'Mode', 'Off']]",2001-11-29T21:44:22,Berk Geveci,-20493974456291418000,282
521d8d9410c7c7bb5958357933c9759035f51828,Improvements to the curses interface.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_780.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1846.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1846.cpp,254,332,273,419,"sprintf(version,""(CMake Version %d.%d)"", cmMakefile::GetMajorVersion(),
	  cmMakefile::GetMinorVersion());","sprintf(vertmp,""CMake Version %d.%d"", cmMakefile::GetMajorVersion(),
	  cmMakefile::GetMinorVersion());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1539.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1539.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1539.cpp,20,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1539.cpp,88,"[""char *"", ""constant"", ""cmMakefile :: GetMajorVersion_ret"", ""cmMakefile :: GetMinorVersion_ret""]","[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'char vertmp [ 128 ] ;', u'int x , y ;'])","set([2, 87])","[['version'], ['vertmp']]",2001-11-29T21:44:22,Berk Geveci,-3347908998265016055,283
521d8d9410c7c7bb5958357933c9759035f51828,Improvements to the curses interface.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_780.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1846.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1846.cpp,254,332,279,363,,"sprintf(help,""%127s"", helpString);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1540.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1540.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1540.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1540.cpp,32,[],"[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'helpString = entry -> m_HelpString . c_str ( )', u'char help [ 128 ] ;'])","set([29, 23])","[[], ['sprintf', 'help', '%127s', 'helpString']]",2001-11-29T21:44:22,Berk Geveci,-11504738796188124899,284
521d8d9410c7c7bb5958357933c9759035f51828,Improvements to the curses interface.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_780.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1846.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1846.cpp,254,332,279,367,,"sprintf(help,""%s"", helpString);",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1541.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1541.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1541.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1541.cpp,36,[],"[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'char help [ 128 ] ;', u'helpString = entry -> m_HelpString . c_str ( )'])","set([29, 23])","[[], ['sprintf', 'help', '%s', 'helpString']]",2001-11-29T21:44:22,Berk Geveci,-9128115288794541216,285
521d8d9410c7c7bb5958357933c9759035f51828,Improvements to the curses interface.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_780.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1846.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1846.cpp,254,332,279,372,,"sprintf(help,"" "");",7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1542.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1542.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1542.cpp,26,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1542.cpp,41,[],"[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'char help [ 128 ] ;', u'cmCacheManager :: CacheEntry * entry = cmCacheManager :: GetInstance ( ) -> GetCacheEntry ( curField ) ;'])","set([25, 23])","[[], ['sprintf', 'help']]",2001-11-29T21:44:22,Berk Geveci,-1270829973068426054,286
521d8d9410c7c7bb5958357933c9759035f51828,Improvements to the curses interface.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_780.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_780.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1846.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1846.cpp,254,332,316,423,,"sprintf(version+sideSpace, ""%s"", vertmp);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1543.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1543.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1543.cpp,63,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1543.cpp,92,"[""unkown""]","[""int"", ""unkown"", ""<"", ""int"", ""unkown"", ""<"", ""||"", ""!""]","set([u'char vertmp [ 128 ] ;', u'char version [ cmCursesMainForm :: MAX_WIDTH ] ;', u'int x , y ;', u'int sideSpace = ( width - strlen ( vertmp ) ) ;'])","set([90, 2, 86, 87])","[[], ['sprintf', 'version', 'sideSpace', '%s', 'vertmp']]",2001-11-29T21:44:22,Berk Geveci,-4477244284695372346,287
4848c81428b8b8218eb86f23451ff32d78c039cd,Many improvements.,[],Source/CursesDialog/cmCursesMainForm.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_782.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_782.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_782.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1849.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1849.cpp,212,221,231,272,"sprintf(version,""CMake Version %d.%d"", cmMakefile::GetMajorVersion(),
	  cmMakefile::GetMinorVersion());","sprintf(version,""(CMake Version %d.%d)"", cmMakefile::GetMajorVersion(),
	  cmMakefile::GetMinorVersion());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1545.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1545.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1545.cpp,12,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1545.cpp,20,"[""char *"", ""constant"", ""cmMakefile :: GetMajorVersion_ret"", ""cmMakefile :: GetMinorVersion_ret""]",[],"set([u'char version [ 128 ] ;', u'int x , y ;'])","set([2, 19])","[[], []]",2001-11-06T03:10:52,Berk Geveci,0,550
b502515ad1a41b6487d3883db0c133f6e4fe4fe4,memory leak,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_783.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_783.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_783.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1851.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1851.cpp,290,298,291,299,"fprintf(fout,
            ""  Tcl_SetAssocData(interp,(char *) \""vtk\"",NULL,(ClientData *)info);\n"");","fprintf(fout,
            ""  Tcl_SetAssocData(interp,(char *) \""vtk\"",vtkCommonDeleteAssocData,(ClientData *)info);\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1552.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1552.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1552.cpp,78,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1552.cpp,86,"[""FILE *"", ""string""]","[""strcmp_ret"", ""!""]","set([u'const char * kitName', u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])","set([0, 6])","[['NULL'], ['vtkCommonDeleteAssocData']]",2001-09-25T15:06:00,Ken Martin,268169314508852001,288
08a89bd8dc87fb904d10a0b1718e7c61da725c12,added regexp option,[],Source/ctest.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_786.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_786.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_786.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1855.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1855.cpp,125,128,130,131,"fprintf(stderr,""Testing %-30s "",args[0].c_str());","(name == ""ADD_TEST"")
        {
        if (this->m_UseRegExp && !var.find(args[0].c_str()))
          {
          continue;
          }
        fprintf(stderr,""Testing %-30s "",args[0].c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1553.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1553.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1553.cpp,42,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1553.cpp,42,"[""unkown"", ""string"", ""args [ 0 ] . c_str_ret""]","[""std :: string"", ""string"", ""==""]","set([u'std :: ifstream fin ( ""DartTestfile.txt"" ) ;', u'std :: string name ;', u'std :: vector < std :: string > args ;'])","set([16, 9, 15])","[[], ['name', 'ADD_TEST', 'if', 'this', 'm_UseRegExp', '&&', 'var', 'find', 'continue', 'args[0]', 'c_str']]",2001-08-29T20:42:03,Ken Martin,-182680602324164255,289
a2a40b125918797471919f526edea2990e29bc69,updated to handle Tk commands compiled/linked separately. Useful for VTK Tk widgets for example.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_788.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1860.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1860.cpp,211,241,214,252,"fprintf(fout,""\n\nextern \""C\"" {int VTK_EXPORT %s_SafeInit(Tcl_Interp *interp);}\n\n"",
	  kitName);","fprintf(fout,""\nextern \""C\"" {int VTK_EXPORT %s_Init(Tcl_Interp *interp);}\n"",
	  kitName);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1554.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1554.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1554.cpp,36,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1554.cpp,51,"[""FILE *"", ""string"", ""const char *""]","[""FILE *"", ""!"", ""!""]","set([u'const char * kitName', u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])","set([0, 6])","[['\\n\\nextern', '%s_SafeInit', '\\n\\n'], ['\\nextern', '%s_Init', '\\n']]",2001-05-24T18:59:09,Sebastien Barre,14368596411490263441,290
a2a40b125918797471919f526edea2990e29bc69,updated to handle Tk commands compiled/linked separately. Useful for VTK Tk widgets for example.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_788.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1860.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1860.cpp,211,241,216,-1,"fprintf(fout,""\n\nextern \""C\"" {int VTK_EXPORT %s_Init(Tcl_Interp *interp);}\n\n"",
	  kitName);",,7,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1555.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1555.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1555.cpp,38,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1555.cpp,-1,"[""FILE *"", ""string"", ""const char *""]","[""FILE *"", ""!"", ""!""]","set([u'const char * kitName', u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])","set([0, 6])","[['fprintf', 'fout', '\\n\\nextern', '\\', 'C\\', 'int', 'VTK_EXPORT', '%s_Init', 'Tcl_Interp', '*interp', '\\n\\n', 'kitName'], []]",2001-05-24T18:59:09,Sebastien Barre,17498880315998252019,291
a2a40b125918797471919f526edea2990e29bc69,updated to handle Tk commands compiled/linked separately. Useful for VTK Tk widgets for example.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_788.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1860.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1860.cpp,211,241,220,256,"fprintf(fout,""\n\nextern void vtkTclGenericDeleteObject(ClientData cd);\n\n"");","fprintf(fout,""\nextern void vtkTclGenericDeleteObject(ClientData cd);\n"");",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1556.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1556.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1556.cpp,42,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1556.cpp,55,"[""FILE *"", ""string""]","[""FILE *"", ""!"", ""!""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[['\\n\\nextern', '\\n\\n'], ['\\nextern', '\\n']]",2001-05-24T18:59:09,Sebastien Barre,1136498798849451880,292
a2a40b125918797471919f526edea2990e29bc69,updated to handle Tk commands compiled/linked separately. Useful for VTK Tk widgets for example.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_788.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1860.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1860.cpp,211,241,214,246,,"fprintf(fout,""\nextern \""C\"" {int VTK_EXPORT %s_Init(Tcl_Interp *interp);}\n"",
            capcommands[i].c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1557.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1557.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1557.cpp,36,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1557.cpp,45,"[""FILE *"", ""string"", ""const char *""]","[""FILE *"", ""!"", ""!""]","set([u'i = 0 ;', u'i ++', u'std :: vector < std :: string > capcommands ;', u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])","set([43, 13, 6])","[[], ['fprintf', 'fout', '\\nextern', '\\', 'C\\', 'int', 'VTK_EXPORT', '%s_Init', 'Tcl_Interp', '*interp', '\\n', 'capcommands[i]', 'c_str']]",2001-05-24T18:59:09,Sebastien Barre,-22792456537858661410,293
a2a40b125918797471919f526edea2990e29bc69,updated to handle Tk commands compiled/linked separately. Useful for VTK Tk widgets for example.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_788.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1860.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1860.cpp,211,241,216,250,,"fprintf(fout,""\n\nextern \""C\"" {int VTK_EXPORT %s_SafeInit(Tcl_Interp *interp);}\n"",
	  kitName);",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1558.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1558.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1558.cpp,38,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1558.cpp,49,"[""FILE *"", ""string"", ""const char *""]","[""FILE *"", ""!"", ""!""]","set([u'const char * kitName', u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])","set([0, 6])","[[], ['fprintf', 'fout', '\\n\\nextern', '\\', 'C\\', 'int', 'VTK_EXPORT', '%s_SafeInit', 'Tcl_Interp', '*interp', '\\n', 'kitName']]",2001-05-24T18:59:09,Sebastien Barre,-25557578317211541920,294
a2a40b125918797471919f526edea2990e29bc69,updated to handle Tk commands compiled/linked separately. Useful for VTK Tk widgets for example.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_788.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1861.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1861.cpp,247,283,251,287,,"fprintf(fout,""  %s_Init(interp);\n"", capcommands[i].c_str());",3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1559.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1559.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1559.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1559.cpp,86,"[""FILE *"", ""string"", ""classes [ i ] . c_str_ret"", ""classes [ i ] . c_str_ret""]","[""null"", ""classes . size_ret"", ""<""]","set([u'i = 0 ;', u'i ++', u'std :: vector < std :: string > capcommands ;', u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])","set([84, 13, 6])","[[], ['fprintf', 'fout', '%s_Init', 'interp', '\\n', 'capcommands[i]', 'c_str']]",2001-05-24T18:59:09,Sebastien Barre,5105776318734873595,295
a2a40b125918797471919f526edea2990e29bc69,updated to handle Tk commands compiled/linked separately. Useful for VTK Tk widgets for example.,[],Source/cmVTKWrapTclCommand.cxx,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_old_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_new_file_788.cpp,second/download/CMake/CMake-old-new/CMake-old-new/Kitware_CMake_patch_788.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_hunk_1861.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_new_hunk_1861.cpp,247,283,251,289,,(fout;,3,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_old_log_1560.cpp,second/download/CMake/CMake-gumtree/Kitware_CMake_old_new_new_log_1560.cpp,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_old_function_1560.cpp,73,second/download/CMake/CMake-old-new/CMake-old-new-joern/Kitware_CMake_old_new_new_function_1560.cpp,88,"[""FILE *"", ""string"", ""classes [ i ] . c_str_ret"", ""classes [ i ] . c_str_ret""]","[""null"", ""classes . size_ret"", ""<""]","set([u'FILE * fout = fopen ( tempOutputFile . c_str ( ) , ""w"" ) ;'])",set([6]),"[[], ['fout']]",2001-05-24T18:59:09,Sebastien Barre,-509529383372783594,505

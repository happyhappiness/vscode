class,old_loc,old_log,new_log,check,variable,edit
203,-1,,"puts("""");","[null, null]",[],"[[], [u'puts']]"
187,-1,,"warnf(config, ""curl_formadd failed!\n"");","[""curl_formadd_ret""]","["" struct Configurable""]","[[], [u'warnf', u'config', u'curl_formadd', u'failed', u'\\n']]"
188,-1,,"fputs(stringp, stream);","[""curl_easy_getinfo_ret"", null, ""curl_easy_getinfo_arg_ret""]","[""curl_easy_getinfo_arg_ret"", ""fprintf_arg_ret""]","[[], [u'fputs', u'stringp', u'stream']]"
189,1746,"puts("""");",,"[null, null]",[],"[[u'puts'], []]"
190,63,"warnf(config, ""Data size exceeds single call write limit!\n"");","warnf(config->global, ""Data size exceeds single call write limit!\n"");","[""fwrite_arg"", ""fwrite_arg"", null, null]","["" struct OperationConfig""]","[[], [u'global']]"
191,345,"warnf(config, ""curl_formadd failed!\n"");","warnf(config->global, ""curl_formadd failed!\n"");","[""curl_formadd_ret""]","["" struct OperationConfig""]","[[], [u'global']]"
192,534,"warnf(config,
                ""--trace-ascii overrides an earlier trace/verbose option\n"");","warnf(global,
                ""--trace-ascii overrides an earlier trace/verbose option\n"");","[""parseconfig_arg"", null, ""parseconfig_arg"", null, null]","[""new_getout_arg""]","[[u'config'], [u'global']]"
193,977,"warnf(config, ""--test-event is ignored unless a debug build!\n"");","warnf(global, ""--test-event is ignored unless a debug build!\n"");","[""char""]","[""delegation_arg_ret""]","[[u'config'], [u'global']]"
194,117,"puts(""Reading response."");","printf(""Reading response.\n"");","[""curl_easy_init_ret""]",[],"[[u'puts'], [u'printf', u'\\n']]"
204,-1,,"warnf(config->global, ""curl_mime_headers failed!\n"");","[""curl_mime_headers_ret""]","[""get_param_part_arg_ret"", null]","[[], [u'warnf', u'config', u'global', u'curl_mime_headers', u'failed', u'\\n']]"
201,-1,,"warnf(config->global, ""curl_mime_type failed!\n"");","[""curl_mime_type_ret""]","[""get_param_part_arg_ret"", null]","[[], [u'warnf', u'config', u'global', u'curl_mime_type', u'failed', u'\\n']]"
197,-1,,"warnf(config->global, ""curl_mime_subparts failed!\n"");","[""curl_mime_subparts_ret""]","[""get_param_part_arg_ret"", null]","[[], [u'warnf', u'config', u'global', u'curl_mime_subparts', u'failed', u'\\n']]"
198,-1,,"warnf(config->global, ""curl_mime_addpart failed!\n"");","[""curl_mime_addpart_ret""]","[""get_param_part_arg_ret"", null]","[[], [u'warnf', u'config', u'global', u'curl_mime_addpart', u'failed', u'\\n']]"
199,-1,,"warnf(config->global, ""setting file %s failed!\n"", data);","[""file_or_stdin_ret""]","[""get_param_part_arg_ret"", null, ""file_or_stdin_arg_ret""]","[[], [u'warnf', u'config', u'global', u'setting', u'file', u'%s', u'failed', u'\\n', u'data']]"
200,-1,,"warnf(config->global, ""curl_mime_encoder failed!\n"");","[""curl_mime_encoder_ret""]","[""get_param_part_arg_ret"", null]","[[], [u'warnf', u'config', u'global', u'curl_mime_encoder', u'failed', u'\\n']]"
195,227,"fputs(""< "", data->err);",,"["" struct UrlData"", null, null]","["" struct UrlData"", null]","[[u'fputs', u'data', u'err'], []]"
196,229,"fputs(""\n"", data->err);",,"["" struct UrlData"", null, null]","["" struct UrlData"", null]","[[u'fputs', u'\\n', u'data', u'err'], []]"
202,-1,,"Curl_failf(conn->data, ""Bad reply from server"");","[""strstr_ret""]","[""Curl_set_command_prot_arg_ret"", null]","[[], [u'Curl_failf', u'conn', u'data', u'Bad', u'reply', u'from', u'server']]"

class,old_loc,old_log,new_log,function,function_loc,check,variable,edit
1973,-1,,"die(""%s"", err.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_93.cpp,25,"[""ref_transaction_update_ret""]","[""ref_transaction_update_arg_ret"", null]","[[], [u'die', u'%s', u'err', u'buf']]"
1975,-1,,"error(""chmod on %s failed: %s"",
				lock->filename, strerror(errno));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_104.cpp,34,"[""chmod_ret""]","[""strerror_ret"", ""hold_lock_file_for_update_arg_ret"", null]","[[], [u'error', u'chmod', u'on', u'%s', u'failed', u'%s', u'lock', u'filename', u'strerror', u'errno']]"
1976,1356,"status_printf_ln(s, color(WT_STATUS_HEADER, s), """");","status_printf_ln(s, color(WT_STATUS_HEADER, s), ""%s"", """");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_155.cpp,48,"[""wt_status_print_state_arg_ret"", null]","[""color_ret"", ""color_arg_ret""]","[[], [u'%s']]"
1977,1233,"fprintf(ecbdata->opt->file, ""%s%s+++ %s%s%s\n"",
			line_prefix, meta, ecbdata->label_path[1], reset, name_b_tab);","fprintf(o->file, ""%s%s+++ %s%s%s\n"",
			line_prefix, meta, ecbdata->label_path[1], reset, name_b_tab);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_163.cpp,24,"[""diff_words_flush_arg"", null]","[""diff_words_flush_arg"", null, null, ""diff_line_prefix_ret"", ""diff_get_color_ret"", ""diff_words_flush_arg"", null, ""diff_get_color_ret"", ""strchr_ret""]","[[u'opt', u'ecbdata'], [u'o']]"
1978,2033,"error(_(""Could not parse object '%s'.""), sha1_to_hex(remote));","error(_(""Could not parse object '%s'.""), oid_to_hex(remote));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_183.cpp,11,"[""parse_tree_indirect_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex'], [u'oid_to_hex']]"
2106,499,"error(_(""Could not read object %s""), sha1_to_hex(sha1));","error(_(""Could not read object %s""), oid_to_hex(oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_242.cpp,8,"[""read_sha1_file_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'sha1'], [u'oid_to_hex', u'oid']]"
1983,67,"die(""Could not resolve ref '%s'"", o.branch2);","die(_(""could not resolve ref '%s'""), o.branch2);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_254.cpp,46,"[""get_oid_ret""]","[""parse_merge_opt_arg_ret"", null]","[[u'Could'], [u'_', u'could']]"
1984,306,"die(_(""Failed to resolve '%s' as a valid ref.""), split[1]->buf);","die(_(""failed to resolve '%s' as a valid ref.""), split[1]->buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_263.cpp,30,"[""get_sha1_ret""]","[""strbuf_split_ret"", ""strbuf_split_arg_ret""]","[[u'Failed'], [u'failed']]"
2099,424,"die(_(""Failed to resolve '%s' as a valid ref.""), object_ref);","die(_(""failed to resolve '%s' as a valid ref.""), object_ref);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_268.cpp,38,"[""get_sha1_ret""]","[""get_sha1_arg_ret""]","[[u'Failed'], [u'failed']]"
1985,510,"die(_(""Failed to resolve '%s' as a valid ref.""), argv[0]);","die(_(""failed to resolve '%s' as a valid ref.""), argv[0]);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_269.cpp,39,"[""get_sha1_ret""]","[""parse_options_arg_ret""]","[[u'Failed'], [u'failed']]"
1986,534,"error(_(""Missing notes on source object %s. Cannot ""
			       ""copy.""), sha1_to_hex(from_obj));","error(_(""missing notes on source object %s. Cannot ""
			       ""copy.""), sha1_to_hex(from_obj));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_271.cpp,63,"[""get_note_ret""]","[""sha1_to_hex_ret""]","[[u'Missing'], [u'missing']]"
1987,684,"error(""Failed to delete ref NOTES_MERGE_REF"");","error(_(""failed to delete ref NOTES_MERGE_REF""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_276.cpp,12,"[""delete_ref_ret""]",[],"[[u'Failed'], [u'_', u'failed']]"
1981,-1,,"die(_(""pack exceeds maximum allowed size""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_312.cpp,12,"[null, null, null]",[],"[[], [u'die', u'_', u'pack', u'exceeds', u'maximum', u'allowed', u'size']]"
1989,1129,"warning(""core.untrackedCache is set to false; ""
				""remove or change it, if you really want to ""
				""enable the untracked cache"");","warning(_(""core.untrackedCache is set to false; ""
				  ""remove or change it, if you really want to ""
				  ""enable the untracked cache""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_314.cpp,229,"[""git_config_get_untracked_cache_ret""]",[],"[[], [u'_']]"
1990,1207,"printf("" %s "", diff_unique_abbrev(p->oid.hash, opt->abbrev));","printf("" %s "", diff_aligned_abbrev(&p->oid, opt->abbrev));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_319.cpp,31,"[""diff_line_prefix_arg_ret"", null, null]","[""diff_unique_abbrev_ret""]","[[u'diff_unique_abbrev', u'p', u'hash'], [u'diff_aligned_abbrev', u'&p']]"
2100,50,"die(""Could not read from remote repository.\n\n""
		    ""Please make sure you have the correct access rights\n""
		    ""and the repository exists."");","die(_(""Could not read from remote repository.\n\n""
		      ""Please make sure you have the correct access rights\n""
		      ""and the repository exists.""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_322.cpp,5,"[""int""]",[],"[[], [u'_']]"
1991,207,"warning(""LF will be replaced by CRLF in %s.\nThe file will have its original line endings in your working directory."", path);","warning(_(""LF will be replaced by CRLF in %s.\n""
				  ""The file will have its original line""
				  "" endings in your working directory.""), path);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_330.cpp,17,"["" enum safe_crlf"", null]","[""char""]","[[u'\\nThe'], [u'_', u'\\n', u'The']]"
1992,209,"die(""LF would be replaced by CRLF in %s"", path);","die(_(""LF would be replaced by CRLF in %s""), path);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_331.cpp,19,"["" enum safe_crlf"", null]","[""char""]","[[], [u'_']]"
2101,3519,"die(""Option '--stat-name-width' requires a value"");","die_want_option(""--stat-name-width"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_351.cpp,29,"[""strtoul_arg_ret"", ""char""]",[],"[[u'die', u'Option', u'requires', u'a', u'value'], [u'die_want_option']]"
2102,4628,warning(rename_limit_warning);,warning(_(rename_limit_warning));,/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_358.cpp,5,"[""int""]",[null],"[[], [u'_']]"
1993,355,"die(""invalid unshallow line: %s"", line);","die(_(""invalid unshallow line: %s""), line);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_366.cpp,92,"[""get_sha1_hex_ret""]","[""skip_prefix_arg_ret""]","[[], [u'_']]"
1994,383,"fputs(env_hint, stderr);","fputs(_(env_hint), stderr);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_410.cpp,38,"[""int"", null, null, null]","[null, null]","[[], [u'_']]"
1995,388,"fputs(env_hint, stderr);","fputs(_(env_hint), stderr);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_411.cpp,43,"[""int"", null]","[null, null]","[[], [u'_']]"
1996,278,"die(""You have not concluded your notes merge ""
				    ""(%s exists)."", git_path(""NOTES_MERGE_*""));","die(_(""You have not concluded your notes merge ""
				    ""(%s exists).""), git_path(""NOTES_MERGE_*""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_415.cpp,17,[null],"[""git_path_ret""]","[[], [u'_']]"
1997,399,"printf(""CONFLICT (delete/modify): Notes for object %s ""
				""deleted in %s and modified in %s. Version from %s ""
				""left in tree.\n"",
				sha1_to_hex(p->obj), rref, lref, lref);","printf(""CONFLICT (delete/modify): Notes for object %s ""
				""deleted in %s and modified in %s. Version from %s ""
				""left in tree.\n"",
				oid_to_hex(&p->obj), rref, lref, lref);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_418.cpp,34,"[""check_notes_merge_worktree_arg_ret"", null]","[""sha1_to_hex_ret"", ""char"", ""char"", ""char""]","[[u'sha1_to_hex', u'p'], [u'oid_to_hex', u'&p']]"
2103,442,"printf(""Using remote notes for %s\n"",
						sha1_to_hex(p->obj));","printf(""Using remote notes for %s\n"",
						oid_to_hex(&p->obj));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_421.cpp,19,"[""merge_one_change_manual_arg_ret"", null]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'p'], [u'oid_to_hex', u'&p']]"
1998,397,"error(_(""Could not parse parent commit %s\n""),
				oid_to_hex(&parent->object.oid));","error(_(""could not parse parent commit %s\n""),
				oid_to_hex(&parent->object.oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_444.cpp,10,"[""parse_commit_ret""]","[""oid_to_hex_ret""]","[[u'Could'], [u'could']]"
1999,493,"error(_(""Mainline was specified but commit %s is not a merge.""),
			oid_to_hex(&commit->object.oid));","error(_(""mainline was specified but commit %s is not a merge.""),
			oid_to_hex(&commit->object.oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_449.cpp,48,"[""error_dirty_index_arg_ret"", null]","[""oid_to_hex_ret""]","[[u'Mainline'], [u'mainline']]"
2000,1084,"die(_(""revision walk setup failed""));","error(_(""revision walk setup failed""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_479.cpp,55,"[""prepare_revision_walk_ret""]",[],"[[u'die'], [u'error']]"
2105,381,"print_ref_status('!', ""[rejected]"", ref, ref->peer_ref,
						 ""already exists"", porcelain);","print_ref_status('!', ""[rejected]"", ref, ref->peer_ref,
				 ""already exists"", porcelain, summary_width);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_506.cpp,25,"[""print_ok_ref_status_arg"", null, null]","[""print_ok_ref_status_arg"", ""print_ok_ref_status_arg"", null, ""print_ok_ref_status_arg""]","[[], [u'summary_width']]"
2001,420,"packet_write(1, ""ACK %s continue\n"", hex);","packet_write_fmt(1, ""ACK %s continue\n"", hex);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_527.cpp,43,[null],"[""sha1_to_hex_ret""]","[[u'packet_write'], [u'packet_write_fmt']]"
2002,429,"packet_write(1, ""ACK %s continue\n"", last_hex);","packet_write_fmt(1, ""ACK %s continue\n"", last_hex);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_529.cpp,52,[null],[null],"[[u'packet_write'], [u'packet_write_fmt']]"
2003,1512,"wt_status_print_other(s, &s->ignored, _(""Ignored files""), ""add -f"");","wt_longstatus_print_other(s, &s->ignored, _(""Ignored files""), ""add -f"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_543.cpp,63,"[""wt_status_print_submodule_summary_arg_ret"", null]","[""wt_status_print_submodule_summary_arg_ret"", ""wt_status_print_submodule_summary_arg_ret"", null]","[[u'wt_status_print_other'], [u'wt_longstatus_print_other']]"
2126,-1,,"die(""strange hostname '%s' blocked"", host);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_585.cpp,8,"[""looks_like_command_line_option_ret""]","[""looks_like_command_line_option_arg_ret""]","[[], [u'die', u'strange', u'hostname', u'%s', u'blocked', u'host']]"
2127,-1,,"die(""strange port '%s' blocked"", port);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_586.cpp,10,"[""looks_like_command_line_option_ret""]","[""get_host_and_port_arg_ret""]","[[], [u'die', u'strange', u'port', u'%s', u'blocked', u'port']]"
2128,-1,,"die(""strange pathname '%s' blocked"", path);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_587.cpp,58,"[""looks_like_command_line_option_ret""]","[""looks_like_command_line_option_arg_ret""]","[[], [u'die', u'strange', u'pathname', u'%s', u'blocked', u'path']]"
2129,-1,,"die(""strange hostname '%s' blocked"", ssh_host);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_588.cpp,93,"[""looks_like_command_line_option_ret""]","[""looks_like_command_line_option_arg_ret""]","[[], [u'die', u'strange', u'hostname', u'%s', u'blocked', u'ssh_host']]"
2004,134,"printf(""              to %7s %s\n"",
				 typename(obj->type), describe_object(obj));","printf(""              to %7s %s\n"",
				 printable_type(obj), describe_object(obj));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_603.cpp,30,"[""has_object_file_ret"", ""describe_object_arg_ret""]","[""describe_object_ret"", ""describe_object_arg_ret"", ""int""]","[[u'typename', u'type'], [u'printable_type']]"
2125,802,"die(""strange hostname '%s' blocked"", ssh_host);",,/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_620.cpp,93,"[""looks_like_command_line_option_ret""]","[""looks_like_command_line_option_arg_ret""]","[[u'die', u'strange', u'hostname', u'%s', u'blocked', u'ssh_host'], []]"
2005,-1,,"error(_(""cannot read HEAD""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_670.cpp,100,"[""get_sha1_ret""]",[],"[[], [u'error', u'_', u'cannot', u'read', u'HEAD']]"
2104,-1,,"die(""git-cvsserver only handles server: %s"", arg);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_700.cpp,7,"[""strcmp_ret"", ""strcmp_arg_ret""]","[""strcmp_arg_ret""]","[[], [u'die', u'git', u'cvsserver', u'only', u'handles', u'server', u'%s', u'arg']]"
2006,-1,,"die(_(""could not lookup name for submodule '%s'""), path);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_707.cpp,35,"[""submodule_from_path_ret""]","[""submodule_from_path_arg_ret""]","[[], [u'die', u'_', u'could', u'not', u'lookup', u'name', u'for', u'submodule', u'%s', u'path']]"
2007,-1,,"die(_(""could not create directory '%s'""), new_git_dir);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_708.cpp,38,"[""safe_create_leading_directories_const_ret""]","[""safe_create_leading_directories_const_arg_ret""]","[[], [u'die', u'_', u'could', u'not', u'create', u'directory', u'%s', u'new_git_dir']]"
2008,384,"die(""no email was given and auto-detection is disabled"");","die(_(""no email was given and auto-detection is disabled""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_751.cpp,39,"[""int"", null, null, null]",[],"[[], [u'_']]"
1979,707,"die(_(""Not a valid commit name %s""), sha1_to_hex(sha1));","die(_(""Not a valid commit name %s""), oid_to_hex(oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_768.cpp,4,"[""lookup_commit_reference_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'sha1'], [u'oid_to_hex', u'oid']]"
2009,233,"warning(_(msg_warn_remove_failed), quoted.buf);","warning_errno(_(msg_warn_remove_failed), quoted.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_777.cpp,84,"[""rmdir_ret""]","[""quote_path_relative_arg_ret"", null]","[[u'warning'], [u'warning_errno']]"
2010,340,"printf(""%s"", dirty);","printf(""%s"", suffix);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_781.cpp,103,[null],[null],"[[u'dirty'], [u'suffix']]"
2013,412,"error(""new commit is the same as the old one: '%s'"", sha1_to_hex(old));","error(""new commit is the same as the old one: '%s'"", oid_to_hex(&old));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_812.cpp,32,"[""hashcmp_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'old'], [u'oid_to_hex', u'&old']]"
2014,438,"die(_(""--contains option is only allowed with -l.""));","die(_(""--contains option is only allowed in list mode""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_821.cpp,105,"[""list_tags_arg_ret"", null]",[],"[[u'with', u'l'], [u'in', u'list', u'mode']]"
2017,-1,,"die(""BUG: unknown ref type %d of ref %s"",
		    ref_type(refname), refname);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_885.cpp,13,"[""ref_type_ret""]","[""ref_type_ret"", ""strbuf_addf_arg_ret""]","[[], [u'die', u'BUG', u'unknown', u'ref', u'type', u'%d', u'of', u'ref', u'%s', u'ref_type', u'refname', u'refname']]"
2018,-1,,"die(""error while iterating over references"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_889.cpp,66,"[""ref_iterator_advance_ret"", null]",[],"[[], [u'die', u'error', u'while', u'iterating', u'over', u'references']]"
2019,1196,"die(_(""could not run 'git status in submodule '%s'""),
				path);","die(_(""could not run 'git status' in submodule '%s'""),
				path);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_915.cpp,44,"[""unsigned"", null]","[""submodule_uses_gitfile_arg_ret""]","[[], []]"
2021,-1,,"die_errno(""sigprocmask"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_948.cpp,4,"[""sigprocmask_ret""]",[],"[[], [u'die_errno', u'sigprocmask']]"
2022,1937,"printf(_(""Applying autostash resulted in conflicts.\n""
				""Your changes are safe in the stash.\n""
				""You can run \""git stash pop\"" or""
				"" \""git stash drop\"" at any time.\n""));","fprintf(stderr,
				_(""Applying autostash resulted in conflicts.\n""
				  ""Your changes are safe in the stash.\n""
				  ""You can run \""git stash pop\"" or""
				  "" \""git stash drop\"" at any time.\n""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_964.cpp,33,"[""run_command_ret""]",[],"[[u'printf'], [u'fprintf', u'stderr']]"
2023,2939,"printf(""num get patch: %d\n"", num_get_patch);","printf(""num get patch: %d\n"", sb.num_get_patch);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_974.cpp,385,"[""OPT_BOOL_arg_ret""]",[null],"[[], [u'sb']]"
2011,390,"error(""%s: object corrupt or missing"", sha1_to_hex(sha1));","error(""%s: object corrupt or missing"", oid_to_hex(oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_976.cpp,11,"[""parse_object_buffer_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'sha1'], [u'oid_to_hex', u'oid']]"
2024,751,"die(_(""unable to read %s""),
			    sha1_to_hex(data->entry->idx.sha1));","die(_(""unable to read %s""),
			    oid_to_hex(&data->entry->idx.oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_982.cpp,17,"[""read_istream_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'data', u'sha1'], [u'oid_to_hex', u'&data', u'oid']]"
2031,813,"die(_(""cannot read existing object info %s""), sha1_to_hex(sha1));","die(_(""cannot read existing object info %s""), oid_to_hex(oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_985.cpp,28,"[""sha1_object_info_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'sha1'], [u'oid_to_hex', u'oid']]"
2016,835,"die(_(""invalid blob object %s""), sha1_to_hex(sha1));","die(_(""invalid blob object %s""), oid_to_hex(oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_989.cpp,50,"[""lookup_blob_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'sha1'], [u'oid_to_hex', u'oid']]"
2026,532,"fprintf(stderr, _(""Overwriting existing notes for object %s\n""),
			sha1_to_hex(object));","fprintf(stderr, _(""Overwriting existing notes for object %s\n""),
			oid_to_hex(&object));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1009.cpp,57,"[""get_note_ret""]","[""sha1_to_hex_ret"", null]","[[u'sha1_to_hex', u'object'], [u'oid_to_hex', u'&object']]"
2027,624,"fprintf(stderr, _(""Removing note for object %s\n""),
			sha1_to_hex(object));","fprintf(stderr, _(""Removing note for object %s\n""),
			oid_to_hex(&object));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1011.cpp,73,"[""prepare_note_data_arg_ret"", null, null, ""OPT_BOOL_arg_ret""]","[""sha1_to_hex_ret"", null]","[[u'sha1_to_hex', u'object'], [u'oid_to_hex', u'&object']]"
2025,665,"error(_(""no note found for object %s.""),
			       sha1_to_hex(object));","error(_(""no note found for object %s.""),
			       oid_to_hex(&object));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1012.cpp,28,"[""get_note_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'object'], [u'oid_to_hex', u'&object']]"
2028,113,"die(""unable to read %s"", sha1_to_hex(entry->delta->idx.sha1));","die(""unable to read %s"",
		    oid_to_hex(&entry->delta->idx.oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1014.cpp,11,"[""read_sha1_file_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'entry', u'sha1'], [u'oid_to_hex', u'&entry', u'oid']]"
2029,59,"die(""Expected two arguments"");",usage(usage_msg);,/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1029.cpp,7,"[""int""]",[],"[[u'die', u'Expected', u'two', u'arguments'], [u'usage', u'usage_msg']]"
2030,-1,,"die(""Timestamp too large for this system: %""PRItime, time);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1047.cpp,7,"[""date_overflows_ret""]","[null, ""timestamp_t""]","[[], [u'die', u'Timestamp', u'too', u'large', u'for', u'this', u'system', u'%', u'PRItime', u'time']]"
2012,1910,"die(""object not found: %s"", sha1_to_hex(sha1));","die(""object not found: %s"", oid_to_hex(&oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1062.cpp,28,"[""sha1_object_info_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'sha1'], [u'oid_to_hex', u'&oid']]"
2032,613,"printf(""Multiple merge bases found. Using the first ""
				""(%.7s)\n"", sha1_to_hex(base_sha1));","printf(""Multiple merge bases found. Using the first ""
				""(%.7s)\n"", oid_to_hex(base_oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1091.cpp,80,"[""merge_from_diffs_arg"", null]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'base_sha1'], [u'oid_to_hex', u'base_oid']]"
2033,1381,"die(""internal error: packed-refs not locked"");","die(""BUG: packed-refs not locked"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1114.cpp,8,"[""get_packed_ref_cache_ret"", null]",[],"[[u'internal', u'error'], [u'BUG']]"
2108,-1,,"die(""revision walk setup failed"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1134.cpp,9,"[""prepare_revision_walk_ret""]",[],"[[], [u'die', u'revision', u'walk', u'setup', u'failed']]"
2034,-1,,"die(_(""unable to parse format string""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1155.cpp,23,"[""verify_ref_format_ret""]",[],"[[], [u'die', u'_', u'unable', u'to', u'parse', u'format', u'string']]"
2035,-1,,"die(_(""Failed to resolve HEAD as a valid ref.""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1162.cpp,24,"[""resolve_refdup_ret""]",[],"[[], [u'die', u'_', u'Failed', u'to', u'resolve', u'HEAD', u'as', u'a', u'valid', u'ref']]"
2036,-1,,"error(""Could not write flush packet"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1171.cpp,13,"[""packet_flush_gently_ret""]",[],"[[], [u'error', u'Could', u'not', u'write', u'flush', u'packet']]"
2107,-1,,"die(_(""revision walk setup failed""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1191.cpp,20,"[""prepare_revision_walk_ret""]",[],"[[], [u'die', u'_', u'revision', u'walk', u'setup', u'failed']]"
2038,1152,"die(_(""You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n""
			    ""Please, commit your changes before you can merge.""));","die(_(""You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n""
			    ""Please, commit your changes before you merge.""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1216.cpp,70,[null],[],"[[u'can'], []]"
2039,-1,,"error(""%s"", err.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1234.cpp,27,"[""repack_without_refs_ret""]","[""repack_without_refs_arg_ret"", null]","[[], [u'error', u'%s', u'err', u'buf']]"
2037,-1,,"die(""%s"", err.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1237.cpp,28,"[""ref_transaction_update_ret"", ""ref_transaction_commit_ret"", ""ref_transaction_begin_ret""]","[""ref_transaction_commit_arg_ret"", null]","[[], [u'die', u'%s', u'err', u'buf']]"
1974,-1,,"die(""%s"", err.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1245.cpp,34,"[""ref_transaction_commit_ret""]","[""ref_transaction_commit_arg_ret"", null]","[[], [u'die', u'%s', u'err', u'buf']]"
2041,454,"error(""bad config file line %d in %s"", cf->linenr, cf->name);","error(_(""bad config file line %d in %s""), cf->linenr, cf->name);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1254.cpp,63,"[null, null]","[null, null, null, null]","[[], [u'_']]"
2042,746,"die(""bad zlib compression level %d"", level);","die(_(""bad zlib compression level %d""), level);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1259.cpp,85,"[""git_config_int_ret"", ""git_config_int_ret"", null]","[""git_config_int_ret""]","[[], [u'_']]"
2043,1845,"error(""chmod on %s failed: %s"",
				lock->filename, strerror(errno));","error(""chmod on %s failed: %s"",
				lock->filename.buf, strerror(errno));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1271.cpp,34,"[""chmod_ret""]","[""strerror_ret"", ""hold_lock_file_for_update_arg_ret"", null]","[[], [u'buf']]"
2044,-1,,"error(""%s"", err.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1367.cpp,15,"[""ref_transaction_begin_ret""]","[""ref_transaction_begin_arg_ret"", null]","[[], [u'error', u'%s', u'err', u'buf']]"
2045,-1,,"error(""%s"", err.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1369.cpp,59,"[""ref_transaction_commit_ret""]","[""ref_transaction_commit_arg_ret"", null]","[[], [u'error', u'%s', u'err', u'buf']]"
2049,-1,,"fprintf(stderr, _(""Removing note for object %s\n""),
			sha1_to_hex(object));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1395.cpp,74,"[""prepare_note_data_arg_ret"", null, null, ""OPT_BOOL_arg_ret""]","[""sha1_to_hex_ret"", null]","[[], [u'fprintf', u'stderr', u'_', u'Removing', u'note', u'for', u'object', u'%s\\n', u'sha1_to_hex', u'object']]"
2047,-1,,"die(""curl_global_init failed"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1401.cpp,6,"[""curl_global_init_ret"", null]",[],"[[], [u'die', u'curl_global_init', u'failed']]"
2046,-1,,"die(""curl_easy_init failed"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1402.cpp,11,"[""curl_easy_init_ret""]",[],"[[], [u'die', u'curl_easy_init', u'failed']]"
2050,-1,,"rp_error(""%s"", err.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1424.cpp,9,"[""ref_transaction_begin_ret""]","[""ref_transaction_begin_arg_ret"", null]","[[], [u'rp_error', u'%s', u'err', u'buf']]"
2057,1450,"error(""cannot stat '%s': %s"", ce->name,
				     strerror(errno));","error(""cannot stat '%s': %s"", ce->name,
				     strerror(errno));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1452.cpp,28,"[""strerror_arg"", null]","[""strerror_ret"", ""ce_namelen_arg_ret"", null]","[[], []]"
2052,100,"error(""file/directory conflict: %s, %s"", name1, name2);","noindex_filespec(NULL, 0);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1492.cpp,9,"[""S_ISDIR_ret"", ""S_ISDIR_ret"", ""get_mode_arg_ret"", ""get_mode_arg_ret""]","[""get_mode_arg_ret"", ""get_mode_arg_ret""]","[[u'error', u'file/directory', u'conflict', u'%s', u'%s', u'name1', u'name2'], [u'noindex_filespec', u'NULL', u'0']]"
2053,577,"die(""-L argument '%s' not of the form start,end:file"",
			    item->string);","die(""-L argument not 'start,end:file' or ':funcname:file': %s"",
			    item->string);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1493.cpp,19,"[""skip_range_arg_ret"", ""skip_range_arg_ret"", ""skip_range_arg_ret""]","["" struct string_list_item"", null]","[[u'of', u'the', u'form'], [u'or', u'funcname', u'file']]"
2055,-1,,"die(""git cat-file: could not get object info"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1501.cpp,34,"[""sha1_object_info_extended_ret""]",[],"[[], [u'die', u'git', u'cat', u'file', u'could', u'not', u'get', u'object', u'info']]"
2015,-1,,"git_die_config(key, _(""Invalid %s: '%s'""), key, *output);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1513.cpp,7,"[""approxidate_ret"", ""approxidate_ret""]","[""git_config_get_string_const_arg_ret"", ""git_config_get_string_const_arg_ret"", ""approxidate_arg_ret""]","[[], [u'git_die_config', u'key', u'_', u'Invalid', u'%s', u'%s', u'key', u'*output']]"
2056,1212,"printf("" %s "", diff_unique_abbrev(p->sha1, opt->abbrev));","printf("" %s "", diff_unique_abbrev(p->oid.hash, opt->abbrev));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1551.cpp,31,"[""diff_line_prefix_arg_ret"", null, null]","[""diff_unique_abbrev_ret""]","[[u'sha1'], [u'oid', u'hash']]"
2059,4036,"error(""cannot lock ref '%s'"", refname);","error(""cannot lock ref '%s': %s"", refname, err.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1612.cpp,26,"[""lock_ref_sha1_basic_ret""]","[""lock_ref_sha1_basic_arg_ret""]","[[], [u'%s', u'err', u'buf']]"
2058,2476,"warning(""packfile %s cannot be accessed"", p->pack_name);",,/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1613.cpp,25,"[""is_pack_valid_ret""]","[""is_pack_valid_arg_ret"", null]","[[u'warning', u'packfile', u'%s', u'cannot', u'be', u'accessed', u'p', u'pack_name'], []]"
2109,-1,,"die(""unable to generate diff (%s -> %s)"",
		    sha1_to_hex(parent->commit->object.sha1),
		    sha1_to_hex(target->commit->object.sha1));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1625.cpp,20,"[""diff_hunks_ret""]","[""sha1_to_hex_ret"", ""sha1_to_hex_ret""]","[[], [u'die', u'unable', u'to', u'generate', u'diff', u'%s', u'%s', u'sha1_to_hex', u'parent', u'commit', u'object', u'sha1', u'sha1_to_hex', u'target', u'commit', u'object', u'sha1']]"
2110,-1,,"die(""unable to generate diff (%s)"",
		    sha1_to_hex(parent->commit->object.sha1));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1626.cpp,25,"[""diff_hunks_ret""]","[""sha1_to_hex_ret""]","[[], [u'die', u'unable', u'to', u'generate', u'diff', u'%s', u'sha1_to_hex', u'parent', u'commit', u'object', u'sha1']]"
2111,-1,,"die(""unable to generate diff"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1627.cpp,23,"[""xdi_diff_ret""]",[],"[[], [u'die', u'unable', u'to', u'generate', u'diff']]"
2112,-1,,"die(""unable to generate diff for %s"", name);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1628.cpp,58,"[""diff_two_ret"", ""rerere_path_ret""]","[""rerere_path_arg_ret""]","[[], [u'die', u'unable', u'to', u'generate', u'diff', u'for', u'%s', u'name']]"
2054,-1,,"die(""unable to generate combined diff for %s"",
		    sha1_to_hex(parent));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1629.cpp,32,"[""xdi_diff_outf_ret""]","[""sha1_to_hex_ret""]","[[], [u'die', u'unable', u'to', u'generate', u'combined', u'diff', u'for', u'%s', u'sha1_to_hex', u'parent']]"
2113,-1,,"die(""unable to generate word diff"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1630.cpp,36,"[""xdi_diff_outf_ret""]",[],"[[], [u'die', u'unable', u'to', u'generate', u'word', u'diff']]"
2114,-1,,"die(""unable to generate diff for %s"", one->path);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1631.cpp,182,"[""xdi_diff_outf_ret""]","[""init_diff_words_data_arg_ret"", null]","[[], [u'die', u'unable', u'to', u'generate', u'diff', u'for', u'%s', u'one', u'path']]"
2115,-1,,"die(""unable to generate diffstat for %s"", one->path);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1632.cpp,60,"[""xdi_diff_outf_ret""]","[""fill_mmfile_arg_ret"", null]","[[], [u'die', u'unable', u'to', u'generate', u'diffstat', u'for', u'%s', u'one', u'path']]"
2116,-1,,"die(""unable to generate checkdiff for %s"", one->path);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1633.cpp,41,"[""xdi_diff_outf_ret""]","[""fill_mmfile_arg_ret"", null]","[[], [u'die', u'unable', u'to', u'generate', u'checkdiff', u'for', u'%s', u'one', u'path']]"
2117,-1,,"error(""unable to generate patch-id diff for %s"",
				     p->one->path);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1634.cpp,84,"[""xdi_diff_outf_ret""]","[""DIFF_PAIR_UNMERGED_arg_ret"", null, null]","[[], [u'error', u'unable', u'to', u'generate', u'patch', u'id', u'diff', u'for', u'%s', u'p', u'one', u'path']]"
2118,-1,,"warning(""protocol restrictions not applied to curl redirects because\n""
			""your curl version is too old (>= 7.19.4)"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1635.cpp,69,"[""transport_restrict_protocols_ret""]",[],"[[], [u'warning', u'protocol', u'restrictions', u'not', u'applied', u'to', u'curl', u'redirects', u'because\\n', u'your', u'curl', u'version', u'is', u'too', u'old', u'7', u'19', u'4']]"
2119,-1,,"die(""unable to generate diff for %s"", pair->one->path);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1636.cpp,39,"[""collect_diff_ret""]","["" struct diff_filepair"", null, null]","[[], [u'die', u'unable', u'to', u'generate', u'diff', u'for', u'%s', u'pair', u'one', u'path']]"
2120,-1,,"die(""transport '%s' not allowed"", type);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1637.cpp,3,"[""is_transport_allowed_ret""]","[""is_transport_allowed_arg_ret""]","[[], [u'die', u'transport', u'%s', u'not', u'allowed', u'type']]"
2121,-1,,"die(""size_t overflow: %""PRIuMAX"" + %""PRIuMAX,
		    (uintmax_t)a, (uintmax_t)b);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1663.cpp,3,"[""unsigned_add_overflows_ret""]","[null, null, null, ""size_t"", null, ""size_t""]","[[], [u'die', u'size_t', u'overflow', u'%', u'PRIuMAX', u'%', u'PRIuMAX', u'uintmax_t', u'a', u'uintmax_t', u'b']]"
2122,-1,,"die(""size_t overflow: %""PRIuMAX"" * %""PRIuMAX,
		    (uintmax_t)a, (uintmax_t)b);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1664.cpp,3,"[""unsigned_mult_overflows_ret""]","[null, null, null, ""size_t"", null, ""size_t""]","[[], [u'die', u'size_t', u'overflow', u'%', u'PRIuMAX', u'*', u'%', u'PRIuMAX', u'uintmax_t', u'a', u'uintmax_t', u'b']]"
2123,-1,,"die(""size_t underflow: %""PRIuMAX"" - %""PRIuMAX,
		    (uintmax_t)a, (uintmax_t)b);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1665.cpp,3,"[""size_t"", ""size_t""]","[null, null, null, ""size_t"", null, ""size_t""]","[[], [u'die', u'size_t', u'underflow', u'%', u'PRIuMAX', u'%', u'PRIuMAX', u'uintmax_t', u'a', u'uintmax_t', u'b']]"
2040,-1,,"die(""%s"", err.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1687.cpp,16,"[""ref_transaction_create_ret""]","[""ref_transaction_create_arg_ret"", null]","[[], [u'die', u'%s', u'err', u'buf']]"
2061,-1,,"error(""Invalid value for '%s'"", k);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1702.cpp,18,"[""strcasecmp_ret"", ""strcasecmp_arg_ret""]","[""strcmp_arg_ret""]","[[], [u'error', u'Invalid', u'value', u'for', u'%s', u'k']]"
2062,-1,,"die(""could not read ref '%s'"", pseudoref);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1734.cpp,16,"[""read_ref_ret""]","[""read_ref_arg_ret""]","[[], [u'die', u'could', u'not', u'read', u'ref', u'%s', u'pseudoref']]"
2063,2995,"error(""unable to write current sha1 into %s"", oldrefname);","error(""unable to write current sha1 into %s: %s"", oldrefname, err.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1740.cpp,79,"[""write_ref_to_lockfile_ret"", ""commit_ref_update_ret""]","[""lock_ref_sha1_basic_arg_ret""]","[[], [u'%s', u'err', u'buf']]"
2064,3378,"warning(""Log for ref %s unexpectedly ended on %s."",
				cb->refname, show_date(cb->date, cb->tz,
						   DATE_RFC2822));","warning(""Log for ref %s unexpectedly ended on %s."",
				cb->refname, show_date(cb->date, cb->tz,
						       DATE_MODE(RFC2822)));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1752.cpp,32,"[""hashcmp_ret""]","[""show_date_ret"", "" struct read_ref_at_cb"", null]","[[u'DATE_RFC2822'], [u'DATE_MODE', u'RFC2822']]"
2048,-1,,"die(""BUG: commit called for transaction that is not open"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1753.cpp,13,"["" struct ref_transaction"", null, null]",[],"[[], [u'die', u'BUG', u'commit', u'called', u'for', u'transaction', u'that', u'is', u'not', u'open']]"
2060,-1,,"die(""unable to generate combined diff for %s"",
		    oid_to_hex(parent));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1816.cpp,32,"[""xdi_diff_outf_ret""]","[""oid_to_hex_ret""]","[[], [u'die', u'unable', u'to', u'generate', u'combined', u'diff', u'for', u'%s', u'oid_to_hex', u'parent']]"
2065,349,"die(_(""No tags can describe '%s'.\n""
			    ""Try --always, or create some tags.""),
			    sha1_to_hex(sha1));","die(_(""No tags can describe '%s'.\n""
			    ""Try --always, or create some tags.""),
			    oid_to_hex(oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1870.cpp,112,"[""unsigned""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'sha1'], [u'oid_to_hex', u'oid']]"
2066,545,"die (""Could not find author in commit %s"",
		     sha1_to_hex(commit->object.sha1));","die (""Could not find author in commit %s"",
		     oid_to_hex(&commit->object.oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1873.cpp,17,"[""strstr_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'commit', u'sha1'], [u'oid_to_hex', u'&commit', u'oid']]"
2067,716,"warning (""Stripping signature from tag %s"",
					 sha1_to_hex(tag->object.sha1));","warning (""Stripping signature from tag %s"",
					 oid_to_hex(&tag->object.oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1879.cpp,74,"[null, null]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'tag', u'sha1'], [u'oid_to_hex', u'&tag', u'oid']]"
2068,243,"printf(""dangling %s %s\n"", typename(obj->type),
			       sha1_to_hex(obj->sha1));","printf(""dangling %s %s\n"", typename(obj->type),
			       oid_to_hex(&obj->oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1893.cpp,34,[null],"[""sha1_to_hex_ret"", "" struct object"", null]","[[u'sha1_to_hex', u'obj', u'sha1'], [u'oid_to_hex', u'&obj', u'oid']]"
2069,210,"die(""Error on reachable objects of %s"", sha1_to_hex(obj->sha1));","die(""Error on reachable objects of %s"", oid_to_hex(&obj->oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1955.cpp,29,"[""fsck_walk_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'obj', u'sha1'], [u'oid_to_hex', u'&obj', u'oid']]"
2070,55,"die(""bad tree %s"", sha1_to_hex(obj->sha1));","die(""bad tree %s"", oid_to_hex(&obj->oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2040.cpp,9,"[""parse_tree_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'obj', u'sha1'], [u'oid_to_hex', u'&obj', u'oid']]"
2073,687,"die(""cannot simplify commit %s (invalid %s)"",
					    sha1_to_hex(commit->object.sha1),
					    sha1_to_hex(p->object.sha1));","die(""cannot simplify commit %s (invalid %s)"",
					    oid_to_hex(&commit->object.oid),
					    oid_to_hex(&p->object.oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2044.cpp,96,"[""parse_commit_ret""]","[""sha1_to_hex_ret"", ""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'commit', u'sha1', u'sha1_to_hex', u'p', u'sha1'], [u'oid_to_hex', u'&commit', u'oid', u'oid_to_hex', u'&p', u'oid']]"
2074,499,"error(_(""Mainline was specified but commit %s is not a merge.""),
			sha1_to_hex(commit->object.sha1));","error(_(""Mainline was specified but commit %s is not a merge.""),
			oid_to_hex(&commit->object.oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2052.cpp,48,"[""error_dirty_index_arg_ret"", null]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'commit', u'sha1'], [u'oid_to_hex', u'&commit', u'oid']]"
2071,-1,,"die(""BUG: pack_name does not end in .pack"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2056.cpp,10,"[""strip_suffix_ret""]",[],"[[], [u'die', u'BUG', u'pack_name', u'does', u'not', u'end', u'in', u'pack']]"
2020,-1,,"die(""bad %s argument: %s"", opt, arg);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2062.cpp,7,"[""int""]","[""git_config_maybe_bool_arg_ret"", ""git_config_maybe_bool_arg_ret""]","[[], [u'die', u'bad', u'%s', u'argument', u'%s', u'opt', u'arg']]"
2075,131,"error(""Could not read %s"",
			     sha1_to_hex(item->object.sha1));","error(""Could not read %s"",
			     oid_to_hex(&item->object.oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2064.cpp,11,"[""read_sha1_file_ret""]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'item', u'sha1'], [u'oid_to_hex', u'&item', u'oid']]"
2076,135,"error(""Object %s not a tag"",
			     sha1_to_hex(item->object.sha1));","error(""Object %s not a tag"",
			     oid_to_hex(&item->object.oid));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2065.cpp,15,"[""read_sha1_file_arg_ret"", null]","[""sha1_to_hex_ret""]","[[u'sha1_to_hex', u'item', u'sha1'], [u'oid_to_hex', u'&item', u'oid']]"
1982,172,"die(""stage should be between 1 and 3 or all"");","die(_(""stage should be between 1 and 3 or all""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2103.cpp,11,"[""int"", ""int""]",[],"[[], [u'_']]"
2077,475,"error(_(""bad config file line %d in %s""), cf->linenr, cf->name);","error(_(""bad config line %d in %s %s""), cf->linenr, cf->origin_type, cf->name);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2125.cpp,62,"[null, null]","[null, null, null, null]","[[u'file'], [u'%s', u'origin_type', u'cf']]"
2072,-1,,"die(_(""positive width expected with the %%(align) atom""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2150.cpp,34,"[""strtoul_ui_arg_ret""]",[],"[[], [u'die', u'_', u'positive', u'width', u'expected', u'with', u'the', u'%%', u'align', u'atom']]"
2078,1030,"die(""missing object %s for %s"",
		    sha1_to_hex(tagged), ref->refname);","die(_(""missing object %s for %s""),
		    sha1_to_hex(tagged), ref->refname);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2160.cpp,239,"[""get_obj_ret""]","[""sha1_to_hex_ret"", "" struct ref_array_item"", ""xstrfmt_arg_ret""]","[[], [u'_']]"
2079,1033,"die(""parse_object_buffer failed on %s for %s"",
		    sha1_to_hex(tagged), ref->refname);","die(_(""parse_object_buffer failed on %s for %s""),
		    sha1_to_hex(tagged), ref->refname);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2161.cpp,242,"[""get_obj_arg_ret""]","[""sha1_to_hex_ret"", "" struct ref_array_item"", ""xstrfmt_arg_ret""]","[[], [u'_']]"
2080,1311,"warning(""ignoring broken ref %s"", refname);","warning(_(""ignoring broken ref %s""), refname);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2163.cpp,14,"[""new_ref_array_item_arg"", null]","[""filter_ref_kind_arg""]","[[], [u'_']]"
2081,-1,,"fputs(env_hint, stderr);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2213.cpp,38,"[""int"", null, null, null]","[null, null]","[[], [u'fputs', u'env_hint', u'stderr']]"
2051,-1,,"error(""%s"", err.buf);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2217.cpp,13,"[""hold_lock_file_for_update_ret""]","[""unable_to_lock_message_arg_ret"", null]","[[], [u'error', u'%s', u'err', u'buf']]"
2082,-1,,"error(""could not unhide %s"", filename);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2236.cpp,11,"[""access_ret"", ""set_hidden_flag_ret"", ""needs_hiding_ret""]","[""access_arg_ret""]","[[], [u'error', u'could', u'not', u'unhide', u'%s', u'filename']]"
2124,778,"error(_(""could not open '%s' for writing: %s""),
					mail, strerror(errno));","error_errno(_(""could not open '%s' for writing""),
					   mail);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2247.cpp,27,"[""fopen_ret""]","[""strerror_ret"", ""fopen_arg_ret""]","[[u'error', u'%s', u'strerror', u'errno'], [u'error_errno']]"
2085,2333,"error(""chmod on %s failed: %s"",
			    get_lock_file_path(lock), strerror(errno));","error_errno(""chmod on %s failed"",
				  get_lock_file_path(lock));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2320.cpp,34,"[""chmod_ret"", ""get_lock_file_path_ret""]","[""get_lock_file_path_ret"", ""strerror_ret""]","[[u'error', u'%s', u'strerror', u'errno'], [u'error_errno']]"
2086,47,"error(""copy-fd: write returned %s"", strerror(errno));","error_errno(""copy-fd: write returned"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2326.cpp,17,"[""copy_fd_ret"", null]","[""strerror_ret""]","[[u'error', u'%s', u'strerror', u'errno'], [u'error_errno']]"
2088,717,"error(""cannot create pipe: %s"", strerror(errno));","error_errno(""cannot create pipe"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2369.cpp,23,"[""pipe_ret""]","[""strerror_ret""]","[[u'error', u'%s', u'strerror', u'errno'], [u'error_errno']]"
2089,3083,"error(""unable to create temporary file: %s"", strerror(errno));","error_errno(""unable to create temporary file"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2382.cpp,16,"[""strerror_arg"", null]","[""strerror_ret""]","[[u'error', u'%s', u'strerror', u'errno'], [u'error_errno']]"
2087,1308,"error(""%s process failed to wait: %s"", name, strerror(errno));","error_errno(""%s process failed to wait"", name);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2395.cpp,4,"[""waitpid_ret""]","[""strerror_ret"", ""char""]","[[u'error', u'%s', u'strerror', u'errno'], [u'error_errno']]"
2098,460,"die(""Unexpected option --remote"");","die(_(""Unexpected option --remote""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2442.cpp,48,"[""OPT_STRING_arg_ret""]",[],"[[], [u'_']]"
2090,733,"fprintf(stderr, ""The merge base %s is new.\n""
				""The property has changed ""
				""between %s and [%s].\n"",
				bad_hex, bad_hex, good_hex);","fprintf(stderr, _(""The merge base %s is new.\n""
				""The property has changed ""
				""between %s and [%s].\n""),
				bad_hex, bad_hex, good_hex);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2453.cpp,11,"[""strcmp_ret"", ""strcmp_ret""]","[null, ""oid_to_hex_ret"", ""oid_to_hex_ret"", ""join_sha1_array_hex_ret""]","[[], [u'_']]"
2091,235,"printf(""dangling %s %s\n"", typename(obj->type),
			       oid_to_hex(&obj->oid));","printf(""dangling %s %s\n"", typename(obj->type),
			       describe_object(obj));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2495.cpp,34,[null],"[""oid_to_hex_ret"", "" struct object"", null]","[[u'oid_to_hex', u'&obj', u'oid'], [u'describe_object', u'obj']]"
2092,798,"error(""too many parameters"");","error(_(""too many parameters""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2526.cpp,41,"[""int"", ""parse_options_ret""]",[],"[[], [u'_']]"
1988,966,"error(""too many parameters"");","error(_(""too many parameters""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2530.cpp,7,"[""parse_options_ret""]",[],"[[], [u'_']]"
1980,1162,"printf_ln(_(""  HEAD branch: %s""), ""(not queried)"");","printf_ln(_(""  HEAD branch: %s""), _(""(not queried)""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2537.cpp,48,"[""OPT_BOOL_arg_ret""]",[],"[[], [u'_']]"
2083,-1,,"die(_(""No such ref: %s""), ""HEAD"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2545.cpp,18,"[""resolve_ref_unsafe_ret""]",[],"[[], [u'die', u'_', u'No', u'such', u'ref', u'%s', u'HEAD']]"
2084,-1,,"die(_(""Expecting a full ref name, got %s""), refname);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2547.cpp,27,"[""skip_prefix_ret""]","[""skip_prefix_arg_ret""]","[[], [u'die', u'_', u'Expecting', u'a', u'full', u'ref', u'name', u'got', u'%s', u'refname']]"
2093,-1,,"die(_(""'%s' is not a working tree""), av[0]);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2556.cpp,15,"[""find_worktree_ret""]","[""parse_options_arg_ret""]","[[], [u'die', u'_', u'%s', u'is', u'not', u'a', u'working', u'tree', u'av[0]']]"
2094,-1,,"die(_(""The main working tree cannot be locked or unlocked""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2557.cpp,17,"[""is_main_worktree_ret""]",[],"[[], [u'die', u'_', u'The', u'main', u'working', u'tree', u'cannot', u'be', u'locked', u'or', u'unlocked']]"
2095,625,"fputs(diff_get_color_opt(&opt->diffopt, DIFF_RESET), stdout);","fputs(diff_get_color_opt(&opt->diffopt, DIFF_RESET), opt->diffopt.file);",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2622.cpp,85,"[""log_write_email_headers_arg_ret"", null, null]","[""diff_get_color_opt_ret"", ""fwrite_arg""]","[[u'stdout'], [u'opt', u'diffopt', u'file']]"
2096,1384,"die(""ren1_dst != ren2_dst"");","die(""BUG: ren1_dst != ren2_dst"");",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2651.cpp,109,"[""strcmp_ret""]",[],"[[], [u'BUG']]"
2097,914,"die_errno(""Cannot come back to cwd"");","die_errno(_(""Cannot come back to cwd""));",/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2683.cpp,99,"[""chdir_ret""]",[],"[[], [u'_']]"

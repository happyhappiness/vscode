sha,message,issue,file_name,old_file,new_file,patch_file
202c2ebec4d47d6f8cfbb6c91dd4486dd62aebf6,"Merge pull request #4191 from jybaek/unstable

Add missing fclose()",[u'https://gitlab.kitware.com/cmake/cmake/issues/4191'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_0.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_0.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_0.cpp
a8c08b9b7668f784cfd24ecd2afb2fdd2ae65312,Add missing fclose(),[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1.cpp
34a79c353f15900f004057858f0d57a29d68b63c,"Merge pull request #3935 from itamarhaber/module-cmdstats

Changes command stats iteration to being dict-based",[u'https://gitlab.kitware.com/cmake/cmake/issues/3935'],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_2.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_2.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_2.cpp
964224b77fb4361e337d2f679fd4e6ccb2fa33c0,"Merge pull request #4124 from lamby/proceding-proceeding-typo

Correct proceding -> proceeding typo.",[u'https://gitlab.kitware.com/cmake/cmake/issues/4124'],src/redis-check-aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_3.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_3.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_3.cpp
d9565379da0adf97caec12e9b88c17da51900e40,"Merge pull request #4128 from leonchen83/unstable

fix mismatch argument and return wrong value of clusterDelNodeSlots",[u'https://gitlab.kitware.com/cmake/cmake/issues/4128'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_4.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_4.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_4.cpp
7c3c472b5e5861787055c74b189e6a8b590e9e81,"Merge pull request #4154 from liangsijian/unstable

Fix lua ldb command log",[u'https://gitlab.kitware.com/cmake/cmake/issues/4154'],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_5.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_5.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_5.cpp
ffbbe5a720a723148ee364066f08e63528a57376,Fix lua ldb command log,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_6.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_6.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_6.cpp
314043552b3e0ce5f080d0fd2169d5c32f94a222,"Modules: don't crash when Lua calls a module blocking command.

Lua scripting does not support calling blocking commands, however all
the native Redis commands are flagged as ""s"" (no scripting flag), so
this is not possible at all. With modules there is no such mechanism in
order to flag a command as non callable by the Lua scripting engine,
moreover we cannot trust the modules users from complying all the times:
it is likely that modules will be released to have blocking commands
without such commands being flagged correctly, even if we provide a way to
signal this fact.

This commit attempts to address the problem in a short term way, by
detecting that a module is trying to block in the context of the Lua
scripting engine client, and preventing to do this. The module will
actually believe to block as usually, but what happens is that the Lua
script receives an error immediately, and the background call is ignored
by the Redis engine (if not for the cleanup callbacks, once it
unblocks).

Long term, the more likely solution, is to introduce a new call called
RedisModule_GetClientFlags(), so that a command can detect if the caller
is a Lua script, and return an error, or avoid blocking at all.

Being the blocking API experimental right now, more work is needed in
this regard in order to reach a level well blocking module commands and
all the other Redis subsystems interact peacefully.

Now the effect is like the following:

    127.0.0.1:6379> eval ""redis.call('hello.block',1,5000)"" 0
    (error) ERR Error running script (call to
    f_b5ba35ff97bc1ef23debc4d6e9fd802da187ed53): @user_script:1: ERR
    Blocking module command called from Lua script

This commit fixes issue #4127 in the short term.",[u'https://gitlab.kitware.com/cmake/cmake/issues/4127'],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_7.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_7.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_7.cpp
a3778f3b0f0aacbb34ecc77541615a9eda251443,"Make representClusterNodeFlags() more robust.

This function failed when an internal-only flag was set as an only flag
in a node: the string was trimmed expecting a final comma before
exiting the function, causing a crash. See issue #4142.
Moreover generation of flags representation only needed at DEBUG log
level was always performed: a waste of CPU time. This is fixed as well
by this commit.",[u'https://gitlab.kitware.com/cmake/cmake/issues/4142'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_8.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_8.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_8.cpp
2cdf4cc656cd74aa7c29360b13cf07d3e0e72afb,fix mismatch argument,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_9.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_9.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_9.cpp
7560d347da90dad0ff8b13872aeb48de609d3c9f,Correct proceding -> proceeding typo.,[],src/redis-check-aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_10.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_10.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_10.cpp
43aaf96163ecc32c1d57834bbc1c7029986ae1cb,Markdown generation of Redis Modules API reference improved.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_11.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_11.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_11.cpp
e74f0aa6d1ca4a7d0626125a7d9b5eb9cb713947,"Fix replication of SLAVEOF inside transaction.

In Redis 4.0 replication, with the introduction of PSYNC2, masters and
slaves replicate commands to cascading slaves and to the replication
backlog itself in a different way compared to the past.

Masters actually replicate the effects of client commands.
Slaves just propagate what they receive from masters.

This mechanism can cause problems when the configuration of an instance
is changed from master to slave inside a transaction. For instance
we could send to a master instance the following sequence:

    MULTI
    SLAVEOF 127.0.0.1 0
    EXEC
    SLAVEOF NO ONE

Before the fixes in this commit, the MULTI command used to be propagated
into the replication backlog, however after the SLAVEOF command the
instance is a slave, so the EXEC implementation failed to also propagate
the EXEC command. When the slaves of the above instance reconnected,
they were incrementally synchronized just sending a ""MULTI"". This put
the master client (in the slaves) into MULTI state, breaking the
replication.

Notably even Redis Sentinel uses the above approach in order to guarantee
that configuration changes are always performed together with rewrites
of the configuration and with clients disconnection. Sentiel does:

    MULTI
    SLAVEOF ...
    CONFIG REWRITE
    CLIENT KILL TYPE normal
    EXEC

So this was a really problematic issue. However even with the fix in
this commit, that will add the final EXEC to the replication stream in
case the instance was switched from master to slave during the
transaction, the result would be to increment the slave replication
offset, so a successive reconnection with the new master, will not
permit a successful partial resynchronization: no way the new master can
provide us with the backlog needed, we incremented our offset to a value
that the new master cannot have.

However the EXEC implementation waits to emit the MULTI, so that if the
commands inside the transaction actually do not need to be replicated,
no commands propagation happens at all. From multi.c:

    if (!must_propagate && !(c->cmd->flags & (CMD_READONLY|CMD_ADMIN))) {
	execCommandPropagateMulti(c);
	must_propagate = 1;
    }

The above code is already modified by this commit you are reading.
Now also ADMIN commands do not trigger the emission of MULTI. It is actually
not clear why we do not just check for CMD_WRITE... Probably I wrote it this
way in order to make the code more reliable: better to over-emit MULTI
than not emitting it in time.

So this commit should indeed fix issue #3836 (verified), however it looks
like some reconsideration of this code path is needed in the long term.

BONUS POINT: The reverse bug.

Even in a read only slave ""B"", in a replication setup like:

	A -> B -> C

There are commands without the READONLY nor the ADMIN flag, that are also
not flagged as WRITE commands. An example is just the PING command.

So if we send B the following sequence:

    MULTI
    PING
    SLAVEOF NO ONE
    EXEC

The result will be the reverse bug, where only EXEC is emitted, but not the
previous MULTI. However this apparently does not create problems in practice
but it is yet another acknowledge of the fact some work is needed here
in order to make this code path less surprising.

Note that there are many different approaches we could follow. For instance
MULTI/EXEC blocks containing administrative commands may be allowed ONLY
if all the commands are administrative ones, otherwise they could be
denined. When allowed, the commands could simply never be replicated at all.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3836'],src/multi.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_12.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_12.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_12.cpp
11182a1a58ef6d36f76f7a5e06d0598254b524d9,redis-check-aof: tell users there is a --fix option.,[],src/redis-check-aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_13.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_13.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_13.cpp
fc7ecd8d359160c5b74aa86c09eefdf4e9e2d653,AOF check utility: ability to check files with RDB preamble.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_14.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_14.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_14.cpp
fc7ecd8d359160c5b74aa86c09eefdf4e9e2d653,AOF check utility: ability to check files with RDB preamble.,[],src/redis-check-aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_15.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_15.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_15.cpp
fc7ecd8d359160c5b74aa86c09eefdf4e9e2d653,AOF check utility: ability to check files with RDB preamble.,[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_16.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_16.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_16.cpp
51ffd062d37b370884e21cc70b20264ff4060dc8,Modules: DEBUG DIGEST interface.,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_17.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_17.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_17.cpp
26e638a8e917608d8e75b07e5e941c7a24462c4d,"redis-cli --latency: ability to run non interactively.

This feature was proposed by @rosmo in PR #2643 and later redesigned
in order to fit better with the other options for non-interactive modes
of redis-cli. The idea is basically to allow to collect latency
information in scripts, cron jobs or whateever, just running for a
limited time and then producing a single output.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2643'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_18.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_18.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_18.cpp
f8547e53f0d80b4cd2a84c6d39d1e08a470f0a2c,"Added GEORADIUS(BYMEMBER)_RO variants for read-only operations.

Issue #4084 shows how for a design error, GEORADIUS is a write command
because of the STORE option. Because of this it does not work
on readonly slaves, gets redirected to masters in Redis Cluster even
when the connection is in READONLY mode and so forth.

To break backward compatibility at this stage, with Redis 4.0 to be in
advanced RC state, is problematic for the user base. The API can be
fixed into the unstable branch soon if we'll decide to do so in order to
be more consistent, and reease Redis 5.0 with this incompatibility in
the future. This is still unclear.

However, the ability to scale GEO queries in slaves easily is too
important so this commit adds two read-only variants to the GEORADIUS
and GEORADIUSBYMEMBER command: GEORADIUS_RO and GEORADIUSBYMEMBER_RO.
The commands are exactly as the original commands, but they do not
accept the STORE and STOREDIST options.",[u'https://gitlab.kitware.com/cmake/cmake/issues/4084'],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_19.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_19.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_19.cpp
01a4b9892d0922eeafbb1bfba0f9fa70bf1a2f3b,"HMSET and MSET implementations unified. HSET now variadic.

This is the first step towards getting rid of HMSET which is a command
that does not make much sense once HSET is variadic, and has a saner
return value.",[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_20.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_20.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_20.cpp
365dd037dcc00249c7631caac82c49a9c0c8c0f6,"RDB modules values serialization format version 2.

The original RDB serialization format was not parsable without the
module loaded, becuase the structure was managed only by the module
itself. Moreover RDB is a streaming protocol in the sense that it is
both produce di an append-only fashion, and is also sometimes directly
sent to the socket (in the case of diskless replication).

The fact that modules values cannot be parsed without the relevant
module loaded is a problem in many ways: RDB checking tools must have
loaded modules even for doing things not involving the value at all,
like splitting an RDB into N RDBs by key or alike, or just checking the
RDB for sanity.

In theory module values could be just a blob of data with a prefixed
length in order for us to be able to skip it. However prefixing the values
with a length would mean one of the following:

1. To be able to write some data at a previous offset. This breaks
stremaing.
2. To bufferize values before outputting them. This breaks performances.
3. To have some chunked RDB output format. This breaks simplicity.

Moreover, the above solution, still makes module values a totally opaque
matter, with the fowllowing problems:

1. The RDB check tool can just skip the value without being able to at
least check the general structure. For datasets composed mostly of
modules values this means to just check the outer level of the RDB not
actually doing any checko on most of the data itself.
2. It is not possible to do any recovering or processing of data for which a
module no longer exists in the future, or is unknown.

So this commit implements a different solution. The modules RDB
serialization API is composed if well defined calls to store integers,
floats, doubles or strings. After this commit, the parts generated by
the module API have a one-byte prefix for each of the above emitted
parts, and there is a final EOF byte as well. So even if we don't know
exactly how to interpret a module value, we can always parse it at an
high level, check the overall structure, understand the types used to
store the information, and easily skip the whole value.

The change is backward compatible: older RDB files can be still loaded
since the new encoding has a new RDB type: MODULE_2 (of value 7).
The commit also implements the ability to check RDB files for sanity
taking advantage of the new feature.",[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_21.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_21.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_21.cpp
365dd037dcc00249c7631caac82c49a9c0c8c0f6,"RDB modules values serialization format version 2.

The original RDB serialization format was not parsable without the
module loaded, becuase the structure was managed only by the module
itself. Moreover RDB is a streaming protocol in the sense that it is
both produce di an append-only fashion, and is also sometimes directly
sent to the socket (in the case of diskless replication).

The fact that modules values cannot be parsed without the relevant
module loaded is a problem in many ways: RDB checking tools must have
loaded modules even for doing things not involving the value at all,
like splitting an RDB into N RDBs by key or alike, or just checking the
RDB for sanity.

In theory module values could be just a blob of data with a prefixed
length in order for us to be able to skip it. However prefixing the values
with a length would mean one of the following:

1. To be able to write some data at a previous offset. This breaks
stremaing.
2. To bufferize values before outputting them. This breaks performances.
3. To have some chunked RDB output format. This breaks simplicity.

Moreover, the above solution, still makes module values a totally opaque
matter, with the fowllowing problems:

1. The RDB check tool can just skip the value without being able to at
least check the general structure. For datasets composed mostly of
modules values this means to just check the outer level of the RDB not
actually doing any checko on most of the data itself.
2. It is not possible to do any recovering or processing of data for which a
module no longer exists in the future, or is unknown.

So this commit implements a different solution. The modules RDB
serialization API is composed if well defined calls to store integers,
floats, doubles or strings. After this commit, the parts generated by
the module API have a one-byte prefix for each of the above emitted
parts, and there is a final EOF byte as well. So even if we don't know
exactly how to interpret a module value, we can always parse it at an
high level, check the overall structure, understand the types used to
store the information, and easily skip the whole value.

The change is backward compatible: older RDB files can be still loaded
since the new encoding has a new RDB type: MODULE_2 (of value 7).
The commit also implements the ability to check RDB files for sanity
taking advantage of the new feature.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_22.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_22.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_22.cpp
0a03187ac495c2e0e45711954db1e54448e78a57,"Merge pull request #3659 from cbgbt/cli-elapsed

cli: Only print elapsed time on OUTPUT_STANDARD.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3659'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_23.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_23.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_23.cpp
e498d9ee3ee55c29000ed80914473ac18d32b672,Collect fork() timing info only if fork succeeded.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_24.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_24.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_24.cpp
78211aaaafe999205c4ffda16a43732617c690ea,"redis-cli --bigkeys: show error when TYPE fails.

Close #3993.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3993'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_25.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_25.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_25.cpp
ece658713b659513e2c43a9498da286cafec17dd,"Modules TSC: Improve inter-thread synchronization.

More work to do with server.unixtime and similar. Need to write Helgrind
suppression file in order to suppress the valse positives.",[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_26.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_26.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_26.cpp
3fcf959e609e850a114d4016843e4c991066ebac,"Modules TSC: Release the GIL for all the time we are blocked.

Instead of giving the module background operations just a small time to
run in the beforeSleep() function, we can have the lock released for all
the time we are blocked in the multiplexing syscall.",[],src/modules/helloblock.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_27.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_27.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_27.cpp
275905b3282581208e13ed61c7aca98fbbfc40c4,Modules TSC: Handling of RM_Reply* functions.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_28.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_28.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_28.cpp
e3b8492e83822aa618d084732f8ab997bf41d7f3,"Revert ""Jemalloc updated to 4.4.0.""

This reverts commit 36c1acc222d29e6e2dc9fc25362e4faa471111bd.",[],deps/jemalloc/include/jemalloc/internal/tsd.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_29.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_29.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_29.cpp
e3b8492e83822aa618d084732f8ab997bf41d7f3,"Revert ""Jemalloc updated to 4.4.0.""

This reverts commit 36c1acc222d29e6e2dc9fc25362e4faa471111bd.",[],deps/jemalloc/include/jemalloc/internal/util.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_30.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_30.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_30.cpp
238cebdd5eb0fd0d8f2db87d895a007bc492dcdb,"Check event loop creation return value. Fix #3951.

Normally we never check for OOM conditions inside Redis since the
allocator will always return a pointer or abort the program on OOM
conditons. However we cannot have control on epool_create(), that may
fail for kernel OOM (according to the manual page) even if all the
parameters are correct, so the function aeCreateEventLoop() may indeed
return NULL and this condition must be checked.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3951'],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_31.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_31.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_31.cpp
22be435efe63af749149db4ad9177c0f2515be70,"Fix PSYNC2 incomplete command bug as described in #3899.

This bug was discovered by @kevinmcgehee and constituted a major hidden
bug in the PSYNC2 implementation, caused by the propagation from the
master of incomplete commands to slaves.

The bug had several results:

1. Borrowing from Kevin text in the issue: ""Given that slaves blindly
copy over their master's input into their own replication backlog over
successive read syscalls, it's possible that with large commands or
small TCP buffers, partial commands are present in this buffer. If the
master were to fail before successfully propagating the entire command
to a slave, the slaves will never execute the partial command (since the
client is invalidated) but will copy it to replication backlog which may
relay those invalid bytes to its slaves on PSYNC2, corrupting the
backlog and possibly other valid commands that follow the failover.
Simple command boundaries aren't sufficient to capture this, either,
because in the case of a MULTI/EXEC block, if the master successfully
propagates a subset of the commands but not the EXEC, then the
transaction in the backlog becomes corrupt and could corrupt other
slaves that consume this data.""

2. As identified by @yangsiran later, there is another effect of the
bug. For the same mechanism of the first problem, a slave having another
slave, could receive a full resynchronization request with an already
half-applied command in the backlog. Once the RDB is ready, it will be
sent to the slave, and the replication will continue sending to the
sub-slave the other half of the command, which is not valid.

The fix, designed by @yangsiran and @antirez, and implemented by
@antirez, uses a secondary buffer in order to feed the sub-masters and
update the replication backlog and offsets, only when a given part of
the query buffer is actually *applied* to the state of the instance,
that is, when the command gets processed and the command is not pending
in the Redis transaction buffer because of CLIENT_MULTI state.

Given that now the backlog and offsets representation are in agreement
with the actual processed commands, both issue 1 and 2 should no longer
be possible.

Thanks to @kevinmcgehee, @yangsiran and @oranagra for their work in
identifying and designing a fix for this problem.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3899'],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_32.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_32.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_32.cpp
c5d6f577f0a975c5c7f2e0f28ad9c4c4ec05eded,"Cluster: collect more specific bus messages stats.

First step in order to change Cluster in order to use less messages.
Related to issue #3929.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3929'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_33.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_33.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_33.cpp
b8286d1fc9c1b8c2e17a9e884d94492ba039c53c,"Changes command stats iteration to being dict-based

With the addition of modules, looping over the redisCommandTable
misses any added commands. By moving to dictionary iteration this
is resolved.",[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_34.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_34.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_34.cpp
ffefc9f92d55a45439afe80d6a35615a7cc38758,"Fix modules blocking commands awake delay.

If a thread unblocks a client blocked in a module command, by using the
RedisMdoule_UnblockClient() API, the event loop may not be awaken until
the next timeout of the multiplexing API or the next unrelated I/O
operation on other clients. We actually want the client to be served
ASAP, so a mechanism is needed in order for the unblocking API to inform
Redis that there is a client to serve ASAP.

This commit fixes the issue using the old trick of the pipe: when a
client needs to be unblocked, a byte is written in a pipe. When we run
the list of clients blocked in modules, we consume all the bytes
written in the pipe. Writes and reads are performed inside the context
of the mutex, so no race is possible in which we consume the bytes that
are actually related to an awake request for a client that should still
be put into the list of clients to unblock.

It was verified that after the fix the server handles the blocked
clients with the expected short delay.

Thanks to @dvirsky for understanding there was such a problem and
reporting it.",[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_35.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_35.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_35.cpp
3f9e2322ececcbc5ca284cbd3d0d61c0ef322032,Rax library updated.,[],src/rax.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_36.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_36.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_36.cpp
06263485d46696ba76a653d2b594f3493103c001,Merge branch 'siphash' into unstable,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_37.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_37.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_37.cpp
adeed29a99dcd0efdbfe4dbd5da74e7b01966c67,"Use SipHash hash function to mitigate HashDos attempts.

This change attempts to switch to an hash function which mitigates
the effects of the HashDoS attack (denial of service attack trying
to force data structures to worst case behavior) while at the same time
providing Redis with an hash function that does not expect the input
data to be word aligned, a condition no longer true now that sds.c
strings have a varialbe length header.

Note that it is possible sometimes that even using an hash function
for which collisions cannot be generated without knowing the seed,
special implementation details or the exposure of the seed in an
indirect way (for example the ability to add elements to a Set and
check the return in which Redis returns them with SMEMBERS) may
make the attacker's life simpler in the process of trying to guess
the correct seed, however the next step would be to switch to a
log(N) data structure when too many items in a single bucket are
detected: this seems like an overkill in the case of Redis.

SPEED REGRESION TESTS:

In order to verify that switching from MurmurHash to SipHash had
no impact on speed, a set of benchmarks involving fast insertion
of 5 million of keys were performed.

The result shows Redis with SipHash in high pipelining conditions
to be about 4% slower compared to using the previous hash function.
However this could partially be related to the fact that the current
implementation does not attempt to hash whole words at a time but
reads single bytes, in order to have an output which is endian-netural
and at the same time working on systems where unaligned memory accesses
are a problem.

Further X86 specific optimizations should be tested, the function
may easily get at the same level of MurMurHash2 if a few optimizations
are performed.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_38.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_38.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_38.cpp
9b05aafb50348838f45bfddcd689e7d8d1d3c950,"fix #2883, #2857 pipe fds leak when fork() failed on bg aof rw","[u'https://gitlab.kitware.com/cmake/cmake/issues/2883', u'https://gitlab.kitware.com/cmake/cmake/issues/2857']",src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_39.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_39.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_39.cpp
1f72ec7dad0874c0e5163a21edd345e7e3f92ca1,"Merge pull request #1 from antirez/unstable

update to upstream",[],deps/hiredis/async.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_40.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_40.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_40.cpp
1f72ec7dad0874c0e5163a21edd345e7e3f92ca1,"Merge pull request #1 from antirez/unstable

update to upstream",[],deps/hiredis/hiredis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_41.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_41.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_41.cpp
1f72ec7dad0874c0e5163a21edd345e7e3f92ca1,"Merge pull request #1 from antirez/unstable

update to upstream",[],deps/hiredis/hiredis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_42.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_42.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_42.cpp
1f72ec7dad0874c0e5163a21edd345e7e3f92ca1,"Merge pull request #1 from antirez/unstable

update to upstream",[],deps/hiredis/net.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_43.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_43.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_43.cpp
1f72ec7dad0874c0e5163a21edd345e7e3f92ca1,"Merge pull request #1 from antirez/unstable

update to upstream",[],deps/hiredis/net.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_44.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_44.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_44.cpp
1f72ec7dad0874c0e5163a21edd345e7e3f92ca1,"Merge pull request #1 from antirez/unstable

update to upstream",[],deps/hiredis/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_45.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_45.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_45.cpp
1f72ec7dad0874c0e5163a21edd345e7e3f92ca1,"Merge pull request #1 from antirez/unstable

update to upstream",[],deps/hiredis/sds.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_46.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_46.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_46.cpp
1f72ec7dad0874c0e5163a21edd345e7e3f92ca1,"Merge pull request #1 from antirez/unstable

update to upstream",[],deps/hiredis/test.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_47.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_47.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_47.cpp
27e29f4fe61d822eb23d948bcb72db76c4c887e5,"Jemalloc updated to 4.4.0.

The original jemalloc source tree was modified to:

1. Remove the configure error that prevents nested builds.
2. Insert the Redis private Jemalloc API in order to allow the
Redis fragmentation function to work.",[],deps/jemalloc/include/jemalloc/internal/tsd.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_48.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_48.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_48.cpp
27e29f4fe61d822eb23d948bcb72db76c4c887e5,"Jemalloc updated to 4.4.0.

The original jemalloc source tree was modified to:

1. Remove the configure error that prevents nested builds.
2. Insert the Redis private Jemalloc API in order to allow the
Redis fragmentation function to work.",[],deps/jemalloc/include/jemalloc/internal/util.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_49.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_49.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_49.cpp
17ac46ea78fc3bed81b764d096ec8fb38e3ae3c9,"Add panic() into redisassert.h.

This header file is for libs, like ziplist.c, that we want to leave
almost separted from the core. The panic() calls will be easy to delete
in order to use such files outside, but the debugging info we gain are
very valuable compared to simple assertions where it is not possible to
print debugging info.",[],src/redisassert.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_50.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_50.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_50.cpp
53b8bf2c89ac9607a8bede2868d60cf8b3cbddd6,"serverPanic(): allow printf() alike formatting.

This is of great interest because allows us to print debugging
informations that could be of useful when debugging, like in the
following example:

    serverPanic(""Unexpected encoding for object %d, %d"",
        obj->type, obj->encoding);",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_51.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_51.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_51.cpp
53b8bf2c89ac9607a8bede2868d60cf8b3cbddd6,"serverPanic(): allow printf() alike formatting.

This is of great interest because allows us to print debugging
informations that could be of useful when debugging, like in the
following example:

    serverPanic(""Unexpected encoding for object %d, %d"",
        obj->type, obj->encoding);",[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_52.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_52.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_52.cpp
6ad34a4b789ef69c3cfec4360869248ba884b988,Defrag: not enabled by default. Error on CONFIG SET if not available.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_53.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_53.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_53.cpp
e91f0ea1b3b1fa6237ec6b359a2665ab0f472989,"Defrag: fix comments & code to conform to the Redis code base.

Don't go over 80 cols. Start with captial letter, capital letter afer
point, end comment with a point and so forth. No actual code behavior
touched at all.",[],src/defrag.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_54.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_54.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_54.cpp
173d692bc2e87d476a8ef45b671cf9ac98695c15,"Defrag: activate it only if running modified version of Jemalloc.

This commit also includes minor aesthetic changes like removal of
trailing spaces.",[],src/defrag.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_55.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_55.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_55.cpp
7aa9e6d2ae1d500d8ba900b239207143993ecc3e,active memory defragmentation,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_56.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_56.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_56.cpp
7aa9e6d2ae1d500d8ba900b239207143993ecc3e,active memory defragmentation,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_57.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_57.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_57.cpp
6712bce92c79de5c2caa38e9b597a3fa52fd497f,"deps/hiredis updated to latest version.

Close #3687.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3687'],deps/hiredis/async.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_58.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_58.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_58.cpp
6712bce92c79de5c2caa38e9b597a3fa52fd497f,"deps/hiredis updated to latest version.

Close #3687.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3687'],deps/hiredis/examples/example.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_59.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_59.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_59.cpp
6712bce92c79de5c2caa38e9b597a3fa52fd497f,"deps/hiredis updated to latest version.

Close #3687.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3687'],deps/hiredis/hiredis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_60.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_60.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_60.cpp
6712bce92c79de5c2caa38e9b597a3fa52fd497f,"deps/hiredis updated to latest version.

Close #3687.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3687'],deps/hiredis/hiredis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_61.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_61.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_61.cpp
6712bce92c79de5c2caa38e9b597a3fa52fd497f,"deps/hiredis updated to latest version.

Close #3687.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3687'],deps/hiredis/net.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_62.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_62.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_62.cpp
6712bce92c79de5c2caa38e9b597a3fa52fd497f,"deps/hiredis updated to latest version.

Close #3687.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3687'],deps/hiredis/test.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_63.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_63.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_63.cpp
913070a9e85170e89176e5dc9488263cc7327085,"Geo: fix edge case return values for uniformity.

There were two cases outlined in issue #3512 and PR #3551 where
the Geo API returned unexpected results: empty strings where NULL
replies were expected, or a single null reply where an array was
expected. This violates the Redis principle that Redis replies for
existing keys or elements should be indistinguishable.

This is technically an API breakage so will be merged only into 4.0 and
specified in the changelog in the list of breaking compatibilities, even
if it is not very likely that actual code will be affected, hopefully,
since with the past behavior basically there was to acconut for *both*
the possibilities, and the new behavior is always one of the two, but
in a consistent way.","[u'https://gitlab.kitware.com/cmake/cmake/issues/3512', u'https://gitlab.kitware.com/cmake/cmake/issues/3551']",src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_64.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_64.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_64.cpp
074383f8509daf86d490df967c5f0fca91bf96e9,"Remove first version of ASCII wave, later discarded.",[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_65.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_65.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_65.cpp
06bfeb482d5652e55bdd9d93a9909f26d6c3999a,"Only show Redis logo if logging to stdout / TTY.

You can still force the logo in the normal logs.
For motivations, check issue #3112. For me the reason is that actually
the logo is nice to have in interactive sessions, but inside the logs
kinda loses its usefulness, but for the ability of users to recognize
restarts easily: for this reason the new startup sequence shows a one
liner ASCII ""wave"" so that there is still a bit of visual clue.

Startup logging was modified in order to log events in more obvious
ways, and to log more events. Also certain important informations are
now more easy to parse/grep since they are printed in field=value style.

The option --always-show-logo in redis.conf was added, defaulting to no.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3112'],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_66.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_66.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_66.cpp
90a6f7fc98df849a9890ab6e0da4485457bf60cd,adjustOpenFilesLimit() comment made hopefully more clear.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_67.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_67.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_67.cpp
2988889db141b5d691ac94e0b64b37884030dea8,"Merge pull request #3603 from oranagra/adjustOpenFilesLimit_overflow

fix unsigned int overflow in adjustOpenFilesLimit",[u'https://gitlab.kitware.com/cmake/cmake/issues/3603'],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_68.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_68.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_68.cpp
ce9e36eb01f1b9122ceedc61f00d08ed0a4cfb97,"Merge pull request #3605 from hylepo/unstable

Fixing typo in the usage of redis-benchmark",[u'https://gitlab.kitware.com/cmake/cmake/issues/3605'],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_69.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_69.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_69.cpp
8e390a62ad3b06e0f11813d0c832721f0b676d63,"Hopefully improve code comments for issue #3616.

This commit also contains other changes in order to conform the code to
the Redis core style, specifically 80 chars max per line, smart
conditionals in the same line:

    if (that) do_this();",[u'https://gitlab.kitware.com/cmake/cmake/issues/3616'],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_70.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_70.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_70.cpp
ca4ca5073e394cca3f5c8f8c508803a6d9b2c606,"Merge pull request #3616 from oranagra/stop_aofrw_before_rdbload

CoW improvement, stop AOFRW before flushing and parsing slave RDB",[u'https://gitlab.kitware.com/cmake/cmake/issues/3616'],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_71.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_71.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_71.cpp
87538cb7fe19b5671189442cd604de5d58a856a7,"Switch PFCOUNT to LogLog-Beta algorithm.

The new algorithm provides the same speed with a smaller error for
cardinalities in the range 0-100k. Before switching, the new and old
algorithm behavior was studied in details in the context of
issue #3677. You can find a few graphs and motivations there.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3677'],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_72.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_72.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_72.cpp
c55e3fbae5273d8a6fd5582e44d8745b2b81b7df,"LogLog-Beta Algorithm support within HLL
Config option to use LogLog-Beta Algorithm for Cardinality",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_73.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_73.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_73.cpp
ac61f9062583d67dd43f7d698824464d1e30d84b,"DEBUG: new ""ziplist"" subcommand added. Dumps a ziplist on stdout.

The commit improves ziplistRepr() and adds a new debugging subcommand so
that we can trigger the dump directly from the Redis API.
This command capability was used while investigating issue #3684.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3684'],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_74.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_74.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_74.cpp
ac61f9062583d67dd43f7d698824464d1e30d84b,"DEBUG: new ""ziplist"" subcommand added. Dumps a ziplist on stdout.

The commit improves ziplistRepr() and adds a new debugging subcommand so
that we can trigger the dump directly from the Redis API.
This command capability was used while investigating issue #3684.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3684'],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_75.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_75.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_75.cpp
04542cff92147b9b686a2071c4c53574771f4f88,"Replication: fix the infamous key leakage of writable slaves + EXPIRE.

BACKGROUND AND USE CASEj

Redis slaves are normally write only, however the supprot a ""writable""
mode which is very handy when scaling reads on slaves, that actually
need write operations in order to access data. For instance imagine
having slaves replicating certain Sets keys from the master. When
accessing the data on the slave, we want to peform intersections between
such Sets values. However we don't want to intersect each time: to cache
the intersection for some time often is a good idea.

To do so, it is possible to setup a slave as a writable slave, and
perform the intersection on the slave side, perhaps setting a TTL on the
resulting key so that it will expire after some time.

THE BUG

Problem: in order to have a consistent replication, expiring of keys in
Redis replication is up to the master, that synthesize DEL operations to
send in the replication stream. However slaves logically expire keys
by hiding them from read attempts from clients so that if the master did
not promptly sent a DEL, the client still see logically expired keys
as non existing.

Because slaves don't actively expire keys by actually evicting them but
just masking from the POV of read operations, if a key is created in a
writable slave, and an expire is set, the key will be leaked forever:

1. No DEL will be received from the master, which does not know about
such a key at all.

2. No eviction will be performed by the slave, since it needs to disable
eviction because it's up to masters, otherwise consistency of data is
lost.

THE FIX

In order to fix the problem, the slave should be able to tag keys that
were created in the slave side and have an expire set in some way.

My solution involved using an unique additional dictionary created by
the writable slave only if needed. The dictionary is obviously keyed by
the key name that we need to track: all the keys that are set with an
expire directly by a client writing to the slave are tracked.

The value in the dictionary is a bitmap of all the DBs where such a key
name need to be tracked, so that we can use a single dictionary to track
keys in all the DBs used by the slave (actually this limits the solution
to the first 64 DBs, but the default with Redis is to use 16 DBs).

This solution allows to pay both a small complexity and CPU penalty,
which is zero when the feature is not used, actually. The slave-side
eviction is encapsulated in code which is not coupled with the rest of
the Redis core, if not for the hook to track the keys.

TODO

I'm doing the first smoke tests to see if the feature works as expected:
so far so good. Unit tests should be added before merging into the
4.0 branch.",[],src/expire.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_76.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_76.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_76.cpp
04542cff92147b9b686a2071c4c53574771f4f88,"Replication: fix the infamous key leakage of writable slaves + EXPIRE.

BACKGROUND AND USE CASEj

Redis slaves are normally write only, however the supprot a ""writable""
mode which is very handy when scaling reads on slaves, that actually
need write operations in order to access data. For instance imagine
having slaves replicating certain Sets keys from the master. When
accessing the data on the slave, we want to peform intersections between
such Sets values. However we don't want to intersect each time: to cache
the intersection for some time often is a good idea.

To do so, it is possible to setup a slave as a writable slave, and
perform the intersection on the slave side, perhaps setting a TTL on the
resulting key so that it will expire after some time.

THE BUG

Problem: in order to have a consistent replication, expiring of keys in
Redis replication is up to the master, that synthesize DEL operations to
send in the replication stream. However slaves logically expire keys
by hiding them from read attempts from clients so that if the master did
not promptly sent a DEL, the client still see logically expired keys
as non existing.

Because slaves don't actively expire keys by actually evicting them but
just masking from the POV of read operations, if a key is created in a
writable slave, and an expire is set, the key will be leaked forever:

1. No DEL will be received from the master, which does not know about
such a key at all.

2. No eviction will be performed by the slave, since it needs to disable
eviction because it's up to masters, otherwise consistency of data is
lost.

THE FIX

In order to fix the problem, the slave should be able to tag keys that
were created in the slave side and have an expire set in some way.

My solution involved using an unique additional dictionary created by
the writable slave only if needed. The dictionary is obviously keyed by
the key name that we need to track: all the keys that are set with an
expire directly by a client writing to the slave are tracked.

The value in the dictionary is a bitmap of all the DBs where such a key
name need to be tracked, so that we can use a single dictionary to track
keys in all the DBs used by the slave (actually this limits the solution
to the first 64 DBs, but the default with Redis is to use 16 DBs).

This solution allows to pay both a small complexity and CPU penalty,
which is zero when the feature is not used, actually. The slave-side
eviction is encapsulated in code which is not coupled with the rest of
the Redis core, if not for the hook to track the keys.

TODO

I'm doing the first smoke tests to see if the feature works as expected:
so far so good. Unit tests should be added before merging into the
4.0 branch.",[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_77.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_77.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_77.cpp
3c85a88888bdef5d8d873dd259fded0a5eff29fd,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_78.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_78.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_78.cpp
e5db99ad4acfa22e28056a480b106ff7b06a0120,cli: Only print elapsed time on OUTPUT_STANDARD,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_79.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_79.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_79.cpp
434e6b2da368bbcf4d8aa6153f39e0479deb063b,"PSYNC2: Do not accept WAIT in slave instances.

No longer makes sense since writable slaves only do local writes now:
writes are no longer passed to sub-slaves in the stream.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_80.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_80.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_80.cpp
6eb0c52d4c9f56561eec76db64190f720661efe6,"src/rdb.c: Correct ""whenver"" -> ""whenever"" typo.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_81.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_81.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_81.cpp
6eb720ff2d20d3e739d6214415ca832008ba9dfb,PSYNC2: Minor memory leak reading -NOMASTERLINK master reply fixed.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_82.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_82.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_82.cpp
790310d89460655305bd615bc442eeaf7f0f1b38,Better protocol errors logging.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_83.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_83.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_83.cpp
5b7d42fff32ba4e8cf1f415b104bfec086023a86,"PSYNC2: bugfixing pre release.

1. Master replication offset was cleared after switching configuration
to some other slave, since it was assumed you can't PSYNC after a
switch. Note the case anymore and when we successfully PSYNC we need to
have our offset untouched.

2. Secondary replication ID was not reset to ""000..."" pattern at
startup.

3. Master in error state replying -LOADING or other transient errors
forced the slave to discard the cached master and full resync. This is
now fixed.

4. Better logging of what's happening on failed PSYNCs.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_84.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_84.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_84.cpp
73dd51c04400fdf2518b210bdc581deef1208020,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_85.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_85.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_85.cpp
5b83fa482c1b82995a52c7ae549dbf550cbb0d07,"Merge pull request #3612 from deep011/unstable

fix a possible bug for 'replconf getack'",[u'https://gitlab.kitware.com/cmake/cmake/issues/3612'],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_86.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_86.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_86.cpp
8fb3ad244474612d8ba53a6a7ba715a325538371,Merge branch 'psync2' into unstable,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_87.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_87.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_87.cpp
8fb3ad244474612d8ba53a6a7ba715a325538371,Merge branch 'psync2' into unstable,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_88.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_88.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_88.cpp
8fb3ad244474612d8ba53a6a7ba715a325538371,Merge branch 'psync2' into unstable,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_89.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_89.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_89.cpp
8fb3ad244474612d8ba53a6a7ba715a325538371,Merge branch 'psync2' into unstable,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_90.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_90.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_90.cpp
8fb3ad244474612d8ba53a6a7ba715a325538371,Merge branch 'psync2' into unstable,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_91.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_91.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_91.cpp
e3a61950a212a5e603234f4009e1ec3801d5a423,"when a slave loads an RDB, stop an AOFRW fork before flusing db and parsing rdb file, to avoid a CoW disaster.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_92.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_92.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_92.cpp
13a92a5bb1bed9dc34442613b65d6bc1b43a6b7e,fix a possible bug for 'replconf getack',[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_93.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_93.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_93.cpp
0b57a19c1b852f5387a5126eaea333c4120e0282,"Merge pull request #1 from hylepo/Fixing-typo-in-the-usage-of-redis-benchmark

Fixing typo in the usage of redis-benchmark",[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_94.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_94.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_94.cpp
dbb6cb442a4b432bf1db42a60f4871c4854fa11d,"Update redis-benchmark.c

Fixing typo in the usage of redis-benchmark",[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_95.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_95.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_95.cpp
a1a07225b3963eb251b518737a3f6b59515faaa1,fix unsigned int overflow in adjustOpenFilesLimit,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_96.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_96.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_96.cpp
28c96d73b2e157a37465560bc421280d17005708,"PSYNC2: Save replication ID/offset on RDB file.

This means that stopping a slave and restarting it will still make it
able to PSYNC with the master. Moreover the master itself will retain
its ID/offset, in case it gets turned into a slave, or if a slave will
try to PSYNC with it with an exactly updated offset (otherwise there is
no backlog).

This change was possible thanks to PSYNC v2 that makes saving the current
replication state much simpler.",[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_97.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_97.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_97.cpp
4e5e366ed265f2571124edfa9c2f9eaa0d450c45,PSYNC2: Wrap debugging code with if(0),[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_98.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_98.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_98.cpp
2669fb8364c4c4080b7b75809ca94fc8022151de,"PSYNC2: different improvements to Redis replication.

The gist of the changes is that now, partial resynchronizations between
slaves and masters (without the need of a full resync with RDB transfer
and so forth), work in a number of cases when it was impossible
in the past. For instance:

1. When a slave is promoted to mastrer, the slaves of the old master can
partially resynchronize with the new master.

2. Chained slalves (slaves of slaves) can be moved to replicate to other
slaves or the master itsef, without requiring a full resync.

3. The master itself, after being turned into a slave, is able to
partially resynchronize with the new master, when it joins replication
again.

In order to obtain this, the following main changes were operated:

* Slaves also take a replication backlog, not just masters.

* Same stream replication for all the slaves and sub slaves. The
replication stream is identical from the top level master to its slaves
and is also the same from the slaves to their sub-slaves and so forth.
This means that if a slave is later promoted to master, it has the
same replication backlong, and can partially resynchronize with its
slaves (that were previously slaves of the old master).

* A given replication history is no longer identified by the `runid` of
a Redis node. There is instead a `replication ID` which changes every
time the instance has a new history no longer coherent with the past
one. So, for example, slaves publish the same replication history of
their master, however when they are turned into masters, they publish
a new replication ID, but still remember the old ID, so that they are
able to partially resynchronize with slaves of the old master (up to a
given offset).

* The replication protocol was slightly modified so that a new extended
+CONTINUE reply from the master is able to inform the slave of a
replication ID change.

* REPLCONF CAPA is used in order to notify masters that a slave is able
to understand the new +CONTINUE reply.

* The RDB file was extended with an auxiliary field that is able to
select a given DB after loading in the slave, so that the slave can
continue receiving the replication stream from the point it was
disconnected without requiring the master to insert ""SELECT"" statements.
This is useful in order to guarantee the ""same stream"" property, because
the slave must be able to accumulate an identical backlog.

* Slave pings to sub-slaves are now sent in a special form, when the
top-level master is disconnected, in order to don't interfer with the
replication stream. We just use out of band ""\n"" bytes as in other parts
of the Redis protocol.

An old design document is available here:

https://gist.github.com/antirez/ae068f95c0d084891305

However the implementation is not identical to the description because
during the work to implement it, different changes were needed in order
to make things working well.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_99.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_99.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_99.cpp
2669fb8364c4c4080b7b75809ca94fc8022151de,"PSYNC2: different improvements to Redis replication.

The gist of the changes is that now, partial resynchronizations between
slaves and masters (without the need of a full resync with RDB transfer
and so forth), work in a number of cases when it was impossible
in the past. For instance:

1. When a slave is promoted to mastrer, the slaves of the old master can
partially resynchronize with the new master.

2. Chained slalves (slaves of slaves) can be moved to replicate to other
slaves or the master itsef, without requiring a full resync.

3. The master itself, after being turned into a slave, is able to
partially resynchronize with the new master, when it joins replication
again.

In order to obtain this, the following main changes were operated:

* Slaves also take a replication backlog, not just masters.

* Same stream replication for all the slaves and sub slaves. The
replication stream is identical from the top level master to its slaves
and is also the same from the slaves to their sub-slaves and so forth.
This means that if a slave is later promoted to master, it has the
same replication backlong, and can partially resynchronize with its
slaves (that were previously slaves of the old master).

* A given replication history is no longer identified by the `runid` of
a Redis node. There is instead a `replication ID` which changes every
time the instance has a new history no longer coherent with the past
one. So, for example, slaves publish the same replication history of
their master, however when they are turned into masters, they publish
a new replication ID, but still remember the old ID, so that they are
able to partially resynchronize with slaves of the old master (up to a
given offset).

* The replication protocol was slightly modified so that a new extended
+CONTINUE reply from the master is able to inform the slave of a
replication ID change.

* REPLCONF CAPA is used in order to notify masters that a slave is able
to understand the new +CONTINUE reply.

* The RDB file was extended with an auxiliary field that is able to
select a given DB after loading in the slave, so that the slave can
continue receiving the replication stream from the point it was
disconnected without requiring the master to insert ""SELECT"" statements.
This is useful in order to guarantee the ""same stream"" property, because
the slave must be able to accumulate an identical backlog.

* Slave pings to sub-slaves are now sent in a special form, when the
top-level master is disconnected, in order to don't interfer with the
replication stream. We just use out of band ""\n"" bytes as in other parts
of the Redis protocol.

An old design document is available here:

https://gist.github.com/antirez/ae068f95c0d084891305

However the implementation is not identical to the description because
during the work to implement it, different changes were needed in order
to make things working well.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_100.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_100.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_100.cpp
2669fb8364c4c4080b7b75809ca94fc8022151de,"PSYNC2: different improvements to Redis replication.

The gist of the changes is that now, partial resynchronizations between
slaves and masters (without the need of a full resync with RDB transfer
and so forth), work in a number of cases when it was impossible
in the past. For instance:

1. When a slave is promoted to mastrer, the slaves of the old master can
partially resynchronize with the new master.

2. Chained slalves (slaves of slaves) can be moved to replicate to other
slaves or the master itsef, without requiring a full resync.

3. The master itself, after being turned into a slave, is able to
partially resynchronize with the new master, when it joins replication
again.

In order to obtain this, the following main changes were operated:

* Slaves also take a replication backlog, not just masters.

* Same stream replication for all the slaves and sub slaves. The
replication stream is identical from the top level master to its slaves
and is also the same from the slaves to their sub-slaves and so forth.
This means that if a slave is later promoted to master, it has the
same replication backlong, and can partially resynchronize with its
slaves (that were previously slaves of the old master).

* A given replication history is no longer identified by the `runid` of
a Redis node. There is instead a `replication ID` which changes every
time the instance has a new history no longer coherent with the past
one. So, for example, slaves publish the same replication history of
their master, however when they are turned into masters, they publish
a new replication ID, but still remember the old ID, so that they are
able to partially resynchronize with slaves of the old master (up to a
given offset).

* The replication protocol was slightly modified so that a new extended
+CONTINUE reply from the master is able to inform the slave of a
replication ID change.

* REPLCONF CAPA is used in order to notify masters that a slave is able
to understand the new +CONTINUE reply.

* The RDB file was extended with an auxiliary field that is able to
select a given DB after loading in the slave, so that the slave can
continue receiving the replication stream from the point it was
disconnected without requiring the master to insert ""SELECT"" statements.
This is useful in order to guarantee the ""same stream"" property, because
the slave must be able to accumulate an identical backlog.

* Slave pings to sub-slaves are now sent in a special form, when the
top-level master is disconnected, in order to don't interfer with the
replication stream. We just use out of band ""\n"" bytes as in other parts
of the Redis protocol.

An old design document is available here:

https://gist.github.com/antirez/ae068f95c0d084891305

However the implementation is not identical to the description because
during the work to implement it, different changes were needed in order
to make things working well.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_101.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_101.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_101.cpp
2669fb8364c4c4080b7b75809ca94fc8022151de,"PSYNC2: different improvements to Redis replication.

The gist of the changes is that now, partial resynchronizations between
slaves and masters (without the need of a full resync with RDB transfer
and so forth), work in a number of cases when it was impossible
in the past. For instance:

1. When a slave is promoted to mastrer, the slaves of the old master can
partially resynchronize with the new master.

2. Chained slalves (slaves of slaves) can be moved to replicate to other
slaves or the master itsef, without requiring a full resync.

3. The master itself, after being turned into a slave, is able to
partially resynchronize with the new master, when it joins replication
again.

In order to obtain this, the following main changes were operated:

* Slaves also take a replication backlog, not just masters.

* Same stream replication for all the slaves and sub slaves. The
replication stream is identical from the top level master to its slaves
and is also the same from the slaves to their sub-slaves and so forth.
This means that if a slave is later promoted to master, it has the
same replication backlong, and can partially resynchronize with its
slaves (that were previously slaves of the old master).

* A given replication history is no longer identified by the `runid` of
a Redis node. There is instead a `replication ID` which changes every
time the instance has a new history no longer coherent with the past
one. So, for example, slaves publish the same replication history of
their master, however when they are turned into masters, they publish
a new replication ID, but still remember the old ID, so that they are
able to partially resynchronize with slaves of the old master (up to a
given offset).

* The replication protocol was slightly modified so that a new extended
+CONTINUE reply from the master is able to inform the slave of a
replication ID change.

* REPLCONF CAPA is used in order to notify masters that a slave is able
to understand the new +CONTINUE reply.

* The RDB file was extended with an auxiliary field that is able to
select a given DB after loading in the slave, so that the slave can
continue receiving the replication stream from the point it was
disconnected without requiring the master to insert ""SELECT"" statements.
This is useful in order to guarantee the ""same stream"" property, because
the slave must be able to accumulate an identical backlog.

* Slave pings to sub-slaves are now sent in a special form, when the
top-level master is disconnected, in order to don't interfer with the
replication stream. We just use out of band ""\n"" bytes as in other parts
of the Redis protocol.

An old design document is available here:

https://gist.github.com/antirez/ae068f95c0d084891305

However the implementation is not identical to the description because
during the work to implement it, different changes were needed in order
to make things working well.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_102.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_102.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_102.cpp
2669fb8364c4c4080b7b75809ca94fc8022151de,"PSYNC2: different improvements to Redis replication.

The gist of the changes is that now, partial resynchronizations between
slaves and masters (without the need of a full resync with RDB transfer
and so forth), work in a number of cases when it was impossible
in the past. For instance:

1. When a slave is promoted to mastrer, the slaves of the old master can
partially resynchronize with the new master.

2. Chained slalves (slaves of slaves) can be moved to replicate to other
slaves or the master itsef, without requiring a full resync.

3. The master itself, after being turned into a slave, is able to
partially resynchronize with the new master, when it joins replication
again.

In order to obtain this, the following main changes were operated:

* Slaves also take a replication backlog, not just masters.

* Same stream replication for all the slaves and sub slaves. The
replication stream is identical from the top level master to its slaves
and is also the same from the slaves to their sub-slaves and so forth.
This means that if a slave is later promoted to master, it has the
same replication backlong, and can partially resynchronize with its
slaves (that were previously slaves of the old master).

* A given replication history is no longer identified by the `runid` of
a Redis node. There is instead a `replication ID` which changes every
time the instance has a new history no longer coherent with the past
one. So, for example, slaves publish the same replication history of
their master, however when they are turned into masters, they publish
a new replication ID, but still remember the old ID, so that they are
able to partially resynchronize with slaves of the old master (up to a
given offset).

* The replication protocol was slightly modified so that a new extended
+CONTINUE reply from the master is able to inform the slave of a
replication ID change.

* REPLCONF CAPA is used in order to notify masters that a slave is able
to understand the new +CONTINUE reply.

* The RDB file was extended with an auxiliary field that is able to
select a given DB after loading in the slave, so that the slave can
continue receiving the replication stream from the point it was
disconnected without requiring the master to insert ""SELECT"" statements.
This is useful in order to guarantee the ""same stream"" property, because
the slave must be able to accumulate an identical backlog.

* Slave pings to sub-slaves are now sent in a special form, when the
top-level master is disconnected, in order to don't interfer with the
replication stream. We just use out of band ""\n"" bytes as in other parts
of the Redis protocol.

An old design document is available here:

https://gist.github.com/antirez/ae068f95c0d084891305

However the implementation is not identical to the description because
during the work to implement it, different changes were needed in order
to make things working well.",[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_103.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_103.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_103.cpp
c7a4e694ad3689d934897b0d2c37144d7b2d0b97,"SWAPDB command.

This new command swaps two Redis databases, so that immediately all the
clients connected to a given DB will see the data of the other DB, and
the other way around. Example:

    SWAPDB 0 1

This will swap DB 0 with DB 1. All the clients connected with DB 0 will
immediately see the new data, exactly like all the clients connected
with DB 1 will see the data that was formerly of DB 0.

MOTIVATION AND HISTORY
---

The command was recently demanded by Pedro Melo, but was suggested in
the past multiple times, and always refused by me.

The reason why it was asked: Imagine you have clients operating in DB 0.
At the same time, you create a new version of the dataset in DB 1.
When the new version of the dataset is available, you immediately want
to swap the two views, so that the clients will transparently use the
new version of the data. At the same time you'll likely destroy the
DB 1 dataset (that contains the old data) and start to build a new
version, to repeat the process.

This is an interesting pattern, but the reason why I always opposed to
implement this, was that FLUSHDB was a blocking command in Redis before
Redis 4.0 improvements. Now we have FLUSHDB ASYNC that releases the
old data in O(1) from the point of view of the client, to reclaim memory
incrementally in a different thread.

At this point, the pattern can really be supported without latency
spikes, so I'm providing this implementation for the users to comment.
In case a very compelling argument will be made against this new command
it may be removed.

BEHAVIOR WITH BLOCKING OPERATIONS
---

If a client is blocking for a list in a given DB, after the swap it will
still be blocked in the same DB ID, since this is the most logical thing
to do: if I was blocked for a list push to list ""foo"", even after the
swap I want still a LPUSH to reach the key ""foo"" in the same DB in order
to unblock.

However an interesting thing happens when a client is, for instance,
blocked waiting for new elements in list ""foo"" of DB 0. Then the DB
0 and 1 are swapped with SWAPDB. However the DB 1 happened to have
a list called ""foo"" containing elements. When this happens, this
implementation can correctly unblock the client.

It is possible that there are subtle corner cases that are not covered
in the implementation, but since the command is self-contained from the
POV of the implementation and the Redis core, it cannot cause anything
bad if not used.

Tests and documentation are yet to be provided.",[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_104.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_104.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_104.cpp
a3b3ca7c2191cbe09750e2eb45b856b8cbbaa831,Modules: use RedisModule_AbortBlock() in the example.,[],src/modules/helloblock.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_105.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_105.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_105.cpp
553aa0e259a5b2c5f53dbc322a94b8f6930bc537,module.c: trim comment to 80 cols.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_106.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_106.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_106.cpp
3dc84c530063e2ebd4f975e4066dd834cd6cbe9f,"Modules: API to save/load single precision floating point numbers.

When double precision is not needed, to take 2x space in the
serialization is not good.",[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_107.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_107.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_107.cpp
a1b1fd4f392c59c5fc194e66856e1cb8d6a4f932,Modules: API to log from module I/O callbacks.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_108.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_108.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_108.cpp
2564031a1542baf354d4138a12f1d66ba5743ce5,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_109.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_109.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_109.cpp
2564031a1542baf354d4138a12f1d66ba5743ce5,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/modules/testmodule.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_110.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_110.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_110.cpp
6e866ee05e49ab93e626b5a576e4c0f28cca71f0,"Merge pull request #3511 from dvirsky/create_string_printf

added RM_CreateStringPrintf",[u'https://gitlab.kitware.com/cmake/cmake/issues/3511'],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_111.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_111.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_111.cpp
6e866ee05e49ab93e626b5a576e4c0f28cca71f0,"Merge pull request #3511 from dvirsky/create_string_printf

added RM_CreateStringPrintf",[u'https://gitlab.kitware.com/cmake/cmake/issues/3511'],src/modules/testmodule.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_112.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_112.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_112.cpp
a91650fc57077f53eac658d2da452bcf10d14ee6,added RM_CreateStringPrintf,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_113.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_113.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_113.cpp
a91650fc57077f53eac658d2da452bcf10d14ee6,added RM_CreateStringPrintf,[],src/modules/testmodule.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_114.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_114.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_114.cpp
e565632e599bd1801abca2359453feac51312b28,Child -> Parent pipe for COW info transferring.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_115.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_115.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_115.cpp
e565632e599bd1801abca2359453feac51312b28,Child -> Parent pipe for COW info transferring.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_116.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_116.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_116.cpp
e565632e599bd1801abca2359453feac51312b28,Child -> Parent pipe for COW info transferring.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_117.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_117.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_117.cpp
e1eccf9a6be88c93b71e28f24ad7e14bef434142,zmalloc: Make fp var non local to fix build.,[],src/zmalloc.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_118.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_118.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_118.cpp
945a2f948eb518090325b0ceab92588a905e0f92,"zmalloc: zmalloc_get_smap_bytes_by_field() modified to work for any PID.

The goal is to get copy-on-write amount of the child from the parent.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_119.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_119.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_119.cpp
945a2f948eb518090325b0ceab92588a905e0f92,"zmalloc: zmalloc_get_smap_bytes_by_field() modified to work for any PID.

The goal is to get copy-on-write amount of the child from the parent.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_120.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_120.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_120.cpp
945a2f948eb518090325b0ceab92588a905e0f92,"zmalloc: zmalloc_get_smap_bytes_by_field() modified to work for any PID.

The goal is to get copy-on-write amount of the child from the parent.",[],src/zmalloc.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_121.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_121.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_121.cpp
8a00ffc0e6b366220f199f74690892a80734383d,Surround allocator name with quotes in MEMORY DOCTOR output.,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_122.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_122.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_122.cpp
44e714a59c3d65b03dc19486e133cd2a01ddff21,MEMORY DOCTOR initial implementation.,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_123.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_123.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_123.cpp
309c2bcd1bf00ac6a224a76aad9c05733d2f4a18,add zmalloc used mem to DEBUG SDSLEN,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_124.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_124.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_124.cpp
78f35f8d2cff306d943366a5c05df9e75b0f028f,Memory related subcommands of DEBUG moved to MEMORY.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_125.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_125.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_125.cpp
78f35f8d2cff306d943366a5c05df9e75b0f028f,Memory related subcommands of DEBUG moved to MEMORY.,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_126.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_126.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_126.cpp
123891dbbf34026c51f1298f7fd6c69a4a3fd8d0,Group MEMORY command related APIs together in the source code.,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_127.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_127.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_127.cpp
e9629e148bb445474e172134c1bc0d248adf2454,MEMORY command: HELP + dataset percentage (like in INFO).,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_128.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_128.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_128.cpp
e9629e148bb445474e172134c1bc0d248adf2454,MEMORY command: HELP + dataset percentage (like in INFO).,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_129.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_129.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_129.cpp
5443726d4df2ccd93c29bbe1977881dde30eeeba,"MEMORY USAGE: SAMPLES option added + fixes to size computation.

The new SAMPLES option is added, defaulting to 5, and with 0 being a
special value to scan the whole set of elements.

Fixes to the object size computation were made since the original PR
assumed data structures still contaning robj structures, while now after
the lazyfree changes, are all SDS strings.",[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_130.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_130.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_130.cpp
7229af38988edee95634d5c1289ebee1a2b5fc25,INFO: new memory reporting fields added.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_131.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_131.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_131.cpp
be5439bde3338fadaa5f84afbcc0078d0dbdb44d,MEMORY OVERHEAD refactored into a generic API.,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_132.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_132.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_132.cpp
afcbcc0e58749ebbebcd595c120d17a0e3dbb82e,"dict.c: introduce dictUnlink().

Notes by @antirez:

This patch was picked from a larger commit by Oran and adapted to change
the API a bit. The basic idea is to avoid double lookups when there is
to use the value of the deleted entry.

BEFORE:

    entry = dictFind( ... ); /* 1st lookup. */
    /* Do somethjing with the entry. */
    dictDelete(...);         /* 2nd lookup. */

AFTER:

    entry = dictUnlink( ... ); /* 1st lookup. */
    /* Do somethjing with the entry. */
    dictFreeUnlinkedEntry(entry); /* No lookups!. */",[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_133.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_133.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_133.cpp
8c84c962cfb6359401c2df92f79d7e848a34802f,"MEMORY OVERHEAD implemented (using Oran Agra initial implementation).

This code was extracted from @oranagra PR #3223 and modified in order
to provide only certain amounts of information compared to the original
code. It was also moved from DEBUG to the newly introduced MEMORY
command. Thanks to Oran for the implementation and the PR.

It implements detailed memory usage stats that can be useful in both
provisioning and troubleshooting memory usage in Redis.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3223'],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_134.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_134.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_134.cpp
89dec6921d8fa0ffa0226b9f4d99f373d4d16cfd,"objectComputeSize(): estimate collections sampling N elements.

For most tasks, we need the memory estimation to be O(1) by default.
This commit also implements an initial MEMORY command.
Note that objectComputeSize() takes the number of samples to check as
argument, so MEMORY should be able to get the sample size as option
to make precision VS CPU tradeoff tunable.

Related to: PR #3223.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3223'],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_135.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_135.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_135.cpp
d680eb6dbdf2d2030cb96edfb089be1e2a775ac1,"Merge pull request #3492 from wyxustcsa09/fix-memory

fix memory error on module unload",[u'https://gitlab.kitware.com/cmake/cmake/issues/3492'],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_136.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_136.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_136.cpp
c6dc8d5288c3196179b20479346bc08df70afa7a,Merge branch 'unstable' of github.com:antirez/redis into unstable,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_137.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_137.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_137.cpp
c6dc8d5288c3196179b20479346bc08df70afa7a,Merge branch 'unstable' of github.com:antirez/redis into unstable,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_138.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_138.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_138.cpp
c6dc8d5288c3196179b20479346bc08df70afa7a,Merge branch 'unstable' of github.com:antirez/redis into unstable,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_139.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_139.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_139.cpp
c6dc8d5288c3196179b20479346bc08df70afa7a,Merge branch 'unstable' of github.com:antirez/redis into unstable,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_140.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_140.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_140.cpp
c6dc8d5288c3196179b20479346bc08df70afa7a,Merge branch 'unstable' of github.com:antirez/redis into unstable,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_141.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_141.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_141.cpp
3793afa0ba4a214c1e25ed74309d0594e7a1490c,Merge branch 'aofrdb' into unstable,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_142.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_142.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_142.cpp
3793afa0ba4a214c1e25ed74309d0594e7a1490c,Merge branch 'aofrdb' into unstable,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_143.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_143.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_143.cpp
3793afa0ba4a214c1e25ed74309d0594e7a1490c,Merge branch 'aofrdb' into unstable,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_144.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_144.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_144.cpp
f9624813aff019f95e370524152d130d22ee37f3,"fix the fix for the TCP binding.

This commit attempts to fix a problem with PR #3467.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3467'],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_145.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_145.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_145.cpp
92038286e8c047966f779e8d7eefa6d2786bfa43,fix tcp binding when IPv6 is unsupported,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_146.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_146.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_146.cpp
6211e77ab643b6370a0b3cc2a07946ce31d6ad69,crash log - improve code dump with more info and called symbols.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_147.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_147.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_147.cpp
f9c9b4bf4c40820350bf037d6c33f28092b70423,fix memory error on module unload,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_148.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_148.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_148.cpp
24811fcb1b824b4f0e115ce2713f89f85cd006b9,crash log - add hex dump of function code,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_149.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_149.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_149.cpp
ed6a4517f583c44da1559768e238d71a2a4667b9,dict.c benchmark improvements.,[],src/dict.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_150.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_150.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_150.cpp
1074f73629daab5937218ebac264704385fca8a3,dict.c benchmark: take optional count argument.,[],src/dict.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_151.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_151.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_151.cpp
91a59e03a8be94cc8176637ccee4b0c92e6d5f58,dict.c benchmark.,[],src/dict.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_152.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_152.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_152.cpp
543e25efa6e25e96f976f68ed16aa0c2ff6fa91b,RDB AOF preamble: WIP 4 (Mixed RDB/AOF loading).,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_153.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_153.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_153.cpp
f1c32f0dcbe850ccc057ee1fd834c7b4f3eb0aff,RDB AOF preamble: WIP 3 (RDB loading refactoring).,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_154.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_154.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_154.cpp
feda52381de20a6ac8ec993d20fdbaca863c0a75,RDB AOF preamble: WIP 2.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_155.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_155.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_155.cpp
4426cb11e28dd35c08ac45282fb2a7a42a7638af,RDB AOF preamble: WIP 1.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_156.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_156.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_156.cpp
4426cb11e28dd35c08ac45282fb2a7a42a7638af,RDB AOF preamble: WIP 1.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_157.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_157.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_157.cpp
c5414cef71c4ff1501ee62cbdfbb6cec52ca4296,"Merge pull request #3429 from guoxiao/warning

Use the standard predefined identifier __func__ (since C99)",[u'https://gitlab.kitware.com/cmake/cmake/issues/3429'],src/debugmacro.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_158.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_158.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_158.cpp
4bd72ab729135a4cde76bffe0fb119d9aeb72672,"Use the standard predefined identifier __func__ (since C99)

Fix warning: ISO C does not support '__FUNCTION__' predefined identifier
[-Wpedantic]",[],src/debugmacro.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_159.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_159.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_159.cpp
a81a92ca2ceba364f4bb51efde9284d939e7ff47,"Security: Cross Protocol Scripting protection.

This is an attempt at mitigating problems due to cross protocol
scripting, an attack targeting services using line oriented protocols
like Redis that can accept HTTP requests as valid protocol, by
discarding the invalid parts and accepting the payloads sent, for
example, via a POST request.

For this to be effective, when we detect POST and Host: and terminate
the connection asynchronously, the networking code was modified in order
to never process further input. It was later verified that in a
pipelined request containing a POST command, the successive commands are
not executed.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_160.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_160.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_160.cpp
7829e4ed2c4cda26a9891216ecf97c0b6e637195,"Modules: StringAppendBuffer() and ability to retain strings.

RedisModule_StringRetain() allows, when automatic memory management is
on, to keep string objects living after the callback returns. Can also
be used in order to use Redis reference counting of objects inside
modules.

The reason why this is useful is that sometimes when implementing new
data types we want to reference RedisModuleString objects inside the
module private data structures, so those string objects must be valid
after the callback returns even if not referenced inside the Redis key
space.",[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_161.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_161.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_161.cpp
d982f443727bb226652d5c6a8320ed1962df1727,Fix a bug to delay bgsave while AOF rewrite in progress for replication,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_162.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_162.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_162.cpp
9d524114eda67dedc38a9f97c9d5f3a5c3747829,"Update linenoise to fix insecure redis-cli history file creation.

The problem was fixed in antirez/linenoise repository applying a patch
contributed by @lamby. Here the new version is updated in the Redis
source tree.

Close #1418
Close #3322","[u'https://gitlab.kitware.com/cmake/cmake/issues/1418', u'https://gitlab.kitware.com/cmake/cmake/issues/3322']",deps/linenoise/linenoise.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_163.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_163.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_163.cpp
55385f99debddb23da8a8045273c88b50be24c0f,"Ability of slave to announce arbitrary ip/port to master.

This feature is useful, especially in deployments using Sentinel in
order to setup Redis HA, where the slave is executed with NAT or port
forwarding, so that the auto-detected port/ip addresses, as listed in
the ""INFO replication"" output of the master, or as provided by the
""ROLE"" command, don't match the real addresses at which the slave is
reachable for connections.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_164.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_164.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_164.cpp
55385f99debddb23da8a8045273c88b50be24c0f,"Ability of slave to announce arbitrary ip/port to master.

This feature is useful, especially in deployments using Sentinel in
order to setup Redis HA, where the slave is executed with NAT or port
forwarding, so that the auto-detected port/ip addresses, as listed in
the ""INFO replication"" output of the master, or as provided by the
""ROLE"" command, don't match the real addresses at which the slave is
reachable for connections.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_165.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_165.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_165.cpp
55385f99debddb23da8a8045273c88b50be24c0f,"Ability of slave to announce arbitrary ip/port to master.

This feature is useful, especially in deployments using Sentinel in
order to setup Redis HA, where the slave is executed with NAT or port
forwarding, so that the auto-detected port/ip addresses, as listed in
the ""INFO replication"" output of the master, or as provided by the
""ROLE"" command, don't match the real addresses at which the slave is
reachable for connections.",[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_166.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_166.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_166.cpp
03f5b508e5e939c941fb0c456b0f48b8e7a2c657,"Replication: when possible start RDB saving ASAP.

In a previous commit the replication code was changed in order to
centralize the BGSAVE for replication trigger in replicationCron(),
however after further testings, the 1 second delay imposed by this
change is not acceptable.

So now the BGSAVE is only delayed if the AOF rewriting process is
active. However past comments made sure that replicationCron() is always
able to trigger the BGSAVE when needed, making the code generally more
robust.

The new code is more similar to the initial @oranagra patch where the
BGSAVE was delayed only if an AOF rewrite was in progress.

Trivia: delaying the BGSAVE uncovered a minor Sentinel issue that is now
fixed.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_167.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_167.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_167.cpp
0a628e51025c4307c70cb00094dff9cdd1732f31,"Avoid simultaneous RDB and AOF child process.

This patch, written in collaboration with Oran Agra (@oranagra) is a companion
to 780a8b1. Together the two patches should avoid that the AOF and RDB saving
processes can be spawned at the same time. Previously conditions that
could lead to two saving processes at the same time were:

1. When AOF is enabled via CONFIG SET and an RDB saving process is
   already active.

2. When the SYNC command decides to start an RDB saving process ASAP in
   order to serve a new slave that cannot partially resynchronize (but
   only if we have a disk target for replication, for diskless
   replication there is not such a problem).

Condition ""1"" is not very severe but ""2"" can happen often and is
definitely good at degrading Redis performances in an unexpected way.

The two commits have the effect of always spawning RDB savings for
replication in replicationCron() instead of attempting to start an RDB
save synchronously. Moreover when a BGSAVE or AOF rewrite must be
performed, they are instead just postponed using flags that will try to
perform such operations ASAP.

Finally the BGSAVE command was modified in order to accept a SCHEDULE
option so that if an AOF rewrite is in progress, when this option is
given, the command no longer returns an error, but instead schedules an
RDB rewrite operation for when it will be possible to start it.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_168.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_168.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_168.cpp
0a628e51025c4307c70cb00094dff9cdd1732f31,"Avoid simultaneous RDB and AOF child process.

This patch, written in collaboration with Oran Agra (@oranagra) is a companion
to 780a8b1. Together the two patches should avoid that the AOF and RDB saving
processes can be spawned at the same time. Previously conditions that
could lead to two saving processes at the same time were:

1. When AOF is enabled via CONFIG SET and an RDB saving process is
   already active.

2. When the SYNC command decides to start an RDB saving process ASAP in
   order to serve a new slave that cannot partially resynchronize (but
   only if we have a disk target for replication, for diskless
   replication there is not such a problem).

Condition ""1"" is not very severe but ""2"" can happen often and is
definitely good at degrading Redis performances in an unexpected way.

The two commits have the effect of always spawning RDB savings for
replication in replicationCron() instead of attempting to start an RDB
save synchronously. Moreover when a BGSAVE or AOF rewrite must be
performed, they are instead just postponed using flags that will try to
perform such operations ASAP.

Finally the BGSAVE command was modified in order to accept a SCHEDULE
option so that if an AOF rewrite is in progress, when this option is
given, the command no longer returns an error, but instead schedules an
RDB rewrite operation for when it will be possible to start it.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_169.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_169.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_169.cpp
780a8b1d766daa6504f701bf09f6a4938179ba66,"Replication: start BGSAVE for replication always in replicationCron().

This makes the replication code conceptually simpler by removing the
synchronous BGSAVE trigger in syncCommand(). This also means that
socket and disk BGSAVE targets are handled by the same code.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_170.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_170.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_170.cpp
a8e2d0849e2a40f8bec14cd1b7ff170c17f772c3,"LFU: Initial naive eviction cycle.

It is possible to get better results by using the pool like in the LRU
case. Also from tests during the morning I believe the current
implementation has issues in the frequency decay function that should
decrease the counter at periodic intervals.",[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_171.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_171.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_171.cpp
b8450d7cc515a55f0e1278f70806c12cb6d9fa58,redis-cli LRU test mode: remove newline from key names.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_172.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_172.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_172.cpp
5d07984c5d48d6253ea5884d69da3f06cdc90f1b,"LFU: Redis object level implementation.

Implementation of LFU maxmemory policy for anything related to Redis
objects. Still no actual eviction implemented.",[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_173.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_173.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_173.cpp
f50dc38bc29373b0f74db043cdb200995a324cf3,LRU simulator: fix new entry creation.,[],utils/lru/lfu-simulation.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_174.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_174.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_174.cpp
e423f76e75bea83106c271b56d516c20cf74a16a,"LRU: Make cross-database choices for eviction.

The LRU eviction code used to make local choices: for each DB visited it
selected the best key to evict. This was repeated for each DB. However
this means that there could be DBs with very frequently accessed keys
that are targeted by the LRU algorithm while there were other DBs with
many better candidates to expire.

This commit attempts to fix this problem for the LRU policy. However the
TTL policy is still not fixed by this commit. The TTL policy will be
fixed in a successive commit.

This is an initial (partial because of TTL policy) fix for issue #2647.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2647'],src/evict.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_175.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_175.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_175.cpp
2a1247309a63dc5a0e1593a3a89b78c0e17645d2,"redis-benchmark: new option to show server errors on stdout.

Disabled by default, can be activated with -e. Maybe the reverse was
more safe but departs from the past behavior.",[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_176.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_176.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_176.cpp
eee878cbc5c6c02e2e3e4073d71de2c970305676,"redis_check_rdb_main(): create shared objects only if needed.

Otherwise Valgrind will complain a memory leak under certain tests where
RDB checking is invoked from within Redis.",[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_177.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_177.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_177.cpp
b46239e58b00774d121de89e0e033b2ed3181eb0,Expire and LRU related code moved into different files.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_178.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_178.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_178.cpp
b46239e58b00774d121de89e0e033b2ed3181eb0,Expire and LRU related code moved into different files.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_179.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_179.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_179.cpp
ef6a4df29c17e3c79a1e9b328fe3e2d1f2a9df39,"redis-cli: check SELECT reply type just in state updated.

In issues #3361 / #3365 a problem was reported / fixed with redis-cli
not updating correctly the current DB on error after SELECT.

In theory this bug was fixed in 0042fb0e, but actually the commit only
fixed the prompt updating, not the fact the state was set in a wrong
way.

This commit removes the check in the prompt update, now that hopefully
it is the state that is correct, there is no longer need for this check.","[u'https://gitlab.kitware.com/cmake/cmake/issues/3361', u'https://gitlab.kitware.com/cmake/cmake/issues/3365']",src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_180.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_180.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_180.cpp
b2cc8bccdb8caa52e112e52231b1e591f569c426,"CONFIG GET is now no longer case sensitive.

Like CONFIG SET always was. Close #3369.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3369'],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_181.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_181.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_181.cpp
7e220a964afdcb18bb660e898bc74a727a2a5848,In Redis RDB check: more details in error reportings.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_182.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_182.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_182.cpp
e697153d18531e6b12d110bc0c57658ae686fb08,In Redis RDB check: log decompression errors.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_183.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_183.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_183.cpp
e697153d18531e6b12d110bc0c57658ae686fb08,In Redis RDB check: log decompression errors.,[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_184.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_184.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_184.cpp
df3c69e89eeea31245d2d4759589be216ad0b65f,In Redis RDB check: log object type on error.,[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_185.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_185.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_185.cpp
2ab70971783c31ecd01c539146026d6a8666201b,In Redis RDB check: minor output message changes.,[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_186.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_186.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_186.cpp
e9f31ba9c2dcea13c825653e7b2e0ffdd99129c5,In Redis RDB check: better error reporting.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_187.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_187.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_187.cpp
e9f31ba9c2dcea13c825653e7b2e0ffdd99129c5,In Redis RDB check: better error reporting.,[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_188.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_188.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_188.cpp
e97fadb045c8bd10efd00d18374417009feb18c5,"In Redis RDB check: initial POC.

So far we used an external program (later executed within Redis) and
parser in order to check RDB files for correctness. This forces, at each
RDB format update, to have two copies of the same format implementation
that are hard to keep in sync. Morover the former RDB checker only
checked the very high-level format of the file, without actually trying
to load things in memory. Certain corruptions can only be handled by
really loading key-value pairs.

This first commit attempts to unify the Redis RDB loadig code with the
task of checking the RDB file for correctness. More work is needed but
it looks like a sounding direction so far.",[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_189.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_189.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_189.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_190.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_190.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_190.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_191.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_191.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_191.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_192.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_192.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_192.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_193.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_193.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_193.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_194.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_194.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_194.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_195.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_195.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_195.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_196.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_196.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_196.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_197.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_197.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_197.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_198.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_198.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_198.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_199.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_199.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_199.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_200.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_200.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_200.cpp
4aab50ac7b7565a9d87f5810b07efe1b69e27b1a,Merge remote-tracking branch 'refs/remotes/antirez/unstable' into unstable,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_201.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_201.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_201.cpp
3d48c9312222e29a0fdda13fb8f852b37127fc7a,"Merge pull request #3330 from yossigo/fix_const

Use const in Redis Module API where possible.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3330'],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_202.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_202.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_202.cpp
3d48c9312222e29a0fdda13fb8f852b37127fc7a,"Merge pull request #3330 from yossigo/fix_const

Use const in Redis Module API where possible.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3330'],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_203.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_203.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_203.cpp
4b12c6a3600eb2f8bfb8e440db5a526054bd2d9b,"Modules: changes to logging function.

This commit changes what provided by PR #3315 (merged) in order to
let the user specify the log level as a string.

The define could be also used, but when this happens, they must be
decoupled from the defines in the Redis core, like in the other part of
the Redis modules implementations, so that a switch statement (or a
function) remaps between the two, otherwise we are no longer free to
change the internal Redis defines.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3315'],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_204.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_204.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_204.cpp
715794b82976511786307b9e14165f1efbb28240,Add RedisModule_Log() logging API function.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_205.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_205.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_205.cpp
8f3a4df77599e4523bee7dc1db60b0863d6a6a49,Use const in Redis Module API where possible.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_206.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_206.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_206.cpp
8f3a4df77599e4523bee7dc1db60b0863d6a6a49,Use const in Redis Module API where possible.,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_207.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_207.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_207.cpp
8272ceadaa161989ead1406eecaa17ddd57dbcb7,"Merge pull request #3255 from oranagra/error_string

CLIENT error message was out of date",[u'https://gitlab.kitware.com/cmake/cmake/issues/3255'],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_208.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_208.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_208.cpp
64b834b8b2b75460f7a0cd9cd60dc3bd09bc0f16,"Merge pull request #3256 from oranagra/georasius_neg

fix georadius returns multiple replies",[u'https://gitlab.kitware.com/cmake/cmake/issues/3256'],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_209.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_209.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_209.cpp
5831dd860a5a355d242eb32da2e95aa93451d896,"Fix example modules to have the right OnLoad() prototype.

Related to #3293.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3293'],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_210.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_210.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_210.cpp
9a02dac2e8fa209f68b8e487313892cdd11c21a0,"Free module context after loading.

Now that modules receive RedisModuleString objects on loading, they are
allowed to call the String API, so the context must be released
correctly.

Related to #3293.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3293'],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_211.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_211.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_211.cpp
1ad5c2276323c11864c4cdc3990aeb8a1593cb71,Minor changes to unifor C style to Redis code base for PR #3293.,[u'https://gitlab.kitware.com/cmake/cmake/issues/3293'],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_212.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_212.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_212.cpp
e8d5387a44bce6aee9f11b39064b547201dc1ee4,"Merge pull request #3293 from yossigo/module_config

Allow passing arguments to modules on load.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3293'],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_213.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_213.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_213.cpp
688996f415e6c0d4ea4ff9a4af25608cd5599d4a,"Merge pull request #3295 from catwell/pr-1-warnings

fix some compiler warnings",[u'https://gitlab.kitware.com/cmake/cmake/issues/3295'],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_214.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_214.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_214.cpp
b4327ae5fe3c749d1f2918c18297a91008f0a0ee,"Merge pull request #3294 from yossigo/fix_unload

Fix MODULE UNLOAD crash and/or wrong error message.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3294'],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_215.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_215.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_215.cpp
5beec9743e5e926375705ebb730500a56510a1e5,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_216.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_216.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_216.cpp
ab73544396de1ba9ca7ef6b065517c9411a1a1bf,"Merge pull request #3296 from catwell/pr-2-variadic-pushx

make RPUSHX and LPUSHX variadic",[u'https://gitlab.kitware.com/cmake/cmake/issues/3296'],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_217.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_217.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_217.cpp
d88c3c77beb975c84c23b7586ed6984b4c74b82d,make RPUSHX and LPUSHX variadic,[],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_218.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_218.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_218.cpp
3e9c20f63b9649bf2a8ddce8f4743c7fb5d435b4,"untangle LINSERT and {L,R}PUSHX implementations",[],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_219.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_219.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_219.cpp
188d90fc87002cdf89f1ce3b359a24edad39fa46,fix some compiler warnings,[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_220.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_220.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_220.cpp
87312ff7810a67d6ef6ff38745242dab128aa95b,Fix MODULE UNLOAD crash and/or wrong error message.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_221.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_221.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_221.cpp
cc58f11ccc295cbe6b96eb47e4c01627ca718252,Use RedisModuleString for OnLoad argv.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_222.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_222.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_222.cpp
2bd13cf0eb9b2369ade0ec495a2d9e2c2a3be680,Allow passing arguments to modules on load.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_223.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_223.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_223.cpp
8ec28002be78ee890211265bef4f0b1207627fb4,Modules: support for modules native data types.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_224.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_224.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_224.cpp
8ec28002be78ee890211265bef4f0b1207627fb4,Modules: support for modules native data types.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_225.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_225.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_225.cpp
27e5f385c1839157574b80f2079d79bf40e32639,RDB v8: fix rdbLoadLen() return value.,[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_226.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_226.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_226.cpp
18a513f86d5cd53350c988780b409d37fa438834,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_227.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_227.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_227.cpp
f3e81de17688e310b7a5ef5108a3a6c8962eb133,fix georadius returns multiple replies,[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_228.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_228.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_228.cpp
8d9d8d16e4216207f4c58d4c41bb33f8eea399ff,CLIENT error message was out of date,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_229.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_229.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_229.cpp
8c4f4d12d856e57534277c1737d7cb07890bbe63,"Merge pull request #3249 from badboy/rcli-debug-printing

Remove debug printing",[u'https://gitlab.kitware.com/cmake/cmake/issues/3249'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_230.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_230.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_230.cpp
892565f924c53ead19f90afc5f652d20ca6e69c8,Remove debug printing,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_231.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_231.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_231.cpp
bafed3ddd65eb1537a9239111777563ed5e3edcf,"Merge pull request #3222 from oranagra/more_minir_fixes

minor fixes - mainly signalModifiedKey, and GEORADIUS",[u'https://gitlab.kitware.com/cmake/cmake/issues/3222'],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_232.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_232.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_232.cpp
bafed3ddd65eb1537a9239111777563ed5e3edcf,"Merge pull request #3222 from oranagra/more_minir_fixes

minor fixes - mainly signalModifiedKey, and GEORADIUS",[u'https://gitlab.kitware.com/cmake/cmake/issues/3222'],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_233.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_233.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_233.cpp
bafed3ddd65eb1537a9239111777563ed5e3edcf,"Merge pull request #3222 from oranagra/more_minir_fixes

minor fixes - mainly signalModifiedKey, and GEORADIUS",[u'https://gitlab.kitware.com/cmake/cmake/issues/3222'],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_234.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_234.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_234.cpp
9aff5640459ac2b882a1619dd0630460c6a6b0c0,Modules: initial pool allocator and a LEFTPAD usage example.,[],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_235.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_235.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_235.cpp
9b0556cf10dbd646bd011ccffcf619732b9dbef1,Modules: Hash type API WIP #2.,[],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_236.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_236.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_236.cpp
10993ca0d51e21ff2dc68de9dce56ce2becb0e0c,Modules: Hash type API WIP #1.,[],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_237.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_237.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_237.cpp
5bf5fd24c6054ccecb068f2a74c9c84aa2f2d79f,Modules: a few fixes for the zset iterator.,[],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_238.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_238.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_238.cpp
33e1231e533168915f006f2b39751b7013247a2d,Modules: postponed array lengths.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_239.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_239.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_239.cpp
00109e111339221c414e340f191bcd47037d0e4c,Modules: zset lex iterator #3.,[],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_240.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_240.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_240.cpp
083f5277c55951853570ffe0fd7ec56e9069f610,Modules: zset iterator redesign #1.,[],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_241.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_241.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_241.cpp
0fd6d548cac3db5718547a440b92a6811bdde504,Modules: fix top comments to be user-facing doc quality. About 33% done.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_242.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_242.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_242.cpp
f362f7a18a64a21e2feef3851d6c6b4dee06de50,Modules: sorted set iterators WIP #3.,[],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_243.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_243.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_243.cpp
eac5a13cb7f3c7bbcb16a6a5bc2080821d591663,Modules: sorted set iterators WIP.,[],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_244.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_244.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_244.cpp
11b3df24cb77c382c956c845151b1b8f0252c9f2,Modules: expire API and documentation.,[],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_245.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_245.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_245.cpp
6054089fa8f030cb6e43c2dbb6d486d2ad195013,Stops SPLICE from accepting negative counts,[],src/modules/helloworld.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_246.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_246.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_246.cpp
e443ad9c29ab9ed23a965d129f3b0a2d0e8712d4,Log loadmodule dlopen() errors.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_247.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_247.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_247.cpp
85919f80ed675dad7f2bee25018fec2833b8bbde,"Modules: avoid conflict between modules func pointers and dynamic symbols.

In modules we fill a set of function pointers defined in redismodule.h,
populating a set of APIs that are callable from the module. We use this
manual process instead of resorting to dynamic linking so that we have
exact control on how we pass the API to the module, and we can even pass
different functions for the same name, depending on the API version
declared by the module.

However if the function pointers in redismodule.h and the functions
defined in module.c have the same name, they conflict since the core
exports the symbols to the module.

There is probably some compiler flags trick to avoid this, but in order
to be safer in the future and be more easily compatible with different
builidng systems, this commit changes the internal function prefix from
RedisModule_ to RM_, so for example:

    RM_StringSet() will be exported as RedisModule_StringSet()",[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_248.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_248.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_248.cpp
6020469452217da57768f0b25dbcf27aba007cc7,Modules: remove warnings due to void/function pointer conversion.,[],src/module.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_249.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_249.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_249.cpp
9682b616a21b5e675a1ca82109a11d6f4de1d2de,"minor fixes - mainly signalModifiedKey, and GEORADIUS",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_250.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_250.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_250.cpp
9682b616a21b5e675a1ca82109a11d6f4de1d2de,"minor fixes - mainly signalModifiedKey, and GEORADIUS",[],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_251.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_251.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_251.cpp
9682b616a21b5e675a1ca82109a11d6f4de1d2de,"minor fixes - mainly signalModifiedKey, and GEORADIUS",[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_252.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_252.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_252.cpp
8eb43bf72c2109092e498870869109419e13e895,"redis-cli: integrate help.h with COMMAND output.

Use the COMMAND output to fill with partial information the built-in
help. This makes redis-cli able to at least complete commands that are
exported by the Redis server it is connected to, but were not available
in the help.h file when the redis-cli binary was compiled.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_253.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_253.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_253.cpp
94dc71ff08e3db4cb035130208470b0646c20a05,redis-cli: remove debugging message.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_254.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_254.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_254.cpp
bdbeb07a9ec6b66fd27c39aa4e8811cc980e90e1,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_255.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_255.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_255.cpp
f0fcc36ce15554a54aa5d629c2a76ec6e4e3e716,"Merge pull request #2956 from pkulchenko/global-protection-msg-typo

Update global protection error message",[u'https://gitlab.kitware.com/cmake/cmake/issues/2956'],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_256.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_256.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_256.cpp
7b90815fc3ccade17128a35590a9066fdccfcc6a,"Merge pull request #3008 from badboy/fix-2911

Fix nanosecond conversion",[u'https://gitlab.kitware.com/cmake/cmake/issues/3008'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_257.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_257.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_257.cpp
02db338a82fe77b3939512d96f3e494948ae7e53,"redis-cli: don't free historyfile, is used later.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_258.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_258.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_258.cpp
995b9ffe07ee497d0a8c7590e393a2ad2d8365da,"Allow CONFIG GET during loading.

Thanks to @oranagra for the idea of allowing CONFIG GET during loading.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_259.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_259.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_259.cpp
840ac20855855b134662683ca3e7d9e364d4bca8,DEBUG command self documentation.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_260.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_260.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_260.cpp
b5352eea51f2881d13ec4e3e1fa90cea037d4f29,"Merge pull request #3191 from oranagra/minor_fix

Minor fixes found during merge and code review",[u'https://gitlab.kitware.com/cmake/cmake/issues/3191'],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_261.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_261.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_261.cpp
b5352eea51f2881d13ec4e3e1fa90cea037d4f29,"Merge pull request #3191 from oranagra/minor_fix

Minor fixes found during merge and code review",[u'https://gitlab.kitware.com/cmake/cmake/issues/3191'],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_262.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_262.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_262.cpp
2c22f59c3f3d02ffa995bd35ec333bd712718f96,"Reply with error on negative geo radius.

Thanks to @tidwall for reporting.
Close #3194.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3194'],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_263.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_263.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_263.cpp
5e3880a492efd6c305d7bde5be44c1de72e15cb0,various cleanups and minor fixes,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_264.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_264.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_264.cpp
f8909a25796d3a4e0cee6f5f2250e57143e10129,add DEBUG JEMALLC PURGE and JEMALLOC INFO cleanup,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_265.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_265.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_265.cpp
b1f181a7367a2329e37d96244ecaf65249a7171c,ZADD refactored into a proper API.,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_266.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_266.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_266.cpp
e0eb5f6bbf2407c802a231594acb90aa7a6a8e9a,redis-cli preferences and rc file support.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_267.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_267.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_267.cpp
d1ddf7e9585eea836a47847602f7b05038856a49,redis-cli hints.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_268.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_268.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_268.cpp
d6e2cc71c6072b013cbca6dd6ee5cdd55620a70d,Linenoise updated again (hints support).,[],deps/linenoise/linenoise.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_269.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_269.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_269.cpp
8a98b8d0c9e99df9cf83a08cb032657531598e18,"Linenoise updated.

As a side effect, cat commands.txt | redis-cli now is able to handle
lines more than 4096 bytes.",[],deps/linenoise/linenoise.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_270.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_270.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_270.cpp
235f55344b2474eaac0951a6183b79edb6be739a,"Merge pull request #3118 from sunheehnus/bitfield-fix-minor-bug

bitops/bitfield: fix length, overflow condition and *sign",[u'https://gitlab.kitware.com/cmake/cmake/issues/3118'],src/bitops.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_271.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_271.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_271.cpp
93cc8baf1ae5e3d028b4847b711b07c7e20cef4c,"bitops/bitfield: fix length, overflow condition and *sign",[],src/bitops.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_272.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_272.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_272.cpp
e85d6f22cf2ddb2a4a5de80b211802bdacbf4a3b,"Fix INFO commandstats reporting when argv is rewritten.

We want to report the original command in the stats, for example GEOADD,
even when what is actually executed is the ZADD implementation.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_273.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_273.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_273.cpp
11745e09810a531093b527d6161cbfc2ddd6ac91,BITFIELD: Fix #<index> form parsing.,[],src/bitops.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_274.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_274.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_274.cpp
2800d090a7ca705b3dc03ae508511cea6bad650d,BITFIELD: Support #<index> offsets form.,[],src/bitops.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_275.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_275.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_275.cpp
70af626d613ebd88123f87a941b0dd3570f9e7d2,"BITFIELD command initial implementation.

The new bitfield command is an extension to the Redis bit operations,
where not just single bit operations are performed, but the array of
bits composing a string, can be addressed at random, not aligned
offsets, with any width unsigned and signed integers like u8, s5, u10
(up to 64 bit signed integers and 63 bit unsigned integers).

The BITFIELD command supports subcommands that can SET, GET, or INCRBY
those arbitrary bit counters, with multiple overflow semantics.

Trivial and credits:

A similar command was imagined a few times in the past, but for
some reason looked a bit far fetched or not well specified.
Finally the command was proposed again in a clear form by
Yoav Steinberg from Redis Labs, that proposed a set of commands on
arbitrary sized integers stored at bit offsets.

Starting from this proposal I wrote an initial specification of a single
command with sub-commands similar to what Yoav envisioned, using short
names for types definitions, and adding control on the overflow.

This commit is the resulting implementation.

Examples:

    BITFIELD mykey OVERFLOW wrap INCRBY i2 10 -1 GET i2 10",[],src/bitops.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_276.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_276.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_276.cpp
cf42c48adcea05c1bd4b939fcd36a01f23ec6303,"addReplyHumanLongDouble() API added.

Send a long double or double as a bulk reply, in a human friendly
format.",[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_277.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_277.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_277.cpp
bb75ecddfdcab4fb530bb9c78088e53b28687816,"New options for GEORADIUS: STORE and STOREDIST.

Related to issue #3019.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3019'],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_278.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_278.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_278.cpp
b0ec22f948370d46ecbe3cca5dd87082e9a1025e,"Include full paths on RDB/AOF files errors.

Close #3086.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3086'],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_279.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_279.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_279.cpp
b0ec22f948370d46ecbe3cca5dd87082e9a1025e,"Include full paths on RDB/AOF files errors.

Close #3086.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3086'],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_280.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_280.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_280.cpp
aa953b6ec3517b74b24e88bb76627faac431e239,"Merge pull request #3059 from itamarhaber/keyspacenotif-lrem

Adds keyspace notifications for LREM",[u'https://gitlab.kitware.com/cmake/cmake/issues/3059'],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_281.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_281.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_281.cpp
aa953b6ec3517b74b24e88bb76627faac431e239,"Merge pull request #3059 from itamarhaber/keyspacenotif-lrem

Adds keyspace notifications for LREM",[u'https://gitlab.kitware.com/cmake/cmake/issues/3059'],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_282.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_282.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_282.cpp
31a70a8bcf01ceb35ccbd2ae1f567ddf45321b2f,Fixes a typo,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_283.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_283.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_283.cpp
68e779f34bd7a06397ebea520f5ce43372fad000,Adds keyspace notifications for lrem,[],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_284.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_284.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_284.cpp
b841f3ad1a88e11a9d4abca1c7f0cf9df63e613d,"Cluster: store busport with different separator in CLUSTER NODES.

We need to be able to correctly parse the node address in the case of
IPv6 addresses.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_285.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_285.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_285.cpp
e27b9b1cec576a49a46a4d31d96e9d11cfc350f1,Merge branch 'cluster-docker' into unstable,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_286.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_286.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_286.cpp
e27b9b1cec576a49a46a4d31d96e9d11cfc350f1,Merge branch 'cluster-docker' into unstable,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_287.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_287.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_287.cpp
1c038379f7861a6c341c1fedae5ff358f024798f,Cluster: persist bus port in nodes.conf.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_288.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_288.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_288.cpp
11436b144980037b75d1c3184d412377dd2e71ab,Cluster announce ip / port initial implementation.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_289.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_289.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_289.cpp
11436b144980037b75d1c3184d412377dd2e71ab,Cluster announce ip / port initial implementation.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_290.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_290.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_290.cpp
b0939303e6a9288efaef159cc4a08b656c3b9ff3,Cluster announce ip / port configuration handling.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_291.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_291.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_291.cpp
5bbb09ed2c9a6ee1cb34d214d3d2c6744e99158f,Cluster: check packets length before accessing far fields.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_292.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_292.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_292.cpp
751b5666fbbe5c415f6fad64e7f59e24721996be,"Sentinel: improve handling of known Sentinel instances.

1. Bug #3035 is fixed (NULL pointer access). This was happening with the
   folling set of conditions:

* For some reason one of the Sentinels, let's call it Sentinel_A, changed ID (reconfigured from scratch), but is as the same address at which it used to be.

* Sentinel_A performs a failover and/or has a newer configuration compared to another Sentinel, that we call, Sentinel_B.

* Sentinel_B receives an HELLO message from Sentinel_A, where the address and/or ID is mismatched, but it is reporting a newer configuration for the master they are both monitoring.

2. Sentinels now must have an ID otherwise they are not loaded nor persisted in the configuration. This allows to have conflicting Sentinels with the same address since now the master->sentinels dictionary is indexed by Sentinel ID.

3. The code now detects if a Sentinel is annoucing itself with an IP/port pair already busy (of another Sentinel). The old Sentinel that had the same port/pair is set as having port 0, that means, the address is invalid. We may discover the right address later via HELLO messages.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3035'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_293.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_293.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_293.cpp
fe44a7cb609e1161a47494f3ab71d9e45973fb51,Cluster: mismatch sender ID log put back at DEBUG level.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_294.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_294.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_294.cpp
592419b4ca08fbf125b2ff2afd3289ef3d7b6a68,"Better address udpate strategy when processing gossip sections.

The change covers the case where:

1. There is a node we can't reach (in fail or pfail state).
2. We see a different address for this node, in the gossip section sent
to us by a node that, instead, is able to talk with the node we cannot
talk to.

In this case it's a good bet to switch to the address reported by this
node, since there was an address switch and it is able to talk with the
node and we are not.

However previosuly this was done in a dangerous way, by initiating an
handshake. The handshake, using the MEET packet, forces the receiver to
join our cluster, and this is not a good idea. If the node in question
really just switched address, but is the same node, it already knows about
us, so we just need to perform an address update and a reconnection.

So with this commit instead we just update the address of the node,
release the node link if any, and attempt to reconnect in the next
clusterCron() cycle.

The commit also improves debugging messages printed by Cluster during
address or ID switches.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_295.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_295.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_295.cpp
83b862a30ee90ee5f85eefcc63ff5241b501f073,"Minor MIGRATE refactoring.

Centralize cleanup of newargv in a single place.
Add more comments to help a bit following a complex function.

Related to issue #3016.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3016'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_296.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_296.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_296.cpp
f5a1e608cc2140a98c51431958b9c274019ffbc5,"More variadic MIGRATE fixes.

Another leak was fixed in the case of syntax error by restructuring the
allocation strategy for the two dynamic vectors.

We also make sure to always close the cached socket on I/O errors so that
all the I/O errors are handled the same, even if we had a previously
queued error of a different kind from the destination server.

Thanks to Kevin McGehee. Related to issue #3016.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3016'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_297.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_297.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_297.cpp
00d3a40f82a9d43a0eca61047e1df5c0d9d10c8e,"Various fixes to MIGRATE with multiple keys.

In issue #3016 Kevin McGehee identified multiple very serious issues in
the new implementation of MIGRATE. This commit attempts to restructure
the code in oder to avoid mistakes, an analysis of the new
implementation is in progress in order to check for possible edge cases.",[u'https://gitlab.kitware.com/cmake/cmake/issues/3016'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_298.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_298.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_298.cpp
15dacfec6f25fe291ce8aaa702c7fabbee9e3d00,"Fix nanosecond conversion

1 microsecond = 1000 nanoseconds
1e3 = 1000
10e3 = 10000",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_299.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_299.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_299.cpp
02c40c9dc2da2a29c95b9ddfd2a8544dd04aaf11,CLUSTER BUMPEPOCH initial implementation fixed.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_300.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_300.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_300.cpp
b58796f5208b910f07ffc8e3b11c77e984dc4973,"Cluster: CLUSTER BUMPEPOCH introduced to help redis-trib fix.

Sometimes during ""fixes"" we have to setup a new configuration and assign
slots to nodes. With BUMPEPOCH we can make sure the new configuration of
the node will win if there are conflicting configurations (for example
another node is *also* claiming the same slot because the cluster is
totally messed up).",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_301.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_301.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_301.cpp
524be1e4656f53c347367fb5c7b1ac7e80b890e9,Cluster: don't allow CLUSTER SETSLOT with slaves.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_302.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_302.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_302.cpp
f43c794b0b43b9134385a487e96bcd791bb0472a,"Scripting: handle trailing comments.

This fix, provided by Paul Kulchenko (@pkulchenko), allows the Lua
scripting engine to evaluate statements with a trailing comment like the
following one:

    EVAL ""print() --comment"" 0

Lua can't parse the above if the string does not end with a newline, so
now a final newline is always added automatically. This does not change
the SHA1 of scripts since the SHA1 is computed on the body we pass to
EVAL, without the other code we add to register the function.

Close #2951.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2951'],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_303.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_303.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_303.cpp
edd4d555df57dc84265fdfb4ef59a4678832f6da,"New security feature: Redis protected mode.

An exposed Redis instance on the internet can be cause of serious
issues. Since Redis, by default, binds to all the interfaces, it is easy
to forget an instance without any protection layer, for error.

Protected mode try to address this feature in a soft way, providing a
layer of protection, but giving clues to Redis users about why the
server is not accepting connections.

When protected mode is enabeld (the default), and if there are no
minumum hints about the fact the server is properly configured (no
""bind"" directive is used in order to restrict the server to certain
interfaces, nor a password is set), clients connecting from external
intefaces are refused with an error explaining what to do in order to
fix the issue.

Clients connecting from the IPv4 and IPv6 lookback interfaces are still
accepted normally, similarly Unix domain socket connections are not
restricted in any way.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_304.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_304.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_304.cpp
edd4d555df57dc84265fdfb4ef59a4678832f6da,"New security feature: Redis protected mode.

An exposed Redis instance on the internet can be cause of serious
issues. Since Redis, by default, binds to all the interfaces, it is easy
to forget an instance without any protection layer, for error.

Protected mode try to address this feature in a soft way, providing a
layer of protection, but giving clues to Redis users about why the
server is not accepting connections.

When protected mode is enabeld (the default), and if there are no
minumum hints about the fact the server is properly configured (no
""bind"" directive is used in order to restrict the server to certain
interfaces, nor a password is set), clients connecting from external
intefaces are refused with an error explaining what to do in order to
fix the issue.

Clients connecting from the IPv4 and IPv6 lookback interfaces are still
accepted normally, similarly Unix domain socket connections are not
restricted in any way.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_305.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_305.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_305.cpp
f054b4ac4781c5fe5386e8339771f9ce28e24352,"Merge pull request #2957 from pkulchenko/debug-userdata-pretty-printing

Update pretty printing in debugging to generate valid Lua code for userdata-like types.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2957'],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_306.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_306.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_306.cpp
a1c9c05e17a1d49425ac0d87196fe91869645a08,"Hopefully better memory test on crash.

The old test, designed to do a transformation on the bits that was
invertible, in order to avoid touching the original memory content, was
not effective as it was redis-server --test-memory. The former often
reported OK while the latter was able to spot the error.

So the test was substituted with one that may perform better, however
the new one must backup the memory tested, so it tests memory in small
pieces. This limits the effectiveness because of the CPU caches. However
some attempt is made in order to trash the CPU cache between the fill
and the check stages, but not for the addressing test unfortunately.

We'll see if this test will be able to find errors where the old failed.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_307.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_307.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_307.cpp
a1c9c05e17a1d49425ac0d87196fe91869645a08,"Hopefully better memory test on crash.

The old test, designed to do a transformation on the bits that was
invertible, in order to avoid touching the original memory content, was
not effective as it was redis-server --test-memory. The former often
reported OK while the latter was able to spot the error.

So the test was substituted with one that may perform better, however
the new one must backup the memory tested, so it tests memory in small
pieces. This limits the effectiveness because of the CPU caches. However
some attempt is made in order to trash the CPU cache between the fill
and the check stages, but not for the addressing test unfortunately.

We'll see if this test will be able to find errors where the old failed.",[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_308.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_308.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_308.cpp
ac8f4a6af9334898d816c057e3abe743111da308,memtest.c now can be called as API in non interactive mode.,[],src/memtest.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_309.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_309.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_309.cpp
ac8f4a6af9334898d816c057e3abe743111da308,memtest.c now can be called as API in non interactive mode.,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_310.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_310.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_310.cpp
30f057d88f9c2a8f29d762b37392e976845fd4fd,Crash report format improvements.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_311.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_311.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_311.cpp
b754c8e18bbbefc3ea01a7a1939227a67f0ca328,Update pretty printing in debugging to generate valid Lua code for userdata-like types.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_312.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_312.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_312.cpp
2f3f3fd5e0cb19ea2df5712198dc40f093bd1255,Update global protection error message to fix a typo.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_313.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_313.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_313.cpp
6db8e8569d7f41fc4450ceef7b7f91819829d4ca,Log address causing SIGSEGV.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_314.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_314.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_314.cpp
9f63e75a07e73f40fec72ef83545f6e7f0438e90,"Merge pull request #2943 from sunheehnus/issue2855

lua_struct.c/getnum: throw error if overflow happen",[u'https://gitlab.kitware.com/cmake/cmake/issues/2943'],deps/lua/src/lua_struct.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_315.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_315.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_315.cpp
3a47c8cfb85af1b69cccf30eaaa690e4a23ab20a,"lua_struct.c/getnum: throw error if overflow happen

Fix issue #2855",[u'https://gitlab.kitware.com/cmake/cmake/issues/2855'],deps/lua/src/lua_struct.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_316.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_316.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_316.cpp
d85fc1e9cfb8fb7496cda524db8808bb1ab9e1e6,"MIGRATE: fix replies processing and argument rewriting.

We need to process replies after errors in order to delete keys
successfully transferred. Also argument rewriting was fixed since
it was broken in several ways. Now a fresh argument vector is created
and set if we are acknowledged of at least one key.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_317.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_317.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_317.cpp
9ebf7a6776503d7c688ad1a2dedb55c71e8c8a82,Pipelined multiple keys MIGRATE.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_318.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_318.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_318.cpp
adc2fe69934fae596aee29c49db6acdc203a62d9,"Cluster: replica migration with delay.

We wait a fixed amount of time (5 seconds currently) much greater than
the usual Cluster node to node communication latency, before migrating.
This way when a failover occurs, before detecting the new master as a
target for migration, we give the time to its natural slaves (the slaves
of the failed over master) to announce they switched to the new master,
preventing an useless migration operation.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_319.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_319.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_319.cpp
4159055f8349dcc2df0a77ee777e12ff332fcddb,Remove debugging message left there for error.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_320.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_320.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_320.cpp
e0f22df9950b584569771d486fd4e933432fe395,"Fix replicas migration by adding a new flag.

Some time ago I broken replicas migration (reported in #2924).
The idea was to prevent masters without replicas from getting replicas
because of replica migration, I remember it to create issues with tests,
but there is no clue in the commit message about why it was so
undesirable.

However my patch as a side effect totally ruined the concept of replicas
migration since we want it to work also for instances that, technically,
never had slaves in the past: promoted slaves.

So now instead the ability to be targeted by replicas migration, is a
new flag ""migrate-to"". It only applies to masters, and is set in the
following two cases:

1. When a master gets a slave, it is set.
2. When a slave turns into a master because of fail over, it is set.

This way replicas migration targets are only masters that used to have
slaves, and slaves of masters (that used to have slaves... obviously)
and are promoted.

The new flag is only internal, and is never exposed in the output nor
persisted in the nodes configuration, since all the information to
handle it are implicit in the cluster configuration we already have.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2924'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_321.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_321.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_321.cpp
acc2336fd189ddf9e97b0fc589c43ae26a1fd153,"Centralize slave replication handshake aborting.

Now we have a single function to call in any state of the slave
handshake, instead of using different functions for different states
which is error prone. Change performed in the context of issue #2479 but
does not fix it, since should be functionally identical to the past.
Just an attempt to make replication.c simpler to follow.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2479'],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_322.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_322.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_322.cpp
96628cc40df778716b70f4b661ceb1bd329591dd,"fix sprintf and snprintf format string

There are some cases of printing unsigned integer with %d conversion
specificator and vice versa (signed integer with %u specificator).

Patch by Sergey Polovko. Backported to Redis from Disque.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_323.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_323.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_323.cpp
96628cc40df778716b70f4b661ceb1bd329591dd,"fix sprintf and snprintf format string

There are some cases of printing unsigned integer with %d conversion
specificator and vice versa (signed integer with %u specificator).

Patch by Sergey Polovko. Backported to Redis from Disque.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_324.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_324.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_324.cpp
da82723858215e1b42c9b5b744e082418644d7d8,"Handle wait3() errors.

My guess was that wait3() with WNOHANG could never return -1 and an
error. However issue #2897 may possibly indicate that this could happen
under non clear conditions. While we try to understand this better,
better to handle a return value of -1 explicitly, otherwise in the
case a BGREWRITE is in progress but wait3() returns -1, the effect is to
match the first branch of the if/else block since server.rdb_child_pid
is -1, and call backgroundSaveDoneHandler() without a good reason, that
will, in turn, crash the Redis server with an assertion.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2897'],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_325.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_325.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_325.cpp
4b0b28b4694067fef56d7bb9bd09efdaf02ca032,Lua debugger: infinite loop detection.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_326.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_326.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_326.cpp
1f35f2dd5ace63862ecd819c4d28f8d844720df1,"Lua debugger: fix trace command infinite loop.

Thanks to Itamar Haber for bug report and test case to reproduce.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_327.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_327.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_327.cpp
6604e04260b1b6b17afcec9e54d20cda041751b1,Lua debugger: redis-cli: allow restart after end of session.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_328.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_328.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_328.cpp
58573f1dd2d6d3cfd5dbaea7484c55571f856b3b,Lua debugger: redis-cli can restart Lua debugging sessions.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_329.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_329.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_329.cpp
0cc19174f98947bfc7c1002c80f53d6952193231,"Lua debugger: maxlen command implemented.

Let the user control the replies truncation.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_330.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_330.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_330.cpp
c560c645e9d79df607c829de64b86d0513b8a08c,Lua debugger: trace command implemented.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_331.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_331.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_331.cpp
22959e07dc54370564b21f94c62f926a48c0cfe0,Lua debugger: redis-cli: show compile errors in LDB mode.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_332.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_332.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_332.cpp
70a51694deff3a27f8cacb195a96fe5aa68eb943,Lua debugger: print without args show all local vars.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_333.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_333.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_333.cpp
6de2306add95460a488d76e57b5cf2b5db17d5da,"Lua debugger: redis-cli error when --ldb is without --eval.

Otherwise the result is a messed CLI without prompt.
Thanks to Itamar Haber for reporting this issue.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_334.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_334.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_334.cpp
34aadf79c333527da4a188bc3470ce6cacd7a13b,"Lua debugging: fix error message for SCRIPT DEBUG.

""async"" -> ""sync"".

Thanks to Itamar Haber for reporting.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_335.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_335.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_335.cpp
01636435fae33d3c43b23bd376f0d4634a7294a8,Lua debugger: abort implemented.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_336.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_336.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_336.cpp
87672adee2c282ad9d6a989f4401094fda90ebba,Lua debugger: better support for synchronous mode.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_337.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_337.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_337.cpp
87672adee2c282ad9d6a989f4401094fda90ebba,Lua debugger: better support for synchronous mode.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_338.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_338.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_338.cpp
7be917058560c2281a1ee891cb6ff6a7b8de345b,Lua debugger: handle forked sessions children during shutdown.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_339.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_339.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_339.cpp
7be917058560c2281a1ee891cb6ff6a7b8de345b,Lua debugger: handle forked sessions children during shutdown.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_340.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_340.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_340.cpp
3ab0b4d6d045a35a1b587acf6569a8a303fc09a5,"Lua debugger: inform user changes are rolled back.

When redis-cli will support the synchronous mode, this will not be
printed.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_341.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_341.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_341.cpp
e386cd8ccf9698a8218208e75528a460cb4cc277,"Lua debugger: clear end of session protocol.

When the debugger exits now it produces an <endsession> tag that informs
redis-cli (or other debugging clients) that the session terminated.
This way the client knows there is yet another reply to read (the one of
the EVAL script itself), and can switch to non-debugging mode ASAP.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_342.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_342.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_342.cpp
7492237c3ce377f7d8983b6a2943808cf05c1bea,Lua debugger: redis.debug() implemented.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_343.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_343.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_343.cpp
23a4d70e56a9b486cbe9cb11a590f5b6a6267885,"Lua debugger: redis-cli, mark end of debugging session.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_344.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_344.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_344.cpp
1f8fdafe65c8c19a94dc886b2cfc3f5de806c728,Lua debugger: much better Lua values pretty printer.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_345.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_345.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_345.cpp
3a04cb05eea3799a3f10ec97745c172aeebef071,Lua debugger: redis.breakpoint() implemented.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_346.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_346.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_346.cpp
cf4700bda4929d8d952df16bdd3ca73019d15249,"Lua debugger: output improvements, eval command.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_347.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_347.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_347.cpp
1f8d6144237e10fe91b71b883578a0083b95920c,Lua debugger: breakpoints.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_348.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_348.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_348.cpp
1f8d6144237e10fe91b71b883578a0083b95920c,Lua debugger: breakpoints.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_349.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_349.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_349.cpp
5c4f492844d50c29ebf303bc9bd52c6db07fe377,Lua debugger: ability to show local vars content.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_350.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_350.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_350.cpp
5417217c873b5d7a0cf94edabc1e0a5371fa7578,Lua debugger: log Redis commands. List command.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_351.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_351.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_351.cpp
d3d1fa9437314082b3e18dedd48c768e097a9d61,Lua debugger: initial REPL.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_352.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_352.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_352.cpp
c494db89b5c2ef34758f599ee46ac7265782ad77,Lua debugger: foundations implemented.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_353.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_353.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_353.cpp
c494db89b5c2ef34758f599ee46ac7265782ad77,Lua debugger: foundations implemented.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_354.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_354.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_354.cpp
c494db89b5c2ef34758f599ee46ac7265782ad77,Lua debugger: foundations implemented.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_355.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_355.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_355.cpp
c494db89b5c2ef34758f599ee46ac7265782ad77,Lua debugger: foundations implemented.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_356.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_356.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_356.cpp
c494db89b5c2ef34758f599ee46ac7265782ad77,Lua debugger: foundations implemented.,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_357.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_357.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_357.cpp
8a0258aa4374212d8bf7004fa9022f821f6c93ed,AOF: rewriting child killed by SIGUSR1 is not an error.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_358.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_358.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_358.cpp
c950facf43cb6bf6f8696da39927b513e0be5aa1,"Merge pull request #2848 from badboy/removed-printf

Remove printf",[u'https://gitlab.kitware.com/cmake/cmake/issues/2848'],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_359.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_359.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_359.cpp
87a12a608512603a56851507b75bb43e55abcca2,Best effort flush of slave buffers before SHUTDOWN.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_360.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_360.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_360.cpp
1b5d24eb2b8f5ef26c6067c895fcb5ebb89a991b,"Scripting: fix redis.call() error reporting.

Arguments arity and arguments type error of redis.call() were not
reported correctly to Lua, so the command acted in this regard like
redis.pcall(), but just for two commands. Redis.call() should always
raise errors instead.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_361.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_361.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_361.cpp
111d24f2465a41ddc100a11549dab3f0cd5ddc1b,"Fix error reply in subscribed Pub/Sub mode.

PING is now a valid command to issue in this context.",[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_362.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_362.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_362.cpp
cd8f19e9ca1f1e2e2a1015fa1c87979448685ddd,Initialize all Lua scripting related things into scripting.c,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_363.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_363.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_363.cpp
9aa1f94449652c4dcad6d8038967a619857f2bf2,scripting.c source code better organized into sections.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_364.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_364.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_364.cpp
71aa9b75f2c4dd6faa20a4849ff732536bdfceab,"Fix HINCRBYFLOAT to work with long doubles.

During the refactoring needed for lazy free, specifically the conversion
of t_hash from struct robj to plain SDS strings, HINCRBFLOAT was
accidentally moved away from long doubles to doubles for internal
processing of increments and formatting.

The diminished precision created more obvious artifacts in the way small
numbers are formatted once we convert from decimal number in radix 10 to
double and back to its string in radix 10.

By using more precision, we now have less surprising results at least
with small numbers like ""1.23"", exactly like in the previous versions of
Redis.

See issue #2846.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2846'],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_365.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_365.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_365.cpp
35afefc7cbdb903fad41ce24908dfc849b6c2f5d,Remove printf,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_366.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_366.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_366.cpp
f26072eb66eec84b0d44d386ab9911a3b3ad082e,"More reliable DEBUG loadaof.

Make sure to flush the AOF output buffers before reloading.
Result: less false timing related false positives on AOF tests.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_367.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_367.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_367.cpp
ebaa9226ee71f85d9e79eddfd3da7bffb0331aeb,Scripting: fix error reporting of many Redis provided functions.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_368.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_368.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_368.cpp
2dabf82d5f9f9eb63efb32f7b172a54f000f607f,"Fix call() FORCE_REPL/AOF flags setting.

This commit also inverts two stanzas of the code just becuase they are
more logical like that, not because currently it makes any difference.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_369.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_369.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_369.cpp
a3e8de043005f0e764f6506d1e38143d788cddc4,Lua script selective replication WIP.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_370.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_370.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_370.cpp
fc38235664b120603595bb49f61c0ef31247b482,"Scripting: single commands replication mode implemented.

By calling redis.replicate_commands(), the scripting engine of Redis
switches to commands replication instead of replicating whole scripts.
This is useful when the script execution is costly but only results in a
few writes performed to the dataset.

Morover, in this mode, it is possible to call functions with side
effects freely, since the script execution does not need to be
deterministic: anyway we'll capture the outcome from the point of view
of changes to the dataset.

In this mode math.random() returns different sequences at every call.

If redis.replicate_commnads() is not called before any other write, the
command returns false and sticks to whole scripts replication instead.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_371.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_371.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_371.cpp
cdda6748c25be6994dfccd769dc7c3521baf4760,call(): selective ability to prevent propagation on AOF / slaves.,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_372.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_372.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_372.cpp
ed6228851cfc7731a4e84201a3b2d6c11d925438,PR 2813 fix ported to unstable.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_373.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_373.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_373.cpp
35a0c772b5ef407b700db051233144b6bac8fea3,DEBUG RESTART/CRASH-AND-RECOVER [delay] implemented.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_374.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_374.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_374.cpp
f29e384853660434da912c49e8b29ebabe76bec3,"Fix extractLongLatOrReply() sanity check conditionals.

the check for lat/long valid ranges were performed inside the for loop,
two times instead of one, and the first time when the second element of
the array, xy[1], was yet not populated. This resulted into issue #2799.

Close issue #2799.","[u'https://gitlab.kitware.com/cmake/cmake/issues/2799', u'https://gitlab.kitware.com/cmake/cmake/issues/2799']",src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_375.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_375.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_375.cpp
a9951b1b6a326532163e0fe4ee1a26e972258a1e,Jemalloc updated to 4.0.3.,[],deps/jemalloc/include/jemalloc/internal/tsd.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_376.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_376.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_376.cpp
a9951b1b6a326532163e0fe4ee1a26e972258a1e,Jemalloc updated to 4.0.3.,[],deps/jemalloc/include/jemalloc/internal/util.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_377.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_377.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_377.cpp
880c606a7ce30ac2c72184ed62d392c25bb9c88b,Lazyfree options implemented in the configuration.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_378.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_378.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_378.cpp
252cfa0a39d8483b3f990af02551b63d306a289a,Lazyfree: cond vars to enabled/disable it based on DEL context.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_379.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_379.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_379.cpp
252cfa0a39d8483b3f990af02551b63d306a289a,Lazyfree: cond vars to enabled/disable it based on DEL context.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_380.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_380.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_380.cpp
252cfa0a39d8483b3f990af02551b63d306a289a,Lazyfree: cond vars to enabled/disable it based on DEL context.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_381.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_381.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_381.cpp
c69c6c80fb5376a30e8cda34443a55b6326c9aa7,Lazyfree: ability to free whole DBs in background.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_382.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_382.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_382.cpp
c69c6c80fb5376a30e8cda34443a55b6326c9aa7,Lazyfree: ability to free whole DBs in background.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_383.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_383.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_383.cpp
7af4eeb7455b40ef73c436d7b9eb05df31eb6886,"Lazyfree: incremental removed, only threaded survived.",[],src/lazyfree.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_384.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_384.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_384.cpp
1dab60df8132e5137ab8e9680dcf88fafc4842a6,Hash new implementation memleaks fixed.,[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_385.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_385.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_385.cpp
97ba4e3886ab2458756d1c67bdc0eb94b85e57a3,Lazyfree: Hash converted to use plain SDS WIP 5.,[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_386.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_386.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_386.cpp
97ba4e3886ab2458756d1c67bdc0eb94b85e57a3,Lazyfree: Hash converted to use plain SDS WIP 5.,[],src/util.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_387.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_387.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_387.cpp
974514b936c7b7b970b03224963f05818c568c60,Lazyfree: Hash converted to use plain SDS WIP 4.,[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_388.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_388.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_388.cpp
777396aeba81c2346041d5d1a4b507693d6177e2,Lazyfree: Hash converted to use plain SDS WIP 2.,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_389.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_389.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_389.cpp
777396aeba81c2346041d5d1a4b507693d6177e2,Lazyfree: Hash converted to use plain SDS WIP 2.,[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_390.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_390.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_390.cpp
777396aeba81c2346041d5d1a4b507693d6177e2,Lazyfree: Hash converted to use plain SDS WIP 2.,[],src/util.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_391.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_391.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_391.cpp
1c247556c691bb61be65734be0670d50512f710c,Lazyfree: Hash converted to use plain SDS WIP 1.,[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_392.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_392.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_392.cpp
a7c5be18a81c120b4bdeb139072f27c899fe1a4d,Lazyfree: Sorted sets convereted to plain SDS. (several commits squashed),[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_393.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_393.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_393.cpp
86d48efbfd40cba447025c36ac6b0c5507b032fd,Lazyfree: Convert Sets to use plains SDS (several commits squashed).,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_394.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_394.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_394.cpp
86d48efbfd40cba447025c36ac6b0c5507b032fd,Lazyfree: Convert Sets to use plains SDS (several commits squashed).,[],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_395.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_395.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_395.cpp
4ff3c17a20cca084acce8d0cb618547f09a18da1,Lazyfree: client output buffers no longer use Redis Objects.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_396.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_396.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_396.cpp
0c05436cef6f65cb2d62c8764522abefeb964314,Lazyfree: a first implementation of non blocking DEL.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_397.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_397.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_397.cpp
1e7153831dc4b03bf6e116430aa55a87707658a7,Refactoring: unlinkClient() added to lower freeClient() complexity.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_398.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_398.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_398.cpp
1e7153831dc4b03bf6e116430aa55a87707658a7,Refactoring: unlinkClient() added to lower freeClient() complexity.,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_399.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_399.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_399.cpp
fdb3be939ec30be0d39ea639c3988be8b1516c2c,Refactoring: new function to test if client has pending output.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_400.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_400.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_400.cpp
fdb3be939ec30be0d39ea639c3988be8b1516c2c,Refactoring: new function to test if client has pending output.,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_401.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_401.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_401.cpp
b741a90ce9a7e0ff4e98523a49947a9ec545a62f,handleClientsWithPendingWrites(): detect dead clients.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_402.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_402.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_402.cpp
481a0db31504a01178392a9a7e93810f72faadf7,Move handleClientsWithPendingWrites() in networking.c.,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_403.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_403.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_403.cpp
f529a01c1b52367b4337119ae8f86fd1d790a5ea,"MOVE now can move TTL metadata as well.

MOVE was not able to move the TTL: when a key was moved into a different
database number, it became persistent like if PERSIST was used.

In some incredible way (I guess almost nobody uses Redis MOVE) this bug
remained unnoticed inside Redis internals for many years.
Finally Andy Grunwald discovered it and opened an issue.

This commit fixes the bug and adds a regression test.

Close #2765.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2765'],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_404.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_404.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_404.cpp
33769f840cd53f03caf8f4b886a7c95182492027,Sentinel: command arity check added where missing.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_405.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_405.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_405.cpp
0c62d955383a5df85ec78808cf7b79e94827e427,"Merge pull request #2695 from rogerlz/unstable

redis-sentinel crash if ckquorum command is executed without args",[u'https://gitlab.kitware.com/cmake/cmake/issues/2695'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_406.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_406.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_406.cpp
8e55537459f8be2d4310117f9f36c5a2ffa1451c,"Undo slaves state change on failed rdbSaveToSlavesSockets().

As Oran Agra suggested, in startBgsaveForReplication() when the BGSAVE
attempt returns an error, we scan the list of slaves in order to remove
them since there is no way to serve them currently.

However we check for the replication state BGSAVE_START, which was
modified by rdbSaveToSlaveSockets() before forking(). So when fork fails
the state of slaves remain BGSAVE_END and no cleanup is performed.

This commit fixes the problem by making rdbSaveToSlavesSockets() able to
undo the state change on fork failure.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_407.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_407.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_407.cpp
d036abe27d3a7bb985f94c14b596846e321dce39,Log client details on SLAVEOF command having an effect.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_408.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_408.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_408.cpp
f18e5b634dbca5a31b88e6cc4e4a571afed0753b,"startBgsaveForReplication(): handle waiting slaves state change.

Before this commit, after triggering a BGSAVE it was up to the caller of
startBgsavForReplication() to handle slaves in WAIT_BGSAVE_START in
order to update them accordingly. However when the replication target is
the socket, this is not possible since the process of updating the
slaves and sending the FULLRESYNC reply must be coupled with the process
of starting an RDB save (the reason is, we need to send the FULLSYNC
command and spawn a child that will start to send RDB data to the slaves
ASAP).

This commit moves the responsibility of handling slaves in
WAIT_BGSAVE_START to startBgsavForReplication() so that for both
diskless and disk-based replication we have the same chain of
responsiblity. In order accomodate such change, the syncCommand() also
needs to put the client in the slave list ASAP (just after the initial
checks) and not at the end, so that startBgsavForReplication() can find
the new slave alrady in the list.

Another related change is what happens if the BGSAVE fails because of
fork() or other errors: we now remove the slave from the list of slaves
and send an error, scheduling the slave connection to be terminated.

As a side effect of this change the following errors found by
Oran Agra are fixed (thanks!):

1. rdbSaveToSlavesSockets() on failed fork will get the slaves cleaned
up, otherwise they remain in a wrong state forever since we setup them
for full resync before actually trying to fork.

2. updateSlavesWaitingBgsave() with replication target set as ""socket""
was broken since the function changed the slaves state from
WAIT_BGSAVE_START to WAIT_BGSAVE_END via
replicationSetupSlaveForFullResync(), so later rdbSaveToSlavesSockets()
will not find any slave in the right state (WAIT_BGSAVE_START) to feed.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_409.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_409.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_409.cpp
bea1259190a9f3c3850b074ef7d0af0bc3ea36a7,"slaveTryPartialResynchronization and syncWithMaster: better synergy.

It is simpler if removing the read event handler from the FD is up to
slaveTryPartialResynchronization, after all it is only called in the
context of syncWithMaster.

This commit also makes sure that on error all the event handlers are
removed from the socket before closing it.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_410.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_410.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_410.cpp
88c716a0f57084bc7c4043371a95895664e3a578,syncWithMaster(): non blocking state machine.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_411.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_411.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_411.cpp
ce5761e0618b8d5788c2f6f8f6a514a77040ab24,startBgsaveForReplication(): log what you really do.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_412.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_412.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_412.cpp
3e6d4d599a07ec347ef2f77c6b292223e7be6a16,"Replication: add REPLCONF CAPA EOF support.

Add the concept of slaves capabilities to Redis, the slave now presents
to the Redis master with a set of capabilities in the form:

    REPLCONF capa SOMECAPA capa OTHERCAPA ...

This has the effect of setting slave->slave_capa with the corresponding
SLAVE_CAPA macros that the master can test later to understand if it
the slave will understand certain formats and protocols of the
replication process. This makes it much simpler to introduce new
replication capabilities in the future in a way that don't break old
slaves or masters.

This patch was designed and implemented together with Oran Agra
(@oranagra).",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_413.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_413.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_413.cpp
15de6b108b5d67c4d21fc67b50b1297c4c052bc6,"Make sure we re-emit SELECT after each new slave full sync setup.

In previous commits we moved the FULLRESYNC to the moment we start the
BGSAVE, so that the offset we provide is the right one. However this
also means that we need to re-emit the SELECT statement every time a new
slave starts to accumulate the changes.

To obtian this effect in a more clean way, the function that sends the
FULLRESYNC reply was overloaded with a more important role of also doing
this and chanigng the slave state. So it was renamed to
replicationSetupSlaveForFullResync() to better reflect what it does now.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_414.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_414.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_414.cpp
62b5c60ead59e29663a44a79148ee4ffdf2f6ec2,syncCommand() comments improved.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_415.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_415.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_415.cpp
292fec058a32323d5aa52dddfa86be280e29fe65,"PSYNC initial offset fix.

This commit attempts to fix a bug involving PSYNC and diskless
replication (currently experimental) found by Yuval Inbar from Redis Labs
and that was later found to have even more far reaching effects (the bug also
exists when diskstore is off).

The gist of the bug is that, a Redis master replies with +FULLRESYNC to
a PSYNC attempt that fails and requires a full resynchronization.
However, the baseline offset sent along with FULLRESYNC was always the
current master replication offset. This is not ok, because there are
many reasosn that may delay the RDB file creation. And... guess what,
the master offset we communicate must be the one of the time the RDB
was created. So for example:

1) When the BGSAVE for replication is delayed since there is one
   already but is not good for replication.
2) When the BGSAVE is not needed as we attach one currently ongoing.
3) When because of diskless replication the BGSAVE is delayed.

In all the above cases the PSYNC reply is wrong and the slave may
reconnect later claiming to need a wrong offset: this may cause
data curruption later.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_416.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_416.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_416.cpp
4bc42ca7f6608c3e77c451c580c4b9c629480169,checkTcpBacklogSetting() now called in Sentinel mode too.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_417.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_417.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_417.cpp
e6f39338e6464fb29f630120d8949b0d535e2e3f,CLIENT_MASTER introduced.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_418.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_418.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_418.cpp
54c71f2d9678881b22577951f4e5b6823d0c193e,RDMF: Redis -> Server in adjustOpenFilesLimit().,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_419.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_419.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_419.cpp
813ff7fdde5d03bfe7109c4a8991fd9509fafd8f,"Avoid magic ""0"" argument to prepareForShutdown().

Backported from Disque.",[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_420.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_420.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_420.cpp
02b1d5213da7c05605766bbbc33a0cdefb359b99,RDMF: use representClusterNodeFlags() generic name.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_421.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_421.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_421.cpp
3325a9b11f9761aaee5f7993b555be44e3d51342,RDMF: more names updated.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_422.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_422.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_422.cpp
3325a9b11f9761aaee5f7993b555be44e3d51342,RDMF: more names updated.,[],src/bio.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_423.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_423.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_423.cpp
3325a9b11f9761aaee5f7993b555be44e3d51342,RDMF: more names updated.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_424.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_424.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_424.cpp
3325a9b11f9761aaee5f7993b555be44e3d51342,RDMF: more names updated.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_425.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_425.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_425.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_426.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_426.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_426.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/bio.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_427.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_427.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_427.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/bitops.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_428.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_428.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_428.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_429.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_429.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_429.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_430.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_430.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_430.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_431.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_431.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_431.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_432.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_432.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_432.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_433.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_433.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_433.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/multi.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_434.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_434.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_434.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_435.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_435.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_435.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_436.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_436.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_436.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_437.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_437.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_437.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_438.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_438.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_438.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_439.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_439.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_439.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_440.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_440.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_440.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_441.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_441.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_441.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_442.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_442.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_442.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_443.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_443.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_443.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/sort.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_444.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_444.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_444.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_445.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_445.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_445.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_446.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_446.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_446.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_447.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_447.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_447.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_448.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_448.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_448.cpp
32f80e2f1bf42d0508f1114a9dddd91c4719eb8e,RDMF: More consistent define names.,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_449.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_449.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_449.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_450.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_450.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_450.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/bitops.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_451.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_451.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_451.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/blocked.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_452.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_452.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_452.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_453.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_453.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_453.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_454.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_454.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_454.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_455.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_455.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_455.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_456.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_456.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_456.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_457.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_457.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_457.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_458.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_458.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_458.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_459.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_459.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_459.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_460.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_460.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_460.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_461.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_461.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_461.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_462.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_462.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_462.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_463.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_463.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_463.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_464.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_464.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_464.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_465.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_465.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_465.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_466.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_466.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_466.cpp
40eb548a80797b93cc733876654ff0978d7381cf,RDMF: REDIS_OK REDIS_ERR -> C_OK C_ERR.,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_467.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_467.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_467.cpp
2d9e3eb107b6b6289d5e3a51a32b3a018c96103c,RDMF: redisAssert -> serverAssert.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_468.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_468.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_468.cpp
2d9e3eb107b6b6289d5e3a51a32b3a018c96103c,RDMF: redisAssert -> serverAssert.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_469.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_469.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_469.cpp
2d9e3eb107b6b6289d5e3a51a32b3a018c96103c,RDMF: redisAssert -> serverAssert.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_470.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_470.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_470.cpp
2d9e3eb107b6b6289d5e3a51a32b3a018c96103c,RDMF: redisAssert -> serverAssert.,[],src/redisassert.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_471.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_471.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_471.cpp
2d9e3eb107b6b6289d5e3a51a32b3a018c96103c,RDMF: redisAssert -> serverAssert.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_472.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_472.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_472.cpp
2d9e3eb107b6b6289d5e3a51a32b3a018c96103c,RDMF: redisAssert -> serverAssert.,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_473.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_473.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_473.cpp
2d9e3eb107b6b6289d5e3a51a32b3a018c96103c,RDMF: redisAssert -> serverAssert.,[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_474.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_474.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_474.cpp
14ff572482cfe02c5ac61a1816cb8099d458e499,RDMF: OBJ_ macros for object related stuff.,[],src/bitops.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_475.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_475.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_475.cpp
14ff572482cfe02c5ac61a1816cb8099d458e499,RDMF: OBJ_ macros for object related stuff.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_476.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_476.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_476.cpp
14ff572482cfe02c5ac61a1816cb8099d458e499,RDMF: OBJ_ macros for object related stuff.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_477.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_477.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_477.cpp
14ff572482cfe02c5ac61a1816cb8099d458e499,RDMF: OBJ_ macros for object related stuff.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_478.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_478.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_478.cpp
14ff572482cfe02c5ac61a1816cb8099d458e499,RDMF: OBJ_ macros for object related stuff.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_479.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_479.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_479.cpp
14ff572482cfe02c5ac61a1816cb8099d458e499,RDMF: OBJ_ macros for object related stuff.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_480.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_480.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_480.cpp
14ff572482cfe02c5ac61a1816cb8099d458e499,RDMF: OBJ_ macros for object related stuff.,[],src/slowlog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_481.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_481.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_481.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_482.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_482.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_482.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_483.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_483.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_483.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_484.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_484.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_484.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_485.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_485.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_485.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/multi.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_486.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_486.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_486.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_487.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_487.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_487.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_488.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_488.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_488.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_489.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_489.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_489.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_490.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_490.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_490.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_491.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_491.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_491.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_492.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_492.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_492.cpp
554bd0e7bd81715e319cafda437ed2aebd44b6e9,"RDMF: use client instead of redisClient, like Disque.",[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_493.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_493.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_493.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_494.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_494.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_494.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/bio.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_495.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_495.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_495.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_496.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_496.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_496.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_497.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_497.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_497.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_498.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_498.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_498.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_499.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_499.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_499.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_500.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_500.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_500.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_501.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_501.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_501.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_502.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_502.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_502.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_503.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_503.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_503.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_504.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_504.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_504.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/server.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_505.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_505.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_505.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/server.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_506.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_506.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_506.cpp
424fe9afd9264991cddb502204276a244537c87f,RDMF: redisLog -> serverLog.,[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_507.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_507.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_507.cpp
cef054e86856463d3e79d4a5048507377c85eab7,RDMF (Redis/Disque merge friendlyness) refactoring WIP 1.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_508.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_508.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_508.cpp
b684e2dad1d884af7bf1047febbb54ee6e0324ba,deps/hiredis SDS updated to version 2.0.0.,[],deps/hiredis/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_509.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_509.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_509.cpp
cb2782c314f0af3df56853974f7ba5541c095eeb,SDS: changes to unify Redis SDS with antirez/sds repo.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_510.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_510.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_510.cpp
cb2782c314f0af3df56853974f7ba5541c095eeb,SDS: changes to unify Redis SDS with antirez/sds repo.,[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_511.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_511.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_511.cpp
ef29748d0d758c956f8adca70bc74902b0c2e20c,Check args before run ckquorum. Fix issue #2635,[u'https://gitlab.kitware.com/cmake/cmake/issues/2635'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_512.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_512.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_512.cpp
935251259f19666bb0d8b7a83db771ca49d5e182,Merge branch 'sds' into unstable,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_513.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_513.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_513.cpp
935251259f19666bb0d8b7a83db771ca49d5e182,Merge branch 'sds' into unstable,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_514.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_514.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_514.cpp
935251259f19666bb0d8b7a83db771ca49d5e182,Merge branch 'sds' into unstable,[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_515.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_515.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_515.cpp
427794d845534ea0e84e0ef9582f9ae5800c96cf,"bugfix: errno might change before logging

Signed-off-by: Yongyue Sun <abioy.sun@gmail.com>",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_516.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_516.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_516.cpp
427794d845534ea0e84e0ef9582f9ae5800c96cf,"bugfix: errno might change before logging

Signed-off-by: Yongyue Sun <abioy.sun@gmail.com>",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_517.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_517.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_517.cpp
3da97ea67f3b25097d5a57aeda9ce5d94461035e,Add sdshdr5 to DEBUG structsize.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_518.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_518.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_518.cpp
0ab27a4594aa73ffdabf2afb935d85ab6c03f0ee,"SDS: New sds type 5 implemented.

This is an attempt to use the refcount feature of the sds.c fork
provided in the Pull Request #2509. A new type, SDS_TYPE_5 is introduced
having a one byte header with just the string length, without
information about the available additional length at the end of the
string (this means that sdsMakeRoomFor() will be required each time
we want to append something, since the string will always report to have
0 bytes available).

More work needed in order to avoid common SDS functions will pay the
cost of this type. For example both sdscatprintf() and sdscatfmt()
should try to upgrade to SDS_TYPE_8 ASAP when appending chars.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2509'],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_519.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_519.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_519.cpp
0ab27a4594aa73ffdabf2afb935d85ab6c03f0ee,"SDS: New sds type 5 implemented.

This is an attempt to use the refcount feature of the sds.c fork
provided in the Pull Request #2509. A new type, SDS_TYPE_5 is introduced
having a one byte header with just the string length, without
information about the available additional length at the end of the
string (this means that sdsMakeRoomFor() will be required each time
we want to append something, since the string will always report to have
0 bytes available).

More work needed in order to avoid common SDS functions will pay the
cost of this type. For example both sdscatprintf() and sdscatfmt()
should try to upgrade to SDS_TYPE_8 ASAP when appending chars.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2509'],src/sds.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_520.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_520.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_520.cpp
a76b380e06d6758dcd84277003ca7af520c2b422,Fix DEBUG structsize output.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_521.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_521.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_521.cpp
f15df8ba5db09bdf4be58c53930799d82120cc34,sds size classes - memory optimization,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_522.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_522.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_522.cpp
f15df8ba5db09bdf4be58c53930799d82120cc34,sds size classes - memory optimization,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_523.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_523.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_523.cpp
f15df8ba5db09bdf4be58c53930799d82120cc34,sds size classes - memory optimization,[],src/sds.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_524.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_524.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_524.cpp
0f64080dcb9f44c923379f909aae82f6c2b2ed19,"DEBUG HTSTATS <dbid> added.

The command reports information about the hash table internal state
representing the specified database ID.

This can be used in order to investigate rehashings, memory usage issues
and for other debugging purposes.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_525.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_525.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_525.cpp
0f64080dcb9f44c923379f909aae82f6c2b2ed19,"DEBUG HTSTATS <dbid> added.

The command reports information about the hash table internal state
representing the specified database ID.

This can be used in order to investigate rehashings, memory usage issues
and for other debugging purposes.",[],src/dict.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_526.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_526.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_526.cpp
b96af595a5fddbbdcbf78ed3c51acd60976416f4,"GEOENCODE / GEODECODE commands removed.

Rationale:

1. The commands look like internals exposed without a real strong use
case.
2. Whatever there is an use case, the client would implement the
commands client side instead of paying RTT just to use a simple to
reimplement library.
3. They add complexity to an otherwise quite straightforward API.

So for now KILLED ;-)",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_527.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_527.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_527.cpp
5e04189887ed9100577374cede428c62d23fabe4,"Geo: validate long,lat passed by user via API",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_528.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_528.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_528.cpp
4160bf0448e93e25607f844a149b1418e3fa3dd4,"Geo: sync faster decoding from krtm that synched from Ardb.

Instead of successive divisions in iteration the new code uses bitwise
magic to interleave / deinterleave two 32bit values into a 64bit one.
All tests still passing and is measurably faster, so worth it.",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_529.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_529.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_529.cpp
69c5b27273272c93822a5d2bd776ddc11210e88a,"Geo: support units only in abbreviated form.

I'm not a strong believer in multiple syntax for the same stuff, so
now units can be specified only as m, km, ft, mi.",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_530.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_530.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_530.cpp
083acbebc85191314840a02a8618f051f49d0319,"Geo: remove static declarations.

Stack traces produced by Redis on crash are the most useful tool we
have to fix non easily reproducible crashes, or even easily reproducible
ones where the user just posts a bug report and does not collaborate
furhter.

By declaring functions ""static"" they no longer show up in the stack
trace.",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_531.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_531.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_531.cpp
f108c687ad122d76e8468f98934255ffb51cc7e8,Geo: GEODIST and tests.,[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_532.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_532.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_532.cpp
ddc7b85c5f28fd96009a006e5bed5c775bc7f367,Geo: GEOENCODE: fix command arity check.,[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_533.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_533.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_533.cpp
db3df441844f8479cd341d1e2d7553139ee4cfec,Geo: debugging printf calls removed.,[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_534.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_534.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_534.cpp
6d21027a23864500aadcc200fecfc594b98e9c88,"Geo: GEOADD form using radius removed.

Can't immagine how this is useful in the context of the API exported by
Redis, and we are always in time to add more bloat if needed, later.",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_535.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_535.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_535.cpp
a3b07b1718368447f76788dd8febe01635a11f69,Geo: COUNT option for GEORADIUS.,[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_536.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_536.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_536.cpp
fa9d62d34fd739160b2a45b713e912a6c4dabb75,"Geo: from lat,lon API to lon,lat API according to GIS standard

The GIS standard and all the major DBs implementing GIS related
functions take coordinates as x,y that is longitude,latitude.
It was a bad start for Redis to do things differently, so even if this
means that existing users of the Geo module will be required to change
their code, Redis now conforms to the standard.

Usually Redis is very backward compatible, but this is not an exception
to this rule, since this is the first Geo implementation entering the
official Redis source code. It is not wise to try to be backward
compatible with code forks... :-)

Close #2637.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2637'],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_537.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_537.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_537.cpp
8d5ad19d154dde494a87ce0af29811bc2d3217e1,"Geo: return REDIS_* where appropriate, improve commenting",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_538.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_538.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_538.cpp
bb3284563c1465556f0d02ab7b4616dcc414b930,"Geo: GEOADD implementation improved, replication fixed

1. We no longer use a fake client but just rewriting.
2. We group all the inserts into a single ZADD dispatch (big speed win).
3. As a side effect of the correct implementation, replication works.
4. The return value of the command is now correct.",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_539.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_539.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_539.cpp
a3018a215f958d42224413de04f9e34387cac4c4,"Geo: rename x,y to lat,lon for clarity",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_540.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_540.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_540.cpp
0b93139048c9e541feeaeacb79a604f50f6a2149,"Geo: big refactoring of geo.c, zset.[ch] removed.

This commit simplifies the implementation in a few ways:

1. zsetScore implementation improved a bit and moved into t_zset.c where
   is now also used to implement the ZSCORE command.

2. Range extraction from the sorted set remains a separated
   implementation from the one in t_zset.c, but was hyper-specialized in
   order to avoid accumulating results into a list and remove the ones
   outside the radius.

3. A new type is introduced: geoArray, which can accumulate geoPoint
   structures in a vector with power of two expansion policy. This is
   useful since we have to call qsort() against it before returning the
   result to the user.

4. As a result of 1, 2, 3, the two files zset.c and zset.h are now
   removed, including the function to merge two lists (now handled with
   functions that can add elements to existing geoArray arrays) and
   the machinery used in order to pass zset results.

5. geoPoint structure simplified because of the general code structure
   simplification, so we no longer need to take references to objects.

6. Not counting the JSON removal the refactoring removes 200 lines of
   code for the same functionalities, with a simpler to read
   implementation.

7. GEORADIUS is now 2.5 times faster testing with 10k elements and a
   radius resulting in 124 elements returned. However this is mostly a
   side effect of the refactoring and simplification. More speed gains
   can be achieved by trying to optimize the code.",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_541.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_541.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_541.cpp
0b93139048c9e541feeaeacb79a604f50f6a2149,"Geo: big refactoring of geo.c, zset.[ch] removed.

This commit simplifies the implementation in a few ways:

1. zsetScore implementation improved a bit and moved into t_zset.c where
   is now also used to implement the ZSCORE command.

2. Range extraction from the sorted set remains a separated
   implementation from the one in t_zset.c, but was hyper-specialized in
   order to avoid accumulating results into a list and remove the ones
   outside the radius.

3. A new type is introduced: geoArray, which can accumulate geoPoint
   structures in a vector with power of two expansion policy. This is
   useful since we have to call qsort() against it before returning the
   result to the user.

4. As a result of 1, 2, 3, the two files zset.c and zset.h are now
   removed, including the function to merge two lists (now handled with
   functions that can add elements to existing geoArray arrays) and
   the machinery used in order to pass zset results.

5. geoPoint structure simplified because of the general code structure
   simplification, so we no longer need to take references to objects.

6. Not counting the JSON removal the refactoring removes 200 lines of
   code for the same functionalities, with a simpler to read
   implementation.

7. GEORADIUS is now 2.5 times faster testing with 10k elements and a
   radius resulting in 124 elements returned. However this is mostly a
   side effect of the refactoring and simplification. More speed gains
   can be achieved by trying to optimize the code.",[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_542.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_542.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_542.cpp
2f66550729924ccfc20c1418f498f21e0e4bdeca,"Geo: Pub/Sub feature removed

This feature apparently is not going to be very useful, to send a
GEOADD+PUBLISH combo is exactly the same. One that would make a ton of
difference is the ability to subscribe to a position and a radius, and
get the updates in terms of objects entering/exiting the area.",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_543.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_543.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_543.cpp
fc03d08ee0bc7abcb5f036454458d5b085fff10c,"Geo: addReplyDoubleDistance() precision set to 4 digits

Also:
1. The function was renamed.
2. An useless initialization of a buffer was removed.",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_544.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_544.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_544.cpp
b18c68aa7fa780ab0d591c91ad758246fa9fdc9e,"Geo: JSON features removed

The command can only return data in the normal Redis protocol. It is up
to the caller to translate to JSON if needed.",[],src/geo.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_545.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_545.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_545.cpp
7f4ac3d19c28e0a7a608fe94411e92bc59097e11,"[In-Progress] Add Geo Commands

Current todo:
  - replace functions in zset.{c,h} with a new unified Redis
    zset access API.

Once we get the zset interface fixed, we can squash
relevant commits in this branch and have one nice commit
to merge into unstable.

This commit adds:
  - Geo commands
  - Tests; runnable with: ./runtest --single unit/geo
  - Geo helpers in deps/geohash-int/
  - src/geo.{c,h} and src/geojson.{c,h} implementing geo commands
  - Updated build configurations to get everything working
  - TEMPORARY: src/zset.{c,h} implementing zset score and zset
    range reading without writing to client output buffers.
  - Modified linkage of one t_zset.c function for use in zset.c

Conflicts:
	src/Makefile
	src/redis.c",[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_546.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_546.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_546.cpp
821a986643717018cad8af9f35cba49818e60294,"Sentinel: fix bug in config rewriting during failover

We have a check to rewrite the config properly when a failover is in
progress, in order to add the current (already failed over) master as
slave, and don't include in the slave list the promoted slave itself.

However there was an issue, the variable with the right address was
computed but never used when the code was modified, and no tests are
available for this feature for two reasons:

1. The Sentinel unit test currently does not test Sentinel ability to
persist its state at all.
2. It is a very hard to trigger state since it lasts for little time in
the context of the testing framework.

However this feature should be covered in the test in some way.

The bug was found by @badboy using the clang static analyzer.

Effects of the bug on safety of Sentinel
===

This bug results in severe issues in the following case:

1. A Sentinel is elected leader.
2. During the failover, it persists a wrong config with a known-slave
entry listing the master address.
3. The Sentinel crashes and restarts, reading invalid configuration from
disk.
4. It sees that the slave now does not obey the logical configuration
(should replicate from the current master), so it sends a SLAVEOF
command to the master (since the slave master is the same) creating a
replication loop (attempt to replicate from itself) which Redis is
currently unable to detect.
5. This means that the master is no longer available because of the bug.

However the lack of availability should be only transient (at least
in my tests, but other states could be possible where the problem
is not recovered automatically) because:

6. Sentinels treat masters reporting to be slaves as failing.
7. A new failover is triggered, and a slave is promoted to master.

Bug lifetime
===

The bug is there forever. Commit 16237d78 actually tried to fix the bug
but in the wrong way (the computed variable was never used! My fault).
So this bug is there basically since the start of Sentinel.

Since the bug is hard to trigger, I remember little reports matching
this condition, but I remember at least a few. Also in automated tests
where instances were stopped and restarted multiple times automatically
I remember hitting this issue, however I was not able to reproduce nor
to determine with the information I had at the time what was causing the
issue.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_547.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_547.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_547.cpp
8fa8b251a9766f987a7704f034e66c645f0c3afe,"anetTcpGenericConnect(), jump to error not end on error

Two code paths jumped to the ""ok, return the socket to the user"" code
path to handle error conditions.

Related to issues #2609 and #2612.","[u'https://gitlab.kitware.com/cmake/cmake/issues/2609', u'https://gitlab.kitware.com/cmake/cmake/issues/2612']",src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_548.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_548.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_548.cpp
a401a84eb2fb0b22e003cdd2c5231995f57bab8b,"Don't try to bind the source address for MIGRATE

Related to issues #2609 and #2612.","[u'https://gitlab.kitware.com/cmake/cmake/issues/2609', u'https://gitlab.kitware.com/cmake/cmake/issues/2612']",src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_549.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_549.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_549.cpp
ffd6637e90d816b7a17a96f144f75153c952d8cf,hide access to debug table,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_550.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_550.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_550.cpp
28a250d9e4ab0aa659a4ed74ad5c52272cb8dda7,Merge branch 'zaddnx' into unstable,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_551.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_551.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_551.cpp
382a943414d17ace950901aad07dbde577f2142a,ZADD implemenation able to take options.,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_552.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_552.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_552.cpp
5080f2d69908e2324311f03224a5dc7c98322569,Sentinel: help subcommand in simulate-failure command,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_553.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_553.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_553.cpp
fb3af75f7478c6d0717d076289976f16b2389e28,"Sentinel: initial failure simulator implemented

This commit adds the SENTINEL simulate-failure, that sets specific
hooks inside the state machine that will crash Sentinel, for testing
purposes.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_554.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_554.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_554.cpp
164b6bbab5c4cf3daf2e26653b114697bafb502b,Merge branch 'sentinel-32' into unstable,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_555.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_555.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_555.cpp
abc65e8987df5a6c94132d7ff1da3cdfbe4a989e,"Sentinel: SENTINEL CKQUORUM command

A way for monitoring systems to check that Sentinel is technically able
to reach the quorum and failover, using the currently visible Sentinels.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_556.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_556.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_556.cpp
7f7ddbba3ce01101dceebe5ffaec054458fb2b00,"Merge pull request #2573 from HeartSaVioR/fix-protocol-error-log-level

protocol error log should be seen by debug/verbose level",[u'https://gitlab.kitware.com/cmake/cmake/issues/2573'],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_557.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_557.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_557.cpp
4dee18cb66fe37190c619232d61f4bea43d6dfb0,Sentinel: config-rewrite unique ID just one time,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_558.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_558.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_558.cpp
f9e942d4ae310a9416d0f91fa0e32c799009b8bc,Sentinel: remove debugging message from releaseInstanceLink(),[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_559.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_559.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_559.cpp
87b6013adb750b1f5ba161202876a84ffac45d3a,Sentinel: remove SHARED! debugging printf,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_560.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_560.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_560.cpp
5a0516b5b96b7bbd16c1942b281c798f3db03630,"Sentinel: rewrite callback chain removing instances with shared links

Otherwise pending commands callbacks will fire with a reference that no
longer exists.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_561.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_561.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_561.cpp
05dbc820051daab748761ec67c9c1bba37f2717e,Sentinel: debugging code removed from sentinelSendPing(),[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_562.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_562.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_562.cpp
58d2bb951a3ad85b312e9e009a66eb1397e38780,"Sentinel: use active/last time for ping logic

The PING trigger was improved again by using two fields instead of a
single one to remember when the last ping was sent:

1. The ""active"" ping is the time at which we sent the last ping that
still received no reply. However we continue to ping non replying
instances even if they have an old active ping: the link may be
disconnected and reconencted in the meantime so the older pings may get
lost even if it's a TCP socket.

2. The ""last"" ping is the time at which we really sent the last ping
on the wire, and this is used in order to throttle the amount of pings
we send during failures (when no pong is received).

All in all the failure detector effectiveness should be identical but we
avoid to flood instances with pings during failures or when they are
slow.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_563.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_563.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_563.cpp
9d5e2ed3922dd6f424a17c1d6712e672d4ee5fa0,Sentinel: same-Sentinel link sharing across masters,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_564.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_564.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_564.cpp
6b953a268186a37084d07046267dcbf263d61372,protocol error log should be seen debug/verbose level,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_565.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_565.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_565.cpp
1029276c0d46e643a5740120d44a9cce8ba652b9,Sentinel: connection sharing WIP #1,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_566.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_566.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_566.cpp
794fc4c9a8b2e4721196df341b84cb0569ab0efa,"Sentinel: persist its unique ID across restarts.

Previously Sentinels always changed unique ID across restarts, relying
on the server.runid field. This is not a good idea, and forced Sentinel
to rely on detection of duplicated Sentinels and a potentially dangerous
clean-up and re-add operation of the Sentinel instance that was
rebooted.

Now the ID is generated at the first start and persisted in the
configuration file, so that a given Sentinel will have its unique
ID forever (unless the configuration is manually deleted or there is a
filesystem corruption).",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_567.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_567.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_567.cpp
8af99d0c09324598faf9f8e5b9aa300fc913ff3c,"Merge pull request #2530 from FuGangqiang/unstable

fix sds.c",[u'https://gitlab.kitware.com/cmake/cmake/issues/2530'],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_568.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_568.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_568.cpp
c806dd799bc8f3c578581194d499b50acec44b7d,"Fix Sentinel memory leak (hiredis bug)

This fixes issue #2535, that was actually an hiredis library bug (I
submitted an issue and fix to the redis/hiredis repo as well).

When an asynchronous hiredis connection subscribes to a Pub/Sub channel
and gets an error, and in other related conditions, the function
redisProcessCallbacks() enters a code path where the link is
disconnected, however the function returns before freeing the allocated
reply object. This causes a memory leak. The memory leak was trivial to
trigger in Redis Sentinel, which uses hiredis, every time we tried to
subscribe to an instance that required a password, in case the Sentinel
was configured either with the wrong password or without password at
all. In this case, the -AUTH error caused the leaking code path to be
executed.

It was verified with Valgrind that after this change the leak no longer
happens in Sentinel with a misconfigured authentication password.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2535'],deps/hiredis/async.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_569.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_569.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_569.cpp
239494db645c6ed87e605cc4b0a10db78b50e5cd,fix doc example,[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_570.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_570.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_570.cpp
6c60526db91e23fb2d666fc52facc9a11780a2a3,"Net: improve prepareClientToWrite() error handling and comments.

When we fail to setup the write handler it does not make sense to take
the client around, it is missing writes: whatever is a client or a slave
anyway the connection should terminated ASAP.

Moreover what the function does exactly with its return value, and in
which case the write handler is installed on the socket, was not clear,
so the functions comment are improved to make the goals of the function
more obvious.

Also related to #2485.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2485'],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_571.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_571.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_571.cpp
9b7f8b1c9b379ab842d40df4636dfbbeb6376fcb,"Cluster: redirection refactoring + handling of blocked clients.

There was a bug in Redis Cluster caused by clients blocked in a blocking
list pop operation, for keys no longer handled by the instance, or
in a condition where the cluster became down after the client blocked.

A typical situation is:

1) BLPOP <somekey> 0
2) <somekey> hash slot is resharded to another master.

The client will block forever int this case.

A symmentrical non-cluster-specific bug happens when an instance is
turned from master to slave. In that case it is more serious since this
will desynchronize data between slaves and masters. This other bug was
discovered as a side effect of thinking about the bug explained and
fixed in this commit, but will be fixed in a separated commit.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_572.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_572.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_572.cpp
9b7f8b1c9b379ab842d40df4636dfbbeb6376fcb,"Cluster: redirection refactoring + handling of blocked clients.

There was a bug in Redis Cluster caused by clients blocked in a blocking
list pop operation, for keys no longer handled by the instance, or
in a condition where the cluster became down after the client blocked.

A typical situation is:

1) BLPOP <somekey> 0
2) <somekey> hash slot is resharded to another master.

The client will block forever int this case.

A symmentrical non-cluster-specific bug happens when an instance is
turned from master to slave. In that case it is more serious since this
will desynchronize data between slaves and masters. This other bug was
discovered as a side effect of thinking about the bug explained and
fixed in this commit, but will be fixed in a separated commit.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_573.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_573.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_573.cpp
94030fa4d7962a8e241ad27cadbc71a0f1b61d1b,Two cluster.c comments improved.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_574.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_574.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_574.cpp
2950824ab67e5fef59aae87bf4c0ada8ab39d570,Cluster: TAKEOVER option for manual failover.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_575.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_575.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_575.cpp
a7010ae20813658c5cd3b6f1a6651ec5cb0909e2,Cluster: non-conditional steps of slave failover refactored into a function.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_576.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_576.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_576.cpp
230d14142032bd054efceab21801068b5aa8a330,"Cluster: separate unknown master check from the rest.

In no case we should try to attempt to failover if myself->slaveof is
NULL.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_577.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_577.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_577.cpp
4f2555aa17504b1f99a5f35a69302cc425b30d74,"Cluster: refactoring around configEpoch handling.

This commit moves the process of generating a new config epoch without
consensus out of the clusterCommand() implementation, in order to make
it reusable for other reasons (current target is to have a CLUSTER
FAILOVER option forcing the failover when no master majority is
reachable).

Moreover the commit moves other functions which are similarly related to
config epochs in a new logical section of the cluster.c file, just for
clarity.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_578.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_578.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_578.cpp
438a1a84e8aa37a19a744c38488b261dd62c145c,"Cluster: more robust slave check in CLUSTER REPLICATE.

There are rare conditions where node->slaveof may be NULL even if the
node is a slave. To check by flag is much more robust.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_579.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_579.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_579.cpp
e1b6c9dd1839f5ce46ce06e87f6b4095e3f92a4f,Cluster: CLUSTER NODES speedup.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_580.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_580.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_580.cpp
50b41b6ad3beee554e49fadc667ff0e6b00dfafa,CONFIG SET refactoring: use enums in more places.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_581.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_581.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_581.cpp
8e219224b9c9112806ecc868156fdc0b5e0b6d80,"CONFIG refactoring: configEnum abstraction.

Still many things to convert inside config.c in the next commits.
Some const safety in String objects creation and addReply() family
functions.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_582.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_582.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_582.cpp
8e219224b9c9112806ecc868156fdc0b5e0b6d80,"CONFIG refactoring: configEnum abstraction.

Still many things to convert inside config.c in the next commits.
Some const safety in String objects creation and addReply() family
functions.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_583.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_583.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_583.cpp
8e219224b9c9112806ecc868156fdc0b5e0b6d80,"CONFIG refactoring: configEnum abstraction.

Still many things to convert inside config.c in the next commits.
Some const safety in String objects creation and addReply() family
functions.",[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_584.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_584.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_584.cpp
4a2a0d9e9d0112b1c870914aaeccf58ebc6c6ef2,CONFIG SET: memory and special field macros.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_585.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_585.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_585.cpp
3da7408359190fe3e5f7dadce1681609439b546e,CONFIG SET: additional 2 numerical fields refactored.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_586.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_586.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_586.cpp
d68f28a367389ebf28cc31775e678d3e655aa660,"CONFIG SET refactoring of bool and value fields.

Not perfect since The Solution IMHO is to have a DSL with a table of
configuration functions with type, limits, and aux functions to handle
the odd ones. However this hacky macro solution is already better and
forces to put limits in the range of numerical fields.

More field types to be refactored in the next commits hopefully.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_587.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_587.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_587.cpp
a664040eb773922bd3190bd13a272bfeb70e092e,Config: activerehashing option support in CONFIG SET.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_588.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_588.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_588.cpp
c77081a45a7c350428785b6e7fafeb2b57ea4330,Migrate: replace conditional with pre-computed value.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_589.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_589.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_589.cpp
7e6b4ea67bf38595ae25bdd6aa253702a1fd5509,"server.current_client fix and minor refactoring.

Thanks to @codeslinger (Toby DiPasquale) for identifying the issue.

Related to issue #2409.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2409'],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_590.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_590.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_590.cpp
832b0c7ccef0e7e11e0663530367de1d3fb9a959,"Improvements to PR #2425

1. Remove useless ""cs"" initialization.
2. Add a ""select"" var to capture a condition checked multiple times.
3. Avoid duplication of the same if (!copy) conditional.
4. Don't increment dirty if copy is given (no deletion is performed),
   otherwise we propagate MIGRATE when not needed.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2425'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_591.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_591.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_591.cpp
7fda935ad3b00dee511283f9bed92cd43cabcbf5,"Add last_dbid to migrateCachedSocket to avoid redundant SELECT

Avoid redundant SELECT calls when continuously migrating keys to
the same dbid within a target Redis instance.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_592.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_592.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_592.cpp
cc0d339bd19d37367806cc95111f1539aa268004,utils/hashtable/rehashing.c test updated to use new API.,[],utils/hashtable/rehashing.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_593.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_593.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_593.cpp
126462ee3676777e8e72669d1abb3ae5c429805f,"Merge pull request #2405 from sisirkoppaka/unstable

rehashing.c: Fix compile error originating from SPOP rewrite",[u'https://gitlab.kitware.com/cmake/cmake/issues/2405'],utils/hashtable/rehashing.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_594.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_594.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_594.cpp
e00cb78f6712ec2f796f430c7de90e1e64c1ec6d,"Merge pull request #2054 from mattsta/fix-set-sentinel-quorum

Sentinel: Add initial quorum bounds check",[u'https://gitlab.kitware.com/cmake/cmake/issues/2054'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_595.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_595.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_595.cpp
d83c810265c5c27ceec418b394860f82bb9ac446,"Merge pull request #2301 from mattsta/fix/lengths

Improve type correctness",[u'https://gitlab.kitware.com/cmake/cmake/issues/2301'],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_596.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_596.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_596.cpp
3689a0582bef619a574835044c68c05dd8bd13f7,"Merge pull request #2273 from mattsta/improve/consistency/INFO/memory

Improve consistency of INFO MEMORY",[u'https://gitlab.kitware.com/cmake/cmake/issues/2273'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_597.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_597.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_597.cpp
acb933a747ea5ecc85d984867e8627a813ffe2c1,rehashing.c: Fix compile error originating from SPOP rewrite,[],utils/hashtable/rehashing.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_598.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_598.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_598.cpp
9feee428f25a5681a06cd13ed1c4cc644759e719,"SPOP: reimplemented for speed and better distribution.

The old version of SPOP with ""count"" argument used an API call of dict.c
which was actually designed for a different goal, and was not capable of
good distribution. We follow a different three-cases approach optimized
for different ratiion between sets and requested number of elements.

The implementation is simpler and allowed the removal of a large amount
of code.",[],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_599.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_599.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_599.cpp
6b5922dcbbfe5428accc093892ff330211acf5d7,"SPOP with count: initial fixes to the implementation.

Severan problems are addressed but still a few missing.
Since replication of this command was more complex than others since it
needs to replicate multiple SREM commands, an old API able to do this
was reused (it was taken inside the implementation since it was pretty
obvious soon or later that would be useful). The API was improved a bit
so that now a command may opt-out for the standard command replication
when the server.dirty counter is incremented, in order to ""manually""
replicate what it wants.",[],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_600.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_600.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_600.cpp
05841a638697c0bbbc90bf2dc2da90659b71c26a,redis-cli --stat: show LOAD when loading.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_601.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_601.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_601.cpp
bd128f7969d0b28dbefe56bfdfa0b5b54102dc97,redis-cli --lru-test implemented (cache workload simulator).,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_602.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_602.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_602.cpp
ca23b2a6b739f179ed0dab3a3639153d8b18fd59,"redis-cli: interactive reconnection for latency modes.

--stat mode already used to reconnect automatically if the server is no
longer available. This is useful since this is an interactive mode used
for debugging, however the same applies to --latency and --latency-dist
modes, so now both use the reconnecting command execution as well.

The reconnection code was modified to use basic VT100 escape sequences
in order to play better with different kinds of output on the screen
when the reconnection happens, and to hide the reconnection attempt
output when finally the reconnection happens.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_603.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_603.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_603.cpp
cfe21852e79792b08afd2fe0872440edcddf577e,"redis-cli --latecy-dist reverted to gray scale.

So far not able to find a color palette within the 256 colors which is
not confusing. However I believe it is a possible task, so will try
better later.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_604.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_604.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_604.cpp
2723412b7bd15f37b8e714dc43a91732b7b606a3,"redis-cli --latency-dist now uses a color palette.

Still not happy with the result but low grays are hard to see in certain
monitors with a non perfect gamma.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_605.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_605.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_605.cpp
ace1acc532516bd5bd4af7faa9f173e233fa0549,redis-cli latency dist: add new top HL.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_606.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_606.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_606.cpp
414df143f51bab2f984c0fb67fccc637733bc570,Add missing latency-dest legend symbol.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_607.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_607.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_607.cpp
2860cf4139827c2791c5f79324555d7acf150243,Initial implementation of redis-cli --latency-dist.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_608.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_608.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_608.cpp
5fbb36f9e7cfc4012018c433b3ed682b06246f03,"Merge pull request #2346 from sunheehnus/sort

Little optimization & bug fix in sort.c",[u'https://gitlab.kitware.com/cmake/cmake/issues/2346'],src/sort.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_609.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_609.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_609.cpp
fad758b32292b9467a65f9f0f32ec8d4d0c84d4e,Check RDB automatically in a few more cases.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_610.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_610.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_610.cpp
7d1e15808422a1233280440566a5c684de7aa92f,"Handle redis-check-rdb as a standalone program.

This also makes it backward compatible in the usage, but for the command
name. However the old command name was less obvious so it is worth to
break it probably.

With the new setup the program main can perform argument parsing and
everything else useful for an RDB check regardless of the Redis server
itself.",[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_611.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_611.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_611.cpp
c908774b9e071cc1e4fddd8f430e13aec31f9b67,"sort.c: REDIS_LIST's dontsort optimization

also fix the situation ""dontsort DESC"" of a list",[],src/sort.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_612.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_612.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_612.cpp
1efacfe53d27913f640c886633340c37f76eafda,CLUSTER count-failure-reports command added.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_613.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_613.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_613.cpp
d3ef6c94bfa2d063f0fdbf128fba20119f5c1986,"Merge pull request #1744 from mattsta/better-RDB-failure-error

Improve Loading RDB Failure Action",[u'https://gitlab.kitware.com/cmake/cmake/issues/1744'],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_614.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_614.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_614.cpp
d8c7db1bdba3938f31856a067b2966285acbf97f,"Improve RDB error-on-load handling

Previouly if we loaded a corrupt RDB, Redis printed an error report
with a big ""REPORT ON GITHUB"" message at the bottom.  But, we know
RDB load failures are corrupt data, not corrupt code.

Now when RDB failure is detected (duplicate keys or unknown data
types in the file), we run check-rdb against the RDB then exit.  The
automatic check-rdb hopefully gives the user instant feedback
about what is wrong instead of providing a mysterious stack
trace.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_615.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_615.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_615.cpp
764b000c3e7fcb88bdef51b4d3339fa9f620ee07,"Remove code duplication from check-rdb

redis-check-rdb (previously redis-check-dump) had every RDB define
copy/pasted from rdb.h and some defines copied from redis.h.  Since
the initial copy, some constants had changed in Redis headers and
check-dump was using incorrect values.

Since check-rdb is now a mode of Redis, the old check-dump code
is cleaned up to:
  - replace all printf with redisLog (and remove \n from all strings)
  - remove all copy/pasted defines to use defines from rdb.h and redis.h
  - replace all malloc/free with zmalloc/zfree
  - remove unnecessary include headers",[],src/redis-check-rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_616.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_616.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_616.cpp
7885e1264e561afcc0182dd4763903def5138aa8,"DEBUG structsize

Show sizes of a few important data structures in Redis. More missing.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_617.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_617.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_617.cpp
e467cf5db31322868b8a374e57a74e9ed7150c78,"luaRedisGenericCommand(): log error at WARNING level when re-entered.

Rationale is that when re-entering, it is likely due to Lua debugging
hooks. Returning an error will be ignored in most cases, going totally
unnoticed. With the log at least we leave a trace.

Related to issue #2302.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2302'],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_618.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_618.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_618.cpp
bc8675612f50399568c1686ae0ee0d8d0b925254,"luaRedisGenericCommand() recursion: just return an error.

Instead of calling redisPanic() to abort the server.

Related to issue #2302.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2302'],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_619.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_619.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_619.cpp
839767ad0b304c5e3c18727b146a17356d1a5e7c,"Panic on recursive calls to luaRedisGenericCommand().

Related to issue #2302.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2302'],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_620.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_620.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_620.cpp
53c082ec39fb4daafba09e416279265f20d46006,"Improve networking type correctness

read() and write() return ssize_t (signed long), not int.

For other offsets, we can use the unsigned size_t type instead
of a signed offset (since our replication offsets and buffer
positions are never negative).",[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_621.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_621.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_621.cpp
10007cb78cff130d294465e64bec84c55ff0719f,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_622.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_622.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_622.cpp
e6416ca71cd7c55d8cddd0e1596fd989e24988d9,"Merge pull request #2266 from mattsta/improve/supervised/startup

Three fixes: explicit supervise, pidfile create, remove memory leaks.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2266'],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_623.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_623.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_623.cpp
5a685f35a9e09cba3b08640912aed93acbc63351,"Add maxmemory limit to INFO MEMORY

Since we have the eviction policy, we should have the memory limit too.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_624.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_624.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_624.cpp
6741bb981c53eb6b168e6ff96d915a0d51e0c7cd,"Improve consistency of INFO MEMORY fields

Adds used_memory_rss_human and used_memory_lua_human to match
all the other fields reporting human-readable memory too.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_625.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_625.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_625.cpp
36a3b75355bd5aea9e34889918c5b78fb79586e4,"Supervise redis processes only if configured

Adds configuration option 'supervised [no | upstart | systemd | auto]'

Also removed 'bzero' from the previous implementation because it's 2015.
(We could actually statically initialize those structs, but clang
throws an invalid warning when we try, so it looks bad even though it
isn't bad.)

Fixes #2264",[u'https://gitlab.kitware.com/cmake/cmake/issues/2264'],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_626.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_626.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_626.cpp
da95d22ad2e8c3232fd34a2c09c30fe74d71532a,"Prevent Lua scripts from violating Redis Cluster keyspace access rules.

Before this commit scripts were able to access / create keys outside the
set of hash slots served by the local node.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_627.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_627.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_627.cpp
206cd219b63c2255c0238cb9c602b65f05e98120,"RDB AUX fields support.

This commit introduces a new RDB data type called 'aux'. It is used in
order to insert inside an RDB file key-value pairs that may serve
different needs, without breaking backward compatibility when new
informations are embedded inside an RDB file. The contract between Redis
versions is to ignore unknown aux fields when encountered.

Aux fields can be used in order to:

1. Augment the RDB file with info like version of Redis that created the
RDB file, creation time, used memory while the RDB was created, and so
forth.
2. Add state about Redis inside the RDB file that we need to reload
later: replication offset, previos master run ID, in order to improve
failovers safety and allow partial resynchronization after a slave
restart.
3. Anything that we may want to add to RDB files without breaking the
ability of past versions of Redis to load the file.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_628.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_628.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_628.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_629.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_629.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_629.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/crc64.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_630.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_630.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_630.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_631.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_631.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_631.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/endianconv.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_632.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_632.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_632.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/intset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_633.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_633.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_633.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_634.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_634.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_634.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_635.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_635.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_635.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_636.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_636.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_636.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_637.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_637.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_637.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/sha1.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_638.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_638.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_638.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/sort.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_639.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_639.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_639.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_640.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_640.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_640.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_641.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_641.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_641.cpp
05ba119fbb9b0e05b7cca83bee8b01041e8877f2,"Merge pull request #2143 from mattsta/quicklist

Quicklist (linked list + ziplist)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2143'],src/zipmap.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_642.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_642.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_642.cpp
9e11d07909086999d54181466eafecab44a0dbe3,"Add more quicklist info to DEBUG OBJECT

Adds: ql_compressed (boolean, 1 if compression enabled for list, 0
otherwise)
Adds: ql_uncompressed_size (actual uncompressed size of all quicklistNodes)
Adds: ql_ziplist_max (quicklist max ziplist fill factor)

Compression ratio of the list is then ql_uncompressed_size / serializedlength

We report ql_uncompressed_size for all quicklists because serializedlength
is a _compressed_ representation anyway.

Sample output from a large list:
127.0.0.1:6379> llen abc
(integer) 38370061
127.0.0.1:6379> debug object abc
Value at:0x7ff97b51d140 refcount:1 encoding:quicklist serializedlength:19878335 lru:9718164 lru_seconds_idle:5 ql_nodes:21945 ql_avg_node:1748.46 ql_ziplist_max:-2 ql_compressed:0 ql_uncompressed_size:1643187761
(1.36s)

The 1.36s result time is because rdbSavedObjectLen() is serializing the
object, not because of any new stats reporting.

If we run DEBUG OBJECT on a compressed list, DEBUG OBJECT takes almost *zero*
time because rdbSavedObjectLen() reuses already-compressed ziplists:
127.0.0.1:6379> debug object abc
Value at:0x7fe5c5800040 refcount:1 encoding:quicklist serializedlength:19878335 lru:9718109 lru_seconds_idle:5 ql_nodes:21945 ql_avg_node:1748.46 ql_ziplist_max:-2 ql_compressed:1 ql_uncompressed_size:1643187761",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_643.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_643.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_643.cpp
5f506b6d2b4b5a3a06d8a5ee44f0ecc8b33a457f,"Cleanup quicklist style

Small fixes due to a new version of clang-format (it's less
crazy than the older version).",[],src/quicklist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_644.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_644.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_644.cpp
abdd1414a896c407c23a8f4165cfd6f027cf2b60,"Allow compression of interior quicklist nodes

Let user set how many nodes to *not* compress.

We can specify a compression ""depth"" of how many nodes
to leave uncompressed on each end of the quicklist.

Depth 0 = disable compression.
Depth 1 = only leave head/tail uncompressed.
  - (read as: ""skip 1 node on each end of the list before compressing"")
Depth 2 = leave head, head->next, tail->prev, tail uncompressed.
  - (""skip 2 nodes on each end of the list before compressing"")
Depth 3 = Depth 2 + head->next->next + tail->prev->prev
  - (""skip 3 nodes..."")
etc.

This also:
  - updates RDB storage to use native quicklist compression (if node is
    already compressed) instead of uncompressing, generating the RDB string,
    then re-compressing the quicklist node.
  - internalizes the ""fill"" parameter for the quicklist so we don't
    need to pass it to _every_ function.  Now it's just a property of
    the list.
  - allows a runtime-configurable compression option, so we can
    expose a compresion parameter in the configuration file if people
    want to trade slight request-per-second performance for up to 90%+
    memory savings in some situations.
  - updates the quicklist tests to do multiple passes: 200k+ tests now.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_645.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_645.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_645.cpp
5127e3998058983351b6c0b94d1341f9d646c9cc,"Add quicklist info to DEBUG OBJECT

Added field 'ql_nodes' and 'ql_avg_per_node'.

ql_nodes is the number of quicklist nodes in the quicklist.
ql_avg_node is the average fill level in each quicklist node. (LLEN / QL_NODES)

Sample output:
127.0.0.1:6379> DEBUG object b
Value at:0x7fa42bf2fed0 refcount:1 encoding:quicklist serializedlength:18489 lru:8983768 lru_seconds_idle:3 ql_nodes:430 ql_avg_per_node:511.73
127.0.0.1:6379> llen b
(integer) 220044",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_646.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_646.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_646.cpp
c6bf20c2a7423f464210dd19dd59073a6bb846a2,"Add adaptive quicklist fill factor

Fill factor now has two options:
  - negative (1-5) for size-based ziplist filling
  - positive for length-based ziplist filling with implicit size cap.

Negative offsets define ziplist size limits of:
  -1: 4k
  -2: 8k
  -3: 16k
  -4: 32k
  -5: 64k

Positive offsets now automatically limit their max size to 8k.  Any
elements larger than 8k will be in individual nodes.

Positive ziplist fill factors will keep adding elements
to a ziplist until one of:
  - ziplist has FILL number of elements
    - or -
  - ziplist grows above our ziplist max size (currently 8k)

When using positive fill factors, if you insert a large
element (over 8k), that element will automatically allocate
an individual quicklist node with one element and no other elements will be
in the same ziplist inside that quicklist node.

When using negative fill factors, elements up to the size
limit can be added to one quicklist node.  If an element
is added larger than the max ziplist size, that element
will be allocated an individual ziplist in a new quicklist node.

Tests also updated to start testing at fill factor -5.",[],src/quicklist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_647.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_647.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_647.cpp
0f15eb183b13108b08141d164edabae5b4bbef99,"Free ziplist test lists during tests

Freeing our test lists helps keep valgrind output clean",[],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_648.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_648.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_648.cpp
9d2dc0249c5ef99586710d711e1381c4178aeb39,"Add ziplistMerge()

This started out as #2158 by sunheehnus, but I kept rewriting it
until I could understand things more easily and get a few more
correctness guarantees out of the readability flow.

The original commit created and returned a new ziplist with the contents of
both input ziplists, but I prefer to grow one of the input ziplists
and destroy the other one.

So, instead of malloc+copy as in #2158, the merge now reallocs one of
the existing ziplists and copies the other ziplist into the new space.

Also added merge test cases to ziplistTest()","[u'https://gitlab.kitware.com/cmake/cmake/issues/2158', u'https://gitlab.kitware.com/cmake/cmake/issues/2158']",src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_649.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_649.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_649.cpp
5e362b84ab8b769bf2738daea97b45a375d223f1,"Add quicklist implementation

This replaces individual ziplist vs. linkedlist representations
for Redis list operations.

Big thanks for all the reviews and feedback from everybody in
https://github.com/antirez/redis/pull/2143",[],src/sort.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_650.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_650.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_650.cpp
5e362b84ab8b769bf2738daea97b45a375d223f1,"Add quicklist implementation

This replaces individual ziplist vs. linkedlist representations
for Redis list operations.

Big thanks for all the reviews and feedback from everybody in
https://github.com/antirez/redis/pull/2143",[],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_651.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_651.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_651.cpp
d956d809acb848aec0f6524e1337d274a635980d,Fix three simple clang analyzer warnings,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_652.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_652.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_652.cpp
9b786b124d6a547b87700114acdb9a617521a4bf,"Cleanup ziplist valgrind warnings

Valgrind can't detect 'memset' initializes things, so let's
statically initialize them to remove some unnecessary warnings.",[],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_653.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_653.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_653.cpp
1dfcd75ae36f5f7bea86893c391ea863cd32dee9,"Fix ziplist test for pop()

The previous test wasn't returning the new ziplist, so the test
was invalid.  Now the test works properly.

These problems were simultaenously discovered in #2154 and that
PR also had an additional fix we included here.",[u'https://gitlab.kitware.com/cmake/cmake/issues/2154'],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_654.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_654.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_654.cpp
fae53dea3333af7e5db1b26d7b7d4d5cea5a6d70,"Fix how zipEntry returns values

zipEntry was returning a struct, but that caused some
problems with tests under 32 bit builds.

The tests run better if we operate on structs allocated in the
caller without worrying about copying on return.",[],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_655.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_655.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_655.cpp
8febcffdc597566f1e307c0534014b2bdf687c02,"Allow all code tests to run using Redis args

Previously, many files had individual main() functions for testing,
but each required being compiled with their own testing flags.
That gets difficult when you have 8 different flags you need
to set just to run all tests (plus, some test files required
other files to be compiled aaginst them, and it seems some didn't
build at all without including the rest of Redis).

Now all individual test main() funcions are renamed to a test
function for the file itself and one global REDIS_TEST define enables
testing across the entire codebase.

Tests can now be run with:
  - `./redis-server test <test>`

  e.g. ./redis-server test ziplist

If REDIS_TEST is not defined, then no tests get included and no
tests are included in the final redis-server binary.",[],src/crc64.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_656.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_656.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_656.cpp
8febcffdc597566f1e307c0534014b2bdf687c02,"Allow all code tests to run using Redis args

Previously, many files had individual main() functions for testing,
but each required being compiled with their own testing flags.
That gets difficult when you have 8 different flags you need
to set just to run all tests (plus, some test files required
other files to be compiled aaginst them, and it seems some didn't
build at all without including the rest of Redis).

Now all individual test main() funcions are renamed to a test
function for the file itself and one global REDIS_TEST define enables
testing across the entire codebase.

Tests can now be run with:
  - `./redis-server test <test>`

  e.g. ./redis-server test ziplist

If REDIS_TEST is not defined, then no tests get included and no
tests are included in the final redis-server binary.",[],src/endianconv.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_657.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_657.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_657.cpp
8febcffdc597566f1e307c0534014b2bdf687c02,"Allow all code tests to run using Redis args

Previously, many files had individual main() functions for testing,
but each required being compiled with their own testing flags.
That gets difficult when you have 8 different flags you need
to set just to run all tests (plus, some test files required
other files to be compiled aaginst them, and it seems some didn't
build at all without including the rest of Redis).

Now all individual test main() funcions are renamed to a test
function for the file itself and one global REDIS_TEST define enables
testing across the entire codebase.

Tests can now be run with:
  - `./redis-server test <test>`

  e.g. ./redis-server test ziplist

If REDIS_TEST is not defined, then no tests get included and no
tests are included in the final redis-server binary.",[],src/intset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_658.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_658.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_658.cpp
8febcffdc597566f1e307c0534014b2bdf687c02,"Allow all code tests to run using Redis args

Previously, many files had individual main() functions for testing,
but each required being compiled with their own testing flags.
That gets difficult when you have 8 different flags you need
to set just to run all tests (plus, some test files required
other files to be compiled aaginst them, and it seems some didn't
build at all without including the rest of Redis).

Now all individual test main() funcions are renamed to a test
function for the file itself and one global REDIS_TEST define enables
testing across the entire codebase.

Tests can now be run with:
  - `./redis-server test <test>`

  e.g. ./redis-server test ziplist

If REDIS_TEST is not defined, then no tests get included and no
tests are included in the final redis-server binary.",[],src/sha1.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_659.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_659.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_659.cpp
8febcffdc597566f1e307c0534014b2bdf687c02,"Allow all code tests to run using Redis args

Previously, many files had individual main() functions for testing,
but each required being compiled with their own testing flags.
That gets difficult when you have 8 different flags you need
to set just to run all tests (plus, some test files required
other files to be compiled aaginst them, and it seems some didn't
build at all without including the rest of Redis).

Now all individual test main() funcions are renamed to a test
function for the file itself and one global REDIS_TEST define enables
testing across the entire codebase.

Tests can now be run with:
  - `./redis-server test <test>`

  e.g. ./redis-server test ziplist

If REDIS_TEST is not defined, then no tests get included and no
tests are included in the final redis-server binary.",[],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_660.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_660.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_660.cpp
8febcffdc597566f1e307c0534014b2bdf687c02,"Allow all code tests to run using Redis args

Previously, many files had individual main() functions for testing,
but each required being compiled with their own testing flags.
That gets difficult when you have 8 different flags you need
to set just to run all tests (plus, some test files required
other files to be compiled aaginst them, and it seems some didn't
build at all without including the rest of Redis).

Now all individual test main() funcions are renamed to a test
function for the file itself and one global REDIS_TEST define enables
testing across the entire codebase.

Tests can now be run with:
  - `./redis-server test <test>`

  e.g. ./redis-server test ziplist

If REDIS_TEST is not defined, then no tests get included and no
tests are included in the final redis-server binary.",[],src/zipmap.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_661.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_661.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_661.cpp
8380655e85f0afd1f0afc99b464717cb97002b7a,"Remove ziplist compiler warnings

Only happen when compiled with the test define.",[],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_662.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_662.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_662.cpp
27937c2821a85efd4245fcbac3ebed782129f5d7,"Add DEBUG JEMALLOC INFO

Uses jemalloc function malloc_stats_print() to return
stats about what jemalloc has allocated internally.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_663.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_663.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_663.cpp
ad41a7c40430bc043c2b95556197af2862a2bab5,"Add addReplyBulkSds() function

Refactor a common pattern into one function so we don't
end up with copy/paste programming.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_664.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_664.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_664.cpp
ad41a7c40430bc043c2b95556197af2862a2bab5,"Add addReplyBulkSds() function

Refactor a common pattern into one function so we don't
end up with copy/paste programming.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_665.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_665.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_665.cpp
ad41a7c40430bc043c2b95556197af2862a2bab5,"Add addReplyBulkSds() function

Refactor a common pattern into one function so we don't
end up with copy/paste programming.",[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_666.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_666.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_666.cpp
ad41a7c40430bc043c2b95556197af2862a2bab5,"Add addReplyBulkSds() function

Refactor a common pattern into one function so we don't
end up with copy/paste programming.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_667.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_667.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_667.cpp
840435ad0be252094b118af428590ba45ba1cec2,"INFO loading stats: three fixes.

1. Server unxtime may remain not updated while loading AOF, so ETA is
not updated correctly.

2. Number of processed byte was not initialized.

3. Possible division by zero condition (likely cause of issue #1932).",[u'https://gitlab.kitware.com/cmake/cmake/issues/1932'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_668.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_668.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_668.cpp
5888290d260cd60aedcd695c8625eadb6f2c349e,"Merge pull request #2229 from advance512/spopWithCount

Memory leak fixes (+ code style fixes)",[u'https://gitlab.kitware.com/cmake/cmake/issues/2229'],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_669.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_669.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_669.cpp
d74a5a088036342ed430c6199d69f00610e14370,"Following @mattsta's friendly review:
  1. memory leak in t_set.c has been fixed
  2. end-of-line spaces has been removed (from all over the place)
  3. for loops have been ordered up to match existing Redis style (less weird)
  4. comments format has been fixed (added * in the beggining of every comment line)",[],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_670.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_670.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_670.cpp
70674ac6776d1b8402bec3f38fa25deb8e22fe88,"Merge pull request #2215 from advance512/spopWithCount

SPOP optional count argument. (issue #1793, supersedes pull request #1803)","[u'https://gitlab.kitware.com/cmake/cmake/issues/2215', u'https://gitlab.kitware.com/cmake/cmake/issues/1793', u'https://gitlab.kitware.com/cmake/cmake/issues/1803']",src/intset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_671.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_671.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_671.cpp
70674ac6776d1b8402bec3f38fa25deb8e22fe88,"Merge pull request #2215 from advance512/spopWithCount

SPOP optional count argument. (issue #1793, supersedes pull request #1803)","[u'https://gitlab.kitware.com/cmake/cmake/issues/2215', u'https://gitlab.kitware.com/cmake/cmake/issues/1793', u'https://gitlab.kitware.com/cmake/cmake/issues/1803']",src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_672.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_672.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_672.cpp
e1e41f691f55fe54ec37822ad4084d0e06a37870,Merge branch 'improve/INFO/add-system-memory-size' of git://github.com/mattsta/redis into unstable,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_673.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_673.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_673.cpp
288028876f4428edfc044d8a1f1d6784b0dbe739,"Added <count> parameter to SPOP:
spopCommand() now runs spopWithCountCommand() in case the <count> param is found.
Added intsetRandomMembers() to Intset: Copies N random members from the set into inputted 'values' array. Uses either the Knuth or Floyd sample algos depending on ratio count/size.
Added setTypeRandomElements() to SET type: Returns a number of random elements from a non empty set. This is a version of setTypeRandomElement() that is modified in order to return multiple entries, using dictGetRandomKeys() and intsetRandomMembers().
Added tests for SPOP with <count>: unit/type/set, unit/scripting, integration/aof
--
Cleaned up code a bit to match with required Redis coding style",[],src/intset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_674.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_674.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_674.cpp
288028876f4428edfc044d8a1f1d6784b0dbe739,"Added <count> parameter to SPOP:
spopCommand() now runs spopWithCountCommand() in case the <count> param is found.
Added intsetRandomMembers() to Intset: Copies N random members from the set into inputted 'values' array. Uses either the Knuth or Floyd sample algos depending on ratio count/size.
Added setTypeRandomElements() to SET type: Returns a number of random elements from a non empty set. This is a version of setTypeRandomElement() that is modified in order to return multiple entries, using dictGetRandomKeys() and intsetRandomMembers().
Added tests for SPOP with <count>: unit/type/set, unit/scripting, integration/aof
--
Cleaned up code a bit to match with required Redis coding style",[],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_675.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_675.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_675.cpp
ce269ad3c5a13636b2c87aa69473c30410b06c36,"AnetFormatIP(): renamed, commented, now sticks to IP:port format.

A few code style changes + consistent format: not nice for humans but
better for parsers.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_676.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_676.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_676.cpp
ce269ad3c5a13636b2c87aa69473c30410b06c36,"AnetFormatIP(): renamed, commented, now sticks to IP:port format.

A few code style changes + consistent format: not nice for humans but
better for parsers.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_677.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_677.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_677.cpp
ce269ad3c5a13636b2c87aa69473c30410b06c36,"AnetFormatIP(): renamed, commented, now sticks to IP:port format.

A few code style changes + consistent format: not nice for humans but
better for parsers.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_678.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_678.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_678.cpp
ec5a0c548b0afbb1bd584b5761bf740460fd20a2,"Add cached total system memory to INFO output

There is no standard cross-platform way of obtaining
system memory info, but I found a useful function
convering all common platforms.  I removed support
for uncommon Redis platforms (windows, AIX) and left
others intact.

For more info, see:
http://nadeausoftware.com/articles/2012/09/c_c_tip_how_get_physical_memory_size_system

The system memory info is cached on startup, but some systems
may be able to change the amount of memory visible to Redis
at runtime if Redis is deployed in a VM or container.

Also see #1820",[u'https://gitlab.kitware.com/cmake/cmake/issues/1820'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_679.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_679.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_679.cpp
491881e13b73ab1686328efdceb4cdf8bde64046,"Cleanup all IP formatting code

Instead of manually checking for strchr(n,':') everywhere,
we can use our new centralized IP formatting functions.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_680.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_680.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_680.cpp
491881e13b73ab1686328efdceb4cdf8bde64046,"Cleanup all IP formatting code

Instead of manually checking for strchr(n,':') everywhere,
we can use our new centralized IP formatting functions.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_681.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_681.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_681.cpp
491881e13b73ab1686328efdceb4cdf8bde64046,"Cleanup all IP formatting code

Instead of manually checking for strchr(n,':') everywhere,
we can use our new centralized IP formatting functions.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_682.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_682.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_682.cpp
491881e13b73ab1686328efdceb4cdf8bde64046,"Cleanup all IP formatting code

Instead of manually checking for strchr(n,':') everywhere,
we can use our new centralized IP formatting functions.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_683.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_683.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_683.cpp
2d90619f88b81d1a094a875d73f8afd244480730,"Add centralized IP/Peer formatting functions

This stops us from needing to manually check against "":"" to
add brackets around IPv6 addresses everywhere.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_684.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_684.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_684.cpp
ff01ce55d8c71335eb5a69f71d2712013d8480ed,Removed useless space in redis-benchmark.c.,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_685.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_685.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_685.cpp
f1742ac9df1ccf2ebe40bf4e1be14d2374218847,"Merge pull request #2105 from Hailei/fix-redis-benchmark-idle-IDLE

FIXED redis-benchmark's idle mode.With idle mode shouldn't create write event",[u'https://gitlab.kitware.com/cmake/cmake/issues/2105'],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_686.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_686.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_686.cpp
4ff365b34a756e221abf0474ccfc941663e3a073,"Merge pull request #2114 from h0x91b/redis-cli-fix-cluster

Reconnect redis-cli when cluster return ""moved""",[u'https://gitlab.kitware.com/cmake/cmake/issues/2114'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_687.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_687.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_687.cpp
06e76bc3e22dd72a30a8a614d367246b03ff1312,"Better read-only behavior for expired keys in slaves.

Slaves key expire is orchestrated by the master. Sometimes the master
will send the synthesized DEL to expire keys on the slave with a non
trivial delay (when the key is not accessed, only the incremental expiry
algorithm will expire it in background).

During that time, a key is logically expired, but slaves still return
the key if you GET (or whatever) it. This is a bad behavior.

However we can't simply trust the slave view of the key, since we need
the master to be able to send write commands to update the slave data
set, and DELs should only happen when the key is expired in the master
in order to ensure consistency.

However 99.99% of the issues with this behavior is when a client which
is not a master sends a read only command. In this case we are safe and
can consider the key as non existing.

This commit does a few changes in order to make this sane:

1. lookupKeyRead() is modified in order to return NULL if the above
conditions are met.
2. Calls to lookupKeyRead() in commands actually writing to the data set
are repliaced with calls to lookupKeyWrite().

There are redundand checks, so for example, if in ""2"" something was
overlooked, we should be still safe, since anyway, when the master
writes the behavior is to don't care about what expireIfneeded()
returns.

This commit is related to  #1768, #1770, #2131.","[u'https://gitlab.kitware.com/cmake/cmake/issues/1768', u'https://gitlab.kitware.com/cmake/cmake/issues/1770', u'https://gitlab.kitware.com/cmake/cmake/issues/2131']",src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_688.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_688.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_688.cpp
06e76bc3e22dd72a30a8a614d367246b03ff1312,"Better read-only behavior for expired keys in slaves.

Slaves key expire is orchestrated by the master. Sometimes the master
will send the synthesized DEL to expire keys on the slave with a non
trivial delay (when the key is not accessed, only the incremental expiry
algorithm will expire it in background).

During that time, a key is logically expired, but slaves still return
the key if you GET (or whatever) it. This is a bad behavior.

However we can't simply trust the slave view of the key, since we need
the master to be able to send write commands to update the slave data
set, and DELs should only happen when the key is expired in the master
in order to ensure consistency.

However 99.99% of the issues with this behavior is when a client which
is not a master sends a read only command. In this case we are safe and
can consider the key as non existing.

This commit does a few changes in order to make this sane:

1. lookupKeyRead() is modified in order to return NULL if the above
conditions are met.
2. Calls to lookupKeyRead() in commands actually writing to the data set
are repliaced with calls to lookupKeyWrite().

There are redundand checks, so for example, if in ""2"" something was
overlooked, we should be still safe, since anyway, when the master
writes the behavior is to don't care about what expireIfneeded()
returns.

This commit is related to  #1768, #1770, #2131.","[u'https://gitlab.kitware.com/cmake/cmake/issues/1768', u'https://gitlab.kitware.com/cmake/cmake/issues/1770', u'https://gitlab.kitware.com/cmake/cmake/issues/2131']",src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_689.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_689.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_689.cpp
3da87b70ddb8c4ff49b3a32424baf24f0a88c2fa,"Merge pull request #2133 from chooper/histfile-override

override histfile from env - fixes #831 and copies #833",[u'https://gitlab.kitware.com/cmake/cmake/issues/2133'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_690.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_690.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_690.cpp
0422321617861a4a5b7b88d8767f6c3aa33189fa,Sentinel: removed useless flag var from INFO-CACHE.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_691.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_691.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_691.cpp
2d3f99a1b75c1278eb56e80af62c1ab013719559,"Merge pull request #2148 from mattsta/feature/sentinel/info-cache

Add SENTINEL INFO-CACHE [masters...]",[u'https://gitlab.kitware.com/cmake/cmake/issues/2148'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_692.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_692.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_692.cpp
562e72943bab6a85e5cbf90f46cd880d80863e4a,"Merge pull request #2176 from deepakverma/redis_bench_authfix

redis-benchmark AUTH command to be discarded after the first send #2150","[u'https://gitlab.kitware.com/cmake/cmake/issues/2176', u'https://gitlab.kitware.com/cmake/cmake/issues/2150']",src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_693.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_693.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_693.cpp
c58db75a6927efed3103274a352d1990ee0e3cf7,"Merge pull request #2119 from sunheehnus/unstable

sds.c/sdscatvprintf: va_end needs to be fixed",[u'https://gitlab.kitware.com/cmake/cmake/issues/2119'],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_694.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_694.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_694.cpp
4b03be6d2fd01d8cdab39d3bf5b77cdf9c07b594,"Merge pull request #2197 from sunheehnus/sparkline

sparkline.c: mov label-ini into the AddSample Function",[u'https://gitlab.kitware.com/cmake/cmake/issues/2197'],src/latency.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_695.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_695.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_695.cpp
c87a37661e14b288d2510b3e4de088a3fed3e5c0,sparkline.c: mov label-ini into the AddSample Function,[],src/latency.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_696.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_696.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_696.cpp
eca9fbdb50ab828b2382a813ccb8497bb5dd33ec,"Don't show the ASCII logo if syslog is enabled.

Closes issue #1935.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1935'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_697.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_697.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_697.cpp
3632026210817e527508e4b3b98f8cd6837547d3,Handle infinite explicitly in createStringObjectFromLongLong().,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_698.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_698.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_698.cpp
92c5ab40295260352f0da09616ff15b499251bad,"Use exp format and more precision output for ZSCAN.

Ref: issue #2175",[u'https://gitlab.kitware.com/cmake/cmake/issues/2175'],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_699.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_699.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_699.cpp
92c5ab40295260352f0da09616ff15b499251bad,"Use exp format and more precision output for ZSCAN.

Ref: issue #2175",[u'https://gitlab.kitware.com/cmake/cmake/issues/2175'],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_700.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_700.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_700.cpp
560ec60ed4ede71e71157fdb9a883f3efdedae3f,redis-benchmark AUTH command to be discarded after the first send #2150,[u'https://gitlab.kitware.com/cmake/cmake/issues/2150'],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_701.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_701.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_701.cpp
f8c73e38b5f5a57d6d573fc6fdfed5b68d4879c8,"Add SENTINEL INFO-CACHE [masters...]

Sentinel queries the INFO from every master and from every replica of
every master.

We can cache the INFO results in Sentinel so Sentinel can be a single
place to quickly get all INFO output for an entire Sentinel monitoring
group.

This commit gives us SENTINEL INFO-CACHE in two forms:
  - SENTINEL INFO-CACHE — returns all masters and all replicas
  - SENTINEL INFO-CACHE master0 master1 ... masterN — vararg specify masters

Results are returned as a multibulk reply with two top-level entries
for each master.  The first entry for each master is the name of the master.
The second entry is a nested multibulk reply with the contents of INFO,
first for the master, then an additional entry for each of the
replicas.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_702.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_702.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_702.cpp
6739ef4447adb17ce2d644b530aea429b8d52445,"Sentinel: Add initial quorum bounds check

Fixes #2054",[u'https://gitlab.kitware.com/cmake/cmake/issues/2054'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_703.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_703.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_703.cpp
90b6337c155aa0330143f5b0a0af1d430271d400,"Lua: upgrade cmsgpack to 0.4.0

Main reasons for upgrade:
  - Remove a warning when building Redis
  - Add multi pack/unpack
  - Improve memory usage and use Lua allocator properly
  - Fix some edge case encoding/decoding bugs",[],deps/lua/src/lua_cmsgpack.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_704.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_704.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_704.cpp
4fdcd213f026b55baccc0a99a15564092582a90e,"Lua: Upgrade cjson to 2.1.0 (2012-03-01)

The new cjson has some improvements over our current version including
increased platform compatability, a new resource limit to restrict
decode depth, and better invalid number handling.

One minor change was required to deps/Makefile because this version
of cjson doesn't export itself globally, so we added a quick little
define of -DENABLE_CJSON_GLOBAL.

cjson now has an optional higher performing float parsing interface,
but we are not including it (g_fmt.c, dtoa.c) because it requires
endianness declaration during compile time.

This commit is exactly lua_cjson.c from 2.1.0 with one minor
change of altering the two Lua includes for local search
instead of system-wide importing.",[],deps/lua/src/lua_cjson.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_705.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_705.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_705.cpp
4fdcd213f026b55baccc0a99a15564092582a90e,"Lua: Upgrade cjson to 2.1.0 (2012-03-01)

The new cjson has some improvements over our current version including
increased platform compatability, a new resource limit to restrict
decode depth, and better invalid number handling.

One minor change was required to deps/Makefile because this version
of cjson doesn't export itself globally, so we added a quick little
define of -DENABLE_CJSON_GLOBAL.

cjson now has an optional higher performing float parsing interface,
but we are not including it (g_fmt.c, dtoa.c) because it requires
endianness declaration during compile time.

This commit is exactly lua_cjson.c from 2.1.0 with one minor
change of altering the two Lua includes for local search
instead of system-wide importing.",[],deps/lua/src/strbuf.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_706.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_706.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_706.cpp
3ab832193cb58a876eba9c62df3fc0ea3814453a,override histfile from env - fixes #831 and copies #833,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_707.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_707.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_707.cpp
0f706adc5c2270e1084bba88279b844a91233c33,sds.c: Correct two spelling mistakes in comments,[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_708.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_708.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_708.cpp
bea45da07aff43e9694a14317dc555bef4e39ef6,sds.c/sdscatvprintf: set va_end to finish va_list cpy,[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_709.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_709.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_709.cpp
84ee8268c7a635cbbc4327bac20dab82d66ff9c3,sds.c: Correct some comments,[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_710.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_710.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_710.cpp
a07674307925c9af0226a71c11daffabea3ad764,"Merge pull request #2110 from mattsta/more-outbound-bind-fixes

Networking: add more outbound IP binding fixes",[u'https://gitlab.kitware.com/cmake/cmake/issues/2110'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_711.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_711.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_711.cpp
a07674307925c9af0226a71c11daffabea3ad764,"Merge pull request #2110 from mattsta/more-outbound-bind-fixes

Networking: add more outbound IP binding fixes",[u'https://gitlab.kitware.com/cmake/cmake/issues/2110'],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_712.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_712.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_712.cpp
7fcfbea0f53744f81f46d209dee0f5f70803f773,"Reconnect redis-cli when cluster return ""moved""

    if redis works in cluster-mode and redis-cli was run with argv, reconnect if needs.
    example:
    ./redis-cli set foo bar

    if return is MOVED redis-cli just do nothing.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_713.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_713.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_713.cpp
0014966c1e39cf2dcb4ca271900b93990d823bec,"Networking: add more outbound IP binding fixes

Same as the original bind fixes (we just missed these the
first time around).

This helps Redis not automatically send
connections from the first IP on an interface if we are bound
to a specific IP address (e.g. with multiple IP aliases on one
interface, you want to send from _your_ IP, not from the first IP
on the interface).",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_714.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_714.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_714.cpp
0014966c1e39cf2dcb4ca271900b93990d823bec,"Networking: add more outbound IP binding fixes

Same as the original bind fixes (we just missed these the
first time around).

This helps Redis not automatically send
connections from the first IP on an interface if we are bound
to a specific IP address (e.g. with multiple IP aliases on one
interface, you want to send from _your_ IP, not from the first IP
on the interface).",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_715.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_715.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_715.cpp
6fbaeddf3f547217df9f808da80a716661bfa591,Merge branch 'memsync' into unstable,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_716.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_716.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_716.cpp
6fbaeddf3f547217df9f808da80a716661bfa591,Merge branch 'memsync' into unstable,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_717.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_717.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_717.cpp
6fbaeddf3f547217df9f808da80a716661bfa591,Merge branch 'memsync' into unstable,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_718.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_718.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_718.cpp
6fbaeddf3f547217df9f808da80a716661bfa591,Merge branch 'memsync' into unstable,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_719.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_719.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_719.cpp
775cc30a98cd8f3ab3a14c76973234f84df3262d,Use new slave name function for diskless repl reporting.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_720.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_720.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_720.cpp
8a416ca46e705e52587c8ef7163b8a158fff8357,Added a function to get slave name for logs.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_721.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_721.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_721.cpp
707352439c317dd2151d02606de25d2d2a147a67,Diskless sync delay is now configurable.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_722.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_722.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_722.cpp
b4c4be785cf5aeb480eabefd18a131655d36734f,FIXED redis-benchmark's idle mode.With idle mode shouldn't create write event,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_723.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_723.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_723.cpp
c4dbc7cdecd876635318aff409e4382780ba2b15,Remove duplicated log message about starting BGSAVE.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_724.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_724.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_724.cpp
ebb3bd53c2944e987228bcf2f841f7412865bdab,"Diskless replication: child -> parent communication improved.

Child now reports full info to the parent including IDs of slaves in
failure state and exit code.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_725.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_725.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_725.cpp
2309f15d89e94babb2e9ef29225a40d822828379,anet.c: new API anetSendTimeout().,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_726.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_726.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_726.cpp
456003af25fc7d78867116749a2014611f3e4f64,Diskless replication: less debugging printfs around.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_727.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_727.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_727.cpp
525c488f639672e5b36cc67ede857d25a39c016d,"rio fdset target: handle short writes.

While the socket is set in blocking mode, we still can get short writes
writing to a socket.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_728.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_728.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_728.cpp
74f90c61232859f35db4eabf5b0bf1c8e4123bf0,anet.c: API to set sockets back to blocking mode.,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_729.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_729.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_729.cpp
25a3d9965e0a130705d974ae6a8a6a51e7fabe95,Diskless replication: remove 40 bytes EOF mark from end of RDB file.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_730.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_730.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_730.cpp
5ee2ccf48e75012b2cabefd89f40bd09a1f10258,Diskless replication: EOF:<mark> streaming support slave side.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_731.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_731.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_731.cpp
43ae6064302ecba5380c149334f78033137aa850,Diskless replication: redis.conf and CONFIG SET/GET support.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_732.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_732.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_732.cpp
3730d118a3ee0ddfc640ba1c8cf77a33dff66a35,Diskless replication: handle putting the slave online.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_733.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_733.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_733.cpp
93eed9ae0163e328c33b16ab9ea3c4fbe0f98674,redis-cli: add missing newline in error message.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_734.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_734.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_734.cpp
1cd0d26c63c755aaac4997e852c4041a0237a395,Diskless replication: parent-child pipe and a few TODOs.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_735.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_735.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_735.cpp
75f0cd6520c73bc868717940ed583c4809ab30db,Diskless replication: RDB -> slaves transfer draft implementation.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_736.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_736.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_736.cpp
75f0cd6520c73bc868717940ed583c4809ab30db,Diskless replication: RDB -> slaves transfer draft implementation.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_737.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_737.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_737.cpp
5ba47b50ae6ea5e0ed56598d0ef33dc43c6a7abf,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_738.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_738.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_738.cpp
591b69c745f8d8a9cff7a43083c3b0d0ac333362,Fix DEBUG POPULATE warning for lack of casting.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_739.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_739.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_739.cpp
8beb98574ab285c910c50c877d688a11960d5bd5,RDB file creation refactored to target non-disk target.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_740.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_740.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_740.cpp
3c6f9ac37c849c82aebf5b45e895faa6cc80e7be,"Merge pull request #1902 from mattsta/comment-fixes

ALL comment fixes",[u'https://gitlab.kitware.com/cmake/cmake/issues/1902'],deps/linenoise/example.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_741.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_741.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_741.cpp
3c6f9ac37c849c82aebf5b45e895faa6cc80e7be,"Merge pull request #1902 from mattsta/comment-fixes

ALL comment fixes",[u'https://gitlab.kitware.com/cmake/cmake/issues/1902'],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_742.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_742.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_742.cpp
3c6f9ac37c849c82aebf5b45e895faa6cc80e7be,"Merge pull request #1902 from mattsta/comment-fixes

ALL comment fixes",[u'https://gitlab.kitware.com/cmake/cmake/issues/1902'],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_743.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_743.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_743.cpp
3c6f9ac37c849c82aebf5b45e895faa6cc80e7be,"Merge pull request #1902 from mattsta/comment-fixes

ALL comment fixes",[u'https://gitlab.kitware.com/cmake/cmake/issues/1902'],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_744.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_744.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_744.cpp
3c6f9ac37c849c82aebf5b45e895faa6cc80e7be,"Merge pull request #1902 from mattsta/comment-fixes

ALL comment fixes",[u'https://gitlab.kitware.com/cmake/cmake/issues/1902'],src/util.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_745.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_745.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_745.cpp
16559b461521625271430d7d4926b632f3a326dd,"INCR: Modify incremented object in-place when possible.

However we don't try to do this if the integer is already inside a range
representable with a shared integer.

The performance gain appears to be around ~15% in micro benchmarks,
however in the long run this also helps to improve locality, so should
have more, hard to measure, benefits.",[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_746.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_746.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_746.cpp
12d0195b3013aff008bb492cf59f31d823f024b0,"Clean up text throughout project

  - Remove trailing newlines from redis.conf
  - Fix comment misspelling
  - Clarifies zipEncodeLength usage and a C API mention (#1243, #1242)
  - Fix cluster typos (inspired by @papanikge #1507)
  - Fix rewite -> rewrite in a few places (inspired by #682)

Closes #1243, #1242, #1507","[u'https://gitlab.kitware.com/cmake/cmake/issues/1243', u'https://gitlab.kitware.com/cmake/cmake/issues/1242', u'https://gitlab.kitware.com/cmake/cmake/issues/1507', u'https://gitlab.kitware.com/cmake/cmake/issues/1243', u'https://gitlab.kitware.com/cmake/cmake/issues/1242', u'https://gitlab.kitware.com/cmake/cmake/issues/1507']",src/util.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_747.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_747.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_747.cpp
3a82b8ac641120c231f4f7e8a2edc0bd1c40a399,"Fix typos

Closes #1513",[u'https://gitlab.kitware.com/cmake/cmake/issues/1513'],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_748.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_748.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_748.cpp
0cb874819bc90d55c39c2bb9ed2e6a2fcf0a6e35,"Fix many small typos

Closes #1871",[u'https://gitlab.kitware.com/cmake/cmake/issues/1871'],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_749.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_749.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_749.cpp
6e0a280cb55f948ecd731ca8bd87d8bb912e021f,"Update linenoise accessory files

The core linenoise code was being backported, but not
the README or example.  It's less confusing for users
if everything matches across directories.

Fix inspired by @thrig

Closes #1872",[u'https://gitlab.kitware.com/cmake/cmake/issues/1872'],deps/linenoise/example.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_750.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_750.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_750.cpp
74aeb27a26b905489888c3020d652ddba4d4684b,"Remove surplus double quotes

Closes #1877",[u'https://gitlab.kitware.com/cmake/cmake/issues/1877'],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_751.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_751.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_751.cpp
d4222e6bee4b6f58faec93cfb8179b695d5cdb9e,"DEBUG POPULATE two args form implemented.

The old DEBUG POPULATE form for automatic creation of test keys is:

    DEBUG POPULATE <count>

Now an additional form is available:

    DEBUG POPULATE <count> <prefix>

When prefix is not specified, it defaults to ""key"", so the keys are
named incrementally from key:0 to key:<count-1>. Otherwise the specified
prefix is used instead of ""key"".

The command is useful in order to populate different Redis instances
with key names guaranteed to don't collide. There are other debugging
uses, for example it is possible to add additional N keys using a count
of N and a random prefix at every call.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_752.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_752.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_752.cpp
35a8302b7cbdf7ad59256f53f4e9704f3d256198,Linenoise lib updated.,[],deps/linenoise/linenoise.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_753.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_753.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_753.cpp
8fe3ecff09ae64f2f4648479ac8bb405989577e1,"Merge pull request #2014 from mattsta/fix-hiredis-leak

Fix hiredis getaddrinfo leak",[u'https://gitlab.kitware.com/cmake/cmake/issues/2014'],deps/hiredis/net.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_754.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_754.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_754.cpp
56c1f8805e72cbc55d74a7fc46ff17fdc5d7882d,"Fix hiredis getaddrinfo leak

Fixed in Redis by 1a5e5b6, but since that part of code
is largely copy/paste from Redis, the fix needs to be
ported over too.

Closes #2012",[u'https://gitlab.kitware.com/cmake/cmake/issues/2012'],deps/hiredis/net.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_755.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_755.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_755.cpp
c89afc8e5db6166bd8855bf48d5d7f7cc16492ad,Cluster: new option to work with partial slots coverage.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_756.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_756.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_756.cpp
878c089ec91484b1ae62d098d57cfcc7731031dd,"Seek at the end of AOF after truncate call.

It is not clear if files open in append only mode will automatically fix
their offset after a truncate(2) operation. This commit makes sure that
we reposition the AOF file descriptor offset at the end of the file
after a truncated AOF is loaded and trimmed to the last valid command.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_757.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_757.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_757.cpp
0ba8fe1a43a624a6e4a4e5698ac7b6616ee5a133,"On AOF end of file, truncate the AOF to last valid command.

Recently we introduced the ability to load truncated AOFs, but
unfortuantely the support was broken since the server, after loading the
truncated AOF, continues appending to the file that is corrupted at the
end. The problem is fixed only in the next AOF rewrite.

This commit fixes the issue by truncating the AOF to the last valid
opcode, and aborting if it is not possible to truncate the file
correctly.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_758.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_758.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_758.cpp
31f79a46ffbf04d372cfc0ebfcc5578daf39c532,Make aof-load-truncated option actually configurable.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_759.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_759.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_759.cpp
0ab04287aa85735e52312cb8973ec37e1a867169,AOF loading: split handling of format errors from unexpected EOF.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_760.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_760.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_760.cpp
cd576a1aab9bc321a63c1aabac8d274e3ba20f26,"Sentinel: announce ip/port changes + rewrite.

The original implementation was modified in order to allow to
selectively announce a different IP or port, and to rewrite the two
options in the config file after a rewrite.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_761.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_761.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_761.cpp
3d939266be28d4db5359fea0ce7e9aa7666a8a84,"sentinel: Decouple bind address from address sent to other sentinels

There are instances such as EC2 where the bind address is private
(behind a NAT) and cannot be accessible from WAN.

https://groups.google.com/d/msg/redis-db/PVVvjO4nMd0/P3oWC036v3cJ",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_762.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_762.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_762.cpp
67e414c7b871bced5e84f9eb9675a630ed6108dc,"Sentinel: Abort Hello quicker if not connected

We can save a little work by aborting when we enter the function
if we're disconnected.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_763.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_763.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_763.cpp
293348d0de8776e409551bbbd72691f66cb121cf,Missing va_end also added in hiredis copy of sds.c.,[],deps/hiredis/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_764.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_764.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_764.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_765.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_765.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_765.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_766.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_766.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_766.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_767.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_767.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_767.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_768.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_768.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_768.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_769.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_769.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_769.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_770.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_770.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_770.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/redis-check-dump.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_771.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_771.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_771.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_772.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_772.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_772.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_773.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_773.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_773.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_774.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_774.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_774.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_775.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_775.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_775.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_776.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_776.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_776.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_777.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_777.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_777.cpp
209f266cc534471daa03501b2802f08e4fca4fe6,Merge branch '1906-merge' into unstable,[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_778.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_778.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_778.cpp
1f8a6d806cc25ece4d092fb3d49af9ccc1443102,Fix redis-benchmark abort output,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_779.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_779.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_779.cpp
7e63dd23f3faae7a399617128ffef224e0f21754,"Rename two 'buf' vars to 'ip' for better clarity

Clearly ip[32] is wrong, but it's less clear that buf[32] was wrong
without further reading.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_780.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_780.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_780.cpp
a6edfceaa876ac6f21d7995aaf2380ab0eb50cbe,Fix invalid expire error for SET family commands.,[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_781.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_781.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_781.cpp
100c3315be5faafbdaa3fdcc5f302a5d599f0cd0,"Extend range of bytesToHuman to TB and PB

Also adds a fallthrough case for when given
large values (like overflow numbers of 2^64 by mistake).

Closes #858",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_782.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_782.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_782.cpp
edca2b14d213c31da9e7a919f6b898f3ea8abea8,Remove warnings and improve integer sign correctness.,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_783.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_783.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_783.cpp
edca2b14d213c31da9e7a919f6b898f3ea8abea8,Remove warnings and improve integer sign correctness.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_784.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_784.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_784.cpp
edca2b14d213c31da9e7a919f6b898f3ea8abea8,Remove warnings and improve integer sign correctness.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_785.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_785.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_785.cpp
edca2b14d213c31da9e7a919f6b898f3ea8abea8,Remove warnings and improve integer sign correctness.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_786.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_786.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_786.cpp
edca2b14d213c31da9e7a919f6b898f3ea8abea8,Remove warnings and improve integer sign correctness.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_787.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_787.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_787.cpp
cf85b5ba812070442c450b5dbc6c5e12a6c0819b,"va_copy must be matched by va_end

Hat tip to @rfuchs. See: https://github.com/redis/hiredis/pull/178.

Fixes #1187",[u'https://gitlab.kitware.com/cmake/cmake/issues/1187'],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_788.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_788.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_788.cpp
3426866e0a62926e62143b9ede8880e48e51a038,"Remove duplicate prototypes in redis.h

Also moves acceptHandler() to be near the other accept...() functions.

Closes #1105",[u'https://gitlab.kitware.com/cmake/cmake/issues/1105'],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_789.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_789.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_789.cpp
ded57795ff860d27d2889641d0fea9554df4a973,"representRedisNodeFlags() moved into right code section.

The funciton was also modified in order to be more standalone and
produce an output without trailing spaces, making the reuse simpler.
The global variable was renamed in cammel case as most other Redis
globals, except the main ones we refer too many times, like 'server'.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_790.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_790.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_790.cpp
da0132638f15d81782c5543ed49a1d1f17594d9d,"Cleanup double semicolons

Closes #1161",[u'https://gitlab.kitware.com/cmake/cmake/issues/1161'],src/redis-check-dump.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_791.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_791.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_791.cpp
498ad7482b2eb4ebc6f4c7458fe6a35f244adaf6,"Reject MOVE to non-integer DBs

Previously, ""MOVE key somestring"" would move the key to
DB 0 which is just unexpected and wrong.
String as DB == error.

Test added too.

Modified by @antirez in order to use the getLongLongFromObject() API
instead of strtol().

Fixes #1428",[u'https://gitlab.kitware.com/cmake/cmake/issues/1428'],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_792.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_792.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_792.cpp
23f08510d5c63a1936bced5a3aaf7ae4860090f9,"Use 'void' for zero-argument functions

According to the C standard,
it is desirable to give the type 'void'
to functions have no argument.

Closes #1631",[u'https://gitlab.kitware.com/cmake/cmake/issues/1631'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_793.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_793.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_793.cpp
23f08510d5c63a1936bced5a3aaf7ae4860090f9,"Use 'void' for zero-argument functions

According to the C standard,
it is desirable to give the type 'void'
to functions have no argument.

Closes #1631",[u'https://gitlab.kitware.com/cmake/cmake/issues/1631'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_794.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_794.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_794.cpp
c49378fe3e6f8900e753ff60a1b1f59e2e2c8755,"Fix issues raised by clang analyzer

Modified by @antirez since the original fix to genInfoString() looked
weak. Probably the clang analyzer complained about `section` being
possibly NULL, and strcasecmp() called with a NULL pointer. In the
practice this can never happen, still for the sake of correctness
the right fix is not to modify only the first call, but to set `section`
to the value of ""default"" if it happens to be NULL.

Closes #1660",[u'https://gitlab.kitware.com/cmake/cmake/issues/1660'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_795.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_795.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_795.cpp
7bb25f8a46cafee90ba927d98141ccfa57e190df,"Force quit when receiving a second SIGINT.

Also quit ASAP when we are still loading a DB, since care is not needed
in this special condition, especially for a SIGINT.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_796.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_796.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_796.cpp
f17f8521f005321d3e163ed83ec2fa9f1b925b0f,"scripting: no eval with negative key count

Negative key count causes segfault in Lua functions.

Fixes #1842
Closes #1843","[u'https://gitlab.kitware.com/cmake/cmake/issues/1842', u'https://gitlab.kitware.com/cmake/cmake/issues/1843']",src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_797.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_797.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_797.cpp
1a5e5b6bd44eb106dcb7114a8f22dda4b475238d,"cluster: fix node connection memory leak

Cluster leaks memory while connecting due to missing freeaddrinfo()

(Commit modified by @antirez. The freeaddrinfo() call was misplaced so
 in case of no address was bound, the memory leak was still there).

Closes #1801",[u'https://gitlab.kitware.com/cmake/cmake/issues/1801'],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_798.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_798.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_798.cpp
05676c5d1614ad894a1ff77d941b83732739046e,"redis-cli: fix latency result output

(Cleaned up a little by @mattsta)

Closes #1774",[u'https://gitlab.kitware.com/cmake/cmake/issues/1774'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_799.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_799.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_799.cpp
0042fb0eb09aceb279f073d84bbc05068ea5e3ff,"redis-cli: stop showing incorrectly selected DB

Previously redis-cli would happily show ""-1"" or ""99999""
as valid DB choices.

Now, if the SELECT call returned an error, we don't update
the DB number in the CLI.

Inspired by @anupshendkar in #1313

Fixes #566, #1313","[u'https://gitlab.kitware.com/cmake/cmake/issues/1313', u'https://gitlab.kitware.com/cmake/cmake/issues/1313']",src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_800.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_800.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_800.cpp
f231edc672830143324bfffa70b176883e43fe2d,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_801.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_801.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_801.cpp
d76c663dfe68f73489d145fd0d64b2e0e2dedff6,"Merge pull request #1895 from mattrobenolt/patch-1

Fix spelling of ""stand alone"" in ascii art",[u'https://gitlab.kitware.com/cmake/cmake/issues/1895'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_802.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_802.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_802.cpp
0f8df3df417a22ce8f34e4c21b09f8ff5eb60320,"Fix spelling of ""stand alone"" in ascii art

Also unified the logic to match `genRedisInfoString`",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_803.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_803.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_803.cpp
0adf4482f0d3ee036bf9babd66f3974493a6b0e1,"PFSELFTEST: less false positives.

This is just a quickfix, for the nature of the test the right way to fix
it is to average the error of N runs, since otherwise it is always
possible to get a false positive with a bad run, or to minimize too much
this possibility we may end testing with too much ""large"" error ranges.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_804.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_804.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_804.cpp
6b9b958e00c8a0eff64af255f790ee5bea40f197,PING: backward compatible error for wrong number of args.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_805.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_805.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_805.cpp
7fb90a670e27748ad0a8b21174936eea2f997cef,LATENCY DOCTOR first implementation complete.,[],src/latency.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_806.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_806.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_806.cpp
57e931debc3267570ac4ef5cf5ae2dc0bcb3272f,Fix analyzeLatencyForEvent() MAD computation.,[],src/latency.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_807.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_807.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_807.cpp
2a232dfa9a9e00a5abcb4a0f02bf5db55590f17e,LATENCY DOCTOR: initial draft and events summary output.,[],src/latency.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_808.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_808.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_808.cpp
2de5bab368fc1ed7630935df8762e3a2679b3453,"Better ""final read from parent"" algorithm in rewriteAppendOnlyFile*(.

We now wait up to 1 second for diff data to come from the parent,
however we use poll(2) to wait for more data, and use a counter of
contiguous failures to get data for N times (set to 20 experimentally
after different tests) as an early stop condition to avoid wasting 1
second when the write traffic is too low.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_809.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_809.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_809.cpp
ac33c049c647cbe09b424cff5755504fddc0b4c7,redis-benchmark: abort when all clients are disconnected.,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_810.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_810.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_810.cpp
20a0959964b9214fab02556f11ef3aad95f77333,Fine tuning of aofReadDiffFromParent() calls trigger.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_811.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_811.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_811.cpp
30c42f12b098a5e44fe7f517ba0a47e5c4b5e588,Handle write failure in AOF parent -> child ACK.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_812.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_812.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_812.cpp
2fa9fb647f24362a33c95e057826a70e7c433d82,Send AOF diffs from parent to child to improve latency.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_813.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_813.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_813.cpp
1f665d6e82bb11454d239e676cfcb96e29651291,Cast void* to char* to avoid waring in latencyCommand().,[],src/latency.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_814.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_814.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_814.cpp
aa16f87b87a71f6d70e8f43d62550913f18b64fa,LATENCY GRAPH implemented.,[],src/latency.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_815.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_815.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_815.cpp
de88bc63d5eff769a385b1e51bba75997a969177,Latency monitor: more hooks around the code.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_816.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_816.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_816.cpp
551bee86b42e7c41c9cd550795685eb20b207b88,LATENCY SAMPLES implemented.,[],src/latency.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_817.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_817.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_817.cpp
683f41adf27864987983c6fb4535a8568c288f86,DEBUG CMDKEYS moved to COMMAND GETKEYS.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_818.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_818.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_818.cpp
683f41adf27864987983c6fb4535a8568c288f86,DEBUG CMDKEYS moved to COMMAND GETKEYS.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_819.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_819.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_819.cpp
885b6fc577531b4bb1319ce4a66710b62fa68c84,COMMAND COUNT subcommand added.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_820.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_820.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_820.cpp
a92ae7774052ebdb305249ac548d5ed4f7887b82,"COMMAND: fix argument parsing.

This fixes detection of wrong subcommand (that resulted in the default
all-commands output instead) and allows COMMAND INFO to be called
without arguments (resulting into an empty array) which is useful in
programmtically generated calls like the following (in Ruby):

    redis.commands(""command"",""info"",*mycommands)

Note: mycommands may be empty.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_821.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_821.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_821.cpp
9bf6921f3d8d26c3e330b6646b9e6752dfc0a086,"COMMANDS command: remove static + aesthetic changes.

Static was removed since it is needed in order to get symbols in stack
traces. Minor changes in the source code were operated to make it more
similar to the existing Redis code base.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_822.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_822.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_822.cpp
183458f76a0ef579eec3bd8ec1652062fbb111d6,"Cluster: Add COMMANDS command

COMMANDS returns a nested multibulk reply for each
command in the command table.  The reply for each
command contains:
  - command name
  - arity
  - array of command flags
  - start key position
  - end key position
  - key offset step
  - optional: if the keys are not deterministic and
    Redis uses an internal key evaluation function,
    the 6th field appears and is defined as a status
    reply of: REQUIRES ARGUMENT PARSING

Cluster clients need to know where the keys are in each
command to implement proper routing to cluster nodes.

Redis commands can have multiple keys, keys at offset steps, or other
issues where you can't always assume the first element after
the command name is the cluster routing key.

Using the information exposed by COMMANDS, client implementations
can have live, accurate key extraction details for all commands.

Also implements COMMANDS INFO [commands...] to return only a
specific set of commands instead of all 160+ commands live in Redis.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_823.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_823.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_823.cpp
95b1979c321eb6353f75df892ab8be68cf8f9a77,No more trailing spaces in Redis source code.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_824.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_824.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_824.cpp
95b1979c321eb6353f75df892ab8be68cf8f9a77,No more trailing spaces in Redis source code.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_825.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_825.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_825.cpp
5c7286efbde3ac2a584aa6cc8b0617c74a1adce0,Use Redis updated sds.c for deps/hiredis.,[],deps/hiredis/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_826.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_826.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_826.cpp
5c7286efbde3ac2a584aa6cc8b0617c74a1adce0,Use Redis updated sds.c for deps/hiredis.,[],deps/hiredis/sds.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_827.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_827.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_827.cpp
28f32c99d0118eb60b236a0c8a96ea4bd9b7fa5b,"hiredis: Update to latest version

This is hiredis f225c276be7fd0646019b51023e3f41566633dfe

This update includes all changes that diverged inside of Redis since
the last update.  This version also allows optional source address
binding for connections which we need for some Sentinel deployments.",[],deps/hiredis/async.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_828.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_828.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_828.cpp
28f32c99d0118eb60b236a0c8a96ea4bd9b7fa5b,"hiredis: Update to latest version

This is hiredis f225c276be7fd0646019b51023e3f41566633dfe

This update includes all changes that diverged inside of Redis since
the last update.  This version also allows optional source address
binding for connections which we need for some Sentinel deployments.",[],deps/hiredis/hiredis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_829.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_829.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_829.cpp
28f32c99d0118eb60b236a0c8a96ea4bd9b7fa5b,"hiredis: Update to latest version

This is hiredis f225c276be7fd0646019b51023e3f41566633dfe

This update includes all changes that diverged inside of Redis since
the last update.  This version also allows optional source address
binding for connections which we need for some Sentinel deployments.",[],deps/hiredis/net.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_830.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_830.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_830.cpp
28f32c99d0118eb60b236a0c8a96ea4bd9b7fa5b,"hiredis: Update to latest version

This is hiredis f225c276be7fd0646019b51023e3f41566633dfe

This update includes all changes that diverged inside of Redis since
the last update.  This version also allows optional source address
binding for connections which we need for some Sentinel deployments.",[],deps/hiredis/net.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_831.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_831.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_831.cpp
28f32c99d0118eb60b236a0c8a96ea4bd9b7fa5b,"hiredis: Update to latest version

This is hiredis f225c276be7fd0646019b51023e3f41566633dfe

This update includes all changes that diverged inside of Redis since
the last update.  This version also allows optional source address
binding for connections which we need for some Sentinel deployments.",[],deps/hiredis/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_832.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_832.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_832.cpp
28f32c99d0118eb60b236a0c8a96ea4bd9b7fa5b,"hiredis: Update to latest version

This is hiredis f225c276be7fd0646019b51023e3f41566633dfe

This update includes all changes that diverged inside of Redis since
the last update.  This version also allows optional source address
binding for connections which we need for some Sentinel deployments.",[],deps/hiredis/sds.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_833.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_833.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_833.cpp
28f32c99d0118eb60b236a0c8a96ea4bd9b7fa5b,"hiredis: Update to latest version

This is hiredis f225c276be7fd0646019b51023e3f41566633dfe

This update includes all changes that diverged inside of Redis since
the last update.  This version also allows optional source address
binding for connections which we need for some Sentinel deployments.",[],deps/hiredis/test.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_834.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_834.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_834.cpp
fceef8e0ddfca103b2f0328e3ad9ae522093f2c8,"Jemalloc updated to 3.6.0.

Not a single bug in about 3 months, and our previous version was
too old (3.2.0).",[],deps/jemalloc/include/jemalloc/internal/util.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_835.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_835.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_835.cpp
fceef8e0ddfca103b2f0328e3ad9ae522093f2c8,"Jemalloc updated to 3.6.0.

Not a single bug in about 3 months, and our previous version was
too old (3.2.0).",[],deps/jemalloc/src/arena.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_836.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_836.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_836.cpp
fceef8e0ddfca103b2f0328e3ad9ae522093f2c8,"Jemalloc updated to 3.6.0.

Not a single bug in about 3 months, and our previous version was
too old (3.2.0).",[],deps/jemalloc/src/chunk_mmap.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_837.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_837.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_837.cpp
fceef8e0ddfca103b2f0328e3ad9ae522093f2c8,"Jemalloc updated to 3.6.0.

Not a single bug in about 3 months, and our previous version was
too old (3.2.0).",[],deps/jemalloc/src/huge.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_838.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_838.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_838.cpp
fceef8e0ddfca103b2f0328e3ad9ae522093f2c8,"Jemalloc updated to 3.6.0.

Not a single bug in about 3 months, and our previous version was
too old (3.2.0).",[],deps/jemalloc/src/jemalloc.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_839.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_839.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_839.cpp
fceef8e0ddfca103b2f0328e3ad9ae522093f2c8,"Jemalloc updated to 3.6.0.

Not a single bug in about 3 months, and our previous version was
too old (3.2.0).",[],deps/jemalloc/src/prof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_840.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_840.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_840.cpp
fceef8e0ddfca103b2f0328e3ad9ae522093f2c8,"Jemalloc updated to 3.6.0.

Not a single bug in about 3 months, and our previous version was
too old (3.2.0).",[],deps/jemalloc/src/stats.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_841.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_841.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_841.cpp
fceef8e0ddfca103b2f0328e3ad9ae522093f2c8,"Jemalloc updated to 3.6.0.

Not a single bug in about 3 months, and our previous version was
too old (3.2.0).",[],deps/jemalloc/src/util.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_842.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_842.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_842.cpp
3a482689c510bf8f2c8daca3ddd15af14ab036ac,"Merge pull request #1658 from mattsta/redis-cli-latency-clean-interrupt

Add SIGINT handler to cli --intrinsic-latency",[u'https://gitlab.kitware.com/cmake/cmake/issues/1658'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_843.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_843.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_843.cpp
20c2a38ad0b8ac54a0eef165bc4e1b58e599a7b1,"Add SIGINT handler to cli --intrinsic-latency

If we run a long latency session and want to Ctrl-C out of it,
it's nice to still get the summary output at the end.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_844.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_844.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_844.cpp
bb2011d992cebbfaa94d099c043c55f2342690cb,"CLIENT KILL API modified.

Added a new SKIPME option that is true by default, that prevents the
client sending the command to be killed, unless SKIPME NO is sent.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_845.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_845.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_845.cpp
e7affd266c4884ce4fc60e567e3aae55cac49828,New features for CLIENT KILL.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_846.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_846.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_846.cpp
56d26c23801b53458dfe8ac614106a9ab71473f1,"Client types generalized.

Because of output buffer limits Redis internals had this idea of type of
clients: normal, pubsub, slave. It is possible to set different output
buffer limits for the three kinds of clients.

However all the macros and API were named after output buffer limit
classes, while the idea of a client type is a generic one that can be
reused.

This commit does two things:

1) Rename the API and defines with more general names.
2) Change the class of clients executing the MONITOR command from ""slave""
   to ""normal"".

""2"" is a good idea because you want to have very special settings for
slaves, that are not a good idea for MONITOR clients that are instead
normal clients even if they are conceptually slave-alike (since it is a
push protocol).

The backward-compatibility breakage resulting from ""2"" is considered to
be minimal to care, since MONITOR is a debugging command, and because
anyway this change is not going to break the format or the behavior, but
just when a connection is closed on big output buffer issues.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_847.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_847.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_847.cpp
d5d92deb6cf0c87459710b8c0da013e643e389d9,Cluster: log configEpoch updates to myself.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_848.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_848.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_848.cpp
9b3bc82c1aa1bf8ecba460efe83ca8743b828d8e,Cluster: cluster_my_epoch added to CLUSTER INFO output.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_849.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_849.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_849.cpp
a2c2ef7de593ca9ae80b09c3b243965a746a106c,"Cluster: SET-CONFIG-EPOCH should update currentEpoch.

SET-CONFIG-EPOCH, used by redis-trib at cluster creation time, failed to
update the currentEpoch, making it possible after a failover for a
server to set its configEpoch to a value smaller than the current one
(since configEpochs are obtained using currentEpoch).

The bug totally break the Redis Cluster algorithms and protocols
allowing for permanent split brain conditions about the slots
configuration as shown in issue #1799.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1799'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_850.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_850.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_850.cpp
a2403227c7b164e546e53bf329c70caaadef2c14,"Merge pull request #1772 from andygrunwald/typo-avarege-average

Fixed typo in word avarege in result message of --intrinsic-latency analyzer",[u'https://gitlab.kitware.com/cmake/cmake/issues/1772'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_851.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_851.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_851.cpp
3758f27bc1d3be0b12676fa9a7f26678e4789c6c,"Fixed dbuf variable scope in luaRedisGenericCommand().

I'm not sure if while the visibility is the inner block, the fact we
point to 'dbuf' is a problem or not, probably the stack var isx
guaranteed to live until the function returns. However obvious code is
better anyway.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_852.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_852.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_852.cpp
072982d83c83b161f555538bad6a82815d1c36eb,"Scripting: better Lua number -> string conversion in luaRedisGenericCommand().

The lua_to*string() family of functions use a non optimal format
specifier when converting integers to strings. This has both the problem
of the number being converted in exponential notation, which we don't
use as a Redis return value when floating point numbers are involed,
and, moreover, there is a loss of precision since the default format
specifier is not able to represent numbers that must be represented
exactly in the IEEE 754 number mantissa.

The new code handles it as a special case using a saner conversion.

This fixes issue #1118.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1118'],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_853.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_853.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_853.cpp
94e3bb568ac2cb7763a1caab299337ed72149e4c,Fixed typo in word avarege in result message of --intrinsic-latency analyzer,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_854.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_854.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_854.cpp
d98fa718e0e3034b1e21effa3ed3ce6d0c096791,"Tag every log line with role.

Every log contains, just after the pid, a single character that provides
information about the role of an instance:

S - Slave
M - Master
C - Writing child
X - Sentinel",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_855.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_855.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_855.cpp
39603a7e315f36b51cdd9d0cf20d6d43f66be606,"Cluster: slave validity factor is now user configurable.

Check the commit changes in the example redis.conf for more information.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_856.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_856.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_856.cpp
01e3f9ba1d42a4113a24d8d37fa55400bca2fb5d,Remove trailing spaces from sentinel.c.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_857.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_857.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_857.cpp
8c6e92c3bc59052f16d8ba6f24040b66d28c03b2,"Cluster: clear todo_before_sleep flags when executing actions.

Thanks to this change, when there is some code like:

    clusterDoBeforeSleep(CLUSTER_TODO_UPDATE_STATE|...);
    ... and later before returning to the event loop ...
    clusterUpdateState();

The clusterUpdateState() function will clar the flag and will not be
repeated in the clusterBeforeSleep() function. This especially important
for config save/fsync flags which are slow to execute and not a good
idea to repeat without a good reason.

This is implemented for all the CLUSTER_TODO flags.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_858.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_858.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_858.cpp
796f4ae9f788849877d632c47d08076583f3d2d9,"CLUSTER RESET implemented.

The new command is able to reset a cluster node so that it starts again
as a fresh node. By default the command performs a soft reset (the same
as calling it as CLUSTER RESET SOFT), and the following steps are
performed:

1) All slots are set as unassigned.
2) The list of known nodes is flushed.
3) Node is set as master if it is a slave.

When an hard reset is performed with CLUSTER RESET HARD the following
additional operations are performed:

4) A new Node ID is created at random.
5) Epochs are set to 0.

CLUSTER RESET is useful both when the sysadmin wants to reconfigure a
node with a different role (for example turning a slave into a master)
and for testing purposes.

It also may play a role in automatically provisioned Redis Clusters,
since it allows to reset a node back to the initial state in order to be
reconfigured.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_859.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_859.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_859.cpp
8b9d5ecbd10307e19452d5f70c39f643fea878c2,Remove trailing spaces from cluster.c file.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_860.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_860.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_860.cpp
269233913800a51bdc0ef3eba6de1da13107b8fc,"Cluster: forced failover implemented.

Using CLUSTER FAILOVER FORCE it is now possible to failover a master in
a forced way, which means:

1) No check to understand if the master is up is performed.
2) No data age of the slave is checked. Evan a slave with very old data
   can manually failover a master in this way.
3) No chat with the master is attempted to reach its replication offset:
   the master can just be down.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_861.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_861.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_861.cpp
433e835d3ee8c96426694a1029a1f3a8ae9aacec,fixed possible buffer overflow error,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_862.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_862.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_862.cpp
5c78f876661497a8588eed48b5c04cb6848280f4,"RESTORE: reply with -BUSYKEY special error code.

The error when the target key is busy was a generic one, while it makes
sense to be able to distinguish between the target key busy error and
the others easily.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_863.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_863.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_863.cpp
71d0e7e0ea97903c0fe631bc97ff49d60a418d86,"CLUSTER MEET: better error messages when address is invalid.

Fixes issue #1734.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1734'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_864.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_864.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_864.cpp
72ff03346fcf3d5a839b85bd1ebd7850c2e5d9aa,DEBUG POPULATE: call dictExpand() to avoid useless rehashing.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_865.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_865.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_865.cpp
76fda9f8e10eb9cf1299fa6ca04f60d79462759e,"Scripting: don't call lua_gc() after Lua script run.

Calling lua_gc() after every script execution is too expensive, and
apparently does not make the execution smoother: the same peak latency
was measured before and after the commit.

This change accounts for scripts execution speedup in the order of 10%.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_866.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_866.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_866.cpp
48c49c485155ba9e4a7851fd1644c171674c6f0f,"Scripting: cache argv in luaRedisGenericCommand().

~ 4% consistently measured speed improvement.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_867.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_867.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_867.cpp
11d9ecb71d44987d2cb365e90b00fe15434426d7,"CLUSTER SET-CONFIG-EPOCH implemented.

Initially Redis Cluster accepted that after cluster creation all the
nodes were at configEpoch 0, evolving from zero as failovers happen.

However later the semantic was made more strict in order to make sure a
cluster has always all the master nodes with a different configEpoch,
which is more robust in some corner case (especially resulting from
errors by the system administrator).

To assign different configEpochs to different nodes at startup was a
task performed naturally by the config conflicts resolution algorithm
(see the Cluster specification). However this works well only for small
clusters or when there are actually just a few collisions, since it is
designed for exceptional cases.

When a large cluster is created hundred of nodes can be at epoch 0, so
the conflict resolution code is slow to provide an unique config to each
node. For this reason this new command was introduced. It can be called
only when a node is totally fresh: no other nodes known, and configEpoch
set to zero, so it is safe even against misuses.

redis-trib will use the new command in order to start the cluster
already setting an incremental unique config to every node.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_868.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_868.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_868.cpp
0bcc7cb4bfe733e7ea12599a926e52aece3bfa50,"CLIENT LIST speedup via peerid caching + smart allocation.

This commit adds peer ID caching in the client structure plus an API
change and the use of sdsMakeRoomFor() in order to improve the
reallocation pattern to generate the CLIENT LIST output.

Both the changes account for a very significant speedup.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_869.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_869.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_869.cpp
0bcc7cb4bfe733e7ea12599a926e52aece3bfa50,"CLIENT LIST speedup via peerid caching + smart allocation.

This commit adds peer ID caching in the client structure plus an API
change and the use of sdsMakeRoomFor() in order to improve the
reallocation pattern to generate the CLIENT LIST output.

Both the changes account for a very significant speedup.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_870.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_870.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_870.cpp
f9a4a80f499a30b7240328b46fdb9bf76d173fe9,Use sdscatfmt() in getClientInfoString() to make it faster.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_871.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_871.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_871.cpp
f9a4a80f499a30b7240328b46fdb9bf76d173fe9,Use sdscatfmt() in getClientInfoString() to make it faster.,[],src/sds.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_872.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_872.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_872.cpp
2d76736a2ef00419320dae793e3523144e5f8c1c,"Added new sdscatfmt() %u and %U format specifiers.

This commit also fixes a bug in the implementation of sdscatfmt()
resulting from stale references to the SDS string header after
sdsMakeRoomFor() calls.",[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_873.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_873.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_873.cpp
53575c4708318a2d33270d36943c206a016eecef,"sdscatfmt() added to SDS library.

sdscatprintf() relies on printf() family libc functions and is sometimes
too slow in critical code paths. sdscatfmt() is an alternative which is:

1) Far less capable.
2) Format specifier uncompatible.
3) Faster.

It is suitable to be used in those speed critical code paths such as
CLIENT LIST output generation.",[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_874.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_874.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_874.cpp
e29d3307244b899587e155571176fb209e26c4c6,"Process events with processEventsWhileBlocked() when blocked.

When we are blocked and a few events a processed from time to time, it
is smarter to call the event handler a few times in order to handle the
accept, read, write, close cycle of a client in a single pass, otherwise
there is too much latency added for clients to receive a reply while the
server is busy in some way (for example during the DB loading).",[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_875.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_875.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_875.cpp
e3cf812c9e7db2bedd1063421d4b3bb1d46484be,"clusterLoadConfig() REDIS_ERR retval semantics refined.

We should return REDIS_ERR to signal we can't read the configuration
because there is no config file only after checking errno, othewise
we risk to rewrite an existing file that was not accessible for some
other reason.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_876.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_876.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_876.cpp
db06108bc17205f29e363b5ba1664e1b9dbd9afc,"Lock nodes.conf to avoid multiple processes using the same file.

This was a common source of problems among users.
The solution adopted is not bullet-proof as if the user deletes the
nodes.conf file manually, and starts a new instance with the same
nodes.conf file path, two instances will use the same file. However
following this reasoning the user may drop a nuclear bomb into the
datacenter as well.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_877.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_877.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_877.cpp
32c917964efb7c617597a409e02deef9952763f8,"Merge pull request #1677 from mattsta/expire-before-delete

Check key expiration before deleting",[u'https://gitlab.kitware.com/cmake/cmake/issues/1677'],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_878.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_878.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_878.cpp
e0918a332dd2fd03c39df4b86007a423160dc6b2,"Merge pull request #1701 from kingsumos/node_description

fix cluster node description showing wrong slot allocation",[u'https://gitlab.kitware.com/cmake/cmake/issues/1701'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_879.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_879.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_879.cpp
cb4e2ee9e784f23bbef1bb57c6c332dd3d2472bd,"Missing return REDIS_ERR added to processMultibulkBuffer().

When we set a protocol error we should return with REDIS_ERR to let the
caller know it should stop processing the client.

Bug found in a code auditing related to issue #1699.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1699'],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_880.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_880.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_880.cpp
a69178fdd2df5a0045a49f89ac24e4f91c2a89cf,fix cluster node description showing wrong slot allocation,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_881.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_881.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_881.cpp
fdaab0234787d1bb835680825ea919d7cba3723e,Merge remote-tracking branch 'upstream/unstable' into unstable,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_882.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_882.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_882.cpp
fdaab0234787d1bb835680825ea919d7cba3723e,Merge remote-tracking branch 'upstream/unstable' into unstable,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_883.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_883.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_883.cpp
fdaab0234787d1bb835680825ea919d7cba3723e,Merge remote-tracking branch 'upstream/unstable' into unstable,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_884.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_884.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_884.cpp
fdaab0234787d1bb835680825ea919d7cba3723e,Merge remote-tracking branch 'upstream/unstable' into unstable,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_885.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_885.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_885.cpp
fcd2155b6f6d0beb88ba3b008e23a9c366af5c9f,HyperLogLog low level merge extracted from PFMERGE.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_886.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_886.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_886.cpp
78954ca3a2a3b4fdb731bd43b7cbab2d3a619871,ZREMRANGEBYLEX implemented.,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_887.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_887.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_887.cpp
95098b7230606299769df89b070105c755b5f594,ZREMRANGE* commands refactored into a single generic function.,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_888.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_888.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_888.cpp
8b5e0b213e9dafa88f206155fd60df23d0bc803a,"ZLEXCOUNT implemented.

Like ZCOUNT for lexicographical ranges.",[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_889.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_889.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_889.cpp
8e8f8189eb1b15ce4f03f542c36b7a626e08cf8e,HyperLogLog invalid representation error code set to INVALIDOBJ.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_890.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_890.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_890.cpp
0bbdaca6a0b10de3b8bfdbb57c902975a79c2646,"PFDEBUG TODENSE added.

Converts HyperLogLogs from sparse to dense. Used for testing.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_891.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_891.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_891.cpp
402110f9fdf62ccbd5d3d5e95cf5b6b760442b9e,User-defined switch point between sparse-dense HLL encodings.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_892.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_892.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_892.cpp
402110f9fdf62ccbd5d3d5e95cf5b6b760442b9e,User-defined switch point between sparse-dense HLL encodings.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_893.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_893.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_893.cpp
d541f65d66706c63a5eb60c13319238297e53971,PFSELFTEST improved with sparse encoding checks.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_894.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_894.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_894.cpp
dde8dff73fd814910b317df2beb84b88d5659d37,PFDEBUG ENCODING added.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_895.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_895.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_895.cpp
848d0461f9025fad994efec2e685c4c68fe625fe,Error message for invalid HLL objects unified.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_896.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_896.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_896.cpp
81ceef7d22bcc1a30bce029ffae1a53f4752b7ed,PFMERGE fixed to work with sparse encoding.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_897.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_897.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_897.cpp
3bc35f9ce917c630c401b2ed0d56b3a51658a5e2,"Correctly replicate PFDEBUG GETREG.

Even if it is a debugging command, make sure that when it forces a
change in encoding, the command is propagated.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_898.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_898.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_898.cpp
681bf7468bd55d524ee71cbb7aa43526dad07d5c,Detect corrupted sparse HLLs in hllSparseSum().,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_899.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_899.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_899.cpp
1ee18db922aaf03cc1e0f04a5b0d9764f9d0ceb5,"Fixed error message generation in PFDEBUG GETREG.

Bulk length for registers was emitted too early, so if there was a bug
the reply looked like a long array with just one element, blocking the
client as result.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_900.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_900.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_900.cpp
b7571b7453e1597ef7ed5041a06a3fd97c99c0d0,"hllSparseToDense(): sanity check added.

The function checks if all the HLL_REGISTERS were processed during the
convertion from sparse to dense encoding, returning REDIS_OK or
REDIS_ERR to signal a corruption problem.

A bug in PFDEBUG GETREG was fixed: when the object is converted to the
dense representation we need to reassign the new pointer to the header
structure pointer.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_901.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_901.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_901.cpp
f9dc3cb04d5fdca59bc2d92fe1bae586eb4a9a5b,"PFDEBUG DECODE added.

Provides a human readable description of the opcodes composing a
run-length encoded HLL (sparse encoding).
The command is only useful for debugging / development tasks.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_902.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_902.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_902.cpp
261da523e860146066e052771e2217a84bc8d168,"PFDEBUG added, PFGETREG removed.

PFDEBUG will be the interface to do debugging tasks with a key
containing an HLL object.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_903.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_903.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_903.cpp
a9e057e095a6ccc38f79fe427c8a7624bbb57a4f,Abstract hllSparseAdd() / hllDenseAdd() via hllAdd().,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_904.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_904.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_904.cpp
8ea5b46d30cf7e314eaf7b78ef7f754cb868335a,hllCount() refactored to support multiple representations.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_905.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_905.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_905.cpp
1efc1e052da15e78f3c1b17c3adf8ba4690a36e5,"hllAdd() refactored into two functions.

Also dense representation access macro renamed accordingly.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_906.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_906.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_906.cpp
d55474e558c9743720e5cfeb500ada59c3a51bbd,"HyperLogLog refactoring to support different encodings.

Metadata are now placed at the start of the representation as an header.
There is a proper structure to access the representation.
Still work to do in order to truly abstract the implementation from the
representation, commands still work assuming dense representation.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_907.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_907.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_907.cpp
83d28303725ea48e6ba1ab08b57d1eacf9137961,"Check key expiration before deleting

Deleting an expired key should return 0, not success.

Fixes #1648",[u'https://gitlab.kitware.com/cmake/cmake/issues/1648'],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_908.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_908.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_908.cpp
67bb2c46b2b3882ba1ceadcbf94fab7d44b39ef6,"Add casting to match printf format.

adjustOpenFilesLimit() and clusterUpdateSlotsWithConfig() that were
assuming uint64_t is the same as unsigned long long, which is true
probably for all the systems out there that we target, but still GCC
emitted a warning since technically they are two different types.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_909.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_909.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_909.cpp
3a6a1e42f11bfee780eda6661865e59d2e747b59,ZRANGEBYLEX and ZREVRANGEBYLEX implementation.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_910.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_910.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_910.cpp
3a6a1e42f11bfee780eda6661865e59d2e747b59,ZRANGEBYLEX and ZREVRANGEBYLEX implementation.,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_911.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_911.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_911.cpp
d2ca4bb62d807291f9e21ec57c44373a03a99a5e,"Return ""WRONGTYPE"" error on PF* type mismatch.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_912.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_912.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_912.cpp
ce637b2fef04d4f073e5e045410f3527b65001ca,Remove HyperLogLog type checking duplicated code.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_913.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_913.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_913.cpp
aaaed66c566910277fddd35a345dea6664c8e646,"PFGETREG added for testing purposes.

The new command allows to get a dump of the registers stored
into an HyperLogLog data structure for testing / debugging purposes.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_914.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_914.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_914.cpp
be9860d0e93bb301577df9bc01c73e1b38031a38,PFSELFTEST improved to test the approximation error.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_915.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_915.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_915.cpp
096b5e921ec64f1258c86d9ba92d823525896516,"HyperLogLog: added magic / version.

This will allow future changes like compressed representations.
Currently the magic is not checked for performance reasons but this may
change in the future, for example if we add new types encoded in strings
that may have the same size of HyperLogLogs.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_916.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_916.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_916.cpp
cef505d7390c5f5c7268fc0589cad90beb39f16f,"Merge pull request #1646 from raydog/unstable

Change HLL* to PF* in a few spots",[u'https://gitlab.kitware.com/cmake/cmake/issues/1646'],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_917.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_917.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_917.cpp
bf066c875f625d5740f2a85d56d36140023c9dc8,Fixed pfadd/pfcount commands emitting hll* events instead of pf* events,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_918.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_918.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_918.cpp
f0868e080dacbf865668f6e435f7d6d8e1341357,Change HLL* to PF* in error messages,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_919.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_919.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_919.cpp
f2277475b2e6b165527866a8923a64d6862059e3,"HLLMERGE implemented.

Merge N HLL data structures by selecting the max value for every
M[i] register among the set of HLLs.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_920.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_920.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_920.cpp
307a189900c06bb4f76638277275f70f2e480558,"HyperLogLog approximated cardinality caching.

The more we add elements to an HyperLogLog counter, the smaller is
the probability that we actually update some register.

From this observation it is easy to see how it is possible to use
caching of a previously computed cardinality and reuse it to serve
HLLCOUNT queries as long as no register was updated in the data
structure.

This commit does exactly this by using just additional 8 bytes for the
data structure to store a 64 bit unsigned integer value cached
cardinality. When the most significant bit of the 64 bit integer is set,
it means that the value computed is no longer usable since at least a
single register was modified and we need to recompute it at the next
call of HLLCOUNT.

The value is always stored in little endian format regardless of the
actual CPU endianess.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_921.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_921.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_921.cpp
ded86076b382c72a12b4444e36a7d12bb009e850,HLLCOUNT implemented.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_922.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_922.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_922.cpp
156929ee974ce968585144b0d0226e56622e6add,HLLADD implemented.,[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_923.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_923.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_923.cpp
552eb5407a49cf6b604230d1994a5e441ba10f5c,"HLLSELFTEST command implemented.

To test the bitfield array of counters set/get macros from the Redis Tcl
suite is hard, so a specialized command that is able to test the
internals was developed.",[],src/hyperloglog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_924.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_924.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_924.cpp
8f52173b2cdf47b7ef5ceda831ff44bf481d2090,"Cluster: last_vote_epoch -> lastVoteEpoch.

Use cammel case for epochs that are persisted on disk.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_925.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_925.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_925.cpp
7fb14b73ba67c70eb6c8a728c892c8d5b3fe954e,"Cluster: save/restore vars that must persist after recovery.

This fixes issue #1479.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1479'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_926.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_926.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_926.cpp
3cf6f1f54fb3a31fb7157ab54919455feda41466,"Cluster: clusterHandleConfigEpochCollision() fixed.

New config epochs must always be obtained incrementing the currentEpoch,
that is itself guaranteed to be >= the max configEpoch currently known
to the node.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_927.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_927.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_927.cpp
6c527a89a06ad93d7e250de78d3fecb39f13a6a3,"Cluster: configEpoch collisions resolution.

The slave election in Redis Cluster guarantees that slaves promoted to
masters always end with unique config epochs, however failures during
manual reshardings, software bugs and operational errors may in theory
cause two nodes to have the same configEpoch.

This commit introduces a mechanism to eventually always end with different
configEpochs if a collision ever happens.

As a (wanted) side effect, this also ensures that after a new cluster
is created, all nodes will end with a different configEpoch automatically.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_928.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_928.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_928.cpp
c1041c570fe2722481eb6c4ee4b9505ce4e0437f,Cluster: stay within 80 cols.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_929.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_929.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_929.cpp
6e33c908ddb626810bae27fbc481ab572e4df793,"adjustOpenFilesLimit() refactoring.

In this commit:
* Decrement steps are semantically differentiated from the reserved FDs.
  Previously both values were 32 but the meaning was different.
* Make it clear that we save setrlimit errno.
* Don't explicitly handle wrapping of 'f', but prevent it from
  happening.
* Add comments to make the function flow more readable.

This integrates PR #1630",[u'https://gitlab.kitware.com/cmake/cmake/issues/1630'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_930.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_930.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_930.cpp
72c5ebcba44d34efcb3f7a0afe9e21ec65a42b31,"Merge pull request #1630 from mattsta/fix-infinite-loop-ulimit

Fix infinite loop ulimit",[u'https://gitlab.kitware.com/cmake/cmake/issues/1630'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_931.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_931.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_931.cpp
7f1c3607ec17542fe59427591f0bbf8528d48a7b,"Merge pull request #1606 from mattsta/fix-disk-full-dataloss

Fix data loss when save AOF/RDB with no free space",[u'https://gitlab.kitware.com/cmake/cmake/issues/1606'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_932.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_932.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_932.cpp
429045514512b2791a0297f08c7024c389d41981,Sentinel: Notify user when config can't be saved,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_933.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_933.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_933.cpp
386a46946babca7b9962a94837ef96bb40b448c7,"Fix potentially incorrect errno usage

errno may be reset by the previous call to redisLog, so capture
the original value for proper error reporting.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_934.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_934.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_934.cpp
3b54ee6ea414e0b52a4936f341be5c8c865959c6,"Add REDIS_MIN_RESERVED_FDS define for open fds

Also update the original REDIS_EVENTLOOP_FDSET_INCR to
include REDIS_MIN_RESERVED_FDS. REDIS_EVENTLOOP_FDSET_INCR
exists to make sure more than (maxclients+RESERVED) entries
are allocated, but we can only guarantee that if we include
the current value of REDIS_MIN_RESERVED_FDS as a minimum
for the INCR size.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_935.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_935.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_935.cpp
4a25983f8fe70e105bfd7cc42fed825001afd1df,"Improve error handling around setting ulimits

The log messages about open file limits have always
been slightly opaque and confusing.  Here's an attempt to
fix their wording, detail, and meaning.  Users will have a
better understanding of how to fix very common problems
with these reworded messages.

Also, we handle a new error case when maxclients becomes less
than one, essentially rendering the server unusable.  We
now exit on startup instead of leaving the user with a server
unable to handle any connections.

This fixes antirez#356 as well.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_936.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_936.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_936.cpp
491532a713ae28fdd5e489e8f2d88076da8adf44,"Replace magic 32 with REDIS_EVENTLOOP_FDSET_INCR

32 was the additional number of file descriptors Redis
would reserve when managing a too-low ulimit.  The
number 32 was in too many places statically, so now
we use a macro instead that looks more appropriate.

When Redis sets up the server event loop, it uses:
    server.maxclients+REDIS_EVENTLOOP_FDSET_INCR

So, when reserving file descriptors, it makes sense to
reserve at least REDIS_EVENTLOOP_FDSET_INCR FDs instead
of only 32.  Currently, REDIS_EVENTLOOP_FDSET_INCR is
set to 128 in redis.h.

Also, I replaced the static 128 in the while f < old loop
with REDIS_EVENTLOOP_FDSET_INCR as well, which results
in no change since it was already 128.

Impact: Users now need at least maxclients+128 as
their open file limit instead of maxclients+32 to obtain
actual ""maxclients"" number of clients.  Redis will carve
the extra REDIS_EVENTLOOP_FDSET_INCR file descriptors it
needs out of the ""maxclients"" range instead of failing
to start (unless the local ulimit -n is too low to accomidate
the request).",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_937.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_937.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_937.cpp
30639c8ca957b3ece9985d8261f89b4494494886,"sdscatvprintf(): Try to use a static buffer.

For small content the function now tries to use a static buffer to avoid
a malloc/free cycle that is too costly when the function is used in the
context of performance critical code path such as INFO output generation.

This change was verified to have positive effects in the execution speed
of the INFO command.",[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_938.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_938.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_938.cpp
d3efe04c4731bda4657b80f099f8bcaca3c26319,"Cache uname() output across INFO calls.

Uname was profiled to be a slow syscall. It produces always the same
output in the context of a single execution of Redis, so calling it at
every INFO output generation does not make too much sense.

The uname utsname structure was modified as a static variable. At the
same time a static integer was added to check if we need to call uname
the first time.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_939.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_939.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_939.cpp
a9caca0424197e1b43cc98c5106cca5c86e3ac34,"sdscatvprintf(): guess buflen using format length.

sdscatvprintf() uses a loop where it tries to output the formatted
string in a buffer of the initial length, if there was not enough room,
a buffer of doubled size is tried and so forth.

The initial guess for the buffer length was very poor, an hardcoded
""16"". This caused the printf to be processed multiple times without a
good reason. Given that printf functions are already not fast, the
overhead was significant.

The new heuristic is to use a buffer 4 times the length of the format
buffer, and 32 as minimal size. This appears to be a good balance for
typical uses of the function inside the Redis code base.

This change improved INFO command performances 3 times.",[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_940.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_940.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_940.cpp
6d5790d68289e8824477d8187076f743d87b66e5,"Fix OBJECT IDLETIME return value converting to seconds.

estimateObjectIdleTime() returns a value in milliseconds now, so we need
to scale the output of OBJECT IDLETIME to seconds.",[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_941.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_941.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_941.cpp
3a2ff5561781807ebbe98706953b88ea8ed6fe6d,"Sentinel: use CLIENT SETNAME when connecting to Redis.

This makes debugging / monitoring of Sentinels simpler since you can
identify sentinels in CLIENT LIST output of Redis instances.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_942.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_942.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_942.cpp
ed813863f0624c40fe4d4e85b363c07c70cf10cd,"Sentinel: be safe under crash-recovery assumptions.

Sentinel's main safety argument is that there are no two configurations
for the same master with the same version (configuration epoch).

For this to be true Sentinels require to be authorized by a majority.
Additionally Sentinels require to do two important things:

* Never vote again for the same epoch.
* Never exchange an old vote for a fresh one.

The first prerequisite, in a crash-recovery system model, requires to
persist the master->leader_epoch on durable storage before to reply to
messages. This was not the case.

We also make sure to persist the current epoch in order to never reply
to stale votes requests from other Sentinels, after a recovery.

The configuration is persisted by making use of fsync(), this is
considered in the context of this code a good enough guarantee that
after a restart our durable state is restored, however this may not
always be the case depending on the kind of hardware and operating
system used.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_943.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_943.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_943.cpp
365094028bf6dc311c0246f68e6bf40944136e9b,"Sentinel: fake PUBLISH command to receive HELLO messages.

Now the way HELLO messages are received is unified.
Now it is no longer needed for Sentinels to converge to the higher
configuration for a master to be able to chat via some Redis instance,
the are able to directly exchanges configurations.

Note that this commit does not include the (trivial) change needed to
send HELLO messages to Sentinel instances as well, since for an error I
committed the change in the previous commit that refactored hello
messages processing into a separated function.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_944.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_944.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_944.cpp
429aff4ef4ae6f2947614e1005048af78570b8a8,"Linenoise updated, multiline mode enabled in redis-cli.",[],deps/linenoise/linenoise.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_945.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_945.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_945.cpp
8eae54aa1e3102ce0e8184a557a32c08d51a8cca,"DEBUG ERROR implemented.

The new ""error"" subcommand of the DEBUG command can reply with an user
selected error, specified as its sole argument:

    DEBUG ERROR ""LOADING please wait...""

The error is generated just prefixing the command argument with a ""-""
character, and replacing newlines with spaces (since error replies can't
include newlines).

The goal of the command is to help in Client libraries unit tests by
making simple to simulate a command call triggering a given error.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_946.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_946.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_946.cpp
2705306ba1304e6db46d4ebc3006b1dea40588b7,"DEBUG CMDKEYS: provide some guarantee to getKeysFromCommand().

getKeysFromCommand() is designed to be called with the command arguments
passing the basic arity checks described in the command table.

DEBUG CMDKEYS must provide the same guarantees for calling
getKeysFromCommand() to be safe.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_947.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_947.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_947.cpp
c4ef1d64945fdd707a0136f581c0d946d0334d5c,"DEBUG CMDKEYS added for getKeysFromCommand() testing.

Examples:

    redis 127.0.0.1:6379> debug cmdkeys set foo bar
    1) ""foo""
    redis 127.0.0.1:6379> debug cmdkeys mget a b c
    1) ""a""
    2) ""b""
    3) ""c""
    redis 127.0.0.1:6379> debug cmdkeys zunionstore foo 2 a b
    1) ""a""
    2) ""b""
    3) ""foo""
    redis 127.0.0.1:6379> debug cmdkeys ping
    (empty list or set)",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_948.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_948.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_948.cpp
3e1d77267759083fa0d011193a2ad5713dee72e3,"Cluster: don't allow BY option of SORT as well.

There is the exception of a ""constant"" BY pattern that is used in order
to signal to don't sort at all. In this case no lookup is needed so it
is possible to support this case in Cluster mode.",[],src/sort.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_949.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_949.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_949.cpp
03344196f375761a90fa1429ff617a12fb1f3ff6,"Cluster: don't allow GET option in cluster mode.

The commit also refactors a bit the error handling during SORT option
parsing.",[],src/sort.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_950.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_950.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_950.cpp
3b0edb80ecf0f8702b484fed9cb3aaccc63f60ed,"Merge pull request #1567 from mattsta/fix-cluster-join

Bind source address for cluster communication",[u'https://gitlab.kitware.com/cmake/cmake/issues/1567'],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_951.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_951.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_951.cpp
36676c23186617ff096d534c6faa353829c4e437,Redis Cluster: support for multi-key operations.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_952.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_952.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_952.cpp
b74c899da39dc52ce38801a447ef15459ae02466,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_953.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_953.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_953.cpp
54e99fb2266f12070b905ad1e8f9638625126056,"Merge pull request #1578 from badboy/patch-5

Small typo fixed",[u'https://gitlab.kitware.com/cmake/cmake/issues/1578'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_954.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_954.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_954.cpp
9b401819c009c85f285c5b4890fb91a6a2a91f7f,Cast saveparams[].seconds to long for %ld format specifier.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_955.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_955.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_955.cpp
5f5118bdad709c5eef10140130ba1329b6a5e661,Small typo fixed,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_956.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_956.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_956.cpp
e5b1e7be64d82b0360af3bed0eaa22ca942be4f4,"Bind source address for cluster communication

The first address specified as a bind parameter
(server.bindaddr[0]) gets used as the source IP
for cluster communication.

If no bind address is specified by the user, the
behavior is unchanged.

This patch allows multiple Redis Cluster instances
to communicate when running on the same interface
of the same host.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_957.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_957.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_957.cpp
08da025f56b2b99523fc9fa9a8976ceafa69fe57,CONFIG REWRITE should be logged at WARNING level.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_958.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_958.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_958.cpp
c5edd91716486b1134aa9318657e38e43445a75d,Cluster: invalidate current transaction on redirections.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_959.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_959.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_959.cpp
e41a3edfab107acf9241cfc1db5ddece8e9fc9ff,Merge branch 'cli_improved_bigkeys' of git://github.com/michael-grunder/redis into unstable,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_960.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_960.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_960.cpp
0c1bb1313c4ae33cb3cb8f4f16f8ad415ed85a75,Merge branch 'unstable' of github.com:/antirez/redis into unstable,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_961.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_961.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_961.cpp
68d6d1597f3c346d8a011314c1e255cc296d1c90,"Merge pull request #1572 from mattsta/consistent-max-memory-info

Force INFO used_memory_peak to match peak memory",[u'https://gitlab.kitware.com/cmake/cmake/issues/1572'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_962.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_962.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_962.cpp
f1c9a203b2eda46c2980582d3bdb12b6e66f4aaf,"Force INFO used_memory_peak to match peak memory

used_memory_peak only updates in serverCron every server.hz,
but Redis can use more memory and a user can request memory
INFO before used_memory_peak gets updated in the next
cron run.

This patch updates used_memory_peak to the current
memory usage if the current memory usage is higher
than the recorded used_memory_peak value.

(And it only calls zmalloc_used_memory() once instead of
twice as it was doing before.)",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_963.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_963.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_963.cpp
806788d009f3d95b3f48c624253c80165b6ed04d,"Improved bigkeys with progress, pipelining and summary

This commit reworks the redis-cli --bigkeys command to provide more
information about our progress as well as output summary information
when we're done.

 - We now show an approximate percentage completion as we go
 - Hiredis pipelining is used for TYPE and SIZE retreival
 - A summary of keyspace distribution and overall breakout at the end",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_964.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_964.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_964.cpp
38c620b3b5676281463ab155e2447889f984b44f,"Initial implementation of BITPOS.

It appears to work but more stress testing, and both unit tests and
fuzzy testing, is needed in order to ensure the implementation is sane.",[],src/bitops.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_965.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_965.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_965.cpp
55e36e1132e0d13e788629f72ccb5d92e6fc6ae2,Merge branch 'bigkeys_scan' of git://github.com/michael-grunder/redis into unstable,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_966.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_966.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_966.cpp
013a4ce242eb4c13c4eee68b54a68f3e7b23f0f3,"Update --bigkeys to use SCAN

This commit changes the findBigKeys() function in redis-cli.c to use the new
SCAN command for iterating the keyspace, rather than RANDOMKEY.  Because we
can know when we're done using SCAN, it will exit after exhausting the keyspace.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_967.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_967.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_967.cpp
c1d67ea9b46f88098e88450adb968d8d7c140cda,redis-cli: --intrinsic-latency run mode added.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_968.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_968.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_968.cpp
6b373edb773787e67cec502ab7e42234bdf365f2,Sentinel: generate +monitor events at startup.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_969.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_969.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_969.cpp
3b7a7574685f184b9c88e8aed5f97e07265f21ec,"Sentinel: log +monitor and +set events.

Now that we have a runtime configuration system, it is very important to
be able to log how the Sentinel configuration changes over time because
of API calls.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_970.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_970.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_970.cpp
e16333285813c8dc5d1af3a55aeb7e81e91f01cb,"Merge pull request #1545 from mattsta/fix-redis-cli-sync

Deny SYNC and PSYNC in redis-cli",[u'https://gitlab.kitware.com/cmake/cmake/issues/1545'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_971.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_971.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_971.cpp
e1b77b61f320077dd41d8ea2a7fd74561084d75f,"Sentinel: better specify startup errors due to config file.

Now it logs the file name if it is not accessible. Also there is a
different error for the missing config file case, and for the non
writable file case.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_972.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_972.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_972.cpp
7e8abcf6932120b5f9c8a7dadafbd5a8045c2bb6,Log when CONFIG REWRITE goes bad.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_973.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_973.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_973.cpp
fe8352540fa5d6157648427b0651de9d5574e48d,"AOF: don't abort on write errors unless fsync is 'always'.

A system similar to the RDB write error handling is used, in which when
we can't write to the AOF file, writes are no longer accepted until we
are able to write again.

For fsync == always we still abort on errors since there is currently no
easy way to avoid replying with success to the user otherwise, and this
would violate the contract with the user of only acknowledging data
already secured on disk.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_974.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_974.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_974.cpp
fe8352540fa5d6157648427b0651de9d5574e48d,"AOF: don't abort on write errors unless fsync is 'always'.

A system similar to the RDB write error handling is used, in which when
we can't write to the AOF file, writes are no longer accepted until we
are able to write again.

For fsync == always we still abort on errors since there is currently no
easy way to avoid replying with success to the user otherwise, and this
would violate the contract with the user of only acknowledging data
already secured on disk.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_975.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_975.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_975.cpp
6dc26795aa949d6cacad4f7c6ab2df0f18f670e4,"Cluster: fsync at every SETSLOT command puts too pressure on disks.

During slots migration redis-trib can send a number of SETSLOT commands.
Fsyncing every time is a bit too much in production as verified
empirically.

To make sure configs are fsynced on all nodes after a resharding
redis-trib may send something like CLUSTER CONFSYNC.

In this case fsyncs were not providing too much value since anyway
processes can crash in the middle of the resharding of an hash slot, and
redis-trib should be able to recover from this condition anyway.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_976.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_976.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_976.cpp
6fc53e16adba5a3f096bf4f242f883c95d2b12de,Cluster: update configEpoch after manually messing with slots.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_977.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_977.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_977.cpp
21648473aad5c3d09c6e9a9ed440564c8135ef6f,"Auto-enter slaveMode when SYNC from redis-cli

If someone asks for SYNC or PSYNC from redis-cli,
automatically enter slaveMode (as if they ran
redis-cli --slave) and continue printing the replication
stream until either they Ctrl-C or the master gets disconnected.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_978.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_978.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_978.cpp
f885fa8bac6e476e4ca9ad8be80707ac74a320af,Cluster: clusterReadHandler() fixed to work with new message header.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_979.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_979.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_979.cpp
2d6eb6899319276c0071b922b9458caa909040e1,Sentinel: allow SHUTDOWN command in Sentinel mode.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_980.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_980.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_980.cpp
970de3e9c0f4e4b0ac56d1710e3b66f4a0cd06a5,"Check for EAGAIN in sendBulkToSlave().

Sometime an osx master with a Linux server over a slow link caused
a strange error where osx called the writable function for
the socket but actually apparently there was no room in the socket
buffer to accept the write: write(2) call returned an EAGAIN error,
that was not checked, so we considered write(2) == 0 always as a connection
reset, which was unfortunate since the bulk transfer has to start again.

Also more errors are logged with the WARNING level in the same code path
now.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_981.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_981.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_981.cpp
c6f02fd67a6a51e127003acf9a6ee14299dfa9a0,Cluster: CLUSTER FAILOVER replies with OK and logs the event.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_982.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_982.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_982.cpp
4cf0cd57192d07735a1ddd3aeb84151665929f5c,Cluster: manual failover initial implementation.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_983.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_983.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_983.cpp
4919a13f503ab4ac5ad5611987996c4432c8de08,"CLIENT PAUSE and related API implemented.

The API is one of the bulding blocks of CLUSTER FAILOVER command that
executes a manual failover in Redis Cluster. However exposed as a
command that the user can call directly, it makes much simpler to
upgrade a standalone Redis instance using a slave in a safer way.

The commands works like that:

    CLIENT PAUSE <milliesconds>

All the clients that are not slaves and not in MONITOR state are paused
for the specified number of milliesconds. This means that slaves are
normally served in the meantime.

At the end of the specified amount of time all the clients are unblocked
and will continue operations normally. This command has no effects on
the population of the slow log, since clients are not blocked in the
middle of operations but only when there is to process new data.

Note that while the clients are unblocked, still new commands are
accepted and queued in the client buffer, so clients will likely not
block while writing to the server while the pause is active.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_984.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_984.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_984.cpp
4919a13f503ab4ac5ad5611987996c4432c8de08,"CLIENT PAUSE and related API implemented.

The API is one of the bulding blocks of CLUSTER FAILOVER command that
executes a manual failover in Redis Cluster. However exposed as a
command that the user can call directly, it makes much simpler to
upgrade a standalone Redis instance using a slave in a safer way.

The commands works like that:

    CLIENT PAUSE <milliesconds>

All the clients that are not slaves and not in MONITOR state are paused
for the specified number of milliesconds. This means that slaves are
normally served in the meantime.

At the end of the specified amount of time all the clients are unblocked
and will continue operations normally. This command has no effects on
the population of the slow log, since clients are not blocked in the
middle of operations but only when there is to process new data.

Note that while the clients are unblocked, still new commands are
accepted and queued in the client buffer, so clients will likely not
block while writing to the server while the pause is active.",[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_985.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_985.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_985.cpp
7be946fde2df23bc983d97e099b8955fc0f69bfb,"Option ""backlog"" renamed ""tcp-backlog"".

This is especially important since we already have a concept of backlog
(the replication backlog).",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_986.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_986.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_986.cpp
d76aa96d1afa556b0adb74b901831cf13134cf1d,"Add support for listen(2) backlog definition

In high RPS environments, the default listen backlog is not sufficient, so
giving users the power to configure it is the right approach, especially
since it requires only minor modifications to the code.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_987.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_987.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_987.cpp
d76aa96d1afa556b0adb74b901831cf13134cf1d,"Add support for listen(2) backlog definition

In high RPS environments, the default listen backlog is not sufficient, so
giving users the power to configure it is the right approach, especially
since it requires only minor modifications to the code.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_988.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_988.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_988.cpp
a7d30681c9977511951432a17a1e0805d303aa4b,"Cluster: configurable replicas migration barrier.

It is possible to configure the min number of additional working slaves
a master should be left with, for a slave to migrate to an orphaned
master.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_989.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_989.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_989.cpp
3ff1bb4b2e146f94672967f1a37bd01b83cd6150,"Sentinel: check arity for SENTINEL MASTER command.

This fixes issue #1530.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1530'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_990.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_990.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_990.cpp
9d4ded7ec6cc38f1576cc34e6f30d24c202a5963,Cluster: refactoring: new macros to check node flags.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_991.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_991.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_991.cpp
099bd336db69b0195b2b151bbd690f7373ad1665,Cluster: use myself instead of server->cluster.myself.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_992.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_992.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_992.cpp
5383ab0bc6abeda0c8c10ecf1797bbff238315da,Cluster: CLUSTER SLAVES subcommand added.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_993.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_993.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_993.cpp
603e480fd5e209f41fd042cfd6e1ef5e2860ddc2,Cluster: clusterGenNodesDescription() refactored into two functions.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_994.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_994.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_994.cpp
994c5b26dd1f66e4db728f3760a9cff79ff1f756,redis-cli: support for --scan option.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_995.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_995.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_995.cpp
e6970e204f8f05572d5500297905ef68a6f38b41,"Cluster: debug printf statemets removed.

These were committed for error after being inserted in order to fix an
issue.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_996.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_996.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_996.cpp
ac3850cabd3944c06a07ece83ad44f3dc6ad50c3,"Cluster: allow CLUSTER REPLICATE to switch master.

The code was doing checks for slaves that should be done only when the
instance is currently a master. Switching a slave from a master to
another one should just work.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_997.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_997.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_997.cpp
3d455393a6a874e49abe51543fb442d38073f07d,"Cluster: don't let a node forget its own master.

redis-trib should make sure to reconfigure slaves of a node to remove
from the cluster to replicate with other nodes before sending CLUSTER
FORGET.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_998.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_998.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_998.cpp
0c373207fa5092bb0f7cdaef5ac78b8e64614bfd,Cluster: don't forget yourself with CLUSTER FORGET.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_999.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_999.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_999.cpp
3e948970fe81d2a209c5f9731123ca5cebfe1458,"Cluster: use the node blacklist in CLUSTER FORGET.

CLUSTER FORGET is not useful if we can't remove a node from all the
nodes of our cluster because of the Gossip protocol that keeps adding
a given node to nodes where we already tried to remove it.

So now CLUSTER FORGET implements a nodes blacklist that is set and
checked by the Gossip section processing function. This way before a
node is re-added at least 60 seconds must elapse since the FORGET
execution.

This means that redis-trib has some time to remove a node from a whole
cluster. It is possible that in the future it will be uesful to raise
the 60 sec figure to something bigger.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1000.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1000.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1000.cpp
25ddefdea300958f356365ab8830a9676193df70,"Cluster: range checking in getSlotOrReply() fixed.

See issue #1426 on Github.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1426'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1001.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1001.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1001.cpp
28273394cb37a3fabc5869bb5e2725a401e04c6f,"Cluster: support to read from slave nodes.

A client can enter a special cluster read-only mode using the READONLY
command: if the client read from a slave instance after this command,
for slots that are actually served by the instance's master, the queries
will be processed without redirection, allowing clients to read from
slaves (but without any kind fo read-after-write guarantee).

The READWRITE command can be used in order to exit the readonly state.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1002.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1002.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1002.cpp
d5763dceaffcd2347e588352cceaf3a1615a4601,SENTINEL SET master quorum implemented.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1003.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1003.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1003.cpp
fe86f890b07a124afdc0417bb0089677a892d454,SENTINEL SET: error on bad option name + flush config on error.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1004.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1004.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1004.cpp
f822516e43b8fadcfbb97cee281eee19fdcfe2ad,"SENTINEL SET implemented.

The new command allows to change master-specific configurations
at runtime. All the settable parameters can be retrivied via the
SENTINEL MASTER command, so there is no equivalent ""GET"" command.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1005.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1005.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1005.cpp
3cdcaff0699a7d0737260c519ccf28510f5d9131,Sentinel: fix wrong arity error message.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1006.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1006.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1006.cpp
964f6b17e9c9bf7b20efb56ac922c29985d9f31d,"Sentinel: SENTINEL REMOVE command added.

The command totally removes a monitored master.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1007.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1007.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1007.cpp
39f9f449b08b5838144160dcea1b9e0b5923e43b,"Sentinel: SENTINEL MONITOR command implemented.

It allows to add new masters to monitor at runtime.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1008.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1008.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1008.cpp
c42e4bd0b62d5e542d9ff100b2a9ab374f84fb1a,"Sentinel: added SENTINEL MASTER <name> command.

With SENTINEL MASTERS it was already possible to list all the configured
masters, but not a specific one.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1009.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1009.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1009.cpp
58c8a071a51632c0e337f467e3ca7b2127e3fb43,"Fix RESTORE ttl handling in 32 bit archs.

long was used instead of long long in order to handle a 64 bit
resolution millisecond timestamp.

This fixes issue #1483.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1483'],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1010.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1010.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1010.cpp
a2a900356e62628588742dd6b2de8c8d55b86784,"anetTcpGenericConnect() bug introduced in 9d19977 fixed.

Durign a refactoring I mispelled _port for port.
This is one of the reasons I never used _varname myself.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1011.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1011.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1011.cpp
cb23d510f49ce0930a55bb07915853a83b7f9867,Remove useless goto from anetTcpGenericConnect().,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1012.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1012.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1012.cpp
491f68108868baed5b60045b75099b5475eddd35,"anetTcpGenericConnect() code improved + 1 bug fix.

Now the socket is closed if anetNonBlock() fails, and in general the
code structure makes it harder to introduce this kind of bugs in the
future.

Reference: pull request #1059.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1059'],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1013.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1013.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1013.cpp
f510549044623d4a17d6b2618f90da85edc40796,"Cluster: clusterProcessPacket() was not 80 cols friendly.

The function actually needs to be split into sub-functions at some
point in the future.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1014.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1014.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1014.cpp
d7374032c0d9d87d9169139b0182c49891504d7c,"Redis Cluster: handshake code refactoring + Gossip IP switch detection.

This commit makes it simple to start an handshake with a specific node
address, and uses this in order to detect a node IP change and start a
new handshake in order to fix the IP if possible.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1015.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1015.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1015.cpp
7da423f79fee78b002b7e25f27cf1698c08974ed,"CONFIG REWRITE: don't throw some options on config rewrite

Those options will be thrown without this patch:
  include, rename-command, min-slaves-to-write, min-slaves-max-lag,
appendfilename.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1016.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1016.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1016.cpp
b221e13dac3ac1878a365b0b4d4573429e5bc5e2,"CONFIG REWRITE: don't wipe unknown options.

With this commit options not explicitly rewritten by CONFIG REWRITE are
not touched at all. These include new options that may not have support
for REWRITE, and other special cases like rename-command and include.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1017.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1017.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1017.cpp
e88e6a633414bb66d58e23f2df8f91eed5bb5aec,"Cluster: use long long for timestamps in clusterGenNodesDescription().

Ping sent and pong received fields need to be casted to long long to be
printed correctly into 32 bit systems.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1018.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1018.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1018.cpp
a5ec247f13f70d4d60337460ab2b3eb583f7f5e7,"Replication: publish the slave_repl_offset when disconnected from master.

When a slave was disconnected from its master the replication offset was
reported as -1. Now it is reported as the replication offset of the
previous master, so that failover can be performed using this value in
order to try to select a slave with more processed data from a set of
slaves of the old master.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1019.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1019.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1019.cpp
0a89d9a0b1abcbd91e7c8a83d6fa9e3aaefbb556,"Merge pull request #1451 from yossigo/unbalanced-quotes-fix

Return proper error on requests with an unbalanced number of quotes.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1451'],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1020.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1020.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1020.cpp
2eb781b35bfa9bde5ab88b192cd3e666e7872625,"dict.c: added optional callback to dictEmpty().

Redis hash table implementation has many non-blocking features like
incremental rehashing, however while deleting a large hash table there
was no way to have a callback called to do some incremental work.

This commit adds this support, as an optiona callback argument to
dictEmpty() that is currently called at a fixed interval (one time every
65k deletions).",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1021.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1021.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1021.cpp
6e70c011484018ca9946cc536b7ab4531580b8de,Return proper error on requests with an unbalanced number of quotes.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1022.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1022.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1022.cpp
c5618e7fdd1db874b785c19f53f01e78ea56007a,WAIT command: synchronous replication for Redis.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1023.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1023.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1023.cpp
c5618e7fdd1db874b785c19f53f01e78ea56007a,WAIT command: synchronous replication for Redis.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1023.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1023.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1023.cpp
82b672f6335ac2db32a724ba5dc10398c949a4a8,BLPOP blocking code refactored to be generic & reusable.,[],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1024.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1024.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1024.cpp
f80cf7363abbd51f43d9d6f15a273fc11356f6c6,"Sentinel: don't write HZ when flushing config.

See issue #1419.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1419'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1025.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1025.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1025.cpp
8d547ebd5696ed2e6943e74990f51f9c9204861c,"Sentinel: fix type specifier for Hello msg generation.

This fixes issue #1395.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1395'],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1026.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1026.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1026.cpp
1ca56ea7962e9c0b25a9d77745ddcf046fd07804,Merge branch 'newsentinel' into unstable,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1027.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1027.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1027.cpp
1ca56ea7962e9c0b25a9d77745ddcf046fd07804,Merge branch 'newsentinel' into unstable,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1028.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1028.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1028.cpp
297de1ab26789f8a30a5d4c8a188636a5b9ea821,"Sentinel: test for writable config file.

This commit introduces a funciton called when Sentinel is ready for
normal operations to avoid putting Sentinel specific stuff in redis.c.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1029.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1029.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1029.cpp
d920177f8ddadc4af7fbc8a02438340eea5ca1f3,"Sentinel: check for disconnected links in sentinelSendHello().

Does not fix any bug as the test is performed by the caller, but better
to have the check.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1030.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1030.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1030.cpp
8810167d13cb5d7aef12c2ee1d7c48895cb79626,Sentinel: Hello message sending code refactored.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1031.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1031.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1031.cpp
0a35f65301481a6165f34c1c3e38e2b805ba595e,"Sentinel: when writing config on disk, remember sentinels runid.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1032.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1032.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1032.cpp
b8a94463b751e55c9b3dfe08646738a13974c274,Sentinel: rewriteConfigSentinelOption() sub-iterators var typo fixed.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1033.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1033.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1033.cpp
16237d78c83ed7c7182b60b9e66d29db44465986,"Sentinel: call sentinelFlushConfig() to persist state when needed.

Also the sentinel configuration rewriting was modified in order to
account for failover in progress, where we need to provide the promoted
slave address as master address, and the old master address as one of
the slaves address.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1034.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1034.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1034.cpp
e257ab2bfeabfec5b4af562a5f0bbc28983ce26d,Sentinel: sentinelFlushConfig() to CONFIG REWRITE + fsync.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1035.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1035.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1035.cpp
5998769c2803ded68b56b8f5836c57c895e0e807,Sentinel: CONFIG REWRITE support for Sentinel config.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1036.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1036.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1036.cpp
5998769c2803ded68b56b8f5836c57c895e0e807,Sentinel: CONFIG REWRITE support for Sentinel config.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1037.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1037.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1037.cpp
47df12d5d9ab45a2603e1b16e862e8d0e29c0f2c,"Sentinel: can-failover option removed, many comments fixed.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1038.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1038.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1038.cpp
69d826a354f69918e3887bac1d11c208917f0b4e,"Sentinel: fix address of master in Hello messages.

Once we switched configuration during a failover, we should advertise
the new address.

This was a serious race condition as the Sentinel performing the
failover for a moment advertised the old address with the new
configuration epoch: once trasmitted to the other Sentinels the broken
configuration would remain there forever, until the next failover
(because a greater configuration epoch is required to overwrite an older
one).",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1039.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1039.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1039.cpp
e6b9d5e97ead58ce819d33edfbfce55ffdd63568,Sentinel: +new-epoch events.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1040.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1040.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1040.cpp
ab4b2ec88f192ea894bcf9ce3a7ba2c1a5765aff,Sentinel: allow to vote for myself.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1041.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1041.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1041.cpp
b6b65b29c0f5021f2f7845e53ebc1641f2de1615,Sentinel: fix PUBLISH to masters and slaves.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1042.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1042.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1042.cpp
b93b0adc89fff22349623b9fec9d1b9aeb0d1f12,"Sentinel: epoch introduced.

Sentinel state now includes the idea of current epoch and config epoch.
In the Hello message, that is now published both on masters and slaves,
a Sentinel no longer just advertises itself but also broadcasts its
current view of the configuration: the master name / ip / port and its
current epoch.

Sentinels receiving such information switch to the new master if the
configuration epoch received is newer and the ip / port of the master
are indeed different compared to the previos ones.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1043.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1043.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1043.cpp
dc43f66eacb0e5d5957f05c5974d016e7351b2d2,Cluster: UPDATE msg data structure and sending function.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1044.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1044.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1044.cpp
6c6572be9575914d43cc2011563c7726d2a1df48,"Cluster: refactoring of slots update code and more.

The commit also introduces detection of nodes publishing not updated
configuration. More work in progress to send an UPDATE packet to inform
of the config change.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1045.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1045.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1045.cpp
ebcb6251e6311622edb7dc1100a9c7cadb8842e8,"SCAN code refactored to parse cursor first.

The previous implementation of SCAN parsed the cursor in the generic
function implementing SCAN, SSCAN, HSCAN and ZSCAN.

The actual higher-level command implementation only checked for empty
keys and return ASAP in that case. The result was that inverting the
arguments of, for instance, SSCAN for example and write:

    SSCAN 0 key

Instead of

    SSCAN key 0

Resulted into no error, since 0 is a non-existing key name very likely.
Just the iterator returned no elements at all.

In order to fix this issue the code was refactored to extract the
function to parse the cursor and return the error. Every higher level
command implementation now parses the cursor and later checks if the key
exist or not.",[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1046.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1046.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1046.cpp
101d4bf86724faf9a5abb251f6cc212546cc6c65,Use strtoul() instead of sscanf() in SCAN implementation.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1047.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1047.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1047.cpp
442ae833b217dd986ebd1677fb9cc0c1fdfe84a6,"SCAN: refactored into scanGenericCommand.

The new implementation is capable of iterating the keyspace but also
sets, hashes, and sorted sets, and can be used to implement SSCAN, ZSCAN
and HSCAN.",[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1048.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1048.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1048.cpp
908eba5a8fd88354e9254cc312b0013ccf60121c,SCAN: remove additional newlines to conform to Redis code base.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1049.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1049.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1049.cpp
7f490b197ffbb27f0c655acb9aaf4adaa698d978,Add SCAN command,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1050.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1050.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1050.cpp
6fa9b1a420769e8cce2e337628b4f9ce730c2909,Merge branch 'bettercluster' into unstable,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1051.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1051.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1051.cpp
0150c70b2bc50ab4d29680619115bd1629801f5d,"Replication: install the write handler when reusing a cached master.

Sometimes when we resurrect a cached master after a successful partial
resynchronization attempt, there is pending data in the output buffers
of the client structure representing the master (likely REPLCONF ACK
commands).

If we don't reinstall the write handler, it will never be installed
again by addReply*() family functions as they'll assume that if there is
already data pending, the write handler is already installed.

This bug caused some slaves after a successful partial sync to never
send REPLCONF ACK, and continuously being detected as timing out by the
master, with a disconnection / reconnection loop.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1052.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1052.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1052.cpp
1461422ce66056eb79231e8240dde01db2260fa0,"Replication: install the write handler when reusing a cached master.

Sometimes when we resurrect a cached master after a successful partial
resynchronization attempt, there is pending data in the output buffers
of the client structure representing the master (likely REPLCONF ACK
commands).

If we don't reinstall the write handler, it will never be installed
again by addReply*() family functions as they'll assume that if there is
already data pending, the write handler is already installed.

This bug caused some slaves after a successful partial sync to never
send REPLCONF ACK, and continuously being detected as timing out by the
master, with a disconnection / reconnection loop.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1053.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1053.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1053.cpp
4f9a69399bc2751f8fc658f998f895ddd280cf45,Add REWRITE to CONFIG subcommands help message.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1054.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1054.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1054.cpp
7afc0dd59a7ac0a76b35d6589f83f4fce1f69a0f,"Cluster: new clusterDoBeforeSleep() API.

The new API is able to remember operations to perform before returning
to the event loop, such as checking if there is the failover quorum for
a slave, save and fsync the configuraiton file, and so forth.

Because this operations are performed before returning on the event
loop we are sure that messages that are sent in the same event loop run
will be delivered *after* the configuration is already saved, that is a
requirement sometimes. For instance we want to publish a new epoch only
when it is already stored in nodes.conf in order to avoid returning back
in the logical clock when a node is restarted.

This new API provides a big performance advantage compared to saving and
possibly fsyncing the configuration file multiple times in the same
event loop run, especially in the case of big clusters with tens or
hundreds of nodes.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1055.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1055.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1055.cpp
6c4d904baf7d5c8717cce04ec69fc491f710823a,Cluster: bus messages stats in CLUSTER info.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1056.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1056.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1056.cpp
abe81781aeaeb0d7d3837df6c5cba71f0fae5161,"Cluster: FAIL messages from unknown senders are handled better.

Previously the event was not logged but instead the node reported an
unknown packet type received.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1057.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1057.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1057.cpp
2b93a195374665d8bc74b33b4c769bdf9db97014,Add REWRITE to CONFIG subcommands help message.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1058.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1058.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1058.cpp
62b1591439901557b3a177469ed8d54da77e7503,"Cluster: re-order failover operations to make it safer.

We need to:

1) Increment the configEpoch.
2) Save it to disk and fsync the file.
3) Broadcast the PONG with the new configuration.

If other nodes will receive the updated configuration we need to be sure
to restart with this new config in the event of a crash.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1059.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1059.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1059.cpp
b1875177198959710d9c9a348eb9f116b797b6bc,"Cluster: when upading the configEpoch for a node, save config on disk ASAP.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1060.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1060.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1060.cpp
fb9b76fe1435c83d84a3144f1c06ddb1378899b8,Cluster: slave node now uses the new protocol to get elected.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1061.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1061.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1061.cpp
32b5410af928b9d651a837f79c6c6002615a3048,Cluster: add currentEpoch to CLUSTER INFO.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1062.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1062.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1062.cpp
12483b0061e0755d17730f24a976d61301450216,Cluster: configEpoch added in cluster nodes description.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1063.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1063.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1063.cpp
3c9bb8751a440c9f4bde69ceb54b624f52f589f6,"Cluster: PFAIL -> FAIL transition allowed for slaves.

First change: now there is no need to be a master in order to detect a
failure, however the majority of masters signaling PFAIL or FAIL is needed.

This change is important because it allows slaves rejoining the cluster
after a partition to sense the FAIL condition so that eventually all the
nodes agree on failures.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1064.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1064.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1064.cpp
2debce325bf52b45ec8c0ee274cd9af63e4d2957,"redis-cli: fix big keys search when the key no longer exist.

The code freed a reply object that was never created, resulting in a
segfault every time randomkey returned a key that was deleted before we
queried it for size.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1065.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1065.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1065.cpp
8eff339ca43c403615a7821be054221274cb113f,Cluster: CLUSTER SAVECONFIG command added.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1066.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1066.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1066.cpp
528201ad6c2b2f9758003f8676d400a5f94fa1f0,Cluster: don't save HANDSHAKE nodes in nodes.conf.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1067.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1067.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1067.cpp
354a5de27069ac841c15e34ed87943d416f53762,Cluster: clusterReadHandler() reworked to be more correct and simpler to follow.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1068.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1068.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1068.cpp
41d3147344da4656b6a21c73373c34d25fe8f24d,"Fixed critical memory leak from EVAL.

Multiple missing calls to lua_pop prevented the error handler function
pushed on the stack for lua_pcall() to be popped before returning,
causing a memory leak in almost all the code paths of EVAL (both
successful calls and calls returning errors).

This caused two issues: Lua leaking memory (and this was very visible
from INFO memory output, as the 'used_memory_lua' field reported an
always increasing amount of memory used), and as a result slower and
slower GC cycles resulting in all the CPU being used.

Thanks to Tanguy Le Barzic for noticing something was wrong with his 2.8
slave, and for creating a testing EC2 environment where I was able to
investigate the issue.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1069.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1069.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1069.cpp
e21803348a1c707c5fe36524a589b2475d5ad791,"DEBUG SDSLEN added.

This command is only useful for low-level debugging of memory issues due
to sds wasting memory as empty buffer at the end of the string.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1070.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1070.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1070.cpp
b34126e37850f70d55ee441a54e28be18e9141c4,Update server.lastbgsave_status when fork() fails.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1071.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1071.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1071.cpp
81a6a9639a5650082fcc78f5c83c4dfee79eaeb2,Use listenToPort() in cluster.c as well.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1072.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1072.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1072.cpp
81a6a9639a5650082fcc78f5c83c4dfee79eaeb2,Use listenToPort() in cluster.c as well.,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1073.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1073.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1073.cpp
042776aff78833a2c8885a2a76db361c75105203,"Cluster: fix CLUSTER MEET ip address validation.

This was broken by the IPv6 support patches.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1074.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1074.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1074.cpp
dcc48a81436c08128a15f88170eee1287122e87a,"replicationFeedSlave() reworked for correctness and speed.

The previous code using a static buffer as an optimization was lame:

1) Premature optimization, actually it was *slower* than naive code
   because resulted into the creation / destruction of the object
   encapsulating the output buffer.
2) The code was very hard to test, since it was needed to have specific
   tests for command lines exceeding the size of the static buffer.
3) As a result of ""2"" the code was bugged as the current tests were not
   able to stress specific corner cases.

It was replaced with easy to understand code that is safer and faster.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1075.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1075.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1075.cpp
dcc48a81436c08128a15f88170eee1287122e87a,"replicationFeedSlave() reworked for correctness and speed.

The previous code using a static buffer as an optimization was lame:

1) Premature optimization, actually it was *slower* than naive code
   because resulted into the creation / destruction of the object
   encapsulating the output buffer.
2) The code was very hard to test, since it was needed to have specific
   tests for command lines exceeding the size of the static buffer.
3) As a result of ""2"" the code was bugged as the current tests were not
   able to stress specific corner cases.

It was replaced with easy to understand code that is safer and faster.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1075.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1075.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1075.cpp
89ffba9133bc78f6c797d248f22335da490d20d0,"Replication: better way to send a preamble before RDB payload.

During the replication full resynchronization process, the RDB file is
transfered from the master to the slave. However there is a short
preamble to send, that is currently just the bulk payload length of the
file in the usual Redis form $..length..<CR><LF>.

This preamble used to be sent with a direct write call, assuming that
there was alway room in the socket output buffer to hold the few bytes
needed, however this does not scale in case we'll need to send more
stuff, and is not very robust code in general.

This commit introduces a more general mechanism to send a preamble up to
2GB in size (the max length of an sds string) in a non blocking way.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1076.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1076.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1076.cpp
db862e8ef0a7f857beb8b7db1a5c70093832033b,"redis-benchmark: changes to random arguments substitution.

Before this commit redis-benchmark supported random argumetns in the
form of :rand:000000000000. In every string of that form, the zeros were
replaced with a random number of 12 digits at every command invocation.

However this was far from perfect as did not allowed to generate simply
random numbers as arguments, there was always the :rand: prefix.

Now instead every argument in the form __rand_int__ is replaced with a
12 digits number. Note that ""__rand_int__"" is 12 characters itself.

In order to implement the new semantic, it was needed to change a few
thigns in the internals of redis-benchmark, as new clients are created
cloning old clients, so without a stable prefix such as "":rand:"" the old
way of cloning the client was no longer able to understand, from the old
command line, what was the position of the random strings to substitute.

Now instead a client structure is passed as a reference for cloning, so
that we can directly clone the offsets inside the command line.",[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1077.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1077.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1077.cpp
92ab77f8d5ae12e938a07be2280d558360c25e09,"redis-benchmark: replace snprintf()+memcpy with faster code.

This change was profiler-driven, but the actual effect is hard to
measure in real-world redis benchmark runs.",[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1078.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1078.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1078.cpp
d52c9b6cdb1d885e647cf9be0114d481133ec485,redis-benchmark: ability to SELECT a specifid db number.,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1079.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1079.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1079.cpp
112fa479783e8975848ab79d695a65363d330f18,"Add per-db average TTL information in INFO output.

Example:

db0:keys=221913,expires=221913,avg_ttl=655

The algorithm uses a running average with only two samples (current and
previous). Keys found to be expired are considered at TTL zero even if
the actual TTL can be negative.

The TTL is reported in milliseconds.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1080.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1080.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1080.cpp
d398f38879a3d29f74fd2cea61f9ae93a3a2af50,Remove dead code and fix comments for new expire code.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1081.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1081.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1081.cpp
66a26471dc829bb60641781cbf8e74f40d2b7bb0,"Darft #2 for key collection algo: more improvements.

This commit makes the fast collection cycle time configurable, at
the same time it does not allow to run a new fast collection cycle
for the same amount of time as the max duration of the fast
collection cycle.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1082.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1082.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1082.cpp
b09ea1bd90c96ad26f0eb109ffcd36e2e7cb21e1,"Draft #1 of a new expired keys collection algorithm.

The main idea here is that when we are no longer to expire keys at the
rate the are created, we can't block more in the normal expire cycle as
this would result in too big latency spikes.

For this reason the commit introduces a ""fast"" expire cycle that does
not run for more than 1 millisecond but is called in the beforeSleep()
hook of the event loop, so much more often, and with a frequency bound
to the frequency of executed commnads.

The fast expire cycle is only called when the standard expiration
algorithm runs out of time, that is, consumed more than
REDIS_EXPIRELOOKUPS_TIME_PERC of CPU in a given cycle without being able
to take the number of already expired keys that are yet not collected
to a number smaller than 25% of the number of keys.

You can test this commit with different loads, but a simple way is to
use the following:

Extreme load with pipelining:

redis-benchmark -r 100000000 -n 100000000  \
        -P 32 set ele:rand:000000000000 foo ex 2

Remove the -P32 in order to avoid the pipelining for a more real-world
load.

In another terminal tab you can monitor the Redis behavior with:

redis-cli -i 0.1 -r -1 info keyspace

and

redis-cli --latency-history

Note: this commit will make Redis printing a lot of debug messages, it
is not a good idea to use it in production.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1083.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1083.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1083.cpp
320fa02b9b48ee1c63d88db6344fc0d328e24853,Use latest sds.c in the hiredis library under deps.,[],deps/hiredis/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1084.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1084.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1084.cpp
320fa02b9b48ee1c63d88db6344fc0d328e24853,Use latest sds.c in the hiredis library under deps.,[],deps/hiredis/sds.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1085.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1085.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1085.cpp
6ea8e0949c6cc6cd222c13f4a13d39fe8652f65e,"sdsrange() does not need to return a value.

Actaully the string is modified in-place and a reallocation is never
needed, so there is no need to return the new sds string pointer as
return value of the function, that is now just ""void"".",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1086.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1086.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1086.cpp
076c2623aceadfc9247515841fa0970ce56e3081,Every function inside sds.c is now commented.,[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1087.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1087.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1087.cpp
894eba07c8484c0f34b09d54a84e69314c37c427,"Introduction of a new string encoding: EMBSTR

Previously two string encodings were used for string objects:

1) REDIS_ENCODING_RAW: a string object with obj->ptr pointing to an sds
stirng.

2) REDIS_ENCODING_INT: a string object where the obj->ptr void pointer
is casted to a long.

This commit introduces a experimental new encoding called
REDIS_ENCODING_EMBSTR that implements an object represented by an sds
string that is not modifiable but allocated in the same memory chunk as
the robj structure itself.

The chunk looks like the following:

+--------------+-----------+------------+--------+----+
| robj data... | robj->ptr | sds header | string | \0 |
+--------------+-----+-----+------------+--------+----+
                     |                       ^
                     +-----------------------+

The robj->ptr points to the contiguous sds string data, so the object
can be manipulated with the same functions used to manipulate plan
string objects, however we need just on malloc and one free in order to
allocate or release this kind of objects. Moreover it has better cache
locality.

This new allocation strategy should benefit both the memory usage and
the performances. A performance gain between 60 and 70% was observed
during micro-benchmarks, however there is more work to do to evaluate
the performance impact and the memory usage behavior.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1088.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1088.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1088.cpp
894eba07c8484c0f34b09d54a84e69314c37c427,"Introduction of a new string encoding: EMBSTR

Previously two string encodings were used for string objects:

1) REDIS_ENCODING_RAW: a string object with obj->ptr pointing to an sds
stirng.

2) REDIS_ENCODING_INT: a string object where the obj->ptr void pointer
is casted to a long.

This commit introduces a experimental new encoding called
REDIS_ENCODING_EMBSTR that implements an object represented by an sds
string that is not modifiable but allocated in the same memory chunk as
the robj structure itself.

The chunk looks like the following:

+--------------+-----------+------------+--------+----+
| robj data... | robj->ptr | sds header | string | \0 |
+--------------+-----+-----+------------+--------+----+
                     |                       ^
                     +-----------------------+

The robj->ptr points to the contiguous sds string data, so the object
can be manipulated with the same functions used to manipulate plan
string objects, however we need just on malloc and one free in order to
allocate or release this kind of objects. Moreover it has better cache
locality.

This new allocation strategy should benefit both the memory usage and
the performances. A performance gain between 60 and 70% was observed
during micro-benchmarks, however there is more work to do to evaluate
the performance impact and the memory usage behavior.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1089.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1089.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1089.cpp
b9cc90a1192a3ac2edbdac63540f889843f37284,"addReplyDouble(): format infinite in a libc agnostic way.

There are systems that when printing +/- infinte with printf-family
functions will not use the usual ""inf"" ""-inf"", but different strings.
Handle that explicitly.

Fixes issue #930.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1090.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1090.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1090.cpp
2ed64e1f7a1724ee57e92a1a502f32134ac4d99a,"Merge pull request #1192 from badboy/ipv6-rediscli

Wrap IPv6 in brackets in the prompt.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1192'],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1091.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1091.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1091.cpp
1b696dc07ce137c4e5bfc7c7e35e0f9b751099fc,Wrap IPv6 in brackets in the prompt.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1092.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1092.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1092.cpp
73ae8558c17a486a694f49dede5a6febed99e9e5,Sentinel: embed IPv6 address into [] when naming slave/sentinel instance.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1093.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1093.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1093.cpp
3fc7f324d243c718d8076e9dcc71e0990deb8192,"Sentinel: use comma as separator to publish hello messages.

We use comma to play well with IPv6 addresses, but the implementation is
still able to parse the old messages separated by colons.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1094.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1094.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1094.cpp
4735f03c5ab4ee3518943576e2ebf8e4d463abcc,hiredis: minimal IPv6 support.,[],deps/hiredis/net.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1095.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1095.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1095.cpp
5c5ebb0b9a70d428f982ed7aec5d5a60de605e42,"Sentinel: make sure published addr/id buffer is large enough.

With ipv6 support we need more space, so we account for the IP address
max size plus what we need for the Run ID, port, flags.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1096.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1096.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1096.cpp
d1cbad6d1404c62d90921280f5d180bb5d67f097,Use getClientPeerId() for MONITOR implementation.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1097.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1097.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1097.cpp
d0001fe810150edbbf25e188e949d7de494c9327,getClientPeerId() refactored into two functions.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1098.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1098.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1098.cpp
e4c019e7a8617e4fdc776611001c42683f4b25e0,"getClientPeerId() now reports errors.

We now also use it in CLIENT KILL implementation.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1099.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1099.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1099.cpp
5cdc5da990d10b211f3554afa62395f1f0a41655,"getClientPeerID introduced.

The function returns an unique identifier for the client, as ip:port for
IPv4 and IPv6 clients, or as path:0 for Unix socket clients.

See the top comment in the function for more info.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1100.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1100.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1100.cpp
e04fdf26fe929b4f80312f29ead449cf1295c17b,"Add IPv6 support to sentinel.c.

This has been done by exposing the anetSockName() function anet.c
to be used when the sentinel is publishing its existence to the masters.

This implementation is very unintelligent as it will likely break if used
with IPv6 as the nested colons will break any parsing of the PUBLISH string
by the master.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1101.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1101.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1101.cpp
56df82719879cdec95507d0f06365156310c09a7,"Add anetTcp6Server() function.

Refactor the common code from anetTcpServer into internal function which
can be used by both anetTcpServer and anetTcp6Server.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1102.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1102.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1102.cpp
72a39226178d49a7574f805190ba2fb190a0ca2e,"Add static anetV6Only() function.

This function sets the IPV6_V6ONLY option to 1 to use separate stack
IPv6 sockets.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1103.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1103.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1103.cpp
62a3b7e3d9229870d550ef5c93bf17a81c67172e,"Change anetTcpGenericConnect to use AF_UNSPEC.

This allows anetTcpGenericConnect to try to connect to AF_INET6
addresses in addition to any resolved AF_INET addresses.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1104.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1104.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1104.cpp
ca78446c55a09e9e871d55f8421da35016b7bda1,"Mark places that might want changing for IPv6.

Any places which I feel might want to be updated to work differently
with IPv6 have been marked with a comment starting ""IPV6:"".

Currently the only comments address places where an IP address is
combined with a port using the standard : separated form. These may want
to be changed when printing IPv6 addresses to wrap the address in []
such as

	[2001:db8::c0:ffee]:6379

instead of

	2001:db8::c0:ffee:6379

as the latter format is a technically valid IPv6 address and it is hard
to distinguish the IPv6 address component from the port unless you know
the port is supposed to be there.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1105.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1105.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1105.cpp
e6bf4c2676cf4e81dea57200310187329d96db49,"Update clusterCommand to handle AF_INET6 addresses

Changes the sockaddr_in to a sockaddr_storage. Attempts to convert the
IP address into an AF_INET or AF_INET6 before returning an ""Invalid IP
address"" error. Handles converting the sockaddr from either AF_INET or
AF_INET6 back into a string for storage in the clusterNode ip field.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1106.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1106.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1106.cpp
e7b34e8dc3569b5e1065013e46357b5085967cbe,"Update anetResolve to resolve AF_INET6 as well.

Change the getaddrinfo(3) hints family from AF_INET to AF_UNSPEC to
allow resolution of IPv6 addresses as well as IPv4 addresses. The
function will return the IP address of whichever address family is
preferenced by the operating system. Most current operating systems
will preference AF_INET6 over AF_INET.

Unfortunately without attempting to establish a connection to the
remote address we can't know if the host is capable of using the
returned IP address. It might be desirable to have anetResolve
accept an additional argument specifying the AF_INET/AF_INET6 address
the caller would like to receive. Currently though it does not appear
as though the anetResolve function is ever used within Redis.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1107.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1107.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1107.cpp
ee5a6df101ae27f2209ae358d2b5e0e0ada1cb36,Update calls to anetPeerToString to include ip_len.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1108.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1108.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1108.cpp
693b640510cb8e09b69e42205ec87a104fa79b57,"Use inet_pton(3) in clusterCommand.

Replace inet_aton(3) call with the more future proof inet_pton(3)
function which is capable of handling additional address families.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1109.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1109.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1109.cpp
f5494a427e448502713c3d5a8990b37c1b1e096a,"Update anetTcpAccept & anetPeerToString calls.

Add the additional ip buffer length argument to function calls of
anetTcpAccept and anetPeerToString in network.c and cluster.c",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1110.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1110.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1110.cpp
e0cb24351cb2ebbfdda5d1b4bdc2e83ca14c09a2,"Use getaddrinfo(3) in a anetTcpServer.

Change anetTcpServer() function to use getaddrinfo(3) to perform
address resolution, socket creation and binding. Resolved addresses
are limited to those reachable by the AF_INET address family.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1111.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1111.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1111.cpp
0e01ce1b13c4e0a974dc4009dc78811a234f0244,"Use getaddrinfo(3) in anetTcpGenericConnect.

Change anetTcpGenericConnect() function to use getaddrinfo(3) to
perform address resolution, socket creation and connection. Resolved
addresses are limited to those reachable by the AF_INET family.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1112.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1112.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1112.cpp
580b7dce9b1d7adac1d0bfe33e5023f8fbf91158,"Add anetSetReuseAddr(err, fd) static function.

Extract setting SO_REUSEADDR socket option into separate function
so the same code can be more easily used by anetCreateSocket and
other functions.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1113.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1113.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1113.cpp
071963c8555451116abf288382ecd1057393a6ae,"Use getaddrinfo(3) in anetResolve. #apichange

Change anetResolve() function to use getaddrinfo(3) to resolve hostnames.
Resolved hostnames are limited to those reachable by the AF_INET address
family.

API Change: anetResolve requires additional argument.
  additional argument required to specify the length of the character
  buffer the IP address is written to in order to comply with
  inet_ntop(3) function semantics. inet_ntop(3) replaces inet_ntoa(3)
  as it has been designed to be compatible with more address families.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1114.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1114.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1114.cpp
98eecb70ebd215d4bc5a9a6917cd9ef04f9e01cf,Binding multiple IPs done properly with multiple sockets.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1115.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1115.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1115.cpp
98eecb70ebd215d4bc5a9a6917cd9ef04f9e01cf,Binding multiple IPs done properly with multiple sockets.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1116.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1116.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1116.cpp
2160effc78463d6602082302486beb51eb6a999d,"Revert ""Cluster: use new anet.c listening socket creation API.""

This reverts commit 016ac38a216d1b701991a451e637ca584f804f93.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1117.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1117.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1117.cpp
c978b864f74a86dcffc54d66873f7eae6c2c7121,"Revert ""anet.c: Allow creation of TCP listening sockets bound to N addresses.""

Bind() can't be called multiple times against the same socket, multiple
sockets are required to bind multiple interfaces, silly me.

This reverts commit bd234d62bbfe9feb735fd6d1cdb8f5ce811f54b4.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1118.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1118.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1118.cpp
90b0d66cce97aaac3a6437ac77b5dad9064136d1,Ability to bind multiple addresses.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1119.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1119.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1119.cpp
016ac38a216d1b701991a451e637ca584f804f93,Cluster: use new anet.c listening socket creation API.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1120.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1120.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1120.cpp
bd234d62bbfe9feb735fd6d1cdb8f5ce811f54b4,anet.c: Allow creation of TCP listening sockets bound to N addresses.,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1121.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1121.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1121.cpp
1135e9faa253789a6d6e67fd6a44d7395af8fb35,"redis-cli: introduced --pipe-timeout.

When in --pipe mode, after all the data transfer to the server is
complete, now redis-cli waits at max the specified amount of
seconds (30 by default, use 0 to wait forever) without receiving any
reply at all from the server. After this time limit the operation is
aborted with an error.

That's related to issue #681.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1122.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1122.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1122.cpp
1b10522a08284d563b2876e9deb827dbc6697742,"Only allow basenames for dbfilename and appendfilename.

This fixes issue #1094.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1094'],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1123.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1123.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1123.cpp
de9a221749b10af3a408385056bb51255ca860f6,CONFIG SET maxclients.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1124.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1124.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1124.cpp
3130670b978e0d4baa805016386e5ca56af08123,Allow SHUTDOWN in loading state.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1125.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1125.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1125.cpp
bae60ede1d60687f1240258c9298d3515b24b091,"Merge pull request #1111 from yamt/netbsd3

netbsd support",[u'https://gitlab.kitware.com/cmake/cmake/issues/1111'],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1126.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1126.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1126.cpp
bae60ede1d60687f1240258c9298d3515b24b091,"Merge pull request #1111 from yamt/netbsd3

netbsd support",[u'https://gitlab.kitware.com/cmake/cmake/issues/1111'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1127.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1127.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1127.cpp
455563faec4b904c8ee9a1a16eac2a5bae532dc7,"PUBSUB command implemented.

Currently it implements three subcommands:

PUBSUB CHANNELS [<pattern>]    List channels with non-zero subscribers.
PUBSUB NUMSUB [channel_1 ...]  List number of subscribers for channels.
PUBSUB NUMPAT                  Return number of subscribed patterns.",[],src/pubsub.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1128.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1128.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1128.cpp
d363299af33fefb8753c44ed554f313d0203b803,"Allow writes from scripts called by AOF loading in read-only slaves.

This fixes issue #1163",[u'https://gitlab.kitware.com/cmake/cmake/issues/1163'],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1129.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1129.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1129.cpp
b96ba52cfabc97496cf9485394ab5cec5d2162c0,"Merge pull request #1124 from ioddly/fix-issue-1121

Try to report source of bad Lua API calls",[u'https://gitlab.kitware.com/cmake/cmake/issues/1124'],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1130.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1130.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1130.cpp
dfc98dccf45c639cff45e84bb78a5a2d41a214bb,Cluster: detect nodes address change.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1131.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1131.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1131.cpp
88441bf18f554b965eaf83cfce5eeaeff35c3ed4,"New INFO field ""min_slaves_good_slaves"".

When min-slaves-to-write feature is active, this field reports the
number of slaves considered good (online state, lag within the specified
range).",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1132.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1132.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1132.cpp
888400ebd57c85682edc147bb0f666af29c76d5b,repl_offset field in INFO replication is now just offset.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1133.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1133.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1133.cpp
37c29e037b08159e901227f0184973442bb86c2d,"Slaves list in INFO output: lag added, format changed.

There is a new 'lag' information in the list of slaves, in the
""replication"" section of the INFO output.

Also the format was changed in a backward incompatible way in order to
make it more easy to parse if new fields are added in the future, as the
new format is comma separated but has named fields (no longer positional
fields).",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1134.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1134.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1134.cpp
dd0adbb777f37b38bc647c15837ba53ed9edc9d4,Make sure that REPLCONF ACK really has no return value.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1135.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1135.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1135.cpp
0292c5f7aeae7f43e1116a8e668bd00f3357c53b,Replication: send REPLCONF ACK to master.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1136.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1136.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1136.cpp
6b4635f4f5fe296f07325a2b61a0706b8fc91f8c,"REPLCONF ACK command.

This special command is used by the slave to inform the master the
amount of replication stream it currently consumed.

it does not return anything so that we not need to consume additional
bandwidth needed by the master to reply something.

The master can do a number of things knowing the amount of stream
processed, such as understanding the ""lag"" in bytes of the slave, verify
if a given command was already processed by the slave, and so forth.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1137.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1137.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1137.cpp
c3229c33b1cd6cf21180c9a44ddd67a5ecd39503,Try to report source of bad Lua API calls,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1138.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1138.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1138.cpp
9fcead7a5967f31cc391fbed25c256406247b638,"don't assume time_t == long

time_t is always 64bit on recent versions of NetBSD.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1139.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1139.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1139.cpp
9fcead7a5967f31cc391fbed25c256406247b638,"don't assume time_t == long

time_t is always 64bit on recent versions of NetBSD.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1140.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1140.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1140.cpp
92f18d04a04918651825e34caa7372c6790aff7e,Merge branch 'config-rewrite' into unstable,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1141.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1141.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1141.cpp
25f2be6267f0a0a91154f44099653a2d561d8df7,CONFIG REWRITE: backlog size is a bytes option.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1142.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1142.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1142.cpp
cd48e4fc4022b8110111e621654781fee08b88c3,CONFIG REWRITE: bindaddr -> bind.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1143.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1143.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1143.cpp
8a44e6c4905b4cf59ffca92d80ff4b9560850e49,"CONFIG REWRITE: when rewriting amount of bytes use GB, MB, KB if possible.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1144.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1144.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1144.cpp
c590e18d15bed4dc576c86bc4b10eed2b0997e15,CONFIG REWRITE: correctly escape the notify-keyspace-events option.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1145.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1145.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1145.cpp
328843849f070c5cbdf154b7a96da6dcd317bdd6,"CONFIG REWRITE: ""active-rehashing"" -> ""activerehashing"".",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1146.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1146.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1146.cpp
72e980231c9595bde6b14a810b2380fdba805681,CONFIG REWRITE: repl-disable-tcp-nodelay is a boolean option.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1147.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1147.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1147.cpp
310dbba01cf694a13d077a5156be756bba5eac8b,"Added a define for most configuration defaults.

Also the logfile option was modified to always have an explicit value
and to log to stdout when an empty string is used as log file.

Previously there was special handling of the string ""stdout"" that set
the logfile to NULL, this always required some special handling.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1148.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1148.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1148.cpp
e252045454bfa90cd5c9d937e249821969c7425f,"CONFIG REWRITE: actually rewrite the config file, atomically.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1149.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1149.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1149.cpp
78f94d90eb5b750c3aa38a17ee390bfa4238e91c,CONFIG REWRITE: remove orphaned lines.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1150.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1150.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1150.cpp
c184f36d21cae47a4b9b4484b657d2e58fdc4f58,CONFIG REWRITE: support for client-output-buffer-limit.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1151.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1151.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1151.cpp
d95592b11689130382d7bf71aedf8963cc7f7431,CONFIG REWRITE: support for dir and slaveof.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1152.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1152.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1152.cpp
2bc31e55eedf24b7ecac0172c47006e79231dcde,CONFIG REWRITE: support for save and syslog-facility.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1153.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1153.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1153.cpp
7e049fafd38a602b9689f4311183c3968a3fa182,CONFIG REWRITE: Initial support code and design.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1154.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1154.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1154.cpp
5c9f6d4f55c321aa22a4a51f9046f762fbb1655d,"Cluster: link reconnection on delayed PONG reply.

When the PONG delay is half the cluster node timeout, the link gets
disconnected (and later automatically reconnected) in order to ensure
that it's not just a dead connection issue.

However this operation is only performed if the link is old enough, in
order to avoid to disconnect the same link again and again (and among
the other problems, never receive the PONG because of that).

Note: when the link is reconnected, the 'ping_sent' field is not updated
even if a new ping is sent using the new connection, so we can still
reliably detect a node ping timeout.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1155.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1155.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1155.cpp
ae71731019317e171781300f67b81e9857551dc2,Cluster: PING/PONG handling redesigned.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1156.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1156.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1156.cpp
a120560f700a1cd59bcd52568e113c03e2da31a3,"Cluster: process config from PING packets as we do for PONG.

Also clusterBroadcastPing() was renamed into clusterBroadcastPong()
that's what the function is actually doing.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1157.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1157.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1157.cpp
214adc50512b6410e2aab1c93e8401ac67afaf90,Lua updated to version 5.1.5.,[],deps/lua/src/lstrlib.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1158.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1158.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1158.cpp
214adc50512b6410e2aab1c93e8401ac67afaf90,Lua updated to version 5.1.5.,[],deps/lua/src/lvm.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1159.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1159.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1159.cpp
f8ae70cf7c514c14ca3d2b4d82d959b717d257af,"redis-cli: raise error on bad command line switch.

Previously redis-cli never tried to raise an error when an unrecognized
switch was encountered, as everything after the initial options is to be
transmitted to the server.

However this is too liberal, as there are no commands starting with ""-"".
So the new behavior is to produce an error if there is an unrecognized
switch starting with ""-"". This should not break past redis-cli usages
but should prevent broken options to be silently discarded.

As far the first token not starting with ""-"" is encountered, all the
rest is considered to be part of the command, so you cna still use
strings starting with ""-"" as values, like in:

    redis-cli --port 6380 set foo --my-value",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1160.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1160.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1160.cpp
0280c2f25250536192d5a71f49c170cd5708ab7e,redis-cli: --latency-history mode implemented.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1161.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1161.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1161.cpp
d1aee359c08b6fcac31a76a2e4a9b9bef81d2947,Cluster: CONFIG SET cluster-node-timeout.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1162.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1162.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1162.cpp
30d5d416e6022b7ffdf72926a631d216a448e579,Extended SET command implemented (issue #931).,[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1163.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1163.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1163.cpp
3816e7bda90422283884a1e738701e526ca7fdd3,Better DEBUG error message when num of arguments is wrong.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1164.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1164.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1164.cpp
32a83c8206a501f300e971f46cb6cd469731e74f,"DEBUG set-active-expire added.

We need the ability to disable the activeExpireCycle() (active
expired key collection) call for testing purposes.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1165.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1165.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1165.cpp
71f3e7431700f55b88582301d5b36b52b37a0740,"Transactions: propagate MULTI/EXEC only when needed.

MULTI/EXEC is now propagated to the AOF / Slaves only once we encounter
the first command that is not a read-only one inside the transaction.

The old behavior was to always propagate an empty MULTI/EXEC block when
the transaction was composed just of read only commands, or even
completely empty. This created two problems:

1) It's a bandwidth waste in the replication link and a space waste
   inside the AOF file.

2) We used to always increment server.dirty to force the propagation of
   the EXEC command, resulting into triggering RDB saves more often
   than needed.

Note: even read-only commands may also trigger writes that will be
propagated, when we access a key that is found expired and Redis will
synthesize a DEL operation. However there is no need for this to stay
inside the transaction itself, but only to be ordered.

So for instance something like:

    MULTI
    GET foo
    SET key zap
    EXEC

May be propagated into:

    DEL foo
    MULTI
    SET key zap
    EXEC

While the DEL is outside the transaction, the commands are delivered in
the right order and it is not possible for other commands to be inserted
between DEL and MULTI.",[],src/multi.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1166.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1166.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1166.cpp
09aa55a3343d72a35fe77279eb35c3be5bc92342,"redis-cli --stat, stolen from redis-tools.

Redis-tools is a connection of tools no longer mantained that was
intented as a way to economically make sense of Redis in the pre-vmware
sponsorship era. However there was a nice redis-stat utility, this
commit imports one of the functionalities of this tool here in redis-cli
as it seems to be pretty useful.

Usage: redis-cli --stat

The output is similar to vmstat in the format, but with Redis specific
stuff of course.

From the point of view of the monitored instance, only INFO is used in
order to grab data.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1167.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1167.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1167.cpp
8c1bc8e8659d29d98315e3d8d6cc482667afc001,"Cluster: clear the PROMOTED slave directly into clusterSetMaster().

This way we make sure every time a master is turned into a replica
the flag will be cleared.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1168.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1168.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1168.cpp
506f9a42b07649d793b9c3245da14aa0fecd2d59,"Cluster: new flag PROMOTED introduced.

A slave node set this flag for itself when, after receiving authorization
from the majority of nodes, it turns itself into a master.

At the same time now this flag is tested by nodes receiving a PING
message before reconfiguring after a failover event. This makes the
system more robust: even if currently there is no way to manually turn
a slave into a master it is possible that we'll have such a feature in
the future, or that simply because of misconfiguration a node joins the
cluster as master while others believe it's a slave. This alone is now
no longer enough to trigger reconfiguration as other nodes will check
for the PROMOTED flag.

The PROMOTED flag is cleared every time the node is turned back into a
replica of some other node.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1169.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1169.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1169.cpp
88221f88c05bd9b0ff6e7941006661e630507659,"Cluster: new command CLUSTER FLUSHSLOTS.

It's just a simpler way to CLUSTER DELSLOTS with all the slots as
arguments, in order to obtain a node without assigned slots for
reconfiguration.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1170.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1170.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1170.cpp
e28e61e839ba8cbc5db8a3661329ee5a613350b6,Cluster: when failing over claim master slots.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1171.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1171.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1171.cpp
9925c7c670067684db883876fd6cb0b3dc78ba61,"Merge pull request #1001 from djanowski/fatal-errors-rdb-load

Abort when opening the RDB file results in an error other than ENOENT.",[u'https://gitlab.kitware.com/cmake/cmake/issues/1001'],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1172.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1172.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1172.cpp
4178a80282ac917a48771da2c2d1ee65bc562161,"Abort when opening the RDB file results in an error other than ENOENT.

This fixes cases where the RDB file does exist but can't be accessed for
any reason. For instance, when the Redis process doesn't have enough
permissions on the file.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1173.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1173.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1173.cpp
91d3b487e7d27454a0562e4131f9ab79c8288074,redis-cli --bigkeys: don't crash with empty DBs.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1174.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1174.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1174.cpp
bac57ad14b6902e822c94a21857810e917bd07d3,"Cluster: more robust FAIL flag cleaup.

If we have a master in FAIL state that's reachable again, and apparently
no one is going to serve its slots, clear the FAIL flag and let the
cluster continue with its operations again.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1175.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1175.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1175.cpp
1a02b7440aa02cb24c845d8bda48b98c4a60eb4c,"Cluster: new node field fail_time.

This is the unix time at which we set the FAIL flag for the node.
It is only valid if FAIL is set.

The idea is to use it in order to make the cluster more robust, for
instance in order to revert a FAIL state if it is long-standing but
still slots are assigned to this node, that is, no one is going to fix
these slots apparently.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1176.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1176.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1176.cpp
b7d085fc0dea44bb614da7edce2370521802250d,Cluster: SLAVEOF command not allowed in cluster mode.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1177.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1177.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1177.cpp
b8a28bf4422b95d99527b6c73023621d1d350758,Cluster: actually setup replication in CLUSTER REPLICATE.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1178.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1178.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1178.cpp
0c01088b511e794218ab226541cfacdf75b4b744,Cluster: REPLICATE subcommand and stub for clusterSetMaster().,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1179.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1179.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1179.cpp
d45d184118326bb33c0768338f801f7cbab2d363,Cluster: CLUSTER FORGET implemented.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1180.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1180.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1180.cpp
d2b8281b3f2c19d6510bb066bca6d8ebd04a38dd,Cluster: added a missing return on CLUSTER SETSLOT.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1181.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1181.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1181.cpp
2dcb5ab72b01d170915a8527dc11d8d021caff39,Cluster: add comments in sub-sections of CLUSTER command.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1182.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1182.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1182.cpp
d0992d6e8b883d6f04fa4da21611180766fd8df7,Cluster: a few random fixes to the new failure detection.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1183.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1183.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1183.cpp
97ffcd351b7e43b48cce0e89ff26d5517156f9cd,"Cluster: use the failure report API to reimplement failure detection.

The new system detects a failure only when there is quorum from masters.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1184.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1184.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1184.cpp
6356cf6808be9ea88ab97be33ebf1576eeb57da6,"Set process name in ps output to make operations safer.

This commit allows Redis to set a process name that includes the binding
address and the port number in order to make operations simpler.

Redis children processes doing AOF rewrites or RDB saving change the
name into redis-aof-rewrite and redis-rdb-bgsave respectively.

This in general makes harder to kill the wrong process because of an
error and makes simpler to identify saving children.

This feature was suggested by Arnaud GRANAL in the Redis Google Group,
Arnaud also pointed me to the setproctitle.c implementation includeed in
this commit.

This feature should work on all the Linux, OSX, and all the three major
BSD systems.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1185.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1185.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1185.cpp
18f537083aaf54b35e2a5aa0a683d031ac54e253,"Cluster: no limits for the count parameter of CLUSTER GETKEYSINSLOT.

Not sure why I set a limit to 1 million keys, there is no reason for
this artificial limit, and anyway this is s a stupid limit because it is
already high enough to create latency issues. So let's the users shoot
on their feet because maybe they just actually know what they are doing.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1186.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1186.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1186.cpp
544bbe5387b9c4fd925693b947fce574bd9854a5,Cluster: validate slot number in CLUSTER COUNTKEYSINSLOT.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1187.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1187.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1187.cpp
a517c89321527d030c4cfed768444e4c49ad3cf4,Cluster: verifyClusterConfigWithData() implemented.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1188.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1188.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1188.cpp
d2154254be252e34c441f22a43c69cba01e2fcaf,"Cluster: fix case for getKeysInSlot() and countKeysInSlot().

Redis functions start in low case. A few functions about cluster were
capitalized the wrong way.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1189.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1189.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1189.cpp
c2eb4a606f5bf534de6b6f68ed4051afdd5e3aa1,Cluster: use CountKeysInSlot() when we just need the count.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1190.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1190.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1190.cpp
f4093753e495799d2473f40cee29d5e47878372a,Cluster: add cluster_size field in CLUSTER INFO output.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1191.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1191.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1191.cpp
c6da9d9fac86a239e1381e9aa90cfedd08fa5511,Call clusterUpdateState() after CLUSTER SETSLOT too.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1192.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1192.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1192.cpp
9a04e12cc08623c0fbf6c704ea3a60b3be0b96f5,Cluster: I/O errors are now logged at DEBUG level.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1193.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1193.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1193.cpp
455da35c7f34a6f1e36d862ed6466a34948f3b4f,Cluster: specific error code for cluster down condition.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1194.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1194.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1194.cpp
02796ba7a78fbc9b98926dbbdc981266780dc297,Cluster: sanity checks on the cluster bus message length.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1195.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1195.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1195.cpp
6b641f3aeb03b1608eb8b435f9e06c3f8b04773e,redis-cli: update prompt on cluster redirection.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1196.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1196.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1196.cpp
1649e509c303adc5e17ff31d61203db901488e58,Cluster: the cluster state structure is now heap allocated.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1197.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1197.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1197.cpp
1649e509c303adc5e17ff31d61203db901488e58,Cluster: the cluster state structure is now heap allocated.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1198.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1198.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1198.cpp
7404b958339ebe2101965d8c890b38dcc0e4abfd,Avoid compiler warning by casting to match printf() specifier.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1199.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1199.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1199.cpp
dc24a6b132f268c83e42683340223ce6e970f340,Return a specific NOAUTH error if authentication is required.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1200.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1200.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1200.cpp
3af478e9ef7657297241b5203a1ecc318e223a14,PSYNC: debugging printf() calls are now logs at DEBUG level.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1201.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1201.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1201.cpp
0ed6daa48bf221de231b6ed953c0f230a3bfacb8,"PSYNC: don't use the client buffer to send +CONTINUE and +FULLRESYNC.

When we are preparing an handshake with the slave we can't touch the
connection buffer as it'll be used to accumulate differences between
the sent RDB file and what arrives next from clients.

So in short we can't use addReply() family functions.

However we just use write(2) because we know that the socket buffer is
empty, since a prerequisite for SYNC to work is that the static buffer
and the output list are empty, and in general it is not expected that a
client SYNCs after doing some heavy I/O with the master.

However a short write connection is explicitly handled to avoid
fragility (we simply close the connection and the slave will retry).",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1202.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1202.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1202.cpp
d2a0348a490ab2f3edc07f9ba4098f6e06bfefd1,SYNC not allowed with pending data on the static output buffer.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1203.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1203.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1203.cpp
078882025ea50e0ed888713fba8ce28299de626a,"PSYNC: work in progress, preview #2, rebased to unstable.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1204.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1204.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1204.cpp
078882025ea50e0ed888713fba8ce28299de626a,"PSYNC: work in progress, preview #2, rebased to unstable.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1205.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1205.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1205.cpp
e34a35a51194650ce7ef7df1047012c7eaad2957,"Use the new unified protocol to send SELECT to slaves.

SELECT was still transmitted to slaves using the inline protocol, that
is conceived mostly for humans to type into telnet sessions, and is
notably not understood by redis-cli --slave.

Now the new protocol is used instead.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1206.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1206.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1206.cpp
e34a35a51194650ce7ef7df1047012c7eaad2957,"Use the new unified protocol to send SELECT to slaves.

SELECT was still transmitted to slaves using the inline protocol, that
is conceived mostly for humans to type into telnet sessions, and is
notably not understood by redis-cli --slave.

Now the new protocol is used instead.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1207.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1207.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1207.cpp
76a5b21c3a319ae1ba4ef8f4f12207a813e43b51,"Tcp keep-alive: send three probes before detectin an error.

Otherwise we end with less reliable connections because it's too easy
that a single packet gets lost.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1208.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1208.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1208.cpp
ee21c18e5d2e897204a92eb75469307a9ca8ba1e,Add SO_KEEPALIVE support to anet.c.,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1209.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1209.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1209.cpp
b70b459b0eeea3158984ad89345a461cfe9f2818,TCP_NODELAY after SYNC: changes to the implementation.,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1210.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1210.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1210.cpp
c85647f35428770518ccf7f95ae5913f20fe1898,"Turn off TCP_NODELAY on the slave socket after SYNC.

Further details from @antirez:

It was reported by @StopForumSpam on Twitter that the Redis replication
link was strangely using multiple TCP packets for multiple commands.
This wastes a lot of bandwidth and is due to the TCP_NODELAY option we
enable on the socket after accepting a new connection.

However the master -> slave channel is a one-way channel since Redis
replication is asynchronous, so there is no point in trying to reduce
the latency, we should aim to reduce the bandwidth. For this reason this
commit introduces the ability to disable the nagle algorithm on the
socket after a successful SYNC.

This feature is off by default because the delay can be up to 40
milliseconds with normally configured Linux kernels.",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1211.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1211.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1211.cpp
ad297a1a6782905394cb56b00ed6dbd08707fb04,Z*STORE event fixed: generate del only if resulting sorted set is empty.,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1212.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1212.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1212.cpp
e41d1d77e3f731cfe9133a94ea441de7ebc9f105,Generate del events when S*STORE commands delete the destination key.,[],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1213.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1213.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1213.cpp
4dfb5752e0714228ff6fb0a2728ee03638ac232f,Send 'expired' events when a key expires by lookup.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1214.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1214.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1214.cpp
562b2bd6a7d6e8ee893d68059360b593ed43352f,Keyspace notifications: fixed a leak and a bug introduced in the latest commit.,[],src/notify.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1215.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1215.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1215.cpp
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,"Keyspace events: it is now possible to select subclasses of events.

When keyspace events are enabled, the overhead is not sever but
noticeable, so this commit introduces the ability to select subclasses
of events in order to avoid to generate events the user is not
interested in.

The events can be selected using redis.conf or CONFIG SET / GET.",[],src/bitops.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1216.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1216.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1216.cpp
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,"Keyspace events: it is now possible to select subclasses of events.

When keyspace events are enabled, the overhead is not sever but
noticeable, so this commit introduces the ability to select subclasses
of events in order to avoid to generate events the user is not
interested in.

The events can be selected using redis.conf or CONFIG SET / GET.",[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1217.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1217.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1217.cpp
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,"Keyspace events: it is now possible to select subclasses of events.

When keyspace events are enabled, the overhead is not sever but
noticeable, so this commit introduces the ability to select subclasses
of events in order to avoid to generate events the user is not
interested in.

The events can be selected using redis.conf or CONFIG SET / GET.",[],src/notify.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1218.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1218.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1218.cpp
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,"Keyspace events: it is now possible to select subclasses of events.

When keyspace events are enabled, the overhead is not sever but
noticeable, so this commit introduces the ability to select subclasses
of events in order to avoid to generate events the user is not
interested in.

The events can be selected using redis.conf or CONFIG SET / GET.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1219.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1219.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1219.cpp
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,"Keyspace events: it is now possible to select subclasses of events.

When keyspace events are enabled, the overhead is not sever but
noticeable, so this commit introduces the ability to select subclasses
of events in order to avoid to generate events the user is not
interested in.

The events can be selected using redis.conf or CONFIG SET / GET.",[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1220.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1220.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1220.cpp
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,"Keyspace events: it is now possible to select subclasses of events.

When keyspace events are enabled, the overhead is not sever but
noticeable, so this commit introduces the ability to select subclasses
of events in order to avoid to generate events the user is not
interested in.

The events can be selected using redis.conf or CONFIG SET / GET.",[],src/sort.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1221.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1221.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1221.cpp
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,"Keyspace events: it is now possible to select subclasses of events.

When keyspace events are enabled, the overhead is not sever but
noticeable, so this commit introduces the ability to select subclasses
of events in order to avoid to generate events the user is not
interested in.

The events can be selected using redis.conf or CONFIG SET / GET.",[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1222.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1222.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1222.cpp
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,"Keyspace events: it is now possible to select subclasses of events.

When keyspace events are enabled, the overhead is not sever but
noticeable, so this commit introduces the ability to select subclasses
of events in order to avoid to generate events the user is not
interested in.

The events can be selected using redis.conf or CONFIG SET / GET.",[],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1223.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1223.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1223.cpp
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,"Keyspace events: it is now possible to select subclasses of events.

When keyspace events are enabled, the overhead is not sever but
noticeable, so this commit introduces the ability to select subclasses
of events in order to avoid to generate events the user is not
interested in.

The events can be selected using redis.conf or CONFIG SET / GET.",[],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1224.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1224.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1224.cpp
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,"Keyspace events: it is now possible to select subclasses of events.

When keyspace events are enabled, the overhead is not sever but
noticeable, so this commit introduces the ability to select subclasses
of events in order to avoid to generate events the user is not
interested in.

The events can be selected using redis.conf or CONFIG SET / GET.",[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1225.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1225.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1225.cpp
fce016d31bc11ff19de1f1ff216e4a0588fea3ac,"Keyspace events: it is now possible to select subclasses of events.

When keyspace events are enabled, the overhead is not sever but
noticeable, so this commit introduces the ability to select subclasses
of events in order to avoid to generate events the user is not
interested in.

The events can be selected using redis.conf or CONFIG SET / GET.",[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1226.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1226.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1226.cpp
da04e6ed44bf80c5e2fe282522f924e8f55921cb,Keyspace events added for more commands.,[],src/bitops.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1227.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1227.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1227.cpp
da04e6ed44bf80c5e2fe282522f924e8f55921cb,Keyspace events added for more commands.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1228.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1228.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1228.cpp
da04e6ed44bf80c5e2fe282522f924e8f55921cb,Keyspace events added for more commands.,[],src/sort.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1229.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1229.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1229.cpp
da04e6ed44bf80c5e2fe282522f924e8f55921cb,Keyspace events added for more commands.,[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1230.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1230.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1230.cpp
da04e6ed44bf80c5e2fe282522f924e8f55921cb,Keyspace events added for more commands.,[],src/t_list.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1231.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1231.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1231.cpp
da04e6ed44bf80c5e2fe282522f924e8f55921cb,Keyspace events added for more commands.,[],src/t_set.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1232.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1232.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1232.cpp
da04e6ed44bf80c5e2fe282522f924e8f55921cb,Keyspace events added for more commands.,[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1233.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1233.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1233.cpp
da04e6ed44bf80c5e2fe282522f924e8f55921cb,Keyspace events added for more commands.,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1234.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1234.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1234.cpp
5b9357a6b3b22bad794931bb71f56c612d6e7aac,Initial test events for the new keyspace notification API.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1235.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1235.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1235.cpp
5b9357a6b3b22bad794931bb71f56c612d6e7aac,Initial test events for the new keyspace notification API.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1236.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1236.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1236.cpp
5b9357a6b3b22bad794931bb71f56c612d6e7aac,Initial test events for the new keyspace notification API.,[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1237.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1237.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1237.cpp
4cdbce341ebff64d392a42011f4a9258f8aa834f,Keyspace events notification API.,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1238.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1238.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1238.cpp
61853a9c758bc9d368d4610c0f89387c95b9301d,"Lua struct library updated to version 0.2.

There was a bug in the previous version of this library that caused a
crash under the circumstances described in issue #901.

The newer version of the library appears to be fixed (I tested it
manually with valgrind and everything seems fine now).

For more information about this library please visit this web site:

    http://www.inf.puc-rio.br/~roberto/struct/",[],deps/lua/src/lua_struct.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1239.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1239.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1239.cpp
88015b89a0578a1d96fbd8890505c7f4469374fe,redis-cli --bigkeys output is now simpler to understand.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1240.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1240.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1240.cpp
93f61bb2a492cf008e353db951275ba0b12490dc,"Fixed a bug in memtest progress bar, that had no actual effects.

This closes issue #859, thanks to @erbenmo.",[],src/memtest.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1241.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1241.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1241.cpp
9d09ce3981deb58282ae47c87e1080936f04991f,Fixed many typos.,[],src/ae_evport.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1242.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1242.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1242.cpp
9d09ce3981deb58282ae47c87e1080936f04991f,Fixed many typos.,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1243.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1243.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1243.cpp
9d09ce3981deb58282ae47c87e1080936f04991f,Fixed many typos.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1244.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1244.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1244.cpp
947f1689d3071ff9e7a91f50347ec226fd20366e,"Merge pull request #896 from bitterb/fix-client-command-error-message

Fix an error reply for CLIENT command",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1245.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1245.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1245.cpp
c2dc172a9d9f76cacdad0a62f889a9bbd885ad58,Fix an error reply for CLIENT command,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1246.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1246.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1246.cpp
21b3ff9ba0f182f1f25e419b5c84f0833d746255,"Merge pull request #893 from nparry/fix-redis-cli-rdb

redis-cli --rdb fails if server sends a ping",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1247.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1247.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1247.cpp
1920cab3bc6b003367634d5583cd2e389d52fe4a,"redis-cli --rdb fails if server sends a ping

Redis pings slaves in ""pre-synchronization stage"" with newlines. (See
https://github.com/antirez/redis/blob/2.6.9/src/replication.c#L814)
However, redis-cli does not expect this - it sees the newline as the end
of the bulk length line, and ends up returning 0 as bulk the length.
This manifests as the following when running redis-cli:

    $ ./src/redis-cli --rdb some_file
    SYNC sent to master, writing 0 bytes to 'some_file'
    Transfer finished with success.

With this commit, we just ignore leading newlines while reading the bulk
length line.

To reproduce the problem, load enough data into Redis so that the
preparation of the RDB snapshot takes long enough for a ping to occur
while redis-cli is waiting for the data.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1248.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1248.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1248.cpp
a0c24821e2e18fdc9bf1410018cc2da00e16c255,redis-cli: save an RDB dump from remote server to local file.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1249.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1249.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1249.cpp
9b89ab06c46cbf72df3c0ac89118523faefe0c77,"Typo fixed, ASCI -> ASCII.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1250.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1250.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1250.cpp
1971740f0c8c4bf9a484188f5966e8c2a9369490,"CLIENT GETNAME and CLIENT SETNAME introduced.

Sometimes it is much simpler to debug complex Redis installations if it
is possible to assign clients a name that is displayed in the CLIENT
LIST output.

This is the case, for example, for ""leaked"" connections. The ability to
provide a name to the client makes it quite trivial to understand what
is the part of the code implementing the client not releasing the
resources appropriately.

Behavior:

    CLIENT SETNAME: set a name for the client, or remove the current
                    name if an empty name is set.
    CLIENT GETNAME: get the current name, or a nil.
    CLIENT LIST: now displays the client name if any.

Thanks to Mark Gravell for pushing this idea forward.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1251.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1251.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1251.cpp
baee5650295e72fbcfe1f69ca7fa60f64cb5f740,"Multiple fixes for EVAL (issue #872).

1) The event handler was no restored after a timeout condition if the
   command was eventually executed with success.
2) The command was not converted to EVAL in case of errors in the middle
   of the execution.
3) Terrible duplication of code without any apparent reason.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1252.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1252.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1252.cpp
d7740fc8f350f6332fee27299c1152ba6c5dc9d0,Better error reporting when fd event creation fails.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1253.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1253.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1253.cpp
d7740fc8f350f6332fee27299c1152ba6c5dc9d0,Better error reporting when fd event creation fails.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1254.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1254.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1254.cpp
2f62c9663ca48b647d71f21d0cdf499346457f0f,"Introduced the Build ID in INFO and --version output.

The idea is to be able to identify a build in a unique way, so for
instance after a bug report we can recognize that the build is the one
of a popular Linux distribution and perform the debugging in the same
environment.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1255.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1255.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1255.cpp
b1b602a92887f271db3101d67e0319ce31fa68b3,"On crash memory test rewrote so that it actaully works.

1) We no longer test location by location, otherwise the CPU write cache
completely makes our business useless.
2) We still need a memory test that operates in steps from the first to
the last location in order to never hit the cache, but that is still
able to retain the memory content.

This was tested using a Linux box containing a bad memory module with a
zingle bit error (always zero).

So the final solution does has an error propagation step that is:

1) Invert bits at every location.
2) Swap adiacent locations.
3) Swap adiacent locations again.
4) Invert bits at every location.
5) Swap adiacent locations.
6) Swap adiacent locations again.

Before and after these steps, and after step 4, a CRC64 checksum is computed.
If the three CRC64 checksums don't match, a memory error was detected.",[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1256.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1256.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1256.cpp
7383c3b12920c6ae20f7c64c5db92f59e2b02aa5,Jemalloc updated to version 3.2.0.,[],deps/jemalloc/src/jemalloc.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1257.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1257.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1257.cpp
7383c3b12920c6ae20f7c64c5db92f59e2b02aa5,Jemalloc updated to version 3.2.0.,[],deps/jemalloc/src/stats.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1258.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1258.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1258.cpp
3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9,"Safer handling of MULTI/EXEC on errors.

After the transcation starts with a MULIT, the previous behavior was to
return an error on problems such as maxmemory limit reached. But still
to execute the transaction with the subset of queued commands on EXEC.

While it is true that the client was able to check for errors
distinguish QUEUED by an error reply, MULTI/EXEC in most client
implementations uses pipelining for speed, so all the commands and EXEC
are sent without caring about replies.

With this change:

1) EXEC fails if at least one command was not queued because of an
error. The EXECABORT error is used.
2) A generic error is always reported on EXEC.
3) The client DISCARDs the MULTI state after a failed EXEC, otherwise
pipelining multiple transactions would be basically impossible:
After a failed EXEC the next transaction would be simply queued as
the tail of the previous transaction.",[],src/multi.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1259.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1259.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1259.cpp
3d1391272aa46aa3a52a700f6b1ef0a47d4dcda9,"Safer handling of MULTI/EXEC on errors.

After the transcation starts with a MULIT, the previous behavior was to
return an error on problems such as maxmemory limit reached. But still
to execute the transaction with the subset of queued commands on EXEC.

While it is true that the client was able to check for errors
distinguish QUEUED by an error reply, MULTI/EXEC in most client
implementations uses pipelining for speed, so all the commands and EXEC
are sent without caring about replies.

With this change:

1) EXEC fails if at least one command was not queued because of an
error. The EXECABORT error is used.
2) A generic error is always reported on EXEC.
3) The client DISCARDs the MULTI state after a failed EXEC, otherwise
pipelining multiple transactions would be basically impossible:
After a failed EXEC the next transaction would be simply queued as
the tail of the previous transaction.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1260.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1260.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1260.cpp
753699172620ef6c36969385c9bd697c6fc2db98,"Make bio.c threads killable ASAP if needed.

We use this new bio.c feature in order to stop our I/O threads if there
is a memory test to do on crash. In this case we don't want anything
else than the main thread to run, otherwise the other threads may mess
with the heap and the memory test will report a false positive.",[],src/bio.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1261.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1261.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1261.cpp
49b645235100fc214468b608c1ba6cdbc320fa88,"Children creating AOF or RDB files now report memory used by COW.

Finally Redis is able to report the amount of memory used by
copy-on-write while saving an RDB or writing an AOF file in background.

Note that this information is currently only logged (at NOTICE level)
and not shown in INFO because this is less trivial (but surely doable
with some minor form of interprocess communication).

The reason we can't capture this information on the parent before we
call wait3() is that the Linux kernel will release the child memory
ASAP, and only retain the minimal state for the process that is useful
to report the child termination to the parent.

The COW size is obtained by summing all the Private_Dirty fields found
in the ""smap"" file inside the proc filesystem for the process.

All this is Linux specific and is not available on other systems.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1262.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1262.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1262.cpp
a779b7e901e9f863dc195d3590b554a917a0b3e2,Merge branch 'migrate-cache' into unstable,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1263.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1263.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1263.cpp
e23d281e489c3cda134803b2e6302d1fc27e5948,"MIGRATE TCP connections caching.

By caching TCP connections used by MIGRATE to chat with other Redis
instances a 5x performance improvement was measured with
redis-benchmark against small keys.

This can dramatically speedup cluster resharding and other processes
where an high load of MIGRATE commands are used.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1264.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1264.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1264.cpp
e5b5763f56d1379069c94ce7196c1a412bb44fba,"REPLACE option for RESTORE.

The REPLACE option deletes an existing key with the same name (if any)
and materializes the new one. The default behavior without RESTORE is to
return an error if a key already exists.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1265.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1265.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1265.cpp
2ea41242f669c1afe03af7c8befb140a7a80fc4e,"Unix socket clients properly displayed in MONITOR and CLIENT LIST.

This also fixes issue #745.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1266.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1266.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1266.cpp
2ea41242f669c1afe03af7c8befb140a7a80fc4e,"Unix socket clients properly displayed in MONITOR and CLIENT LIST.

This also fixes issue #745.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1267.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1267.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1267.cpp
89e74abfb6475bace3db518724ecee1fcae9c79e,"A filed called slave_read_only added in INFO output.

This was an important information missing from the INFO output in the
replication section.

It obviously reflects if the slave is read only or not.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1268.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1268.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1268.cpp
e5f794ff3abd844a08c0b01faa15550fd7014d7c,"redis-check-dump now understands dumps produced by Redis 2.6

(Commit message from @antirez as it was missign in the original commits,
also the patch was modified a bit to still work with 2.4 dumps and to
avoid if expressions that are always true due to checked types range)

This commit changes redis-check-dump to account for new encodings and
for the new MSTIME expire format. It also refactors the test for valid
type into a function.

The code is still compatible with Redis 2.4 generated dumps.

This fixes issue #709.",[],src/redis-check-dump.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1269.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1269.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1269.cpp
acfe3675e3c5ab8ee2ca07642334d9468cfc4d39,"Differentiate SCRIPT KILL error replies.

When calling SCRIPT KILL currently you can get two errors:

* No script in timeout (busy) state.
* The script already performed a write.

It is useful to be able to distinguish the two errors, but right now both
start with ""ERR"" prefix, so string matching (that is fragile) must be used.

This commit introduces two different prefixes.

-NOTBUSY and -UNKILLABLE respectively to reply with an error when no
script is busy at the moment, and when the script already executed a
write operation and can not be killed.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1270.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1270.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1270.cpp
9c21b72bb9b7844b22b60f63af37aa30dd78f898,"Scripting: add helper functions redis.error_reply() and redis.status_reply().

A previous commit introduced Redis.NIL. This commit adds similar helper
functions to return tables with a single field set to the specified
string so that instead of using 'return {err=""My Error""}' it is possible
to use a more idiomatic form:

    return redis.error_reply(""My Error"")
    return redis.status_reply(""OK"")",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1271.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1271.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1271.cpp
bfc197c3b604baf0dba739ea174d5054284133f0,"Make sure that SELECT argument is an integer or return an error.

Unfortunately we had still the lame atoi() without any error checking in
place, so ""SELECT foo"" would work as ""SELECT 0"". This was not an huge
problem per se but some people expected that DB can be strings and not
just numbers, and without errors you get the feeling that they can be
numbers, but not the behavior.

Now getLongFromObjectOrReply() is used as almost everybody else across
the code, generating an error if the number is not an integer or
overflows the long type.

Thanks to @mipearson for reporting that on Twitter.",[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1272.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1272.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1272.cpp
bb66fc312036e444a950df27dd7cb2e3db6b4b05,"Send an async PING before starting replication with master.

During the first synchronization step of the replication process, a Redis
slave connects with the master in a non blocking way. However once the
connection is established the replication continues sending the REPLCONF
command, and sometimes the AUTH command if needed. Those commands are
send in a partially blocking way (blocking with timeout in the order of
seconds).

Because it is common for a blocked master to accept connections even if
it is actually not able to reply to the slave requests, it was easy for
a slave to block if the master had serious issues, but was still able to
accept connections in the listening socket.

For this reason we now send an asynchronous PING request just after the
non blocking connection ended in a successful way, and wait for the
reply before to continue with the replication process. It is very
unlikely that a master replying to PING can't reply to the other
commands.

This solution was proposed by Didier Spezia (Thanks!) so that we don't
need to turn all the replication process into a non blocking affair, but
still the probability of a slave blocked is minimal even in the event of
a failing master.

Also we now use getsockopt(SO_ERROR) in order to check errors ASAP
in the event handler, instead of waiting for actual I/O to return an
error.

This commit fixes issue #632.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1273.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1273.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1273.cpp
46c31a150a0e6a67eaaf4b1e1146ec815cc1355e,"Scripting: require at least one argument for redis.call().

Redis used to crash with a call like the following:

    EVAL ""redis.call()"" 0

Now the explicit check for at least one argument prevents the problem.

This commit fixes issue #655.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1274.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1274.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1274.cpp
58186b9dcf88cd2132ac0ff4bd3a12304819cc4e,Sentinel: INFO command implementation.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1275.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1275.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1275.cpp
8246e58abebb7b4421a78d68e81bc8cd1ca536ac,"Sentinel: add Redis execution mode to INFO output.

The new ""redis_mode"" field in the INFO output will show if Redis is
running in standalone mode, cluster, or sentinel mode.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1276.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1276.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1276.cpp
169a44cbd6b6a143b282206d754b71cd3af0c963,"Sentinel: Redis-side support for slave priority.

A Redis slave can now be configured with a priority, that is an integer
number that is shown in INFO output and can be get and set using the
redis.conf file or the CONFIG GET/SET command.

This field is used by Sentinel during slave election. A slave with lower
priority is preferred. A slave with priority zero is never elected (and
is considered to be impossible to elect even if it is the only slave
available).

A next commit will add support in the Sentinel side as well.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1277.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1277.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1277.cpp
169a44cbd6b6a143b282206d754b71cd3af0c963,"Sentinel: Redis-side support for slave priority.

A Redis slave can now be configured with a priority, that is an integer
number that is shown in INFO output and can be get and set using the
redis.conf file or the CONFIG GET/SET command.

This field is used by Sentinel during slave election. A slave with lower
priority is preferred. A slave with priority zero is never elected (and
is considered to be impossible to elect even if it is the only slave
available).

A next commit will add support in the Sentinel side as well.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1278.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1278.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1278.cpp
784b93087c622999e225735c0c76d50241941022,"Incrementally flush RDB on disk while loading it from a master.

This fixes issue #539.

Basically if there is enough free memory the OS may buffer the RDB file
that the slave transfers on disk from the master. The file may
actually be flused on disk at once by the operating system when it gets
closed by Redis, causing the close system call to block for a long time.

This patch is a modified version of one provided by yoav-steinberg of
@garantiadata (the original version was posted in the issue #539
comments), and tries to flush the OS buffers incrementally (every 8 MB
of loaded data).",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1279.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1279.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1279.cpp
784b93087c622999e225735c0c76d50241941022,"Incrementally flush RDB on disk while loading it from a master.

This fixes issue #539.

Basically if there is enough free memory the OS may buffer the RDB file
that the slave transfers on disk from the master. The file may
actually be flused on disk at once by the operating system when it gets
closed by Redis, causing the close system call to block for a long time.

This patch is a modified version of one provided by yoav-steinberg of
@garantiadata (the original version was posted in the issue #539
comments), and tries to flush the OS buffers incrementally (every 8 MB
of loaded data).",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1280.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1280.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1280.cpp
6fdc635447b1a5dd0a4f7b13c15fdd6c108dabee,"Better Out of Memory handling.

The previous implementation of zmalloc.c was not able to handle out of
memory in an application-specific way. It just logged an error on
standard error, and aborted.

The result was that in the case of an actual out of memory in Redis
where malloc returned NULL (In Linux this actually happens under
specific overcommit policy settings and/or with no or little swap
configured) the error was not properly logged in the Redis log.

This commit fixes this problem, fixing issue #509.
Now the out of memory is properly reported in the Redis log and a stack
trace is generated.

The approach used is to provide a configurable out of memory handler
to zmalloc (otherwise the default one logging the event on the
standard output is used).",[],src/zmalloc.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1281.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1281.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1281.cpp
724371d748b86da4459e42c8d855d07aef20bdb3,"Merge pull request #628 from pietern/unstable-zip

Fix ziplist edge case",[],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1282.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1282.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1282.cpp
227b4293647d51244771d16f0ad14bc94a2b3ad9,"redis-benchmark: disable big buffer cleanup in hiredis context.

This new hiredis features allows us to reuse a previous context reader
buffer even if already very big in order to maximize performances with
big payloads (Usually hiredis re-creates buffers when they are too big
and unused in order to save memory).",[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1283.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1283.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1283.cpp
d6704c9bd0f03f277ee23a4e3e1fc86a74e130b3,"hiredis library updated.

This version of hiredis merges modifications of the Redis fork with
latest changes in the hiredis repository.

The same version was pushed on the hiredis repository and will probably
merged into the master branch in short time.",[],deps/hiredis/async.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1284.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1284.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1284.cpp
d6704c9bd0f03f277ee23a4e3e1fc86a74e130b3,"hiredis library updated.

This version of hiredis merges modifications of the Redis fork with
latest changes in the hiredis repository.

The same version was pushed on the hiredis repository and will probably
merged into the master branch in short time.",[],deps/hiredis/hiredis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1285.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1285.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1285.cpp
d6704c9bd0f03f277ee23a4e3e1fc86a74e130b3,"hiredis library updated.

This version of hiredis merges modifications of the Redis fork with
latest changes in the hiredis repository.

The same version was pushed on the hiredis repository and will probably
merged into the master branch in short time.",[],deps/hiredis/net.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1286.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1286.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1286.cpp
5117c20ab5558e5d68b1a3c7751610cd6c4279db,Add ziplist test for deleting next to last entries,[],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1287.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1287.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1287.cpp
cada7f9671da8af04400853bed3f3bc1790a522a,"Sentinel: SENTINEL FAILOVER command implemented.

This command can be used in order to force a Sentinel instance to start
a failover for the specified master, as leader, forcing the failover
even if the master is up.

The commit also adds some minor refactoring and other improvements to
functions already implemented that make them able to work when the
master is not in SDOWN condition. For instance slave selection
assumed that we ask INFO every second to every slave, this is true
only when the master is in SDOWN condition, so slave selection did not
worked when the master was not in SDOWN condition.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1288.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1288.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1288.cpp
7f5bdba4343cf32c8ae7d38a3f6d0d163677c14c,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1289.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1289.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1289.cpp
7f5bdba4343cf32c8ae7d38a3f6d0d163677c14c,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1290.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1290.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1290.cpp
3f194a9d2571df21717b635f037040407a51d50d,"Sentinel: scripts execution engine improved.

We no longer use a vanilla fork+execve but take a queue of jobs of
scripts to execute, with retry on error, timeouts, and so forth.

Currently this is used only for notifications but soon the ability to
also call clients reconfiguration scripts will be added.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1291.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1291.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1291.cpp
ed7b308c1c369d7a004b6f7a72e01ad1eddb5ac3,"Merge pull request #587 from saj/truncate-short-write-from-aof

Truncate short write from the AOF",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1292.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1292.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1292.cpp
04950a9e4dfb74a132e523ccbb7932a2394b832a,"Merge pull request #586 from saj/aof_last_bgrewrite_status

New in INFO: aof_last_bgrewrite_status",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1293.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1293.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1293.cpp
baace5fc42dbe527a452d8864f37716d644f444a,Sentinel: ability to execute notification scripts.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1294.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1294.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1294.cpp
d918e6f127f60efd7b9fd23ba3413eb441240e0f,Sentinel: debugging message removed.,[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1295.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1295.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1295.cpp
75fb6e5b8a56cdbc43a6e207db306089fc55aba2,"Sentinel: changes to connection handling and redirection.

We disconnect the Redis instances hiredis link in a more robust way now.
Also we change the way we perform the redirection for the +switch-master
event, that is not just an instance reset with an address change.

Using the same system we now implement the +redirect-to-master event
that is triggered by an instance that is configured to be master but
found to be a slave at the first INFO reply. In that case we monitor the
master instead, logging the incident as an event.",[],src/sentinel.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1296.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1296.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1296.cpp
6b5daa2df2a0711a25746cb025927dc3deb7717e,"First implementation of Redis Sentinel.

This commit implements the first, beta quality implementation of Redis
Sentinel, a distributed monitoring system for Redis with notification
and automatic failover capabilities.

More info at http://redis.io/topics/sentinel",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1297.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1297.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1297.cpp
6b5daa2df2a0711a25746cb025927dc3deb7717e,"First implementation of Redis Sentinel.

This commit implements the first, beta quality implementation of Redis
Sentinel, a distributed monitoring system for Redis with notification
and automatic failover capabilities.

More info at http://redis.io/topics/sentinel",[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1298.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1298.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1298.cpp
55302e9e285d13ae5eda021420d1a3ea6ca21afc,"Truncate short write from the AOF

If Redis only manages to write out a partial buffer, the AOF file won't
load back into Redis the next time it starts up.  It is better to
discard the short write than waste time running redis-check-aof.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1299.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1299.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1299.cpp
48553a29e8c56fcc21f77b284a4d3a3448a75e1e,"New in INFO: aof_last_bgrewrite_status

Behaves like rdb_last_bgsave_status -- even down to reporting 'ok' when
no rewrite has been done yet.  (You might want to check that
aof_last_rewrite_time_sec is not -1.)",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1300.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1300.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1300.cpp
3a32897856ec77c77be5dd8e69623dd3624035fc,"REPLCONF internal command introduced.

The REPLCONF command is an internal command (not designed to be directly
used by normal clients) that allows a slave to set some replication
related state in the master before issuing SYNC to start the
replication.

The initial motivation for this command, and the only reason currently
it is used by the implementation, is to let the slave instance
communicate its listening port to the slave, so that the master can
show all the slaves with their listening ports in the ""replication""
section of the INFO output.

This allows clients to auto discover and query all the slaves attached
into a master.

Currently only a single option of the REPLCONF command is supported, and
it is called ""listening-port"", so the slave now starts the replication
process with something like the following chat:

    REPLCONF listening-prot 6380
    SYNC

Note that this works even if the master is an older version of Redis and
does not understand REPLCONF, because the slave ignores the REPLCONF
error.

In the future REPLCONF can be used for partial replication and other
replication related features where there is the need to exchange
information between master and slave.

NOTE: This commit also fixes a bug: the INFO outout already carried
information about slaves, but the port was broken, and was obtained
with getpeername(2), so it was actually just the ephemeral port used
by the slave to connect to the master as a client.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1301.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1301.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1301.cpp
3a32897856ec77c77be5dd8e69623dd3624035fc,"REPLCONF internal command introduced.

The REPLCONF command is an internal command (not designed to be directly
used by normal clients) that allows a slave to set some replication
related state in the master before issuing SYNC to start the
replication.

The initial motivation for this command, and the only reason currently
it is used by the implementation, is to let the slave instance
communicate its listening port to the slave, so that the master can
show all the slaves with their listening ports in the ""replication""
section of the INFO output.

This allows clients to auto discover and query all the slaves attached
into a master.

Currently only a single option of the REPLCONF command is supported, and
it is called ""listening-port"", so the slave now starts the replication
process with something like the following chat:

    REPLCONF listening-prot 6380
    SYNC

Note that this works even if the master is an older version of Redis and
does not understand REPLCONF, because the slave ignores the REPLCONF
error.

In the future REPLCONF can be used for partial replication and other
replication related features where there is the need to exchange
information between master and slave.

NOTE: This commit also fixes a bug: the INFO outout already carried
information about slaves, but the port was broken, and was obtained
with getpeername(2), so it was actually just the ephemeral port used
by the slave to connect to the master as a client.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1302.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1302.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1302.cpp
31a1439bfd6e24647f023281da65473047b69dfb,"Fixed a timing attack on AUTH (Issue #560).

The way we compared the authentication password using strcmp() allowed
an attacker to gain information about the password using a well known
class of attacks called ""timing attacks"".

The bug appears to be practically not exploitable in most modern systems
running Redis since even using multiple bytes of differences in the
input at a time instead of one the difference in running time in in the
order of 10 nanoseconds, making it hard to exploit even on LAN. However
attacks always get better so we are providing a fix ASAP.

The new implementation uses two fixed length buffers and a constant time
comparison function, with the goal of:

1) Completely avoid leaking information about the content of the
password, since the comparison is always performed between 512
characters and without conditionals.
2) Partially avoid leaking information about the length of the
password.

About ""2"" we still have a stage in the code where the real password and
the user provided password are copied in the static buffers, we also run
two strlen() operations against the two inputs, so the running time
of the comparison is a fixed amount plus a time proportional to
LENGTH(A)+LENGTH(B). This means that the absolute time of the operation
performed is still related to the length of the password in some way,
but there is no way to change the input in order to get a difference in
the execution time in the comparison that is not just proportional to
the string provided by the user (because the password length is fixed).

Thus in practical terms the user should try to discover LENGTH(PASSWORD)
looking at the whole execution time of the AUTH command and trying to
guess a proportionality between the whole execution time and the
password length: this appears to be mostly unfeasible in the real world.

Also protecting from this attack is not very useful in the case of Redis
as a brute force attack is anyway feasible if the password is too short,
while with a long password makes it not an issue that the attacker knows
the length.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1303.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1303.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1303.cpp
33e1db36fa3948c8b9baa3991fd40e7f6b31fb9e,"Four new persistence fields in INFO. A few renamed.

The 'persistence' section of INFO output now contains additional four
fields related to RDB and AOF persistence:

 rdb_last_bgsave_time_sec       Duration of latest BGSAVE in sec.
 rdb_current_bgsave_time_sec    Duration of current BGSAVE in sec.
 aof_last_rewrite_time_sec      Duration of latest AOF rewrite in sec.
 aof_current_rewrite_time_sec   Duration of current AOF rewrite in sec.

The 'current' fields are set to -1 if a BGSAVE / AOF rewrite is not in
progress. The 'last' fileds are set to -1 if no previous BGSAVE / AOF
rewrites were performed.

Additionally a few fields in the persistence section were renamed for
consistency:

 changes_since_last_save -> rdb_changes_since_last_save
 bgsave_in_progress -> rdb_bgsave_in_progress
 last_save_time -> rdb_last_save_time
 last_bgsave_status -> rdb_last_bgsave_status
 bgrewriteaof_in_progress -> aof_rewrite_in_progress
 bgrewriteaof_scheduled -> aof_rewrite_scheduled

After the renaming, fields in the persistence section start with rdb_ or
aof_ prefix depending on the persistence method they describe.
The field 'loading' and related fields are not prefixed because they are
unique for both the persistence methods.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1304.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1304.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1304.cpp
760e7765263ff4b6d5176830c9e8e8d733744996,"Bit-related string operations moved to bitop.c

All the general string operations are implemented in t_string.c, however
the bit operations, while targeting the string type, are better served
in a specific file where we have the implementations of the following
four commands and helper functions:

    GETBIT
    SETBIT
    BITOP
    BITCOUNT

In the future this file will probably contain more code related to
making the BITOP and BITCOUNT operations faster.",[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1305.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1305.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1305.cpp
0bd6d68e34bc41cd80cd7fc44aab9cf3884de8dc,"New commands: BITOP and BITCOUNT.

The motivation for this new commands is to be search in the usage of
Redis for real time statistics. See the article ""Fast real time metrics
using Redis"".

http://blog.getspool.com/2011/11/29/fast-easy-realtime-metrics-using-redis-bitmaps/

In general Redis strings when used as bitmaps using the SETBIT/GETBIT
command provide a very space-efficient and fast way to store statistics.
For instance in a web application with users, every user can be
associated with a key that shows every day in which the user visited the
web service. This information can be really valuable to extract user
behaviour information.

With Redis bitmaps doing this is very simple just saying that a given
day is 0 (the data the service was put online) and all the next days are
1, 2, 3, and so forth. So with SETBIT it is possible to set the bit
corresponding to the current day every time the user visits the site.

It is possible to take the count of the bit sets on the run, this is
extremely easy using a Lua script. However a fast bit count native
operation can be useful, especially if it can operate on ranges, or when
the string is small like in the case of days (even if you consider many
years it is still extremely little data).

For this reason BITOP was introduced. The command counts the number of
bits set to 1 in a string, with optional range:

BITCOUNT key [start end]

The start/end parameters are similar to GETRANGE. If omitted the whole
string is tested.

Population counting is more useful when bit-level operations like AND,
OR and XOR are avaialble. For instance I can test multiple users to see
the number of days three users visited the site at the same time. To do
this we can take the AND of all the bitmaps, and then count the set bits.

For this reason the BITOP command was introduced:

BITOP [AND|OR|XOR|NOT] dest_key src_key1 src_key2 src_key3 ... src_keyN

In the special case of NOT (that inverts the bits) only one source key
can be passed.

The judicious use of BITCOUNT and BITOP combined can lead to interesting
use cases with very space efficient representation of data.

The implementation provided is still not tested and optimized for speed,
next commits will introduce unit tests. Later the implementation will be
profiled to see if it is possible to gain an important amount of speed
without making the code much more complex.",[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1306.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1306.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1306.cpp
47ca4b6e28af49d1904f40fceacf58bb2907fbf2,"Allow an AOF rewrite buffer > 2GB (Fix for issue #504).

During the AOF rewrite process, the parent process needs to accumulate
the new writes in an in-memory buffer: when the child will terminate the
AOF rewriting process this buffer (that ist the difference between the
dataset when the rewrite was started, and the current dataset) is
flushed to the new AOF file.

We used to implement this buffer using an sds.c string, but sds.c has a
2GB limit. Sometimes the dataset can be big enough, the amount of writes
so high, and the rewrite process slow enough that we overflow the 2GB
limit, causing a crash, documented on github by issue #504.

In order to prevent this from happening, this commit introduces a new
system to accumulate writes, implemented by a linked list of blocks of
10 MB each, so that we also avoid paying the reallocation cost.

Note that theoretically modern operating systems may implement realloc()
simply as a remaping of the old pages, thus with very good performances,
see for instance the mremap() syscall on Linux. However this is not
always true, and jemalloc by default avoids doing this because there are
issues with the current implementation of mremap().

For this reason we are using a linked list of blocks instead of a single
block that gets reallocated again and again.

The changes in this commit lacks testing, that will be performed before
merging into the unstable branch. This fix will not enter 2.4 because it
is too invasive. However 2.4 will log a warning when the AOF rewrite
buffer is near to the 2GB limit.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1307.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1307.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1307.cpp
6d3127704854ca9985a576ddd107b3f3c72448a2,use port_getn instead of port_get,[],src/ae_evport.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1308.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1308.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1308.cpp
6d3127704854ca9985a576ddd107b3f3c72448a2,use port_getn instead of port_get,[],src/ae_evport.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1308.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1308.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1308.cpp
ea66be60802fea82d88d48e0af87d1e6c20bfee5,redis-cli pipe mode: handle EINTR properly as well so that SIGSTOP/SIGCONT are handled correctly.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1309.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1309.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1309.cpp
f6bd9122c0692bd76e7c1d90062c50551cd898a5,redis-cli pipe mode: handle EAGAIN while writing to socket.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1310.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1310.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1310.cpp
088c508abc89b66ce14870a2abe06879238a3b21,redis-cli --pipe for mass import.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1311.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1311.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1311.cpp
299290d3a42e92d73a22169c87aa21d2fe6e3b34,Remove useless trailing space in SYNC command sent to master.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1312.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1312.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1312.cpp
ae62d29d1db7a174db4e519fa975b7df6f369d4d,"Use specific error if master is down and slave-serve-stale-data is set to no.

We used to reply -ERR ... message ..., now the reply is
instead -MASTERDOWN ... message ... so that it can be distinguished
easily by the other error conditions.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1313.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1313.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1313.cpp
57356b80cddd203086e932a09a8916a925cb8cf6,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1314.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1314.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1314.cpp
d445988c68bd795b1f9b79057513d46b062f4596,"Merge pull request #481 from dtran320/unstable

Spelling: s/synchrnonization/synchronization",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1315.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1315.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1315.cpp
31788f50b7dfde5755c9964489277449092f9f4b,Spelling: s/synchrnonization/synchronization,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1316.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1316.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1316.cpp
29c8cf011657e9f95551be20b20de06c7f7f947d,redis-check-dump now is RDB version 6 ready.,[],src/redis-check-dump.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1317.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1317.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1317.cpp
7dbc514de7ee0ccffde321469a16b0a5c64a635c,Spurious debugging printf removed.,[],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1318.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1318.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1318.cpp
a76b9063d0b858fd2c72a92794b4c852005cac30,"Added two new encodings to ziplist.c

1) One integer ""immediate"" encoding that can encode from 0 to 12 in the
encoding byte itself.
2) One 8 bit signed integer encoding that can encode 8 bit signed small
integers in a single byte.

The idea is to exploit all the not used bits we have around in a
backward compatible way.",[],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1319.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1319.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1319.cpp
d344228734dccb1dc67a1fe7e80825c5e49a8199,"Merge pull request #421 from ErikDubbelboer/sds-const

Added consts keyword where possible",[],src/sds.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1320.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1320.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1320.cpp
d3701d27141b8e400ccdf5fbf22c504d112fab63,"Limit memory used by big SLOWLOG entries.

Two limits are added:

1) Up to SLOWLOG_ENTRY_MAX_ARGV arguments are logged.
2) Up to SLOWLOG_ENTRY_MAX_STRING bytes per argument are logged.
3) slowlog-max-len is set to 128 by default (was 1024).

The number of remaining arguments / bytes is logged in the entry
so that the user can understand better the nature of the logged command.",[],src/slowlog.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1321.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1321.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1321.cpp
5386f72d003c75a7cb25fd87f16d9aa715074a1b,redis-cli --bigkeys output modified to be simpler to read..,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1322.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1322.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1322.cpp
f26761aa1052d838be4c424929c41d012511b45c,redis-cli --bigkeys,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1323.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1323.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1323.cpp
a5f8341245aeebd22a2474e92c4ed497eae01545,"Two small fixes to maxclients handling.

1) Don't accept maxclients set to < 0
2) Allow maxclients < 1024, it is useful for testing.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1324.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1324.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1324.cpp
93a74949d7bb5d0c4115d1bf45f856c368badf31,Merge branch 'strict.lua' into unstable,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1325.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1325.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1325.cpp
6f659f34cf8aa22eb9977a2d38f7a6bd396c4b42,EVAL errors are more clear now.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1326.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1326.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1326.cpp
3a0214041542433895004f2fe97b08a3c4e9cb61,Use Lua tostring() before concatenation.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1327.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1327.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1327.cpp
d86c4a7bf0989f2466c3742a09a9c72633b5f0ba,"mt.declared is no longer needed.

Lua global protection can now be simpified becuase we no longer have the
global() function. It's useless to occupy memory with this table, it is
also not faster because the metamethods we use are only called when a
global object does not exist or we are trying to create it from a
script.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1328.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1328.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1328.cpp
6663653f515285aebe772663a24c381929c3e512,"Stop access to global vars. Not configurable.

After considering the interaction between ability to delcare globals in
scripts using the 'global' function, and the complexities related to
hanlding replication and AOF in a sane way with globals AND ability to
turn protection On and Off, we reconsidered the design. The new design
makes clear that there is only one good way to write Redis scripts, that
is not using globals. In the rare cases state must be retained across
calls a Redis key can be used.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1329.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1329.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1329.cpp
37b29ef2fa2ce3e6bafcf1d8979504532ed8cc31,Scripting: globals protection can now be switched on/off.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1330.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1330.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1330.cpp
6e05f333a29e379264a6a8949fc2f44d555d632e,Print arch bits with redis-server -v,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1331.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1331.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1331.cpp
4c442e9d88c493a16f4f1197413b063c7205d812,memtest.c: integer overflow fixed.,[],src/memtest.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1332.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1332.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1332.cpp
0d83011a11b42fe1b0d1bebb7b9a3318fd44f0e5,"Merge pull request #449 from ErikDubbelboer/unstable

added explanation for the magic 511 backlog number",[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1333.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1333.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1333.cpp
815c06f2f727e8a66372ad71e050165c429d4eac,added explanation for the magic 511 backlog number,[],src/anet.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1334.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1334.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1334.cpp
f2f2ba1b3ab5147684143ebfb2981c14c9a0bd27,Comment typo fixed. Clusetr -> Cluster.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1335.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1335.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1335.cpp
84bcd3aa24eabed2a5295dc3450e6f45aa79049c,It is now possible to enable/disable RDB checksum computation from redis.conf or via CONFIG SET/GET. Also CONFIG SET support added for rdbcompression as well.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1336.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1336.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1336.cpp
84bcd3aa24eabed2a5295dc3450e6f45aa79049c,It is now possible to enable/disable RDB checksum computation from redis.conf or via CONFIG SET/GET. Also CONFIG SET support added for rdbcompression as well.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1337.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1337.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1337.cpp
82e32055d8282181ce88146d151db367162b8f3d,RDB files now embed a crc64 checksum. Version of RDB bumped to 5.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1338.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1338.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1338.cpp
88c1d9550d198fd7df426b19ea67e9c51c92a811,crc64.c modified for incremental computation.,[],src/crc64.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1339.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1339.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1339.cpp
2cbdab903fc0a66f246647f4d79e92b3e1778b82,For coverage testing use exit() instead of _exit() when termiating saving children.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1340.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1340.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1340.cpp
09f66a0be88b3dc846b763785dd258f72bf66d43,"New client info field added to CLIENT LIST output: multi, containing the length of the current pipeline. Test modified accordingly.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1341.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1341.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1341.cpp
618a922957803cb9f5fc944dd0630d7d61008d06,New INFO field in persistence section: bgrewriteaof_scheduled.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1342.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1342.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1342.cpp
5ad1faa09038b861ac703fecbf731f0637dac715,"New ""os"" field in INFO output providing information about the operating system.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1343.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1343.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1343.cpp
9a322ab73093f15726348d08065b6a90c9894860,Print milliseconds of the current second in log lines timestamps. Sometimes precise timing is very important for debugging.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1344.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1344.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1344.cpp
e7957ca6286b2d541fe6d47c5b95ec0f2c34e091,"When the user-provided 'maxclients' value is too big for the max number of files we can open, at least try to search the max the OS is allowing (in steps of 256 filedes).",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1345.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1345.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1345.cpp
31f2ecf436eca8eaf12445c6ed73b1eb49eccf6d,MIGRATE now let the client distinguish I/O errors and timeouts from other erros.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1346.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1346.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1346.cpp
f8ea19e5392cf8582630fdfde5b6bc85c477d6ca,DUMP/RESTORE now use CRC64 instead of truncated SHA1.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1347.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1347.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1347.cpp
4de6c9a055c3d7e7964795f56cee27964738642d,New DUMP format includes RDB version and truncated SHA1 checksum.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1348.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1348.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1348.cpp
d0ace5a3149808d6d3f8fd5c626510756bba3cc7,Write RDB magic using a REDIS_RDB_VERSION define that is defined inside rdb.h,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1349.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1349.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1349.cpp
9157549fad46025548b6f500a0202d2720779524,syncio.c calls in replication.c fixed for the new millisecond timeout API.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1350.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1350.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1350.cpp
0a2ff52eaecb8040e105ee9fa87d82c0b0394e2e,Added consts keyword where possible,[],src/sds.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1351.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1351.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1351.cpp
c2672a06cdf411d882c6d2a58a6c84fcbc57b4c7,Purely aesthetic code change.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1352.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1352.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1352.cpp
f892797e1b459ad568df32d891b368302c40b3c9,"Fixed a memory leak with replication

occurs when two or more dbs are replicated and at least one of them is >db10",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1353.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1353.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1353.cpp
f892797e1b459ad568df32d891b368302c40b3c9,"Fixed a memory leak with replication

occurs when two or more dbs are replicated and at least one of them is >db10",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1354.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1354.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1354.cpp
0cdecca1418b0329ede2c43151912d35ea790a51,Protect globals access in Lua scripting.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1355.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1355.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1355.cpp
179e54d2a9c6545d6f102bf9a3f9506175639743,Fix for slaves chains. Force resync of slaves (simply disconnecting them)  when SLAVEOF turns a master into a slave.,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1356.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1356.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1356.cpp
52ae8af807dd8c4f2c98db5198f9f45ebd946193,"added redis.sha1hex(string) as lua scripting function.

(The original implementation was modified by @antirez to conform Redis
coding standards.)",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1357.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1357.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1357.cpp
a7d12cbaf1425bf86f18b7dfac99f7b1ee1500e2,Log from signal handlers is now safer.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1358.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1358.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1358.cpp
1043c8064bce1ffaaa89c9358889bf0ea0b33f51,Merge branch 'watchdog' into unstable,[],src/bio.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1359.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1359.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1359.cpp
1043c8064bce1ffaaa89c9358889bf0ea0b33f51,Merge branch 'watchdog' into unstable,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1360.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1360.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1360.cpp
1043c8064bce1ffaaa89c9358889bf0ea0b33f51,Merge branch 'watchdog' into unstable,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1361.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1361.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1361.cpp
44f26aea0cf05635b3402b82e6d0b8ffd4fe1340,"Merge pull request #407 from anydot/fixes

Fixes around time usage",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1362.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1362.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1362.cpp
44f26aea0cf05635b3402b82e6d0b8ffd4fe1340,"Merge pull request #407 from anydot/fixes

Fixes around time usage",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1363.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1363.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1363.cpp
44f26aea0cf05635b3402b82e6d0b8ffd4fe1340,"Merge pull request #407 from anydot/fixes

Fixes around time usage",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1364.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1364.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1364.cpp
d194905449d7de0a104e773f57eaae78bd09a4c6,use server.unixtime instead of time(NULL) where possible (cluster.c not checked though),[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1365.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1365.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1365.cpp
d194905449d7de0a104e773f57eaae78bd09a4c6,use server.unixtime instead of time(NULL) where possible (cluster.c not checked though),[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1366.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1366.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1366.cpp
d194905449d7de0a104e773f57eaae78bd09a4c6,use server.unixtime instead of time(NULL) where possible (cluster.c not checked though),[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1367.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1367.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1367.cpp
23c0cdd2ad8b15defab56eca89a42c67cadd9a34,Produce the watchlog warning log in a way that is safer from a signal handler. Fix a memory leak in the backtrace generation function.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1368.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1368.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1368.cpp
aa96122d968308f77c4d26ba24c6ec9727b4e88b,"Mask SIGALRM everything but in the main thread.

This is required to ensure that the signal will be delivered to the main
thread when the watchdog timer expires.",[],src/bio.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1369.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1369.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1369.cpp
39bd025c295974986331ca4cd89ce18cfa50204a,Redis software watchdog.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1370.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1370.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1370.cpp
0f9997845af236097c8802771cca3cff84c4e77b,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1371.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1371.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1371.cpp
0f9997845af236097c8802771cca3cff84c4e77b,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/multi.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1372.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1372.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1372.cpp
0f9997845af236097c8802771cca3cff84c4e77b,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1373.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1373.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1373.cpp
0f9997845af236097c8802771cca3cff84c4e77b,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1374.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1374.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1374.cpp
0f9997845af236097c8802771cca3cff84c4e77b,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/redis-check-dump.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1375.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1375.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1375.cpp
0f9997845af236097c8802771cca3cff84c4e77b,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1376.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1376.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1376.cpp
0f9997845af236097c8802771cca3cff84c4e77b,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1377.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1377.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1377.cpp
0f9997845af236097c8802771cca3cff84c4e77b,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1378.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1378.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1378.cpp
0f9997845af236097c8802771cca3cff84c4e77b,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1379.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1379.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1379.cpp
1b247d133351c747a3c6cce8cac64e6830ccab92,Add used allocator in redis-server -v output.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1380.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1380.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1380.cpp
7b558b1d64a29fbb9fea321da75367c0fa38b61d,Code style hack.,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1381.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1381.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1381.cpp
1f6146df0ce28667b90432ebf725d4a2b4fb0af7,"Result of INCRBYFLOAT and HINCRBYFLOAT should never be in exponential form, and also should never contain trailing zeroes. This is not possible with vanilla printf() format specifiers, so we alter the output.",[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1382.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1382.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1382.cpp
f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb,"Support for read-only slaves. Semantical fixes.

This commit introduces support for read only slaves via redis.conf and CONFIG GET/SET commands. Also various semantical fixes are implemented here:

1) MULTI/EXEC with only read commands now work where the server is into a state where writes (or commands increasing memory usage) are not allowed. Before this patch everything inside a transaction would fail in this conditions.

2) Scripts just calling read-only commands will work against read only
slaves, when the server is out of memory, or when persistence is into an
error condition. Before the patch EVAL always failed in this condition.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1383.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1383.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1383.cpp
f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb,"Support for read-only slaves. Semantical fixes.

This commit introduces support for read only slaves via redis.conf and CONFIG GET/SET commands. Also various semantical fixes are implemented here:

1) MULTI/EXEC with only read commands now work where the server is into a state where writes (or commands increasing memory usage) are not allowed. Before this patch everything inside a transaction would fail in this conditions.

2) Scripts just calling read-only commands will work against read only
slaves, when the server is out of memory, or when persistence is into an
error condition. Before the patch EVAL always failed in this condition.",[],src/multi.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1384.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1384.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1384.cpp
f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb,"Support for read-only slaves. Semantical fixes.

This commit introduces support for read only slaves via redis.conf and CONFIG GET/SET commands. Also various semantical fixes are implemented here:

1) MULTI/EXEC with only read commands now work where the server is into a state where writes (or commands increasing memory usage) are not allowed. Before this patch everything inside a transaction would fail in this conditions.

2) Scripts just calling read-only commands will work against read only
slaves, when the server is out of memory, or when persistence is into an
error condition. Before the patch EVAL always failed in this condition.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1385.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1385.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1385.cpp
f3fd419fc95e78818f9eeef15eb2d2e5a60bfbbb,"Support for read-only slaves. Semantical fixes.

This commit introduces support for read only slaves via redis.conf and CONFIG GET/SET commands. Also various semantical fixes are implemented here:

1) MULTI/EXEC with only read commands now work where the server is into a state where writes (or commands increasing memory usage) are not allowed. Before this patch everything inside a transaction would fail in this conditions.

2) Scripts just calling read-only commands will work against read only
slaves, when the server is out of memory, or when persistence is into an
error condition. Before the patch EVAL always failed in this condition.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1386.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1386.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1386.cpp
0d44d507925a97e55ca2352544b1bf6a1b78fa81,Suppress warnings compiling redis-cli with certain gcc versions.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1387.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1387.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1387.cpp
d4a515c56d911517c7f44330723db9cc7b6f4c0f,Memory addressing test implemented.,[],src/memtest.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1388.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1388.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1388.cpp
d033ccb0afa4d9b32c20bce2dd073650d3439479,More memory tests implemented. Default number of iterations lowered to a more acceptable value of 50.,[],src/memtest.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1389.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1389.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1389.cpp
d033ccb0afa4d9b32c20bce2dd073650d3439479,More memory tests implemented. Default number of iterations lowered to a more acceptable value of 50.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1390.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1390.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1390.cpp
a5801142a410b8e61867413c132f772484740a7e,Fixed typo.,[],src/memtest.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1391.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1391.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1391.cpp
1a197a3c1ae8c1014ca3f5ce0b0e436c550b52bb,Number of iteration of --test-memory is now 300 (several minutes per gigabyte). Memtest86 and Memtester links are also displayed while running the test.,[],src/memtest.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1392.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1392.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1392.cpp
1a197a3c1ae8c1014ca3f5ce0b0e436c550b52bb,Number of iteration of --test-memory is now 300 (several minutes per gigabyte). Memtest86 and Memtester links are also displayed while running the test.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1393.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1393.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1393.cpp
fb068dc91de40e308d78859c03db69a73e881f0e,Memory test function now less boring thanks to screen-wide progress bar.,[],src/memtest.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1394.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1394.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1394.cpp
c5166e3fc5f906b501528d2ae9a986f854c0e497,First implementation of --test-memory. Still a work in progress.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1395.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1395.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1395.cpp
bbaeda402cac1b66b52a869bfc419001d79ffcc0,Added a qbuf-free field to CLIENT LIST output.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1396.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1396.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1396.cpp
e74dca73d9818b42e7ee34c0a686133813e8d3a3,Client creation time in redisClient structure. New age field in CLIENT LIST output.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1397.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1397.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1397.cpp
f12d0224f34e1aa680aeebf581dc4d90a4d7d47e,RDB4 support in redis-check-dump.,[],src/redis-check-dump.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1398.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1398.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1398.cpp
8562798308391d489016b3995d438b6187b5980a,Merge conflicts resolved.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1399.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1399.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1399.cpp
0823e48fb9a7a43af3d108223a9c8952ac9dfc7a,Support for all the redis.conf fields in CONFIG GET. config.c refactored a bit.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1400.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1400.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1400.cpp
4d3bbf3590af7b575dd90512aa12706cea7ed899,"By default Redis refuses writes with an error if the latest BGSAVE failed (and at least one save point is configured). However people having good monitoring systems may prefer a server that continues to work, since they are notified that there are problems by their monitoring systems. This commit implements the ability to turn the feature on or off via redis.conf and CONFIG SET.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1401.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1401.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1401.cpp
e31b615e6201fccda3f2e036c449646e3cfbac25,"Better MONITOR output, now includes client ip:port or the lua string if the command was executed by the scripting engine.",[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1402.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1402.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1402.cpp
60893c6cc6b08504d06aaa2e4eee5df29a479da1,"redis-cli: CSV output added, used for the --slave mode.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1403.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1403.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1403.cpp
b8283ab2189cf1fcaed8c435f779fa9914210297,Initial implementation of redis-cli --slave support.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1404.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1404.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1404.cpp
b9474282f82f84baee730271bd86109ed1c95fe6,redis-benchmark: Initial support for pipelining.,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1405.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1405.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1405.cpp
a5bd08487ff22156cbaae9286ab8820172b35df7,"Fix for issue #306, thanks to tchajed (on github) for the pull request. The original patch was reworked a bit.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1406.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1406.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1406.cpp
7c96b467c1f882874f80403101ec96ddaf624f1a,Fixed undefined behavior in *INCR style functions overflow detection. Sorry clang!,[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1407.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1407.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1407.cpp
7c96b467c1f882874f80403101ec96ddaf624f1a,Fixed undefined behavior in *INCR style functions overflow detection. Sorry clang!,[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1408.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1408.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1408.cpp
8e65b6a33d01f48f469735798806877e3168cb2c,Applied a few modifications to hiredis to tune it for speed (redis-benchmark) and ability to read more deeply nested replies (redis-cli).,[],deps/hiredis/hiredis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1409.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1409.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1409.cpp
b66e5add82bf6785421111f505f41ed8bf09a6f7,The hiredis lib shipped with Redis was updated to latest version.,[],deps/hiredis/async.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1410.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1410.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1410.cpp
b66e5add82bf6785421111f505f41ed8bf09a6f7,The hiredis lib shipped with Redis was updated to latest version.,[],deps/hiredis/example-ae.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1411.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1411.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1411.cpp
b66e5add82bf6785421111f505f41ed8bf09a6f7,The hiredis lib shipped with Redis was updated to latest version.,[],deps/hiredis/example-libev.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1412.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1412.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1412.cpp
b66e5add82bf6785421111f505f41ed8bf09a6f7,The hiredis lib shipped with Redis was updated to latest version.,[],deps/hiredis/example-libevent.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1413.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1413.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1413.cpp
b66e5add82bf6785421111f505f41ed8bf09a6f7,The hiredis lib shipped with Redis was updated to latest version.,[],deps/hiredis/hiredis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1414.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1414.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1414.cpp
b66e5add82bf6785421111f505f41ed8bf09a6f7,The hiredis lib shipped with Redis was updated to latest version.,[],deps/hiredis/hiredis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1415.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1415.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1415.cpp
b66e5add82bf6785421111f505f41ed8bf09a6f7,The hiredis lib shipped with Redis was updated to latest version.,[],deps/hiredis/net.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1416.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1416.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1416.cpp
b66e5add82bf6785421111f505f41ed8bf09a6f7,The hiredis lib shipped with Redis was updated to latest version.,[],deps/hiredis/net.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1417.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1417.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1417.cpp
b66e5add82bf6785421111f505f41ed8bf09a6f7,The hiredis lib shipped with Redis was updated to latest version.,[],deps/hiredis/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1418.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1418.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1418.cpp
b66e5add82bf6785421111f505f41ed8bf09a6f7,The hiredis lib shipped with Redis was updated to latest version.,[],deps/hiredis/test.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1419.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1419.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1419.cpp
a400a9b2d753fcfc90aa234019ab7afd21966509,Now HINCRBY can detect overflows too. Fix for issue #330.,[],src/t_hash.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1420.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1420.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1420.cpp
48a32944e6b5e30754701109ff23d85a418d3d4d,Merge branch 'issue327' into unstable,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1421.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1421.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1421.cpp
48a32944e6b5e30754701109ff23d85a418d3d4d,Merge branch 'issue327' into unstable,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1422.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1422.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1422.cpp
48a32944e6b5e30754701109ff23d85a418d3d4d,Merge branch 'issue327' into unstable,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1423.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1423.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1423.cpp
4a701b3801f0b5362c303b0d477b31d81516d139,redis-check-aof is now large files safe also on 32 bit systems.,[],src/redis-check-aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1424.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1424.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1424.cpp
6136a16bd1fe4a88ada02e31e597b805d8a86b55,intset.c endianess fixes.,[],src/intset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1425.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1425.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1425.cpp
56538477143b144f2267ce98805a7b6edc763528,ziplist.c fixes for bigendian,[],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1426.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1426.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1426.cpp
b129c6df454690e223ac8481a4510313db35e66b,debugging messages removed from freeMemoryIfNeeded(),[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1427.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1427.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1427.cpp
609baba8a2d115f05e8fbc0db742ca60848e3c80,"Fixes to c->reply_bytes computation, and debug messages to closely study the behavior of memory pressure + slaves + maxmemory + blocked slaves.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1428.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1428.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1428.cpp
609baba8a2d115f05e8fbc0db742ca60848e3c80,"Fixes to c->reply_bytes computation, and debug messages to closely study the behavior of memory pressure + slaves + maxmemory + blocked slaves.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1429.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1429.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1429.cpp
442246dde2d8842caf4c1f4d4694ef5a78a0bad8,"Precision of getClientOutputBufferMemoryUsage() greatily improved, see issue #327 for more information.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1430.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1430.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1430.cpp
8b7c3455b964d634453cfe7acdb833db10a2fed5,freeMemoryIfNeeded() minor refactoring,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1431.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1431.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1431.cpp
8b7c3455b964d634453cfe7acdb833db10a2fed5,freeMemoryIfNeeded() minor refactoring,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1432.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1432.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1432.cpp
f6b32c14f4c8680d2a6b7a4d71758e76ca2c3554,"This fixes issue #327, is a very complex fix (unfortunately), details:

1) sendReplyToClient() now no longer stops transferring data to a single
client in the case we are out of memory (maxmemory-wise).

2) in processCommand() the idea of we being out of memory is no longer
the naive zmalloc_used_memory() > server.maxmemory. To say if we can
accept or not write queries is up to the return value of
freeMemoryIfNeeded(), that has full control about that.

3) freeMemoryIfNeeded() now does its math without considering output
buffers size. But at the same time it can't let the output buffers to
put us too much outside the max memory limit, so at the same time it
makes sure there is enough effort into delivering the output buffers to
the slaves, calling the write handler directly.

This three changes are the result of many tests, I found (partially
empirically) that is the best way to address the problem, but maybe
we'll find better solutions in the future.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1433.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1433.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1433.cpp
355f859134e6220cb35d7b3fa9ea19ea8d05c02a,"Use less memory when emitting the protocol, by using more shared objects for commonly emitted parts of the protocol.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1434.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1434.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1434.cpp
2c861050c17237a61fdaff4da2777c5d18ce979a,"SORT is now more deterministic: does not accept to compare by score items that have scores not representing a valid double. Also items with the same score are compared lexycographically. At the same time the scripting side introduced the ability to sort the output of SORT when sort uses the BY <constant> optimization, resulting in no specific ordering. Since in this case the user may use GET, and the result of GET can be null, converted into false as Lua data type, this commit also introduces the ability to sort Lua tables containining false, only if the first (faster) attempt at using just table.sort with a single argument fails.",[],src/sort.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1435.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1435.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1435.cpp
3c08fdae712e79cc7a678a2969c2ac15c5ff8865,64 bit instances are no longer limited to have at max 2^32-1 elements in lists.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1436.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1436.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1436.cpp
d1c4c94ebf918b908691ab7f58f872b04d93f3f9,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1437.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1437.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1437.cpp
eb7d19ed69c438b102ef7cb35195281c13a850ee,"Merge pull request #319 from fawek/lua-error-location

Lua reports line numbers off by one in error messages",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1438.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1438.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1438.cpp
4d776dba3c706aa20fd7d95dd73bff32dc2148a7,Lua reports line numbers off by one in error messages,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1439.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1439.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1439.cpp
7fe8d49a70c8ae87dbcc080872d327d1485c18c5,Client output buffer limits: configuration of parameters for the different classes of clients implemented.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1440.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1440.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1440.cpp
7fe8d49a70c8ae87dbcc080872d327d1485c18c5,Client output buffer limits: configuration of parameters for the different classes of clients implemented.,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1441.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1441.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1441.cpp
06b3dced99371c68fa9d7bcb0523cc05f3324e06,asyncCloseClientOnOutputBufferLimitReached() now ignores clients with REDIS_CLOSE_ASAP flag already set. Return value of the function changed from int to void since it is not used. Fixed logging of the client scheduled to be closed.,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1442.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1442.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1442.cpp
51669c5ac11b250fcdc91382f52f515a11835a20,client buffer handling refactoring and optimization,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1443.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1443.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1443.cpp
7eac2a75a43bace72947fb534db9016707af1a02,Implementation of the internals that make possible to terminate clients overcoming configured output buffer (soft and hard) limits.,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1444.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1444.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1444.cpp
890da62eea16bbf67be0c92cf16eba191f8e828e,Merge branch 'unstable' into limits,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1445.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1445.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1445.cpp
a48c8d873bc2a49f66ab398ebed51dc45764ca17,Fix for hash table collision attack. We simply randomize hash table initialization value at startup time.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1446.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1446.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1446.cpp
3853c168392e01f1790acaaee0a27aa893100e56,Track the length of the client pending output buffers (still to transfer) in a new field in the client structure.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1447.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1447.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1447.cpp
3853c168392e01f1790acaaee0a27aa893100e56,Track the length of the client pending output buffers (still to transfer) in a new field in the client structure.,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1448.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1448.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1448.cpp
1596d6a61e4c92fcde30fb2628a242ab01cb5883,Obsolete SDS_ABORT_ON_OOM removed from sds.c,[],src/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1449.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1449.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1449.cpp
ebd85e9a455df689c9be02a93354f580df4cafd8,Encode small hashes with a ziplist,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1450.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1450.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1450.cpp
11e0c4c55b8edd8d2226ba2e5fde989778695195,"Protections against protocol desyncs, leading to infinite query buffer growing, due to nul-terms in specific bytes of the request or indefinitely long multi bulk or bulk count strings without newlines. This bug is related to Issue #141 as well.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1451.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1451.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1451.cpp
d334281c802bc94e99475557ed341d356af0ab54,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1452.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1452.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1452.cpp
e51b79f31554d1f5eceb38cad1a0a4d14bd70454,sligthly better AOF related logs,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1453.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1453.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1453.cpp
1844f9900f131a538d1cee988d76ef689c8426fe,server.replstate -> server.repl_state,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1454.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1454.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1454.cpp
1844f9900f131a538d1cee988d76ef689c8426fe,server.replstate -> server.repl_state,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1455.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1455.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1455.cpp
f48cd4b90cc298a74ded3f7adc45740a4dd1a9c1,some RDB server struct fields renamed.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1456.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1456.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1456.cpp
f48cd4b90cc298a74ded3f7adc45740a4dd1a9c1,some RDB server struct fields renamed.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1457.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1457.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1457.cpp
f48cd4b90cc298a74ded3f7adc45740a4dd1a9c1,some RDB server struct fields renamed.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1458.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1458.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1458.cpp
f48cd4b90cc298a74ded3f7adc45740a4dd1a9c1,some RDB server struct fields renamed.,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1459.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1459.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1459.cpp
ff2145adac3108196bf6afcab61a5babc64ce4ed,more AOF server struct fields renamed.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1460.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1460.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1460.cpp
ff2145adac3108196bf6afcab61a5babc64ce4ed,more AOF server struct fields renamed.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1461.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1461.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1461.cpp
ff2145adac3108196bf6afcab61a5babc64ce4ed,more AOF server struct fields renamed.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1462.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1462.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1462.cpp
2c915bcf6d62e2e8d0868cddfda896fc989bc81f,"AOF fileds in the global server state, and define names, renamed with more consistent names. More work to do.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1463.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1463.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1463.cpp
e394114d95395fe9babb0a658de263a0811ec330,"AOF refactoring, now with three states: ON, OFF, WAIT_REWRITE.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1464.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1464.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1464.cpp
e394114d95395fe9babb0a658de263a0811ec330,"AOF refactoring, now with three states: ON, OFF, WAIT_REWRITE.",[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1465.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1465.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1465.cpp
e394114d95395fe9babb0a658de263a0811ec330,"AOF refactoring, now with three states: ON, OFF, WAIT_REWRITE.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1466.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1466.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1466.cpp
af77acc310204696a1af4e52345b2cf0be341cb1,startAppendOnly() fixed to set server.appendonly to 0 if the start failed.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1467.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1467.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1467.cpp
7d5209d7d36cf1f3978f3ca09a831f0c1a9f26e2,"Merge pull request #258 from miaout17/bugfix-247

Fix issue #247 and add a test case",[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1468.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1468.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1468.cpp
706b32e0e0a7dd20cc3f74501c1bfd74570b380c,"Fix issue #247 : Accepting non-integer parameters when shouldn't
Using `getLongFromObjectOrReply` instead of `atoi` if possible.
The following functions are modified.

* lrangeCommand
* ltrimCommand
* lremCommand
* lindexCommand
* lsetCommand
* zunionInterGenericCommand
* genericZrangebyscoreCommand
* sortCommand",[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1469.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1469.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1469.cpp
e7a2e7c1f7b1e46704aaf0850f75d13d418c1db7,AOF fixes in the context of replicaiton (when AOF is used by slave) and CONFIG SET appendonly yes/no.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1470.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1470.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1470.cpp
e074416be49947c7bab5e237fab7210441bd99e5,"Max limit to 10k clients removed, this implements feature request on issue #194",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1471.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1471.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1471.cpp
503d87a818ffd11c275bba6479bcd5b4a855e8ca,"List connected slaves with ip,port,state information in INFO, as requested by github issue #219",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1472.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1472.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1472.cpp
e2f313899bf985fe691428af8466d10e3e67a6fd,redis-cli --eval implemented,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1473.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1473.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1473.cpp
9268a5b5fd4f1824dad767c71188b90e44281551,usage information updated to reflect the new way to pass options to Redis from the command line.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1474.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1474.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1474.cpp
67c6f0f630e1083f4fdad3efc12be691bf13dd55,Support for command line configuration options for redis-server.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1475.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1475.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1475.cpp
e7ef418ccd528f1546757392899272fd6176033e,two new AOF related INFO fields that can be interesting information for debugging.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1476.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1476.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1476.cpp
2753acf1d642628d01de0d2a477c5d905fb761bc,"Merge pull request #208 from jbergstroem/jemalloc-2.2.5

Update to jemalloc 2.2.5",[],deps/jemalloc/src/stats.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1477.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1477.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1477.cpp
2753acf1d642628d01de0d2a477c5d905fb761bc,"Merge pull request #208 from jbergstroem/jemalloc-2.2.5

Update to jemalloc 2.2.5",[],deps/jemalloc/test/rallocm.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1478.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1478.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1478.cpp
3e0a975e07089609036daf70c319eea0599ce944,log client protocol errors for log level >= verbose,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1479.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1479.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1479.cpp
2c74a9f9488774f1d7226afaf248493bf3aec4ed,last executed command in CLIENT LIST output.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1480.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1480.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1480.cpp
2c74a9f9488774f1d7226afaf248493bf3aec4ed,last executed command in CLIENT LIST output.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1481.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1481.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1481.cpp
1d03c1c98a45ec569e017e4c0b8957c4ce00850b,Update to jemalloc 2.2.5,[],deps/jemalloc/src/stats.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1482.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1482.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1482.cpp
1d03c1c98a45ec569e017e4c0b8957c4ce00850b,Update to jemalloc 2.2.5,[],deps/jemalloc/test/rallocm.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1483.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1483.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1483.cpp
6621b8ffa109b06a19822d865d4690a72cd9adbf,show active events in client file descriptor in CLIENT LIST.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1484.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1484.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1484.cpp
491c1c4e044ac18c25905d3aba5c1578d6da7502,"added output list and buffer length, query buffer size, to CLIENT LIST output.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1485.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1485.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1485.cpp
17d25a33e2c569df08a0accbef1f2bba23719823,code generating the CLIENT LIST output refactored to have a function that is able to render a single client into a client info string.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1486.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1486.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1486.cpp
40f3ff21b7366defa4ae84ba93f4833a468669a1,Merge remote-tracking branch 'origin/unstable' into unstable,[],src/zipmap.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1487.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1487.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1487.cpp
794e6ce14ff85f00b0d3e86365e9cc45a90d3bcf,"Merge pull request #173 from jasondavies/typo

Fix some minor typos.",[],src/zipmap.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1488.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1488.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1488.cpp
4ab8695d537eff1dbc554bf3ab1896495311deda,New script timeout semantics and SCRIPT KILL implemented. SHUTDOWN NOSAVE and SHUTDOWN SAVE implemented.,[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1489.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1489.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1489.cpp
4ab8695d537eff1dbc554bf3ab1896495311deda,New script timeout semantics and SCRIPT KILL implemented. SHUTDOWN NOSAVE and SHUTDOWN SAVE implemented.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1490.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1490.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1490.cpp
d93f9a8644821222fedbb32c522624bfa98b17df,string to number API is now more strict not accepting spaces before or after the number. A few tests converted to match the new error messages using the word float instead of double.,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1491.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1491.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1491.cpp
5574b53eae1743cca9eed5a9dd25bf418c974701,INCRBYFLOAT implementation,[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1492.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1492.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1492.cpp
5574b53eae1743cca9eed5a9dd25bf418c974701,INCRBYFLOAT implementation,[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1493.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1493.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1493.cpp
12d293ca6edab6cc94cbd90840c629a535a12aef,high resolution expires API modified to use separated commands. AOF transation to PEXPIREAT of all the expire-style commands fixed.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1494.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1494.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1494.cpp
12d293ca6edab6cc94cbd90840c629a535a12aef,high resolution expires API modified to use separated commands. AOF transation to PEXPIREAT of all the expire-style commands fixed.,[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1495.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1495.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1495.cpp
c0ba9ebe13865189a3b21f7be8a910e349b59fda,dict.c API names modified to be more coincise and consistent.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1496.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1496.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1496.cpp
c0ba9ebe13865189a3b21f7be8a910e349b59fda,dict.c API names modified to be more coincise and consistent.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1497.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1497.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1497.cpp
66d8818cb751ab23e70e82fc5ab1017399f49109,Merge branch 'unstable' into ttlres,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1498.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1498.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1498.cpp
66d8818cb751ab23e70e82fc5ab1017399f49109,Merge branch 'unstable' into ttlres,[],src/testhelp.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1499.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1499.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1499.cpp
53272781d0b7f664fc6e3fcd5c9032dd09103bbc,"Multi bulk optimization for creating big objects without copying data is no longer optional, #ifdefs removed. Also debugging messages removed.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1500.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1500.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1500.cpp
d9747b496e06e6647cd9d4dbc4e8b89eda5f2ccc,redis-benchmark: ability to run selected tests. Better help with examples.,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1501.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1501.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1501.cpp
7b86f5e6d5ecdafc3e47f640ac99614ee2295c06,csv output for redis-benchmark,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1502.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1502.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1502.cpp
94d490b9f68a1972a3c89cf0ffc801b64ec2083e,Added a define to set the size threshold to enable the multi bulk parsing big objects optimization.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1503.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1503.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1503.cpp
826b5beb9c04fef0d9942b8846989732b0d03ead,further optimizations for the multi bulk protocol parsing code when big objects are transmitted to Redis.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1504.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1504.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1504.cpp
a54806ac6af77940070a90a44b603bec46cfe599,testhelp.h now exits with retcode 1 on failed tests.,[],src/testhelp.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1505.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1505.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1505.cpp
b91cbf66bb527fbc7eef8079e9153fa5357186e2,Fix minor typos.,[],src/zipmap.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1506.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1506.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1506.cpp
58732c23d53d6fc652668a516556ea182b0ed0f8,"maxclients configuration is now implemented dealing with the actual process rlimits. Setting maxclients to 0 no longer makes sense and is now invalid, the new default is 10000.
See issue #162 for more information.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1507.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1507.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1507.cpp
db6a2e7f78f99503eaa2fcc0574a16eea570637a,Fixed a memory leak in redis-cli.c,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1508.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1508.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1508.cpp
115e3ff39e8cbf2f2e044fbd6c65c2e6602c537f,"If a Lua script executes for more time than the max time specified in the configuration Redis will log a warning, and will start accepting queries (re-entering the event loop), returning -SLOWSCRIPT error for all the commands but SHUTDOWN that remains callable.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1509.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1509.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1509.cpp
e5abf6ef19ec0d4c583608c19aaaf97fc21b0298,SCRIPT LOAD now returns the SHA1 instead of +OK,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1510.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1510.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1510.cpp
e8c993f0fb0cfc29d953b710fd807ea8eb392b89,Fixes for the scripting refactoring and new commands. Tests for the new features.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1511.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1511.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1511.cpp
a9b07ac459b435d0ea7ad37da933511f83e05507,"SCRIPT LOAD implemented, scripting eval command refactoring.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1512.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1512.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1512.cpp
070e39454dbe8bcd164e04f7f83da047bd367e22,SCRIPT command for introspection and control of the scripting environment.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1513.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1513.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1513.cpp
9ed32ba0831b5cabdb0c1c26fdafe96e8b485459,Redis.call is now split into two variants of the same function. Redis.call will raise an error by default. Redis.pcall will return the error object instead.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1514.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1514.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1514.cpp
6856c7b4d64f6afc00249128fc952c575d8c84bf,First implementation of the ASKING command. Semantics still to verify.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1515.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1515.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1515.cpp
2e63cfe20d0a01c1afb6c6239c3ed447aec86fac,redis-check-dump: RDB version 2 now supported.,[],src/redis-check-dump.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1516.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1516.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1516.cpp
80ad7189e8de69ce5f7950dcdea4789be7db7014,More informative error when DEBUG RELOAD fails.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1517.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1517.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1517.cpp
ab52d1f4a8f3173622e0758d6f82f1aff0812b93,Fix for issue #132. Now AUTH raises an error if no server password is configured.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1518.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1518.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1518.cpp
ff15dba09390b8b0a864e57fb0fdd84b20d4193d,"not used parameter for redisLog() removed. Error message grammar fixed.
Thanks to @ardsrk.",[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1519.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1519.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1519.cpp
d38ef520852af3268dde9d254f04a000856f9b3c,Redis Cluster: process node to node CLUSTERMSG_TYPE_PUBLISH messages and send it to the local clients.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1520.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1520.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1520.cpp
c563ce463b169c768ced856167d3ee09652207b1,propagate PUBLISH messages using the redis cluster nodes bus. Still need to process the incoming packets of that type. Work in progress.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1521.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1521.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1521.cpp
623131d40895316970ccc36f35c0f56c1c23d55b,"Totally hackish and dirty, but working, support for Redis Cluster in redis-cli",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1522.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1522.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1522.cpp
2aa26d2a636efd68b58c1ca1f972da6b03ef0226,CONFIG SET/GET support for loglevel,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1523.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1523.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1523.cpp
eab0e26e03fa3c27a4e1172659cea32e1b83699e,replaced redisAssert() with redisAssertWithInfo() in a shitload of places.,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1524.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1524.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1524.cpp
bab205f787afcb37e5b5a5d1eb16c8fafef6f95d,redisAssertWithClientInfo() is now redisAssertWithInfo() that is also able to report an optional object. The client is also optional. Specifying NULL will prevent dumping the not available information (either client or object).,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1525.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1525.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1525.cpp
e3e69935108585c448bfd2ff5ba34fd7d9a6e4b9,Introduced a redisAssert() variant that is able to show information about the client in the context where the failed assertion was detected.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1526.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1526.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1526.cpp
37d650032a47bbc75356bdb09215eb6e59e363f4,Rewrite MIGRATE as DEL for AOF/replication. Also increment the dirty counter to both force replication and persistence.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1527.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1527.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1527.cpp
cd73df62af0efeceeede6b71f14ceb31199f461c,"Merge pull request #114 from pietern/unstable-zcount

Use rank information to compute ZCOUNT",[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1528.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1528.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1528.cpp
62d774e5ba6056be39012ecedb88c3fec10304fb,Use element rank instead of iterating in ZCOUNT,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1529.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1529.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1529.cpp
d38d2fdfdcfc2390fd9b02f1016e5571faf1fc6e,Fixed two bugs in the CLUSTER SETSLOT ... NODE subcommand,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1530.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1530.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1530.cpp
3b5289a04c474ce66df2ef410e053795b1f0f1d2,added comment about SETSLOT NODE form.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1531.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1531.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1531.cpp
1ef8b0a96d9b1a9f3a69914ece8e20b3c3d4c64c,show node with myself flag always as connected in CLUSTER NODES output.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1532.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1532.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1532.cpp
9f772cc23744804fc4b5da2aa7985c4c512abf55,Return errors if a write command is called inside a Lua script after a random command was called. See https://github.com/antirez/redis/issues/95 for more information.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1533.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1533.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1533.cpp
15ef6053404686995024adb373854a009a3d2d39,Deny commands flagged as REDIS_CMD_NOSCRIPT from Lua scripts,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1534.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1534.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1534.cpp
e108bab0437c709fcc8f339677bf6295fa793163,Lua math.random and math.randomseed replaced with our own version based on redisSrand48(). Seed initialized to the same value at every EVAL/EVALSHA call.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1535.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1535.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1535.cpp
f9c6f39b2b0039cf29df6597d41c124048c825cd,merge conflicts resolved,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1536.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1536.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1536.cpp
f9c6f39b2b0039cf29df6597d41c124048c825cd,merge conflicts resolved,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1537.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1537.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1537.cpp
f9c6f39b2b0039cf29df6597d41c124048c825cd,merge conflicts resolved,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1538.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1538.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1538.cpp
f9c6f39b2b0039cf29df6597d41c124048c825cd,merge conflicts resolved,[],src/syncio.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1539.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1539.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1539.cpp
af4707a80c8ff5bbca34e271d3b33fd23135c203,Merge remote-tracking branch 'origin/unstable' into bg-aof-2,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1540.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1540.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1540.cpp
bdbf3acff5ffc5d114f18c1383b103fe6f45829e,Enforce upper bound for number of requests in redis-benchmark,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1540.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1540.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1540.cpp
96674b6d95c8990cc7dae885b27c76f377ddeb91,Fixed a bug in the average latency metering of redis-cli --latency,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1541.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1541.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1541.cpp
43071993e19135c2f59fc6f013aa5522abcc2554,Implemented --latency in redis-cli,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1542.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1542.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1542.cpp
986630afad7310f4ad548b355be3df076a50032c,use bio.c instead of libeio for closing the AOF file in background. Some comment added and other minor changes.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1543.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1543.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1543.cpp
b454056d9480b91fd8935a7719ac3ffa40445ddf,Asynchronously close old file after BGREWRITEAOF,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1544.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1544.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1544.cpp
b147cb9e1ac77e021228f3343a59db1da7c88789,debug message removed,[],src/bio.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1545.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1545.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1545.cpp
8ea2dfd75c962865ee73cdb5d1893b9a64212b27,typo fixed in bio.c,[],src/bio.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1546.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1546.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1546.cpp
d1ec6c8b228e49dbaba943f328c124a5f5529768,Speed up protocol synthesis for AOF,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1547.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1547.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1547.cpp
a57225c2cff6547a70604c64de9e3a01a6c17eb2,Fix indent,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1548.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1548.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1548.cpp
4dd444bb4aabc3d6be68f90b67ad8a3a185fd40b,Replicate EVALSHA as EVAL taking a dictionary of sha1 -> script source code.,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1549.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1549.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1549.cpp
0681c5ad844cefefbe62f30df6587c0cbec3272e,master branch merged into scripting.,[],deps/hiredis/hiredis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1550.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1550.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1550.cpp
0681c5ad844cefefbe62f30df6587c0cbec3272e,master branch merged into scripting.,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1551.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1551.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1551.cpp
0681c5ad844cefefbe62f30df6587c0cbec3272e,master branch merged into scripting.,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1552.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1552.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1552.cpp
0681c5ad844cefefbe62f30df6587c0cbec3272e,master branch merged into scripting.,[],src/multi.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1553.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1553.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1553.cpp
0681c5ad844cefefbe62f30df6587c0cbec3272e,master branch merged into scripting.,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1554.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1554.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1554.cpp
0681c5ad844cefefbe62f30df6587c0cbec3272e,master branch merged into scripting.,[],src/zmalloc.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1555.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1555.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1555.cpp
09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e,"Take a pointer to the relevant entry of the command table in the client structure. This is generally a more sounding design, simplifies a few functions prototype, and as a side effect fixes a bug related to the conversion of EXPIRE -1 to DEL: before of this fix Redis tried to convert it into an EXPIREAT in the AOF code, regardless of our rewrite of the command.",[],src/multi.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1556.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1556.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1556.cpp
09e2d9eeba3ff65fd60f905a5bcb0f684f7a883e,"Take a pointer to the relevant entry of the command table in the client structure. This is generally a more sounding design, simplifies a few functions prototype, and as a side effect fixes a bug related to the conversion of EXPIRE -1 to DEL: before of this fix Redis tried to convert it into an EXPIREAT in the AOF code, regardless of our rewrite of the command.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1557.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1557.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1557.cpp
650463401999f675ae4254790db13aac5ddc5c5b,"no more allocation stats info in INFO, useless now that we have jemalloc.",[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1558.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1558.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1558.cpp
650463401999f675ae4254790db13aac5ddc5c5b,"no more allocation stats info in INFO, useless now that we have jemalloc.",[],src/zmalloc.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1559.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1559.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1559.cpp
35a6044140deb1c70dc92c5d454745142faeeb37,slow log configuration implemented,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1560.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1560.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1560.cpp
63d62eb786aacf25e0533cf328d95dc45806dcba,hiredis max multi bulk nesting level raised to 7,[],deps/hiredis/hiredis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1561.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1561.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1561.cpp
404345d8e53ed5646e3a0128beecaa2052dd4a81,DEUBG SLEEP implemented,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1562.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1562.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1562.cpp
c9d0c3623a7714bd41a35237f4ba927206a7adb6,diskstore removed,[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1563.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1563.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1563.cpp
c9d0c3623a7714bd41a35237f4ba927206a7adb6,diskstore removed,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1564.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1564.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1564.cpp
c9d0c3623a7714bd41a35237f4ba927206a7adb6,diskstore removed,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1565.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1565.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1565.cpp
c1c9d551da6dd534c8dae051a3a7e64bf7db6bfb,Fix for bug 561 and other related problems,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1566.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1566.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1566.cpp
c1c9d551da6dd534c8dae051a3a7e64bf7db6bfb,Fix for bug 561 and other related problems,[],src/redis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1567.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1567.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1567.cpp
f85cd526c155a1b1302b2d080502d40227af00ec,DB API refactoring. The changes were designed together with Pieter Noordhuis.,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1568.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1568.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1568.cpp
f85cd526c155a1b1302b2d080502d40227af00ec,DB API refactoring. The changes were designed together with Pieter Noordhuis.,[],src/t_string.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1569.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1569.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1569.cpp
07486df6fecae97b02171bba86f51d5df0a94cb5,new INFO filed master_link_down_since_seconds,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1570.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1570.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1570.cpp
0d1650f8a9ee2df13a11685ff0eb739305b4fe1b,Updated to unstable,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1571.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1571.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1571.cpp
0d1650f8a9ee2df13a11685ff0eb739305b4fe1b,Updated to unstable,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1572.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1572.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1572.cpp
0d1650f8a9ee2df13a11685ff0eb739305b4fe1b,Updated to unstable,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1573.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1573.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1573.cpp
0d1650f8a9ee2df13a11685ff0eb739305b4fe1b,Updated to unstable,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1574.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1574.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1574.cpp
0d1650f8a9ee2df13a11685ff0eb739305b4fe1b,Updated to unstable,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1575.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1575.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1575.cpp
0d1650f8a9ee2df13a11685ff0eb739305b4fe1b,Updated to unstable,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1576.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1576.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1576.cpp
0d1650f8a9ee2df13a11685ff0eb739305b4fe1b,Updated to unstable,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1577.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1577.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1577.cpp
9e40bce3fa178c5a79188f63ab6f1acf81500a53,different message on BGREWRITEAOF when it is just scheduled and not started.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1578.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1578.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1578.cpp
2c6cc5e502824f1b4e222ebfa1a3fc89f078ae32,minor code aesthetic change,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1579.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1579.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1579.cpp
d630abcdaf869345fed8fe508774d0318d1d82ff,Added new INFO fields related to the new AOF auto rewrite feature,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1580.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1580.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1580.cpp
73b9e8aedfc42d4b4b9f2902969e8bc219736f3d,debugging printf removed,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1581.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1581.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1581.cpp
4ff34b6adb9f5f9daad1f27e3aac8e016554b86c,AOF auto rewrite percentage option parsing fixed,[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1582.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1582.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1582.cpp
50528f0eea113508962b66e80d7cec7e9c5d92e9,Merge remote branch 'pietern/unstable-bench' into unstable,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1583.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1583.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1583.cpp
b333e2399778e624174e00d123c2cb3785333e3d,automatic AOF rewrite first implementation. Still to be tested.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1584.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1584.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1584.cpp
b333e2399778e624174e00d123c2cb3785333e3d,automatic AOF rewrite first implementation. Still to be tested.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1585.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1585.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1585.cpp
fc879abe4adb6c59ba6c280fa4e08ae291dd11eb,Merge branch 'unstable',[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1586.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1586.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1586.cpp
fc879abe4adb6c59ba6c280fa4e08ae291dd11eb,Merge branch 'unstable',[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1587.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1587.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1587.cpp
fc879abe4adb6c59ba6c280fa4e08ae291dd11eb,Merge branch 'unstable',[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1588.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1588.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1588.cpp
fc879abe4adb6c59ba6c280fa4e08ae291dd11eb,Merge branch 'unstable',[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1589.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1589.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1589.cpp
fc879abe4adb6c59ba6c280fa4e08ae291dd11eb,Merge branch 'unstable',[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1590.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1590.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1590.cpp
cf1eefa4206b23327e38a144d8d20543307fdbe4,Merge remote branch 'origin/unstable' into unstable,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1591.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1591.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1591.cpp
cf1eefa4206b23327e38a144d8d20543307fdbe4,Merge remote branch 'origin/unstable' into unstable,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1592.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1592.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1592.cpp
cf1eefa4206b23327e38a144d8d20543307fdbe4,Merge remote branch 'origin/unstable' into unstable,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1593.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1593.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1593.cpp
cf1eefa4206b23327e38a144d8d20543307fdbe4,Merge remote branch 'origin/unstable' into unstable,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1594.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1594.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1594.cpp
cf1eefa4206b23327e38a144d8d20543307fdbe4,Merge remote branch 'origin/unstable' into unstable,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1595.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1595.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1595.cpp
294cd536e0aeedd3d6f63f947a67bd2c08d04805,There is no debug mode in benchmark tool,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1596.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1596.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1596.cpp
39bf440243d18afbc764f6a637d7138eeeb37372,Provide custom command to benchmark against via args,[],src/redis-benchmark.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1597.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1597.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1597.cpp
ef231a7c56cafc42ff486b91d88ae7ec642a2117,Variadic ZADD,[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1598.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1598.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1598.cpp
632e4c09acad87b999dd944413ac5b75207de571,Make replication faster (biggest gain for small number of slaves),[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1599.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1599.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1599.cpp
615e414c5d9add3c0445d28b6d7ca62905dc8cd8,INFO now contains the time (in usecs) needed to fork() in order to persist. The info is available in the stats section of INFO.,[],src/aof.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1600.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1600.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1600.cpp
615e414c5d9add3c0445d28b6d7ca62905dc8cd8,INFO now contains the time (in usecs) needed to fork() in order to persist. The info is available in the stats section of INFO.,[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1601.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1601.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1601.cpp
43222f253a60b8949d761bd3ef36cb061a3a4a3e,Merge remote branch 'pietern/unstable-replnonblock' into unstable,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1602.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1602.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1602.cpp
442c748d841bb3603ba1194527ca9da6a1b3cd21,redis-cli: Use the repetiton prefix after a reconnection.,[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1603.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1603.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1603.cpp
4d19e3443cc3a36bd51684099152d89e18c45afa,"redis-cli in REPL mode is now able to send the same command multiple times, prefixing the command with a number as in ""10 ping""",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1604.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1604.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1604.cpp
a45f9a1a1d4c3bc419beeba09d9aae9b2d5b1433,"redis-cli no longer aborts in repl-mode on error, and retries to reconncet with the server at every command issued if the state is not connected. Also the prompt shows the server we are connected to.",[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1605.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1605.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1605.cpp
3bb818df405e667087fe3336cd91159790f63981,"Make sure error and status replies emitted by Lua scripts can never have more than a newline, otherwise it is a protocol violation and clients will desync.",[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1606.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1606.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1606.cpp
3bb818df405e667087fe3336cd91159790f63981,"Make sure error and status replies emitted by Lua scripts can never have more than a newline, otherwise it is a protocol violation and clients will desync.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1607.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1607.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1607.cpp
e927a246108e78dfaf6e02d604a674234e5116d3,Fix for wrong error level detection in redis.log(),[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1608.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1608.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1608.cpp
288f811feacdd6b26c2263e7b9fcfabaa051a1ec,All commands exported by Redis to Lua scripts are now inside the redis table. Implemented redis.log() function.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1609.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1609.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1609.cpp
da386cdf337a79b6734b58d3c5e426741e49c043,for performance reasons only set the debug hook if the time limit is enabled.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1610.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1610.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1610.cpp
87c219243c42b826da98cb8ad832785a5f569dca,Lua max exec time fixes: redisLog() to log the event moved before the lua_error() call that does a long jump so never returns. Aesthetic fixes in error message.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1611.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1611.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1611.cpp
eeffcf380fcd3e3a0b2f650e24df8338a529642d,Lua scripts max execution time,[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1612.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1612.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1612.cpp
eeffcf380fcd3e3a0b2f650e24df8338a529642d,Lua scripts max execution time,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1613.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1613.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1613.cpp
40531be0e338556df5510f49f4472ea50713962f,call lua_gc() for incremental garbage collection. Likely there is to tune this at some point.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1614.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1614.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1614.cpp
c2a7dd85ae007f157da3a5bedf1392a23fc38bc4,Lua scripting: Honor SELECT command in both ways,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1615.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1615.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1615.cpp
0d916763afa44c2c6d5e28a4fe0f167197b00fc7,Status replies converted in a special way like errors in the Lua <-> Redis conversion code.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1616.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1616.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1616.cpp
379789cc523df4de1a3263c879114610949fade1,Fixed nul bulk parsing in Redis protocol to Lua type convertion. Check for bad Lua types as arguements of the redis() Lua command.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1617.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1617.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1617.cpp
10a6da7af4bebad2b47a59d79609419aa98fae51,Multi bulk to Lua table now working,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1618.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1618.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1618.cpp
3791000f15ad793854fac48aa4840914970048db,Fixed arity detection of Redis command executed from Lua script. Error reporting from Lua fixed. More work on the Redis reply to lua conversion code.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1619.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1619.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1619.cpp
532e0f5ded866881d46f0aeac3756ebd3a3da98e,full conversion from Lua return value to redis reply. Partial conversion from Redis reply to Lua type.,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1620.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1620.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1620.cpp
4ae5b5e1633caffeb513c98dfd5f12364491182b,pupulate the Lua global tables KEYS and ARGV before executing the script,[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1621.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1621.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1621.cpp
7156f43c040414494829a8dcd4a7be4c26d241d8,"Correctly glue the reply buffer. For now returned as it is to Lua, but will be converted into Lua native type later.",[],src/scripting.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1622.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1622.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1622.cpp
890a2ed989274cb09b5cde1def3935e110ec3cb9,Configurable synchronous I/O timeout,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1623.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1623.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1623.cpp
b075621fb7d8b44b10d849e8db6db9b2498056ad,Minor changes in non-blocking repl. connect,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1624.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1624.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1624.cpp
a3309139992de03f3e68ec648db188c1c43057a0,Non-blocking connect with master,[],src/replication.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1625.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1625.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1625.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],deps/hiredis/async.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1626.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1626.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1626.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],deps/hiredis/example.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1627.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1627.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1627.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],deps/hiredis/hiredis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1628.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1628.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1628.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],deps/hiredis/hiredis.h,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1629.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1629.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1629.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],deps/hiredis/net.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1630.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1630.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1630.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],deps/hiredis/sds.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1631.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1631.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1631.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],deps/hiredis/test.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1632.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1632.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1632.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],src/config.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1633.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1633.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1633.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1634.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1634.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1634.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],src/debug.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1635.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1635.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1635.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1636.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1636.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1636.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],src/object.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1637.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1637.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1637.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1638.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1638.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1638.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],src/redis-cli.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1639.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1639.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1639.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],src/redis.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1640.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1640.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1640.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],src/t_zset.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1641.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1641.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1641.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],src/util.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1642.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1642.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1642.cpp
bfe85f7ca97259256e8089349e1a462b6c7dbd00,Merge branch 'unstable',[],src/ziplist.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1643.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1643.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1643.cpp
6b52ad87c05ca2162a2d21f1f5b5329bf52a7678,"RDB version signature bumped to 2, now that direct saving of specially encoded types is implemented 2.2 instances are no longer able to read rdb files produced by 2.4 or unstable.",[],src/rdb.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1644.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1644.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1644.cpp
f9cbdcb1a67e8903c976e588bbf24f0fe6bf2fac,CLUSTER SETSLOT command and some refactoring of the cluster command,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1645.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1645.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1645.cpp
f384df8302ccc6601f5833ae42e6b4664abd0ddc,CLUSTER DELSLOTS,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1646.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1646.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1646.cpp
a7b058dae612ad3ab31a2b2d6f07e5ff7fe06618,"Fixed semantics of CLUSTER SETSLOT, SELECT now only denied in cluster mode if selected DB is not 0 so that MIGRATE still works well.",[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1647.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1647.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1647.cpp
a7b058dae612ad3ab31a2b2d6f07e5ff7fe06618,"Fixed semantics of CLUSTER SETSLOT, SELECT now only denied in cluster mode if selected DB is not 0 so that MIGRATE still works well.",[],src/db.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1648.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1648.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1648.cpp
46834808fe31e7cbf08d6c9f7638a54c5c8bff8a,CLUSTER SETSLOT STABLE fixed,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1649.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1649.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1649.cpp
4763ecc9add311467c9c3852a81664a0b3005919,missing return caused protocol desync in CLUSTER SETSLOT,[],src/cluster.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1650.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1650.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1650.cpp
bf9fd5ffa248ac8a9c577eb2fc7fb6cd8a445113,Check for \n after finding \r,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1651.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1651.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1651.cpp
af0e51f2e15bc9c63d11229e64ce7884e1a1402a,Move code,[],src/networking.c,second/download/redis/redis-old-new/redis-old-new/antirez_redis_old_file_1652.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_new_file_1652.cpp,second/download/redis/redis-old-new/redis-old-new/antirez_redis_patch_1652.cpp
9703b1b3dc59aa76a314373fff748e26bdd0466f,Update hi
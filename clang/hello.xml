<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="clang/hello.cpp" pos:tabs="8"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include<pos:position pos:line="1" pos:column="9"/></cpp:directive> <cpp:file pos:line="1" pos:column="10">&lt;stdio.h&gt;<pos:position pos:line="1" pos:column="22"/></cpp:file></cpp:include>
<function><type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">add<pos:position pos:line="2" pos:column="8"/></name><parameter_list pos:line="2" pos:column="8">(<parameter><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">i<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">int<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">j<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<return pos:line="4" pos:column="9">return <expr><name pos:line="4" pos:column="16">i<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">+<pos:position pos:line="4" pos:column="19"/></operator> <name pos:line="4" pos:column="20">j<pos:position pos:line="4" pos:column="21"/></name></expr>;<pos:position pos:line="4" pos:column="22"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function>
<function><type><name pos:line="6" pos:column="1">int<pos:position pos:line="6" pos:column="4"/></name></type> <name pos:line="6" pos:column="5">mul<pos:position pos:line="6" pos:column="8"/></name><parameter_list pos:line="6" pos:column="8">(<parameter><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">j<pos:position pos:line="6" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="22"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">i<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">j<pos:position pos:line="8" pos:column="19"/></name></expr>;<pos:position pos:line="8" pos:column="20"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function>
<function><type><name pos:line="10" pos:column="1">int<pos:position pos:line="10" pos:column="4"/></name></type> <name pos:line="10" pos:column="5">eval<pos:position pos:line="10" pos:column="9"/></name><parameter_list pos:line="10" pos:column="9">(<parameter><decl><type><name pos:line="10" pos:column="10">int<pos:position pos:line="10" pos:column="13"/></name><modifier pos:line="10" pos:column="13">&amp;<pos:position pos:line="10" pos:column="18"/></modifier></type> <name pos:line="10" pos:column="15">i<pos:position pos:line="10" pos:column="16"/></name></decl></parameter>)<pos:position pos:line="10" pos:column="17"/></parameter_list>
<block pos:line="11" pos:column="1">{
	<return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">i<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&gt;<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="20">10<pos:position pos:line="12" pos:column="22"/></literal></expr>;<pos:position pos:line="12" pos:column="23"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function>
<function><type><name pos:line="14" pos:column="1">double<pos:position pos:line="14" pos:column="7"/></name></type> <name pos:line="14" pos:column="8">eval<pos:position pos:line="14" pos:column="12"/></name><parameter_list pos:line="14" pos:column="12">(<parameter><decl><type><name pos:line="14" pos:column="13">double<pos:position pos:line="14" pos:column="19"/></name></type> <name pos:line="14" pos:column="20">i<pos:position pos:line="14" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="14" pos:column="22"/></parameter_list>
<block pos:line="15" pos:column="1">{
	<return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">i<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">&gt;<pos:position pos:line="16" pos:column="22"/></operator> <literal type="number" pos:line="16" pos:column="20">10<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function>
<function><type><name pos:line="18" pos:column="1">int<pos:position pos:line="18" pos:column="4"/></name></type> <name pos:line="18" pos:column="5">ptr<pos:position pos:line="18" pos:column="8"/></name><parameter_list pos:line="18" pos:column="8">(<parameter><decl><type><name pos:line="18" pos:column="9">int<pos:position pos:line="18" pos:column="12"/></name><modifier pos:line="18" pos:column="12">*<pos:position pos:line="18" pos:column="13"/></modifier></type> <name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name></decl></parameter>)<pos:position pos:line="18" pos:column="16"/></parameter_list>
<block pos:line="19" pos:column="1">{
	<return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">i<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function>
<function><type><name pos:line="22" pos:column="1">int<pos:position pos:line="22" pos:column="4"/></name></type> <name pos:line="22" pos:column="5">main<pos:position pos:line="22" pos:column="9"/></name><parameter_list pos:line="22" pos:column="9">()<pos:position pos:line="22" pos:column="11"/></parameter_list>
<block pos:line="23" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="24" pos:column="9">int<pos:position pos:line="24" pos:column="12"/></name></type> <name pos:line="24" pos:column="13">a<pos:position pos:line="24" pos:column="14"/></name> <init pos:line="24" pos:column="15">= <expr><literal type="number" pos:line="24" pos:column="17">10<pos:position pos:line="24" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="25" pos:column="9">int<pos:position pos:line="25" pos:column="12"/></name></type> <name pos:line="25" pos:column="13">b<pos:position pos:line="25" pos:column="14"/></name> <init pos:line="25" pos:column="15">= <expr><literal type="number" pos:line="25" pos:column="17">10<pos:position pos:line="25" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="26" pos:column="9">int<pos:position pos:line="26" pos:column="12"/></name></type> <name pos:line="26" pos:column="13">i<pos:position pos:line="26" pos:column="14"/></name> <init pos:line="26" pos:column="15">= <expr><call><name pos:line="26" pos:column="17">add<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">a<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="24">b<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="27" pos:column="9">int<pos:position pos:line="27" pos:column="12"/></name></type> <name pos:line="27" pos:column="13">j<pos:position pos:line="27" pos:column="14"/></name> <init pos:line="27" pos:column="15">= <expr><call><name pos:line="27" pos:column="17">mul<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">a<pos:position pos:line="27" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="24">b<pos:position pos:line="27" pos:column="25"/></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="28" pos:column="9">int<pos:position pos:line="28" pos:column="12"/></name><modifier pos:line="28" pos:column="12">*<pos:position pos:line="28" pos:column="13"/></modifier></type> <name pos:line="28" pos:column="14">m<pos:position pos:line="28" pos:column="15"/></name></decl>;<pos:position pos:line="28" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="29" pos:column="9">int<pos:position pos:line="29" pos:column="12"/></name></type> <name pos:line="29" pos:column="13">n<pos:position pos:line="29" pos:column="14"/></name></decl>;<pos:position pos:line="29" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="30" pos:column="9">double<pos:position pos:line="30" pos:column="15"/></name></type> <name pos:line="30" pos:column="16">k<pos:position pos:line="30" pos:column="17"/></name> <init pos:line="30" pos:column="18">= <expr><literal type="number" pos:line="30" pos:column="20">0<pos:position pos:line="30" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="22"/></decl_stmt>
	<if pos:line="31" pos:column="9">if<condition pos:line="31" pos:column="11">(<expr><name pos:line="31" pos:column="12">i<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">*<pos:position pos:line="31" pos:column="15"/></operator> <name pos:line="31" pos:column="16">j<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">&lt;<pos:position pos:line="31" pos:column="22"/></operator> <literal type="number" pos:line="31" pos:column="20">100<pos:position pos:line="31" pos:column="23"/></literal></expr>)<pos:position pos:line="31" pos:column="24"/></condition><then pos:line="31" pos:column="24">
	<block pos:line="32" pos:column="9">{ 
		<if pos:line="33" pos:column="17">if<condition pos:line="33" pos:column="19">(<expr><name pos:line="33" pos:column="20">i<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">+<pos:position pos:line="33" pos:column="23"/></operator> <call><name pos:line="33" pos:column="24">eval<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">i<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">+<pos:position pos:line="33" pos:column="32"/></operator> <name pos:line="33" pos:column="33">j<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">+<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">k<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call> <operator pos:line="33" pos:column="40">+<pos:position pos:line="33" pos:column="41"/></operator> <name pos:line="33" pos:column="42">j<pos:position pos:line="33" pos:column="43"/></name></expr>)<pos:position pos:line="33" pos:column="44"/></condition><then pos:line="33" pos:column="44"> <block pos:line="33" pos:column="45">{ <expr_stmt><expr><name pos:line="33" pos:column="47">i<pos:position pos:line="33" pos:column="48"/></name> <operator pos:line="33" pos:column="49">=<pos:position pos:line="33" pos:column="50"/></operator> <call><name pos:line="33" pos:column="51">ptr<pos:position pos:line="33" pos:column="54"/></name><argument_list pos:line="33" pos:column="54">(<argument><expr><name pos:line="33" pos:column="55">m<pos:position pos:line="33" pos:column="56"/></name></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">printf<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><literal type="string" pos:line="34" pos:column="32">"%d * %d &lt; 100, m:%p, n:%d, eval:%d.\n"<pos:position pos:line="34" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="73">i<pos:position pos:line="34" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="76">j<pos:position pos:line="34" pos:column="77"/></name></expr></argument>
				, <argument><expr><name pos:line="35" pos:column="35">m<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="38">n<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="41">eval<pos:position pos:line="35" pos:column="45"/></name><argument_list pos:line="35" pos:column="45">(<argument><expr><name pos:line="35" pos:column="46">i<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">j<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <call><name pos:line="36" pos:column="29">eval<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><name pos:line="36" pos:column="34">n<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">eval<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">k<pos:position pos:line="38" pos:column="23"/></name></expr></argument>)<pos:position pos:line="38" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>
		<comment type="line" pos:line="39" pos:column="17">// i = 5;</comment>
	}<pos:position pos:line="40" pos:column="10"/></block></then>
	<else pos:line="41" pos:column="9">else
	<block pos:line="42" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">printf<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><literal type="string" pos:line="43" pos:column="24">"%d * %d &gt;= 100\n"<pos:position pos:line="43" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="44">i<pos:position pos:line="43" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="47">j<pos:position pos:line="43" pos:column="48"/></name></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt>
		<comment type="line" pos:line="44" pos:column="17">// j = 5;</comment>
	}<pos:position pos:line="45" pos:column="10"/></block></else></if>

	<return pos:line="47" pos:column="9">return <expr><literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr>;<pos:position pos:line="47" pos:column="18"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function>
</unit>

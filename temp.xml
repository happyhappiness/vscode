<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/repos/httpd-2.0.44/modules/proxy/mod_proxy.c" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/* ====================================================================
 * The Apache Software License, Version 1.1
 *
 * Copyright (c) 2000-2002 The Apache Software Foundation.  All rights
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The end-user documentation included with the redistribution,
 *    if any, must include the following acknowledgment:
 *       "This product includes software developed by the
 *        Apache Software Foundation (http://www.apache.org/)."
 *    Alternately, this acknowledgment may appear in the software itself,
 *    if and wherever such third-party acknowledgments normally appear.
 *
 * 4. The names "Apache" and "Apache Software Foundation" must
 *    not be used to endorse or promote products derived from this
 *    software without prior written permission. For written
 *    permission, please contact apache@apache.org.
 *
 * 5. Products derived from this software may not be called "Apache",
 *    nor may "Apache" appear in their name, without prior written
 *    permission of the Apache Software Foundation.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * ====================================================================
 *
 * This software consists of voluntary contributions made by many
 * individuals on behalf of the Apache Software Foundation.  For more
 * information on the Apache Software Foundation, please see
 * &lt;http://www.apache.org/&gt;.
 *
 * Portions of this software are based upon public domain software
 * originally written at the National Center for Supercomputing Applications,
 * University of Illinois, Urbana-Champaign.
 */</comment>

<cpp:define pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">define<pos:position pos:line="59" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="59" pos:column="9">CORE_PRIVATE<pos:position pos:line="59" pos:column="21"/></name></cpp:macro></cpp:define>

<cpp:include pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">include<pos:position pos:line="61" pos:column="9"/></cpp:directive> <cpp:file pos:line="61" pos:column="10">"mod_proxy.h"<pos:position pos:line="61" pos:column="23"/></cpp:file></cpp:include>
<cpp:include pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">include<pos:position pos:line="62" pos:column="9"/></cpp:directive> <cpp:file pos:line="62" pos:column="10">"mod_core.h"<pos:position pos:line="62" pos:column="22"/></cpp:file></cpp:include>

<cpp:include pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">include<pos:position pos:line="64" pos:column="9"/></cpp:directive> <cpp:file pos:line="64" pos:column="10">"apr_optional.h"<pos:position pos:line="64" pos:column="26"/></cpp:file></cpp:include>

<cpp:ifndef pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">ifndef<pos:position pos:line="66" pos:column="8"/></cpp:directive> <name pos:line="66" pos:column="9">MAX<pos:position pos:line="66" pos:column="12"/></name></cpp:ifndef>
<cpp:define pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">define<pos:position pos:line="67" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="67" pos:column="9">MAX<pos:position pos:line="67" pos:column="12"/></name><parameter_list pos:line="67" pos:column="12">(<parameter><type><name pos:line="67" pos:column="13">x<pos:position pos:line="67" pos:column="14"/></name></type></parameter>,<parameter><type><name pos:line="67" pos:column="15">y<pos:position pos:line="67" pos:column="16"/></name></type></parameter>)<pos:position pos:line="67" pos:column="17"/></parameter_list></cpp:macro> <cpp:value pos:line="67" pos:column="18">((x) &gt;= (y) ? (x) : (y))<pos:position pos:line="67" pos:column="42"/></cpp:value></cpp:define>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="70" pos:column="1">/*
 * A Web proxy module. Stages:
 *
 *  translate_name: set filename to proxy:&lt;URL&gt;
 *  map_to_storage: run proxy_walk (rather than directory_walk/file_walk)
 *                  can't trust directory_walk/file_walk since these are
 *                  not in our filesystem.  Prevents mod_http from serving
 *                  the TRACE request we will set aside to handle later.
 *  type_checker:   set type to PROXY_MAGIC_TYPE if filename begins proxy:
 *  fix_ups:        convert the URL stored in the filename to the
 *                  canonical form.
 *  handler:        handle proxy requests
 */</comment>

<comment type="block" pos:line="84" pos:column="1">/* -------------------------------------------------------------- */</comment>
<comment type="block" pos:line="85" pos:column="1">/* Translate the URL into a 'filename' */</comment>

<function><specifier pos:line="87" pos:column="1">static<pos:position pos:line="87" pos:column="7"/></specifier> <type><name pos:line="87" pos:column="8">int<pos:position pos:line="87" pos:column="11"/></name></type> <name pos:line="87" pos:column="12">alias_match<pos:position pos:line="87" pos:column="23"/></name><parameter_list pos:line="87" pos:column="23">(<parameter><decl><type><specifier pos:line="87" pos:column="24">const<pos:position pos:line="87" pos:column="29"/></specifier> <name pos:line="87" pos:column="30">char<pos:position pos:line="87" pos:column="34"/></name> <modifier pos:line="87" pos:column="35">*<pos:position pos:line="87" pos:column="36"/></modifier></type><name pos:line="87" pos:column="36">uri<pos:position pos:line="87" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="87" pos:column="41">const<pos:position pos:line="87" pos:column="46"/></specifier> <name pos:line="87" pos:column="47">char<pos:position pos:line="87" pos:column="51"/></name> <modifier pos:line="87" pos:column="52">*<pos:position pos:line="87" pos:column="53"/></modifier></type><name pos:line="87" pos:column="53">alias_fakename<pos:position pos:line="87" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="87" pos:column="68"/></parameter_list>
<block pos:line="88" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="89" pos:column="5">const<pos:position pos:line="89" pos:column="10"/></specifier> <name pos:line="89" pos:column="11">char<pos:position pos:line="89" pos:column="15"/></name> <modifier pos:line="89" pos:column="16">*<pos:position pos:line="89" pos:column="17"/></modifier></type><name pos:line="89" pos:column="17">end_fakename<pos:position pos:line="89" pos:column="29"/></name> <init pos:line="89" pos:column="30">= <expr><name pos:line="89" pos:column="32">alias_fakename<pos:position pos:line="89" pos:column="46"/></name> <operator pos:line="89" pos:column="47">+<pos:position pos:line="89" pos:column="48"/></operator> <call><name pos:line="89" pos:column="49">strlen<pos:position pos:line="89" pos:column="55"/></name><argument_list pos:line="89" pos:column="55">(<argument><expr><name pos:line="89" pos:column="56">alias_fakename<pos:position pos:line="89" pos:column="70"/></name></expr></argument>)<pos:position pos:line="89" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="89" pos:column="72"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="90" pos:column="5">const<pos:position pos:line="90" pos:column="10"/></specifier> <name pos:line="90" pos:column="11">char<pos:position pos:line="90" pos:column="15"/></name> <modifier pos:line="90" pos:column="16">*<pos:position pos:line="90" pos:column="17"/></modifier></type><name pos:line="90" pos:column="17">aliasp<pos:position pos:line="90" pos:column="23"/></name> <init pos:line="90" pos:column="24">= <expr><name pos:line="90" pos:column="26">alias_fakename<pos:position pos:line="90" pos:column="40"/></name></expr></init></decl>, <modifier pos:line="90" pos:column="42">*<pos:position pos:line="90" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="90" pos:column="43">urip<pos:position pos:line="90" pos:column="47"/></name> <init pos:line="90" pos:column="48">= <expr><name pos:line="90" pos:column="50">uri<pos:position pos:line="90" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="90" pos:column="54"/></decl_stmt>

    <while pos:line="92" pos:column="5">while <condition pos:line="92" pos:column="11">(<expr><name pos:line="92" pos:column="12">aliasp<pos:position pos:line="92" pos:column="18"/></name> <operator pos:line="92" pos:column="19">&lt;<pos:position pos:line="92" pos:column="23"/></operator> <name pos:line="92" pos:column="21">end_fakename<pos:position pos:line="92" pos:column="33"/></name></expr>)<pos:position pos:line="92" pos:column="34"/></condition> <block pos:line="92" pos:column="35">{
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><operator pos:line="93" pos:column="13">*<pos:position pos:line="93" pos:column="14"/></operator><name pos:line="93" pos:column="14">aliasp<pos:position pos:line="93" pos:column="20"/></name> <operator pos:line="93" pos:column="21">==<pos:position pos:line="93" pos:column="23"/></operator> <literal type="char" pos:line="93" pos:column="24">'/'<pos:position pos:line="93" pos:column="27"/></literal></expr>)<pos:position pos:line="93" pos:column="28"/></condition><then pos:line="93" pos:column="28"> <block pos:line="93" pos:column="29">{
            <comment type="block" pos:line="94" pos:column="13">/* any number of '/' in the alias matches any number in
             * the supplied URI, but there must be at least one...
             */</comment>
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><operator pos:line="97" pos:column="17">*<pos:position pos:line="97" pos:column="18"/></operator><name pos:line="97" pos:column="18">urip<pos:position pos:line="97" pos:column="22"/></name> <operator pos:line="97" pos:column="23">!=<pos:position pos:line="97" pos:column="25"/></operator> <literal type="char" pos:line="97" pos:column="26">'/'<pos:position pos:line="97" pos:column="29"/></literal></expr>)<pos:position pos:line="97" pos:column="30"/></condition><then pos:line="97" pos:column="30">
                <block type="pseudo"><return pos:line="98" pos:column="17">return <expr><literal type="number" pos:line="98" pos:column="24">0<pos:position pos:line="98" pos:column="25"/></literal></expr>;<pos:position pos:line="98" pos:column="26"/></return></block></then></if>

            <while pos:line="100" pos:column="13">while <condition pos:line="100" pos:column="19">(<expr><operator pos:line="100" pos:column="20">*<pos:position pos:line="100" pos:column="21"/></operator><name pos:line="100" pos:column="21">aliasp<pos:position pos:line="100" pos:column="27"/></name> <operator pos:line="100" pos:column="28">==<pos:position pos:line="100" pos:column="30"/></operator> <literal type="char" pos:line="100" pos:column="31">'/'<pos:position pos:line="100" pos:column="34"/></literal></expr>)<pos:position pos:line="100" pos:column="35"/></condition>
                <block type="pseudo"><expr_stmt><expr><operator pos:line="101" pos:column="17">++<pos:position pos:line="101" pos:column="19"/></operator><name pos:line="101" pos:column="19">aliasp<pos:position pos:line="101" pos:column="25"/></name></expr>;<pos:position pos:line="101" pos:column="26"/></expr_stmt></block></while>
            <while pos:line="102" pos:column="13">while <condition pos:line="102" pos:column="19">(<expr><operator pos:line="102" pos:column="20">*<pos:position pos:line="102" pos:column="21"/></operator><name pos:line="102" pos:column="21">urip<pos:position pos:line="102" pos:column="25"/></name> <operator pos:line="102" pos:column="26">==<pos:position pos:line="102" pos:column="28"/></operator> <literal type="char" pos:line="102" pos:column="29">'/'<pos:position pos:line="102" pos:column="32"/></literal></expr>)<pos:position pos:line="102" pos:column="33"/></condition>
                <block type="pseudo"><expr_stmt><expr><operator pos:line="103" pos:column="17">++<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="19">urip<pos:position pos:line="103" pos:column="23"/></name></expr>;<pos:position pos:line="103" pos:column="24"/></expr_stmt></block></while>
        }<pos:position pos:line="104" pos:column="10"/></block></then>
        <else pos:line="105" pos:column="9">else <block pos:line="105" pos:column="14">{
            <comment type="block" pos:line="106" pos:column="13">/* Other characters are compared literally */</comment>
            <if pos:line="107" pos:column="13">if <condition pos:line="107" pos:column="16">(<expr><operator pos:line="107" pos:column="17">*<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="18">urip<pos:position pos:line="107" pos:column="22"/></name><operator pos:line="107" pos:column="22">++<pos:position pos:line="107" pos:column="24"/></operator> <operator pos:line="107" pos:column="25">!=<pos:position pos:line="107" pos:column="27"/></operator> <operator pos:line="107" pos:column="28">*<pos:position pos:line="107" pos:column="29"/></operator><name pos:line="107" pos:column="29">aliasp<pos:position pos:line="107" pos:column="35"/></name><operator pos:line="107" pos:column="35">++<pos:position pos:line="107" pos:column="37"/></operator></expr>)<pos:position pos:line="107" pos:column="38"/></condition><then pos:line="107" pos:column="38">
                <block type="pseudo"><return pos:line="108" pos:column="17">return <expr><literal type="number" pos:line="108" pos:column="24">0<pos:position pos:line="108" pos:column="25"/></literal></expr>;<pos:position pos:line="108" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="109" pos:column="10"/></block></else></if>
    }<pos:position pos:line="110" pos:column="6"/></block></while>

    <comment type="block" pos:line="112" pos:column="5">/* Check last alias path component matched all the way */</comment>

    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><name><name pos:line="114" pos:column="9">aliasp<pos:position pos:line="114" pos:column="15"/></name><index pos:line="114" pos:column="15">[<expr><operator pos:line="114" pos:column="16">-<pos:position pos:line="114" pos:column="17"/></operator><literal type="number" pos:line="114" pos:column="17">1<pos:position pos:line="114" pos:column="18"/></literal></expr>]<pos:position pos:line="114" pos:column="19"/></index></name> <operator pos:line="114" pos:column="20">!=<pos:position pos:line="114" pos:column="22"/></operator> <literal type="char" pos:line="114" pos:column="23">'/'<pos:position pos:line="114" pos:column="26"/></literal> <operator pos:line="114" pos:column="27">&amp;&amp;<pos:position pos:line="114" pos:column="37"/></operator> <operator pos:line="114" pos:column="30">*<pos:position pos:line="114" pos:column="31"/></operator><name pos:line="114" pos:column="31">urip<pos:position pos:line="114" pos:column="35"/></name> <operator pos:line="114" pos:column="36">!=<pos:position pos:line="114" pos:column="38"/></operator> <literal type="char" pos:line="114" pos:column="39">'\0'<pos:position pos:line="114" pos:column="43"/></literal> <operator pos:line="114" pos:column="44">&amp;&amp;<pos:position pos:line="114" pos:column="54"/></operator> <operator pos:line="114" pos:column="47">*<pos:position pos:line="114" pos:column="48"/></operator><name pos:line="114" pos:column="48">urip<pos:position pos:line="114" pos:column="52"/></name> <operator pos:line="114" pos:column="53">!=<pos:position pos:line="114" pos:column="55"/></operator> <literal type="char" pos:line="114" pos:column="56">'/'<pos:position pos:line="114" pos:column="59"/></literal></expr>)<pos:position pos:line="114" pos:column="60"/></condition><then pos:line="114" pos:column="60">
        <block type="pseudo"><return pos:line="115" pos:column="9">return <expr><literal type="number" pos:line="115" pos:column="16">0<pos:position pos:line="115" pos:column="17"/></literal></expr>;<pos:position pos:line="115" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="117" pos:column="5">/* Return number of characters from URI which matched (may be
     * greater than length of alias, since we may have matched
     * doubled slashes)
     */</comment>

    <return pos:line="122" pos:column="5">return <expr><name pos:line="122" pos:column="12">urip<pos:position pos:line="122" pos:column="16"/></name> <operator pos:line="122" pos:column="17">-<pos:position pos:line="122" pos:column="18"/></operator> <name pos:line="122" pos:column="19">uri<pos:position pos:line="122" pos:column="22"/></name></expr>;<pos:position pos:line="122" pos:column="23"/></return>
}<pos:position pos:line="123" pos:column="2"/></block></function>

<comment type="block" pos:line="125" pos:column="1">/* Detect if an absoluteURI should be proxied or not.  Note that we
 * have to do this during this phase because later phases are
 * "short-circuiting"... i.e. translate_names will end when the first
 * module returns OK.  So for example, if the request is something like:
 *
 * GET http://othervhost/cgi-bin/printenv HTTP/1.0
 *
 * mod_alias will notice the /cgi-bin part and ScriptAlias it and
 * short-circuit the proxy... just because of the ordering in the
 * configuration file.
 */</comment>
<function><specifier pos:line="136" pos:column="1">static<pos:position pos:line="136" pos:column="7"/></specifier> <type><name pos:line="136" pos:column="8">int<pos:position pos:line="136" pos:column="11"/></name></type> <name pos:line="136" pos:column="12">proxy_detect<pos:position pos:line="136" pos:column="24"/></name><parameter_list pos:line="136" pos:column="24">(<parameter><decl><type><name pos:line="136" pos:column="25">request_rec<pos:position pos:line="136" pos:column="36"/></name> <modifier pos:line="136" pos:column="37">*<pos:position pos:line="136" pos:column="38"/></modifier></type><name pos:line="136" pos:column="38">r<pos:position pos:line="136" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="136" pos:column="40"/></parameter_list>
<block pos:line="137" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="138" pos:column="5">void<pos:position pos:line="138" pos:column="9"/></name> <modifier pos:line="138" pos:column="10">*<pos:position pos:line="138" pos:column="11"/></modifier></type><name pos:line="138" pos:column="11">sconf<pos:position pos:line="138" pos:column="16"/></name> <init pos:line="138" pos:column="17">= <expr><name><name pos:line="138" pos:column="19">r<pos:position pos:line="138" pos:column="20"/></name><operator pos:line="138" pos:column="20">-&gt;<pos:position pos:line="138" pos:column="25"/></operator><name pos:line="138" pos:column="22">server<pos:position pos:line="138" pos:column="28"/></name><operator pos:line="138" pos:column="28">-&gt;<pos:position pos:line="138" pos:column="33"/></operator><name pos:line="138" pos:column="30">module_config<pos:position pos:line="138" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="138" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="139" pos:column="5">proxy_server_conf<pos:position pos:line="139" pos:column="22"/></name> <modifier pos:line="139" pos:column="23">*<pos:position pos:line="139" pos:column="24"/></modifier></type><name pos:line="139" pos:column="24">conf<pos:position pos:line="139" pos:column="28"/></name></decl>;<pos:position pos:line="139" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><name pos:line="141" pos:column="5">conf<pos:position pos:line="141" pos:column="9"/></name> <operator pos:line="141" pos:column="10">=<pos:position pos:line="141" pos:column="11"/></operator> <operator pos:line="141" pos:column="12">(<pos:position pos:line="141" pos:column="13"/></operator><name pos:line="141" pos:column="13">proxy_server_conf<pos:position pos:line="141" pos:column="30"/></name> <operator pos:line="141" pos:column="31">*<pos:position pos:line="141" pos:column="32"/></operator><operator pos:line="141" pos:column="32">)<pos:position pos:line="141" pos:column="33"/></operator> <call><name pos:line="141" pos:column="34">ap_get_module_config<pos:position pos:line="141" pos:column="54"/></name><argument_list pos:line="141" pos:column="54">(<argument><expr><name pos:line="141" pos:column="55">sconf<pos:position pos:line="141" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="62">&amp;<pos:position pos:line="141" pos:column="67"/></operator><name pos:line="141" pos:column="63">proxy_module<pos:position pos:line="141" pos:column="75"/></name></expr></argument>)<pos:position pos:line="141" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="77"/></expr_stmt>

    <comment type="block" pos:line="143" pos:column="5">/* Ick... msvc (perhaps others) promotes ternary short results to int */</comment>

    <if pos:line="145" pos:column="5">if <condition pos:line="145" pos:column="8">(<expr><name><name pos:line="145" pos:column="9">conf<pos:position pos:line="145" pos:column="13"/></name><operator pos:line="145" pos:column="13">-&gt;<pos:position pos:line="145" pos:column="18"/></operator><name pos:line="145" pos:column="15">req<pos:position pos:line="145" pos:column="18"/></name></name> <operator pos:line="145" pos:column="19">&amp;&amp;<pos:position pos:line="145" pos:column="29"/></operator> <name><name pos:line="145" pos:column="22">r<pos:position pos:line="145" pos:column="23"/></name><operator pos:line="145" pos:column="23">-&gt;<pos:position pos:line="145" pos:column="28"/></operator><name pos:line="145" pos:column="25">parsed_uri<pos:position pos:line="145" pos:column="35"/></name><operator pos:line="145" pos:column="35">.<pos:position pos:line="145" pos:column="36"/></operator><name pos:line="145" pos:column="36">scheme<pos:position pos:line="145" pos:column="42"/></name></name></expr>)<pos:position pos:line="145" pos:column="43"/></condition><then pos:line="145" pos:column="43"> <block pos:line="145" pos:column="44">{
        <comment type="block" pos:line="146" pos:column="9">/* but it might be something vhosted */</comment>
        <if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><operator pos:line="147" pos:column="13">!<pos:position pos:line="147" pos:column="14"/></operator><operator pos:line="147" pos:column="14">(<pos:position pos:line="147" pos:column="15"/></operator><name><name pos:line="147" pos:column="15">r<pos:position pos:line="147" pos:column="16"/></name><operator pos:line="147" pos:column="16">-&gt;<pos:position pos:line="147" pos:column="21"/></operator><name pos:line="147" pos:column="18">parsed_uri<pos:position pos:line="147" pos:column="28"/></name><operator pos:line="147" pos:column="28">.<pos:position pos:line="147" pos:column="29"/></operator><name pos:line="147" pos:column="29">hostname<pos:position pos:line="147" pos:column="37"/></name></name>
              <operator pos:line="148" pos:column="15">&amp;&amp;<pos:position pos:line="148" pos:column="25"/></operator> <operator pos:line="148" pos:column="18">!<pos:position pos:line="148" pos:column="19"/></operator><call><name pos:line="148" pos:column="19">strcasecmp<pos:position pos:line="148" pos:column="29"/></name><argument_list pos:line="148" pos:column="29">(<argument><expr><name><name pos:line="148" pos:column="30">r<pos:position pos:line="148" pos:column="31"/></name><operator pos:line="148" pos:column="31">-&gt;<pos:position pos:line="148" pos:column="36"/></operator><name pos:line="148" pos:column="33">parsed_uri<pos:position pos:line="148" pos:column="43"/></name><operator pos:line="148" pos:column="43">.<pos:position pos:line="148" pos:column="44"/></operator><name pos:line="148" pos:column="44">scheme<pos:position pos:line="148" pos:column="50"/></name></name></expr></argument>, <argument><expr><call><name pos:line="148" pos:column="52">ap_http_method<pos:position pos:line="148" pos:column="66"/></name><argument_list pos:line="148" pos:column="66">(<argument><expr><name pos:line="148" pos:column="67">r<pos:position pos:line="148" pos:column="68"/></name></expr></argument>)<pos:position pos:line="148" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="148" pos:column="70"/></argument_list></call>
              <operator pos:line="149" pos:column="15">&amp;&amp;<pos:position pos:line="149" pos:column="25"/></operator> <call><name pos:line="149" pos:column="18">ap_matches_request_vhost<pos:position pos:line="149" pos:column="42"/></name><argument_list pos:line="149" pos:column="42">(<argument><expr><name pos:line="149" pos:column="43">r<pos:position pos:line="149" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="46">r<pos:position pos:line="149" pos:column="47"/></name><operator pos:line="149" pos:column="47">-&gt;<pos:position pos:line="149" pos:column="52"/></operator><name pos:line="149" pos:column="49">parsed_uri<pos:position pos:line="149" pos:column="59"/></name><operator pos:line="149" pos:column="59">.<pos:position pos:line="149" pos:column="60"/></operator><name pos:line="149" pos:column="60">hostname<pos:position pos:line="149" pos:column="68"/></name></name></expr></argument>,
                                          <argument><expr><call pos:line="150" pos:column="43">(<name pos:line="150" pos:column="44">apr_port_t<pos:position pos:line="150" pos:column="54"/></name>)<argument_list pos:line="150" pos:column="55">(<argument><expr><ternary><condition><expr><name><name pos:line="150" pos:column="56">r<pos:position pos:line="150" pos:column="57"/></name><operator pos:line="150" pos:column="57">-&gt;<pos:position pos:line="150" pos:column="62"/></operator><name pos:line="150" pos:column="59">parsed_uri<pos:position pos:line="150" pos:column="69"/></name><operator pos:line="150" pos:column="69">.<pos:position pos:line="150" pos:column="70"/></operator><name pos:line="150" pos:column="70">port_str<pos:position pos:line="150" pos:column="78"/></name></name></expr> ?<pos:position pos:line="150" pos:column="80"/></condition><then pos:line="150" pos:column="80"> <expr><name><name pos:line="150" pos:column="81">r<pos:position pos:line="150" pos:column="82"/></name><operator pos:line="150" pos:column="82">-&gt;<pos:position pos:line="150" pos:column="87"/></operator><name pos:line="150" pos:column="84">parsed_uri<pos:position pos:line="150" pos:column="94"/></name><operator pos:line="150" pos:column="94">.<pos:position pos:line="150" pos:column="95"/></operator><name pos:line="150" pos:column="95">port<pos:position pos:line="150" pos:column="99"/></name></name></expr> 
                                                       <pos:position pos:line="151" pos:column="56"/></then><else pos:line="151" pos:column="56">: <expr><call><name pos:line="151" pos:column="58">ap_default_port<pos:position pos:line="151" pos:column="73"/></name><argument_list pos:line="151" pos:column="73">(<argument><expr><name pos:line="151" pos:column="74">r<pos:position pos:line="151" pos:column="75"/></name></expr></argument>)<pos:position pos:line="151" pos:column="76"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="151" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="151" pos:column="78"/></argument_list></call><operator pos:line="151" pos:column="78">)<pos:position pos:line="151" pos:column="79"/></operator></expr>)<pos:position pos:line="151" pos:column="80"/></condition><then pos:line="151" pos:column="80"> <block pos:line="151" pos:column="81">{
            <expr_stmt><expr><name><name pos:line="152" pos:column="13">r<pos:position pos:line="152" pos:column="14"/></name><operator pos:line="152" pos:column="14">-&gt;<pos:position pos:line="152" pos:column="19"/></operator><name pos:line="152" pos:column="16">proxyreq<pos:position pos:line="152" pos:column="24"/></name></name> <operator pos:line="152" pos:column="25">=<pos:position pos:line="152" pos:column="26"/></operator> <name pos:line="152" pos:column="27">PROXYREQ_PROXY<pos:position pos:line="152" pos:column="41"/></name></expr>;<pos:position pos:line="152" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="153" pos:column="13">r<pos:position pos:line="153" pos:column="14"/></name><operator pos:line="153" pos:column="14">-&gt;<pos:position pos:line="153" pos:column="19"/></operator><name pos:line="153" pos:column="16">uri<pos:position pos:line="153" pos:column="19"/></name></name> <operator pos:line="153" pos:column="20">=<pos:position pos:line="153" pos:column="21"/></operator> <name><name pos:line="153" pos:column="22">r<pos:position pos:line="153" pos:column="23"/></name><operator pos:line="153" pos:column="23">-&gt;<pos:position pos:line="153" pos:column="28"/></operator><name pos:line="153" pos:column="25">unparsed_uri<pos:position pos:line="153" pos:column="37"/></name></name></expr>;<pos:position pos:line="153" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="154" pos:column="13">r<pos:position pos:line="154" pos:column="14"/></name><operator pos:line="154" pos:column="14">-&gt;<pos:position pos:line="154" pos:column="19"/></operator><name pos:line="154" pos:column="16">filename<pos:position pos:line="154" pos:column="24"/></name></name> <operator pos:line="154" pos:column="25">=<pos:position pos:line="154" pos:column="26"/></operator> <call><name pos:line="154" pos:column="27">apr_pstrcat<pos:position pos:line="154" pos:column="38"/></name><argument_list pos:line="154" pos:column="38">(<argument><expr><name><name pos:line="154" pos:column="39">r<pos:position pos:line="154" pos:column="40"/></name><operator pos:line="154" pos:column="40">-&gt;<pos:position pos:line="154" pos:column="45"/></operator><name pos:line="154" pos:column="42">pool<pos:position pos:line="154" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="48">"proxy:"<pos:position pos:line="154" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="58">r<pos:position pos:line="154" pos:column="59"/></name><operator pos:line="154" pos:column="59">-&gt;<pos:position pos:line="154" pos:column="64"/></operator><name pos:line="154" pos:column="61">uri<pos:position pos:line="154" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="66">NULL<pos:position pos:line="154" pos:column="70"/></name></expr></argument>)<pos:position pos:line="154" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="155" pos:column="13">r<pos:position pos:line="155" pos:column="14"/></name><operator pos:line="155" pos:column="14">-&gt;<pos:position pos:line="155" pos:column="19"/></operator><name pos:line="155" pos:column="16">handler<pos:position pos:line="155" pos:column="23"/></name></name> <operator pos:line="155" pos:column="24">=<pos:position pos:line="155" pos:column="25"/></operator> <literal type="string" pos:line="155" pos:column="26">"proxy-server"<pos:position pos:line="155" pos:column="40"/></literal></expr>;<pos:position pos:line="155" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="156" pos:column="10"/></block></then></if>
    }<pos:position pos:line="157" pos:column="6"/></block></then>
    <comment type="block" pos:line="158" pos:column="5">/* We need special treatment for CONNECT proxying: it has no scheme part */</comment>
    <elseif pos:line="159" pos:column="5">else <if pos:line="159" pos:column="10">if <condition pos:line="159" pos:column="13">(<expr><name><name pos:line="159" pos:column="14">conf<pos:position pos:line="159" pos:column="18"/></name><operator pos:line="159" pos:column="18">-&gt;<pos:position pos:line="159" pos:column="23"/></operator><name pos:line="159" pos:column="20">req<pos:position pos:line="159" pos:column="23"/></name></name> <operator pos:line="159" pos:column="24">&amp;&amp;<pos:position pos:line="159" pos:column="34"/></operator> <name><name pos:line="159" pos:column="27">r<pos:position pos:line="159" pos:column="28"/></name><operator pos:line="159" pos:column="28">-&gt;<pos:position pos:line="159" pos:column="33"/></operator><name pos:line="159" pos:column="30">method_number<pos:position pos:line="159" pos:column="43"/></name></name> <operator pos:line="159" pos:column="44">==<pos:position pos:line="159" pos:column="46"/></operator> <name pos:line="159" pos:column="47">M_CONNECT<pos:position pos:line="159" pos:column="56"/></name>
             <operator pos:line="160" pos:column="14">&amp;&amp;<pos:position pos:line="160" pos:column="24"/></operator> <name><name pos:line="160" pos:column="17">r<pos:position pos:line="160" pos:column="18"/></name><operator pos:line="160" pos:column="18">-&gt;<pos:position pos:line="160" pos:column="23"/></operator><name pos:line="160" pos:column="20">parsed_uri<pos:position pos:line="160" pos:column="30"/></name><operator pos:line="160" pos:column="30">.<pos:position pos:line="160" pos:column="31"/></operator><name pos:line="160" pos:column="31">hostname<pos:position pos:line="160" pos:column="39"/></name></name>
             <operator pos:line="161" pos:column="14">&amp;&amp;<pos:position pos:line="161" pos:column="24"/></operator> <name><name pos:line="161" pos:column="17">r<pos:position pos:line="161" pos:column="18"/></name><operator pos:line="161" pos:column="18">-&gt;<pos:position pos:line="161" pos:column="23"/></operator><name pos:line="161" pos:column="20">parsed_uri<pos:position pos:line="161" pos:column="30"/></name><operator pos:line="161" pos:column="30">.<pos:position pos:line="161" pos:column="31"/></operator><name pos:line="161" pos:column="31">port_str<pos:position pos:line="161" pos:column="39"/></name></name></expr>)<pos:position pos:line="161" pos:column="40"/></condition><then pos:line="161" pos:column="40"> <block pos:line="161" pos:column="41">{
        <expr_stmt><expr><name><name pos:line="162" pos:column="9">r<pos:position pos:line="162" pos:column="10"/></name><operator pos:line="162" pos:column="10">-&gt;<pos:position pos:line="162" pos:column="15"/></operator><name pos:line="162" pos:column="12">proxyreq<pos:position pos:line="162" pos:column="20"/></name></name> <operator pos:line="162" pos:column="21">=<pos:position pos:line="162" pos:column="22"/></operator> <name pos:line="162" pos:column="23">PROXYREQ_PROXY<pos:position pos:line="162" pos:column="37"/></name></expr>;<pos:position pos:line="162" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="163" pos:column="9">r<pos:position pos:line="163" pos:column="10"/></name><operator pos:line="163" pos:column="10">-&gt;<pos:position pos:line="163" pos:column="15"/></operator><name pos:line="163" pos:column="12">uri<pos:position pos:line="163" pos:column="15"/></name></name> <operator pos:line="163" pos:column="16">=<pos:position pos:line="163" pos:column="17"/></operator> <name><name pos:line="163" pos:column="18">r<pos:position pos:line="163" pos:column="19"/></name><operator pos:line="163" pos:column="19">-&gt;<pos:position pos:line="163" pos:column="24"/></operator><name pos:line="163" pos:column="21">unparsed_uri<pos:position pos:line="163" pos:column="33"/></name></name></expr>;<pos:position pos:line="163" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="164" pos:column="9">r<pos:position pos:line="164" pos:column="10"/></name><operator pos:line="164" pos:column="10">-&gt;<pos:position pos:line="164" pos:column="15"/></operator><name pos:line="164" pos:column="12">filename<pos:position pos:line="164" pos:column="20"/></name></name> <operator pos:line="164" pos:column="21">=<pos:position pos:line="164" pos:column="22"/></operator> <call><name pos:line="164" pos:column="23">apr_pstrcat<pos:position pos:line="164" pos:column="34"/></name><argument_list pos:line="164" pos:column="34">(<argument><expr><name><name pos:line="164" pos:column="35">r<pos:position pos:line="164" pos:column="36"/></name><operator pos:line="164" pos:column="36">-&gt;<pos:position pos:line="164" pos:column="41"/></operator><name pos:line="164" pos:column="38">pool<pos:position pos:line="164" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="164" pos:column="44">"proxy:"<pos:position pos:line="164" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="164" pos:column="54">r<pos:position pos:line="164" pos:column="55"/></name><operator pos:line="164" pos:column="55">-&gt;<pos:position pos:line="164" pos:column="60"/></operator><name pos:line="164" pos:column="57">uri<pos:position pos:line="164" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="62">NULL<pos:position pos:line="164" pos:column="66"/></name></expr></argument>)<pos:position pos:line="164" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="165" pos:column="9">r<pos:position pos:line="165" pos:column="10"/></name><operator pos:line="165" pos:column="10">-&gt;<pos:position pos:line="165" pos:column="15"/></operator><name pos:line="165" pos:column="12">handler<pos:position pos:line="165" pos:column="19"/></name></name> <operator pos:line="165" pos:column="20">=<pos:position pos:line="165" pos:column="21"/></operator> <literal type="string" pos:line="165" pos:column="22">"proxy-server"<pos:position pos:line="165" pos:column="36"/></literal></expr>;<pos:position pos:line="165" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="166" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="167" pos:column="5">return <expr><name pos:line="167" pos:column="12">DECLINED<pos:position pos:line="167" pos:column="20"/></name></expr>;<pos:position pos:line="167" pos:column="21"/></return>
}<pos:position pos:line="168" pos:column="2"/></block></function>

<function><specifier pos:line="170" pos:column="1">static<pos:position pos:line="170" pos:column="7"/></specifier> <type><name pos:line="170" pos:column="8">int<pos:position pos:line="170" pos:column="11"/></name></type> <name pos:line="170" pos:column="12">proxy_trans<pos:position pos:line="170" pos:column="23"/></name><parameter_list pos:line="170" pos:column="23">(<parameter><decl><type><name pos:line="170" pos:column="24">request_rec<pos:position pos:line="170" pos:column="35"/></name> <modifier pos:line="170" pos:column="36">*<pos:position pos:line="170" pos:column="37"/></modifier></type><name pos:line="170" pos:column="37">r<pos:position pos:line="170" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="170" pos:column="39"/></parameter_list>
<block pos:line="171" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="172" pos:column="5">void<pos:position pos:line="172" pos:column="9"/></name> <modifier pos:line="172" pos:column="10">*<pos:position pos:line="172" pos:column="11"/></modifier></type><name pos:line="172" pos:column="11">sconf<pos:position pos:line="172" pos:column="16"/></name> <init pos:line="172" pos:column="17">= <expr><name><name pos:line="172" pos:column="19">r<pos:position pos:line="172" pos:column="20"/></name><operator pos:line="172" pos:column="20">-&gt;<pos:position pos:line="172" pos:column="25"/></operator><name pos:line="172" pos:column="22">server<pos:position pos:line="172" pos:column="28"/></name><operator pos:line="172" pos:column="28">-&gt;<pos:position pos:line="172" pos:column="33"/></operator><name pos:line="172" pos:column="30">module_config<pos:position pos:line="172" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="172" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="173" pos:column="5">proxy_server_conf<pos:position pos:line="173" pos:column="22"/></name> <modifier pos:line="173" pos:column="23">*<pos:position pos:line="173" pos:column="24"/></modifier></type><name pos:line="173" pos:column="24">conf<pos:position pos:line="173" pos:column="28"/></name> <init pos:line="173" pos:column="29">=
    <expr><operator pos:line="174" pos:column="5">(<pos:position pos:line="174" pos:column="6"/></operator><name pos:line="174" pos:column="6">proxy_server_conf<pos:position pos:line="174" pos:column="23"/></name> <operator pos:line="174" pos:column="24">*<pos:position pos:line="174" pos:column="25"/></operator><operator pos:line="174" pos:column="25">)<pos:position pos:line="174" pos:column="26"/></operator> <call><name pos:line="174" pos:column="27">ap_get_module_config<pos:position pos:line="174" pos:column="47"/></name><argument_list pos:line="174" pos:column="47">(<argument><expr><name pos:line="174" pos:column="48">sconf<pos:position pos:line="174" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="174" pos:column="55">&amp;<pos:position pos:line="174" pos:column="60"/></operator><name pos:line="174" pos:column="56">proxy_module<pos:position pos:line="174" pos:column="68"/></name></expr></argument>)<pos:position pos:line="174" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="174" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="175" pos:column="5">int<pos:position pos:line="175" pos:column="8"/></name></type> <name pos:line="175" pos:column="9">i<pos:position pos:line="175" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="175" pos:column="12">len<pos:position pos:line="175" pos:column="15"/></name></decl>;<pos:position pos:line="175" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="176" pos:column="5">struct<pos:position pos:line="176" pos:column="11"/></name> <name pos:line="176" pos:column="12">proxy_alias<pos:position pos:line="176" pos:column="23"/></name></name> <modifier pos:line="176" pos:column="24">*<pos:position pos:line="176" pos:column="25"/></modifier></type><name pos:line="176" pos:column="25">ent<pos:position pos:line="176" pos:column="28"/></name> <init pos:line="176" pos:column="29">= <expr><operator pos:line="176" pos:column="31">(<pos:position pos:line="176" pos:column="32"/></operator>struct <name pos:line="176" pos:column="39">proxy_alias<pos:position pos:line="176" pos:column="50"/></name> <operator pos:line="176" pos:column="51">*<pos:position pos:line="176" pos:column="52"/></operator><operator pos:line="176" pos:column="52">)<pos:position pos:line="176" pos:column="53"/></operator> <name><name pos:line="176" pos:column="54">conf<pos:position pos:line="176" pos:column="58"/></name><operator pos:line="176" pos:column="58">-&gt;<pos:position pos:line="176" pos:column="63"/></operator><name pos:line="176" pos:column="60">aliases<pos:position pos:line="176" pos:column="67"/></name><operator pos:line="176" pos:column="67">-&gt;<pos:position pos:line="176" pos:column="72"/></operator><name pos:line="176" pos:column="69">elts<pos:position pos:line="176" pos:column="73"/></name></name></expr></init></decl>;<pos:position pos:line="176" pos:column="74"/></decl_stmt>

    <if pos:line="178" pos:column="5">if <condition pos:line="178" pos:column="8">(<expr><name><name pos:line="178" pos:column="9">r<pos:position pos:line="178" pos:column="10"/></name><operator pos:line="178" pos:column="10">-&gt;<pos:position pos:line="178" pos:column="15"/></operator><name pos:line="178" pos:column="12">proxyreq<pos:position pos:line="178" pos:column="20"/></name></name></expr>)<pos:position pos:line="178" pos:column="21"/></condition><then pos:line="178" pos:column="21"> <block pos:line="178" pos:column="22">{
        <comment type="block" pos:line="179" pos:column="9">/* someone has already set up the proxy, it was possibly ourselves
         * in proxy_detect
         */</comment>
        <return pos:line="182" pos:column="9">return <expr><name pos:line="182" pos:column="16">OK<pos:position pos:line="182" pos:column="18"/></name></expr>;<pos:position pos:line="182" pos:column="19"/></return>
    }<pos:position pos:line="183" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="185" pos:column="5">/* XXX: since r-&gt;uri has been manipulated already we're not really
     * compliant with RFC1945 at this point.  But this probably isn't
     * an issue because this is a hybrid proxy/origin server.
     */</comment>

    <for pos:line="190" pos:column="5">for <control pos:line="190" pos:column="9">(<init><expr><name pos:line="190" pos:column="10">i<pos:position pos:line="190" pos:column="11"/></name> <operator pos:line="190" pos:column="12">=<pos:position pos:line="190" pos:column="13"/></operator> <literal type="number" pos:line="190" pos:column="14">0<pos:position pos:line="190" pos:column="15"/></literal></expr>;<pos:position pos:line="190" pos:column="16"/></init> <condition><expr><name pos:line="190" pos:column="17">i<pos:position pos:line="190" pos:column="18"/></name> <operator pos:line="190" pos:column="19">&lt;<pos:position pos:line="190" pos:column="23"/></operator> <name><name pos:line="190" pos:column="21">conf<pos:position pos:line="190" pos:column="25"/></name><operator pos:line="190" pos:column="25">-&gt;<pos:position pos:line="190" pos:column="30"/></operator><name pos:line="190" pos:column="27">aliases<pos:position pos:line="190" pos:column="34"/></name><operator pos:line="190" pos:column="34">-&gt;<pos:position pos:line="190" pos:column="39"/></operator><name pos:line="190" pos:column="36">nelts<pos:position pos:line="190" pos:column="41"/></name></name></expr>;<pos:position pos:line="190" pos:column="42"/></condition> <incr><expr><name pos:line="190" pos:column="43">i<pos:position pos:line="190" pos:column="44"/></name><operator pos:line="190" pos:column="44">++<pos:position pos:line="190" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="190" pos:column="47"/></control> <block pos:line="190" pos:column="48">{
        <expr_stmt><expr><name pos:line="191" pos:column="9">len<pos:position pos:line="191" pos:column="12"/></name> <operator pos:line="191" pos:column="13">=<pos:position pos:line="191" pos:column="14"/></operator> <call><name pos:line="191" pos:column="15">alias_match<pos:position pos:line="191" pos:column="26"/></name><argument_list pos:line="191" pos:column="26">(<argument><expr><name><name pos:line="191" pos:column="27">r<pos:position pos:line="191" pos:column="28"/></name><operator pos:line="191" pos:column="28">-&gt;<pos:position pos:line="191" pos:column="33"/></operator><name pos:line="191" pos:column="30">uri<pos:position pos:line="191" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="191" pos:column="35">ent<pos:position pos:line="191" pos:column="38"/></name><index pos:line="191" pos:column="38">[<expr><name pos:line="191" pos:column="39">i<pos:position pos:line="191" pos:column="40"/></name></expr>]<pos:position pos:line="191" pos:column="41"/></index></name><operator pos:line="191" pos:column="41">.<pos:position pos:line="191" pos:column="42"/></operator><name pos:line="191" pos:column="42">fake<pos:position pos:line="191" pos:column="46"/></name></expr></argument>)<pos:position pos:line="191" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="48"/></expr_stmt>

       <if pos:line="193" pos:column="8">if <condition pos:line="193" pos:column="11">(<expr><name pos:line="193" pos:column="12">len<pos:position pos:line="193" pos:column="15"/></name> <operator pos:line="193" pos:column="16">&gt;<pos:position pos:line="193" pos:column="20"/></operator> <literal type="number" pos:line="193" pos:column="18">0<pos:position pos:line="193" pos:column="19"/></literal></expr>)<pos:position pos:line="193" pos:column="20"/></condition><then pos:line="193" pos:column="20"> <block pos:line="193" pos:column="21">{
           <if pos:line="194" pos:column="12">if <condition pos:line="194" pos:column="15">(<expr><operator pos:line="194" pos:column="16">(<pos:position pos:line="194" pos:column="17"/></operator><name><name pos:line="194" pos:column="17">ent<pos:position pos:line="194" pos:column="20"/></name><index pos:line="194" pos:column="20">[<expr><name pos:line="194" pos:column="21">i<pos:position pos:line="194" pos:column="22"/></name></expr>]<pos:position pos:line="194" pos:column="23"/></index></name><operator pos:line="194" pos:column="23">.<pos:position pos:line="194" pos:column="24"/></operator><name><name pos:line="194" pos:column="24">real<pos:position pos:line="194" pos:column="28"/></name><index pos:line="194" pos:column="28">[<expr><literal type="number" pos:line="194" pos:column="29">0<pos:position pos:line="194" pos:column="30"/></literal></expr>]<pos:position pos:line="194" pos:column="31"/></index></name> <operator pos:line="194" pos:column="32">==<pos:position pos:line="194" pos:column="34"/></operator> <literal type="char" pos:line="194" pos:column="35">'!'<pos:position pos:line="194" pos:column="38"/></literal> <operator pos:line="194" pos:column="39">)<pos:position pos:line="194" pos:column="40"/></operator> <operator pos:line="194" pos:column="41">&amp;&amp;<pos:position pos:line="194" pos:column="51"/></operator> <operator pos:line="194" pos:column="44">(<pos:position pos:line="194" pos:column="45"/></operator> <name><name pos:line="194" pos:column="46">ent<pos:position pos:line="194" pos:column="49"/></name><index pos:line="194" pos:column="49">[<expr><name pos:line="194" pos:column="50">i<pos:position pos:line="194" pos:column="51"/></name></expr>]<pos:position pos:line="194" pos:column="52"/></index></name><operator pos:line="194" pos:column="52">.<pos:position pos:line="194" pos:column="53"/></operator><name><name pos:line="194" pos:column="53">real<pos:position pos:line="194" pos:column="57"/></name><index pos:line="194" pos:column="57">[<expr><literal type="number" pos:line="194" pos:column="58">1<pos:position pos:line="194" pos:column="59"/></literal></expr>]<pos:position pos:line="194" pos:column="60"/></index></name> <operator pos:line="194" pos:column="61">==<pos:position pos:line="194" pos:column="63"/></operator> <literal type="number" pos:line="194" pos:column="64">0<pos:position pos:line="194" pos:column="65"/></literal> <operator pos:line="194" pos:column="66">)<pos:position pos:line="194" pos:column="67"/></operator></expr>)<pos:position pos:line="194" pos:column="68"/></condition><then pos:line="194" pos:column="68"> <block pos:line="194" pos:column="69">{
               <return pos:line="195" pos:column="16">return <expr><name pos:line="195" pos:column="23">DECLINED<pos:position pos:line="195" pos:column="31"/></name></expr>;<pos:position pos:line="195" pos:column="32"/></return>
           }<pos:position pos:line="196" pos:column="13"/></block></then></if>

           <expr_stmt><expr><name><name pos:line="198" pos:column="12">r<pos:position pos:line="198" pos:column="13"/></name><operator pos:line="198" pos:column="13">-&gt;<pos:position pos:line="198" pos:column="18"/></operator><name pos:line="198" pos:column="15">filename<pos:position pos:line="198" pos:column="23"/></name></name> <operator pos:line="198" pos:column="24">=<pos:position pos:line="198" pos:column="25"/></operator> <call><name pos:line="198" pos:column="26">apr_pstrcat<pos:position pos:line="198" pos:column="37"/></name><argument_list pos:line="198" pos:column="37">(<argument><expr><name><name pos:line="198" pos:column="38">r<pos:position pos:line="198" pos:column="39"/></name><operator pos:line="198" pos:column="39">-&gt;<pos:position pos:line="198" pos:column="44"/></operator><name pos:line="198" pos:column="41">pool<pos:position pos:line="198" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="47">"proxy:"<pos:position pos:line="198" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="198" pos:column="57">ent<pos:position pos:line="198" pos:column="60"/></name><index pos:line="198" pos:column="60">[<expr><name pos:line="198" pos:column="61">i<pos:position pos:line="198" pos:column="62"/></name></expr>]<pos:position pos:line="198" pos:column="63"/></index></name><operator pos:line="198" pos:column="63">.<pos:position pos:line="198" pos:column="64"/></operator><name pos:line="198" pos:column="64">real<pos:position pos:line="198" pos:column="68"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="199" pos:column="34">(<pos:position pos:line="199" pos:column="35"/></operator><name><name pos:line="199" pos:column="35">r<pos:position pos:line="199" pos:column="36"/></name><operator pos:line="199" pos:column="36">-&gt;<pos:position pos:line="199" pos:column="41"/></operator><name pos:line="199" pos:column="38">uri<pos:position pos:line="199" pos:column="41"/></name></name> <operator pos:line="199" pos:column="42">+<pos:position pos:line="199" pos:column="43"/></operator> <name pos:line="199" pos:column="44">len<pos:position pos:line="199" pos:column="47"/></name> <operator pos:line="199" pos:column="48">)<pos:position pos:line="199" pos:column="49"/></operator></expr></argument>, <argument><expr><name pos:line="199" pos:column="51">NULL<pos:position pos:line="199" pos:column="55"/></name></expr></argument>)<pos:position pos:line="199" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="57"/></expr_stmt>
           <expr_stmt><expr><name><name pos:line="200" pos:column="12">r<pos:position pos:line="200" pos:column="13"/></name><operator pos:line="200" pos:column="13">-&gt;<pos:position pos:line="200" pos:column="18"/></operator><name pos:line="200" pos:column="15">handler<pos:position pos:line="200" pos:column="22"/></name></name> <operator pos:line="200" pos:column="23">=<pos:position pos:line="200" pos:column="24"/></operator> <literal type="string" pos:line="200" pos:column="25">"proxy-server"<pos:position pos:line="200" pos:column="39"/></literal></expr>;<pos:position pos:line="200" pos:column="40"/></expr_stmt>
           <expr_stmt><expr><name><name pos:line="201" pos:column="12">r<pos:position pos:line="201" pos:column="13"/></name><operator pos:line="201" pos:column="13">-&gt;<pos:position pos:line="201" pos:column="18"/></operator><name pos:line="201" pos:column="15">proxyreq<pos:position pos:line="201" pos:column="23"/></name></name> <operator pos:line="201" pos:column="24">=<pos:position pos:line="201" pos:column="25"/></operator> <name pos:line="201" pos:column="26">PROXYREQ_REVERSE<pos:position pos:line="201" pos:column="42"/></name></expr>;<pos:position pos:line="201" pos:column="43"/></expr_stmt>
           <return pos:line="202" pos:column="12">return <expr><name pos:line="202" pos:column="19">OK<pos:position pos:line="202" pos:column="21"/></name></expr>;<pos:position pos:line="202" pos:column="22"/></return>
       }<pos:position pos:line="203" pos:column="9"/></block></then></if>
    }<pos:position pos:line="204" pos:column="6"/></block></for>
    <return pos:line="205" pos:column="5">return <expr><name pos:line="205" pos:column="12">DECLINED<pos:position pos:line="205" pos:column="20"/></name></expr>;<pos:position pos:line="205" pos:column="21"/></return>
}<pos:position pos:line="206" pos:column="2"/></block></function>

<function><specifier pos:line="208" pos:column="1">static<pos:position pos:line="208" pos:column="7"/></specifier> <type><name pos:line="208" pos:column="8">int<pos:position pos:line="208" pos:column="11"/></name></type> <name pos:line="208" pos:column="12">proxy_walk<pos:position pos:line="208" pos:column="22"/></name><parameter_list pos:line="208" pos:column="22">(<parameter><decl><type><name pos:line="208" pos:column="23">request_rec<pos:position pos:line="208" pos:column="34"/></name> <modifier pos:line="208" pos:column="35">*<pos:position pos:line="208" pos:column="36"/></modifier></type><name pos:line="208" pos:column="36">r<pos:position pos:line="208" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="208" pos:column="38"/></parameter_list>
<block pos:line="209" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="210" pos:column="5">proxy_server_conf<pos:position pos:line="210" pos:column="22"/></name> <modifier pos:line="210" pos:column="23">*<pos:position pos:line="210" pos:column="24"/></modifier></type><name pos:line="210" pos:column="24">sconf<pos:position pos:line="210" pos:column="29"/></name> <init pos:line="210" pos:column="30">= <expr><call><name pos:line="210" pos:column="32">ap_get_module_config<pos:position pos:line="210" pos:column="52"/></name><argument_list pos:line="210" pos:column="52">(<argument><expr><name><name pos:line="210" pos:column="53">r<pos:position pos:line="210" pos:column="54"/></name><operator pos:line="210" pos:column="54">-&gt;<pos:position pos:line="210" pos:column="59"/></operator><name pos:line="210" pos:column="56">server<pos:position pos:line="210" pos:column="62"/></name><operator pos:line="210" pos:column="62">-&gt;<pos:position pos:line="210" pos:column="67"/></operator><name pos:line="210" pos:column="64">module_config<pos:position pos:line="210" pos:column="77"/></name></name></expr></argument>,
                                                    <argument><expr><operator pos:line="211" pos:column="53">&amp;<pos:position pos:line="211" pos:column="58"/></operator><name pos:line="211" pos:column="54">proxy_module<pos:position pos:line="211" pos:column="66"/></name></expr></argument>)<pos:position pos:line="211" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="211" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="212" pos:column="5">ap_conf_vector_t<pos:position pos:line="212" pos:column="21"/></name> <modifier pos:line="212" pos:column="22">*<pos:position pos:line="212" pos:column="23"/></modifier></type><name pos:line="212" pos:column="23">per_dir_defaults<pos:position pos:line="212" pos:column="39"/></name> <init pos:line="212" pos:column="40">= <expr><name><name pos:line="212" pos:column="42">r<pos:position pos:line="212" pos:column="43"/></name><operator pos:line="212" pos:column="43">-&gt;<pos:position pos:line="212" pos:column="48"/></operator><name pos:line="212" pos:column="45">server<pos:position pos:line="212" pos:column="51"/></name><operator pos:line="212" pos:column="51">-&gt;<pos:position pos:line="212" pos:column="56"/></operator><name pos:line="212" pos:column="53">lookup_defaults<pos:position pos:line="212" pos:column="68"/></name></name></expr></init></decl>;<pos:position pos:line="212" pos:column="69"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="213" pos:column="5">ap_conf_vector_t<pos:position pos:line="213" pos:column="21"/></name> <modifier pos:line="213" pos:column="22">*<pos:position pos:line="213" pos:column="23"/></modifier><modifier pos:line="213" pos:column="23">*<pos:position pos:line="213" pos:column="24"/></modifier></type><name pos:line="213" pos:column="24">sec_proxy<pos:position pos:line="213" pos:column="33"/></name> <init pos:line="213" pos:column="34">= <expr><operator pos:line="213" pos:column="36">(<pos:position pos:line="213" pos:column="37"/></operator><name pos:line="213" pos:column="37">ap_conf_vector_t<pos:position pos:line="213" pos:column="53"/></name> <operator pos:line="213" pos:column="54">*<pos:position pos:line="213" pos:column="55"/></operator><operator pos:line="213" pos:column="55">*<pos:position pos:line="213" pos:column="56"/></operator><operator pos:line="213" pos:column="56">)<pos:position pos:line="213" pos:column="57"/></operator> <name><name pos:line="213" pos:column="58">sconf<pos:position pos:line="213" pos:column="63"/></name><operator pos:line="213" pos:column="63">-&gt;<pos:position pos:line="213" pos:column="68"/></operator><name pos:line="213" pos:column="65">sec_proxy<pos:position pos:line="213" pos:column="74"/></name><operator pos:line="213" pos:column="74">-&gt;<pos:position pos:line="213" pos:column="79"/></operator><name pos:line="213" pos:column="76">elts<pos:position pos:line="213" pos:column="80"/></name></name></expr></init></decl>;<pos:position pos:line="213" pos:column="81"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="214" pos:column="5">ap_conf_vector_t<pos:position pos:line="214" pos:column="21"/></name> <modifier pos:line="214" pos:column="22">*<pos:position pos:line="214" pos:column="23"/></modifier></type><name pos:line="214" pos:column="23">entry_config<pos:position pos:line="214" pos:column="35"/></name></decl>;<pos:position pos:line="214" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="215" pos:column="5">proxy_dir_conf<pos:position pos:line="215" pos:column="19"/></name> <modifier pos:line="215" pos:column="20">*<pos:position pos:line="215" pos:column="21"/></modifier></type><name pos:line="215" pos:column="21">entry_proxy<pos:position pos:line="215" pos:column="32"/></name></decl>;<pos:position pos:line="215" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="216" pos:column="5">int<pos:position pos:line="216" pos:column="8"/></name></type> <name pos:line="216" pos:column="9">num_sec<pos:position pos:line="216" pos:column="16"/></name> <init pos:line="216" pos:column="17">= <expr><name><name pos:line="216" pos:column="19">sconf<pos:position pos:line="216" pos:column="24"/></name><operator pos:line="216" pos:column="24">-&gt;<pos:position pos:line="216" pos:column="29"/></operator><name pos:line="216" pos:column="26">sec_proxy<pos:position pos:line="216" pos:column="35"/></name><operator pos:line="216" pos:column="35">-&gt;<pos:position pos:line="216" pos:column="40"/></operator><name pos:line="216" pos:column="37">nelts<pos:position pos:line="216" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="216" pos:column="43"/></decl_stmt>
    <comment type="block" pos:line="217" pos:column="5">/* XXX: shouldn't we use URI here?  Canonicalize it first?
     * Pass over "proxy:" prefix 
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="220" pos:column="5">const<pos:position pos:line="220" pos:column="10"/></specifier> <name pos:line="220" pos:column="11">char<pos:position pos:line="220" pos:column="15"/></name> <modifier pos:line="220" pos:column="16">*<pos:position pos:line="220" pos:column="17"/></modifier></type><name pos:line="220" pos:column="17">proxyname<pos:position pos:line="220" pos:column="26"/></name> <init pos:line="220" pos:column="27">= <expr><name><name pos:line="220" pos:column="29">r<pos:position pos:line="220" pos:column="30"/></name><operator pos:line="220" pos:column="30">-&gt;<pos:position pos:line="220" pos:column="35"/></operator><name pos:line="220" pos:column="32">filename<pos:position pos:line="220" pos:column="40"/></name></name> <operator pos:line="220" pos:column="41">+<pos:position pos:line="220" pos:column="42"/></operator> <literal type="number" pos:line="220" pos:column="43">6<pos:position pos:line="220" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="220" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="221" pos:column="5">int<pos:position pos:line="221" pos:column="8"/></name></type> <name pos:line="221" pos:column="9">j<pos:position pos:line="221" pos:column="10"/></name></decl>;<pos:position pos:line="221" pos:column="11"/></decl_stmt>

    <for pos:line="223" pos:column="5">for <control pos:line="223" pos:column="9">(<init><expr><name pos:line="223" pos:column="10">j<pos:position pos:line="223" pos:column="11"/></name> <operator pos:line="223" pos:column="12">=<pos:position pos:line="223" pos:column="13"/></operator> <literal type="number" pos:line="223" pos:column="14">0<pos:position pos:line="223" pos:column="15"/></literal></expr>;<pos:position pos:line="223" pos:column="16"/></init> <condition><expr><name pos:line="223" pos:column="17">j<pos:position pos:line="223" pos:column="18"/></name> <operator pos:line="223" pos:column="19">&lt;<pos:position pos:line="223" pos:column="23"/></operator> <name pos:line="223" pos:column="21">num_sec<pos:position pos:line="223" pos:column="28"/></name></expr>;<pos:position pos:line="223" pos:column="29"/></condition> <incr><expr><operator pos:line="223" pos:column="30">++<pos:position pos:line="223" pos:column="32"/></operator><name pos:line="223" pos:column="32">j<pos:position pos:line="223" pos:column="33"/></name></expr></incr>)<pos:position pos:line="223" pos:column="34"/></control> 
    <block pos:line="224" pos:column="5">{
        <expr_stmt><expr><name pos:line="225" pos:column="9">entry_config<pos:position pos:line="225" pos:column="21"/></name> <operator pos:line="225" pos:column="22">=<pos:position pos:line="225" pos:column="23"/></operator> <name><name pos:line="225" pos:column="24">sec_proxy<pos:position pos:line="225" pos:column="33"/></name><index pos:line="225" pos:column="33">[<expr><name pos:line="225" pos:column="34">j<pos:position pos:line="225" pos:column="35"/></name></expr>]<pos:position pos:line="225" pos:column="36"/></index></name></expr>;<pos:position pos:line="225" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="226" pos:column="9">entry_proxy<pos:position pos:line="226" pos:column="20"/></name> <operator pos:line="226" pos:column="21">=<pos:position pos:line="226" pos:column="22"/></operator> <call><name pos:line="226" pos:column="23">ap_get_module_config<pos:position pos:line="226" pos:column="43"/></name><argument_list pos:line="226" pos:column="43">(<argument><expr><name pos:line="226" pos:column="44">entry_config<pos:position pos:line="226" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="226" pos:column="58">&amp;<pos:position pos:line="226" pos:column="63"/></operator><name pos:line="226" pos:column="59">proxy_module<pos:position pos:line="226" pos:column="71"/></name></expr></argument>)<pos:position pos:line="226" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="73"/></expr_stmt>

        <comment type="block" pos:line="228" pos:column="9">/* XXX: What about case insensitive matching ???
         * Compare regex, fnmatch or string as appropriate
         * If the entry doesn't relate, then continue 
         */</comment>
        <if pos:line="232" pos:column="9">if <condition pos:line="232" pos:column="12">(<expr><ternary><condition><expr><name><name pos:line="232" pos:column="13">entry_proxy<pos:position pos:line="232" pos:column="24"/></name><operator pos:line="232" pos:column="24">-&gt;<pos:position pos:line="232" pos:column="29"/></operator><name pos:line="232" pos:column="26">r<pos:position pos:line="232" pos:column="27"/></name></name></expr> 
              ?<pos:position pos:line="233" pos:column="16"/></condition><then pos:line="233" pos:column="16"> <expr><call><name pos:line="233" pos:column="17">ap_regexec<pos:position pos:line="233" pos:column="27"/></name><argument_list pos:line="233" pos:column="27">(<argument><expr><name><name pos:line="233" pos:column="28">entry_proxy<pos:position pos:line="233" pos:column="39"/></name><operator pos:line="233" pos:column="39">-&gt;<pos:position pos:line="233" pos:column="44"/></operator><name pos:line="233" pos:column="41">r<pos:position pos:line="233" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="44">proxyname<pos:position pos:line="233" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="233" pos:column="55">0<pos:position pos:line="233" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="233" pos:column="58">NULL<pos:position pos:line="233" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="233" pos:column="64">0<pos:position pos:line="233" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="233" pos:column="66"/></argument_list></call></expr>
              <pos:position pos:line="234" pos:column="15"/></then><else pos:line="234" pos:column="15">: <expr><operator pos:line="234" pos:column="17">(<pos:position pos:line="234" pos:column="18"/></operator><ternary><condition><expr><name><name pos:line="234" pos:column="18">entry_proxy<pos:position pos:line="234" pos:column="29"/></name><operator pos:line="234" pos:column="29">-&gt;<pos:position pos:line="234" pos:column="34"/></operator><name pos:line="234" pos:column="31">p_is_fnmatch<pos:position pos:line="234" pos:column="43"/></name></name></expr>
                   ?<pos:position pos:line="235" pos:column="21"/></condition><then pos:line="235" pos:column="21"> <expr><call><name pos:line="235" pos:column="22">apr_fnmatch<pos:position pos:line="235" pos:column="33"/></name><argument_list pos:line="235" pos:column="33">(<argument><expr><name><name pos:line="235" pos:column="34">entry_proxy<pos:position pos:line="235" pos:column="45"/></name><operator pos:line="235" pos:column="45">-&gt;<pos:position pos:line="235" pos:column="50"/></operator><name pos:line="235" pos:column="47">p<pos:position pos:line="235" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="50">proxyname<pos:position pos:line="235" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="235" pos:column="61">0<pos:position pos:line="235" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="235" pos:column="63"/></argument_list></call></expr>
                   <pos:position pos:line="236" pos:column="20"/></then><else pos:line="236" pos:column="20">: <expr><call><name pos:line="236" pos:column="22">strncmp<pos:position pos:line="236" pos:column="29"/></name><argument_list pos:line="236" pos:column="29">(<argument><expr><name pos:line="236" pos:column="30">proxyname<pos:position pos:line="236" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="236" pos:column="41">entry_proxy<pos:position pos:line="236" pos:column="52"/></name><operator pos:line="236" pos:column="52">-&gt;<pos:position pos:line="236" pos:column="57"/></operator><name pos:line="236" pos:column="54">p<pos:position pos:line="236" pos:column="55"/></name></name></expr></argument>, 
                                        <argument><expr><call><name pos:line="237" pos:column="41">strlen<pos:position pos:line="237" pos:column="47"/></name><argument_list pos:line="237" pos:column="47">(<argument><expr><name><name pos:line="237" pos:column="48">entry_proxy<pos:position pos:line="237" pos:column="59"/></name><operator pos:line="237" pos:column="59">-&gt;<pos:position pos:line="237" pos:column="64"/></operator><name pos:line="237" pos:column="61">p<pos:position pos:line="237" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="237" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="237" pos:column="64"/></argument_list></call></expr></else></ternary><operator pos:line="237" pos:column="64">)<pos:position pos:line="237" pos:column="65"/></operator></expr></else></ternary></expr>)<pos:position pos:line="237" pos:column="66"/></condition><then pos:line="237" pos:column="66"> <block pos:line="237" pos:column="67">{
            <continue pos:line="238" pos:column="13">continue;<pos:position pos:line="238" pos:column="22"/></continue>
        }<pos:position pos:line="239" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="240" pos:column="9">per_dir_defaults<pos:position pos:line="240" pos:column="25"/></name> <operator pos:line="240" pos:column="26">=<pos:position pos:line="240" pos:column="27"/></operator> <call><name pos:line="240" pos:column="28">ap_merge_per_dir_configs<pos:position pos:line="240" pos:column="52"/></name><argument_list pos:line="240" pos:column="52">(<argument><expr><name><name pos:line="240" pos:column="53">r<pos:position pos:line="240" pos:column="54"/></name><operator pos:line="240" pos:column="54">-&gt;<pos:position pos:line="240" pos:column="59"/></operator><name pos:line="240" pos:column="56">pool<pos:position pos:line="240" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="62">per_dir_defaults<pos:position pos:line="240" pos:column="78"/></name></expr></argument>,
                                                             <argument><expr><name pos:line="241" pos:column="62">entry_config<pos:position pos:line="241" pos:column="74"/></name></expr></argument>)<pos:position pos:line="241" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="242" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="244" pos:column="5">r<pos:position pos:line="244" pos:column="6"/></name><operator pos:line="244" pos:column="6">-&gt;<pos:position pos:line="244" pos:column="11"/></operator><name pos:line="244" pos:column="8">per_dir_config<pos:position pos:line="244" pos:column="22"/></name></name> <operator pos:line="244" pos:column="23">=<pos:position pos:line="244" pos:column="24"/></operator> <name pos:line="244" pos:column="25">per_dir_defaults<pos:position pos:line="244" pos:column="41"/></name></expr>;<pos:position pos:line="244" pos:column="42"/></expr_stmt>

    <return pos:line="246" pos:column="5">return <expr><name pos:line="246" pos:column="12">OK<pos:position pos:line="246" pos:column="14"/></name></expr>;<pos:position pos:line="246" pos:column="15"/></return>
}<pos:position pos:line="247" pos:column="2"/></block></function>

<function><specifier pos:line="249" pos:column="1">static<pos:position pos:line="249" pos:column="7"/></specifier> <type><name pos:line="249" pos:column="8">int<pos:position pos:line="249" pos:column="11"/></name></type> <name pos:line="249" pos:column="12">proxy_map_location<pos:position pos:line="249" pos:column="30"/></name><parameter_list pos:line="249" pos:column="30">(<parameter><decl><type><name pos:line="249" pos:column="31">request_rec<pos:position pos:line="249" pos:column="42"/></name> <modifier pos:line="249" pos:column="43">*<pos:position pos:line="249" pos:column="44"/></modifier></type><name pos:line="249" pos:column="44">r<pos:position pos:line="249" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="249" pos:column="46"/></parameter_list>
<block pos:line="250" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="251" pos:column="5">int<pos:position pos:line="251" pos:column="8"/></name></type> <name pos:line="251" pos:column="9">access_status<pos:position pos:line="251" pos:column="22"/></name></decl>;<pos:position pos:line="251" pos:column="23"/></decl_stmt>

    <if pos:line="253" pos:column="5">if <condition pos:line="253" pos:column="8">(<expr><operator pos:line="253" pos:column="9">!<pos:position pos:line="253" pos:column="10"/></operator><name><name pos:line="253" pos:column="10">r<pos:position pos:line="253" pos:column="11"/></name><operator pos:line="253" pos:column="11">-&gt;<pos:position pos:line="253" pos:column="16"/></operator><name pos:line="253" pos:column="13">proxyreq<pos:position pos:line="253" pos:column="21"/></name></name> <operator pos:line="253" pos:column="22">||<pos:position pos:line="253" pos:column="24"/></operator> <operator pos:line="253" pos:column="25">!<pos:position pos:line="253" pos:column="26"/></operator><name><name pos:line="253" pos:column="26">r<pos:position pos:line="253" pos:column="27"/></name><operator pos:line="253" pos:column="27">-&gt;<pos:position pos:line="253" pos:column="32"/></operator><name pos:line="253" pos:column="29">filename<pos:position pos:line="253" pos:column="37"/></name></name> <operator pos:line="253" pos:column="38">||<pos:position pos:line="253" pos:column="40"/></operator> <call><name pos:line="253" pos:column="41">strncmp<pos:position pos:line="253" pos:column="48"/></name><argument_list pos:line="253" pos:column="48">(<argument><expr><name><name pos:line="253" pos:column="49">r<pos:position pos:line="253" pos:column="50"/></name><operator pos:line="253" pos:column="50">-&gt;<pos:position pos:line="253" pos:column="55"/></operator><name pos:line="253" pos:column="52">filename<pos:position pos:line="253" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="62">"proxy:"<pos:position pos:line="253" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="253" pos:column="72">6<pos:position pos:line="253" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="253" pos:column="74"/></argument_list></call> <operator pos:line="253" pos:column="75">!=<pos:position pos:line="253" pos:column="77"/></operator> <literal type="number" pos:line="253" pos:column="78">0<pos:position pos:line="253" pos:column="79"/></literal></expr>)<pos:position pos:line="253" pos:column="80"/></condition><then pos:line="253" pos:column="80">
        <block type="pseudo"><return pos:line="254" pos:column="9">return <expr><name pos:line="254" pos:column="16">DECLINED<pos:position pos:line="254" pos:column="24"/></name></expr>;<pos:position pos:line="254" pos:column="25"/></return></block></then></if>

    <comment type="block" pos:line="256" pos:column="5">/* Don't let the core or mod_http map_to_storage hooks handle this,
     * We don't need directory/file_walk, and we want to TRACE on our own.
     */</comment>
    <if pos:line="259" pos:column="5">if <condition pos:line="259" pos:column="8">(<expr><operator pos:line="259" pos:column="9">(<pos:position pos:line="259" pos:column="10"/></operator><name pos:line="259" pos:column="10">access_status<pos:position pos:line="259" pos:column="23"/></name> <operator pos:line="259" pos:column="24">=<pos:position pos:line="259" pos:column="25"/></operator> <call><name pos:line="259" pos:column="26">proxy_walk<pos:position pos:line="259" pos:column="36"/></name><argument_list pos:line="259" pos:column="36">(<argument><expr><name pos:line="259" pos:column="37">r<pos:position pos:line="259" pos:column="38"/></name></expr></argument>)<pos:position pos:line="259" pos:column="39"/></argument_list></call><operator pos:line="259" pos:column="39">)<pos:position pos:line="259" pos:column="40"/></operator></expr>)<pos:position pos:line="259" pos:column="41"/></condition><then pos:line="259" pos:column="41"> <block pos:line="259" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="260" pos:column="9">ap_die<pos:position pos:line="260" pos:column="15"/></name><argument_list pos:line="260" pos:column="15">(<argument><expr><name pos:line="260" pos:column="16">access_status<pos:position pos:line="260" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="31">r<pos:position pos:line="260" pos:column="32"/></name></expr></argument>)<pos:position pos:line="260" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="34"/></expr_stmt>
        <return pos:line="261" pos:column="9">return <expr><name pos:line="261" pos:column="16">access_status<pos:position pos:line="261" pos:column="29"/></name></expr>;<pos:position pos:line="261" pos:column="30"/></return>
    }<pos:position pos:line="262" pos:column="6"/></block></then></if>

    <return pos:line="264" pos:column="5">return <expr><name pos:line="264" pos:column="12">OK<pos:position pos:line="264" pos:column="14"/></name></expr>;<pos:position pos:line="264" pos:column="15"/></return>
}<pos:position pos:line="265" pos:column="2"/></block></function>

<comment type="block" pos:line="267" pos:column="1">/* -------------------------------------------------------------- */</comment>
<comment type="block" pos:line="268" pos:column="1">/* Fixup the filename */</comment>

<comment type="block" pos:line="270" pos:column="1">/*
 * Canonicalise the URL
 */</comment>
<function><specifier pos:line="273" pos:column="1">static<pos:position pos:line="273" pos:column="7"/></specifier> <type><name pos:line="273" pos:column="8">int<pos:position pos:line="273" pos:column="11"/></name></type> <name pos:line="273" pos:column="12">proxy_fixup<pos:position pos:line="273" pos:column="23"/></name><parameter_list pos:line="273" pos:column="23">(<parameter><decl><type><name pos:line="273" pos:column="24">request_rec<pos:position pos:line="273" pos:column="35"/></name> <modifier pos:line="273" pos:column="36">*<pos:position pos:line="273" pos:column="37"/></modifier></type><name pos:line="273" pos:column="37">r<pos:position pos:line="273" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="273" pos:column="39"/></parameter_list>
<block pos:line="274" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="275" pos:column="5">char<pos:position pos:line="275" pos:column="9"/></name> <modifier pos:line="275" pos:column="10">*<pos:position pos:line="275" pos:column="11"/></modifier></type><name pos:line="275" pos:column="11">url<pos:position pos:line="275" pos:column="14"/></name></decl>, <modifier pos:line="275" pos:column="16">*<pos:position pos:line="275" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="275" pos:column="17">p<pos:position pos:line="275" pos:column="18"/></name></decl>;<pos:position pos:line="275" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="276" pos:column="5">int<pos:position pos:line="276" pos:column="8"/></name></type> <name pos:line="276" pos:column="9">access_status<pos:position pos:line="276" pos:column="22"/></name></decl>;<pos:position pos:line="276" pos:column="23"/></decl_stmt>

    <if pos:line="278" pos:column="5">if <condition pos:line="278" pos:column="8">(<expr><operator pos:line="278" pos:column="9">!<pos:position pos:line="278" pos:column="10"/></operator><name><name pos:line="278" pos:column="10">r<pos:position pos:line="278" pos:column="11"/></name><operator pos:line="278" pos:column="11">-&gt;<pos:position pos:line="278" pos:column="16"/></operator><name pos:line="278" pos:column="13">proxyreq<pos:position pos:line="278" pos:column="21"/></name></name> <operator pos:line="278" pos:column="22">||<pos:position pos:line="278" pos:column="24"/></operator> <call><name pos:line="278" pos:column="25">strncmp<pos:position pos:line="278" pos:column="32"/></name><argument_list pos:line="278" pos:column="32">(<argument><expr><name><name pos:line="278" pos:column="33">r<pos:position pos:line="278" pos:column="34"/></name><operator pos:line="278" pos:column="34">-&gt;<pos:position pos:line="278" pos:column="39"/></operator><name pos:line="278" pos:column="36">filename<pos:position pos:line="278" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="278" pos:column="46">"proxy:"<pos:position pos:line="278" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="278" pos:column="56">6<pos:position pos:line="278" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="278" pos:column="58"/></argument_list></call> <operator pos:line="278" pos:column="59">!=<pos:position pos:line="278" pos:column="61"/></operator> <literal type="number" pos:line="278" pos:column="62">0<pos:position pos:line="278" pos:column="63"/></literal></expr>)<pos:position pos:line="278" pos:column="64"/></condition><then pos:line="278" pos:column="64">
        <block type="pseudo"><return pos:line="279" pos:column="9">return <expr><name pos:line="279" pos:column="16">DECLINED<pos:position pos:line="279" pos:column="24"/></name></expr>;<pos:position pos:line="279" pos:column="25"/></return></block></then></if>

    <comment type="block" pos:line="281" pos:column="5">/* XXX: Shouldn't we try this before we run the proxy_walk? */</comment>
    <expr_stmt><expr><name pos:line="282" pos:column="5">url<pos:position pos:line="282" pos:column="8"/></name> <operator pos:line="282" pos:column="9">=<pos:position pos:line="282" pos:column="10"/></operator> <operator pos:line="282" pos:column="11">&amp;<pos:position pos:line="282" pos:column="16"/></operator><name><name pos:line="282" pos:column="12">r<pos:position pos:line="282" pos:column="13"/></name><operator pos:line="282" pos:column="13">-&gt;<pos:position pos:line="282" pos:column="18"/></operator><name pos:line="282" pos:column="15">filename<pos:position pos:line="282" pos:column="23"/></name><index pos:line="282" pos:column="23">[<expr><literal type="number" pos:line="282" pos:column="24">6<pos:position pos:line="282" pos:column="25"/></literal></expr>]<pos:position pos:line="282" pos:column="26"/></index></name></expr>;<pos:position pos:line="282" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="284" pos:column="5">/* canonicalise each specific scheme */</comment>
    <if pos:line="285" pos:column="5">if <condition pos:line="285" pos:column="8">(<expr><operator pos:line="285" pos:column="9">(<pos:position pos:line="285" pos:column="10"/></operator><name pos:line="285" pos:column="10">access_status<pos:position pos:line="285" pos:column="23"/></name> <operator pos:line="285" pos:column="24">=<pos:position pos:line="285" pos:column="25"/></operator> <call><name pos:line="285" pos:column="26">proxy_run_canon_handler<pos:position pos:line="285" pos:column="49"/></name><argument_list pos:line="285" pos:column="49">(<argument><expr><name pos:line="285" pos:column="50">r<pos:position pos:line="285" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="53">url<pos:position pos:line="285" pos:column="56"/></name></expr></argument>)<pos:position pos:line="285" pos:column="57"/></argument_list></call><operator pos:line="285" pos:column="57">)<pos:position pos:line="285" pos:column="58"/></operator></expr>)<pos:position pos:line="285" pos:column="59"/></condition><then pos:line="285" pos:column="59"> <block pos:line="285" pos:column="60">{
        <return pos:line="286" pos:column="9">return <expr><name pos:line="286" pos:column="16">access_status<pos:position pos:line="286" pos:column="29"/></name></expr>;<pos:position pos:line="286" pos:column="30"/></return>
    }<pos:position pos:line="287" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="289" pos:column="5">p<pos:position pos:line="289" pos:column="6"/></name> <operator pos:line="289" pos:column="7">=<pos:position pos:line="289" pos:column="8"/></operator> <call><name pos:line="289" pos:column="9">strchr<pos:position pos:line="289" pos:column="15"/></name><argument_list pos:line="289" pos:column="15">(<argument><expr><name pos:line="289" pos:column="16">url<pos:position pos:line="289" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="289" pos:column="21">':'<pos:position pos:line="289" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="26"/></expr_stmt>
    <if pos:line="290" pos:column="5">if <condition pos:line="290" pos:column="8">(<expr><name pos:line="290" pos:column="9">p<pos:position pos:line="290" pos:column="10"/></name> <operator pos:line="290" pos:column="11">==<pos:position pos:line="290" pos:column="13"/></operator> <name pos:line="290" pos:column="14">NULL<pos:position pos:line="290" pos:column="18"/></name> <operator pos:line="290" pos:column="19">||<pos:position pos:line="290" pos:column="21"/></operator> <name pos:line="290" pos:column="22">p<pos:position pos:line="290" pos:column="23"/></name> <operator pos:line="290" pos:column="24">==<pos:position pos:line="290" pos:column="26"/></operator> <name pos:line="290" pos:column="27">url<pos:position pos:line="290" pos:column="30"/></name></expr>)<pos:position pos:line="290" pos:column="31"/></condition><then pos:line="290" pos:column="31">
        <block type="pseudo"><return pos:line="291" pos:column="9">return <expr><name pos:line="291" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="291" pos:column="32"/></name></expr>;<pos:position pos:line="291" pos:column="33"/></return></block></then></if>

    <return pos:line="293" pos:column="5">return <expr><name pos:line="293" pos:column="12">OK<pos:position pos:line="293" pos:column="14"/></name></expr>;<pos:position pos:line="293" pos:column="15"/></return>		<comment type="block" pos:line="293" pos:column="25">/* otherwise; we've done the best we can */</comment>
}<pos:position pos:line="294" pos:column="2"/></block></function>

<comment type="block" pos:line="296" pos:column="1">/* Send a redirection if the request contains a hostname which is not */</comment>
<comment type="block" pos:line="297" pos:column="1">/* fully qualified, i.e. doesn't have a domain name appended. Some proxy */</comment>
<comment type="block" pos:line="298" pos:column="1">/* servers like Netscape's allow this and access hosts from the local */</comment>
<comment type="block" pos:line="299" pos:column="1">/* domain in this case. I think it is better to redirect to a FQDN, since */</comment>
<comment type="block" pos:line="300" pos:column="1">/* these will later be found in the bookmarks files. */</comment>
<comment type="block" pos:line="301" pos:column="1">/* The "ProxyDomain" directive determines what domain will be appended */</comment>
<function><specifier pos:line="302" pos:column="1">static<pos:position pos:line="302" pos:column="7"/></specifier> <type><name pos:line="302" pos:column="8">int<pos:position pos:line="302" pos:column="11"/></name></type> <name pos:line="302" pos:column="12">proxy_needsdomain<pos:position pos:line="302" pos:column="29"/></name><parameter_list pos:line="302" pos:column="29">(<parameter><decl><type><name pos:line="302" pos:column="30">request_rec<pos:position pos:line="302" pos:column="41"/></name> <modifier pos:line="302" pos:column="42">*<pos:position pos:line="302" pos:column="43"/></modifier></type><name pos:line="302" pos:column="43">r<pos:position pos:line="302" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="302" pos:column="46">const<pos:position pos:line="302" pos:column="51"/></specifier> <name pos:line="302" pos:column="52">char<pos:position pos:line="302" pos:column="56"/></name> <modifier pos:line="302" pos:column="57">*<pos:position pos:line="302" pos:column="58"/></modifier></type><name pos:line="302" pos:column="58">url<pos:position pos:line="302" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="302" pos:column="63">const<pos:position pos:line="302" pos:column="68"/></specifier> <name pos:line="302" pos:column="69">char<pos:position pos:line="302" pos:column="73"/></name> <modifier pos:line="302" pos:column="74">*<pos:position pos:line="302" pos:column="75"/></modifier></type><name pos:line="302" pos:column="75">domain<pos:position pos:line="302" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="302" pos:column="82"/></parameter_list>
<block pos:line="303" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="304" pos:column="5">char<pos:position pos:line="304" pos:column="9"/></name> <modifier pos:line="304" pos:column="10">*<pos:position pos:line="304" pos:column="11"/></modifier></type><name pos:line="304" pos:column="11">nuri<pos:position pos:line="304" pos:column="15"/></name></decl>;<pos:position pos:line="304" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="305" pos:column="5">const<pos:position pos:line="305" pos:column="10"/></specifier> <name pos:line="305" pos:column="11">char<pos:position pos:line="305" pos:column="15"/></name> <modifier pos:line="305" pos:column="16">*<pos:position pos:line="305" pos:column="17"/></modifier></type><name pos:line="305" pos:column="17">ref<pos:position pos:line="305" pos:column="20"/></name></decl>;<pos:position pos:line="305" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="307" pos:column="5">/* We only want to worry about GETs */</comment>
    <if pos:line="308" pos:column="5">if <condition pos:line="308" pos:column="8">(<expr><operator pos:line="308" pos:column="9">!<pos:position pos:line="308" pos:column="10"/></operator><name><name pos:line="308" pos:column="10">r<pos:position pos:line="308" pos:column="11"/></name><operator pos:line="308" pos:column="11">-&gt;<pos:position pos:line="308" pos:column="16"/></operator><name pos:line="308" pos:column="13">proxyreq<pos:position pos:line="308" pos:column="21"/></name></name> <operator pos:line="308" pos:column="22">||<pos:position pos:line="308" pos:column="24"/></operator> <name><name pos:line="308" pos:column="25">r<pos:position pos:line="308" pos:column="26"/></name><operator pos:line="308" pos:column="26">-&gt;<pos:position pos:line="308" pos:column="31"/></operator><name pos:line="308" pos:column="28">method_number<pos:position pos:line="308" pos:column="41"/></name></name> <operator pos:line="308" pos:column="42">!=<pos:position pos:line="308" pos:column="44"/></operator> <name pos:line="308" pos:column="45">M_GET<pos:position pos:line="308" pos:column="50"/></name> <operator pos:line="308" pos:column="51">||<pos:position pos:line="308" pos:column="53"/></operator> <operator pos:line="308" pos:column="54">!<pos:position pos:line="308" pos:column="55"/></operator><name><name pos:line="308" pos:column="55">r<pos:position pos:line="308" pos:column="56"/></name><operator pos:line="308" pos:column="56">-&gt;<pos:position pos:line="308" pos:column="61"/></operator><name pos:line="308" pos:column="58">parsed_uri<pos:position pos:line="308" pos:column="68"/></name><operator pos:line="308" pos:column="68">.<pos:position pos:line="308" pos:column="69"/></operator><name pos:line="308" pos:column="69">hostname<pos:position pos:line="308" pos:column="77"/></name></name></expr>)<pos:position pos:line="308" pos:column="78"/></condition><then pos:line="308" pos:column="78">
        <block type="pseudo"><return pos:line="309" pos:column="9">return <expr><name pos:line="309" pos:column="16">DECLINED<pos:position pos:line="309" pos:column="24"/></name></expr>;<pos:position pos:line="309" pos:column="25"/></return></block></then></if>

    <comment type="block" pos:line="311" pos:column="5">/* If host does contain a dot already, or it is "localhost", decline */</comment>
    <if pos:line="312" pos:column="5">if <condition pos:line="312" pos:column="8">(<expr><call><name pos:line="312" pos:column="9">strchr<pos:position pos:line="312" pos:column="15"/></name><argument_list pos:line="312" pos:column="15">(<argument><expr><name><name pos:line="312" pos:column="16">r<pos:position pos:line="312" pos:column="17"/></name><operator pos:line="312" pos:column="17">-&gt;<pos:position pos:line="312" pos:column="22"/></operator><name pos:line="312" pos:column="19">parsed_uri<pos:position pos:line="312" pos:column="29"/></name><operator pos:line="312" pos:column="29">.<pos:position pos:line="312" pos:column="30"/></operator><name pos:line="312" pos:column="30">hostname<pos:position pos:line="312" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="312" pos:column="40">'.'<pos:position pos:line="312" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="312" pos:column="44"/></argument_list></call> <operator pos:line="312" pos:column="45">!=<pos:position pos:line="312" pos:column="47"/></operator> <name pos:line="312" pos:column="48">NULL<pos:position pos:line="312" pos:column="52"/></name>
     <operator pos:line="313" pos:column="6">||<pos:position pos:line="313" pos:column="8"/></operator> <call><name pos:line="313" pos:column="9">strcasecmp<pos:position pos:line="313" pos:column="19"/></name><argument_list pos:line="313" pos:column="19">(<argument><expr><name><name pos:line="313" pos:column="20">r<pos:position pos:line="313" pos:column="21"/></name><operator pos:line="313" pos:column="21">-&gt;<pos:position pos:line="313" pos:column="26"/></operator><name pos:line="313" pos:column="23">parsed_uri<pos:position pos:line="313" pos:column="33"/></name><operator pos:line="313" pos:column="33">.<pos:position pos:line="313" pos:column="34"/></operator><name pos:line="313" pos:column="34">hostname<pos:position pos:line="313" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="313" pos:column="44">"localhost"<pos:position pos:line="313" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="313" pos:column="56"/></argument_list></call> <operator pos:line="313" pos:column="57">==<pos:position pos:line="313" pos:column="59"/></operator> <literal type="number" pos:line="313" pos:column="60">0<pos:position pos:line="313" pos:column="61"/></literal></expr>)<pos:position pos:line="313" pos:column="62"/></condition><then pos:line="313" pos:column="62">
        <block type="pseudo"><return pos:line="314" pos:column="9">return <expr><name pos:line="314" pos:column="16">DECLINED<pos:position pos:line="314" pos:column="24"/></name></expr>;<pos:position pos:line="314" pos:column="25"/></return></block></then></if>	<comment type="block" pos:line="314" pos:column="33">/* host name has a dot already */</comment>

    <expr_stmt><expr><name pos:line="316" pos:column="5">ref<pos:position pos:line="316" pos:column="8"/></name> <operator pos:line="316" pos:column="9">=<pos:position pos:line="316" pos:column="10"/></operator> <call><name pos:line="316" pos:column="11">apr_table_get<pos:position pos:line="316" pos:column="24"/></name><argument_list pos:line="316" pos:column="24">(<argument><expr><name><name pos:line="316" pos:column="25">r<pos:position pos:line="316" pos:column="26"/></name><operator pos:line="316" pos:column="26">-&gt;<pos:position pos:line="316" pos:column="31"/></operator><name pos:line="316" pos:column="28">headers_in<pos:position pos:line="316" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="316" pos:column="40">"Referer"<pos:position pos:line="316" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="316" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="318" pos:column="5">/* Reassemble the request, but insert the domain after the host name */</comment>
    <comment type="block" pos:line="319" pos:column="5">/* Note that the domain name always starts with a dot */</comment>
    <expr_stmt><expr><name><name pos:line="320" pos:column="5">r<pos:position pos:line="320" pos:column="6"/></name><operator pos:line="320" pos:column="6">-&gt;<pos:position pos:line="320" pos:column="11"/></operator><name pos:line="320" pos:column="8">parsed_uri<pos:position pos:line="320" pos:column="18"/></name><operator pos:line="320" pos:column="18">.<pos:position pos:line="320" pos:column="19"/></operator><name pos:line="320" pos:column="19">hostname<pos:position pos:line="320" pos:column="27"/></name></name> <operator pos:line="320" pos:column="28">=<pos:position pos:line="320" pos:column="29"/></operator> <call><name pos:line="320" pos:column="30">apr_pstrcat<pos:position pos:line="320" pos:column="41"/></name><argument_list pos:line="320" pos:column="41">(<argument><expr><name><name pos:line="320" pos:column="42">r<pos:position pos:line="320" pos:column="43"/></name><operator pos:line="320" pos:column="43">-&gt;<pos:position pos:line="320" pos:column="48"/></operator><name pos:line="320" pos:column="45">pool<pos:position pos:line="320" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="320" pos:column="51">r<pos:position pos:line="320" pos:column="52"/></name><operator pos:line="320" pos:column="52">-&gt;<pos:position pos:line="320" pos:column="57"/></operator><name pos:line="320" pos:column="54">parsed_uri<pos:position pos:line="320" pos:column="64"/></name><operator pos:line="320" pos:column="64">.<pos:position pos:line="320" pos:column="65"/></operator><name pos:line="320" pos:column="65">hostname<pos:position pos:line="320" pos:column="73"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="321" pos:column="42">domain<pos:position pos:line="321" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="50">NULL<pos:position pos:line="321" pos:column="54"/></name></expr></argument>)<pos:position pos:line="321" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="322" pos:column="5">nuri<pos:position pos:line="322" pos:column="9"/></name> <operator pos:line="322" pos:column="10">=<pos:position pos:line="322" pos:column="11"/></operator> <call><name pos:line="322" pos:column="12">apr_uri_unparse<pos:position pos:line="322" pos:column="27"/></name><argument_list pos:line="322" pos:column="27">(<argument><expr><name><name pos:line="322" pos:column="28">r<pos:position pos:line="322" pos:column="29"/></name><operator pos:line="322" pos:column="29">-&gt;<pos:position pos:line="322" pos:column="34"/></operator><name pos:line="322" pos:column="31">pool<pos:position pos:line="322" pos:column="35"/></name></name></expr></argument>,
                           <argument><expr><operator pos:line="323" pos:column="28">&amp;<pos:position pos:line="323" pos:column="33"/></operator><name><name pos:line="323" pos:column="29">r<pos:position pos:line="323" pos:column="30"/></name><operator pos:line="323" pos:column="30">-&gt;<pos:position pos:line="323" pos:column="35"/></operator><name pos:line="323" pos:column="32">parsed_uri<pos:position pos:line="323" pos:column="42"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="324" pos:column="28">APR_URI_UNP_REVEALPASSWORD<pos:position pos:line="324" pos:column="54"/></name></expr></argument>)<pos:position pos:line="324" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="326" pos:column="5">apr_table_set<pos:position pos:line="326" pos:column="18"/></name><argument_list pos:line="326" pos:column="18">(<argument><expr><name><name pos:line="326" pos:column="19">r<pos:position pos:line="326" pos:column="20"/></name><operator pos:line="326" pos:column="20">-&gt;<pos:position pos:line="326" pos:column="25"/></operator><name pos:line="326" pos:column="22">headers_out<pos:position pos:line="326" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="326" pos:column="35">"Location"<pos:position pos:line="326" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="326" pos:column="47">nuri<pos:position pos:line="326" pos:column="51"/></name></expr></argument>)<pos:position pos:line="326" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="327" pos:column="5">ap_log_rerror<pos:position pos:line="327" pos:column="18"/></name><argument_list pos:line="327" pos:column="18">(<argument><expr><name pos:line="327" pos:column="19">APLOG_MARK<pos:position pos:line="327" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="31">APLOG_INFO<pos:position pos:line="327" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="327" pos:column="43">0<pos:position pos:line="327" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="327" pos:column="46">r<pos:position pos:line="327" pos:column="47"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="328" pos:column="19">"Domain missing: %s sent to %s%s%s"<pos:position pos:line="328" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="328" pos:column="56">r<pos:position pos:line="328" pos:column="57"/></name><operator pos:line="328" pos:column="57">-&gt;<pos:position pos:line="328" pos:column="62"/></operator><name pos:line="328" pos:column="59">uri<pos:position pos:line="328" pos:column="62"/></name></name></expr></argument>,
                  <argument><expr><call><name pos:line="329" pos:column="19">apr_uri_unparse<pos:position pos:line="329" pos:column="34"/></name><argument_list pos:line="329" pos:column="34">(<argument><expr><name><name pos:line="329" pos:column="35">r<pos:position pos:line="329" pos:column="36"/></name><operator pos:line="329" pos:column="36">-&gt;<pos:position pos:line="329" pos:column="41"/></operator><name pos:line="329" pos:column="38">pool<pos:position pos:line="329" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="329" pos:column="44">&amp;<pos:position pos:line="329" pos:column="49"/></operator><name><name pos:line="329" pos:column="45">r<pos:position pos:line="329" pos:column="46"/></name><operator pos:line="329" pos:column="46">-&gt;<pos:position pos:line="329" pos:column="51"/></operator><name pos:line="329" pos:column="48">parsed_uri<pos:position pos:line="329" pos:column="58"/></name></name></expr></argument>,
                                  <argument><expr><name pos:line="330" pos:column="35">APR_URI_UNP_OMITUSERINFO<pos:position pos:line="330" pos:column="59"/></name></expr></argument>)<pos:position pos:line="330" pos:column="60"/></argument_list></call></expr></argument>,
                  <argument><expr><ternary><condition><expr><name pos:line="331" pos:column="19">ref<pos:position pos:line="331" pos:column="22"/></name></expr> ?<pos:position pos:line="331" pos:column="24"/></condition><then pos:line="331" pos:column="24"> <expr><literal type="string" pos:line="331" pos:column="25">" from "<pos:position pos:line="331" pos:column="33"/></literal></expr> <pos:position pos:line="331" pos:column="34"/></then><else pos:line="331" pos:column="34">: <expr><literal type="string" pos:line="331" pos:column="36">""<pos:position pos:line="331" pos:column="38"/></literal></expr></else></ternary></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="331" pos:column="40">ref<pos:position pos:line="331" pos:column="43"/></name></expr> ?<pos:position pos:line="331" pos:column="45"/></condition><then pos:line="331" pos:column="45"> <expr><name pos:line="331" pos:column="46">ref<pos:position pos:line="331" pos:column="49"/></name></expr> <pos:position pos:line="331" pos:column="50"/></then><else pos:line="331" pos:column="50">: <expr><literal type="string" pos:line="331" pos:column="52">""<pos:position pos:line="331" pos:column="54"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="331" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="56"/></expr_stmt>

    <return pos:line="333" pos:column="5">return <expr><name pos:line="333" pos:column="12">HTTP_MOVED_PERMANENTLY<pos:position pos:line="333" pos:column="34"/></name></expr>;<pos:position pos:line="333" pos:column="35"/></return>
}<pos:position pos:line="334" pos:column="2"/></block></function>

<comment type="block" pos:line="336" pos:column="1">/* -------------------------------------------------------------- */</comment>
<comment type="block" pos:line="337" pos:column="1">/* Invoke handler */</comment>

<function><specifier pos:line="339" pos:column="1">static<pos:position pos:line="339" pos:column="7"/></specifier> <type><name pos:line="339" pos:column="8">int<pos:position pos:line="339" pos:column="11"/></name></type> <name pos:line="339" pos:column="12">proxy_handler<pos:position pos:line="339" pos:column="25"/></name><parameter_list pos:line="339" pos:column="25">(<parameter><decl><type><name pos:line="339" pos:column="26">request_rec<pos:position pos:line="339" pos:column="37"/></name> <modifier pos:line="339" pos:column="38">*<pos:position pos:line="339" pos:column="39"/></modifier></type><name pos:line="339" pos:column="39">r<pos:position pos:line="339" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="339" pos:column="41"/></parameter_list>
<block pos:line="340" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="341" pos:column="5">char<pos:position pos:line="341" pos:column="9"/></name> <modifier pos:line="341" pos:column="10">*<pos:position pos:line="341" pos:column="11"/></modifier></type><name pos:line="341" pos:column="11">url<pos:position pos:line="341" pos:column="14"/></name></decl>, <modifier pos:line="341" pos:column="16">*<pos:position pos:line="341" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="341" pos:column="17">scheme<pos:position pos:line="341" pos:column="23"/></name></decl>, <modifier pos:line="341" pos:column="25">*<pos:position pos:line="341" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="341" pos:column="26">p<pos:position pos:line="341" pos:column="27"/></name></decl>;<pos:position pos:line="341" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="342" pos:column="5">const<pos:position pos:line="342" pos:column="10"/></specifier> <name pos:line="342" pos:column="11">char<pos:position pos:line="342" pos:column="15"/></name> <modifier pos:line="342" pos:column="16">*<pos:position pos:line="342" pos:column="17"/></modifier></type><name pos:line="342" pos:column="17">p2<pos:position pos:line="342" pos:column="19"/></name></decl>;<pos:position pos:line="342" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="343" pos:column="5">void<pos:position pos:line="343" pos:column="9"/></name> <modifier pos:line="343" pos:column="10">*<pos:position pos:line="343" pos:column="11"/></modifier></type><name pos:line="343" pos:column="11">sconf<pos:position pos:line="343" pos:column="16"/></name> <init pos:line="343" pos:column="17">= <expr><name><name pos:line="343" pos:column="19">r<pos:position pos:line="343" pos:column="20"/></name><operator pos:line="343" pos:column="20">-&gt;<pos:position pos:line="343" pos:column="25"/></operator><name pos:line="343" pos:column="22">server<pos:position pos:line="343" pos:column="28"/></name><operator pos:line="343" pos:column="28">-&gt;<pos:position pos:line="343" pos:column="33"/></operator><name pos:line="343" pos:column="30">module_config<pos:position pos:line="343" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="343" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="344" pos:column="5">proxy_server_conf<pos:position pos:line="344" pos:column="22"/></name> <modifier pos:line="344" pos:column="23">*<pos:position pos:line="344" pos:column="24"/></modifier></type><name pos:line="344" pos:column="24">conf<pos:position pos:line="344" pos:column="28"/></name> <init pos:line="344" pos:column="29">= <expr><operator pos:line="344" pos:column="31">(<pos:position pos:line="344" pos:column="32"/></operator><name pos:line="344" pos:column="32">proxy_server_conf<pos:position pos:line="344" pos:column="49"/></name> <operator pos:line="344" pos:column="50">*<pos:position pos:line="344" pos:column="51"/></operator><operator pos:line="344" pos:column="51">)<pos:position pos:line="344" pos:column="52"/></operator>
        <call><name pos:line="345" pos:column="9">ap_get_module_config<pos:position pos:line="345" pos:column="29"/></name><argument_list pos:line="345" pos:column="29">(<argument><expr><name pos:line="345" pos:column="30">sconf<pos:position pos:line="345" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="345" pos:column="37">&amp;<pos:position pos:line="345" pos:column="42"/></operator><name pos:line="345" pos:column="38">proxy_module<pos:position pos:line="345" pos:column="50"/></name></expr></argument>)<pos:position pos:line="345" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="345" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="346" pos:column="5">apr_array_header_t<pos:position pos:line="346" pos:column="23"/></name> <modifier pos:line="346" pos:column="24">*<pos:position pos:line="346" pos:column="25"/></modifier></type><name pos:line="346" pos:column="25">proxies<pos:position pos:line="346" pos:column="32"/></name> <init pos:line="346" pos:column="33">= <expr><name><name pos:line="346" pos:column="35">conf<pos:position pos:line="346" pos:column="39"/></name><operator pos:line="346" pos:column="39">-&gt;<pos:position pos:line="346" pos:column="44"/></operator><name pos:line="346" pos:column="41">proxies<pos:position pos:line="346" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="346" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="347" pos:column="5">struct<pos:position pos:line="347" pos:column="11"/></name> <name pos:line="347" pos:column="12">proxy_remote<pos:position pos:line="347" pos:column="24"/></name></name> <modifier pos:line="347" pos:column="25">*<pos:position pos:line="347" pos:column="26"/></modifier></type><name pos:line="347" pos:column="26">ents<pos:position pos:line="347" pos:column="30"/></name> <init pos:line="347" pos:column="31">= <expr><operator pos:line="347" pos:column="33">(<pos:position pos:line="347" pos:column="34"/></operator>struct <name pos:line="347" pos:column="41">proxy_remote<pos:position pos:line="347" pos:column="53"/></name> <operator pos:line="347" pos:column="54">*<pos:position pos:line="347" pos:column="55"/></operator><operator pos:line="347" pos:column="55">)<pos:position pos:line="347" pos:column="56"/></operator> <name><name pos:line="347" pos:column="57">proxies<pos:position pos:line="347" pos:column="64"/></name><operator pos:line="347" pos:column="64">-&gt;<pos:position pos:line="347" pos:column="69"/></operator><name pos:line="347" pos:column="66">elts<pos:position pos:line="347" pos:column="70"/></name></name></expr></init></decl>;<pos:position pos:line="347" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="348" pos:column="5">int<pos:position pos:line="348" pos:column="8"/></name></type> <name pos:line="348" pos:column="9">i<pos:position pos:line="348" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="348" pos:column="12">rc<pos:position pos:line="348" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="348" pos:column="16">access_status<pos:position pos:line="348" pos:column="29"/></name></decl>;<pos:position pos:line="348" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="349" pos:column="5">int<pos:position pos:line="349" pos:column="8"/></name></type> <name pos:line="349" pos:column="9">direct_connect<pos:position pos:line="349" pos:column="23"/></name> <init pos:line="349" pos:column="24">= <expr><literal type="number" pos:line="349" pos:column="26">0<pos:position pos:line="349" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="349" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="350" pos:column="5">const<pos:position pos:line="350" pos:column="10"/></specifier> <name pos:line="350" pos:column="11">char<pos:position pos:line="350" pos:column="15"/></name> <modifier pos:line="350" pos:column="16">*<pos:position pos:line="350" pos:column="17"/></modifier></type><name pos:line="350" pos:column="17">str<pos:position pos:line="350" pos:column="20"/></name></decl>;<pos:position pos:line="350" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="351" pos:column="5">long<pos:position pos:line="351" pos:column="9"/></name></type> <name pos:line="351" pos:column="10">maxfwd<pos:position pos:line="351" pos:column="16"/></name></decl>;<pos:position pos:line="351" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="353" pos:column="5">/* is this for us? */</comment>
    <if pos:line="354" pos:column="5">if <condition pos:line="354" pos:column="8">(<expr><operator pos:line="354" pos:column="9">!<pos:position pos:line="354" pos:column="10"/></operator><name><name pos:line="354" pos:column="10">r<pos:position pos:line="354" pos:column="11"/></name><operator pos:line="354" pos:column="11">-&gt;<pos:position pos:line="354" pos:column="16"/></operator><name pos:line="354" pos:column="13">proxyreq<pos:position pos:line="354" pos:column="21"/></name></name> <operator pos:line="354" pos:column="22">||<pos:position pos:line="354" pos:column="24"/></operator> <call><name pos:line="354" pos:column="25">strncmp<pos:position pos:line="354" pos:column="32"/></name><argument_list pos:line="354" pos:column="32">(<argument><expr><name><name pos:line="354" pos:column="33">r<pos:position pos:line="354" pos:column="34"/></name><operator pos:line="354" pos:column="34">-&gt;<pos:position pos:line="354" pos:column="39"/></operator><name pos:line="354" pos:column="36">filename<pos:position pos:line="354" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="354" pos:column="46">"proxy:"<pos:position pos:line="354" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="354" pos:column="56">6<pos:position pos:line="354" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="354" pos:column="58"/></argument_list></call> <operator pos:line="354" pos:column="59">!=<pos:position pos:line="354" pos:column="61"/></operator> <literal type="number" pos:line="354" pos:column="62">0<pos:position pos:line="354" pos:column="63"/></literal></expr>)<pos:position pos:line="354" pos:column="64"/></condition><then pos:line="354" pos:column="64">
        <block type="pseudo"><return pos:line="355" pos:column="9">return <expr><name pos:line="355" pos:column="16">DECLINED<pos:position pos:line="355" pos:column="24"/></name></expr>;<pos:position pos:line="355" pos:column="25"/></return></block></then></if>

    <comment type="block" pos:line="357" pos:column="5">/* handle max-forwards / OPTIONS / TRACE */</comment>
    <if pos:line="358" pos:column="5">if <condition pos:line="358" pos:column="8">(<expr><operator pos:line="358" pos:column="9">(<pos:position pos:line="358" pos:column="10"/></operator><name pos:line="358" pos:column="10">str<pos:position pos:line="358" pos:column="13"/></name> <operator pos:line="358" pos:column="14">=<pos:position pos:line="358" pos:column="15"/></operator> <call><name pos:line="358" pos:column="16">apr_table_get<pos:position pos:line="358" pos:column="29"/></name><argument_list pos:line="358" pos:column="29">(<argument><expr><name><name pos:line="358" pos:column="30">r<pos:position pos:line="358" pos:column="31"/></name><operator pos:line="358" pos:column="31">-&gt;<pos:position pos:line="358" pos:column="36"/></operator><name pos:line="358" pos:column="33">headers_in<pos:position pos:line="358" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="358" pos:column="45">"Max-Forwards"<pos:position pos:line="358" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="358" pos:column="60"/></argument_list></call><operator pos:line="358" pos:column="60">)<pos:position pos:line="358" pos:column="61"/></operator></expr>)<pos:position pos:line="358" pos:column="62"/></condition><then pos:line="358" pos:column="62"> <block pos:line="358" pos:column="63">{
        <expr_stmt><expr><name pos:line="359" pos:column="9">maxfwd<pos:position pos:line="359" pos:column="15"/></name> <operator pos:line="359" pos:column="16">=<pos:position pos:line="359" pos:column="17"/></operator> <call><name pos:line="359" pos:column="18">strtol<pos:position pos:line="359" pos:column="24"/></name><argument_list pos:line="359" pos:column="24">(<argument><expr><name pos:line="359" pos:column="25">str<pos:position pos:line="359" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="30">NULL<pos:position pos:line="359" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="359" pos:column="36">10<pos:position pos:line="359" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="359" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="40"/></expr_stmt>
        <if pos:line="360" pos:column="9">if <condition pos:line="360" pos:column="12">(<expr><name pos:line="360" pos:column="13">maxfwd<pos:position pos:line="360" pos:column="19"/></name> <operator pos:line="360" pos:column="20">&lt;<pos:position pos:line="360" pos:column="24"/></operator> <literal type="number" pos:line="360" pos:column="22">1<pos:position pos:line="360" pos:column="23"/></literal></expr>)<pos:position pos:line="360" pos:column="24"/></condition><then pos:line="360" pos:column="24"> <block pos:line="360" pos:column="25">{
            <switch pos:line="361" pos:column="13">switch <condition pos:line="361" pos:column="20">(<expr><name><name pos:line="361" pos:column="21">r<pos:position pos:line="361" pos:column="22"/></name><operator pos:line="361" pos:column="22">-&gt;<pos:position pos:line="361" pos:column="27"/></operator><name pos:line="361" pos:column="24">method_number<pos:position pos:line="361" pos:column="37"/></name></name></expr>)<pos:position pos:line="361" pos:column="38"/></condition> <block pos:line="361" pos:column="39">{
            <case pos:line="362" pos:column="13">case <expr><name pos:line="362" pos:column="18">M_TRACE<pos:position pos:line="362" pos:column="25"/></name></expr>:<pos:position pos:line="362" pos:column="26"/></case> <block pos:line="362" pos:column="27">{
                <decl_stmt><decl><type><name pos:line="363" pos:column="17">int<pos:position pos:line="363" pos:column="20"/></name></type> <name pos:line="363" pos:column="21">access_status<pos:position pos:line="363" pos:column="34"/></name></decl>;<pos:position pos:line="363" pos:column="35"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="364" pos:column="17">r<pos:position pos:line="364" pos:column="18"/></name><operator pos:line="364" pos:column="18">-&gt;<pos:position pos:line="364" pos:column="23"/></operator><name pos:line="364" pos:column="20">proxyreq<pos:position pos:line="364" pos:column="28"/></name></name> <operator pos:line="364" pos:column="29">=<pos:position pos:line="364" pos:column="30"/></operator> <name pos:line="364" pos:column="31">PROXYREQ_NONE<pos:position pos:line="364" pos:column="44"/></name></expr>;<pos:position pos:line="364" pos:column="45"/></expr_stmt>
                <if pos:line="365" pos:column="17">if <condition pos:line="365" pos:column="20">(<expr><operator pos:line="365" pos:column="21">(<pos:position pos:line="365" pos:column="22"/></operator><name pos:line="365" pos:column="22">access_status<pos:position pos:line="365" pos:column="35"/></name> <operator pos:line="365" pos:column="36">=<pos:position pos:line="365" pos:column="37"/></operator> <call><name pos:line="365" pos:column="38">ap_send_http_trace<pos:position pos:line="365" pos:column="56"/></name><argument_list pos:line="365" pos:column="56">(<argument><expr><name pos:line="365" pos:column="57">r<pos:position pos:line="365" pos:column="58"/></name></expr></argument>)<pos:position pos:line="365" pos:column="59"/></argument_list></call><operator pos:line="365" pos:column="59">)<pos:position pos:line="365" pos:column="60"/></operator></expr>)<pos:position pos:line="365" pos:column="61"/></condition><then pos:line="365" pos:column="61">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="366" pos:column="21">ap_die<pos:position pos:line="366" pos:column="27"/></name><argument_list pos:line="366" pos:column="27">(<argument><expr><name pos:line="366" pos:column="28">access_status<pos:position pos:line="366" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="43">r<pos:position pos:line="366" pos:column="44"/></name></expr></argument>)<pos:position pos:line="366" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="46"/></expr_stmt></block></then>
                <else pos:line="367" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="368" pos:column="21">ap_finalize_request_protocol<pos:position pos:line="368" pos:column="49"/></name><argument_list pos:line="368" pos:column="49">(<argument><expr><name pos:line="368" pos:column="50">r<pos:position pos:line="368" pos:column="51"/></name></expr></argument>)<pos:position pos:line="368" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="53"/></expr_stmt></block></else></if>
                <return pos:line="369" pos:column="17">return <expr><name pos:line="369" pos:column="24">OK<pos:position pos:line="369" pos:column="26"/></name></expr>;<pos:position pos:line="369" pos:column="27"/></return>
            }<pos:position pos:line="370" pos:column="14"/></block>
            <case pos:line="371" pos:column="13">case <expr><name pos:line="371" pos:column="18">M_OPTIONS<pos:position pos:line="371" pos:column="27"/></name></expr>:<pos:position pos:line="371" pos:column="28"/></case> <block pos:line="371" pos:column="29">{
                <decl_stmt><decl><type><name pos:line="372" pos:column="17">int<pos:position pos:line="372" pos:column="20"/></name></type> <name pos:line="372" pos:column="21">access_status<pos:position pos:line="372" pos:column="34"/></name></decl>;<pos:position pos:line="372" pos:column="35"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="373" pos:column="17">r<pos:position pos:line="373" pos:column="18"/></name><operator pos:line="373" pos:column="18">-&gt;<pos:position pos:line="373" pos:column="23"/></operator><name pos:line="373" pos:column="20">proxyreq<pos:position pos:line="373" pos:column="28"/></name></name> <operator pos:line="373" pos:column="29">=<pos:position pos:line="373" pos:column="30"/></operator> <name pos:line="373" pos:column="31">PROXYREQ_NONE<pos:position pos:line="373" pos:column="44"/></name></expr>;<pos:position pos:line="373" pos:column="45"/></expr_stmt>
                <if pos:line="374" pos:column="17">if <condition pos:line="374" pos:column="20">(<expr><operator pos:line="374" pos:column="21">(<pos:position pos:line="374" pos:column="22"/></operator><name pos:line="374" pos:column="22">access_status<pos:position pos:line="374" pos:column="35"/></name> <operator pos:line="374" pos:column="36">=<pos:position pos:line="374" pos:column="37"/></operator> <call><name pos:line="374" pos:column="38">ap_send_http_options<pos:position pos:line="374" pos:column="58"/></name><argument_list pos:line="374" pos:column="58">(<argument><expr><name pos:line="374" pos:column="59">r<pos:position pos:line="374" pos:column="60"/></name></expr></argument>)<pos:position pos:line="374" pos:column="61"/></argument_list></call><operator pos:line="374" pos:column="61">)<pos:position pos:line="374" pos:column="62"/></operator></expr>)<pos:position pos:line="374" pos:column="63"/></condition><then pos:line="374" pos:column="63">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="375" pos:column="21">ap_die<pos:position pos:line="375" pos:column="27"/></name><argument_list pos:line="375" pos:column="27">(<argument><expr><name pos:line="375" pos:column="28">access_status<pos:position pos:line="375" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="375" pos:column="43">r<pos:position pos:line="375" pos:column="44"/></name></expr></argument>)<pos:position pos:line="375" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="46"/></expr_stmt></block></then>
                <else pos:line="376" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="377" pos:column="21">ap_finalize_request_protocol<pos:position pos:line="377" pos:column="49"/></name><argument_list pos:line="377" pos:column="49">(<argument><expr><name pos:line="377" pos:column="50">r<pos:position pos:line="377" pos:column="51"/></name></expr></argument>)<pos:position pos:line="377" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="53"/></expr_stmt></block></else></if>
                <return pos:line="378" pos:column="17">return <expr><name pos:line="378" pos:column="24">OK<pos:position pos:line="378" pos:column="26"/></name></expr>;<pos:position pos:line="378" pos:column="27"/></return>
            }<pos:position pos:line="379" pos:column="14"/></block>
            <default pos:line="380" pos:column="13">default:<pos:position pos:line="380" pos:column="21"/></default> <block pos:line="380" pos:column="22">{
                <return pos:line="381" pos:column="17">return <expr><call><name pos:line="381" pos:column="24">ap_proxyerror<pos:position pos:line="381" pos:column="37"/></name><argument_list pos:line="381" pos:column="37">(<argument><expr><name pos:line="381" pos:column="38">r<pos:position pos:line="381" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="381" pos:column="41">HTTP_BAD_GATEWAY<pos:position pos:line="381" pos:column="57"/></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="382" pos:column="38">"Max-Forwards has reached zero - proxy loop?"<pos:position pos:line="382" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="382" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="85"/></return>
            }<pos:position pos:line="383" pos:column="14"/></block>
            }<pos:position pos:line="384" pos:column="14"/></block></switch>
        }<pos:position pos:line="385" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="386" pos:column="9">maxfwd<pos:position pos:line="386" pos:column="15"/></name> <operator pos:line="386" pos:column="16">=<pos:position pos:line="386" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="386" pos:column="18">(<pos:position pos:line="386" pos:column="19"/></operator><name pos:line="386" pos:column="19">maxfwd<pos:position pos:line="386" pos:column="25"/></name> <operator pos:line="386" pos:column="26">&gt;<pos:position pos:line="386" pos:column="30"/></operator> <literal type="number" pos:line="386" pos:column="28">0<pos:position pos:line="386" pos:column="29"/></literal><operator pos:line="386" pos:column="29">)<pos:position pos:line="386" pos:column="30"/></operator></expr> ?<pos:position pos:line="386" pos:column="32"/></condition><then pos:line="386" pos:column="32"> <expr><name pos:line="386" pos:column="33">maxfwd<pos:position pos:line="386" pos:column="39"/></name> <operator pos:line="386" pos:column="40">-<pos:position pos:line="386" pos:column="41"/></operator> <literal type="number" pos:line="386" pos:column="42">1<pos:position pos:line="386" pos:column="43"/></literal></expr> <pos:position pos:line="386" pos:column="44"/></then><else pos:line="386" pos:column="44">: <expr><literal type="number" pos:line="386" pos:column="46">0<pos:position pos:line="386" pos:column="47"/></literal></expr></else></ternary></expr>;<pos:position pos:line="386" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="387" pos:column="6"/></block></then>
    <else pos:line="388" pos:column="5">else <block pos:line="388" pos:column="10">{
        <comment type="block" pos:line="389" pos:column="9">/* set configured max-forwards */</comment>
        <expr_stmt><expr><name pos:line="390" pos:column="9">maxfwd<pos:position pos:line="390" pos:column="15"/></name> <operator pos:line="390" pos:column="16">=<pos:position pos:line="390" pos:column="17"/></operator> <name><name pos:line="390" pos:column="18">conf<pos:position pos:line="390" pos:column="22"/></name><operator pos:line="390" pos:column="22">-&gt;<pos:position pos:line="390" pos:column="27"/></operator><name pos:line="390" pos:column="24">maxfwd<pos:position pos:line="390" pos:column="30"/></name></name></expr>;<pos:position pos:line="390" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="391" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="392" pos:column="5">apr_table_set<pos:position pos:line="392" pos:column="18"/></name><argument_list pos:line="392" pos:column="18">(<argument><expr><name><name pos:line="392" pos:column="19">r<pos:position pos:line="392" pos:column="20"/></name><operator pos:line="392" pos:column="20">-&gt;<pos:position pos:line="392" pos:column="25"/></operator><name pos:line="392" pos:column="22">headers_in<pos:position pos:line="392" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="392" pos:column="34">"Max-Forwards"<pos:position pos:line="392" pos:column="48"/></literal></expr></argument>, 
                  <argument><expr><call><name pos:line="393" pos:column="19">apr_psprintf<pos:position pos:line="393" pos:column="31"/></name><argument_list pos:line="393" pos:column="31">(<argument><expr><name><name pos:line="393" pos:column="32">r<pos:position pos:line="393" pos:column="33"/></name><operator pos:line="393" pos:column="33">-&gt;<pos:position pos:line="393" pos:column="38"/></operator><name pos:line="393" pos:column="35">pool<pos:position pos:line="393" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="393" pos:column="41">"%ld"<pos:position pos:line="393" pos:column="46"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="393" pos:column="48">(<pos:position pos:line="393" pos:column="49"/></operator><name pos:line="393" pos:column="49">maxfwd<pos:position pos:line="393" pos:column="55"/></name> <operator pos:line="393" pos:column="56">&gt;<pos:position pos:line="393" pos:column="60"/></operator> <literal type="number" pos:line="393" pos:column="58">0<pos:position pos:line="393" pos:column="59"/></literal><operator pos:line="393" pos:column="59">)<pos:position pos:line="393" pos:column="60"/></operator></expr> ?<pos:position pos:line="393" pos:column="62"/></condition><then pos:line="393" pos:column="62"> <expr><name pos:line="393" pos:column="63">maxfwd<pos:position pos:line="393" pos:column="69"/></name></expr> <pos:position pos:line="393" pos:column="70"/></then><else pos:line="393" pos:column="70">: <expr><literal type="number" pos:line="393" pos:column="72">0<pos:position pos:line="393" pos:column="73"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="393" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="393" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="76"/></expr_stmt>

    <expr_stmt><expr><name pos:line="395" pos:column="5">url<pos:position pos:line="395" pos:column="8"/></name> <operator pos:line="395" pos:column="9">=<pos:position pos:line="395" pos:column="10"/></operator> <name><name pos:line="395" pos:column="11">r<pos:position pos:line="395" pos:column="12"/></name><operator pos:line="395" pos:column="12">-&gt;<pos:position pos:line="395" pos:column="17"/></operator><name pos:line="395" pos:column="14">filename<pos:position pos:line="395" pos:column="22"/></name></name> <operator pos:line="395" pos:column="23">+<pos:position pos:line="395" pos:column="24"/></operator> <literal type="number" pos:line="395" pos:column="25">6<pos:position pos:line="395" pos:column="26"/></literal></expr>;<pos:position pos:line="395" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="396" pos:column="5">p<pos:position pos:line="396" pos:column="6"/></name> <operator pos:line="396" pos:column="7">=<pos:position pos:line="396" pos:column="8"/></operator> <call><name pos:line="396" pos:column="9">strchr<pos:position pos:line="396" pos:column="15"/></name><argument_list pos:line="396" pos:column="15">(<argument><expr><name pos:line="396" pos:column="16">url<pos:position pos:line="396" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="396" pos:column="21">':'<pos:position pos:line="396" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="396" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="26"/></expr_stmt>
    <if pos:line="397" pos:column="5">if <condition pos:line="397" pos:column="8">(<expr><name pos:line="397" pos:column="9">p<pos:position pos:line="397" pos:column="10"/></name> <operator pos:line="397" pos:column="11">==<pos:position pos:line="397" pos:column="13"/></operator> <name pos:line="397" pos:column="14">NULL<pos:position pos:line="397" pos:column="18"/></name></expr>)<pos:position pos:line="397" pos:column="19"/></condition><then pos:line="397" pos:column="19">
        <block type="pseudo"><return pos:line="398" pos:column="9">return <expr><name pos:line="398" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="398" pos:column="32"/></name></expr>;<pos:position pos:line="398" pos:column="33"/></return></block></then></if>

    <comment type="block" pos:line="400" pos:column="5">/* If the host doesn't have a domain name, add one and redirect. */</comment>
    <if pos:line="401" pos:column="5">if <condition pos:line="401" pos:column="8">(<expr><name><name pos:line="401" pos:column="9">conf<pos:position pos:line="401" pos:column="13"/></name><operator pos:line="401" pos:column="13">-&gt;<pos:position pos:line="401" pos:column="18"/></operator><name pos:line="401" pos:column="15">domain<pos:position pos:line="401" pos:column="21"/></name></name> <operator pos:line="401" pos:column="22">!=<pos:position pos:line="401" pos:column="24"/></operator> <name pos:line="401" pos:column="25">NULL<pos:position pos:line="401" pos:column="29"/></name></expr>)<pos:position pos:line="401" pos:column="30"/></condition><then pos:line="401" pos:column="30"> <block pos:line="401" pos:column="31">{
        <expr_stmt><expr><name pos:line="402" pos:column="9">rc<pos:position pos:line="402" pos:column="11"/></name> <operator pos:line="402" pos:column="12">=<pos:position pos:line="402" pos:column="13"/></operator> <call><name pos:line="402" pos:column="14">proxy_needsdomain<pos:position pos:line="402" pos:column="31"/></name><argument_list pos:line="402" pos:column="31">(<argument><expr><name pos:line="402" pos:column="32">r<pos:position pos:line="402" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="402" pos:column="35">url<pos:position pos:line="402" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="402" pos:column="40">conf<pos:position pos:line="402" pos:column="44"/></name><operator pos:line="402" pos:column="44">-&gt;<pos:position pos:line="402" pos:column="49"/></operator><name pos:line="402" pos:column="46">domain<pos:position pos:line="402" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="402" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="54"/></expr_stmt>
        <if pos:line="403" pos:column="9">if <condition pos:line="403" pos:column="12">(<expr><call><name pos:line="403" pos:column="13">ap_is_HTTP_REDIRECT<pos:position pos:line="403" pos:column="32"/></name><argument_list pos:line="403" pos:column="32">(<argument><expr><name pos:line="403" pos:column="33">rc<pos:position pos:line="403" pos:column="35"/></name></expr></argument>)<pos:position pos:line="403" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="403" pos:column="37"/></condition><then pos:line="403" pos:column="37">
            <block type="pseudo"><return pos:line="404" pos:column="13">return <expr><name pos:line="404" pos:column="20">HTTP_MOVED_PERMANENTLY<pos:position pos:line="404" pos:column="42"/></name></expr>;<pos:position pos:line="404" pos:column="43"/></return></block></then></if>
    }<pos:position pos:line="405" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="407" pos:column="5">*<pos:position pos:line="407" pos:column="6"/></operator><name pos:line="407" pos:column="6">p<pos:position pos:line="407" pos:column="7"/></name> <operator pos:line="407" pos:column="8">=<pos:position pos:line="407" pos:column="9"/></operator> <literal type="char" pos:line="407" pos:column="10">'\0'<pos:position pos:line="407" pos:column="14"/></literal></expr>;<pos:position pos:line="407" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="408" pos:column="5">scheme<pos:position pos:line="408" pos:column="11"/></name> <operator pos:line="408" pos:column="12">=<pos:position pos:line="408" pos:column="13"/></operator> <call><name pos:line="408" pos:column="14">apr_pstrdup<pos:position pos:line="408" pos:column="25"/></name><argument_list pos:line="408" pos:column="25">(<argument><expr><name><name pos:line="408" pos:column="26">r<pos:position pos:line="408" pos:column="27"/></name><operator pos:line="408" pos:column="27">-&gt;<pos:position pos:line="408" pos:column="32"/></operator><name pos:line="408" pos:column="29">pool<pos:position pos:line="408" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="408" pos:column="35">url<pos:position pos:line="408" pos:column="38"/></name></expr></argument>)<pos:position pos:line="408" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="408" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="409" pos:column="5">*<pos:position pos:line="409" pos:column="6"/></operator><name pos:line="409" pos:column="6">p<pos:position pos:line="409" pos:column="7"/></name> <operator pos:line="409" pos:column="8">=<pos:position pos:line="409" pos:column="9"/></operator> <literal type="char" pos:line="409" pos:column="10">':'<pos:position pos:line="409" pos:column="13"/></literal></expr>;<pos:position pos:line="409" pos:column="14"/></expr_stmt>

    <comment type="block" pos:line="411" pos:column="5">/* Check URI's destination host against NoProxy hosts */</comment>
    <comment type="block" pos:line="412" pos:column="5">/* Bypass ProxyRemote server lookup if configured as NoProxy */</comment>
    <comment type="block" pos:line="413" pos:column="5">/* we only know how to handle communication to a proxy via http */</comment>
    <comment type="block" pos:line="414" pos:column="5">/*if (strcasecmp(scheme, "http") == 0) */</comment>
    <block pos:line="415" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="416" pos:column="9">int<pos:position pos:line="416" pos:column="12"/></name></type> <name pos:line="416" pos:column="13">ii<pos:position pos:line="416" pos:column="15"/></name></decl>;<pos:position pos:line="416" pos:column="16"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="417" pos:column="9">struct<pos:position pos:line="417" pos:column="15"/></name> <name pos:line="417" pos:column="16">dirconn_entry<pos:position pos:line="417" pos:column="29"/></name></name> <modifier pos:line="417" pos:column="30">*<pos:position pos:line="417" pos:column="31"/></modifier></type><name pos:line="417" pos:column="31">list<pos:position pos:line="417" pos:column="35"/></name> <init pos:line="417" pos:column="36">= <expr><operator pos:line="417" pos:column="38">(<pos:position pos:line="417" pos:column="39"/></operator>struct <name pos:line="417" pos:column="46">dirconn_entry<pos:position pos:line="417" pos:column="59"/></name> <operator pos:line="417" pos:column="60">*<pos:position pos:line="417" pos:column="61"/></operator><operator pos:line="417" pos:column="61">)<pos:position pos:line="417" pos:column="62"/></operator> <name><name pos:line="417" pos:column="63">conf<pos:position pos:line="417" pos:column="67"/></name><operator pos:line="417" pos:column="67">-&gt;<pos:position pos:line="417" pos:column="72"/></operator><name pos:line="417" pos:column="69">dirconn<pos:position pos:line="417" pos:column="76"/></name><operator pos:line="417" pos:column="76">-&gt;<pos:position pos:line="417" pos:column="81"/></operator><name pos:line="417" pos:column="78">elts<pos:position pos:line="417" pos:column="82"/></name></name></expr></init></decl>;<pos:position pos:line="417" pos:column="83"/></decl_stmt>

        <for pos:line="419" pos:column="9">for <control pos:line="419" pos:column="13">(<init><expr><name pos:line="419" pos:column="14">direct_connect<pos:position pos:line="419" pos:column="28"/></name> <operator pos:line="419" pos:column="29">=<pos:position pos:line="419" pos:column="30"/></operator> <name pos:line="419" pos:column="31">ii<pos:position pos:line="419" pos:column="33"/></name> <operator pos:line="419" pos:column="34">=<pos:position pos:line="419" pos:column="35"/></operator> <literal type="number" pos:line="419" pos:column="36">0<pos:position pos:line="419" pos:column="37"/></literal></expr>;<pos:position pos:line="419" pos:column="38"/></init> <condition><expr><name pos:line="419" pos:column="39">ii<pos:position pos:line="419" pos:column="41"/></name> <operator pos:line="419" pos:column="42">&lt;<pos:position pos:line="419" pos:column="46"/></operator> <name><name pos:line="419" pos:column="44">conf<pos:position pos:line="419" pos:column="48"/></name><operator pos:line="419" pos:column="48">-&gt;<pos:position pos:line="419" pos:column="53"/></operator><name pos:line="419" pos:column="50">dirconn<pos:position pos:line="419" pos:column="57"/></name><operator pos:line="419" pos:column="57">-&gt;<pos:position pos:line="419" pos:column="62"/></operator><name pos:line="419" pos:column="59">nelts<pos:position pos:line="419" pos:column="64"/></name></name> <operator pos:line="419" pos:column="65">&amp;&amp;<pos:position pos:line="419" pos:column="75"/></operator> <operator pos:line="419" pos:column="68">!<pos:position pos:line="419" pos:column="69"/></operator><name pos:line="419" pos:column="69">direct_connect<pos:position pos:line="419" pos:column="83"/></name></expr>;<pos:position pos:line="419" pos:column="84"/></condition> <incr><expr><name pos:line="419" pos:column="85">ii<pos:position pos:line="419" pos:column="87"/></name><operator pos:line="419" pos:column="87">++<pos:position pos:line="419" pos:column="89"/></operator></expr></incr>)<pos:position pos:line="419" pos:column="90"/></control> <block pos:line="419" pos:column="91">{
            <expr_stmt><expr><name pos:line="420" pos:column="13">direct_connect<pos:position pos:line="420" pos:column="27"/></name> <operator pos:line="420" pos:column="28">=<pos:position pos:line="420" pos:column="29"/></operator> <name><name pos:line="420" pos:column="30">list<pos:position pos:line="420" pos:column="34"/></name><index pos:line="420" pos:column="34">[<expr><name pos:line="420" pos:column="35">ii<pos:position pos:line="420" pos:column="37"/></name></expr>]<pos:position pos:line="420" pos:column="38"/></index></name><operator pos:line="420" pos:column="38">.<pos:position pos:line="420" pos:column="39"/></operator><call><name pos:line="420" pos:column="39">matcher<pos:position pos:line="420" pos:column="46"/></name><argument_list pos:line="420" pos:column="46">(<argument><expr><operator pos:line="420" pos:column="47">&amp;<pos:position pos:line="420" pos:column="52"/></operator><name><name pos:line="420" pos:column="48">list<pos:position pos:line="420" pos:column="52"/></name><index pos:line="420" pos:column="52">[<expr><name pos:line="420" pos:column="53">ii<pos:position pos:line="420" pos:column="55"/></name></expr>]<pos:position pos:line="420" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="420" pos:column="58">r<pos:position pos:line="420" pos:column="59"/></name></expr></argument>)<pos:position pos:line="420" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="420" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="421" pos:column="10"/></block></for>
<cpp:if pos:line="422" pos:column="1">#<cpp:directive pos:line="422" pos:column="2">if<pos:position pos:line="422" pos:column="4"/></cpp:directive> <expr><name pos:line="422" pos:column="5">DEBUGGING<pos:position pos:line="422" pos:column="14"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="423" pos:column="9">ap_log_rerror<pos:position pos:line="423" pos:column="22"/></name><argument_list pos:line="423" pos:column="22">(<argument><expr><name pos:line="423" pos:column="23">APLOG_MARK<pos:position pos:line="423" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="423" pos:column="35">APLOG_DEBUG<pos:position pos:line="423" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="423" pos:column="48">0<pos:position pos:line="423" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="423" pos:column="51">r<pos:position pos:line="423" pos:column="52"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="424" pos:column="23">(<pos:position pos:line="424" pos:column="24"/></operator><name pos:line="424" pos:column="24">direct_connect<pos:position pos:line="424" pos:column="38"/></name><operator pos:line="424" pos:column="38">)<pos:position pos:line="424" pos:column="39"/></operator></expr> ?<pos:position pos:line="424" pos:column="41"/></condition><then pos:line="424" pos:column="41"> <expr><literal type="string" pos:line="424" pos:column="42">"NoProxy for %s"<pos:position pos:line="424" pos:column="58"/></literal></expr> <pos:position pos:line="424" pos:column="59"/></then><else pos:line="424" pos:column="59">: <expr><literal type="string" pos:line="424" pos:column="61">"UseProxy for %s"<pos:position pos:line="424" pos:column="78"/></literal></expr></else></ternary></expr></argument>,
                      <argument><expr><name><name pos:line="425" pos:column="23">r<pos:position pos:line="425" pos:column="24"/></name><operator pos:line="425" pos:column="24">-&gt;<pos:position pos:line="425" pos:column="29"/></operator><name pos:line="425" pos:column="26">uri<pos:position pos:line="425" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="425" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="31"/></expr_stmt>
<cpp:endif pos:line="426" pos:column="1">#<cpp:directive pos:line="426" pos:column="2">endif<pos:position pos:line="426" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="427" pos:column="6"/></block>

    <comment type="block" pos:line="429" pos:column="5">/* firstly, try a proxy, unless a NoProxy directive is active */</comment>
    <if pos:line="430" pos:column="5">if <condition pos:line="430" pos:column="8">(<expr><operator pos:line="430" pos:column="9">!<pos:position pos:line="430" pos:column="10"/></operator><name pos:line="430" pos:column="10">direct_connect<pos:position pos:line="430" pos:column="24"/></name></expr>)<pos:position pos:line="430" pos:column="25"/></condition><then pos:line="430" pos:column="25"> <block pos:line="430" pos:column="26">{
        <for pos:line="431" pos:column="9">for <control pos:line="431" pos:column="13">(<init><expr><name pos:line="431" pos:column="14">i<pos:position pos:line="431" pos:column="15"/></name> <operator pos:line="431" pos:column="16">=<pos:position pos:line="431" pos:column="17"/></operator> <literal type="number" pos:line="431" pos:column="18">0<pos:position pos:line="431" pos:column="19"/></literal></expr>;<pos:position pos:line="431" pos:column="20"/></init> <condition><expr><name pos:line="431" pos:column="21">i<pos:position pos:line="431" pos:column="22"/></name> <operator pos:line="431" pos:column="23">&lt;<pos:position pos:line="431" pos:column="27"/></operator> <name><name pos:line="431" pos:column="25">proxies<pos:position pos:line="431" pos:column="32"/></name><operator pos:line="431" pos:column="32">-&gt;<pos:position pos:line="431" pos:column="37"/></operator><name pos:line="431" pos:column="34">nelts<pos:position pos:line="431" pos:column="39"/></name></name></expr>;<pos:position pos:line="431" pos:column="40"/></condition> <incr><expr><name pos:line="431" pos:column="41">i<pos:position pos:line="431" pos:column="42"/></name><operator pos:line="431" pos:column="42">++<pos:position pos:line="431" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="431" pos:column="45"/></control> <block pos:line="431" pos:column="46">{
            <expr_stmt><expr><name pos:line="432" pos:column="13">p2<pos:position pos:line="432" pos:column="15"/></name> <operator pos:line="432" pos:column="16">=<pos:position pos:line="432" pos:column="17"/></operator> <call><name pos:line="432" pos:column="18">ap_strchr_c<pos:position pos:line="432" pos:column="29"/></name><argument_list pos:line="432" pos:column="29">(<argument><expr><name><name pos:line="432" pos:column="30">ents<pos:position pos:line="432" pos:column="34"/></name><index pos:line="432" pos:column="34">[<expr><name pos:line="432" pos:column="35">i<pos:position pos:line="432" pos:column="36"/></name></expr>]<pos:position pos:line="432" pos:column="37"/></index></name><operator pos:line="432" pos:column="37">.<pos:position pos:line="432" pos:column="38"/></operator><name pos:line="432" pos:column="38">scheme<pos:position pos:line="432" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="432" pos:column="46">':'<pos:position pos:line="432" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="432" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="51"/></expr_stmt>  <comment type="block" pos:line="432" pos:column="53">/* is it a partial URL? */</comment>
            <if pos:line="433" pos:column="13">if <condition pos:line="433" pos:column="16">(<expr><call><name pos:line="433" pos:column="17">strcmp<pos:position pos:line="433" pos:column="23"/></name><argument_list pos:line="433" pos:column="23">(<argument><expr><name><name pos:line="433" pos:column="24">ents<pos:position pos:line="433" pos:column="28"/></name><index pos:line="433" pos:column="28">[<expr><name pos:line="433" pos:column="29">i<pos:position pos:line="433" pos:column="30"/></name></expr>]<pos:position pos:line="433" pos:column="31"/></index></name><operator pos:line="433" pos:column="31">.<pos:position pos:line="433" pos:column="32"/></operator><name pos:line="433" pos:column="32">scheme<pos:position pos:line="433" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="433" pos:column="40">"*"<pos:position pos:line="433" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="433" pos:column="44"/></argument_list></call> <operator pos:line="433" pos:column="45">==<pos:position pos:line="433" pos:column="47"/></operator> <literal type="number" pos:line="433" pos:column="48">0<pos:position pos:line="433" pos:column="49"/></literal> <operator pos:line="433" pos:column="50">||<pos:position pos:line="433" pos:column="52"/></operator>
                <operator pos:line="434" pos:column="17">(<pos:position pos:line="434" pos:column="18"/></operator><name><name pos:line="434" pos:column="18">ents<pos:position pos:line="434" pos:column="22"/></name><index pos:line="434" pos:column="22">[<expr><name pos:line="434" pos:column="23">i<pos:position pos:line="434" pos:column="24"/></name></expr>]<pos:position pos:line="434" pos:column="25"/></index></name><operator pos:line="434" pos:column="25">.<pos:position pos:line="434" pos:column="26"/></operator><name pos:line="434" pos:column="26">use_regex<pos:position pos:line="434" pos:column="35"/></name> <operator pos:line="434" pos:column="36">&amp;&amp;<pos:position pos:line="434" pos:column="46"/></operator> <call><name pos:line="434" pos:column="39">ap_regexec<pos:position pos:line="434" pos:column="49"/></name><argument_list pos:line="434" pos:column="49">(<argument><expr><name><name pos:line="434" pos:column="50">ents<pos:position pos:line="434" pos:column="54"/></name><index pos:line="434" pos:column="54">[<expr><name pos:line="434" pos:column="55">i<pos:position pos:line="434" pos:column="56"/></name></expr>]<pos:position pos:line="434" pos:column="57"/></index></name><operator pos:line="434" pos:column="57">.<pos:position pos:line="434" pos:column="58"/></operator><name pos:line="434" pos:column="58">regexp<pos:position pos:line="434" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="434" pos:column="66">url<pos:position pos:line="434" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="434" pos:column="71">0<pos:position pos:line="434" pos:column="72"/></literal></expr></argument>,<argument><expr><name pos:line="434" pos:column="73">NULL<pos:position pos:line="434" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="434" pos:column="79">0<pos:position pos:line="434" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="434" pos:column="81"/></argument_list></call><operator pos:line="434" pos:column="81">)<pos:position pos:line="434" pos:column="82"/></operator> <operator pos:line="434" pos:column="83">||<pos:position pos:line="434" pos:column="85"/></operator>
                <operator pos:line="435" pos:column="17">(<pos:position pos:line="435" pos:column="18"/></operator><name pos:line="435" pos:column="18">p2<pos:position pos:line="435" pos:column="20"/></name> <operator pos:line="435" pos:column="21">==<pos:position pos:line="435" pos:column="23"/></operator> <name pos:line="435" pos:column="24">NULL<pos:position pos:line="435" pos:column="28"/></name> <operator pos:line="435" pos:column="29">&amp;&amp;<pos:position pos:line="435" pos:column="39"/></operator> <call><name pos:line="435" pos:column="32">strcasecmp<pos:position pos:line="435" pos:column="42"/></name><argument_list pos:line="435" pos:column="42">(<argument><expr><name pos:line="435" pos:column="43">scheme<pos:position pos:line="435" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="435" pos:column="51">ents<pos:position pos:line="435" pos:column="55"/></name><index pos:line="435" pos:column="55">[<expr><name pos:line="435" pos:column="56">i<pos:position pos:line="435" pos:column="57"/></name></expr>]<pos:position pos:line="435" pos:column="58"/></index></name><operator pos:line="435" pos:column="58">.<pos:position pos:line="435" pos:column="59"/></operator><name pos:line="435" pos:column="59">scheme<pos:position pos:line="435" pos:column="65"/></name></expr></argument>)<pos:position pos:line="435" pos:column="66"/></argument_list></call> <operator pos:line="435" pos:column="67">==<pos:position pos:line="435" pos:column="69"/></operator> <literal type="number" pos:line="435" pos:column="70">0<pos:position pos:line="435" pos:column="71"/></literal><operator pos:line="435" pos:column="71">)<pos:position pos:line="435" pos:column="72"/></operator> <operator pos:line="435" pos:column="73">||<pos:position pos:line="435" pos:column="75"/></operator>
                <operator pos:line="436" pos:column="17">(<pos:position pos:line="436" pos:column="18"/></operator><name pos:line="436" pos:column="18">p2<pos:position pos:line="436" pos:column="20"/></name> <operator pos:line="436" pos:column="21">!=<pos:position pos:line="436" pos:column="23"/></operator> <name pos:line="436" pos:column="24">NULL<pos:position pos:line="436" pos:column="28"/></name> <operator pos:line="436" pos:column="29">&amp;&amp;<pos:position pos:line="436" pos:column="39"/></operator>
                 <call><name pos:line="437" pos:column="18">strncasecmp<pos:position pos:line="437" pos:column="29"/></name><argument_list pos:line="437" pos:column="29">(<argument><expr><name pos:line="437" pos:column="30">url<pos:position pos:line="437" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="437" pos:column="35">ents<pos:position pos:line="437" pos:column="39"/></name><index pos:line="437" pos:column="39">[<expr><name pos:line="437" pos:column="40">i<pos:position pos:line="437" pos:column="41"/></name></expr>]<pos:position pos:line="437" pos:column="42"/></index></name><operator pos:line="437" pos:column="42">.<pos:position pos:line="437" pos:column="43"/></operator><name pos:line="437" pos:column="43">scheme<pos:position pos:line="437" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="437" pos:column="51">strlen<pos:position pos:line="437" pos:column="57"/></name><argument_list pos:line="437" pos:column="57">(<argument><expr><name><name pos:line="437" pos:column="58">ents<pos:position pos:line="437" pos:column="62"/></name><index pos:line="437" pos:column="62">[<expr><name pos:line="437" pos:column="63">i<pos:position pos:line="437" pos:column="64"/></name></expr>]<pos:position pos:line="437" pos:column="65"/></index></name><operator pos:line="437" pos:column="65">.<pos:position pos:line="437" pos:column="66"/></operator><name pos:line="437" pos:column="66">scheme<pos:position pos:line="437" pos:column="72"/></name></expr></argument>)<pos:position pos:line="437" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="437" pos:column="74"/></argument_list></call> <operator pos:line="437" pos:column="75">==<pos:position pos:line="437" pos:column="77"/></operator> <literal type="number" pos:line="437" pos:column="78">0<pos:position pos:line="437" pos:column="79"/></literal><operator pos:line="437" pos:column="79">)<pos:position pos:line="437" pos:column="80"/></operator></expr>)<pos:position pos:line="437" pos:column="81"/></condition><then pos:line="437" pos:column="81"> <block pos:line="437" pos:column="82">{

                <comment type="block" pos:line="439" pos:column="17">/* handle the scheme */</comment>
                <expr_stmt><expr><call><name pos:line="440" pos:column="17">ap_log_error<pos:position pos:line="440" pos:column="29"/></name><argument_list pos:line="440" pos:column="29">(<argument><expr><name pos:line="440" pos:column="30">APLOG_MARK<pos:position pos:line="440" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="440" pos:column="42">APLOG_DEBUG<pos:position pos:line="440" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="440" pos:column="55">0<pos:position pos:line="440" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="440" pos:column="58">r<pos:position pos:line="440" pos:column="59"/></name><operator pos:line="440" pos:column="59">-&gt;<pos:position pos:line="440" pos:column="64"/></operator><name pos:line="440" pos:column="61">server<pos:position pos:line="440" pos:column="67"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="441" pos:column="30">"Trying to run scheme_handler against proxy"<pos:position pos:line="441" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="441" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="441" pos:column="76"/></expr_stmt>
                <expr_stmt><expr><name pos:line="442" pos:column="17">access_status<pos:position pos:line="442" pos:column="30"/></name> <operator pos:line="442" pos:column="31">=<pos:position pos:line="442" pos:column="32"/></operator> <call><name pos:line="442" pos:column="33">proxy_run_scheme_handler<pos:position pos:line="442" pos:column="57"/></name><argument_list pos:line="442" pos:column="57">(<argument><expr><name pos:line="442" pos:column="58">r<pos:position pos:line="442" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="61">conf<pos:position pos:line="442" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="67">url<pos:position pos:line="442" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="442" pos:column="72">ents<pos:position pos:line="442" pos:column="76"/></name><index pos:line="442" pos:column="76">[<expr><name pos:line="442" pos:column="77">i<pos:position pos:line="442" pos:column="78"/></name></expr>]<pos:position pos:line="442" pos:column="79"/></index></name><operator pos:line="442" pos:column="79">.<pos:position pos:line="442" pos:column="80"/></operator><name pos:line="442" pos:column="80">hostname<pos:position pos:line="442" pos:column="88"/></name></expr></argument>, <argument><expr><name><name pos:line="442" pos:column="90">ents<pos:position pos:line="442" pos:column="94"/></name><index pos:line="442" pos:column="94">[<expr><name pos:line="442" pos:column="95">i<pos:position pos:line="442" pos:column="96"/></name></expr>]<pos:position pos:line="442" pos:column="97"/></index></name><operator pos:line="442" pos:column="97">.<pos:position pos:line="442" pos:column="98"/></operator><name pos:line="442" pos:column="98">port<pos:position pos:line="442" pos:column="102"/></name></expr></argument>)<pos:position pos:line="442" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="104"/></expr_stmt>

                <comment type="block" pos:line="444" pos:column="17">/* an error or success */</comment>
                <if pos:line="445" pos:column="17">if <condition pos:line="445" pos:column="20">(<expr><name pos:line="445" pos:column="21">access_status<pos:position pos:line="445" pos:column="34"/></name> <operator pos:line="445" pos:column="35">!=<pos:position pos:line="445" pos:column="37"/></operator> <name pos:line="445" pos:column="38">DECLINED<pos:position pos:line="445" pos:column="46"/></name> <operator pos:line="445" pos:column="47">&amp;&amp;<pos:position pos:line="445" pos:column="57"/></operator> <name pos:line="445" pos:column="50">access_status<pos:position pos:line="445" pos:column="63"/></name> <operator pos:line="445" pos:column="64">!=<pos:position pos:line="445" pos:column="66"/></operator> <name pos:line="445" pos:column="67">HTTP_BAD_GATEWAY<pos:position pos:line="445" pos:column="83"/></name></expr>)<pos:position pos:line="445" pos:column="84"/></condition><then pos:line="445" pos:column="84"> <block pos:line="445" pos:column="85">{
                    <return pos:line="446" pos:column="21">return <expr><name pos:line="446" pos:column="28">access_status<pos:position pos:line="446" pos:column="41"/></name></expr>;<pos:position pos:line="446" pos:column="42"/></return>
                }<pos:position pos:line="447" pos:column="18"/></block></then></if>
                <comment type="block" pos:line="448" pos:column="17">/* we failed to talk to the upstream proxy */</comment>
            }<pos:position pos:line="449" pos:column="14"/></block></then></if>
        }<pos:position pos:line="450" pos:column="10"/></block></for>
    }<pos:position pos:line="451" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="453" pos:column="5">/* otherwise, try it direct */</comment>
    <comment type="block" pos:line="454" pos:column="5">/* N.B. what if we're behind a firewall, where we must use a proxy or
     * give up??
     */</comment>

    <comment type="block" pos:line="458" pos:column="5">/* handle the scheme */</comment>
    <expr_stmt><expr><call><name pos:line="459" pos:column="5">ap_log_error<pos:position pos:line="459" pos:column="17"/></name><argument_list pos:line="459" pos:column="17">(<argument><expr><name pos:line="459" pos:column="18">APLOG_MARK<pos:position pos:line="459" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="459" pos:column="30">APLOG_DEBUG<pos:position pos:line="459" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="459" pos:column="43">0<pos:position pos:line="459" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="459" pos:column="46">r<pos:position pos:line="459" pos:column="47"/></name><operator pos:line="459" pos:column="47">-&gt;<pos:position pos:line="459" pos:column="52"/></operator><name pos:line="459" pos:column="49">server<pos:position pos:line="459" pos:column="55"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="460" pos:column="18">"Trying to run scheme_handler"<pos:position pos:line="460" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="460" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="460" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="461" pos:column="5">access_status<pos:position pos:line="461" pos:column="18"/></name> <operator pos:line="461" pos:column="19">=<pos:position pos:line="461" pos:column="20"/></operator> <call><name pos:line="461" pos:column="21">proxy_run_scheme_handler<pos:position pos:line="461" pos:column="45"/></name><argument_list pos:line="461" pos:column="45">(<argument><expr><name pos:line="461" pos:column="46">r<pos:position pos:line="461" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="49">conf<pos:position pos:line="461" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="55">url<pos:position pos:line="461" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="60">NULL<pos:position pos:line="461" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="461" pos:column="66">0<pos:position pos:line="461" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="461" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="461" pos:column="69"/></expr_stmt>
    <if pos:line="462" pos:column="5">if <condition pos:line="462" pos:column="8">(<expr><name pos:line="462" pos:column="9">DECLINED<pos:position pos:line="462" pos:column="17"/></name> <operator pos:line="462" pos:column="18">==<pos:position pos:line="462" pos:column="20"/></operator> <name pos:line="462" pos:column="21">access_status<pos:position pos:line="462" pos:column="34"/></name></expr>)<pos:position pos:line="462" pos:column="35"/></condition><then pos:line="462" pos:column="35"> <block pos:line="462" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="463" pos:column="9">ap_log_error<pos:position pos:line="463" pos:column="21"/></name><argument_list pos:line="463" pos:column="21">(<argument><expr><name pos:line="463" pos:column="22">APLOG_MARK<pos:position pos:line="463" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="463" pos:column="34">APLOG_WARNING<pos:position pos:line="463" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="463" pos:column="49">0<pos:position pos:line="463" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="463" pos:column="52">r<pos:position pos:line="463" pos:column="53"/></name><operator pos:line="463" pos:column="53">-&gt;<pos:position pos:line="463" pos:column="58"/></operator><name pos:line="463" pos:column="55">server<pos:position pos:line="463" pos:column="61"/></name></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="464" pos:column="21">"proxy: No protocol handler was valid for the URL %s. "<pos:position pos:line="464" pos:column="76"/></literal>
                    <literal type="string" pos:line="465" pos:column="21">"If you are using a DSO version of mod_proxy, make sure "<pos:position pos:line="465" pos:column="78"/></literal>
                    <literal type="string" pos:line="466" pos:column="21">"the proxy submodules are included in the configuration "<pos:position pos:line="466" pos:column="78"/></literal>
                    <literal type="string" pos:line="467" pos:column="21">"using LoadModule."<pos:position pos:line="467" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="467" pos:column="42">r<pos:position pos:line="467" pos:column="43"/></name><operator pos:line="467" pos:column="43">-&gt;<pos:position pos:line="467" pos:column="48"/></operator><name pos:line="467" pos:column="45">uri<pos:position pos:line="467" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="467" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="467" pos:column="50"/></expr_stmt>
        <return pos:line="468" pos:column="9">return <expr><name pos:line="468" pos:column="16">HTTP_FORBIDDEN<pos:position pos:line="468" pos:column="30"/></name></expr>;<pos:position pos:line="468" pos:column="31"/></return>
    }<pos:position pos:line="469" pos:column="6"/></block></then></if>
    <return pos:line="470" pos:column="5">return <expr><name pos:line="470" pos:column="12">access_status<pos:position pos:line="470" pos:column="25"/></name></expr>;<pos:position pos:line="470" pos:column="26"/></return>
}<pos:position pos:line="471" pos:column="2"/></block></function>

<comment type="block" pos:line="473" pos:column="1">/* -------------------------------------------------------------- */</comment>
<comment type="block" pos:line="474" pos:column="1">/* Setup configurable data */</comment>

<function><specifier pos:line="476" pos:column="1">static<pos:position pos:line="476" pos:column="7"/></specifier> <type><name pos:line="476" pos:column="8">void<pos:position pos:line="476" pos:column="12"/></name> <modifier pos:line="476" pos:column="13">*<pos:position pos:line="476" pos:column="14"/></modifier></type> <name pos:line="476" pos:column="15">create_proxy_config<pos:position pos:line="476" pos:column="34"/></name><parameter_list pos:line="476" pos:column="34">(<parameter><decl><type><name pos:line="476" pos:column="35">apr_pool_t<pos:position pos:line="476" pos:column="45"/></name> <modifier pos:line="476" pos:column="46">*<pos:position pos:line="476" pos:column="47"/></modifier></type><name pos:line="476" pos:column="47">p<pos:position pos:line="476" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="476" pos:column="50">server_rec<pos:position pos:line="476" pos:column="60"/></name> <modifier pos:line="476" pos:column="61">*<pos:position pos:line="476" pos:column="62"/></modifier></type><name pos:line="476" pos:column="62">s<pos:position pos:line="476" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="476" pos:column="64"/></parameter_list>
<block pos:line="477" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="478" pos:column="5">proxy_server_conf<pos:position pos:line="478" pos:column="22"/></name> <modifier pos:line="478" pos:column="23">*<pos:position pos:line="478" pos:column="24"/></modifier></type><name pos:line="478" pos:column="24">ps<pos:position pos:line="478" pos:column="26"/></name> <init pos:line="478" pos:column="27">= <expr><call><name pos:line="478" pos:column="29">apr_pcalloc<pos:position pos:line="478" pos:column="40"/></name><argument_list pos:line="478" pos:column="40">(<argument><expr><name pos:line="478" pos:column="41">p<pos:position pos:line="478" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="478" pos:column="44">sizeof<argument_list pos:line="478" pos:column="50">(<argument><expr><name pos:line="478" pos:column="51">proxy_server_conf<pos:position pos:line="478" pos:column="68"/></name></expr></argument>)<pos:position pos:line="478" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="478" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="478" pos:column="71"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="480" pos:column="5">ps<pos:position pos:line="480" pos:column="7"/></name><operator pos:line="480" pos:column="7">-&gt;<pos:position pos:line="480" pos:column="12"/></operator><name pos:line="480" pos:column="9">sec_proxy<pos:position pos:line="480" pos:column="18"/></name></name> <operator pos:line="480" pos:column="19">=<pos:position pos:line="480" pos:column="20"/></operator> <call><name pos:line="480" pos:column="21">apr_array_make<pos:position pos:line="480" pos:column="35"/></name><argument_list pos:line="480" pos:column="35">(<argument><expr><name pos:line="480" pos:column="36">p<pos:position pos:line="480" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="480" pos:column="39">10<pos:position pos:line="480" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="480" pos:column="43">sizeof<argument_list pos:line="480" pos:column="49">(<argument><expr><name pos:line="480" pos:column="50">ap_conf_vector_t<pos:position pos:line="480" pos:column="66"/></name> <operator pos:line="480" pos:column="67">*<pos:position pos:line="480" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="480" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="480" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="480" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="481" pos:column="5">ps<pos:position pos:line="481" pos:column="7"/></name><operator pos:line="481" pos:column="7">-&gt;<pos:position pos:line="481" pos:column="12"/></operator><name pos:line="481" pos:column="9">proxies<pos:position pos:line="481" pos:column="16"/></name></name> <operator pos:line="481" pos:column="17">=<pos:position pos:line="481" pos:column="18"/></operator> <call><name pos:line="481" pos:column="19">apr_array_make<pos:position pos:line="481" pos:column="33"/></name><argument_list pos:line="481" pos:column="33">(<argument><expr><name pos:line="481" pos:column="34">p<pos:position pos:line="481" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="481" pos:column="37">10<pos:position pos:line="481" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="481" pos:column="41">sizeof<argument_list pos:line="481" pos:column="47">(<argument><expr pos:line="481" pos:column="48">struct <name pos:line="481" pos:column="55">proxy_remote<pos:position pos:line="481" pos:column="67"/></name></expr></argument>)<pos:position pos:line="481" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="481" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="481" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="482" pos:column="5">ps<pos:position pos:line="482" pos:column="7"/></name><operator pos:line="482" pos:column="7">-&gt;<pos:position pos:line="482" pos:column="12"/></operator><name pos:line="482" pos:column="9">aliases<pos:position pos:line="482" pos:column="16"/></name></name> <operator pos:line="482" pos:column="17">=<pos:position pos:line="482" pos:column="18"/></operator> <call><name pos:line="482" pos:column="19">apr_array_make<pos:position pos:line="482" pos:column="33"/></name><argument_list pos:line="482" pos:column="33">(<argument><expr><name pos:line="482" pos:column="34">p<pos:position pos:line="482" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="482" pos:column="37">10<pos:position pos:line="482" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="482" pos:column="41">sizeof<argument_list pos:line="482" pos:column="47">(<argument><expr pos:line="482" pos:column="48">struct <name pos:line="482" pos:column="55">proxy_alias<pos:position pos:line="482" pos:column="66"/></name></expr></argument>)<pos:position pos:line="482" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="482" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="482" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="483" pos:column="5">ps<pos:position pos:line="483" pos:column="7"/></name><operator pos:line="483" pos:column="7">-&gt;<pos:position pos:line="483" pos:column="12"/></operator><name pos:line="483" pos:column="9">raliases<pos:position pos:line="483" pos:column="17"/></name></name> <operator pos:line="483" pos:column="18">=<pos:position pos:line="483" pos:column="19"/></operator> <call><name pos:line="483" pos:column="20">apr_array_make<pos:position pos:line="483" pos:column="34"/></name><argument_list pos:line="483" pos:column="34">(<argument><expr><name pos:line="483" pos:column="35">p<pos:position pos:line="483" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="483" pos:column="38">10<pos:position pos:line="483" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="483" pos:column="42">sizeof<argument_list pos:line="483" pos:column="48">(<argument><expr pos:line="483" pos:column="49">struct <name pos:line="483" pos:column="56">proxy_alias<pos:position pos:line="483" pos:column="67"/></name></expr></argument>)<pos:position pos:line="483" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="483" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="483" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="484" pos:column="5">ps<pos:position pos:line="484" pos:column="7"/></name><operator pos:line="484" pos:column="7">-&gt;<pos:position pos:line="484" pos:column="12"/></operator><name pos:line="484" pos:column="9">noproxies<pos:position pos:line="484" pos:column="18"/></name></name> <operator pos:line="484" pos:column="19">=<pos:position pos:line="484" pos:column="20"/></operator> <call><name pos:line="484" pos:column="21">apr_array_make<pos:position pos:line="484" pos:column="35"/></name><argument_list pos:line="484" pos:column="35">(<argument><expr><name pos:line="484" pos:column="36">p<pos:position pos:line="484" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="484" pos:column="39">10<pos:position pos:line="484" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="484" pos:column="43">sizeof<argument_list pos:line="484" pos:column="49">(<argument><expr pos:line="484" pos:column="50">struct <name pos:line="484" pos:column="57">noproxy_entry<pos:position pos:line="484" pos:column="70"/></name></expr></argument>)<pos:position pos:line="484" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="484" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="484" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="485" pos:column="5">ps<pos:position pos:line="485" pos:column="7"/></name><operator pos:line="485" pos:column="7">-&gt;<pos:position pos:line="485" pos:column="12"/></operator><name pos:line="485" pos:column="9">dirconn<pos:position pos:line="485" pos:column="16"/></name></name> <operator pos:line="485" pos:column="17">=<pos:position pos:line="485" pos:column="18"/></operator> <call><name pos:line="485" pos:column="19">apr_array_make<pos:position pos:line="485" pos:column="33"/></name><argument_list pos:line="485" pos:column="33">(<argument><expr><name pos:line="485" pos:column="34">p<pos:position pos:line="485" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="485" pos:column="37">10<pos:position pos:line="485" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="485" pos:column="41">sizeof<argument_list pos:line="485" pos:column="47">(<argument><expr pos:line="485" pos:column="48">struct <name pos:line="485" pos:column="55">dirconn_entry<pos:position pos:line="485" pos:column="68"/></name></expr></argument>)<pos:position pos:line="485" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="485" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="485" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="486" pos:column="5">ps<pos:position pos:line="486" pos:column="7"/></name><operator pos:line="486" pos:column="7">-&gt;<pos:position pos:line="486" pos:column="12"/></operator><name pos:line="486" pos:column="9">allowed_connect_ports<pos:position pos:line="486" pos:column="30"/></name></name> <operator pos:line="486" pos:column="31">=<pos:position pos:line="486" pos:column="32"/></operator> <call><name pos:line="486" pos:column="33">apr_array_make<pos:position pos:line="486" pos:column="47"/></name><argument_list pos:line="486" pos:column="47">(<argument><expr><name pos:line="486" pos:column="48">p<pos:position pos:line="486" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="486" pos:column="51">10<pos:position pos:line="486" pos:column="53"/></literal></expr></argument>, <argument><expr><sizeof pos:line="486" pos:column="55">sizeof<argument_list pos:line="486" pos:column="61">(<argument><expr><name pos:line="486" pos:column="62">int<pos:position pos:line="486" pos:column="65"/></name></expr></argument>)<pos:position pos:line="486" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="486" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="486" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="487" pos:column="5">ps<pos:position pos:line="487" pos:column="7"/></name><operator pos:line="487" pos:column="7">-&gt;<pos:position pos:line="487" pos:column="12"/></operator><name pos:line="487" pos:column="9">domain<pos:position pos:line="487" pos:column="15"/></name></name> <operator pos:line="487" pos:column="16">=<pos:position pos:line="487" pos:column="17"/></operator> <name pos:line="487" pos:column="18">NULL<pos:position pos:line="487" pos:column="22"/></name></expr>;<pos:position pos:line="487" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="488" pos:column="5">ps<pos:position pos:line="488" pos:column="7"/></name><operator pos:line="488" pos:column="7">-&gt;<pos:position pos:line="488" pos:column="12"/></operator><name pos:line="488" pos:column="9">viaopt<pos:position pos:line="488" pos:column="15"/></name></name> <operator pos:line="488" pos:column="16">=<pos:position pos:line="488" pos:column="17"/></operator> <name pos:line="488" pos:column="18">via_off<pos:position pos:line="488" pos:column="25"/></name></expr>;<pos:position pos:line="488" pos:column="26"/></expr_stmt> <comment type="block" pos:line="488" pos:column="27">/* initially backward compatible with 1.3.1 */</comment>
    <expr_stmt><expr><name><name pos:line="489" pos:column="5">ps<pos:position pos:line="489" pos:column="7"/></name><operator pos:line="489" pos:column="7">-&gt;<pos:position pos:line="489" pos:column="12"/></operator><name pos:line="489" pos:column="9">viaopt_set<pos:position pos:line="489" pos:column="19"/></name></name> <operator pos:line="489" pos:column="20">=<pos:position pos:line="489" pos:column="21"/></operator> <literal type="number" pos:line="489" pos:column="22">0<pos:position pos:line="489" pos:column="23"/></literal></expr>;<pos:position pos:line="489" pos:column="24"/></expr_stmt> <comment type="block" pos:line="489" pos:column="25">/* 0 means default */</comment>
    <expr_stmt><expr><name><name pos:line="490" pos:column="5">ps<pos:position pos:line="490" pos:column="7"/></name><operator pos:line="490" pos:column="7">-&gt;<pos:position pos:line="490" pos:column="12"/></operator><name pos:line="490" pos:column="9">req<pos:position pos:line="490" pos:column="12"/></name></name> <operator pos:line="490" pos:column="13">=<pos:position pos:line="490" pos:column="14"/></operator> <literal type="number" pos:line="490" pos:column="15">0<pos:position pos:line="490" pos:column="16"/></literal></expr>;<pos:position pos:line="490" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="491" pos:column="5">ps<pos:position pos:line="491" pos:column="7"/></name><operator pos:line="491" pos:column="7">-&gt;<pos:position pos:line="491" pos:column="12"/></operator><name pos:line="491" pos:column="9">req_set<pos:position pos:line="491" pos:column="16"/></name></name> <operator pos:line="491" pos:column="17">=<pos:position pos:line="491" pos:column="18"/></operator> <literal type="number" pos:line="491" pos:column="19">0<pos:position pos:line="491" pos:column="20"/></literal></expr>;<pos:position pos:line="491" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="492" pos:column="5">ps<pos:position pos:line="492" pos:column="7"/></name><operator pos:line="492" pos:column="7">-&gt;<pos:position pos:line="492" pos:column="12"/></operator><name pos:line="492" pos:column="9">recv_buffer_size<pos:position pos:line="492" pos:column="25"/></name></name> <operator pos:line="492" pos:column="26">=<pos:position pos:line="492" pos:column="27"/></operator> <literal type="number" pos:line="492" pos:column="28">0<pos:position pos:line="492" pos:column="29"/></literal></expr>;<pos:position pos:line="492" pos:column="30"/></expr_stmt> <comment type="block" pos:line="492" pos:column="31">/* this default was left unset for some reason */</comment>
    <expr_stmt><expr><name><name pos:line="493" pos:column="5">ps<pos:position pos:line="493" pos:column="7"/></name><operator pos:line="493" pos:column="7">-&gt;<pos:position pos:line="493" pos:column="12"/></operator><name pos:line="493" pos:column="9">recv_buffer_size_set<pos:position pos:line="493" pos:column="29"/></name></name> <operator pos:line="493" pos:column="30">=<pos:position pos:line="493" pos:column="31"/></operator> <literal type="number" pos:line="493" pos:column="32">0<pos:position pos:line="493" pos:column="33"/></literal></expr>;<pos:position pos:line="493" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="494" pos:column="5">ps<pos:position pos:line="494" pos:column="7"/></name><operator pos:line="494" pos:column="7">-&gt;<pos:position pos:line="494" pos:column="12"/></operator><name pos:line="494" pos:column="9">io_buffer_size<pos:position pos:line="494" pos:column="23"/></name></name> <operator pos:line="494" pos:column="24">=<pos:position pos:line="494" pos:column="25"/></operator> <name pos:line="494" pos:column="26">AP_IOBUFSIZE<pos:position pos:line="494" pos:column="38"/></name></expr>;<pos:position pos:line="494" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="495" pos:column="5">ps<pos:position pos:line="495" pos:column="7"/></name><operator pos:line="495" pos:column="7">-&gt;<pos:position pos:line="495" pos:column="12"/></operator><name pos:line="495" pos:column="9">io_buffer_size_set<pos:position pos:line="495" pos:column="27"/></name></name> <operator pos:line="495" pos:column="28">=<pos:position pos:line="495" pos:column="29"/></operator> <literal type="number" pos:line="495" pos:column="30">0<pos:position pos:line="495" pos:column="31"/></literal></expr>;<pos:position pos:line="495" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="496" pos:column="5">ps<pos:position pos:line="496" pos:column="7"/></name><operator pos:line="496" pos:column="7">-&gt;<pos:position pos:line="496" pos:column="12"/></operator><name pos:line="496" pos:column="9">maxfwd<pos:position pos:line="496" pos:column="15"/></name></name> <operator pos:line="496" pos:column="16">=<pos:position pos:line="496" pos:column="17"/></operator> <name pos:line="496" pos:column="18">DEFAULT_MAX_FORWARDS<pos:position pos:line="496" pos:column="38"/></name></expr>;<pos:position pos:line="496" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="497" pos:column="5">ps<pos:position pos:line="497" pos:column="7"/></name><operator pos:line="497" pos:column="7">-&gt;<pos:position pos:line="497" pos:column="12"/></operator><name pos:line="497" pos:column="9">maxfwd_set<pos:position pos:line="497" pos:column="19"/></name></name> <operator pos:line="497" pos:column="20">=<pos:position pos:line="497" pos:column="21"/></operator> <literal type="number" pos:line="497" pos:column="22">0<pos:position pos:line="497" pos:column="23"/></literal></expr>;<pos:position pos:line="497" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="498" pos:column="5">ps<pos:position pos:line="498" pos:column="7"/></name><operator pos:line="498" pos:column="7">-&gt;<pos:position pos:line="498" pos:column="12"/></operator><name pos:line="498" pos:column="9">error_override<pos:position pos:line="498" pos:column="23"/></name></name> <operator pos:line="498" pos:column="24">=<pos:position pos:line="498" pos:column="25"/></operator> <literal type="number" pos:line="498" pos:column="26">0<pos:position pos:line="498" pos:column="27"/></literal></expr>;<pos:position pos:line="498" pos:column="28"/></expr_stmt> 
    <expr_stmt><expr><name><name pos:line="499" pos:column="5">ps<pos:position pos:line="499" pos:column="7"/></name><operator pos:line="499" pos:column="7">-&gt;<pos:position pos:line="499" pos:column="12"/></operator><name pos:line="499" pos:column="9">error_override_set<pos:position pos:line="499" pos:column="27"/></name></name> <operator pos:line="499" pos:column="28">=<pos:position pos:line="499" pos:column="29"/></operator> <literal type="number" pos:line="499" pos:column="30">0<pos:position pos:line="499" pos:column="31"/></literal></expr>;<pos:position pos:line="499" pos:column="32"/></expr_stmt> 
    <expr_stmt><expr><name><name pos:line="500" pos:column="5">ps<pos:position pos:line="500" pos:column="7"/></name><operator pos:line="500" pos:column="7">-&gt;<pos:position pos:line="500" pos:column="12"/></operator><name pos:line="500" pos:column="9">preserve_host_set<pos:position pos:line="500" pos:column="26"/></name></name> <operator pos:line="500" pos:column="27">=<pos:position pos:line="500" pos:column="28"/></operator> <literal type="number" pos:line="500" pos:column="29">0<pos:position pos:line="500" pos:column="30"/></literal></expr>;<pos:position pos:line="500" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="501" pos:column="5">ps<pos:position pos:line="501" pos:column="7"/></name><operator pos:line="501" pos:column="7">-&gt;<pos:position pos:line="501" pos:column="12"/></operator><name pos:line="501" pos:column="9">preserve_host<pos:position pos:line="501" pos:column="22"/></name></name> <operator pos:line="501" pos:column="23">=<pos:position pos:line="501" pos:column="24"/></operator> <literal type="number" pos:line="501" pos:column="25">0<pos:position pos:line="501" pos:column="26"/></literal></expr>;<pos:position pos:line="501" pos:column="27"/></expr_stmt>    
    <expr_stmt><expr><name><name pos:line="502" pos:column="5">ps<pos:position pos:line="502" pos:column="7"/></name><operator pos:line="502" pos:column="7">-&gt;<pos:position pos:line="502" pos:column="12"/></operator><name pos:line="502" pos:column="9">timeout<pos:position pos:line="502" pos:column="16"/></name></name> <operator pos:line="502" pos:column="17">=<pos:position pos:line="502" pos:column="18"/></operator> <literal type="number" pos:line="502" pos:column="19">0<pos:position pos:line="502" pos:column="20"/></literal></expr>;<pos:position pos:line="502" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="503" pos:column="5">ps<pos:position pos:line="503" pos:column="7"/></name><operator pos:line="503" pos:column="7">-&gt;<pos:position pos:line="503" pos:column="12"/></operator><name pos:line="503" pos:column="9">timeout_set<pos:position pos:line="503" pos:column="20"/></name></name> <operator pos:line="503" pos:column="21">=<pos:position pos:line="503" pos:column="22"/></operator> <literal type="number" pos:line="503" pos:column="23">0<pos:position pos:line="503" pos:column="24"/></literal></expr>;<pos:position pos:line="503" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="504" pos:column="5">ps<pos:position pos:line="504" pos:column="7"/></name><operator pos:line="504" pos:column="7">-&gt;<pos:position pos:line="504" pos:column="12"/></operator><name pos:line="504" pos:column="9">badopt<pos:position pos:line="504" pos:column="15"/></name></name> <operator pos:line="504" pos:column="16">=<pos:position pos:line="504" pos:column="17"/></operator> <name pos:line="504" pos:column="18">bad_error<pos:position pos:line="504" pos:column="27"/></name></expr>;<pos:position pos:line="504" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="505" pos:column="5">ps<pos:position pos:line="505" pos:column="7"/></name><operator pos:line="505" pos:column="7">-&gt;<pos:position pos:line="505" pos:column="12"/></operator><name pos:line="505" pos:column="9">badopt_set<pos:position pos:line="505" pos:column="19"/></name></name> <operator pos:line="505" pos:column="20">=<pos:position pos:line="505" pos:column="21"/></operator> <literal type="number" pos:line="505" pos:column="22">0<pos:position pos:line="505" pos:column="23"/></literal></expr>;<pos:position pos:line="505" pos:column="24"/></expr_stmt>
    <return pos:line="506" pos:column="5">return <expr><name pos:line="506" pos:column="12">ps<pos:position pos:line="506" pos:column="14"/></name></expr>;<pos:position pos:line="506" pos:column="15"/></return>
}<pos:position pos:line="507" pos:column="2"/></block></function>

<function><specifier pos:line="509" pos:column="1">static<pos:position pos:line="509" pos:column="7"/></specifier> <type><name pos:line="509" pos:column="8">void<pos:position pos:line="509" pos:column="12"/></name> <modifier pos:line="509" pos:column="13">*<pos:position pos:line="509" pos:column="14"/></modifier></type> <name pos:line="509" pos:column="15">merge_proxy_config<pos:position pos:line="509" pos:column="33"/></name><parameter_list pos:line="509" pos:column="33">(<parameter><decl><type><name pos:line="509" pos:column="34">apr_pool_t<pos:position pos:line="509" pos:column="44"/></name> <modifier pos:line="509" pos:column="45">*<pos:position pos:line="509" pos:column="46"/></modifier></type><name pos:line="509" pos:column="46">p<pos:position pos:line="509" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="509" pos:column="49">void<pos:position pos:line="509" pos:column="53"/></name> <modifier pos:line="509" pos:column="54">*<pos:position pos:line="509" pos:column="55"/></modifier></type><name pos:line="509" pos:column="55">basev<pos:position pos:line="509" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="509" pos:column="62">void<pos:position pos:line="509" pos:column="66"/></name> <modifier pos:line="509" pos:column="67">*<pos:position pos:line="509" pos:column="68"/></modifier></type><name pos:line="509" pos:column="68">overridesv<pos:position pos:line="509" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="509" pos:column="79"/></parameter_list>
<block pos:line="510" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="511" pos:column="5">proxy_server_conf<pos:position pos:line="511" pos:column="22"/></name> <modifier pos:line="511" pos:column="23">*<pos:position pos:line="511" pos:column="24"/></modifier></type><name pos:line="511" pos:column="24">ps<pos:position pos:line="511" pos:column="26"/></name> <init pos:line="511" pos:column="27">= <expr><call><name pos:line="511" pos:column="29">apr_pcalloc<pos:position pos:line="511" pos:column="40"/></name><argument_list pos:line="511" pos:column="40">(<argument><expr><name pos:line="511" pos:column="41">p<pos:position pos:line="511" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="511" pos:column="44">sizeof<argument_list pos:line="511" pos:column="50">(<argument><expr><name pos:line="511" pos:column="51">proxy_server_conf<pos:position pos:line="511" pos:column="68"/></name></expr></argument>)<pos:position pos:line="511" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="511" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="511" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="512" pos:column="5">proxy_server_conf<pos:position pos:line="512" pos:column="22"/></name> <modifier pos:line="512" pos:column="23">*<pos:position pos:line="512" pos:column="24"/></modifier></type><name pos:line="512" pos:column="24">base<pos:position pos:line="512" pos:column="28"/></name> <init pos:line="512" pos:column="29">= <expr><operator pos:line="512" pos:column="31">(<pos:position pos:line="512" pos:column="32"/></operator><name pos:line="512" pos:column="32">proxy_server_conf<pos:position pos:line="512" pos:column="49"/></name> <operator pos:line="512" pos:column="50">*<pos:position pos:line="512" pos:column="51"/></operator><operator pos:line="512" pos:column="51">)<pos:position pos:line="512" pos:column="52"/></operator> <name pos:line="512" pos:column="53">basev<pos:position pos:line="512" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="512" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="513" pos:column="5">proxy_server_conf<pos:position pos:line="513" pos:column="22"/></name> <modifier pos:line="513" pos:column="23">*<pos:position pos:line="513" pos:column="24"/></modifier></type><name pos:line="513" pos:column="24">overrides<pos:position pos:line="513" pos:column="33"/></name> <init pos:line="513" pos:column="34">= <expr><operator pos:line="513" pos:column="36">(<pos:position pos:line="513" pos:column="37"/></operator><name pos:line="513" pos:column="37">proxy_server_conf<pos:position pos:line="513" pos:column="54"/></name> <operator pos:line="513" pos:column="55">*<pos:position pos:line="513" pos:column="56"/></operator><operator pos:line="513" pos:column="56">)<pos:position pos:line="513" pos:column="57"/></operator> <name pos:line="513" pos:column="58">overridesv<pos:position pos:line="513" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="513" pos:column="69"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="515" pos:column="5">ps<pos:position pos:line="515" pos:column="7"/></name><operator pos:line="515" pos:column="7">-&gt;<pos:position pos:line="515" pos:column="12"/></operator><name pos:line="515" pos:column="9">proxies<pos:position pos:line="515" pos:column="16"/></name></name> <operator pos:line="515" pos:column="17">=<pos:position pos:line="515" pos:column="18"/></operator> <call><name pos:line="515" pos:column="19">apr_array_append<pos:position pos:line="515" pos:column="35"/></name><argument_list pos:line="515" pos:column="35">(<argument><expr><name pos:line="515" pos:column="36">p<pos:position pos:line="515" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="515" pos:column="39">base<pos:position pos:line="515" pos:column="43"/></name><operator pos:line="515" pos:column="43">-&gt;<pos:position pos:line="515" pos:column="48"/></operator><name pos:line="515" pos:column="45">proxies<pos:position pos:line="515" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="515" pos:column="54">overrides<pos:position pos:line="515" pos:column="63"/></name><operator pos:line="515" pos:column="63">-&gt;<pos:position pos:line="515" pos:column="68"/></operator><name pos:line="515" pos:column="65">proxies<pos:position pos:line="515" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="515" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="515" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="516" pos:column="5">ps<pos:position pos:line="516" pos:column="7"/></name><operator pos:line="516" pos:column="7">-&gt;<pos:position pos:line="516" pos:column="12"/></operator><name pos:line="516" pos:column="9">sec_proxy<pos:position pos:line="516" pos:column="18"/></name></name> <operator pos:line="516" pos:column="19">=<pos:position pos:line="516" pos:column="20"/></operator> <call><name pos:line="516" pos:column="21">apr_array_append<pos:position pos:line="516" pos:column="37"/></name><argument_list pos:line="516" pos:column="37">(<argument><expr><name pos:line="516" pos:column="38">p<pos:position pos:line="516" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="516" pos:column="41">base<pos:position pos:line="516" pos:column="45"/></name><operator pos:line="516" pos:column="45">-&gt;<pos:position pos:line="516" pos:column="50"/></operator><name pos:line="516" pos:column="47">sec_proxy<pos:position pos:line="516" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="516" pos:column="58">overrides<pos:position pos:line="516" pos:column="67"/></name><operator pos:line="516" pos:column="67">-&gt;<pos:position pos:line="516" pos:column="72"/></operator><name pos:line="516" pos:column="69">sec_proxy<pos:position pos:line="516" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="516" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="516" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="517" pos:column="5">ps<pos:position pos:line="517" pos:column="7"/></name><operator pos:line="517" pos:column="7">-&gt;<pos:position pos:line="517" pos:column="12"/></operator><name pos:line="517" pos:column="9">aliases<pos:position pos:line="517" pos:column="16"/></name></name> <operator pos:line="517" pos:column="17">=<pos:position pos:line="517" pos:column="18"/></operator> <call><name pos:line="517" pos:column="19">apr_array_append<pos:position pos:line="517" pos:column="35"/></name><argument_list pos:line="517" pos:column="35">(<argument><expr><name pos:line="517" pos:column="36">p<pos:position pos:line="517" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="517" pos:column="39">base<pos:position pos:line="517" pos:column="43"/></name><operator pos:line="517" pos:column="43">-&gt;<pos:position pos:line="517" pos:column="48"/></operator><name pos:line="517" pos:column="45">aliases<pos:position pos:line="517" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="517" pos:column="54">overrides<pos:position pos:line="517" pos:column="63"/></name><operator pos:line="517" pos:column="63">-&gt;<pos:position pos:line="517" pos:column="68"/></operator><name pos:line="517" pos:column="65">aliases<pos:position pos:line="517" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="517" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="517" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="518" pos:column="5">ps<pos:position pos:line="518" pos:column="7"/></name><operator pos:line="518" pos:column="7">-&gt;<pos:position pos:line="518" pos:column="12"/></operator><name pos:line="518" pos:column="9">raliases<pos:position pos:line="518" pos:column="17"/></name></name> <operator pos:line="518" pos:column="18">=<pos:position pos:line="518" pos:column="19"/></operator> <call><name pos:line="518" pos:column="20">apr_array_append<pos:position pos:line="518" pos:column="36"/></name><argument_list pos:line="518" pos:column="36">(<argument><expr><name pos:line="518" pos:column="37">p<pos:position pos:line="518" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="518" pos:column="40">base<pos:position pos:line="518" pos:column="44"/></name><operator pos:line="518" pos:column="44">-&gt;<pos:position pos:line="518" pos:column="49"/></operator><name pos:line="518" pos:column="46">raliases<pos:position pos:line="518" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="518" pos:column="56">overrides<pos:position pos:line="518" pos:column="65"/></name><operator pos:line="518" pos:column="65">-&gt;<pos:position pos:line="518" pos:column="70"/></operator><name pos:line="518" pos:column="67">raliases<pos:position pos:line="518" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="518" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="518" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="519" pos:column="5">ps<pos:position pos:line="519" pos:column="7"/></name><operator pos:line="519" pos:column="7">-&gt;<pos:position pos:line="519" pos:column="12"/></operator><name pos:line="519" pos:column="9">noproxies<pos:position pos:line="519" pos:column="18"/></name></name> <operator pos:line="519" pos:column="19">=<pos:position pos:line="519" pos:column="20"/></operator> <call><name pos:line="519" pos:column="21">apr_array_append<pos:position pos:line="519" pos:column="37"/></name><argument_list pos:line="519" pos:column="37">(<argument><expr><name pos:line="519" pos:column="38">p<pos:position pos:line="519" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="519" pos:column="41">base<pos:position pos:line="519" pos:column="45"/></name><operator pos:line="519" pos:column="45">-&gt;<pos:position pos:line="519" pos:column="50"/></operator><name pos:line="519" pos:column="47">noproxies<pos:position pos:line="519" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="519" pos:column="58">overrides<pos:position pos:line="519" pos:column="67"/></name><operator pos:line="519" pos:column="67">-&gt;<pos:position pos:line="519" pos:column="72"/></operator><name pos:line="519" pos:column="69">noproxies<pos:position pos:line="519" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="519" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="519" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="520" pos:column="5">ps<pos:position pos:line="520" pos:column="7"/></name><operator pos:line="520" pos:column="7">-&gt;<pos:position pos:line="520" pos:column="12"/></operator><name pos:line="520" pos:column="9">dirconn<pos:position pos:line="520" pos:column="16"/></name></name> <operator pos:line="520" pos:column="17">=<pos:position pos:line="520" pos:column="18"/></operator> <call><name pos:line="520" pos:column="19">apr_array_append<pos:position pos:line="520" pos:column="35"/></name><argument_list pos:line="520" pos:column="35">(<argument><expr><name pos:line="520" pos:column="36">p<pos:position pos:line="520" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="520" pos:column="39">base<pos:position pos:line="520" pos:column="43"/></name><operator pos:line="520" pos:column="43">-&gt;<pos:position pos:line="520" pos:column="48"/></operator><name pos:line="520" pos:column="45">dirconn<pos:position pos:line="520" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="520" pos:column="54">overrides<pos:position pos:line="520" pos:column="63"/></name><operator pos:line="520" pos:column="63">-&gt;<pos:position pos:line="520" pos:column="68"/></operator><name pos:line="520" pos:column="65">dirconn<pos:position pos:line="520" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="520" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="520" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="521" pos:column="5">ps<pos:position pos:line="521" pos:column="7"/></name><operator pos:line="521" pos:column="7">-&gt;<pos:position pos:line="521" pos:column="12"/></operator><name pos:line="521" pos:column="9">allowed_connect_ports<pos:position pos:line="521" pos:column="30"/></name></name> <operator pos:line="521" pos:column="31">=<pos:position pos:line="521" pos:column="32"/></operator> <call><name pos:line="521" pos:column="33">apr_array_append<pos:position pos:line="521" pos:column="49"/></name><argument_list pos:line="521" pos:column="49">(<argument><expr><name pos:line="521" pos:column="50">p<pos:position pos:line="521" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="521" pos:column="53">base<pos:position pos:line="521" pos:column="57"/></name><operator pos:line="521" pos:column="57">-&gt;<pos:position pos:line="521" pos:column="62"/></operator><name pos:line="521" pos:column="59">allowed_connect_ports<pos:position pos:line="521" pos:column="80"/></name></name></expr></argument>, <argument><expr><name><name pos:line="521" pos:column="82">overrides<pos:position pos:line="521" pos:column="91"/></name><operator pos:line="521" pos:column="91">-&gt;<pos:position pos:line="521" pos:column="96"/></operator><name pos:line="521" pos:column="93">allowed_connect_ports<pos:position pos:line="521" pos:column="114"/></name></name></expr></argument>)<pos:position pos:line="521" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="521" pos:column="116"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="523" pos:column="5">ps<pos:position pos:line="523" pos:column="7"/></name><operator pos:line="523" pos:column="7">-&gt;<pos:position pos:line="523" pos:column="12"/></operator><name pos:line="523" pos:column="9">domain<pos:position pos:line="523" pos:column="15"/></name></name> <operator pos:line="523" pos:column="16">=<pos:position pos:line="523" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="523" pos:column="18">(<pos:position pos:line="523" pos:column="19"/></operator><name><name pos:line="523" pos:column="19">overrides<pos:position pos:line="523" pos:column="28"/></name><operator pos:line="523" pos:column="28">-&gt;<pos:position pos:line="523" pos:column="33"/></operator><name pos:line="523" pos:column="30">domain<pos:position pos:line="523" pos:column="36"/></name></name> <operator pos:line="523" pos:column="37">==<pos:position pos:line="523" pos:column="39"/></operator> <name pos:line="523" pos:column="40">NULL<pos:position pos:line="523" pos:column="44"/></name><operator pos:line="523" pos:column="44">)<pos:position pos:line="523" pos:column="45"/></operator></expr> ?<pos:position pos:line="523" pos:column="47"/></condition><then pos:line="523" pos:column="47"> <expr><name><name pos:line="523" pos:column="48">base<pos:position pos:line="523" pos:column="52"/></name><operator pos:line="523" pos:column="52">-&gt;<pos:position pos:line="523" pos:column="57"/></operator><name pos:line="523" pos:column="54">domain<pos:position pos:line="523" pos:column="60"/></name></name></expr> <pos:position pos:line="523" pos:column="61"/></then><else pos:line="523" pos:column="61">: <expr><name><name pos:line="523" pos:column="63">overrides<pos:position pos:line="523" pos:column="72"/></name><operator pos:line="523" pos:column="72">-&gt;<pos:position pos:line="523" pos:column="77"/></operator><name pos:line="523" pos:column="74">domain<pos:position pos:line="523" pos:column="80"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="523" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="524" pos:column="5">ps<pos:position pos:line="524" pos:column="7"/></name><operator pos:line="524" pos:column="7">-&gt;<pos:position pos:line="524" pos:column="12"/></operator><name pos:line="524" pos:column="9">viaopt<pos:position pos:line="524" pos:column="15"/></name></name> <operator pos:line="524" pos:column="16">=<pos:position pos:line="524" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="524" pos:column="18">(<pos:position pos:line="524" pos:column="19"/></operator><name><name pos:line="524" pos:column="19">overrides<pos:position pos:line="524" pos:column="28"/></name><operator pos:line="524" pos:column="28">-&gt;<pos:position pos:line="524" pos:column="33"/></operator><name pos:line="524" pos:column="30">viaopt_set<pos:position pos:line="524" pos:column="40"/></name></name> <operator pos:line="524" pos:column="41">==<pos:position pos:line="524" pos:column="43"/></operator> <literal type="number" pos:line="524" pos:column="44">0<pos:position pos:line="524" pos:column="45"/></literal><operator pos:line="524" pos:column="45">)<pos:position pos:line="524" pos:column="46"/></operator></expr> ?<pos:position pos:line="524" pos:column="48"/></condition><then pos:line="524" pos:column="48"> <expr><name><name pos:line="524" pos:column="49">base<pos:position pos:line="524" pos:column="53"/></name><operator pos:line="524" pos:column="53">-&gt;<pos:position pos:line="524" pos:column="58"/></operator><name pos:line="524" pos:column="55">viaopt<pos:position pos:line="524" pos:column="61"/></name></name></expr> <pos:position pos:line="524" pos:column="62"/></then><else pos:line="524" pos:column="62">: <expr><name><name pos:line="524" pos:column="64">overrides<pos:position pos:line="524" pos:column="73"/></name><operator pos:line="524" pos:column="73">-&gt;<pos:position pos:line="524" pos:column="78"/></operator><name pos:line="524" pos:column="75">viaopt<pos:position pos:line="524" pos:column="81"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="524" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="525" pos:column="5">ps<pos:position pos:line="525" pos:column="7"/></name><operator pos:line="525" pos:column="7">-&gt;<pos:position pos:line="525" pos:column="12"/></operator><name pos:line="525" pos:column="9">req<pos:position pos:line="525" pos:column="12"/></name></name> <operator pos:line="525" pos:column="13">=<pos:position pos:line="525" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="525" pos:column="15">(<pos:position pos:line="525" pos:column="16"/></operator><name><name pos:line="525" pos:column="16">overrides<pos:position pos:line="525" pos:column="25"/></name><operator pos:line="525" pos:column="25">-&gt;<pos:position pos:line="525" pos:column="30"/></operator><name pos:line="525" pos:column="27">req_set<pos:position pos:line="525" pos:column="34"/></name></name> <operator pos:line="525" pos:column="35">==<pos:position pos:line="525" pos:column="37"/></operator> <literal type="number" pos:line="525" pos:column="38">0<pos:position pos:line="525" pos:column="39"/></literal><operator pos:line="525" pos:column="39">)<pos:position pos:line="525" pos:column="40"/></operator></expr> ?<pos:position pos:line="525" pos:column="42"/></condition><then pos:line="525" pos:column="42"> <expr><name><name pos:line="525" pos:column="43">base<pos:position pos:line="525" pos:column="47"/></name><operator pos:line="525" pos:column="47">-&gt;<pos:position pos:line="525" pos:column="52"/></operator><name pos:line="525" pos:column="49">req<pos:position pos:line="525" pos:column="52"/></name></name></expr> <pos:position pos:line="525" pos:column="53"/></then><else pos:line="525" pos:column="53">: <expr><name><name pos:line="525" pos:column="55">overrides<pos:position pos:line="525" pos:column="64"/></name><operator pos:line="525" pos:column="64">-&gt;<pos:position pos:line="525" pos:column="69"/></operator><name pos:line="525" pos:column="66">req<pos:position pos:line="525" pos:column="69"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="525" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="526" pos:column="5">ps<pos:position pos:line="526" pos:column="7"/></name><operator pos:line="526" pos:column="7">-&gt;<pos:position pos:line="526" pos:column="12"/></operator><name pos:line="526" pos:column="9">recv_buffer_size<pos:position pos:line="526" pos:column="25"/></name></name> <operator pos:line="526" pos:column="26">=<pos:position pos:line="526" pos:column="27"/></operator> <ternary><condition><expr><operator pos:line="526" pos:column="28">(<pos:position pos:line="526" pos:column="29"/></operator><name><name pos:line="526" pos:column="29">overrides<pos:position pos:line="526" pos:column="38"/></name><operator pos:line="526" pos:column="38">-&gt;<pos:position pos:line="526" pos:column="43"/></operator><name pos:line="526" pos:column="40">recv_buffer_size_set<pos:position pos:line="526" pos:column="60"/></name></name> <operator pos:line="526" pos:column="61">==<pos:position pos:line="526" pos:column="63"/></operator> <literal type="number" pos:line="526" pos:column="64">0<pos:position pos:line="526" pos:column="65"/></literal><operator pos:line="526" pos:column="65">)<pos:position pos:line="526" pos:column="66"/></operator></expr> ?<pos:position pos:line="526" pos:column="68"/></condition><then pos:line="526" pos:column="68"> <expr><name><name pos:line="526" pos:column="69">base<pos:position pos:line="526" pos:column="73"/></name><operator pos:line="526" pos:column="73">-&gt;<pos:position pos:line="526" pos:column="78"/></operator><name pos:line="526" pos:column="75">recv_buffer_size<pos:position pos:line="526" pos:column="91"/></name></name></expr> <pos:position pos:line="526" pos:column="92"/></then><else pos:line="526" pos:column="92">: <expr><name><name pos:line="526" pos:column="94">overrides<pos:position pos:line="526" pos:column="103"/></name><operator pos:line="526" pos:column="103">-&gt;<pos:position pos:line="526" pos:column="108"/></operator><name pos:line="526" pos:column="105">recv_buffer_size<pos:position pos:line="526" pos:column="121"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="526" pos:column="122"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="527" pos:column="5">ps<pos:position pos:line="527" pos:column="7"/></name><operator pos:line="527" pos:column="7">-&gt;<pos:position pos:line="527" pos:column="12"/></operator><name pos:line="527" pos:column="9">io_buffer_size<pos:position pos:line="527" pos:column="23"/></name></name> <operator pos:line="527" pos:column="24">=<pos:position pos:line="527" pos:column="25"/></operator> <ternary><condition><expr><operator pos:line="527" pos:column="26">(<pos:position pos:line="527" pos:column="27"/></operator><name><name pos:line="527" pos:column="27">overrides<pos:position pos:line="527" pos:column="36"/></name><operator pos:line="527" pos:column="36">-&gt;<pos:position pos:line="527" pos:column="41"/></operator><name pos:line="527" pos:column="38">io_buffer_size_set<pos:position pos:line="527" pos:column="56"/></name></name> <operator pos:line="527" pos:column="57">==<pos:position pos:line="527" pos:column="59"/></operator> <literal type="number" pos:line="527" pos:column="60">0<pos:position pos:line="527" pos:column="61"/></literal><operator pos:line="527" pos:column="61">)<pos:position pos:line="527" pos:column="62"/></operator></expr> ?<pos:position pos:line="527" pos:column="64"/></condition><then pos:line="527" pos:column="64"> <expr><name><name pos:line="527" pos:column="65">base<pos:position pos:line="527" pos:column="69"/></name><operator pos:line="527" pos:column="69">-&gt;<pos:position pos:line="527" pos:column="74"/></operator><name pos:line="527" pos:column="71">io_buffer_size<pos:position pos:line="527" pos:column="85"/></name></name></expr> <pos:position pos:line="527" pos:column="86"/></then><else pos:line="527" pos:column="86">: <expr><name><name pos:line="527" pos:column="88">overrides<pos:position pos:line="527" pos:column="97"/></name><operator pos:line="527" pos:column="97">-&gt;<pos:position pos:line="527" pos:column="102"/></operator><name pos:line="527" pos:column="99">io_buffer_size<pos:position pos:line="527" pos:column="113"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="527" pos:column="114"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="528" pos:column="5">ps<pos:position pos:line="528" pos:column="7"/></name><operator pos:line="528" pos:column="7">-&gt;<pos:position pos:line="528" pos:column="12"/></operator><name pos:line="528" pos:column="9">maxfwd<pos:position pos:line="528" pos:column="15"/></name></name> <operator pos:line="528" pos:column="16">=<pos:position pos:line="528" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="528" pos:column="18">(<pos:position pos:line="528" pos:column="19"/></operator><name><name pos:line="528" pos:column="19">overrides<pos:position pos:line="528" pos:column="28"/></name><operator pos:line="528" pos:column="28">-&gt;<pos:position pos:line="528" pos:column="33"/></operator><name pos:line="528" pos:column="30">maxfwd_set<pos:position pos:line="528" pos:column="40"/></name></name> <operator pos:line="528" pos:column="41">==<pos:position pos:line="528" pos:column="43"/></operator> <literal type="number" pos:line="528" pos:column="44">0<pos:position pos:line="528" pos:column="45"/></literal><operator pos:line="528" pos:column="45">)<pos:position pos:line="528" pos:column="46"/></operator></expr> ?<pos:position pos:line="528" pos:column="48"/></condition><then pos:line="528" pos:column="48"> <expr><name><name pos:line="528" pos:column="49">base<pos:position pos:line="528" pos:column="53"/></name><operator pos:line="528" pos:column="53">-&gt;<pos:position pos:line="528" pos:column="58"/></operator><name pos:line="528" pos:column="55">maxfwd<pos:position pos:line="528" pos:column="61"/></name></name></expr> <pos:position pos:line="528" pos:column="62"/></then><else pos:line="528" pos:column="62">: <expr><name><name pos:line="528" pos:column="64">overrides<pos:position pos:line="528" pos:column="73"/></name><operator pos:line="528" pos:column="73">-&gt;<pos:position pos:line="528" pos:column="78"/></operator><name pos:line="528" pos:column="75">maxfwd<pos:position pos:line="528" pos:column="81"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="528" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="529" pos:column="5">ps<pos:position pos:line="529" pos:column="7"/></name><operator pos:line="529" pos:column="7">-&gt;<pos:position pos:line="529" pos:column="12"/></operator><name pos:line="529" pos:column="9">error_override<pos:position pos:line="529" pos:column="23"/></name></name> <operator pos:line="529" pos:column="24">=<pos:position pos:line="529" pos:column="25"/></operator> <ternary><condition><expr><operator pos:line="529" pos:column="26">(<pos:position pos:line="529" pos:column="27"/></operator><name><name pos:line="529" pos:column="27">overrides<pos:position pos:line="529" pos:column="36"/></name><operator pos:line="529" pos:column="36">-&gt;<pos:position pos:line="529" pos:column="41"/></operator><name pos:line="529" pos:column="38">error_override_set<pos:position pos:line="529" pos:column="56"/></name></name> <operator pos:line="529" pos:column="57">==<pos:position pos:line="529" pos:column="59"/></operator> <literal type="number" pos:line="529" pos:column="60">0<pos:position pos:line="529" pos:column="61"/></literal><operator pos:line="529" pos:column="61">)<pos:position pos:line="529" pos:column="62"/></operator></expr> ?<pos:position pos:line="529" pos:column="64"/></condition><then pos:line="529" pos:column="64"> <expr><name><name pos:line="529" pos:column="65">base<pos:position pos:line="529" pos:column="69"/></name><operator pos:line="529" pos:column="69">-&gt;<pos:position pos:line="529" pos:column="74"/></operator><name pos:line="529" pos:column="71">error_override<pos:position pos:line="529" pos:column="85"/></name></name></expr> <pos:position pos:line="529" pos:column="86"/></then><else pos:line="529" pos:column="86">: <expr><name><name pos:line="529" pos:column="88">overrides<pos:position pos:line="529" pos:column="97"/></name><operator pos:line="529" pos:column="97">-&gt;<pos:position pos:line="529" pos:column="102"/></operator><name pos:line="529" pos:column="99">error_override<pos:position pos:line="529" pos:column="113"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="529" pos:column="114"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="530" pos:column="5">ps<pos:position pos:line="530" pos:column="7"/></name><operator pos:line="530" pos:column="7">-&gt;<pos:position pos:line="530" pos:column="12"/></operator><name pos:line="530" pos:column="9">preserve_host<pos:position pos:line="530" pos:column="22"/></name></name> <operator pos:line="530" pos:column="23">=<pos:position pos:line="530" pos:column="24"/></operator> <ternary><condition><expr><operator pos:line="530" pos:column="25">(<pos:position pos:line="530" pos:column="26"/></operator><name><name pos:line="530" pos:column="26">overrides<pos:position pos:line="530" pos:column="35"/></name><operator pos:line="530" pos:column="35">-&gt;<pos:position pos:line="530" pos:column="40"/></operator><name pos:line="530" pos:column="37">preserve_host_set<pos:position pos:line="530" pos:column="54"/></name></name> <operator pos:line="530" pos:column="55">==<pos:position pos:line="530" pos:column="57"/></operator> <literal type="number" pos:line="530" pos:column="58">0<pos:position pos:line="530" pos:column="59"/></literal><operator pos:line="530" pos:column="59">)<pos:position pos:line="530" pos:column="60"/></operator></expr> ?<pos:position pos:line="530" pos:column="62"/></condition><then pos:line="530" pos:column="62"> <expr><name><name pos:line="530" pos:column="63">base<pos:position pos:line="530" pos:column="67"/></name><operator pos:line="530" pos:column="67">-&gt;<pos:position pos:line="530" pos:column="72"/></operator><name pos:line="530" pos:column="69">preserve_host<pos:position pos:line="530" pos:column="82"/></name></name></expr> <pos:position pos:line="530" pos:column="83"/></then><else pos:line="530" pos:column="83">: <expr><name><name pos:line="530" pos:column="85">overrides<pos:position pos:line="530" pos:column="94"/></name><operator pos:line="530" pos:column="94">-&gt;<pos:position pos:line="530" pos:column="99"/></operator><name pos:line="530" pos:column="96">preserve_host<pos:position pos:line="530" pos:column="109"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="530" pos:column="110"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="531" pos:column="5">ps<pos:position pos:line="531" pos:column="7"/></name><operator pos:line="531" pos:column="7">-&gt;<pos:position pos:line="531" pos:column="12"/></operator><name pos:line="531" pos:column="9">timeout<pos:position pos:line="531" pos:column="16"/></name></name><operator pos:line="531" pos:column="16">=<pos:position pos:line="531" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="531" pos:column="18">(<pos:position pos:line="531" pos:column="19"/></operator><name><name pos:line="531" pos:column="19">overrides<pos:position pos:line="531" pos:column="28"/></name><operator pos:line="531" pos:column="28">-&gt;<pos:position pos:line="531" pos:column="33"/></operator><name pos:line="531" pos:column="30">timeout_set<pos:position pos:line="531" pos:column="41"/></name></name> <operator pos:line="531" pos:column="42">==<pos:position pos:line="531" pos:column="44"/></operator> <literal type="number" pos:line="531" pos:column="45">0<pos:position pos:line="531" pos:column="46"/></literal><operator pos:line="531" pos:column="46">)<pos:position pos:line="531" pos:column="47"/></operator></expr> ?<pos:position pos:line="531" pos:column="49"/></condition><then pos:line="531" pos:column="49"> <expr><name><name pos:line="531" pos:column="50">base<pos:position pos:line="531" pos:column="54"/></name><operator pos:line="531" pos:column="54">-&gt;<pos:position pos:line="531" pos:column="59"/></operator><name pos:line="531" pos:column="56">timeout<pos:position pos:line="531" pos:column="63"/></name></name></expr> <pos:position pos:line="531" pos:column="64"/></then><else pos:line="531" pos:column="64">: <expr><name><name pos:line="531" pos:column="66">overrides<pos:position pos:line="531" pos:column="75"/></name><operator pos:line="531" pos:column="75">-&gt;<pos:position pos:line="531" pos:column="80"/></operator><name pos:line="531" pos:column="77">timeout<pos:position pos:line="531" pos:column="84"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="531" pos:column="85"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="532" pos:column="5">ps<pos:position pos:line="532" pos:column="7"/></name><operator pos:line="532" pos:column="7">-&gt;<pos:position pos:line="532" pos:column="12"/></operator><name pos:line="532" pos:column="9">badopt<pos:position pos:line="532" pos:column="15"/></name></name> <operator pos:line="532" pos:column="16">=<pos:position pos:line="532" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="532" pos:column="18">(<pos:position pos:line="532" pos:column="19"/></operator><name><name pos:line="532" pos:column="19">overrides<pos:position pos:line="532" pos:column="28"/></name><operator pos:line="532" pos:column="28">-&gt;<pos:position pos:line="532" pos:column="33"/></operator><name pos:line="532" pos:column="30">badopt_set<pos:position pos:line="532" pos:column="40"/></name></name> <operator pos:line="532" pos:column="41">==<pos:position pos:line="532" pos:column="43"/></operator> <literal type="number" pos:line="532" pos:column="44">0<pos:position pos:line="532" pos:column="45"/></literal><operator pos:line="532" pos:column="45">)<pos:position pos:line="532" pos:column="46"/></operator></expr> ?<pos:position pos:line="532" pos:column="48"/></condition><then pos:line="532" pos:column="48"> <expr><name><name pos:line="532" pos:column="49">base<pos:position pos:line="532" pos:column="53"/></name><operator pos:line="532" pos:column="53">-&gt;<pos:position pos:line="532" pos:column="58"/></operator><name pos:line="532" pos:column="55">badopt<pos:position pos:line="532" pos:column="61"/></name></name></expr> <pos:position pos:line="532" pos:column="62"/></then><else pos:line="532" pos:column="62">: <expr><name><name pos:line="532" pos:column="64">overrides<pos:position pos:line="532" pos:column="73"/></name><operator pos:line="532" pos:column="73">-&gt;<pos:position pos:line="532" pos:column="78"/></operator><name pos:line="532" pos:column="75">badopt<pos:position pos:line="532" pos:column="81"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="532" pos:column="82"/></expr_stmt>

    <return pos:line="534" pos:column="5">return <expr><name pos:line="534" pos:column="12">ps<pos:position pos:line="534" pos:column="14"/></name></expr>;<pos:position pos:line="534" pos:column="15"/></return>
}<pos:position pos:line="535" pos:column="2"/></block></function>

<function><specifier pos:line="537" pos:column="1">static<pos:position pos:line="537" pos:column="7"/></specifier> <type><name pos:line="537" pos:column="8">void<pos:position pos:line="537" pos:column="12"/></name> <modifier pos:line="537" pos:column="13">*<pos:position pos:line="537" pos:column="14"/></modifier></type><name pos:line="537" pos:column="14">create_proxy_dir_config<pos:position pos:line="537" pos:column="37"/></name><parameter_list pos:line="537" pos:column="37">(<parameter><decl><type><name pos:line="537" pos:column="38">apr_pool_t<pos:position pos:line="537" pos:column="48"/></name> <modifier pos:line="537" pos:column="49">*<pos:position pos:line="537" pos:column="50"/></modifier></type><name pos:line="537" pos:column="50">p<pos:position pos:line="537" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="537" pos:column="53">char<pos:position pos:line="537" pos:column="57"/></name> <modifier pos:line="537" pos:column="58">*<pos:position pos:line="537" pos:column="59"/></modifier></type><name pos:line="537" pos:column="59">dummy<pos:position pos:line="537" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="537" pos:column="65"/></parameter_list>
<block pos:line="538" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="539" pos:column="5">proxy_dir_conf<pos:position pos:line="539" pos:column="19"/></name> <modifier pos:line="539" pos:column="20">*<pos:position pos:line="539" pos:column="21"/></modifier></type><name pos:line="539" pos:column="21">new<pos:position pos:line="539" pos:column="24"/></name> <init pos:line="539" pos:column="25">=
        <expr><operator pos:line="540" pos:column="9">(<pos:position pos:line="540" pos:column="10"/></operator><name pos:line="540" pos:column="10">proxy_dir_conf<pos:position pos:line="540" pos:column="24"/></name> <operator pos:line="540" pos:column="25">*<pos:position pos:line="540" pos:column="26"/></operator><operator pos:line="540" pos:column="26">)<pos:position pos:line="540" pos:column="27"/></operator> <call><name pos:line="540" pos:column="28">apr_pcalloc<pos:position pos:line="540" pos:column="39"/></name><argument_list pos:line="540" pos:column="39">(<argument><expr><name pos:line="540" pos:column="40">p<pos:position pos:line="540" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="540" pos:column="43">sizeof<argument_list pos:line="540" pos:column="49">(<argument><expr><name pos:line="540" pos:column="50">proxy_dir_conf<pos:position pos:line="540" pos:column="64"/></name></expr></argument>)<pos:position pos:line="540" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="540" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="540" pos:column="67"/></decl_stmt>

    <comment type="block" pos:line="542" pos:column="5">/* Filled in by proxysection, when applicable */</comment>

    <return pos:line="544" pos:column="5">return <expr><operator pos:line="544" pos:column="12">(<pos:position pos:line="544" pos:column="13"/></operator><name pos:line="544" pos:column="13">void<pos:position pos:line="544" pos:column="17"/></name> <operator pos:line="544" pos:column="18">*<pos:position pos:line="544" pos:column="19"/></operator><operator pos:line="544" pos:column="19">)<pos:position pos:line="544" pos:column="20"/></operator> <name pos:line="544" pos:column="21">new<pos:position pos:line="544" pos:column="24"/></name></expr>;<pos:position pos:line="544" pos:column="25"/></return>
}<pos:position pos:line="545" pos:column="2"/></block></function>

<function><specifier pos:line="547" pos:column="1">static<pos:position pos:line="547" pos:column="7"/></specifier> <type><name pos:line="547" pos:column="8">void<pos:position pos:line="547" pos:column="12"/></name> <modifier pos:line="547" pos:column="13">*<pos:position pos:line="547" pos:column="14"/></modifier></type><name pos:line="547" pos:column="14">merge_proxy_dir_config<pos:position pos:line="547" pos:column="36"/></name><parameter_list pos:line="547" pos:column="36">(<parameter><decl><type><name pos:line="547" pos:column="37">apr_pool_t<pos:position pos:line="547" pos:column="47"/></name> <modifier pos:line="547" pos:column="48">*<pos:position pos:line="547" pos:column="49"/></modifier></type><name pos:line="547" pos:column="49">p<pos:position pos:line="547" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="547" pos:column="52">void<pos:position pos:line="547" pos:column="56"/></name> <modifier pos:line="547" pos:column="57">*<pos:position pos:line="547" pos:column="58"/></modifier></type><name pos:line="547" pos:column="58">basev<pos:position pos:line="547" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="547" pos:column="65">void<pos:position pos:line="547" pos:column="69"/></name> <modifier pos:line="547" pos:column="70">*<pos:position pos:line="547" pos:column="71"/></modifier></type><name pos:line="547" pos:column="71">addv<pos:position pos:line="547" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="547" pos:column="76"/></parameter_list>
<block pos:line="548" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="549" pos:column="5">proxy_dir_conf<pos:position pos:line="549" pos:column="19"/></name> <modifier pos:line="549" pos:column="20">*<pos:position pos:line="549" pos:column="21"/></modifier></type><name pos:line="549" pos:column="21">new<pos:position pos:line="549" pos:column="24"/></name> <init pos:line="549" pos:column="25">= <expr><operator pos:line="549" pos:column="27">(<pos:position pos:line="549" pos:column="28"/></operator><name pos:line="549" pos:column="28">proxy_dir_conf<pos:position pos:line="549" pos:column="42"/></name> <operator pos:line="549" pos:column="43">*<pos:position pos:line="549" pos:column="44"/></operator><operator pos:line="549" pos:column="44">)<pos:position pos:line="549" pos:column="45"/></operator> <call><name pos:line="549" pos:column="46">apr_pcalloc<pos:position pos:line="549" pos:column="57"/></name><argument_list pos:line="549" pos:column="57">(<argument><expr><name pos:line="549" pos:column="58">p<pos:position pos:line="549" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="549" pos:column="61">sizeof<argument_list pos:line="549" pos:column="67">(<argument><expr><name pos:line="549" pos:column="68">proxy_dir_conf<pos:position pos:line="549" pos:column="82"/></name></expr></argument>)<pos:position pos:line="549" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="549" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="549" pos:column="85"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="550" pos:column="5">proxy_dir_conf<pos:position pos:line="550" pos:column="19"/></name> <modifier pos:line="550" pos:column="20">*<pos:position pos:line="550" pos:column="21"/></modifier></type><name pos:line="550" pos:column="21">add<pos:position pos:line="550" pos:column="24"/></name> <init pos:line="550" pos:column="25">= <expr><operator pos:line="550" pos:column="27">(<pos:position pos:line="550" pos:column="28"/></operator><name pos:line="550" pos:column="28">proxy_dir_conf<pos:position pos:line="550" pos:column="42"/></name> <operator pos:line="550" pos:column="43">*<pos:position pos:line="550" pos:column="44"/></operator><operator pos:line="550" pos:column="44">)<pos:position pos:line="550" pos:column="45"/></operator> <name pos:line="550" pos:column="46">addv<pos:position pos:line="550" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="550" pos:column="51"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="552" pos:column="5">new<pos:position pos:line="552" pos:column="8"/></name><operator pos:line="552" pos:column="8">-&gt;<pos:position pos:line="552" pos:column="13"/></operator><name pos:line="552" pos:column="10">p<pos:position pos:line="552" pos:column="11"/></name></name> <operator pos:line="552" pos:column="12">=<pos:position pos:line="552" pos:column="13"/></operator> <name><name pos:line="552" pos:column="14">add<pos:position pos:line="552" pos:column="17"/></name><operator pos:line="552" pos:column="17">-&gt;<pos:position pos:line="552" pos:column="22"/></operator><name pos:line="552" pos:column="19">p<pos:position pos:line="552" pos:column="20"/></name></name></expr>;<pos:position pos:line="552" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="553" pos:column="5">new<pos:position pos:line="553" pos:column="8"/></name><operator pos:line="553" pos:column="8">-&gt;<pos:position pos:line="553" pos:column="13"/></operator><name pos:line="553" pos:column="10">p_is_fnmatch<pos:position pos:line="553" pos:column="22"/></name></name> <operator pos:line="553" pos:column="23">=<pos:position pos:line="553" pos:column="24"/></operator> <name><name pos:line="553" pos:column="25">add<pos:position pos:line="553" pos:column="28"/></name><operator pos:line="553" pos:column="28">-&gt;<pos:position pos:line="553" pos:column="33"/></operator><name pos:line="553" pos:column="30">p_is_fnmatch<pos:position pos:line="553" pos:column="42"/></name></name></expr>;<pos:position pos:line="553" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="554" pos:column="5">new<pos:position pos:line="554" pos:column="8"/></name><operator pos:line="554" pos:column="8">-&gt;<pos:position pos:line="554" pos:column="13"/></operator><name pos:line="554" pos:column="10">r<pos:position pos:line="554" pos:column="11"/></name></name> <operator pos:line="554" pos:column="12">=<pos:position pos:line="554" pos:column="13"/></operator> <name><name pos:line="554" pos:column="14">add<pos:position pos:line="554" pos:column="17"/></name><operator pos:line="554" pos:column="17">-&gt;<pos:position pos:line="554" pos:column="22"/></operator><name pos:line="554" pos:column="19">r<pos:position pos:line="554" pos:column="20"/></name></name></expr>;<pos:position pos:line="554" pos:column="21"/></expr_stmt>
    <return pos:line="555" pos:column="5">return <expr><name pos:line="555" pos:column="12">new<pos:position pos:line="555" pos:column="15"/></name></expr>;<pos:position pos:line="555" pos:column="16"/></return>
}<pos:position pos:line="556" pos:column="2"/></block></function>


<function><specifier pos:line="559" pos:column="1">static<pos:position pos:line="559" pos:column="7"/></specifier> <type><specifier pos:line="559" pos:column="8">const<pos:position pos:line="559" pos:column="13"/></specifier> <name pos:line="559" pos:column="14">char<pos:position pos:line="559" pos:column="18"/></name> <modifier pos:line="559" pos:column="19">*<pos:position pos:line="559" pos:column="20"/></modifier></type>
    <name pos:line="560" pos:column="5">add_proxy<pos:position pos:line="560" pos:column="14"/></name><parameter_list pos:line="560" pos:column="14">(<parameter><decl><type><name pos:line="560" pos:column="15">cmd_parms<pos:position pos:line="560" pos:column="24"/></name> <modifier pos:line="560" pos:column="25">*<pos:position pos:line="560" pos:column="26"/></modifier></type><name pos:line="560" pos:column="26">cmd<pos:position pos:line="560" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="560" pos:column="31">void<pos:position pos:line="560" pos:column="35"/></name> <modifier pos:line="560" pos:column="36">*<pos:position pos:line="560" pos:column="37"/></modifier></type><name pos:line="560" pos:column="37">dummy<pos:position pos:line="560" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="560" pos:column="44">const<pos:position pos:line="560" pos:column="49"/></specifier> <name pos:line="560" pos:column="50">char<pos:position pos:line="560" pos:column="54"/></name> <modifier pos:line="560" pos:column="55">*<pos:position pos:line="560" pos:column="56"/></modifier></type><name pos:line="560" pos:column="56">f1<pos:position pos:line="560" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="560" pos:column="60">const<pos:position pos:line="560" pos:column="65"/></specifier> <name pos:line="560" pos:column="66">char<pos:position pos:line="560" pos:column="70"/></name> <modifier pos:line="560" pos:column="71">*<pos:position pos:line="560" pos:column="72"/></modifier></type><name pos:line="560" pos:column="72">r1<pos:position pos:line="560" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="560" pos:column="76">int<pos:position pos:line="560" pos:column="79"/></name></type> <name pos:line="560" pos:column="80">regex<pos:position pos:line="560" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="560" pos:column="86"/></parameter_list>
<block pos:line="561" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="562" pos:column="5">server_rec<pos:position pos:line="562" pos:column="15"/></name> <modifier pos:line="562" pos:column="16">*<pos:position pos:line="562" pos:column="17"/></modifier></type><name pos:line="562" pos:column="17">s<pos:position pos:line="562" pos:column="18"/></name> <init pos:line="562" pos:column="19">= <expr><name><name pos:line="562" pos:column="21">cmd<pos:position pos:line="562" pos:column="24"/></name><operator pos:line="562" pos:column="24">-&gt;<pos:position pos:line="562" pos:column="29"/></operator><name pos:line="562" pos:column="26">server<pos:position pos:line="562" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="562" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="563" pos:column="5">proxy_server_conf<pos:position pos:line="563" pos:column="22"/></name> <modifier pos:line="563" pos:column="23">*<pos:position pos:line="563" pos:column="24"/></modifier></type><name pos:line="563" pos:column="24">conf<pos:position pos:line="563" pos:column="28"/></name> <init pos:line="563" pos:column="29">=
    <expr><operator pos:line="564" pos:column="5">(<pos:position pos:line="564" pos:column="6"/></operator><name pos:line="564" pos:column="6">proxy_server_conf<pos:position pos:line="564" pos:column="23"/></name> <operator pos:line="564" pos:column="24">*<pos:position pos:line="564" pos:column="25"/></operator><operator pos:line="564" pos:column="25">)<pos:position pos:line="564" pos:column="26"/></operator> <call><name pos:line="564" pos:column="27">ap_get_module_config<pos:position pos:line="564" pos:column="47"/></name><argument_list pos:line="564" pos:column="47">(<argument><expr><name><name pos:line="564" pos:column="48">s<pos:position pos:line="564" pos:column="49"/></name><operator pos:line="564" pos:column="49">-&gt;<pos:position pos:line="564" pos:column="54"/></operator><name pos:line="564" pos:column="51">module_config<pos:position pos:line="564" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="564" pos:column="66">&amp;<pos:position pos:line="564" pos:column="71"/></operator><name pos:line="564" pos:column="67">proxy_module<pos:position pos:line="564" pos:column="79"/></name></expr></argument>)<pos:position pos:line="564" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="564" pos:column="81"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="565" pos:column="5">struct<pos:position pos:line="565" pos:column="11"/></name> <name pos:line="565" pos:column="12">proxy_remote<pos:position pos:line="565" pos:column="24"/></name></name> <modifier pos:line="565" pos:column="25">*<pos:position pos:line="565" pos:column="26"/></modifier></type><name pos:line="565" pos:column="26">new<pos:position pos:line="565" pos:column="29"/></name></decl>;<pos:position pos:line="565" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="566" pos:column="5">char<pos:position pos:line="566" pos:column="9"/></name> <modifier pos:line="566" pos:column="10">*<pos:position pos:line="566" pos:column="11"/></modifier></type><name pos:line="566" pos:column="11">p<pos:position pos:line="566" pos:column="12"/></name></decl>, <modifier pos:line="566" pos:column="14">*<pos:position pos:line="566" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="566" pos:column="15">q<pos:position pos:line="566" pos:column="16"/></name></decl>;<pos:position pos:line="566" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="567" pos:column="5">char<pos:position pos:line="567" pos:column="9"/></name> <modifier pos:line="567" pos:column="10">*<pos:position pos:line="567" pos:column="11"/></modifier></type><name pos:line="567" pos:column="11">r<pos:position pos:line="567" pos:column="12"/></name></decl>, <modifier pos:line="567" pos:column="14">*<pos:position pos:line="567" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="567" pos:column="15">f<pos:position pos:line="567" pos:column="16"/></name></decl>, <modifier pos:line="567" pos:column="18">*<pos:position pos:line="567" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="567" pos:column="19">scheme<pos:position pos:line="567" pos:column="25"/></name></decl>;<pos:position pos:line="567" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="568" pos:column="5">regex_t<pos:position pos:line="568" pos:column="12"/></name> <modifier pos:line="568" pos:column="13">*<pos:position pos:line="568" pos:column="14"/></modifier></type><name pos:line="568" pos:column="14">reg<pos:position pos:line="568" pos:column="17"/></name> <init pos:line="568" pos:column="18">= <expr><name pos:line="568" pos:column="20">NULL<pos:position pos:line="568" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="568" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="569" pos:column="5">int<pos:position pos:line="569" pos:column="8"/></name></type> <name pos:line="569" pos:column="9">port<pos:position pos:line="569" pos:column="13"/></name></decl>;<pos:position pos:line="569" pos:column="14"/></decl_stmt>

    <expr_stmt><expr><name pos:line="571" pos:column="5">r<pos:position pos:line="571" pos:column="6"/></name> <operator pos:line="571" pos:column="7">=<pos:position pos:line="571" pos:column="8"/></operator> <call><name pos:line="571" pos:column="9">apr_pstrdup<pos:position pos:line="571" pos:column="20"/></name><argument_list pos:line="571" pos:column="20">(<argument><expr><name><name pos:line="571" pos:column="21">cmd<pos:position pos:line="571" pos:column="24"/></name><operator pos:line="571" pos:column="24">-&gt;<pos:position pos:line="571" pos:column="29"/></operator><name pos:line="571" pos:column="26">pool<pos:position pos:line="571" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="571" pos:column="32">r1<pos:position pos:line="571" pos:column="34"/></name></expr></argument>)<pos:position pos:line="571" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="571" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="572" pos:column="5">scheme<pos:position pos:line="572" pos:column="11"/></name> <operator pos:line="572" pos:column="12">=<pos:position pos:line="572" pos:column="13"/></operator> <call><name pos:line="572" pos:column="14">apr_pstrdup<pos:position pos:line="572" pos:column="25"/></name><argument_list pos:line="572" pos:column="25">(<argument><expr><name><name pos:line="572" pos:column="26">cmd<pos:position pos:line="572" pos:column="29"/></name><operator pos:line="572" pos:column="29">-&gt;<pos:position pos:line="572" pos:column="34"/></operator><name pos:line="572" pos:column="31">pool<pos:position pos:line="572" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="572" pos:column="37">r1<pos:position pos:line="572" pos:column="39"/></name></expr></argument>)<pos:position pos:line="572" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="572" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="573" pos:column="5">f<pos:position pos:line="573" pos:column="6"/></name> <operator pos:line="573" pos:column="7">=<pos:position pos:line="573" pos:column="8"/></operator> <call><name pos:line="573" pos:column="9">apr_pstrdup<pos:position pos:line="573" pos:column="20"/></name><argument_list pos:line="573" pos:column="20">(<argument><expr><name><name pos:line="573" pos:column="21">cmd<pos:position pos:line="573" pos:column="24"/></name><operator pos:line="573" pos:column="24">-&gt;<pos:position pos:line="573" pos:column="29"/></operator><name pos:line="573" pos:column="26">pool<pos:position pos:line="573" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="573" pos:column="32">f1<pos:position pos:line="573" pos:column="34"/></name></expr></argument>)<pos:position pos:line="573" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="573" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="574" pos:column="5">p<pos:position pos:line="574" pos:column="6"/></name> <operator pos:line="574" pos:column="7">=<pos:position pos:line="574" pos:column="8"/></operator> <call><name pos:line="574" pos:column="9">strchr<pos:position pos:line="574" pos:column="15"/></name><argument_list pos:line="574" pos:column="15">(<argument><expr><name pos:line="574" pos:column="16">r<pos:position pos:line="574" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="574" pos:column="19">':'<pos:position pos:line="574" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="574" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="574" pos:column="24"/></expr_stmt>
    <if pos:line="575" pos:column="5">if <condition pos:line="575" pos:column="8">(<expr><name pos:line="575" pos:column="9">p<pos:position pos:line="575" pos:column="10"/></name> <operator pos:line="575" pos:column="11">==<pos:position pos:line="575" pos:column="13"/></operator> <name pos:line="575" pos:column="14">NULL<pos:position pos:line="575" pos:column="18"/></name> <operator pos:line="575" pos:column="19">||<pos:position pos:line="575" pos:column="21"/></operator> <name><name pos:line="575" pos:column="22">p<pos:position pos:line="575" pos:column="23"/></name><index pos:line="575" pos:column="23">[<expr><literal type="number" pos:line="575" pos:column="24">1<pos:position pos:line="575" pos:column="25"/></literal></expr>]<pos:position pos:line="575" pos:column="26"/></index></name> <operator pos:line="575" pos:column="27">!=<pos:position pos:line="575" pos:column="29"/></operator> <literal type="char" pos:line="575" pos:column="30">'/'<pos:position pos:line="575" pos:column="33"/></literal> <operator pos:line="575" pos:column="34">||<pos:position pos:line="575" pos:column="36"/></operator> <name><name pos:line="575" pos:column="37">p<pos:position pos:line="575" pos:column="38"/></name><index pos:line="575" pos:column="38">[<expr><literal type="number" pos:line="575" pos:column="39">2<pos:position pos:line="575" pos:column="40"/></literal></expr>]<pos:position pos:line="575" pos:column="41"/></index></name> <operator pos:line="575" pos:column="42">!=<pos:position pos:line="575" pos:column="44"/></operator> <literal type="char" pos:line="575" pos:column="45">'/'<pos:position pos:line="575" pos:column="48"/></literal> <operator pos:line="575" pos:column="49">||<pos:position pos:line="575" pos:column="51"/></operator> <name><name pos:line="575" pos:column="52">p<pos:position pos:line="575" pos:column="53"/></name><index pos:line="575" pos:column="53">[<expr><literal type="number" pos:line="575" pos:column="54">3<pos:position pos:line="575" pos:column="55"/></literal></expr>]<pos:position pos:line="575" pos:column="56"/></index></name> <operator pos:line="575" pos:column="57">==<pos:position pos:line="575" pos:column="59"/></operator> <literal type="char" pos:line="575" pos:column="60">'\0'<pos:position pos:line="575" pos:column="64"/></literal></expr>)<pos:position pos:line="575" pos:column="65"/></condition><then pos:line="575" pos:column="65"> <block pos:line="575" pos:column="66">{
        <if pos:line="576" pos:column="9">if <condition pos:line="576" pos:column="12">(<expr><name pos:line="576" pos:column="13">regex<pos:position pos:line="576" pos:column="18"/></name></expr>)<pos:position pos:line="576" pos:column="19"/></condition><then pos:line="576" pos:column="19">
            <block type="pseudo"><return pos:line="577" pos:column="13">return <expr><literal type="string" pos:line="577" pos:column="20">"ProxyRemoteMatch: Bad syntax for a remote proxy server"<pos:position pos:line="577" pos:column="76"/></literal></expr>;<pos:position pos:line="577" pos:column="77"/></return></block></then>
        <else pos:line="578" pos:column="9">else
            <block type="pseudo"><return pos:line="579" pos:column="13">return <expr><literal type="string" pos:line="579" pos:column="20">"ProxyRemote: Bad syntax for a remote proxy server"<pos:position pos:line="579" pos:column="71"/></literal></expr>;<pos:position pos:line="579" pos:column="72"/></return></block></else></if>
    }<pos:position pos:line="580" pos:column="6"/></block></then>
    <else pos:line="581" pos:column="5">else <block pos:line="581" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="582" pos:column="9">scheme<pos:position pos:line="582" pos:column="15"/></name><index pos:line="582" pos:column="15">[<expr><name pos:line="582" pos:column="16">p<pos:position pos:line="582" pos:column="17"/></name><operator pos:line="582" pos:column="17">-<pos:position pos:line="582" pos:column="18"/></operator><name pos:line="582" pos:column="18">r<pos:position pos:line="582" pos:column="19"/></name></expr>]<pos:position pos:line="582" pos:column="20"/></index></name> <operator pos:line="582" pos:column="21">=<pos:position pos:line="582" pos:column="22"/></operator> <literal type="number" pos:line="582" pos:column="23">0<pos:position pos:line="582" pos:column="24"/></literal></expr>;<pos:position pos:line="582" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="583" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="584" pos:column="5">q<pos:position pos:line="584" pos:column="6"/></name> <operator pos:line="584" pos:column="7">=<pos:position pos:line="584" pos:column="8"/></operator> <call><name pos:line="584" pos:column="9">strchr<pos:position pos:line="584" pos:column="15"/></name><argument_list pos:line="584" pos:column="15">(<argument><expr><name pos:line="584" pos:column="16">p<pos:position pos:line="584" pos:column="17"/></name> <operator pos:line="584" pos:column="18">+<pos:position pos:line="584" pos:column="19"/></operator> <literal type="number" pos:line="584" pos:column="20">3<pos:position pos:line="584" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="584" pos:column="23">':'<pos:position pos:line="584" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="584" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="584" pos:column="28"/></expr_stmt>
    <if pos:line="585" pos:column="5">if <condition pos:line="585" pos:column="8">(<expr><name pos:line="585" pos:column="9">q<pos:position pos:line="585" pos:column="10"/></name> <operator pos:line="585" pos:column="11">!=<pos:position pos:line="585" pos:column="13"/></operator> <name pos:line="585" pos:column="14">NULL<pos:position pos:line="585" pos:column="18"/></name></expr>)<pos:position pos:line="585" pos:column="19"/></condition><then pos:line="585" pos:column="19"> <block pos:line="585" pos:column="20">{
        <if pos:line="586" pos:column="9">if <condition pos:line="586" pos:column="12">(<expr><call><name pos:line="586" pos:column="13">sscanf<pos:position pos:line="586" pos:column="19"/></name><argument_list pos:line="586" pos:column="19">(<argument><expr><name pos:line="586" pos:column="20">q<pos:position pos:line="586" pos:column="21"/></name> <operator pos:line="586" pos:column="22">+<pos:position pos:line="586" pos:column="23"/></operator> <literal type="number" pos:line="586" pos:column="24">1<pos:position pos:line="586" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="586" pos:column="27">"%u"<pos:position pos:line="586" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="586" pos:column="33">&amp;<pos:position pos:line="586" pos:column="38"/></operator><name pos:line="586" pos:column="34">port<pos:position pos:line="586" pos:column="38"/></name></expr></argument>)<pos:position pos:line="586" pos:column="39"/></argument_list></call> <operator pos:line="586" pos:column="40">!=<pos:position pos:line="586" pos:column="42"/></operator> <literal type="number" pos:line="586" pos:column="43">1<pos:position pos:line="586" pos:column="44"/></literal> <operator pos:line="586" pos:column="45">||<pos:position pos:line="586" pos:column="47"/></operator> <name pos:line="586" pos:column="48">port<pos:position pos:line="586" pos:column="52"/></name> <operator pos:line="586" pos:column="53">&gt;<pos:position pos:line="586" pos:column="57"/></operator> <literal type="number" pos:line="586" pos:column="55">65535<pos:position pos:line="586" pos:column="60"/></literal></expr>)<pos:position pos:line="586" pos:column="61"/></condition><then pos:line="586" pos:column="61"> <block pos:line="586" pos:column="62">{
            <if pos:line="587" pos:column="13">if <condition pos:line="587" pos:column="16">(<expr><name pos:line="587" pos:column="17">regex<pos:position pos:line="587" pos:column="22"/></name></expr>)<pos:position pos:line="587" pos:column="23"/></condition><then pos:line="587" pos:column="23">
                <block type="pseudo"><return pos:line="588" pos:column="17">return <expr><literal type="string" pos:line="588" pos:column="24">"ProxyRemoteMatch: Bad syntax for a remote proxy server (bad port number)"<pos:position pos:line="588" pos:column="98"/></literal></expr>;<pos:position pos:line="588" pos:column="99"/></return></block></then>
            <else pos:line="589" pos:column="13">else
                <block type="pseudo"><return pos:line="590" pos:column="17">return <expr><literal type="string" pos:line="590" pos:column="24">"ProxyRemote: Bad syntax for a remote proxy server (bad port number)"<pos:position pos:line="590" pos:column="93"/></literal></expr>;<pos:position pos:line="590" pos:column="94"/></return></block></else></if>
        }<pos:position pos:line="591" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="592" pos:column="9">*<pos:position pos:line="592" pos:column="10"/></operator><name pos:line="592" pos:column="10">q<pos:position pos:line="592" pos:column="11"/></name> <operator pos:line="592" pos:column="12">=<pos:position pos:line="592" pos:column="13"/></operator> <literal type="char" pos:line="592" pos:column="14">'\0'<pos:position pos:line="592" pos:column="18"/></literal></expr>;<pos:position pos:line="592" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="593" pos:column="6"/></block></then>
    <else pos:line="594" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="595" pos:column="9">port<pos:position pos:line="595" pos:column="13"/></name> <operator pos:line="595" pos:column="14">=<pos:position pos:line="595" pos:column="15"/></operator> <operator pos:line="595" pos:column="16">-<pos:position pos:line="595" pos:column="17"/></operator><literal type="number" pos:line="595" pos:column="17">1<pos:position pos:line="595" pos:column="18"/></literal></expr>;<pos:position pos:line="595" pos:column="19"/></expr_stmt></block></else></if>
    <expr_stmt><expr><operator pos:line="596" pos:column="5">*<pos:position pos:line="596" pos:column="6"/></operator><name pos:line="596" pos:column="6">p<pos:position pos:line="596" pos:column="7"/></name> <operator pos:line="596" pos:column="8">=<pos:position pos:line="596" pos:column="9"/></operator> <literal type="char" pos:line="596" pos:column="10">'\0'<pos:position pos:line="596" pos:column="14"/></literal></expr>;<pos:position pos:line="596" pos:column="15"/></expr_stmt>
    <if pos:line="597" pos:column="5">if <condition pos:line="597" pos:column="8">(<expr><name pos:line="597" pos:column="9">regex<pos:position pos:line="597" pos:column="14"/></name></expr>)<pos:position pos:line="597" pos:column="15"/></condition><then pos:line="597" pos:column="15"> <block pos:line="597" pos:column="16">{
        <expr_stmt><expr><name pos:line="598" pos:column="9">reg<pos:position pos:line="598" pos:column="12"/></name> <operator pos:line="598" pos:column="13">=<pos:position pos:line="598" pos:column="14"/></operator> <call><name pos:line="598" pos:column="15">ap_pregcomp<pos:position pos:line="598" pos:column="26"/></name><argument_list pos:line="598" pos:column="26">(<argument><expr><name><name pos:line="598" pos:column="27">cmd<pos:position pos:line="598" pos:column="30"/></name><operator pos:line="598" pos:column="30">-&gt;<pos:position pos:line="598" pos:column="35"/></operator><name pos:line="598" pos:column="32">pool<pos:position pos:line="598" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="598" pos:column="38">f<pos:position pos:line="598" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="598" pos:column="41">REG_EXTENDED<pos:position pos:line="598" pos:column="53"/></name></expr></argument>)<pos:position pos:line="598" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="598" pos:column="55"/></expr_stmt>
        <if pos:line="599" pos:column="9">if <condition pos:line="599" pos:column="12">(<expr><operator pos:line="599" pos:column="13">!<pos:position pos:line="599" pos:column="14"/></operator><name pos:line="599" pos:column="14">reg<pos:position pos:line="599" pos:column="17"/></name></expr>)<pos:position pos:line="599" pos:column="18"/></condition><then pos:line="599" pos:column="18">
            <block type="pseudo"><return pos:line="600" pos:column="13">return <expr><literal type="string" pos:line="600" pos:column="20">"Regular expression for ProxyRemoteMatch could not be compiled."<pos:position pos:line="600" pos:column="84"/></literal></expr>;<pos:position pos:line="600" pos:column="85"/></return></block></then></if>
    }<pos:position pos:line="601" pos:column="6"/></block></then>
    <elseif pos:line="602" pos:column="5">else
        <if pos:line="603" pos:column="9">if <condition pos:line="603" pos:column="12">(<expr><call><name pos:line="603" pos:column="13">strchr<pos:position pos:line="603" pos:column="19"/></name><argument_list pos:line="603" pos:column="19">(<argument><expr><name pos:line="603" pos:column="20">f<pos:position pos:line="603" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="603" pos:column="23">':'<pos:position pos:line="603" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="603" pos:column="27"/></argument_list></call> <operator pos:line="603" pos:column="28">==<pos:position pos:line="603" pos:column="30"/></operator> <name pos:line="603" pos:column="31">NULL<pos:position pos:line="603" pos:column="35"/></name></expr>)<pos:position pos:line="603" pos:column="36"/></condition><then pos:line="603" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="604" pos:column="13">ap_str_tolower<pos:position pos:line="604" pos:column="27"/></name><argument_list pos:line="604" pos:column="27">(<argument><expr><name pos:line="604" pos:column="28">f<pos:position pos:line="604" pos:column="29"/></name></expr></argument>)<pos:position pos:line="604" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="604" pos:column="31"/></expr_stmt></block></then></if></elseif></if>		<comment type="block" pos:line="604" pos:column="41">/* lowercase scheme */</comment>
    <expr_stmt><expr><call><name pos:line="605" pos:column="5">ap_str_tolower<pos:position pos:line="605" pos:column="19"/></name><argument_list pos:line="605" pos:column="19">(<argument><expr><name pos:line="605" pos:column="20">p<pos:position pos:line="605" pos:column="21"/></name> <operator pos:line="605" pos:column="22">+<pos:position pos:line="605" pos:column="23"/></operator> <literal type="number" pos:line="605" pos:column="24">3<pos:position pos:line="605" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="605" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="605" pos:column="27"/></expr_stmt>		<comment type="block" pos:line="605" pos:column="41">/* lowercase hostname */</comment>

    <if pos:line="607" pos:column="5">if <condition pos:line="607" pos:column="8">(<expr><name pos:line="607" pos:column="9">port<pos:position pos:line="607" pos:column="13"/></name> <operator pos:line="607" pos:column="14">==<pos:position pos:line="607" pos:column="16"/></operator> <operator pos:line="607" pos:column="17">-<pos:position pos:line="607" pos:column="18"/></operator><literal type="number" pos:line="607" pos:column="18">1<pos:position pos:line="607" pos:column="19"/></literal></expr>)<pos:position pos:line="607" pos:column="20"/></condition><then pos:line="607" pos:column="20"> <block pos:line="607" pos:column="21">{
        <expr_stmt><expr><name pos:line="608" pos:column="9">port<pos:position pos:line="608" pos:column="13"/></name> <operator pos:line="608" pos:column="14">=<pos:position pos:line="608" pos:column="15"/></operator> <call><name pos:line="608" pos:column="16">apr_uri_port_of_scheme<pos:position pos:line="608" pos:column="38"/></name><argument_list pos:line="608" pos:column="38">(<argument><expr><name pos:line="608" pos:column="39">scheme<pos:position pos:line="608" pos:column="45"/></name></expr></argument>)<pos:position pos:line="608" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="608" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="609" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="611" pos:column="5">new<pos:position pos:line="611" pos:column="8"/></name> <operator pos:line="611" pos:column="9">=<pos:position pos:line="611" pos:column="10"/></operator> <call><name pos:line="611" pos:column="11">apr_array_push<pos:position pos:line="611" pos:column="25"/></name><argument_list pos:line="611" pos:column="25">(<argument><expr><name><name pos:line="611" pos:column="26">conf<pos:position pos:line="611" pos:column="30"/></name><operator pos:line="611" pos:column="30">-&gt;<pos:position pos:line="611" pos:column="35"/></operator><name pos:line="611" pos:column="32">proxies<pos:position pos:line="611" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="611" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="611" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="612" pos:column="5">new<pos:position pos:line="612" pos:column="8"/></name><operator pos:line="612" pos:column="8">-&gt;<pos:position pos:line="612" pos:column="13"/></operator><name pos:line="612" pos:column="10">scheme<pos:position pos:line="612" pos:column="16"/></name></name> <operator pos:line="612" pos:column="17">=<pos:position pos:line="612" pos:column="18"/></operator> <name pos:line="612" pos:column="19">f<pos:position pos:line="612" pos:column="20"/></name></expr>;<pos:position pos:line="612" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="613" pos:column="5">new<pos:position pos:line="613" pos:column="8"/></name><operator pos:line="613" pos:column="8">-&gt;<pos:position pos:line="613" pos:column="13"/></operator><name pos:line="613" pos:column="10">protocol<pos:position pos:line="613" pos:column="18"/></name></name> <operator pos:line="613" pos:column="19">=<pos:position pos:line="613" pos:column="20"/></operator> <name pos:line="613" pos:column="21">r<pos:position pos:line="613" pos:column="22"/></name></expr>;<pos:position pos:line="613" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="614" pos:column="5">new<pos:position pos:line="614" pos:column="8"/></name><operator pos:line="614" pos:column="8">-&gt;<pos:position pos:line="614" pos:column="13"/></operator><name pos:line="614" pos:column="10">hostname<pos:position pos:line="614" pos:column="18"/></name></name> <operator pos:line="614" pos:column="19">=<pos:position pos:line="614" pos:column="20"/></operator> <name pos:line="614" pos:column="21">p<pos:position pos:line="614" pos:column="22"/></name> <operator pos:line="614" pos:column="23">+<pos:position pos:line="614" pos:column="24"/></operator> <literal type="number" pos:line="614" pos:column="25">3<pos:position pos:line="614" pos:column="26"/></literal></expr>;<pos:position pos:line="614" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="615" pos:column="5">new<pos:position pos:line="615" pos:column="8"/></name><operator pos:line="615" pos:column="8">-&gt;<pos:position pos:line="615" pos:column="13"/></operator><name pos:line="615" pos:column="10">port<pos:position pos:line="615" pos:column="14"/></name></name> <operator pos:line="615" pos:column="15">=<pos:position pos:line="615" pos:column="16"/></operator> <name pos:line="615" pos:column="17">port<pos:position pos:line="615" pos:column="21"/></name></expr>;<pos:position pos:line="615" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="616" pos:column="5">new<pos:position pos:line="616" pos:column="8"/></name><operator pos:line="616" pos:column="8">-&gt;<pos:position pos:line="616" pos:column="13"/></operator><name pos:line="616" pos:column="10">regexp<pos:position pos:line="616" pos:column="16"/></name></name> <operator pos:line="616" pos:column="17">=<pos:position pos:line="616" pos:column="18"/></operator> <name pos:line="616" pos:column="19">reg<pos:position pos:line="616" pos:column="22"/></name></expr>;<pos:position pos:line="616" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="617" pos:column="5">new<pos:position pos:line="617" pos:column="8"/></name><operator pos:line="617" pos:column="8">-&gt;<pos:position pos:line="617" pos:column="13"/></operator><name pos:line="617" pos:column="10">use_regex<pos:position pos:line="617" pos:column="19"/></name></name> <operator pos:line="617" pos:column="20">=<pos:position pos:line="617" pos:column="21"/></operator> <name pos:line="617" pos:column="22">regex<pos:position pos:line="617" pos:column="27"/></name></expr>;<pos:position pos:line="617" pos:column="28"/></expr_stmt>
    <return pos:line="618" pos:column="5">return <expr><name pos:line="618" pos:column="12">NULL<pos:position pos:line="618" pos:column="16"/></name></expr>;<pos:position pos:line="618" pos:column="17"/></return>
}<pos:position pos:line="619" pos:column="2"/></block></function>

<function><specifier pos:line="621" pos:column="1">static<pos:position pos:line="621" pos:column="7"/></specifier> <type><specifier pos:line="621" pos:column="8">const<pos:position pos:line="621" pos:column="13"/></specifier> <name pos:line="621" pos:column="14">char<pos:position pos:line="621" pos:column="18"/></name> <modifier pos:line="621" pos:column="19">*<pos:position pos:line="621" pos:column="20"/></modifier></type>
    <name pos:line="622" pos:column="5">add_proxy_noregex<pos:position pos:line="622" pos:column="22"/></name><parameter_list pos:line="622" pos:column="22">(<parameter><decl><type><name pos:line="622" pos:column="23">cmd_parms<pos:position pos:line="622" pos:column="32"/></name> <modifier pos:line="622" pos:column="33">*<pos:position pos:line="622" pos:column="34"/></modifier></type><name pos:line="622" pos:column="34">cmd<pos:position pos:line="622" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="622" pos:column="39">void<pos:position pos:line="622" pos:column="43"/></name> <modifier pos:line="622" pos:column="44">*<pos:position pos:line="622" pos:column="45"/></modifier></type><name pos:line="622" pos:column="45">dummy<pos:position pos:line="622" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="622" pos:column="52">const<pos:position pos:line="622" pos:column="57"/></specifier> <name pos:line="622" pos:column="58">char<pos:position pos:line="622" pos:column="62"/></name> <modifier pos:line="622" pos:column="63">*<pos:position pos:line="622" pos:column="64"/></modifier></type><name pos:line="622" pos:column="64">f1<pos:position pos:line="622" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="622" pos:column="68">const<pos:position pos:line="622" pos:column="73"/></specifier> <name pos:line="622" pos:column="74">char<pos:position pos:line="622" pos:column="78"/></name> <modifier pos:line="622" pos:column="79">*<pos:position pos:line="622" pos:column="80"/></modifier></type><name pos:line="622" pos:column="80">r1<pos:position pos:line="622" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="622" pos:column="83"/></parameter_list>
<block pos:line="623" pos:column="1">{
    <return pos:line="624" pos:column="5">return <expr><call><name pos:line="624" pos:column="12">add_proxy<pos:position pos:line="624" pos:column="21"/></name><argument_list pos:line="624" pos:column="21">(<argument><expr><name pos:line="624" pos:column="22">cmd<pos:position pos:line="624" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="624" pos:column="27">dummy<pos:position pos:line="624" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="624" pos:column="34">f1<pos:position pos:line="624" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="624" pos:column="38">r1<pos:position pos:line="624" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="624" pos:column="42">0<pos:position pos:line="624" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="624" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="624" pos:column="45"/></return>
}<pos:position pos:line="625" pos:column="2"/></block></function>

<function><specifier pos:line="627" pos:column="1">static<pos:position pos:line="627" pos:column="7"/></specifier> <type><specifier pos:line="627" pos:column="8">const<pos:position pos:line="627" pos:column="13"/></specifier> <name pos:line="627" pos:column="14">char<pos:position pos:line="627" pos:column="18"/></name> <modifier pos:line="627" pos:column="19">*<pos:position pos:line="627" pos:column="20"/></modifier></type>
    <name pos:line="628" pos:column="5">add_proxy_regex<pos:position pos:line="628" pos:column="20"/></name><parameter_list pos:line="628" pos:column="20">(<parameter><decl><type><name pos:line="628" pos:column="21">cmd_parms<pos:position pos:line="628" pos:column="30"/></name> <modifier pos:line="628" pos:column="31">*<pos:position pos:line="628" pos:column="32"/></modifier></type><name pos:line="628" pos:column="32">cmd<pos:position pos:line="628" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="628" pos:column="37">void<pos:position pos:line="628" pos:column="41"/></name> <modifier pos:line="628" pos:column="42">*<pos:position pos:line="628" pos:column="43"/></modifier></type><name pos:line="628" pos:column="43">dummy<pos:position pos:line="628" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="628" pos:column="50">const<pos:position pos:line="628" pos:column="55"/></specifier> <name pos:line="628" pos:column="56">char<pos:position pos:line="628" pos:column="60"/></name> <modifier pos:line="628" pos:column="61">*<pos:position pos:line="628" pos:column="62"/></modifier></type><name pos:line="628" pos:column="62">f1<pos:position pos:line="628" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="628" pos:column="66">const<pos:position pos:line="628" pos:column="71"/></specifier> <name pos:line="628" pos:column="72">char<pos:position pos:line="628" pos:column="76"/></name> <modifier pos:line="628" pos:column="77">*<pos:position pos:line="628" pos:column="78"/></modifier></type><name pos:line="628" pos:column="78">r1<pos:position pos:line="628" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="628" pos:column="81"/></parameter_list>
<block pos:line="629" pos:column="1">{
    <return pos:line="630" pos:column="5">return <expr><call><name pos:line="630" pos:column="12">add_proxy<pos:position pos:line="630" pos:column="21"/></name><argument_list pos:line="630" pos:column="21">(<argument><expr><name pos:line="630" pos:column="22">cmd<pos:position pos:line="630" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="630" pos:column="27">dummy<pos:position pos:line="630" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="630" pos:column="34">f1<pos:position pos:line="630" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="630" pos:column="38">r1<pos:position pos:line="630" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="630" pos:column="42">1<pos:position pos:line="630" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="630" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="630" pos:column="45"/></return>
}<pos:position pos:line="631" pos:column="2"/></block></function>

<function><specifier pos:line="633" pos:column="1">static<pos:position pos:line="633" pos:column="7"/></specifier> <type><specifier pos:line="633" pos:column="8">const<pos:position pos:line="633" pos:column="13"/></specifier> <name pos:line="633" pos:column="14">char<pos:position pos:line="633" pos:column="18"/></name> <modifier pos:line="633" pos:column="19">*<pos:position pos:line="633" pos:column="20"/></modifier></type>
    <name pos:line="634" pos:column="5">add_pass<pos:position pos:line="634" pos:column="13"/></name><parameter_list pos:line="634" pos:column="13">(<parameter><decl><type><name pos:line="634" pos:column="14">cmd_parms<pos:position pos:line="634" pos:column="23"/></name> <modifier pos:line="634" pos:column="24">*<pos:position pos:line="634" pos:column="25"/></modifier></type><name pos:line="634" pos:column="25">cmd<pos:position pos:line="634" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="634" pos:column="30">void<pos:position pos:line="634" pos:column="34"/></name> <modifier pos:line="634" pos:column="35">*<pos:position pos:line="634" pos:column="36"/></modifier></type><name pos:line="634" pos:column="36">dummy<pos:position pos:line="634" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="634" pos:column="43">const<pos:position pos:line="634" pos:column="48"/></specifier> <name pos:line="634" pos:column="49">char<pos:position pos:line="634" pos:column="53"/></name> <modifier pos:line="634" pos:column="54">*<pos:position pos:line="634" pos:column="55"/></modifier></type><name pos:line="634" pos:column="55">f<pos:position pos:line="634" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="634" pos:column="58">const<pos:position pos:line="634" pos:column="63"/></specifier> <name pos:line="634" pos:column="64">char<pos:position pos:line="634" pos:column="68"/></name> <modifier pos:line="634" pos:column="69">*<pos:position pos:line="634" pos:column="70"/></modifier></type><name pos:line="634" pos:column="70">r<pos:position pos:line="634" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="634" pos:column="72"/></parameter_list>
<block pos:line="635" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="636" pos:column="5">server_rec<pos:position pos:line="636" pos:column="15"/></name> <modifier pos:line="636" pos:column="16">*<pos:position pos:line="636" pos:column="17"/></modifier></type><name pos:line="636" pos:column="17">s<pos:position pos:line="636" pos:column="18"/></name> <init pos:line="636" pos:column="19">= <expr><name><name pos:line="636" pos:column="21">cmd<pos:position pos:line="636" pos:column="24"/></name><operator pos:line="636" pos:column="24">-&gt;<pos:position pos:line="636" pos:column="29"/></operator><name pos:line="636" pos:column="26">server<pos:position pos:line="636" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="636" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="637" pos:column="5">proxy_server_conf<pos:position pos:line="637" pos:column="22"/></name> <modifier pos:line="637" pos:column="23">*<pos:position pos:line="637" pos:column="24"/></modifier></type><name pos:line="637" pos:column="24">conf<pos:position pos:line="637" pos:column="28"/></name> <init pos:line="637" pos:column="29">=
    <expr><operator pos:line="638" pos:column="5">(<pos:position pos:line="638" pos:column="6"/></operator><name pos:line="638" pos:column="6">proxy_server_conf<pos:position pos:line="638" pos:column="23"/></name> <operator pos:line="638" pos:column="24">*<pos:position pos:line="638" pos:column="25"/></operator><operator pos:line="638" pos:column="25">)<pos:position pos:line="638" pos:column="26"/></operator> <call><name pos:line="638" pos:column="27">ap_get_module_config<pos:position pos:line="638" pos:column="47"/></name><argument_list pos:line="638" pos:column="47">(<argument><expr><name><name pos:line="638" pos:column="48">s<pos:position pos:line="638" pos:column="49"/></name><operator pos:line="638" pos:column="49">-&gt;<pos:position pos:line="638" pos:column="54"/></operator><name pos:line="638" pos:column="51">module_config<pos:position pos:line="638" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="638" pos:column="66">&amp;<pos:position pos:line="638" pos:column="71"/></operator><name pos:line="638" pos:column="67">proxy_module<pos:position pos:line="638" pos:column="79"/></name></expr></argument>)<pos:position pos:line="638" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="638" pos:column="81"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="639" pos:column="5">struct<pos:position pos:line="639" pos:column="11"/></name> <name pos:line="639" pos:column="12">proxy_alias<pos:position pos:line="639" pos:column="23"/></name></name> <modifier pos:line="639" pos:column="24">*<pos:position pos:line="639" pos:column="25"/></modifier></type><name pos:line="639" pos:column="25">new<pos:position pos:line="639" pos:column="28"/></name></decl>;<pos:position pos:line="639" pos:column="29"/></decl_stmt>
    <if pos:line="640" pos:column="5">if <condition pos:line="640" pos:column="8">(<expr><name pos:line="640" pos:column="9">r<pos:position pos:line="640" pos:column="10"/></name><operator pos:line="640" pos:column="10">!=<pos:position pos:line="640" pos:column="12"/></operator><name pos:line="640" pos:column="12">NULL<pos:position pos:line="640" pos:column="16"/></name> <operator pos:line="640" pos:column="17">&amp;&amp;<pos:position pos:line="640" pos:column="27"/></operator> <name><name pos:line="640" pos:column="20">cmd<pos:position pos:line="640" pos:column="23"/></name><operator pos:line="640" pos:column="23">-&gt;<pos:position pos:line="640" pos:column="28"/></operator><name pos:line="640" pos:column="25">path<pos:position pos:line="640" pos:column="29"/></name></name> <operator pos:line="640" pos:column="30">==<pos:position pos:line="640" pos:column="32"/></operator> <name pos:line="640" pos:column="33">NULL<pos:position pos:line="640" pos:column="37"/></name></expr> )<pos:position pos:line="640" pos:column="39"/></condition><then pos:line="640" pos:column="39"> <block pos:line="640" pos:column="40">{
        <expr_stmt><expr><name pos:line="641" pos:column="9">new<pos:position pos:line="641" pos:column="12"/></name> <operator pos:line="641" pos:column="13">=<pos:position pos:line="641" pos:column="14"/></operator> <call><name pos:line="641" pos:column="15">apr_array_push<pos:position pos:line="641" pos:column="29"/></name><argument_list pos:line="641" pos:column="29">(<argument><expr><name><name pos:line="641" pos:column="30">conf<pos:position pos:line="641" pos:column="34"/></name><operator pos:line="641" pos:column="34">-&gt;<pos:position pos:line="641" pos:column="39"/></operator><name pos:line="641" pos:column="36">aliases<pos:position pos:line="641" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="641" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="641" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="642" pos:column="9">new<pos:position pos:line="642" pos:column="12"/></name><operator pos:line="642" pos:column="12">-&gt;<pos:position pos:line="642" pos:column="17"/></operator><name pos:line="642" pos:column="14">fake<pos:position pos:line="642" pos:column="18"/></name></name> <operator pos:line="642" pos:column="19">=<pos:position pos:line="642" pos:column="20"/></operator> <name pos:line="642" pos:column="21">f<pos:position pos:line="642" pos:column="22"/></name></expr>;<pos:position pos:line="642" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="643" pos:column="9">new<pos:position pos:line="643" pos:column="12"/></name><operator pos:line="643" pos:column="12">-&gt;<pos:position pos:line="643" pos:column="17"/></operator><name pos:line="643" pos:column="14">real<pos:position pos:line="643" pos:column="18"/></name></name> <operator pos:line="643" pos:column="19">=<pos:position pos:line="643" pos:column="20"/></operator> <name pos:line="643" pos:column="21">r<pos:position pos:line="643" pos:column="22"/></name></expr>;<pos:position pos:line="643" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="644" pos:column="6"/></block></then> <elseif pos:line="644" pos:column="7">else <if pos:line="644" pos:column="12">if <condition pos:line="644" pos:column="15">(<expr><name pos:line="644" pos:column="16">r<pos:position pos:line="644" pos:column="17"/></name><operator pos:line="644" pos:column="17">==<pos:position pos:line="644" pos:column="19"/></operator><name pos:line="644" pos:column="19">NULL<pos:position pos:line="644" pos:column="23"/></name> <operator pos:line="644" pos:column="24">&amp;&amp;<pos:position pos:line="644" pos:column="34"/></operator> <name><name pos:line="644" pos:column="27">cmd<pos:position pos:line="644" pos:column="30"/></name><operator pos:line="644" pos:column="30">-&gt;<pos:position pos:line="644" pos:column="35"/></operator><name pos:line="644" pos:column="32">path<pos:position pos:line="644" pos:column="36"/></name></name> <operator pos:line="644" pos:column="37">!=<pos:position pos:line="644" pos:column="39"/></operator> <name pos:line="644" pos:column="40">NULL<pos:position pos:line="644" pos:column="44"/></name></expr>)<pos:position pos:line="644" pos:column="45"/></condition><then pos:line="644" pos:column="45"> <block pos:line="644" pos:column="46">{
        <expr_stmt><expr><name pos:line="645" pos:column="9">new<pos:position pos:line="645" pos:column="12"/></name> <operator pos:line="645" pos:column="13">=<pos:position pos:line="645" pos:column="14"/></operator> <call><name pos:line="645" pos:column="15">apr_array_push<pos:position pos:line="645" pos:column="29"/></name><argument_list pos:line="645" pos:column="29">(<argument><expr><name><name pos:line="645" pos:column="30">conf<pos:position pos:line="645" pos:column="34"/></name><operator pos:line="645" pos:column="34">-&gt;<pos:position pos:line="645" pos:column="39"/></operator><name pos:line="645" pos:column="36">aliases<pos:position pos:line="645" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="645" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="645" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="646" pos:column="9">new<pos:position pos:line="646" pos:column="12"/></name><operator pos:line="646" pos:column="12">-&gt;<pos:position pos:line="646" pos:column="17"/></operator><name pos:line="646" pos:column="14">fake<pos:position pos:line="646" pos:column="18"/></name></name> <operator pos:line="646" pos:column="19">=<pos:position pos:line="646" pos:column="20"/></operator> <name><name pos:line="646" pos:column="21">cmd<pos:position pos:line="646" pos:column="24"/></name><operator pos:line="646" pos:column="24">-&gt;<pos:position pos:line="646" pos:column="29"/></operator><name pos:line="646" pos:column="26">path<pos:position pos:line="646" pos:column="30"/></name></name></expr>;<pos:position pos:line="646" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="647" pos:column="9">new<pos:position pos:line="647" pos:column="12"/></name><operator pos:line="647" pos:column="12">-&gt;<pos:position pos:line="647" pos:column="17"/></operator><name pos:line="647" pos:column="14">real<pos:position pos:line="647" pos:column="18"/></name></name> <operator pos:line="647" pos:column="19">=<pos:position pos:line="647" pos:column="20"/></operator> <name pos:line="647" pos:column="21">f<pos:position pos:line="647" pos:column="22"/></name></expr>;<pos:position pos:line="647" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="648" pos:column="6"/></block></then></if></elseif> <else pos:line="648" pos:column="7">else <block pos:line="648" pos:column="12">{
        <if pos:line="649" pos:column="9">if <condition pos:line="649" pos:column="12">( <expr><name pos:line="649" pos:column="14">r<pos:position pos:line="649" pos:column="15"/></name><operator pos:line="649" pos:column="15">==<pos:position pos:line="649" pos:column="17"/></operator> <name pos:line="649" pos:column="18">NULL<pos:position pos:line="649" pos:column="22"/></name></expr>)<pos:position pos:line="649" pos:column="23"/></condition><then pos:line="649" pos:column="23">
            <block type="pseudo"><return pos:line="650" pos:column="13">return <expr><literal type="string" pos:line="650" pos:column="20">"ProxyPass needs a path when not defined in a location"<pos:position pos:line="650" pos:column="75"/></literal></expr>;<pos:position pos:line="650" pos:column="76"/></return></block></then>
        <else pos:line="651" pos:column="9">else 
            <block type="pseudo"><return pos:line="652" pos:column="13">return <expr><literal type="string" pos:line="652" pos:column="20">"ProxyPass can not have a path when defined in a location"<pos:position pos:line="652" pos:column="78"/></literal></expr>;<pos:position pos:line="652" pos:column="79"/></return></block></else></if>
    }<pos:position pos:line="653" pos:column="6"/></block></else></if>

     <return pos:line="655" pos:column="6">return <expr><name pos:line="655" pos:column="13">NULL<pos:position pos:line="655" pos:column="17"/></name></expr>;<pos:position pos:line="655" pos:column="18"/></return>
}<pos:position pos:line="656" pos:column="2"/></block></function>

<function><specifier pos:line="658" pos:column="1">static<pos:position pos:line="658" pos:column="7"/></specifier> <type><specifier pos:line="658" pos:column="8">const<pos:position pos:line="658" pos:column="13"/></specifier> <name pos:line="658" pos:column="14">char<pos:position pos:line="658" pos:column="18"/></name> <modifier pos:line="658" pos:column="19">*<pos:position pos:line="658" pos:column="20"/></modifier></type>
    <name pos:line="659" pos:column="5">add_pass_reverse<pos:position pos:line="659" pos:column="21"/></name><parameter_list pos:line="659" pos:column="21">(<parameter><decl><type><name pos:line="659" pos:column="22">cmd_parms<pos:position pos:line="659" pos:column="31"/></name> <modifier pos:line="659" pos:column="32">*<pos:position pos:line="659" pos:column="33"/></modifier></type><name pos:line="659" pos:column="33">cmd<pos:position pos:line="659" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="659" pos:column="38">void<pos:position pos:line="659" pos:column="42"/></name> <modifier pos:line="659" pos:column="43">*<pos:position pos:line="659" pos:column="44"/></modifier></type><name pos:line="659" pos:column="44">dummy<pos:position pos:line="659" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="659" pos:column="51">const<pos:position pos:line="659" pos:column="56"/></specifier> <name pos:line="659" pos:column="57">char<pos:position pos:line="659" pos:column="61"/></name> <modifier pos:line="659" pos:column="62">*<pos:position pos:line="659" pos:column="63"/></modifier></type><name pos:line="659" pos:column="63">f<pos:position pos:line="659" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="659" pos:column="66">const<pos:position pos:line="659" pos:column="71"/></specifier> <name pos:line="659" pos:column="72">char<pos:position pos:line="659" pos:column="76"/></name> <modifier pos:line="659" pos:column="77">*<pos:position pos:line="659" pos:column="78"/></modifier></type><name pos:line="659" pos:column="78">r<pos:position pos:line="659" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="659" pos:column="80"/></parameter_list>
<block pos:line="660" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="661" pos:column="5">server_rec<pos:position pos:line="661" pos:column="15"/></name> <modifier pos:line="661" pos:column="16">*<pos:position pos:line="661" pos:column="17"/></modifier></type><name pos:line="661" pos:column="17">s<pos:position pos:line="661" pos:column="18"/></name> <init pos:line="661" pos:column="19">= <expr><name><name pos:line="661" pos:column="21">cmd<pos:position pos:line="661" pos:column="24"/></name><operator pos:line="661" pos:column="24">-&gt;<pos:position pos:line="661" pos:column="29"/></operator><name pos:line="661" pos:column="26">server<pos:position pos:line="661" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="661" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="662" pos:column="5">proxy_server_conf<pos:position pos:line="662" pos:column="22"/></name> <modifier pos:line="662" pos:column="23">*<pos:position pos:line="662" pos:column="24"/></modifier></type><name pos:line="662" pos:column="24">conf<pos:position pos:line="662" pos:column="28"/></name></decl>;<pos:position pos:line="662" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="663" pos:column="5">struct<pos:position pos:line="663" pos:column="11"/></name> <name pos:line="663" pos:column="12">proxy_alias<pos:position pos:line="663" pos:column="23"/></name></name> <modifier pos:line="663" pos:column="24">*<pos:position pos:line="663" pos:column="25"/></modifier></type><name pos:line="663" pos:column="25">new<pos:position pos:line="663" pos:column="28"/></name></decl>;<pos:position pos:line="663" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><name pos:line="665" pos:column="5">conf<pos:position pos:line="665" pos:column="9"/></name> <operator pos:line="665" pos:column="10">=<pos:position pos:line="665" pos:column="11"/></operator> <operator pos:line="665" pos:column="12">(<pos:position pos:line="665" pos:column="13"/></operator><name pos:line="665" pos:column="13">proxy_server_conf<pos:position pos:line="665" pos:column="30"/></name> <operator pos:line="665" pos:column="31">*<pos:position pos:line="665" pos:column="32"/></operator><operator pos:line="665" pos:column="32">)<pos:position pos:line="665" pos:column="33"/></operator><call><name pos:line="665" pos:column="33">ap_get_module_config<pos:position pos:line="665" pos:column="53"/></name><argument_list pos:line="665" pos:column="53">(<argument><expr><name><name pos:line="665" pos:column="54">s<pos:position pos:line="665" pos:column="55"/></name><operator pos:line="665" pos:column="55">-&gt;<pos:position pos:line="665" pos:column="60"/></operator><name pos:line="665" pos:column="57">module_config<pos:position pos:line="665" pos:column="70"/></name></name></expr></argument>, 
                                                     <argument><expr><operator pos:line="666" pos:column="54">&amp;<pos:position pos:line="666" pos:column="59"/></operator><name pos:line="666" pos:column="55">proxy_module<pos:position pos:line="666" pos:column="67"/></name></expr></argument>)<pos:position pos:line="666" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="666" pos:column="69"/></expr_stmt>
    <if pos:line="667" pos:column="5">if <condition pos:line="667" pos:column="8">(<expr><name pos:line="667" pos:column="9">r<pos:position pos:line="667" pos:column="10"/></name><operator pos:line="667" pos:column="10">!=<pos:position pos:line="667" pos:column="12"/></operator><name pos:line="667" pos:column="12">NULL<pos:position pos:line="667" pos:column="16"/></name> <operator pos:line="667" pos:column="17">&amp;&amp;<pos:position pos:line="667" pos:column="27"/></operator> <name><name pos:line="667" pos:column="20">cmd<pos:position pos:line="667" pos:column="23"/></name><operator pos:line="667" pos:column="23">-&gt;<pos:position pos:line="667" pos:column="28"/></operator><name pos:line="667" pos:column="25">path<pos:position pos:line="667" pos:column="29"/></name></name> <operator pos:line="667" pos:column="30">==<pos:position pos:line="667" pos:column="32"/></operator> <name pos:line="667" pos:column="33">NULL<pos:position pos:line="667" pos:column="37"/></name></expr> )<pos:position pos:line="667" pos:column="39"/></condition><then pos:line="667" pos:column="39"> <block pos:line="667" pos:column="40">{
        <expr_stmt><expr><name pos:line="668" pos:column="9">new<pos:position pos:line="668" pos:column="12"/></name> <operator pos:line="668" pos:column="13">=<pos:position pos:line="668" pos:column="14"/></operator> <call><name pos:line="668" pos:column="15">apr_array_push<pos:position pos:line="668" pos:column="29"/></name><argument_list pos:line="668" pos:column="29">(<argument><expr><name><name pos:line="668" pos:column="30">conf<pos:position pos:line="668" pos:column="34"/></name><operator pos:line="668" pos:column="34">-&gt;<pos:position pos:line="668" pos:column="39"/></operator><name pos:line="668" pos:column="36">raliases<pos:position pos:line="668" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="668" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="668" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="669" pos:column="9">new<pos:position pos:line="669" pos:column="12"/></name><operator pos:line="669" pos:column="12">-&gt;<pos:position pos:line="669" pos:column="17"/></operator><name pos:line="669" pos:column="14">fake<pos:position pos:line="669" pos:column="18"/></name></name> <operator pos:line="669" pos:column="19">=<pos:position pos:line="669" pos:column="20"/></operator> <name pos:line="669" pos:column="21">f<pos:position pos:line="669" pos:column="22"/></name></expr>;<pos:position pos:line="669" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="670" pos:column="9">new<pos:position pos:line="670" pos:column="12"/></name><operator pos:line="670" pos:column="12">-&gt;<pos:position pos:line="670" pos:column="17"/></operator><name pos:line="670" pos:column="14">real<pos:position pos:line="670" pos:column="18"/></name></name> <operator pos:line="670" pos:column="19">=<pos:position pos:line="670" pos:column="20"/></operator> <name pos:line="670" pos:column="21">r<pos:position pos:line="670" pos:column="22"/></name></expr>;<pos:position pos:line="670" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="671" pos:column="6"/></block></then> <elseif pos:line="671" pos:column="7">else <if pos:line="671" pos:column="12">if <condition pos:line="671" pos:column="15">(<expr><name pos:line="671" pos:column="16">r<pos:position pos:line="671" pos:column="17"/></name><operator pos:line="671" pos:column="17">==<pos:position pos:line="671" pos:column="19"/></operator><name pos:line="671" pos:column="19">NULL<pos:position pos:line="671" pos:column="23"/></name> <operator pos:line="671" pos:column="24">&amp;&amp;<pos:position pos:line="671" pos:column="34"/></operator> <name><name pos:line="671" pos:column="27">cmd<pos:position pos:line="671" pos:column="30"/></name><operator pos:line="671" pos:column="30">-&gt;<pos:position pos:line="671" pos:column="35"/></operator><name pos:line="671" pos:column="32">path<pos:position pos:line="671" pos:column="36"/></name></name> <operator pos:line="671" pos:column="37">!=<pos:position pos:line="671" pos:column="39"/></operator> <name pos:line="671" pos:column="40">NULL<pos:position pos:line="671" pos:column="44"/></name></expr>)<pos:position pos:line="671" pos:column="45"/></condition><then pos:line="671" pos:column="45"> <block pos:line="671" pos:column="46">{
        <expr_stmt><expr><name pos:line="672" pos:column="9">new<pos:position pos:line="672" pos:column="12"/></name> <operator pos:line="672" pos:column="13">=<pos:position pos:line="672" pos:column="14"/></operator> <call><name pos:line="672" pos:column="15">apr_array_push<pos:position pos:line="672" pos:column="29"/></name><argument_list pos:line="672" pos:column="29">(<argument><expr><name><name pos:line="672" pos:column="30">conf<pos:position pos:line="672" pos:column="34"/></name><operator pos:line="672" pos:column="34">-&gt;<pos:position pos:line="672" pos:column="39"/></operator><name pos:line="672" pos:column="36">raliases<pos:position pos:line="672" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="672" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="672" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="673" pos:column="9">new<pos:position pos:line="673" pos:column="12"/></name><operator pos:line="673" pos:column="12">-&gt;<pos:position pos:line="673" pos:column="17"/></operator><name pos:line="673" pos:column="14">fake<pos:position pos:line="673" pos:column="18"/></name></name> <operator pos:line="673" pos:column="19">=<pos:position pos:line="673" pos:column="20"/></operator> <name><name pos:line="673" pos:column="21">cmd<pos:position pos:line="673" pos:column="24"/></name><operator pos:line="673" pos:column="24">-&gt;<pos:position pos:line="673" pos:column="29"/></operator><name pos:line="673" pos:column="26">path<pos:position pos:line="673" pos:column="30"/></name></name></expr>;<pos:position pos:line="673" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="674" pos:column="9">new<pos:position pos:line="674" pos:column="12"/></name><operator pos:line="674" pos:column="12">-&gt;<pos:position pos:line="674" pos:column="17"/></operator><name pos:line="674" pos:column="14">real<pos:position pos:line="674" pos:column="18"/></name></name> <operator pos:line="674" pos:column="19">=<pos:position pos:line="674" pos:column="20"/></operator> <name pos:line="674" pos:column="21">f<pos:position pos:line="674" pos:column="22"/></name></expr>;<pos:position pos:line="674" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="675" pos:column="6"/></block></then></if></elseif> <else pos:line="675" pos:column="7">else <block pos:line="675" pos:column="12">{
        <if pos:line="676" pos:column="9">if <condition pos:line="676" pos:column="12">( <expr><name pos:line="676" pos:column="14">r<pos:position pos:line="676" pos:column="15"/></name> <operator pos:line="676" pos:column="16">==<pos:position pos:line="676" pos:column="18"/></operator> <name pos:line="676" pos:column="19">NULL<pos:position pos:line="676" pos:column="23"/></name></expr>)<pos:position pos:line="676" pos:column="24"/></condition><then pos:line="676" pos:column="24">
            <block type="pseudo"><return pos:line="677" pos:column="13">return <expr><literal type="string" pos:line="677" pos:column="20">"ProxyPassReverse needs a path when not defined in a location"<pos:position pos:line="677" pos:column="82"/></literal></expr>;<pos:position pos:line="677" pos:column="83"/></return></block></then>
        <else pos:line="678" pos:column="9">else 
            <block type="pseudo"><return pos:line="679" pos:column="13">return <expr><literal type="string" pos:line="679" pos:column="20">"ProxyPassReverse can not have a path when defined in a location"<pos:position pos:line="679" pos:column="85"/></literal></expr>;<pos:position pos:line="679" pos:column="86"/></return></block></else></if>
    }<pos:position pos:line="680" pos:column="6"/></block></else></if>

    <return pos:line="682" pos:column="5">return <expr><name pos:line="682" pos:column="12">NULL<pos:position pos:line="682" pos:column="16"/></name></expr>;<pos:position pos:line="682" pos:column="17"/></return>
}<pos:position pos:line="683" pos:column="2"/></block></function>

<function><specifier pos:line="685" pos:column="1">static<pos:position pos:line="685" pos:column="7"/></specifier> <type><specifier pos:line="685" pos:column="8">const<pos:position pos:line="685" pos:column="13"/></specifier> <name pos:line="685" pos:column="14">char<pos:position pos:line="685" pos:column="18"/></name> <modifier pos:line="685" pos:column="19">*<pos:position pos:line="685" pos:column="20"/></modifier></type>
    <name pos:line="686" pos:column="5">set_proxy_exclude<pos:position pos:line="686" pos:column="22"/></name><parameter_list pos:line="686" pos:column="22">(<parameter><decl><type><name pos:line="686" pos:column="23">cmd_parms<pos:position pos:line="686" pos:column="32"/></name> <modifier pos:line="686" pos:column="33">*<pos:position pos:line="686" pos:column="34"/></modifier></type><name pos:line="686" pos:column="34">parms<pos:position pos:line="686" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="686" pos:column="41">void<pos:position pos:line="686" pos:column="45"/></name> <modifier pos:line="686" pos:column="46">*<pos:position pos:line="686" pos:column="47"/></modifier></type><name pos:line="686" pos:column="47">dummy<pos:position pos:line="686" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="686" pos:column="54">const<pos:position pos:line="686" pos:column="59"/></specifier> <name pos:line="686" pos:column="60">char<pos:position pos:line="686" pos:column="64"/></name> <modifier pos:line="686" pos:column="65">*<pos:position pos:line="686" pos:column="66"/></modifier></type><name pos:line="686" pos:column="66">arg<pos:position pos:line="686" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="686" pos:column="70"/></parameter_list>
<block pos:line="687" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="688" pos:column="5">server_rec<pos:position pos:line="688" pos:column="15"/></name> <modifier pos:line="688" pos:column="16">*<pos:position pos:line="688" pos:column="17"/></modifier></type><name pos:line="688" pos:column="17">s<pos:position pos:line="688" pos:column="18"/></name> <init pos:line="688" pos:column="19">= <expr><name><name pos:line="688" pos:column="21">parms<pos:position pos:line="688" pos:column="26"/></name><operator pos:line="688" pos:column="26">-&gt;<pos:position pos:line="688" pos:column="31"/></operator><name pos:line="688" pos:column="28">server<pos:position pos:line="688" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="688" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="689" pos:column="5">proxy_server_conf<pos:position pos:line="689" pos:column="22"/></name> <modifier pos:line="689" pos:column="23">*<pos:position pos:line="689" pos:column="24"/></modifier></type><name pos:line="689" pos:column="24">conf<pos:position pos:line="689" pos:column="28"/></name> <init pos:line="689" pos:column="29">=
    <expr><call><name pos:line="690" pos:column="5">ap_get_module_config<pos:position pos:line="690" pos:column="25"/></name><argument_list pos:line="690" pos:column="25">(<argument><expr><name><name pos:line="690" pos:column="26">s<pos:position pos:line="690" pos:column="27"/></name><operator pos:line="690" pos:column="27">-&gt;<pos:position pos:line="690" pos:column="32"/></operator><name pos:line="690" pos:column="29">module_config<pos:position pos:line="690" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="690" pos:column="44">&amp;<pos:position pos:line="690" pos:column="49"/></operator><name pos:line="690" pos:column="45">proxy_module<pos:position pos:line="690" pos:column="57"/></name></expr></argument>)<pos:position pos:line="690" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="690" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="691" pos:column="5">struct<pos:position pos:line="691" pos:column="11"/></name> <name pos:line="691" pos:column="12">noproxy_entry<pos:position pos:line="691" pos:column="25"/></name></name> <modifier pos:line="691" pos:column="26">*<pos:position pos:line="691" pos:column="27"/></modifier></type><name pos:line="691" pos:column="27">new<pos:position pos:line="691" pos:column="30"/></name></decl>;<pos:position pos:line="691" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="692" pos:column="5">struct<pos:position pos:line="692" pos:column="11"/></name> <name pos:line="692" pos:column="12">noproxy_entry<pos:position pos:line="692" pos:column="25"/></name></name> <modifier pos:line="692" pos:column="26">*<pos:position pos:line="692" pos:column="27"/></modifier></type><name pos:line="692" pos:column="27">list<pos:position pos:line="692" pos:column="31"/></name> <init pos:line="692" pos:column="32">= <expr><operator pos:line="692" pos:column="34">(<pos:position pos:line="692" pos:column="35"/></operator>struct <name pos:line="692" pos:column="42">noproxy_entry<pos:position pos:line="692" pos:column="55"/></name> <operator pos:line="692" pos:column="56">*<pos:position pos:line="692" pos:column="57"/></operator><operator pos:line="692" pos:column="57">)<pos:position pos:line="692" pos:column="58"/></operator> <name><name pos:line="692" pos:column="59">conf<pos:position pos:line="692" pos:column="63"/></name><operator pos:line="692" pos:column="63">-&gt;<pos:position pos:line="692" pos:column="68"/></operator><name pos:line="692" pos:column="65">noproxies<pos:position pos:line="692" pos:column="74"/></name><operator pos:line="692" pos:column="74">-&gt;<pos:position pos:line="692" pos:column="79"/></operator><name pos:line="692" pos:column="76">elts<pos:position pos:line="692" pos:column="80"/></name></name></expr></init></decl>;<pos:position pos:line="692" pos:column="81"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="693" pos:column="5">struct<pos:position pos:line="693" pos:column="11"/></name> <name pos:line="693" pos:column="12">apr_sockaddr_t<pos:position pos:line="693" pos:column="26"/></name></name> <modifier pos:line="693" pos:column="27">*<pos:position pos:line="693" pos:column="28"/></modifier></type><name pos:line="693" pos:column="28">addr<pos:position pos:line="693" pos:column="32"/></name></decl>;<pos:position pos:line="693" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="694" pos:column="5">int<pos:position pos:line="694" pos:column="8"/></name></type> <name pos:line="694" pos:column="9">found<pos:position pos:line="694" pos:column="14"/></name> <init pos:line="694" pos:column="15">= <expr><literal type="number" pos:line="694" pos:column="17">0<pos:position pos:line="694" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="694" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="695" pos:column="5">int<pos:position pos:line="695" pos:column="8"/></name></type> <name pos:line="695" pos:column="9">i<pos:position pos:line="695" pos:column="10"/></name></decl>;<pos:position pos:line="695" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="697" pos:column="5">/* Don't duplicate entries */</comment>
    <for pos:line="698" pos:column="5">for <control pos:line="698" pos:column="9">(<init><expr><name pos:line="698" pos:column="10">i<pos:position pos:line="698" pos:column="11"/></name> <operator pos:line="698" pos:column="12">=<pos:position pos:line="698" pos:column="13"/></operator> <literal type="number" pos:line="698" pos:column="14">0<pos:position pos:line="698" pos:column="15"/></literal></expr>;<pos:position pos:line="698" pos:column="16"/></init> <condition><expr><name pos:line="698" pos:column="17">i<pos:position pos:line="698" pos:column="18"/></name> <operator pos:line="698" pos:column="19">&lt;<pos:position pos:line="698" pos:column="23"/></operator> <name><name pos:line="698" pos:column="21">conf<pos:position pos:line="698" pos:column="25"/></name><operator pos:line="698" pos:column="25">-&gt;<pos:position pos:line="698" pos:column="30"/></operator><name pos:line="698" pos:column="27">noproxies<pos:position pos:line="698" pos:column="36"/></name><operator pos:line="698" pos:column="36">-&gt;<pos:position pos:line="698" pos:column="41"/></operator><name pos:line="698" pos:column="38">nelts<pos:position pos:line="698" pos:column="43"/></name></name></expr>;<pos:position pos:line="698" pos:column="44"/></condition> <incr><expr><name pos:line="698" pos:column="45">i<pos:position pos:line="698" pos:column="46"/></name><operator pos:line="698" pos:column="46">++<pos:position pos:line="698" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="698" pos:column="49"/></control> <block pos:line="698" pos:column="50">{
        <if pos:line="699" pos:column="9">if <condition pos:line="699" pos:column="12">(<expr><call><name pos:line="699" pos:column="13">apr_strnatcasecmp<pos:position pos:line="699" pos:column="30"/></name><argument_list pos:line="699" pos:column="30">(<argument><expr><name pos:line="699" pos:column="31">arg<pos:position pos:line="699" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="699" pos:column="36">list<pos:position pos:line="699" pos:column="40"/></name><index pos:line="699" pos:column="40">[<expr><name pos:line="699" pos:column="41">i<pos:position pos:line="699" pos:column="42"/></name></expr>]<pos:position pos:line="699" pos:column="43"/></index></name><operator pos:line="699" pos:column="43">.<pos:position pos:line="699" pos:column="44"/></operator><name pos:line="699" pos:column="44">name<pos:position pos:line="699" pos:column="48"/></name></expr></argument>)<pos:position pos:line="699" pos:column="49"/></argument_list></call> <operator pos:line="699" pos:column="50">==<pos:position pos:line="699" pos:column="52"/></operator> <literal type="number" pos:line="699" pos:column="53">0<pos:position pos:line="699" pos:column="54"/></literal></expr>)<pos:position pos:line="699" pos:column="55"/></condition><then pos:line="699" pos:column="55"> <block pos:line="699" pos:column="56">{ <comment type="block" pos:line="699" pos:column="58">/* ignore case for host names */</comment>
            <expr_stmt><expr><name pos:line="700" pos:column="13">found<pos:position pos:line="700" pos:column="18"/></name> <operator pos:line="700" pos:column="19">=<pos:position pos:line="700" pos:column="20"/></operator> <literal type="number" pos:line="700" pos:column="21">1<pos:position pos:line="700" pos:column="22"/></literal></expr>;<pos:position pos:line="700" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="701" pos:column="10"/></block></then></if>
    }<pos:position pos:line="702" pos:column="6"/></block></for>

    <if pos:line="704" pos:column="5">if <condition pos:line="704" pos:column="8">(<expr><operator pos:line="704" pos:column="9">!<pos:position pos:line="704" pos:column="10"/></operator><name pos:line="704" pos:column="10">found<pos:position pos:line="704" pos:column="15"/></name></expr>)<pos:position pos:line="704" pos:column="16"/></condition><then pos:line="704" pos:column="16"> <block pos:line="704" pos:column="17">{
        <expr_stmt><expr><name pos:line="705" pos:column="9">new<pos:position pos:line="705" pos:column="12"/></name> <operator pos:line="705" pos:column="13">=<pos:position pos:line="705" pos:column="14"/></operator> <call><name pos:line="705" pos:column="15">apr_array_push<pos:position pos:line="705" pos:column="29"/></name><argument_list pos:line="705" pos:column="29">(<argument><expr><name><name pos:line="705" pos:column="30">conf<pos:position pos:line="705" pos:column="34"/></name><operator pos:line="705" pos:column="34">-&gt;<pos:position pos:line="705" pos:column="39"/></operator><name pos:line="705" pos:column="36">noproxies<pos:position pos:line="705" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="705" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="705" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="706" pos:column="9">new<pos:position pos:line="706" pos:column="12"/></name><operator pos:line="706" pos:column="12">-&gt;<pos:position pos:line="706" pos:column="17"/></operator><name pos:line="706" pos:column="14">name<pos:position pos:line="706" pos:column="18"/></name></name> <operator pos:line="706" pos:column="19">=<pos:position pos:line="706" pos:column="20"/></operator> <name pos:line="706" pos:column="21">arg<pos:position pos:line="706" pos:column="24"/></name></expr>;<pos:position pos:line="706" pos:column="25"/></expr_stmt>
        <if pos:line="707" pos:column="9">if <condition pos:line="707" pos:column="12">(<expr><name pos:line="707" pos:column="13">APR_SUCCESS<pos:position pos:line="707" pos:column="24"/></name> <operator pos:line="707" pos:column="25">==<pos:position pos:line="707" pos:column="27"/></operator> <call><name pos:line="707" pos:column="28">apr_sockaddr_info_get<pos:position pos:line="707" pos:column="49"/></name><argument_list pos:line="707" pos:column="49">(<argument><expr><operator pos:line="707" pos:column="50">&amp;<pos:position pos:line="707" pos:column="55"/></operator><name pos:line="707" pos:column="51">addr<pos:position pos:line="707" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="707" pos:column="57">new<pos:position pos:line="707" pos:column="60"/></name><operator pos:line="707" pos:column="60">-&gt;<pos:position pos:line="707" pos:column="65"/></operator><name pos:line="707" pos:column="62">name<pos:position pos:line="707" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="707" pos:column="68">APR_UNSPEC<pos:position pos:line="707" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="707" pos:column="80">0<pos:position pos:line="707" pos:column="81"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="707" pos:column="83">0<pos:position pos:line="707" pos:column="84"/></literal></expr></argument>, <argument><expr><name><name pos:line="707" pos:column="86">parms<pos:position pos:line="707" pos:column="91"/></name><operator pos:line="707" pos:column="91">-&gt;<pos:position pos:line="707" pos:column="96"/></operator><name pos:line="707" pos:column="93">pool<pos:position pos:line="707" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="707" pos:column="98"/></argument_list></call></expr>)<pos:position pos:line="707" pos:column="99"/></condition><then pos:line="707" pos:column="99"> <block pos:line="707" pos:column="100">{
            <expr_stmt><expr><name><name pos:line="708" pos:column="13">new<pos:position pos:line="708" pos:column="16"/></name><operator pos:line="708" pos:column="16">-&gt;<pos:position pos:line="708" pos:column="21"/></operator><name pos:line="708" pos:column="18">addr<pos:position pos:line="708" pos:column="22"/></name></name> <operator pos:line="708" pos:column="23">=<pos:position pos:line="708" pos:column="24"/></operator> <name pos:line="708" pos:column="25">addr<pos:position pos:line="708" pos:column="29"/></name></expr>;<pos:position pos:line="708" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="709" pos:column="10"/></block></then>
        <else pos:line="710" pos:column="9">else <block pos:line="710" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="711" pos:column="13">new<pos:position pos:line="711" pos:column="16"/></name><operator pos:line="711" pos:column="16">-&gt;<pos:position pos:line="711" pos:column="21"/></operator><name pos:line="711" pos:column="18">addr<pos:position pos:line="711" pos:column="22"/></name></name> <operator pos:line="711" pos:column="23">=<pos:position pos:line="711" pos:column="24"/></operator> <name pos:line="711" pos:column="25">NULL<pos:position pos:line="711" pos:column="29"/></name></expr>;<pos:position pos:line="711" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="712" pos:column="10"/></block></else></if>
    }<pos:position pos:line="713" pos:column="6"/></block></then></if>
    <return pos:line="714" pos:column="5">return <expr><name pos:line="714" pos:column="12">NULL<pos:position pos:line="714" pos:column="16"/></name></expr>;<pos:position pos:line="714" pos:column="17"/></return>
}<pos:position pos:line="715" pos:column="2"/></block></function>

<comment type="block" pos:line="717" pos:column="1">/*
 * Set the ports CONNECT can use
 */</comment>
<function><specifier pos:line="720" pos:column="1">static<pos:position pos:line="720" pos:column="7"/></specifier> <type><specifier pos:line="720" pos:column="8">const<pos:position pos:line="720" pos:column="13"/></specifier> <name pos:line="720" pos:column="14">char<pos:position pos:line="720" pos:column="18"/></name> <modifier pos:line="720" pos:column="19">*<pos:position pos:line="720" pos:column="20"/></modifier></type>
    <name pos:line="721" pos:column="5">set_allowed_ports<pos:position pos:line="721" pos:column="22"/></name><parameter_list pos:line="721" pos:column="22">(<parameter><decl><type><name pos:line="721" pos:column="23">cmd_parms<pos:position pos:line="721" pos:column="32"/></name> <modifier pos:line="721" pos:column="33">*<pos:position pos:line="721" pos:column="34"/></modifier></type><name pos:line="721" pos:column="34">parms<pos:position pos:line="721" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="721" pos:column="41">void<pos:position pos:line="721" pos:column="45"/></name> <modifier pos:line="721" pos:column="46">*<pos:position pos:line="721" pos:column="47"/></modifier></type><name pos:line="721" pos:column="47">dummy<pos:position pos:line="721" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="721" pos:column="54">const<pos:position pos:line="721" pos:column="59"/></specifier> <name pos:line="721" pos:column="60">char<pos:position pos:line="721" pos:column="64"/></name> <modifier pos:line="721" pos:column="65">*<pos:position pos:line="721" pos:column="66"/></modifier></type><name pos:line="721" pos:column="66">arg<pos:position pos:line="721" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="721" pos:column="70"/></parameter_list>
<block pos:line="722" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="723" pos:column="5">server_rec<pos:position pos:line="723" pos:column="15"/></name> <modifier pos:line="723" pos:column="16">*<pos:position pos:line="723" pos:column="17"/></modifier></type><name pos:line="723" pos:column="17">s<pos:position pos:line="723" pos:column="18"/></name> <init pos:line="723" pos:column="19">= <expr><name><name pos:line="723" pos:column="21">parms<pos:position pos:line="723" pos:column="26"/></name><operator pos:line="723" pos:column="26">-&gt;<pos:position pos:line="723" pos:column="31"/></operator><name pos:line="723" pos:column="28">server<pos:position pos:line="723" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="723" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="724" pos:column="5">proxy_server_conf<pos:position pos:line="724" pos:column="22"/></name> <modifier pos:line="724" pos:column="23">*<pos:position pos:line="724" pos:column="24"/></modifier></type><name pos:line="724" pos:column="24">conf<pos:position pos:line="724" pos:column="28"/></name> <init pos:line="724" pos:column="29">=
        <expr><call><name pos:line="725" pos:column="9">ap_get_module_config<pos:position pos:line="725" pos:column="29"/></name><argument_list pos:line="725" pos:column="29">(<argument><expr><name><name pos:line="725" pos:column="30">s<pos:position pos:line="725" pos:column="31"/></name><operator pos:line="725" pos:column="31">-&gt;<pos:position pos:line="725" pos:column="36"/></operator><name pos:line="725" pos:column="33">module_config<pos:position pos:line="725" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="725" pos:column="48">&amp;<pos:position pos:line="725" pos:column="53"/></operator><name pos:line="725" pos:column="49">proxy_module<pos:position pos:line="725" pos:column="61"/></name></expr></argument>)<pos:position pos:line="725" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="725" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="726" pos:column="5">int<pos:position pos:line="726" pos:column="8"/></name> <modifier pos:line="726" pos:column="9">*<pos:position pos:line="726" pos:column="10"/></modifier></type><name pos:line="726" pos:column="10">New<pos:position pos:line="726" pos:column="13"/></name></decl>;<pos:position pos:line="726" pos:column="14"/></decl_stmt>

    <if pos:line="728" pos:column="5">if <condition pos:line="728" pos:column="8">(<expr><operator pos:line="728" pos:column="9">!<pos:position pos:line="728" pos:column="10"/></operator><call><name pos:line="728" pos:column="10">apr_isdigit<pos:position pos:line="728" pos:column="21"/></name><argument_list pos:line="728" pos:column="21">(<argument><expr><name><name pos:line="728" pos:column="22">arg<pos:position pos:line="728" pos:column="25"/></name><index pos:line="728" pos:column="25">[<expr><literal type="number" pos:line="728" pos:column="26">0<pos:position pos:line="728" pos:column="27"/></literal></expr>]<pos:position pos:line="728" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="728" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="728" pos:column="30"/></condition><then pos:line="728" pos:column="30">
        <block type="pseudo"><return pos:line="729" pos:column="9">return <expr><literal type="string" pos:line="729" pos:column="16">"AllowCONNECT: port number must be numeric"<pos:position pos:line="729" pos:column="59"/></literal></expr>;<pos:position pos:line="729" pos:column="60"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="731" pos:column="5">New<pos:position pos:line="731" pos:column="8"/></name> <operator pos:line="731" pos:column="9">=<pos:position pos:line="731" pos:column="10"/></operator> <call><name pos:line="731" pos:column="11">apr_array_push<pos:position pos:line="731" pos:column="25"/></name><argument_list pos:line="731" pos:column="25">(<argument><expr><name><name pos:line="731" pos:column="26">conf<pos:position pos:line="731" pos:column="30"/></name><operator pos:line="731" pos:column="30">-&gt;<pos:position pos:line="731" pos:column="35"/></operator><name pos:line="731" pos:column="32">allowed_connect_ports<pos:position pos:line="731" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="731" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="731" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="732" pos:column="5">*<pos:position pos:line="732" pos:column="6"/></operator><name pos:line="732" pos:column="6">New<pos:position pos:line="732" pos:column="9"/></name> <operator pos:line="732" pos:column="10">=<pos:position pos:line="732" pos:column="11"/></operator> <call><name pos:line="732" pos:column="12">atoi<pos:position pos:line="732" pos:column="16"/></name><argument_list pos:line="732" pos:column="16">(<argument><expr><name pos:line="732" pos:column="17">arg<pos:position pos:line="732" pos:column="20"/></name></expr></argument>)<pos:position pos:line="732" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="732" pos:column="22"/></expr_stmt>
    <return pos:line="733" pos:column="5">return <expr><name pos:line="733" pos:column="12">NULL<pos:position pos:line="733" pos:column="16"/></name></expr>;<pos:position pos:line="733" pos:column="17"/></return>
}<pos:position pos:line="734" pos:column="2"/></block></function>

<comment type="block" pos:line="736" pos:column="1">/* Similar to set_proxy_exclude(), but defining directly connected hosts,
 * which should never be accessed via the configured ProxyRemote servers
 */</comment>
<function><specifier pos:line="739" pos:column="1">static<pos:position pos:line="739" pos:column="7"/></specifier> <type><specifier pos:line="739" pos:column="8">const<pos:position pos:line="739" pos:column="13"/></specifier> <name pos:line="739" pos:column="14">char<pos:position pos:line="739" pos:column="18"/></name> <modifier pos:line="739" pos:column="19">*<pos:position pos:line="739" pos:column="20"/></modifier></type>
    <name pos:line="740" pos:column="5">set_proxy_dirconn<pos:position pos:line="740" pos:column="22"/></name><parameter_list pos:line="740" pos:column="22">(<parameter><decl><type><name pos:line="740" pos:column="23">cmd_parms<pos:position pos:line="740" pos:column="32"/></name> <modifier pos:line="740" pos:column="33">*<pos:position pos:line="740" pos:column="34"/></modifier></type><name pos:line="740" pos:column="34">parms<pos:position pos:line="740" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="740" pos:column="41">void<pos:position pos:line="740" pos:column="45"/></name> <modifier pos:line="740" pos:column="46">*<pos:position pos:line="740" pos:column="47"/></modifier></type><name pos:line="740" pos:column="47">dummy<pos:position pos:line="740" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="740" pos:column="54">const<pos:position pos:line="740" pos:column="59"/></specifier> <name pos:line="740" pos:column="60">char<pos:position pos:line="740" pos:column="64"/></name> <modifier pos:line="740" pos:column="65">*<pos:position pos:line="740" pos:column="66"/></modifier></type><name pos:line="740" pos:column="66">arg<pos:position pos:line="740" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="740" pos:column="70"/></parameter_list>
<block pos:line="741" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="742" pos:column="5">server_rec<pos:position pos:line="742" pos:column="15"/></name> <modifier pos:line="742" pos:column="16">*<pos:position pos:line="742" pos:column="17"/></modifier></type><name pos:line="742" pos:column="17">s<pos:position pos:line="742" pos:column="18"/></name> <init pos:line="742" pos:column="19">= <expr><name><name pos:line="742" pos:column="21">parms<pos:position pos:line="742" pos:column="26"/></name><operator pos:line="742" pos:column="26">-&gt;<pos:position pos:line="742" pos:column="31"/></operator><name pos:line="742" pos:column="28">server<pos:position pos:line="742" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="742" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="743" pos:column="5">proxy_server_conf<pos:position pos:line="743" pos:column="22"/></name> <modifier pos:line="743" pos:column="23">*<pos:position pos:line="743" pos:column="24"/></modifier></type><name pos:line="743" pos:column="24">conf<pos:position pos:line="743" pos:column="28"/></name> <init pos:line="743" pos:column="29">=
    <expr><call><name pos:line="744" pos:column="5">ap_get_module_config<pos:position pos:line="744" pos:column="25"/></name><argument_list pos:line="744" pos:column="25">(<argument><expr><name><name pos:line="744" pos:column="26">s<pos:position pos:line="744" pos:column="27"/></name><operator pos:line="744" pos:column="27">-&gt;<pos:position pos:line="744" pos:column="32"/></operator><name pos:line="744" pos:column="29">module_config<pos:position pos:line="744" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="744" pos:column="44">&amp;<pos:position pos:line="744" pos:column="49"/></operator><name pos:line="744" pos:column="45">proxy_module<pos:position pos:line="744" pos:column="57"/></name></expr></argument>)<pos:position pos:line="744" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="744" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="745" pos:column="5">struct<pos:position pos:line="745" pos:column="11"/></name> <name pos:line="745" pos:column="12">dirconn_entry<pos:position pos:line="745" pos:column="25"/></name></name> <modifier pos:line="745" pos:column="26">*<pos:position pos:line="745" pos:column="27"/></modifier></type><name pos:line="745" pos:column="27">New<pos:position pos:line="745" pos:column="30"/></name></decl>;<pos:position pos:line="745" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="746" pos:column="5">struct<pos:position pos:line="746" pos:column="11"/></name> <name pos:line="746" pos:column="12">dirconn_entry<pos:position pos:line="746" pos:column="25"/></name></name> <modifier pos:line="746" pos:column="26">*<pos:position pos:line="746" pos:column="27"/></modifier></type><name pos:line="746" pos:column="27">list<pos:position pos:line="746" pos:column="31"/></name> <init pos:line="746" pos:column="32">= <expr><operator pos:line="746" pos:column="34">(<pos:position pos:line="746" pos:column="35"/></operator>struct <name pos:line="746" pos:column="42">dirconn_entry<pos:position pos:line="746" pos:column="55"/></name> <operator pos:line="746" pos:column="56">*<pos:position pos:line="746" pos:column="57"/></operator><operator pos:line="746" pos:column="57">)<pos:position pos:line="746" pos:column="58"/></operator> <name><name pos:line="746" pos:column="59">conf<pos:position pos:line="746" pos:column="63"/></name><operator pos:line="746" pos:column="63">-&gt;<pos:position pos:line="746" pos:column="68"/></operator><name pos:line="746" pos:column="65">dirconn<pos:position pos:line="746" pos:column="72"/></name><operator pos:line="746" pos:column="72">-&gt;<pos:position pos:line="746" pos:column="77"/></operator><name pos:line="746" pos:column="74">elts<pos:position pos:line="746" pos:column="78"/></name></name></expr></init></decl>;<pos:position pos:line="746" pos:column="79"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="747" pos:column="5">int<pos:position pos:line="747" pos:column="8"/></name></type> <name pos:line="747" pos:column="9">found<pos:position pos:line="747" pos:column="14"/></name> <init pos:line="747" pos:column="15">= <expr><literal type="number" pos:line="747" pos:column="17">0<pos:position pos:line="747" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="747" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="748" pos:column="5">int<pos:position pos:line="748" pos:column="8"/></name></type> <name pos:line="748" pos:column="9">i<pos:position pos:line="748" pos:column="10"/></name></decl>;<pos:position pos:line="748" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="750" pos:column="5">/* Don't duplicate entries */</comment>
    <for pos:line="751" pos:column="5">for <control pos:line="751" pos:column="9">(<init><expr><name pos:line="751" pos:column="10">i<pos:position pos:line="751" pos:column="11"/></name> <operator pos:line="751" pos:column="12">=<pos:position pos:line="751" pos:column="13"/></operator> <literal type="number" pos:line="751" pos:column="14">0<pos:position pos:line="751" pos:column="15"/></literal></expr>;<pos:position pos:line="751" pos:column="16"/></init> <condition><expr><name pos:line="751" pos:column="17">i<pos:position pos:line="751" pos:column="18"/></name> <operator pos:line="751" pos:column="19">&lt;<pos:position pos:line="751" pos:column="23"/></operator> <name><name pos:line="751" pos:column="21">conf<pos:position pos:line="751" pos:column="25"/></name><operator pos:line="751" pos:column="25">-&gt;<pos:position pos:line="751" pos:column="30"/></operator><name pos:line="751" pos:column="27">dirconn<pos:position pos:line="751" pos:column="34"/></name><operator pos:line="751" pos:column="34">-&gt;<pos:position pos:line="751" pos:column="39"/></operator><name pos:line="751" pos:column="36">nelts<pos:position pos:line="751" pos:column="41"/></name></name></expr>;<pos:position pos:line="751" pos:column="42"/></condition> <incr><expr><name pos:line="751" pos:column="43">i<pos:position pos:line="751" pos:column="44"/></name><operator pos:line="751" pos:column="44">++<pos:position pos:line="751" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="751" pos:column="47"/></control> <block pos:line="751" pos:column="48">{
        <if pos:line="752" pos:column="9">if <condition pos:line="752" pos:column="12">(<expr><call><name pos:line="752" pos:column="13">strcasecmp<pos:position pos:line="752" pos:column="23"/></name><argument_list pos:line="752" pos:column="23">(<argument><expr><name pos:line="752" pos:column="24">arg<pos:position pos:line="752" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="752" pos:column="29">list<pos:position pos:line="752" pos:column="33"/></name><index pos:line="752" pos:column="33">[<expr><name pos:line="752" pos:column="34">i<pos:position pos:line="752" pos:column="35"/></name></expr>]<pos:position pos:line="752" pos:column="36"/></index></name><operator pos:line="752" pos:column="36">.<pos:position pos:line="752" pos:column="37"/></operator><name pos:line="752" pos:column="37">name<pos:position pos:line="752" pos:column="41"/></name></expr></argument>)<pos:position pos:line="752" pos:column="42"/></argument_list></call> <operator pos:line="752" pos:column="43">==<pos:position pos:line="752" pos:column="45"/></operator> <literal type="number" pos:line="752" pos:column="46">0<pos:position pos:line="752" pos:column="47"/></literal></expr>)<pos:position pos:line="752" pos:column="48"/></condition><then pos:line="752" pos:column="48">
            <block type="pseudo"><expr_stmt><expr><name pos:line="753" pos:column="13">found<pos:position pos:line="753" pos:column="18"/></name> <operator pos:line="753" pos:column="19">=<pos:position pos:line="753" pos:column="20"/></operator> <literal type="number" pos:line="753" pos:column="21">1<pos:position pos:line="753" pos:column="22"/></literal></expr>;<pos:position pos:line="753" pos:column="23"/></expr_stmt></block></then></if>
    }<pos:position pos:line="754" pos:column="6"/></block></for>

    <if pos:line="756" pos:column="5">if <condition pos:line="756" pos:column="8">(<expr><operator pos:line="756" pos:column="9">!<pos:position pos:line="756" pos:column="10"/></operator><name pos:line="756" pos:column="10">found<pos:position pos:line="756" pos:column="15"/></name></expr>)<pos:position pos:line="756" pos:column="16"/></condition><then pos:line="756" pos:column="16"> <block pos:line="756" pos:column="17">{
        <expr_stmt><expr><name pos:line="757" pos:column="9">New<pos:position pos:line="757" pos:column="12"/></name> <operator pos:line="757" pos:column="13">=<pos:position pos:line="757" pos:column="14"/></operator> <call><name pos:line="757" pos:column="15">apr_array_push<pos:position pos:line="757" pos:column="29"/></name><argument_list pos:line="757" pos:column="29">(<argument><expr><name><name pos:line="757" pos:column="30">conf<pos:position pos:line="757" pos:column="34"/></name><operator pos:line="757" pos:column="34">-&gt;<pos:position pos:line="757" pos:column="39"/></operator><name pos:line="757" pos:column="36">dirconn<pos:position pos:line="757" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="757" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="757" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="758" pos:column="9">New<pos:position pos:line="758" pos:column="12"/></name><operator pos:line="758" pos:column="12">-&gt;<pos:position pos:line="758" pos:column="17"/></operator><name pos:line="758" pos:column="14">name<pos:position pos:line="758" pos:column="18"/></name></name> <operator pos:line="758" pos:column="19">=<pos:position pos:line="758" pos:column="20"/></operator> <call><name pos:line="758" pos:column="21">apr_pstrdup<pos:position pos:line="758" pos:column="32"/></name><argument_list pos:line="758" pos:column="32">(<argument><expr><name><name pos:line="758" pos:column="33">parms<pos:position pos:line="758" pos:column="38"/></name><operator pos:line="758" pos:column="38">-&gt;<pos:position pos:line="758" pos:column="43"/></operator><name pos:line="758" pos:column="40">pool<pos:position pos:line="758" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="758" pos:column="46">arg<pos:position pos:line="758" pos:column="49"/></name></expr></argument>)<pos:position pos:line="758" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="758" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="759" pos:column="9">New<pos:position pos:line="759" pos:column="12"/></name><operator pos:line="759" pos:column="12">-&gt;<pos:position pos:line="759" pos:column="17"/></operator><name pos:line="759" pos:column="14">hostaddr<pos:position pos:line="759" pos:column="22"/></name></name> <operator pos:line="759" pos:column="23">=<pos:position pos:line="759" pos:column="24"/></operator> <name pos:line="759" pos:column="25">NULL<pos:position pos:line="759" pos:column="29"/></name></expr>;<pos:position pos:line="759" pos:column="30"/></expr_stmt>

	<if pos:line="761" pos:column="9">if <condition pos:line="761" pos:column="12">(<expr><call><name pos:line="761" pos:column="13">ap_proxy_is_ipaddr<pos:position pos:line="761" pos:column="31"/></name><argument_list pos:line="761" pos:column="31">(<argument><expr><name pos:line="761" pos:column="32">New<pos:position pos:line="761" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="761" pos:column="37">parms<pos:position pos:line="761" pos:column="42"/></name><operator pos:line="761" pos:column="42">-&gt;<pos:position pos:line="761" pos:column="47"/></operator><name pos:line="761" pos:column="44">pool<pos:position pos:line="761" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="761" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="761" pos:column="50"/></condition><then pos:line="761" pos:column="50"> <block pos:line="761" pos:column="51">{
<cpp:if pos:line="762" pos:column="1">#<cpp:directive pos:line="762" pos:column="2">if<pos:position pos:line="762" pos:column="4"/></cpp:directive> <expr><name pos:line="762" pos:column="5">DEBUGGING<pos:position pos:line="762" pos:column="14"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="763" pos:column="13">ap_log_error<pos:position pos:line="763" pos:column="25"/></name><argument_list pos:line="763" pos:column="25">(<argument><expr><name pos:line="763" pos:column="26">APLOG_MARK<pos:position pos:line="763" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="763" pos:column="38">APLOG_STARTUP<pos:position pos:line="763" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="763" pos:column="53">0<pos:position pos:line="763" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="763" pos:column="56">NULL<pos:position pos:line="763" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="764" pos:column="26">"Parsed addr %s"<pos:position pos:line="764" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="764" pos:column="44">inet_ntoa<pos:position pos:line="764" pos:column="53"/></name><argument_list pos:line="764" pos:column="53">(<argument><expr><name><name pos:line="764" pos:column="54">New<pos:position pos:line="764" pos:column="57"/></name><operator pos:line="764" pos:column="57">-&gt;<pos:position pos:line="764" pos:column="62"/></operator><name pos:line="764" pos:column="59">addr<pos:position pos:line="764" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="764" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="764" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="764" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="765" pos:column="13">ap_log_error<pos:position pos:line="765" pos:column="25"/></name><argument_list pos:line="765" pos:column="25">(<argument><expr><name pos:line="765" pos:column="26">APLOG_MARK<pos:position pos:line="765" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="765" pos:column="38">APLOG_STARTUP<pos:position pos:line="765" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="765" pos:column="53">0<pos:position pos:line="765" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="765" pos:column="56">NULL<pos:position pos:line="765" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="766" pos:column="26">"Parsed mask %s"<pos:position pos:line="766" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="766" pos:column="44">inet_ntoa<pos:position pos:line="766" pos:column="53"/></name><argument_list pos:line="766" pos:column="53">(<argument><expr><name><name pos:line="766" pos:column="54">New<pos:position pos:line="766" pos:column="57"/></name><operator pos:line="766" pos:column="57">-&gt;<pos:position pos:line="766" pos:column="62"/></operator><name pos:line="766" pos:column="59">mask<pos:position pos:line="766" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="766" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="766" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="766" pos:column="66"/></expr_stmt>
<cpp:endif pos:line="767" pos:column="1">#<cpp:directive pos:line="767" pos:column="2">endif<pos:position pos:line="767" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="768" pos:column="10"/></block></then>
	<elseif pos:line="769" pos:column="9">else <if pos:line="769" pos:column="14">if <condition pos:line="769" pos:column="17">(<expr><call><name pos:line="769" pos:column="18">ap_proxy_is_domainname<pos:position pos:line="769" pos:column="40"/></name><argument_list pos:line="769" pos:column="40">(<argument><expr><name pos:line="769" pos:column="41">New<pos:position pos:line="769" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="769" pos:column="46">parms<pos:position pos:line="769" pos:column="51"/></name><operator pos:line="769" pos:column="51">-&gt;<pos:position pos:line="769" pos:column="56"/></operator><name pos:line="769" pos:column="53">pool<pos:position pos:line="769" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="769" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="769" pos:column="59"/></condition><then pos:line="769" pos:column="59"> <block pos:line="769" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="770" pos:column="13">ap_str_tolower<pos:position pos:line="770" pos:column="27"/></name><argument_list pos:line="770" pos:column="27">(<argument><expr><name><name pos:line="770" pos:column="28">New<pos:position pos:line="770" pos:column="31"/></name><operator pos:line="770" pos:column="31">-&gt;<pos:position pos:line="770" pos:column="36"/></operator><name pos:line="770" pos:column="33">name<pos:position pos:line="770" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="770" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="770" pos:column="39"/></expr_stmt>
<cpp:if pos:line="771" pos:column="1">#<cpp:directive pos:line="771" pos:column="2">if<pos:position pos:line="771" pos:column="4"/></cpp:directive> <expr><name pos:line="771" pos:column="5">DEBUGGING<pos:position pos:line="771" pos:column="14"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="772" pos:column="13">ap_log_error<pos:position pos:line="772" pos:column="25"/></name><argument_list pos:line="772" pos:column="25">(<argument><expr><name pos:line="772" pos:column="26">APLOG_MARK<pos:position pos:line="772" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="772" pos:column="38">APLOG_STARTUP<pos:position pos:line="772" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="772" pos:column="53">0<pos:position pos:line="772" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="772" pos:column="56">NULL<pos:position pos:line="772" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="773" pos:column="26">"Parsed domain %s"<pos:position pos:line="773" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="773" pos:column="46">New<pos:position pos:line="773" pos:column="49"/></name><operator pos:line="773" pos:column="49">-&gt;<pos:position pos:line="773" pos:column="54"/></operator><name pos:line="773" pos:column="51">name<pos:position pos:line="773" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="773" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="773" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="774" pos:column="1">#<cpp:directive pos:line="774" pos:column="2">endif<pos:position pos:line="774" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="775" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="776" pos:column="9">else <if pos:line="776" pos:column="14">if <condition pos:line="776" pos:column="17">(<expr><call><name pos:line="776" pos:column="18">ap_proxy_is_hostname<pos:position pos:line="776" pos:column="38"/></name><argument_list pos:line="776" pos:column="38">(<argument><expr><name pos:line="776" pos:column="39">New<pos:position pos:line="776" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="776" pos:column="44">parms<pos:position pos:line="776" pos:column="49"/></name><operator pos:line="776" pos:column="49">-&gt;<pos:position pos:line="776" pos:column="54"/></operator><name pos:line="776" pos:column="51">pool<pos:position pos:line="776" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="776" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="776" pos:column="57"/></condition><then pos:line="776" pos:column="57"> <block pos:line="776" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="777" pos:column="13">ap_str_tolower<pos:position pos:line="777" pos:column="27"/></name><argument_list pos:line="777" pos:column="27">(<argument><expr><name><name pos:line="777" pos:column="28">New<pos:position pos:line="777" pos:column="31"/></name><operator pos:line="777" pos:column="31">-&gt;<pos:position pos:line="777" pos:column="36"/></operator><name pos:line="777" pos:column="33">name<pos:position pos:line="777" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="777" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="777" pos:column="39"/></expr_stmt>
<cpp:if pos:line="778" pos:column="1">#<cpp:directive pos:line="778" pos:column="2">if<pos:position pos:line="778" pos:column="4"/></cpp:directive> <expr><name pos:line="778" pos:column="5">DEBUGGING<pos:position pos:line="778" pos:column="14"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="779" pos:column="13">ap_log_error<pos:position pos:line="779" pos:column="25"/></name><argument_list pos:line="779" pos:column="25">(<argument><expr><name pos:line="779" pos:column="26">APLOG_MARK<pos:position pos:line="779" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="779" pos:column="38">APLOG_STARTUP<pos:position pos:line="779" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="779" pos:column="53">0<pos:position pos:line="779" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="779" pos:column="56">NULL<pos:position pos:line="779" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="780" pos:column="26">"Parsed host %s"<pos:position pos:line="780" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="780" pos:column="44">New<pos:position pos:line="780" pos:column="47"/></name><operator pos:line="780" pos:column="47">-&gt;<pos:position pos:line="780" pos:column="52"/></operator><name pos:line="780" pos:column="49">name<pos:position pos:line="780" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="780" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="780" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="781" pos:column="1">#<cpp:directive pos:line="781" pos:column="2">endif<pos:position pos:line="781" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="782" pos:column="10"/></block></then></if></elseif>
        <else pos:line="783" pos:column="9">else <block pos:line="783" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="784" pos:column="13">ap_proxy_is_word<pos:position pos:line="784" pos:column="29"/></name><argument_list pos:line="784" pos:column="29">(<argument><expr><name pos:line="784" pos:column="30">New<pos:position pos:line="784" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="784" pos:column="35">parms<pos:position pos:line="784" pos:column="40"/></name><operator pos:line="784" pos:column="40">-&gt;<pos:position pos:line="784" pos:column="45"/></operator><name pos:line="784" pos:column="42">pool<pos:position pos:line="784" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="784" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="784" pos:column="48"/></expr_stmt>
<cpp:if pos:line="785" pos:column="1">#<cpp:directive pos:line="785" pos:column="2">if<pos:position pos:line="785" pos:column="4"/></cpp:directive> <expr><name pos:line="785" pos:column="5">DEBUGGING<pos:position pos:line="785" pos:column="14"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="786" pos:column="13">fprintf<pos:position pos:line="786" pos:column="20"/></name><argument_list pos:line="786" pos:column="20">(<argument><expr><name pos:line="786" pos:column="21">stderr<pos:position pos:line="786" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="786" pos:column="29">"Parsed word %s\n"<pos:position pos:line="786" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="786" pos:column="49">New<pos:position pos:line="786" pos:column="52"/></name><operator pos:line="786" pos:column="52">-&gt;<pos:position pos:line="786" pos:column="57"/></operator><name pos:line="786" pos:column="54">name<pos:position pos:line="786" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="786" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="786" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="787" pos:column="1">#<cpp:directive pos:line="787" pos:column="2">endif<pos:position pos:line="787" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="788" pos:column="10"/></block></else></if>
    }<pos:position pos:line="789" pos:column="6"/></block></then></if>
    <return pos:line="790" pos:column="5">return <expr><name pos:line="790" pos:column="12">NULL<pos:position pos:line="790" pos:column="16"/></name></expr>;<pos:position pos:line="790" pos:column="17"/></return>
}<pos:position pos:line="791" pos:column="2"/></block></function>

<function><specifier pos:line="793" pos:column="1">static<pos:position pos:line="793" pos:column="7"/></specifier> <type><specifier pos:line="793" pos:column="8">const<pos:position pos:line="793" pos:column="13"/></specifier> <name pos:line="793" pos:column="14">char<pos:position pos:line="793" pos:column="18"/></name> <modifier pos:line="793" pos:column="19">*<pos:position pos:line="793" pos:column="20"/></modifier></type>
    <name pos:line="794" pos:column="5">set_proxy_domain<pos:position pos:line="794" pos:column="21"/></name><parameter_list pos:line="794" pos:column="21">(<parameter><decl><type><name pos:line="794" pos:column="22">cmd_parms<pos:position pos:line="794" pos:column="31"/></name> <modifier pos:line="794" pos:column="32">*<pos:position pos:line="794" pos:column="33"/></modifier></type><name pos:line="794" pos:column="33">parms<pos:position pos:line="794" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="794" pos:column="40">void<pos:position pos:line="794" pos:column="44"/></name> <modifier pos:line="794" pos:column="45">*<pos:position pos:line="794" pos:column="46"/></modifier></type><name pos:line="794" pos:column="46">dummy<pos:position pos:line="794" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="794" pos:column="53">const<pos:position pos:line="794" pos:column="58"/></specifier> <name pos:line="794" pos:column="59">char<pos:position pos:line="794" pos:column="63"/></name> <modifier pos:line="794" pos:column="64">*<pos:position pos:line="794" pos:column="65"/></modifier></type><name pos:line="794" pos:column="65">arg<pos:position pos:line="794" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="794" pos:column="69"/></parameter_list>
<block pos:line="795" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="796" pos:column="5">proxy_server_conf<pos:position pos:line="796" pos:column="22"/></name> <modifier pos:line="796" pos:column="23">*<pos:position pos:line="796" pos:column="24"/></modifier></type><name pos:line="796" pos:column="24">psf<pos:position pos:line="796" pos:column="27"/></name> <init pos:line="796" pos:column="28">=
    <expr><call><name pos:line="797" pos:column="5">ap_get_module_config<pos:position pos:line="797" pos:column="25"/></name><argument_list pos:line="797" pos:column="25">(<argument><expr><name><name pos:line="797" pos:column="26">parms<pos:position pos:line="797" pos:column="31"/></name><operator pos:line="797" pos:column="31">-&gt;<pos:position pos:line="797" pos:column="36"/></operator><name pos:line="797" pos:column="33">server<pos:position pos:line="797" pos:column="39"/></name><operator pos:line="797" pos:column="39">-&gt;<pos:position pos:line="797" pos:column="44"/></operator><name pos:line="797" pos:column="41">module_config<pos:position pos:line="797" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="797" pos:column="56">&amp;<pos:position pos:line="797" pos:column="61"/></operator><name pos:line="797" pos:column="57">proxy_module<pos:position pos:line="797" pos:column="69"/></name></expr></argument>)<pos:position pos:line="797" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="797" pos:column="71"/></decl_stmt>

    <if pos:line="799" pos:column="5">if <condition pos:line="799" pos:column="8">(<expr><name><name pos:line="799" pos:column="9">arg<pos:position pos:line="799" pos:column="12"/></name><index pos:line="799" pos:column="12">[<expr><literal type="number" pos:line="799" pos:column="13">0<pos:position pos:line="799" pos:column="14"/></literal></expr>]<pos:position pos:line="799" pos:column="15"/></index></name> <operator pos:line="799" pos:column="16">!=<pos:position pos:line="799" pos:column="18"/></operator> <literal type="char" pos:line="799" pos:column="19">'.'<pos:position pos:line="799" pos:column="22"/></literal></expr>)<pos:position pos:line="799" pos:column="23"/></condition><then pos:line="799" pos:column="23">
        <block type="pseudo"><return pos:line="800" pos:column="9">return <expr><literal type="string" pos:line="800" pos:column="16">"ProxyDomain: domain name must start with a dot."<pos:position pos:line="800" pos:column="65"/></literal></expr>;<pos:position pos:line="800" pos:column="66"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="802" pos:column="5">psf<pos:position pos:line="802" pos:column="8"/></name><operator pos:line="802" pos:column="8">-&gt;<pos:position pos:line="802" pos:column="13"/></operator><name pos:line="802" pos:column="10">domain<pos:position pos:line="802" pos:column="16"/></name></name> <operator pos:line="802" pos:column="17">=<pos:position pos:line="802" pos:column="18"/></operator> <name pos:line="802" pos:column="19">arg<pos:position pos:line="802" pos:column="22"/></name></expr>;<pos:position pos:line="802" pos:column="23"/></expr_stmt>
    <return pos:line="803" pos:column="5">return <expr><name pos:line="803" pos:column="12">NULL<pos:position pos:line="803" pos:column="16"/></name></expr>;<pos:position pos:line="803" pos:column="17"/></return>
}<pos:position pos:line="804" pos:column="2"/></block></function>

<function><specifier pos:line="806" pos:column="1">static<pos:position pos:line="806" pos:column="7"/></specifier> <type><specifier pos:line="806" pos:column="8">const<pos:position pos:line="806" pos:column="13"/></specifier> <name pos:line="806" pos:column="14">char<pos:position pos:line="806" pos:column="18"/></name> <modifier pos:line="806" pos:column="19">*<pos:position pos:line="806" pos:column="20"/></modifier></type>
    <name pos:line="807" pos:column="5">set_proxy_req<pos:position pos:line="807" pos:column="18"/></name><parameter_list pos:line="807" pos:column="18">(<parameter><decl><type><name pos:line="807" pos:column="19">cmd_parms<pos:position pos:line="807" pos:column="28"/></name> <modifier pos:line="807" pos:column="29">*<pos:position pos:line="807" pos:column="30"/></modifier></type><name pos:line="807" pos:column="30">parms<pos:position pos:line="807" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="807" pos:column="37">void<pos:position pos:line="807" pos:column="41"/></name> <modifier pos:line="807" pos:column="42">*<pos:position pos:line="807" pos:column="43"/></modifier></type><name pos:line="807" pos:column="43">dummy<pos:position pos:line="807" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="807" pos:column="50">int<pos:position pos:line="807" pos:column="53"/></name></type> <name pos:line="807" pos:column="54">flag<pos:position pos:line="807" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="807" pos:column="59"/></parameter_list>
<block pos:line="808" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="809" pos:column="5">proxy_server_conf<pos:position pos:line="809" pos:column="22"/></name> <modifier pos:line="809" pos:column="23">*<pos:position pos:line="809" pos:column="24"/></modifier></type><name pos:line="809" pos:column="24">psf<pos:position pos:line="809" pos:column="27"/></name> <init pos:line="809" pos:column="28">=
    <expr><call><name pos:line="810" pos:column="5">ap_get_module_config<pos:position pos:line="810" pos:column="25"/></name><argument_list pos:line="810" pos:column="25">(<argument><expr><name><name pos:line="810" pos:column="26">parms<pos:position pos:line="810" pos:column="31"/></name><operator pos:line="810" pos:column="31">-&gt;<pos:position pos:line="810" pos:column="36"/></operator><name pos:line="810" pos:column="33">server<pos:position pos:line="810" pos:column="39"/></name><operator pos:line="810" pos:column="39">-&gt;<pos:position pos:line="810" pos:column="44"/></operator><name pos:line="810" pos:column="41">module_config<pos:position pos:line="810" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="810" pos:column="56">&amp;<pos:position pos:line="810" pos:column="61"/></operator><name pos:line="810" pos:column="57">proxy_module<pos:position pos:line="810" pos:column="69"/></name></expr></argument>)<pos:position pos:line="810" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="810" pos:column="71"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="812" pos:column="5">psf<pos:position pos:line="812" pos:column="8"/></name><operator pos:line="812" pos:column="8">-&gt;<pos:position pos:line="812" pos:column="13"/></operator><name pos:line="812" pos:column="10">req<pos:position pos:line="812" pos:column="13"/></name></name> <operator pos:line="812" pos:column="14">=<pos:position pos:line="812" pos:column="15"/></operator> <name pos:line="812" pos:column="16">flag<pos:position pos:line="812" pos:column="20"/></name></expr>;<pos:position pos:line="812" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="813" pos:column="5">psf<pos:position pos:line="813" pos:column="8"/></name><operator pos:line="813" pos:column="8">-&gt;<pos:position pos:line="813" pos:column="13"/></operator><name pos:line="813" pos:column="10">req_set<pos:position pos:line="813" pos:column="17"/></name></name> <operator pos:line="813" pos:column="18">=<pos:position pos:line="813" pos:column="19"/></operator> <literal type="number" pos:line="813" pos:column="20">1<pos:position pos:line="813" pos:column="21"/></literal></expr>;<pos:position pos:line="813" pos:column="22"/></expr_stmt>
    <return pos:line="814" pos:column="5">return <expr><name pos:line="814" pos:column="12">NULL<pos:position pos:line="814" pos:column="16"/></name></expr>;<pos:position pos:line="814" pos:column="17"/></return>
}<pos:position pos:line="815" pos:column="2"/></block></function>
<function><specifier pos:line="816" pos:column="1">static<pos:position pos:line="816" pos:column="7"/></specifier> <type><specifier pos:line="816" pos:column="8">const<pos:position pos:line="816" pos:column="13"/></specifier> <name pos:line="816" pos:column="14">char<pos:position pos:line="816" pos:column="18"/></name> <modifier pos:line="816" pos:column="19">*<pos:position pos:line="816" pos:column="20"/></modifier></type>
    <name pos:line="817" pos:column="5">set_proxy_error_override<pos:position pos:line="817" pos:column="29"/></name><parameter_list pos:line="817" pos:column="29">(<parameter><decl><type><name pos:line="817" pos:column="30">cmd_parms<pos:position pos:line="817" pos:column="39"/></name> <modifier pos:line="817" pos:column="40">*<pos:position pos:line="817" pos:column="41"/></modifier></type><name pos:line="817" pos:column="41">parms<pos:position pos:line="817" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="817" pos:column="48">void<pos:position pos:line="817" pos:column="52"/></name> <modifier pos:line="817" pos:column="53">*<pos:position pos:line="817" pos:column="54"/></modifier></type><name pos:line="817" pos:column="54">dummy<pos:position pos:line="817" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="817" pos:column="61">int<pos:position pos:line="817" pos:column="64"/></name></type> <name pos:line="817" pos:column="65">flag<pos:position pos:line="817" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="817" pos:column="70"/></parameter_list>
<block pos:line="818" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="819" pos:column="5">proxy_server_conf<pos:position pos:line="819" pos:column="22"/></name> <modifier pos:line="819" pos:column="23">*<pos:position pos:line="819" pos:column="24"/></modifier></type><name pos:line="819" pos:column="24">psf<pos:position pos:line="819" pos:column="27"/></name> <init pos:line="819" pos:column="28">=
    <expr><call><name pos:line="820" pos:column="5">ap_get_module_config<pos:position pos:line="820" pos:column="25"/></name><argument_list pos:line="820" pos:column="25">(<argument><expr><name><name pos:line="820" pos:column="26">parms<pos:position pos:line="820" pos:column="31"/></name><operator pos:line="820" pos:column="31">-&gt;<pos:position pos:line="820" pos:column="36"/></operator><name pos:line="820" pos:column="33">server<pos:position pos:line="820" pos:column="39"/></name><operator pos:line="820" pos:column="39">-&gt;<pos:position pos:line="820" pos:column="44"/></operator><name pos:line="820" pos:column="41">module_config<pos:position pos:line="820" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="820" pos:column="56">&amp;<pos:position pos:line="820" pos:column="61"/></operator><name pos:line="820" pos:column="57">proxy_module<pos:position pos:line="820" pos:column="69"/></name></expr></argument>)<pos:position pos:line="820" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="820" pos:column="71"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="822" pos:column="5">psf<pos:position pos:line="822" pos:column="8"/></name><operator pos:line="822" pos:column="8">-&gt;<pos:position pos:line="822" pos:column="13"/></operator><name pos:line="822" pos:column="10">error_override<pos:position pos:line="822" pos:column="24"/></name></name> <operator pos:line="822" pos:column="25">=<pos:position pos:line="822" pos:column="26"/></operator> <name pos:line="822" pos:column="27">flag<pos:position pos:line="822" pos:column="31"/></name></expr>;<pos:position pos:line="822" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="823" pos:column="5">psf<pos:position pos:line="823" pos:column="8"/></name><operator pos:line="823" pos:column="8">-&gt;<pos:position pos:line="823" pos:column="13"/></operator><name pos:line="823" pos:column="10">error_override_set<pos:position pos:line="823" pos:column="28"/></name></name> <operator pos:line="823" pos:column="29">=<pos:position pos:line="823" pos:column="30"/></operator> <literal type="number" pos:line="823" pos:column="31">1<pos:position pos:line="823" pos:column="32"/></literal></expr>;<pos:position pos:line="823" pos:column="33"/></expr_stmt>
    <return pos:line="824" pos:column="5">return <expr><name pos:line="824" pos:column="12">NULL<pos:position pos:line="824" pos:column="16"/></name></expr>;<pos:position pos:line="824" pos:column="17"/></return>
}<pos:position pos:line="825" pos:column="2"/></block></function>
<function><specifier pos:line="826" pos:column="1">static<pos:position pos:line="826" pos:column="7"/></specifier> <type><specifier pos:line="826" pos:column="8">const<pos:position pos:line="826" pos:column="13"/></specifier> <name pos:line="826" pos:column="14">char<pos:position pos:line="826" pos:column="18"/></name> <modifier pos:line="826" pos:column="19">*<pos:position pos:line="826" pos:column="20"/></modifier></type>
    <name pos:line="827" pos:column="5">set_preserve_host<pos:position pos:line="827" pos:column="22"/></name><parameter_list pos:line="827" pos:column="22">(<parameter><decl><type><name pos:line="827" pos:column="23">cmd_parms<pos:position pos:line="827" pos:column="32"/></name> <modifier pos:line="827" pos:column="33">*<pos:position pos:line="827" pos:column="34"/></modifier></type><name pos:line="827" pos:column="34">parms<pos:position pos:line="827" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="827" pos:column="41">void<pos:position pos:line="827" pos:column="45"/></name> <modifier pos:line="827" pos:column="46">*<pos:position pos:line="827" pos:column="47"/></modifier></type><name pos:line="827" pos:column="47">dummy<pos:position pos:line="827" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="827" pos:column="54">int<pos:position pos:line="827" pos:column="57"/></name></type> <name pos:line="827" pos:column="58">flag<pos:position pos:line="827" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="827" pos:column="63"/></parameter_list>
<block pos:line="828" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="829" pos:column="5">proxy_server_conf<pos:position pos:line="829" pos:column="22"/></name> <modifier pos:line="829" pos:column="23">*<pos:position pos:line="829" pos:column="24"/></modifier></type><name pos:line="829" pos:column="24">psf<pos:position pos:line="829" pos:column="27"/></name> <init pos:line="829" pos:column="28">=
    <expr><call><name pos:line="830" pos:column="5">ap_get_module_config<pos:position pos:line="830" pos:column="25"/></name><argument_list pos:line="830" pos:column="25">(<argument><expr><name><name pos:line="830" pos:column="26">parms<pos:position pos:line="830" pos:column="31"/></name><operator pos:line="830" pos:column="31">-&gt;<pos:position pos:line="830" pos:column="36"/></operator><name pos:line="830" pos:column="33">server<pos:position pos:line="830" pos:column="39"/></name><operator pos:line="830" pos:column="39">-&gt;<pos:position pos:line="830" pos:column="44"/></operator><name pos:line="830" pos:column="41">module_config<pos:position pos:line="830" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="830" pos:column="56">&amp;<pos:position pos:line="830" pos:column="61"/></operator><name pos:line="830" pos:column="57">proxy_module<pos:position pos:line="830" pos:column="69"/></name></expr></argument>)<pos:position pos:line="830" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="830" pos:column="71"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="832" pos:column="5">psf<pos:position pos:line="832" pos:column="8"/></name><operator pos:line="832" pos:column="8">-&gt;<pos:position pos:line="832" pos:column="13"/></operator><name pos:line="832" pos:column="10">preserve_host<pos:position pos:line="832" pos:column="23"/></name></name> <operator pos:line="832" pos:column="24">=<pos:position pos:line="832" pos:column="25"/></operator> <name pos:line="832" pos:column="26">flag<pos:position pos:line="832" pos:column="30"/></name></expr>;<pos:position pos:line="832" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="833" pos:column="5">psf<pos:position pos:line="833" pos:column="8"/></name><operator pos:line="833" pos:column="8">-&gt;<pos:position pos:line="833" pos:column="13"/></operator><name pos:line="833" pos:column="10">preserve_host_set<pos:position pos:line="833" pos:column="27"/></name></name> <operator pos:line="833" pos:column="28">=<pos:position pos:line="833" pos:column="29"/></operator> <literal type="number" pos:line="833" pos:column="30">1<pos:position pos:line="833" pos:column="31"/></literal></expr>;<pos:position pos:line="833" pos:column="32"/></expr_stmt>
    <return pos:line="834" pos:column="5">return <expr><name pos:line="834" pos:column="12">NULL<pos:position pos:line="834" pos:column="16"/></name></expr>;<pos:position pos:line="834" pos:column="17"/></return>
}<pos:position pos:line="835" pos:column="2"/></block></function>

<function><specifier pos:line="837" pos:column="1">static<pos:position pos:line="837" pos:column="7"/></specifier> <type><specifier pos:line="837" pos:column="8">const<pos:position pos:line="837" pos:column="13"/></specifier> <name pos:line="837" pos:column="14">char<pos:position pos:line="837" pos:column="18"/></name> <modifier pos:line="837" pos:column="19">*<pos:position pos:line="837" pos:column="20"/></modifier></type>
    <name pos:line="838" pos:column="5">set_recv_buffer_size<pos:position pos:line="838" pos:column="25"/></name><parameter_list pos:line="838" pos:column="25">(<parameter><decl><type><name pos:line="838" pos:column="26">cmd_parms<pos:position pos:line="838" pos:column="35"/></name> <modifier pos:line="838" pos:column="36">*<pos:position pos:line="838" pos:column="37"/></modifier></type><name pos:line="838" pos:column="37">parms<pos:position pos:line="838" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="838" pos:column="44">void<pos:position pos:line="838" pos:column="48"/></name> <modifier pos:line="838" pos:column="49">*<pos:position pos:line="838" pos:column="50"/></modifier></type><name pos:line="838" pos:column="50">dummy<pos:position pos:line="838" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="838" pos:column="57">const<pos:position pos:line="838" pos:column="62"/></specifier> <name pos:line="838" pos:column="63">char<pos:position pos:line="838" pos:column="67"/></name> <modifier pos:line="838" pos:column="68">*<pos:position pos:line="838" pos:column="69"/></modifier></type><name pos:line="838" pos:column="69">arg<pos:position pos:line="838" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="838" pos:column="73"/></parameter_list>
<block pos:line="839" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="840" pos:column="5">proxy_server_conf<pos:position pos:line="840" pos:column="22"/></name> <modifier pos:line="840" pos:column="23">*<pos:position pos:line="840" pos:column="24"/></modifier></type><name pos:line="840" pos:column="24">psf<pos:position pos:line="840" pos:column="27"/></name> <init pos:line="840" pos:column="28">=
    <expr><call><name pos:line="841" pos:column="5">ap_get_module_config<pos:position pos:line="841" pos:column="25"/></name><argument_list pos:line="841" pos:column="25">(<argument><expr><name><name pos:line="841" pos:column="26">parms<pos:position pos:line="841" pos:column="31"/></name><operator pos:line="841" pos:column="31">-&gt;<pos:position pos:line="841" pos:column="36"/></operator><name pos:line="841" pos:column="33">server<pos:position pos:line="841" pos:column="39"/></name><operator pos:line="841" pos:column="39">-&gt;<pos:position pos:line="841" pos:column="44"/></operator><name pos:line="841" pos:column="41">module_config<pos:position pos:line="841" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="841" pos:column="56">&amp;<pos:position pos:line="841" pos:column="61"/></operator><name pos:line="841" pos:column="57">proxy_module<pos:position pos:line="841" pos:column="69"/></name></expr></argument>)<pos:position pos:line="841" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="841" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="842" pos:column="5">int<pos:position pos:line="842" pos:column="8"/></name></type> <name pos:line="842" pos:column="9">s<pos:position pos:line="842" pos:column="10"/></name> <init pos:line="842" pos:column="11">= <expr><call><name pos:line="842" pos:column="13">atoi<pos:position pos:line="842" pos:column="17"/></name><argument_list pos:line="842" pos:column="17">(<argument><expr><name pos:line="842" pos:column="18">arg<pos:position pos:line="842" pos:column="21"/></name></expr></argument>)<pos:position pos:line="842" pos:column="22"/></argument_list></call></expr></init></decl>;<pos:position pos:line="842" pos:column="23"/></decl_stmt>
    <if pos:line="843" pos:column="5">if <condition pos:line="843" pos:column="8">(<expr><name pos:line="843" pos:column="9">s<pos:position pos:line="843" pos:column="10"/></name> <operator pos:line="843" pos:column="11">&lt;<pos:position pos:line="843" pos:column="15"/></operator> <literal type="number" pos:line="843" pos:column="13">512<pos:position pos:line="843" pos:column="16"/></literal> <operator pos:line="843" pos:column="17">&amp;&amp;<pos:position pos:line="843" pos:column="27"/></operator> <name pos:line="843" pos:column="20">s<pos:position pos:line="843" pos:column="21"/></name> <operator pos:line="843" pos:column="22">!=<pos:position pos:line="843" pos:column="24"/></operator> <literal type="number" pos:line="843" pos:column="25">0<pos:position pos:line="843" pos:column="26"/></literal></expr>)<pos:position pos:line="843" pos:column="27"/></condition><then pos:line="843" pos:column="27"> <block pos:line="843" pos:column="28">{
        <return pos:line="844" pos:column="9">return <expr><literal type="string" pos:line="844" pos:column="16">"ProxyReceiveBufferSize must be &gt;= 512 bytes, or 0 for system default."<pos:position pos:line="844" pos:column="90"/></literal></expr>;<pos:position pos:line="844" pos:column="88"/></return>
    }<pos:position pos:line="845" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="847" pos:column="5">psf<pos:position pos:line="847" pos:column="8"/></name><operator pos:line="847" pos:column="8">-&gt;<pos:position pos:line="847" pos:column="13"/></operator><name pos:line="847" pos:column="10">recv_buffer_size<pos:position pos:line="847" pos:column="26"/></name></name> <operator pos:line="847" pos:column="27">=<pos:position pos:line="847" pos:column="28"/></operator> <name pos:line="847" pos:column="29">s<pos:position pos:line="847" pos:column="30"/></name></expr>;<pos:position pos:line="847" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="848" pos:column="5">psf<pos:position pos:line="848" pos:column="8"/></name><operator pos:line="848" pos:column="8">-&gt;<pos:position pos:line="848" pos:column="13"/></operator><name pos:line="848" pos:column="10">recv_buffer_size_set<pos:position pos:line="848" pos:column="30"/></name></name> <operator pos:line="848" pos:column="31">=<pos:position pos:line="848" pos:column="32"/></operator> <literal type="number" pos:line="848" pos:column="33">1<pos:position pos:line="848" pos:column="34"/></literal></expr>;<pos:position pos:line="848" pos:column="35"/></expr_stmt>
    <return pos:line="849" pos:column="5">return <expr><name pos:line="849" pos:column="12">NULL<pos:position pos:line="849" pos:column="16"/></name></expr>;<pos:position pos:line="849" pos:column="17"/></return>
}<pos:position pos:line="850" pos:column="2"/></block></function>

<function><specifier pos:line="852" pos:column="1">static<pos:position pos:line="852" pos:column="7"/></specifier> <type><specifier pos:line="852" pos:column="8">const<pos:position pos:line="852" pos:column="13"/></specifier> <name pos:line="852" pos:column="14">char<pos:position pos:line="852" pos:column="18"/></name> <modifier pos:line="852" pos:column="19">*<pos:position pos:line="852" pos:column="20"/></modifier></type>
    <name pos:line="853" pos:column="5">set_io_buffer_size<pos:position pos:line="853" pos:column="23"/></name><parameter_list pos:line="853" pos:column="23">(<parameter><decl><type><name pos:line="853" pos:column="24">cmd_parms<pos:position pos:line="853" pos:column="33"/></name> <modifier pos:line="853" pos:column="34">*<pos:position pos:line="853" pos:column="35"/></modifier></type><name pos:line="853" pos:column="35">parms<pos:position pos:line="853" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="853" pos:column="42">void<pos:position pos:line="853" pos:column="46"/></name> <modifier pos:line="853" pos:column="47">*<pos:position pos:line="853" pos:column="48"/></modifier></type><name pos:line="853" pos:column="48">dummy<pos:position pos:line="853" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="853" pos:column="55">const<pos:position pos:line="853" pos:column="60"/></specifier> <name pos:line="853" pos:column="61">char<pos:position pos:line="853" pos:column="65"/></name> <modifier pos:line="853" pos:column="66">*<pos:position pos:line="853" pos:column="67"/></modifier></type><name pos:line="853" pos:column="67">arg<pos:position pos:line="853" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="853" pos:column="71"/></parameter_list>
<block pos:line="854" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="855" pos:column="5">proxy_server_conf<pos:position pos:line="855" pos:column="22"/></name> <modifier pos:line="855" pos:column="23">*<pos:position pos:line="855" pos:column="24"/></modifier></type><name pos:line="855" pos:column="24">psf<pos:position pos:line="855" pos:column="27"/></name> <init pos:line="855" pos:column="28">=
    <expr><call><name pos:line="856" pos:column="5">ap_get_module_config<pos:position pos:line="856" pos:column="25"/></name><argument_list pos:line="856" pos:column="25">(<argument><expr><name><name pos:line="856" pos:column="26">parms<pos:position pos:line="856" pos:column="31"/></name><operator pos:line="856" pos:column="31">-&gt;<pos:position pos:line="856" pos:column="36"/></operator><name pos:line="856" pos:column="33">server<pos:position pos:line="856" pos:column="39"/></name><operator pos:line="856" pos:column="39">-&gt;<pos:position pos:line="856" pos:column="44"/></operator><name pos:line="856" pos:column="41">module_config<pos:position pos:line="856" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="856" pos:column="56">&amp;<pos:position pos:line="856" pos:column="61"/></operator><name pos:line="856" pos:column="57">proxy_module<pos:position pos:line="856" pos:column="69"/></name></expr></argument>)<pos:position pos:line="856" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="856" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="857" pos:column="5">long<pos:position pos:line="857" pos:column="9"/></name></type> <name pos:line="857" pos:column="10">s<pos:position pos:line="857" pos:column="11"/></name> <init pos:line="857" pos:column="12">= <expr><call><name pos:line="857" pos:column="14">atol<pos:position pos:line="857" pos:column="18"/></name><argument_list pos:line="857" pos:column="18">(<argument><expr><name pos:line="857" pos:column="19">arg<pos:position pos:line="857" pos:column="22"/></name></expr></argument>)<pos:position pos:line="857" pos:column="23"/></argument_list></call></expr></init></decl>;<pos:position pos:line="857" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="859" pos:column="5">psf<pos:position pos:line="859" pos:column="8"/></name><operator pos:line="859" pos:column="8">-&gt;<pos:position pos:line="859" pos:column="13"/></operator><name pos:line="859" pos:column="10">io_buffer_size<pos:position pos:line="859" pos:column="24"/></name></name> <operator pos:line="859" pos:column="25">=<pos:position pos:line="859" pos:column="26"/></operator> <operator pos:line="859" pos:column="27">(<pos:position pos:line="859" pos:column="28"/></operator><ternary><condition><expr><operator pos:line="859" pos:column="28">(<pos:position pos:line="859" pos:column="29"/></operator><name pos:line="859" pos:column="29">s<pos:position pos:line="859" pos:column="30"/></name> <operator pos:line="859" pos:column="31">&gt;<pos:position pos:line="859" pos:column="35"/></operator> <name pos:line="859" pos:column="33">AP_IOBUFSIZE<pos:position pos:line="859" pos:column="45"/></name><operator pos:line="859" pos:column="45">)<pos:position pos:line="859" pos:column="46"/></operator></expr> ?<pos:position pos:line="859" pos:column="48"/></condition><then pos:line="859" pos:column="48"> <expr><name pos:line="859" pos:column="49">s<pos:position pos:line="859" pos:column="50"/></name></expr> <pos:position pos:line="859" pos:column="51"/></then><else pos:line="859" pos:column="51">: <expr><name pos:line="859" pos:column="53">AP_IOBUFSIZE<pos:position pos:line="859" pos:column="65"/></name></expr></else></ternary><operator pos:line="859" pos:column="65">)<pos:position pos:line="859" pos:column="66"/></operator></expr>;<pos:position pos:line="859" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="860" pos:column="5">psf<pos:position pos:line="860" pos:column="8"/></name><operator pos:line="860" pos:column="8">-&gt;<pos:position pos:line="860" pos:column="13"/></operator><name pos:line="860" pos:column="10">io_buffer_size_set<pos:position pos:line="860" pos:column="28"/></name></name> <operator pos:line="860" pos:column="29">=<pos:position pos:line="860" pos:column="30"/></operator> <literal type="number" pos:line="860" pos:column="31">1<pos:position pos:line="860" pos:column="32"/></literal></expr>;<pos:position pos:line="860" pos:column="33"/></expr_stmt>
    <return pos:line="861" pos:column="5">return <expr><name pos:line="861" pos:column="12">NULL<pos:position pos:line="861" pos:column="16"/></name></expr>;<pos:position pos:line="861" pos:column="17"/></return>
}<pos:position pos:line="862" pos:column="2"/></block></function>

<function><specifier pos:line="864" pos:column="1">static<pos:position pos:line="864" pos:column="7"/></specifier> <type><specifier pos:line="864" pos:column="8">const<pos:position pos:line="864" pos:column="13"/></specifier> <name pos:line="864" pos:column="14">char<pos:position pos:line="864" pos:column="18"/></name> <modifier pos:line="864" pos:column="19">*<pos:position pos:line="864" pos:column="20"/></modifier></type>
    <name pos:line="865" pos:column="5">set_max_forwards<pos:position pos:line="865" pos:column="21"/></name><parameter_list pos:line="865" pos:column="21">(<parameter><decl><type><name pos:line="865" pos:column="22">cmd_parms<pos:position pos:line="865" pos:column="31"/></name> <modifier pos:line="865" pos:column="32">*<pos:position pos:line="865" pos:column="33"/></modifier></type><name pos:line="865" pos:column="33">parms<pos:position pos:line="865" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="865" pos:column="40">void<pos:position pos:line="865" pos:column="44"/></name> <modifier pos:line="865" pos:column="45">*<pos:position pos:line="865" pos:column="46"/></modifier></type><name pos:line="865" pos:column="46">dummy<pos:position pos:line="865" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="865" pos:column="53">const<pos:position pos:line="865" pos:column="58"/></specifier> <name pos:line="865" pos:column="59">char<pos:position pos:line="865" pos:column="63"/></name> <modifier pos:line="865" pos:column="64">*<pos:position pos:line="865" pos:column="65"/></modifier></type><name pos:line="865" pos:column="65">arg<pos:position pos:line="865" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="865" pos:column="69"/></parameter_list>
<block pos:line="866" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="867" pos:column="5">proxy_server_conf<pos:position pos:line="867" pos:column="22"/></name> <modifier pos:line="867" pos:column="23">*<pos:position pos:line="867" pos:column="24"/></modifier></type><name pos:line="867" pos:column="24">psf<pos:position pos:line="867" pos:column="27"/></name> <init pos:line="867" pos:column="28">=
    <expr><call><name pos:line="868" pos:column="5">ap_get_module_config<pos:position pos:line="868" pos:column="25"/></name><argument_list pos:line="868" pos:column="25">(<argument><expr><name><name pos:line="868" pos:column="26">parms<pos:position pos:line="868" pos:column="31"/></name><operator pos:line="868" pos:column="31">-&gt;<pos:position pos:line="868" pos:column="36"/></operator><name pos:line="868" pos:column="33">server<pos:position pos:line="868" pos:column="39"/></name><operator pos:line="868" pos:column="39">-&gt;<pos:position pos:line="868" pos:column="44"/></operator><name pos:line="868" pos:column="41">module_config<pos:position pos:line="868" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="868" pos:column="56">&amp;<pos:position pos:line="868" pos:column="61"/></operator><name pos:line="868" pos:column="57">proxy_module<pos:position pos:line="868" pos:column="69"/></name></expr></argument>)<pos:position pos:line="868" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="868" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="869" pos:column="5">long<pos:position pos:line="869" pos:column="9"/></name></type> <name pos:line="869" pos:column="10">s<pos:position pos:line="869" pos:column="11"/></name> <init pos:line="869" pos:column="12">= <expr><call><name pos:line="869" pos:column="14">atol<pos:position pos:line="869" pos:column="18"/></name><argument_list pos:line="869" pos:column="18">(<argument><expr><name pos:line="869" pos:column="19">arg<pos:position pos:line="869" pos:column="22"/></name></expr></argument>)<pos:position pos:line="869" pos:column="23"/></argument_list></call></expr></init></decl>;<pos:position pos:line="869" pos:column="24"/></decl_stmt>
    <if pos:line="870" pos:column="5">if <condition pos:line="870" pos:column="8">(<expr><name pos:line="870" pos:column="9">s<pos:position pos:line="870" pos:column="10"/></name> <operator pos:line="870" pos:column="11">&lt;<pos:position pos:line="870" pos:column="15"/></operator> <literal type="number" pos:line="870" pos:column="13">0<pos:position pos:line="870" pos:column="14"/></literal></expr>)<pos:position pos:line="870" pos:column="15"/></condition><then pos:line="870" pos:column="15"> <block pos:line="870" pos:column="16">{
        <return pos:line="871" pos:column="9">return <expr><literal type="string" pos:line="871" pos:column="16">"ProxyMaxForwards must be greater or equal to zero.."<pos:position pos:line="871" pos:column="69"/></literal></expr>;<pos:position pos:line="871" pos:column="70"/></return>
    }<pos:position pos:line="872" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="874" pos:column="5">psf<pos:position pos:line="874" pos:column="8"/></name><operator pos:line="874" pos:column="8">-&gt;<pos:position pos:line="874" pos:column="13"/></operator><name pos:line="874" pos:column="10">maxfwd<pos:position pos:line="874" pos:column="16"/></name></name> <operator pos:line="874" pos:column="17">=<pos:position pos:line="874" pos:column="18"/></operator> <name pos:line="874" pos:column="19">s<pos:position pos:line="874" pos:column="20"/></name></expr>;<pos:position pos:line="874" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="875" pos:column="5">psf<pos:position pos:line="875" pos:column="8"/></name><operator pos:line="875" pos:column="8">-&gt;<pos:position pos:line="875" pos:column="13"/></operator><name pos:line="875" pos:column="10">maxfwd_set<pos:position pos:line="875" pos:column="20"/></name></name> <operator pos:line="875" pos:column="21">=<pos:position pos:line="875" pos:column="22"/></operator> <literal type="number" pos:line="875" pos:column="23">1<pos:position pos:line="875" pos:column="24"/></literal></expr>;<pos:position pos:line="875" pos:column="25"/></expr_stmt>
    <return pos:line="876" pos:column="5">return <expr><name pos:line="876" pos:column="12">NULL<pos:position pos:line="876" pos:column="16"/></name></expr>;<pos:position pos:line="876" pos:column="17"/></return>
}<pos:position pos:line="877" pos:column="2"/></block></function>
<function><specifier pos:line="878" pos:column="1">static<pos:position pos:line="878" pos:column="7"/></specifier> <type><specifier pos:line="878" pos:column="8">const<pos:position pos:line="878" pos:column="13"/></specifier> <name pos:line="878" pos:column="14">char<pos:position pos:line="878" pos:column="18"/></name><modifier pos:line="878" pos:column="18">*<pos:position pos:line="878" pos:column="19"/></modifier></type>
    <name pos:line="879" pos:column="5">set_proxy_timeout<pos:position pos:line="879" pos:column="22"/></name><parameter_list pos:line="879" pos:column="22">(<parameter><decl><type><name pos:line="879" pos:column="23">cmd_parms<pos:position pos:line="879" pos:column="32"/></name> <modifier pos:line="879" pos:column="33">*<pos:position pos:line="879" pos:column="34"/></modifier></type><name pos:line="879" pos:column="34">parms<pos:position pos:line="879" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="879" pos:column="41">void<pos:position pos:line="879" pos:column="45"/></name> <modifier pos:line="879" pos:column="46">*<pos:position pos:line="879" pos:column="47"/></modifier></type><name pos:line="879" pos:column="47">dummy<pos:position pos:line="879" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="879" pos:column="54">const<pos:position pos:line="879" pos:column="59"/></specifier> <name pos:line="879" pos:column="60">char<pos:position pos:line="879" pos:column="64"/></name> <modifier pos:line="879" pos:column="65">*<pos:position pos:line="879" pos:column="66"/></modifier></type><name pos:line="879" pos:column="66">arg<pos:position pos:line="879" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="879" pos:column="70"/></parameter_list>
<block pos:line="880" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="881" pos:column="5">proxy_server_conf<pos:position pos:line="881" pos:column="22"/></name> <modifier pos:line="881" pos:column="23">*<pos:position pos:line="881" pos:column="24"/></modifier></type><name pos:line="881" pos:column="24">psf<pos:position pos:line="881" pos:column="27"/></name> <init pos:line="881" pos:column="28">=
    <expr><call><name pos:line="882" pos:column="5">ap_get_module_config<pos:position pos:line="882" pos:column="25"/></name><argument_list pos:line="882" pos:column="25">(<argument><expr><name><name pos:line="882" pos:column="26">parms<pos:position pos:line="882" pos:column="31"/></name><operator pos:line="882" pos:column="31">-&gt;<pos:position pos:line="882" pos:column="36"/></operator><name pos:line="882" pos:column="33">server<pos:position pos:line="882" pos:column="39"/></name><operator pos:line="882" pos:column="39">-&gt;<pos:position pos:line="882" pos:column="44"/></operator><name pos:line="882" pos:column="41">module_config<pos:position pos:line="882" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="882" pos:column="56">&amp;<pos:position pos:line="882" pos:column="61"/></operator><name pos:line="882" pos:column="57">proxy_module<pos:position pos:line="882" pos:column="69"/></name></expr></argument>)<pos:position pos:line="882" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="882" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="883" pos:column="5">int<pos:position pos:line="883" pos:column="8"/></name></type> <name pos:line="883" pos:column="9">timeout<pos:position pos:line="883" pos:column="16"/></name></decl>;<pos:position pos:line="883" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="885" pos:column="5">timeout<pos:position pos:line="885" pos:column="12"/></name><operator pos:line="885" pos:column="12">=<pos:position pos:line="885" pos:column="13"/></operator><call><name pos:line="885" pos:column="13">atoi<pos:position pos:line="885" pos:column="17"/></name><argument_list pos:line="885" pos:column="17">(<argument><expr><name pos:line="885" pos:column="18">arg<pos:position pos:line="885" pos:column="21"/></name></expr></argument>)<pos:position pos:line="885" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="885" pos:column="23"/></expr_stmt>
    <if pos:line="886" pos:column="5">if <condition pos:line="886" pos:column="8">(<expr><name pos:line="886" pos:column="9">timeout<pos:position pos:line="886" pos:column="16"/></name><operator pos:line="886" pos:column="16">&lt;<pos:position pos:line="886" pos:column="20"/></operator><literal type="number" pos:line="886" pos:column="17">1<pos:position pos:line="886" pos:column="18"/></literal></expr>)<pos:position pos:line="886" pos:column="19"/></condition><then pos:line="886" pos:column="19"> <block pos:line="886" pos:column="20">{
        <return pos:line="887" pos:column="9">return <expr><literal type="string" pos:line="887" pos:column="16">"Proxy Timeout must be at least 1 second."<pos:position pos:line="887" pos:column="58"/></literal></expr>;<pos:position pos:line="887" pos:column="59"/></return>
    }<pos:position pos:line="888" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="889" pos:column="5">psf<pos:position pos:line="889" pos:column="8"/></name><operator pos:line="889" pos:column="8">-&gt;<pos:position pos:line="889" pos:column="13"/></operator><name pos:line="889" pos:column="10">timeout_set<pos:position pos:line="889" pos:column="21"/></name></name><operator pos:line="889" pos:column="21">=<pos:position pos:line="889" pos:column="22"/></operator><literal type="number" pos:line="889" pos:column="22">1<pos:position pos:line="889" pos:column="23"/></literal></expr>;<pos:position pos:line="889" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="890" pos:column="5">psf<pos:position pos:line="890" pos:column="8"/></name><operator pos:line="890" pos:column="8">-&gt;<pos:position pos:line="890" pos:column="13"/></operator><name pos:line="890" pos:column="10">timeout<pos:position pos:line="890" pos:column="17"/></name></name><operator pos:line="890" pos:column="17">=<pos:position pos:line="890" pos:column="18"/></operator><call><name pos:line="890" pos:column="18">apr_time_from_sec<pos:position pos:line="890" pos:column="35"/></name><argument_list pos:line="890" pos:column="35">(<argument><expr><name pos:line="890" pos:column="36">timeout<pos:position pos:line="890" pos:column="43"/></name></expr></argument>)<pos:position pos:line="890" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="890" pos:column="45"/></expr_stmt>

    <return pos:line="892" pos:column="5">return <expr><name pos:line="892" pos:column="12">NULL<pos:position pos:line="892" pos:column="16"/></name></expr>;<pos:position pos:line="892" pos:column="17"/></return>    
}<pos:position pos:line="893" pos:column="2"/></block></function>

<function><specifier pos:line="895" pos:column="1">static<pos:position pos:line="895" pos:column="7"/></specifier> <type><specifier pos:line="895" pos:column="8">const<pos:position pos:line="895" pos:column="13"/></specifier> <name pos:line="895" pos:column="14">char<pos:position pos:line="895" pos:column="18"/></name><modifier pos:line="895" pos:column="18">*<pos:position pos:line="895" pos:column="19"/></modifier></type>
    <name pos:line="896" pos:column="5">set_via_opt<pos:position pos:line="896" pos:column="16"/></name><parameter_list pos:line="896" pos:column="16">(<parameter><decl><type><name pos:line="896" pos:column="17">cmd_parms<pos:position pos:line="896" pos:column="26"/></name> <modifier pos:line="896" pos:column="27">*<pos:position pos:line="896" pos:column="28"/></modifier></type><name pos:line="896" pos:column="28">parms<pos:position pos:line="896" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="896" pos:column="35">void<pos:position pos:line="896" pos:column="39"/></name> <modifier pos:line="896" pos:column="40">*<pos:position pos:line="896" pos:column="41"/></modifier></type><name pos:line="896" pos:column="41">dummy<pos:position pos:line="896" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="896" pos:column="48">const<pos:position pos:line="896" pos:column="53"/></specifier> <name pos:line="896" pos:column="54">char<pos:position pos:line="896" pos:column="58"/></name> <modifier pos:line="896" pos:column="59">*<pos:position pos:line="896" pos:column="60"/></modifier></type><name pos:line="896" pos:column="60">arg<pos:position pos:line="896" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="896" pos:column="64"/></parameter_list>
<block pos:line="897" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="898" pos:column="5">proxy_server_conf<pos:position pos:line="898" pos:column="22"/></name> <modifier pos:line="898" pos:column="23">*<pos:position pos:line="898" pos:column="24"/></modifier></type><name pos:line="898" pos:column="24">psf<pos:position pos:line="898" pos:column="27"/></name> <init pos:line="898" pos:column="28">=
    <expr><call><name pos:line="899" pos:column="5">ap_get_module_config<pos:position pos:line="899" pos:column="25"/></name><argument_list pos:line="899" pos:column="25">(<argument><expr><name><name pos:line="899" pos:column="26">parms<pos:position pos:line="899" pos:column="31"/></name><operator pos:line="899" pos:column="31">-&gt;<pos:position pos:line="899" pos:column="36"/></operator><name pos:line="899" pos:column="33">server<pos:position pos:line="899" pos:column="39"/></name><operator pos:line="899" pos:column="39">-&gt;<pos:position pos:line="899" pos:column="44"/></operator><name pos:line="899" pos:column="41">module_config<pos:position pos:line="899" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="899" pos:column="56">&amp;<pos:position pos:line="899" pos:column="61"/></operator><name pos:line="899" pos:column="57">proxy_module<pos:position pos:line="899" pos:column="69"/></name></expr></argument>)<pos:position pos:line="899" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="899" pos:column="71"/></decl_stmt>

    <if pos:line="901" pos:column="5">if <condition pos:line="901" pos:column="8">(<expr><call><name pos:line="901" pos:column="9">strcasecmp<pos:position pos:line="901" pos:column="19"/></name><argument_list pos:line="901" pos:column="19">(<argument><expr><name pos:line="901" pos:column="20">arg<pos:position pos:line="901" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="901" pos:column="25">"Off"<pos:position pos:line="901" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="901" pos:column="31"/></argument_list></call> <operator pos:line="901" pos:column="32">==<pos:position pos:line="901" pos:column="34"/></operator> <literal type="number" pos:line="901" pos:column="35">0<pos:position pos:line="901" pos:column="36"/></literal></expr>)<pos:position pos:line="901" pos:column="37"/></condition><then pos:line="901" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="902" pos:column="9">psf<pos:position pos:line="902" pos:column="12"/></name><operator pos:line="902" pos:column="12">-&gt;<pos:position pos:line="902" pos:column="17"/></operator><name pos:line="902" pos:column="14">viaopt<pos:position pos:line="902" pos:column="20"/></name></name> <operator pos:line="902" pos:column="21">=<pos:position pos:line="902" pos:column="22"/></operator> <name pos:line="902" pos:column="23">via_off<pos:position pos:line="902" pos:column="30"/></name></expr>;<pos:position pos:line="902" pos:column="31"/></expr_stmt></block></then>
    <elseif pos:line="903" pos:column="5">else <if pos:line="903" pos:column="10">if <condition pos:line="903" pos:column="13">(<expr><call><name pos:line="903" pos:column="14">strcasecmp<pos:position pos:line="903" pos:column="24"/></name><argument_list pos:line="903" pos:column="24">(<argument><expr><name pos:line="903" pos:column="25">arg<pos:position pos:line="903" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="903" pos:column="30">"On"<pos:position pos:line="903" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="903" pos:column="35"/></argument_list></call> <operator pos:line="903" pos:column="36">==<pos:position pos:line="903" pos:column="38"/></operator> <literal type="number" pos:line="903" pos:column="39">0<pos:position pos:line="903" pos:column="40"/></literal></expr>)<pos:position pos:line="903" pos:column="41"/></condition><then pos:line="903" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="904" pos:column="9">psf<pos:position pos:line="904" pos:column="12"/></name><operator pos:line="904" pos:column="12">-&gt;<pos:position pos:line="904" pos:column="17"/></operator><name pos:line="904" pos:column="14">viaopt<pos:position pos:line="904" pos:column="20"/></name></name> <operator pos:line="904" pos:column="21">=<pos:position pos:line="904" pos:column="22"/></operator> <name pos:line="904" pos:column="23">via_on<pos:position pos:line="904" pos:column="29"/></name></expr>;<pos:position pos:line="904" pos:column="30"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="905" pos:column="5">else <if pos:line="905" pos:column="10">if <condition pos:line="905" pos:column="13">(<expr><call><name pos:line="905" pos:column="14">strcasecmp<pos:position pos:line="905" pos:column="24"/></name><argument_list pos:line="905" pos:column="24">(<argument><expr><name pos:line="905" pos:column="25">arg<pos:position pos:line="905" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="905" pos:column="30">"Block"<pos:position pos:line="905" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="905" pos:column="38"/></argument_list></call> <operator pos:line="905" pos:column="39">==<pos:position pos:line="905" pos:column="41"/></operator> <literal type="number" pos:line="905" pos:column="42">0<pos:position pos:line="905" pos:column="43"/></literal></expr>)<pos:position pos:line="905" pos:column="44"/></condition><then pos:line="905" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="906" pos:column="9">psf<pos:position pos:line="906" pos:column="12"/></name><operator pos:line="906" pos:column="12">-&gt;<pos:position pos:line="906" pos:column="17"/></operator><name pos:line="906" pos:column="14">viaopt<pos:position pos:line="906" pos:column="20"/></name></name> <operator pos:line="906" pos:column="21">=<pos:position pos:line="906" pos:column="22"/></operator> <name pos:line="906" pos:column="23">via_block<pos:position pos:line="906" pos:column="32"/></name></expr>;<pos:position pos:line="906" pos:column="33"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="907" pos:column="5">else <if pos:line="907" pos:column="10">if <condition pos:line="907" pos:column="13">(<expr><call><name pos:line="907" pos:column="14">strcasecmp<pos:position pos:line="907" pos:column="24"/></name><argument_list pos:line="907" pos:column="24">(<argument><expr><name pos:line="907" pos:column="25">arg<pos:position pos:line="907" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="907" pos:column="30">"Full"<pos:position pos:line="907" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="907" pos:column="37"/></argument_list></call> <operator pos:line="907" pos:column="38">==<pos:position pos:line="907" pos:column="40"/></operator> <literal type="number" pos:line="907" pos:column="41">0<pos:position pos:line="907" pos:column="42"/></literal></expr>)<pos:position pos:line="907" pos:column="43"/></condition><then pos:line="907" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="908" pos:column="9">psf<pos:position pos:line="908" pos:column="12"/></name><operator pos:line="908" pos:column="12">-&gt;<pos:position pos:line="908" pos:column="17"/></operator><name pos:line="908" pos:column="14">viaopt<pos:position pos:line="908" pos:column="20"/></name></name> <operator pos:line="908" pos:column="21">=<pos:position pos:line="908" pos:column="22"/></operator> <name pos:line="908" pos:column="23">via_full<pos:position pos:line="908" pos:column="31"/></name></expr>;<pos:position pos:line="908" pos:column="32"/></expr_stmt></block></then></if></elseif>
    <else pos:line="909" pos:column="5">else <block pos:line="909" pos:column="10">{
        <return pos:line="910" pos:column="9">return <expr><literal type="string" pos:line="910" pos:column="16">"ProxyVia must be one of: "<pos:position pos:line="910" pos:column="43"/></literal>
            <literal type="string" pos:line="911" pos:column="13">"off | on | full | block"<pos:position pos:line="911" pos:column="38"/></literal></expr>;<pos:position pos:line="911" pos:column="39"/></return>
    }<pos:position pos:line="912" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="914" pos:column="5">psf<pos:position pos:line="914" pos:column="8"/></name><operator pos:line="914" pos:column="8">-&gt;<pos:position pos:line="914" pos:column="13"/></operator><name pos:line="914" pos:column="10">viaopt_set<pos:position pos:line="914" pos:column="20"/></name></name> <operator pos:line="914" pos:column="21">=<pos:position pos:line="914" pos:column="22"/></operator> <literal type="number" pos:line="914" pos:column="23">1<pos:position pos:line="914" pos:column="24"/></literal></expr>;<pos:position pos:line="914" pos:column="25"/></expr_stmt>
    <return pos:line="915" pos:column="5">return <expr><name pos:line="915" pos:column="12">NULL<pos:position pos:line="915" pos:column="16"/></name></expr>;<pos:position pos:line="915" pos:column="17"/></return>    
}<pos:position pos:line="916" pos:column="2"/></block></function>

<function><specifier pos:line="918" pos:column="1">static<pos:position pos:line="918" pos:column="7"/></specifier> <type><specifier pos:line="918" pos:column="8">const<pos:position pos:line="918" pos:column="13"/></specifier> <name pos:line="918" pos:column="14">char<pos:position pos:line="918" pos:column="18"/></name><modifier pos:line="918" pos:column="18">*<pos:position pos:line="918" pos:column="19"/></modifier></type>
    <name pos:line="919" pos:column="5">set_bad_opt<pos:position pos:line="919" pos:column="16"/></name><parameter_list pos:line="919" pos:column="16">(<parameter><decl><type><name pos:line="919" pos:column="17">cmd_parms<pos:position pos:line="919" pos:column="26"/></name> <modifier pos:line="919" pos:column="27">*<pos:position pos:line="919" pos:column="28"/></modifier></type><name pos:line="919" pos:column="28">parms<pos:position pos:line="919" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="919" pos:column="35">void<pos:position pos:line="919" pos:column="39"/></name> <modifier pos:line="919" pos:column="40">*<pos:position pos:line="919" pos:column="41"/></modifier></type><name pos:line="919" pos:column="41">dummy<pos:position pos:line="919" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="919" pos:column="48">const<pos:position pos:line="919" pos:column="53"/></specifier> <name pos:line="919" pos:column="54">char<pos:position pos:line="919" pos:column="58"/></name> <modifier pos:line="919" pos:column="59">*<pos:position pos:line="919" pos:column="60"/></modifier></type><name pos:line="919" pos:column="60">arg<pos:position pos:line="919" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="919" pos:column="64"/></parameter_list>
<block pos:line="920" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="921" pos:column="5">proxy_server_conf<pos:position pos:line="921" pos:column="22"/></name> <modifier pos:line="921" pos:column="23">*<pos:position pos:line="921" pos:column="24"/></modifier></type><name pos:line="921" pos:column="24">psf<pos:position pos:line="921" pos:column="27"/></name> <init pos:line="921" pos:column="28">=
    <expr><call><name pos:line="922" pos:column="5">ap_get_module_config<pos:position pos:line="922" pos:column="25"/></name><argument_list pos:line="922" pos:column="25">(<argument><expr><name><name pos:line="922" pos:column="26">parms<pos:position pos:line="922" pos:column="31"/></name><operator pos:line="922" pos:column="31">-&gt;<pos:position pos:line="922" pos:column="36"/></operator><name pos:line="922" pos:column="33">server<pos:position pos:line="922" pos:column="39"/></name><operator pos:line="922" pos:column="39">-&gt;<pos:position pos:line="922" pos:column="44"/></operator><name pos:line="922" pos:column="41">module_config<pos:position pos:line="922" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="922" pos:column="56">&amp;<pos:position pos:line="922" pos:column="61"/></operator><name pos:line="922" pos:column="57">proxy_module<pos:position pos:line="922" pos:column="69"/></name></expr></argument>)<pos:position pos:line="922" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="922" pos:column="71"/></decl_stmt>

    <if pos:line="924" pos:column="5">if <condition pos:line="924" pos:column="8">(<expr><call><name pos:line="924" pos:column="9">strcasecmp<pos:position pos:line="924" pos:column="19"/></name><argument_list pos:line="924" pos:column="19">(<argument><expr><name pos:line="924" pos:column="20">arg<pos:position pos:line="924" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="924" pos:column="25">"IsError"<pos:position pos:line="924" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="924" pos:column="35"/></argument_list></call> <operator pos:line="924" pos:column="36">==<pos:position pos:line="924" pos:column="38"/></operator> <literal type="number" pos:line="924" pos:column="39">0<pos:position pos:line="924" pos:column="40"/></literal></expr>)<pos:position pos:line="924" pos:column="41"/></condition><then pos:line="924" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="925" pos:column="9">psf<pos:position pos:line="925" pos:column="12"/></name><operator pos:line="925" pos:column="12">-&gt;<pos:position pos:line="925" pos:column="17"/></operator><name pos:line="925" pos:column="14">badopt<pos:position pos:line="925" pos:column="20"/></name></name> <operator pos:line="925" pos:column="21">=<pos:position pos:line="925" pos:column="22"/></operator> <name pos:line="925" pos:column="23">bad_error<pos:position pos:line="925" pos:column="32"/></name></expr>;<pos:position pos:line="925" pos:column="33"/></expr_stmt></block></then>
    <elseif pos:line="926" pos:column="5">else <if pos:line="926" pos:column="10">if <condition pos:line="926" pos:column="13">(<expr><call><name pos:line="926" pos:column="14">strcasecmp<pos:position pos:line="926" pos:column="24"/></name><argument_list pos:line="926" pos:column="24">(<argument><expr><name pos:line="926" pos:column="25">arg<pos:position pos:line="926" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="926" pos:column="30">"Ignore"<pos:position pos:line="926" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="926" pos:column="39"/></argument_list></call> <operator pos:line="926" pos:column="40">==<pos:position pos:line="926" pos:column="42"/></operator> <literal type="number" pos:line="926" pos:column="43">0<pos:position pos:line="926" pos:column="44"/></literal></expr>)<pos:position pos:line="926" pos:column="45"/></condition><then pos:line="926" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="927" pos:column="9">psf<pos:position pos:line="927" pos:column="12"/></name><operator pos:line="927" pos:column="12">-&gt;<pos:position pos:line="927" pos:column="17"/></operator><name pos:line="927" pos:column="14">badopt<pos:position pos:line="927" pos:column="20"/></name></name> <operator pos:line="927" pos:column="21">=<pos:position pos:line="927" pos:column="22"/></operator> <name pos:line="927" pos:column="23">bad_ignore<pos:position pos:line="927" pos:column="33"/></name></expr>;<pos:position pos:line="927" pos:column="34"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="928" pos:column="5">else <if pos:line="928" pos:column="10">if <condition pos:line="928" pos:column="13">(<expr><call><name pos:line="928" pos:column="14">strcasecmp<pos:position pos:line="928" pos:column="24"/></name><argument_list pos:line="928" pos:column="24">(<argument><expr><name pos:line="928" pos:column="25">arg<pos:position pos:line="928" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="928" pos:column="30">"StartBody"<pos:position pos:line="928" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="928" pos:column="42"/></argument_list></call> <operator pos:line="928" pos:column="43">==<pos:position pos:line="928" pos:column="45"/></operator> <literal type="number" pos:line="928" pos:column="46">0<pos:position pos:line="928" pos:column="47"/></literal></expr>)<pos:position pos:line="928" pos:column="48"/></condition><then pos:line="928" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="929" pos:column="9">psf<pos:position pos:line="929" pos:column="12"/></name><operator pos:line="929" pos:column="12">-&gt;<pos:position pos:line="929" pos:column="17"/></operator><name pos:line="929" pos:column="14">badopt<pos:position pos:line="929" pos:column="20"/></name></name> <operator pos:line="929" pos:column="21">=<pos:position pos:line="929" pos:column="22"/></operator> <name pos:line="929" pos:column="23">bad_body<pos:position pos:line="929" pos:column="31"/></name></expr>;<pos:position pos:line="929" pos:column="32"/></expr_stmt></block></then></if></elseif>
    <else pos:line="930" pos:column="5">else <block pos:line="930" pos:column="10">{
        <return pos:line="931" pos:column="9">return <expr><literal type="string" pos:line="931" pos:column="16">"ProxyBadHeader must be one of: "<pos:position pos:line="931" pos:column="49"/></literal>
            <literal type="string" pos:line="932" pos:column="13">"IsError | Ignore | StartBody"<pos:position pos:line="932" pos:column="43"/></literal></expr>;<pos:position pos:line="932" pos:column="44"/></return>
    }<pos:position pos:line="933" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="935" pos:column="5">psf<pos:position pos:line="935" pos:column="8"/></name><operator pos:line="935" pos:column="8">-&gt;<pos:position pos:line="935" pos:column="13"/></operator><name pos:line="935" pos:column="10">badopt_set<pos:position pos:line="935" pos:column="20"/></name></name> <operator pos:line="935" pos:column="21">=<pos:position pos:line="935" pos:column="22"/></operator> <literal type="number" pos:line="935" pos:column="23">1<pos:position pos:line="935" pos:column="24"/></literal></expr>;<pos:position pos:line="935" pos:column="25"/></expr_stmt>
    <return pos:line="936" pos:column="5">return <expr><name pos:line="936" pos:column="12">NULL<pos:position pos:line="936" pos:column="16"/></name></expr>;<pos:position pos:line="936" pos:column="17"/></return>    
}<pos:position pos:line="937" pos:column="2"/></block></function>

<function><specifier pos:line="939" pos:column="1">static<pos:position pos:line="939" pos:column="7"/></specifier> <type><name pos:line="939" pos:column="8">void<pos:position pos:line="939" pos:column="12"/></name></type> <name pos:line="939" pos:column="13">ap_add_per_proxy_conf<pos:position pos:line="939" pos:column="34"/></name><parameter_list pos:line="939" pos:column="34">(<parameter><decl><type><name pos:line="939" pos:column="35">server_rec<pos:position pos:line="939" pos:column="45"/></name> <modifier pos:line="939" pos:column="46">*<pos:position pos:line="939" pos:column="47"/></modifier></type><name pos:line="939" pos:column="47">s<pos:position pos:line="939" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="939" pos:column="50">ap_conf_vector_t<pos:position pos:line="939" pos:column="66"/></name> <modifier pos:line="939" pos:column="67">*<pos:position pos:line="939" pos:column="68"/></modifier></type><name pos:line="939" pos:column="68">dir_config<pos:position pos:line="939" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="939" pos:column="79"/></parameter_list>
<block pos:line="940" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="941" pos:column="5">proxy_server_conf<pos:position pos:line="941" pos:column="22"/></name> <modifier pos:line="941" pos:column="23">*<pos:position pos:line="941" pos:column="24"/></modifier></type><name pos:line="941" pos:column="24">sconf<pos:position pos:line="941" pos:column="29"/></name> <init pos:line="941" pos:column="30">= <expr><call><name pos:line="941" pos:column="32">ap_get_module_config<pos:position pos:line="941" pos:column="52"/></name><argument_list pos:line="941" pos:column="52">(<argument><expr><name><name pos:line="941" pos:column="53">s<pos:position pos:line="941" pos:column="54"/></name><operator pos:line="941" pos:column="54">-&gt;<pos:position pos:line="941" pos:column="59"/></operator><name pos:line="941" pos:column="56">module_config<pos:position pos:line="941" pos:column="69"/></name></name></expr></argument>,
					            <argument><expr><operator pos:line="942" pos:column="53">&amp;<pos:position pos:line="942" pos:column="58"/></operator><name pos:line="942" pos:column="54">proxy_module<pos:position pos:line="942" pos:column="66"/></name></expr></argument>)<pos:position pos:line="942" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="942" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="943" pos:column="5">void<pos:position pos:line="943" pos:column="9"/></name> <modifier pos:line="943" pos:column="10">*<pos:position pos:line="943" pos:column="11"/></modifier><modifier pos:line="943" pos:column="11">*<pos:position pos:line="943" pos:column="12"/></modifier></type><name pos:line="943" pos:column="12">new_space<pos:position pos:line="943" pos:column="21"/></name> <init pos:line="943" pos:column="22">= <expr><operator pos:line="943" pos:column="24">(<pos:position pos:line="943" pos:column="25"/></operator><name pos:line="943" pos:column="25">void<pos:position pos:line="943" pos:column="29"/></name> <operator pos:line="943" pos:column="30">*<pos:position pos:line="943" pos:column="31"/></operator><operator pos:line="943" pos:column="31">*<pos:position pos:line="943" pos:column="32"/></operator><operator pos:line="943" pos:column="32">)<pos:position pos:line="943" pos:column="33"/></operator><call><name pos:line="943" pos:column="33">apr_array_push<pos:position pos:line="943" pos:column="47"/></name><argument_list pos:line="943" pos:column="47">(<argument><expr><name><name pos:line="943" pos:column="48">sconf<pos:position pos:line="943" pos:column="53"/></name><operator pos:line="943" pos:column="53">-&gt;<pos:position pos:line="943" pos:column="58"/></operator><name pos:line="943" pos:column="55">sec_proxy<pos:position pos:line="943" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="943" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="943" pos:column="66"/></decl_stmt>
    
    <expr_stmt><expr><operator pos:line="945" pos:column="5">*<pos:position pos:line="945" pos:column="6"/></operator><name pos:line="945" pos:column="6">new_space<pos:position pos:line="945" pos:column="15"/></name> <operator pos:line="945" pos:column="16">=<pos:position pos:line="945" pos:column="17"/></operator> <name pos:line="945" pos:column="18">dir_config<pos:position pos:line="945" pos:column="28"/></name></expr>;<pos:position pos:line="945" pos:column="29"/></expr_stmt>
}<pos:position pos:line="946" pos:column="2"/></block></function>

<function><specifier pos:line="948" pos:column="1">static<pos:position pos:line="948" pos:column="7"/></specifier> <type><specifier pos:line="948" pos:column="8">const<pos:position pos:line="948" pos:column="13"/></specifier> <name pos:line="948" pos:column="14">char<pos:position pos:line="948" pos:column="18"/></name> <modifier pos:line="948" pos:column="19">*<pos:position pos:line="948" pos:column="20"/></modifier></type><name pos:line="948" pos:column="20">proxysection<pos:position pos:line="948" pos:column="32"/></name><parameter_list pos:line="948" pos:column="32">(<parameter><decl><type><name pos:line="948" pos:column="33">cmd_parms<pos:position pos:line="948" pos:column="42"/></name> <modifier pos:line="948" pos:column="43">*<pos:position pos:line="948" pos:column="44"/></modifier></type><name pos:line="948" pos:column="44">cmd<pos:position pos:line="948" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="948" pos:column="49">void<pos:position pos:line="948" pos:column="53"/></name> <modifier pos:line="948" pos:column="54">*<pos:position pos:line="948" pos:column="55"/></modifier></type><name pos:line="948" pos:column="55">mconfig<pos:position pos:line="948" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="948" pos:column="64">const<pos:position pos:line="948" pos:column="69"/></specifier> <name pos:line="948" pos:column="70">char<pos:position pos:line="948" pos:column="74"/></name> <modifier pos:line="948" pos:column="75">*<pos:position pos:line="948" pos:column="76"/></modifier></type><name pos:line="948" pos:column="76">arg<pos:position pos:line="948" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="948" pos:column="80"/></parameter_list>
<block pos:line="949" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="950" pos:column="5">const<pos:position pos:line="950" pos:column="10"/></specifier> <name pos:line="950" pos:column="11">char<pos:position pos:line="950" pos:column="15"/></name> <modifier pos:line="950" pos:column="16">*<pos:position pos:line="950" pos:column="17"/></modifier></type><name pos:line="950" pos:column="17">errmsg<pos:position pos:line="950" pos:column="23"/></name></decl>;<pos:position pos:line="950" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="951" pos:column="5">const<pos:position pos:line="951" pos:column="10"/></specifier> <name pos:line="951" pos:column="11">char<pos:position pos:line="951" pos:column="15"/></name> <modifier pos:line="951" pos:column="16">*<pos:position pos:line="951" pos:column="17"/></modifier></type><name pos:line="951" pos:column="17">endp<pos:position pos:line="951" pos:column="21"/></name> <init pos:line="951" pos:column="22">= <expr><call><name pos:line="951" pos:column="24">ap_strrchr_c<pos:position pos:line="951" pos:column="36"/></name><argument_list pos:line="951" pos:column="36">(<argument><expr><name pos:line="951" pos:column="37">arg<pos:position pos:line="951" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="951" pos:column="42">'&gt;'<pos:position pos:line="951" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="951" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="951" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="952" pos:column="5">int<pos:position pos:line="952" pos:column="8"/></name></type> <name pos:line="952" pos:column="9">old_overrides<pos:position pos:line="952" pos:column="22"/></name> <init pos:line="952" pos:column="23">= <expr><name><name pos:line="952" pos:column="25">cmd<pos:position pos:line="952" pos:column="28"/></name><operator pos:line="952" pos:column="28">-&gt;<pos:position pos:line="952" pos:column="33"/></operator><name pos:line="952" pos:column="30">override<pos:position pos:line="952" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="952" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="953" pos:column="5">char<pos:position pos:line="953" pos:column="9"/></name> <modifier pos:line="953" pos:column="10">*<pos:position pos:line="953" pos:column="11"/></modifier></type><name pos:line="953" pos:column="11">old_path<pos:position pos:line="953" pos:column="19"/></name> <init pos:line="953" pos:column="20">= <expr><name><name pos:line="953" pos:column="22">cmd<pos:position pos:line="953" pos:column="25"/></name><operator pos:line="953" pos:column="25">-&gt;<pos:position pos:line="953" pos:column="30"/></operator><name pos:line="953" pos:column="27">path<pos:position pos:line="953" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="953" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="954" pos:column="5">proxy_dir_conf<pos:position pos:line="954" pos:column="19"/></name> <modifier pos:line="954" pos:column="20">*<pos:position pos:line="954" pos:column="21"/></modifier></type><name pos:line="954" pos:column="21">conf<pos:position pos:line="954" pos:column="25"/></name></decl>;<pos:position pos:line="954" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="955" pos:column="5">ap_conf_vector_t<pos:position pos:line="955" pos:column="21"/></name> <modifier pos:line="955" pos:column="22">*<pos:position pos:line="955" pos:column="23"/></modifier></type><name pos:line="955" pos:column="23">new_dir_conf<pos:position pos:line="955" pos:column="35"/></name> <init pos:line="955" pos:column="36">= <expr><call><name pos:line="955" pos:column="38">ap_create_per_dir_config<pos:position pos:line="955" pos:column="62"/></name><argument_list pos:line="955" pos:column="62">(<argument><expr><name><name pos:line="955" pos:column="63">cmd<pos:position pos:line="955" pos:column="66"/></name><operator pos:line="955" pos:column="66">-&gt;<pos:position pos:line="955" pos:column="71"/></operator><name pos:line="955" pos:column="68">pool<pos:position pos:line="955" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="955" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="955" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="956" pos:column="5">regex_t<pos:position pos:line="956" pos:column="12"/></name> <modifier pos:line="956" pos:column="13">*<pos:position pos:line="956" pos:column="14"/></modifier></type><name pos:line="956" pos:column="14">r<pos:position pos:line="956" pos:column="15"/></name> <init pos:line="956" pos:column="16">= <expr><name pos:line="956" pos:column="18">NULL<pos:position pos:line="956" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="956" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="957" pos:column="5">const<pos:position pos:line="957" pos:column="10"/></specifier> <name pos:line="957" pos:column="11">command_rec<pos:position pos:line="957" pos:column="22"/></name> <modifier pos:line="957" pos:column="23">*<pos:position pos:line="957" pos:column="24"/></modifier></type><name pos:line="957" pos:column="24">thiscmd<pos:position pos:line="957" pos:column="31"/></name> <init pos:line="957" pos:column="32">= <expr><name><name pos:line="957" pos:column="34">cmd<pos:position pos:line="957" pos:column="37"/></name><operator pos:line="957" pos:column="37">-&gt;<pos:position pos:line="957" pos:column="42"/></operator><name pos:line="957" pos:column="39">cmd<pos:position pos:line="957" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="957" pos:column="43"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="959" pos:column="5">const<pos:position pos:line="959" pos:column="10"/></specifier> <name pos:line="959" pos:column="11">char<pos:position pos:line="959" pos:column="15"/></name> <modifier pos:line="959" pos:column="16">*<pos:position pos:line="959" pos:column="17"/></modifier></type><name pos:line="959" pos:column="17">err<pos:position pos:line="959" pos:column="20"/></name> <init pos:line="959" pos:column="21">= <expr><call><name pos:line="959" pos:column="23">ap_check_cmd_context<pos:position pos:line="959" pos:column="43"/></name><argument_list pos:line="959" pos:column="43">(<argument><expr><name pos:line="959" pos:column="44">cmd<pos:position pos:line="959" pos:column="47"/></name></expr></argument>,
                                           <argument><expr><name pos:line="960" pos:column="44">NOT_IN_DIR_LOC_FILE<pos:position pos:line="960" pos:column="63"/></name><operator pos:line="960" pos:column="63">|<pos:position pos:line="960" pos:column="64"/></operator><name pos:line="960" pos:column="64">NOT_IN_LIMIT<pos:position pos:line="960" pos:column="76"/></name></expr></argument>)<pos:position pos:line="960" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="960" pos:column="78"/></decl_stmt>
    <if pos:line="961" pos:column="5">if <condition pos:line="961" pos:column="8">(<expr><name pos:line="961" pos:column="9">err<pos:position pos:line="961" pos:column="12"/></name> <operator pos:line="961" pos:column="13">!=<pos:position pos:line="961" pos:column="15"/></operator> <name pos:line="961" pos:column="16">NULL<pos:position pos:line="961" pos:column="20"/></name></expr>)<pos:position pos:line="961" pos:column="21"/></condition><then pos:line="961" pos:column="21"> <block pos:line="961" pos:column="22">{
        <return pos:line="962" pos:column="9">return <expr><name pos:line="962" pos:column="16">err<pos:position pos:line="962" pos:column="19"/></name></expr>;<pos:position pos:line="962" pos:column="20"/></return>
    }<pos:position pos:line="963" pos:column="6"/></block></then></if>

    <if pos:line="965" pos:column="5">if <condition pos:line="965" pos:column="8">(<expr><name pos:line="965" pos:column="9">endp<pos:position pos:line="965" pos:column="13"/></name> <operator pos:line="965" pos:column="14">==<pos:position pos:line="965" pos:column="16"/></operator> <name pos:line="965" pos:column="17">NULL<pos:position pos:line="965" pos:column="21"/></name></expr>)<pos:position pos:line="965" pos:column="22"/></condition><then pos:line="965" pos:column="22"> <block pos:line="965" pos:column="23">{
        <return pos:line="966" pos:column="9">return <expr><call><name pos:line="966" pos:column="16">apr_pstrcat<pos:position pos:line="966" pos:column="27"/></name><argument_list pos:line="966" pos:column="27">(<argument><expr><name><name pos:line="966" pos:column="28">cmd<pos:position pos:line="966" pos:column="31"/></name><operator pos:line="966" pos:column="31">-&gt;<pos:position pos:line="966" pos:column="36"/></operator><name pos:line="966" pos:column="33">pool<pos:position pos:line="966" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="966" pos:column="39">cmd<pos:position pos:line="966" pos:column="42"/></name><operator pos:line="966" pos:column="42">-&gt;<pos:position pos:line="966" pos:column="47"/></operator><name pos:line="966" pos:column="44">cmd<pos:position pos:line="966" pos:column="47"/></name><operator pos:line="966" pos:column="47">-&gt;<pos:position pos:line="966" pos:column="52"/></operator><name pos:line="966" pos:column="49">name<pos:position pos:line="966" pos:column="53"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="967" pos:column="28">"&gt; directive missing closing '&gt;'"<pos:position pos:line="967" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="967" pos:column="63">NULL<pos:position pos:line="967" pos:column="67"/></name></expr></argument>)<pos:position pos:line="967" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="967" pos:column="69"/></return>
    }<pos:position pos:line="968" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="970" pos:column="5">arg<pos:position pos:line="970" pos:column="8"/></name><operator pos:line="970" pos:column="8">=<pos:position pos:line="970" pos:column="9"/></operator><call><name pos:line="970" pos:column="9">apr_pstrndup<pos:position pos:line="970" pos:column="21"/></name><argument_list pos:line="970" pos:column="21">(<argument><expr><name><name pos:line="970" pos:column="22">cmd<pos:position pos:line="970" pos:column="25"/></name><operator pos:line="970" pos:column="25">-&gt;<pos:position pos:line="970" pos:column="30"/></operator><name pos:line="970" pos:column="27">pool<pos:position pos:line="970" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="970" pos:column="33">arg<pos:position pos:line="970" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="970" pos:column="38">endp<pos:position pos:line="970" pos:column="42"/></name><operator pos:line="970" pos:column="42">-<pos:position pos:line="970" pos:column="43"/></operator><name pos:line="970" pos:column="43">arg<pos:position pos:line="970" pos:column="46"/></name></expr></argument>)<pos:position pos:line="970" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="970" pos:column="48"/></expr_stmt>

    <if pos:line="972" pos:column="5">if <condition pos:line="972" pos:column="8">(<expr><operator pos:line="972" pos:column="9">!<pos:position pos:line="972" pos:column="10"/></operator><name pos:line="972" pos:column="10">arg<pos:position pos:line="972" pos:column="13"/></name></expr>)<pos:position pos:line="972" pos:column="14"/></condition><then pos:line="972" pos:column="14"> <block pos:line="972" pos:column="15">{
        <if pos:line="973" pos:column="9">if <condition pos:line="973" pos:column="12">(<expr><name><name pos:line="973" pos:column="13">thiscmd<pos:position pos:line="973" pos:column="20"/></name><operator pos:line="973" pos:column="20">-&gt;<pos:position pos:line="973" pos:column="25"/></operator><name pos:line="973" pos:column="22">cmd_data<pos:position pos:line="973" pos:column="30"/></name></name></expr>)<pos:position pos:line="973" pos:column="31"/></condition><then pos:line="973" pos:column="31">
            <block type="pseudo"><return pos:line="974" pos:column="13">return <expr><literal type="string" pos:line="974" pos:column="20">"&lt;ProxyMatch &gt; block must specify a path"<pos:position pos:line="974" pos:column="67"/></literal></expr>;<pos:position pos:line="974" pos:column="62"/></return></block></then>
        <else pos:line="975" pos:column="9">else
            <block type="pseudo"><return pos:line="976" pos:column="13">return <expr><literal type="string" pos:line="976" pos:column="20">"&lt;Proxy &gt; block must specify a path"<pos:position pos:line="976" pos:column="62"/></literal></expr>;<pos:position pos:line="976" pos:column="57"/></return></block></else></if>
    }<pos:position pos:line="977" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="979" pos:column="5">cmd<pos:position pos:line="979" pos:column="8"/></name><operator pos:line="979" pos:column="8">-&gt;<pos:position pos:line="979" pos:column="13"/></operator><name pos:line="979" pos:column="10">path<pos:position pos:line="979" pos:column="14"/></name></name> <operator pos:line="979" pos:column="15">=<pos:position pos:line="979" pos:column="16"/></operator> <call><name pos:line="979" pos:column="17">ap_getword_conf<pos:position pos:line="979" pos:column="32"/></name><argument_list pos:line="979" pos:column="32">(<argument><expr><name><name pos:line="979" pos:column="33">cmd<pos:position pos:line="979" pos:column="36"/></name><operator pos:line="979" pos:column="36">-&gt;<pos:position pos:line="979" pos:column="41"/></operator><name pos:line="979" pos:column="38">pool<pos:position pos:line="979" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="979" pos:column="44">&amp;<pos:position pos:line="979" pos:column="49"/></operator><name pos:line="979" pos:column="45">arg<pos:position pos:line="979" pos:column="48"/></name></expr></argument>)<pos:position pos:line="979" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="979" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="980" pos:column="5">cmd<pos:position pos:line="980" pos:column="8"/></name><operator pos:line="980" pos:column="8">-&gt;<pos:position pos:line="980" pos:column="13"/></operator><name pos:line="980" pos:column="10">override<pos:position pos:line="980" pos:column="18"/></name></name> <operator pos:line="980" pos:column="19">=<pos:position pos:line="980" pos:column="20"/></operator> <name pos:line="980" pos:column="21">OR_ALL<pos:position pos:line="980" pos:column="27"/></name><operator pos:line="980" pos:column="27">|<pos:position pos:line="980" pos:column="28"/></operator><name pos:line="980" pos:column="28">ACCESS_CONF<pos:position pos:line="980" pos:column="39"/></name></expr>;<pos:position pos:line="980" pos:column="40"/></expr_stmt>

    <if pos:line="982" pos:column="5">if <condition pos:line="982" pos:column="8">(<expr><operator pos:line="982" pos:column="9">!<pos:position pos:line="982" pos:column="10"/></operator><call><name pos:line="982" pos:column="10">strncasecmp<pos:position pos:line="982" pos:column="21"/></name><argument_list pos:line="982" pos:column="21">(<argument><expr><name><name pos:line="982" pos:column="22">cmd<pos:position pos:line="982" pos:column="25"/></name><operator pos:line="982" pos:column="25">-&gt;<pos:position pos:line="982" pos:column="30"/></operator><name pos:line="982" pos:column="27">path<pos:position pos:line="982" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="982" pos:column="33">"proxy:"<pos:position pos:line="982" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="982" pos:column="43">6<pos:position pos:line="982" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="982" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="982" pos:column="46"/></condition><then pos:line="982" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="983" pos:column="9">cmd<pos:position pos:line="983" pos:column="12"/></name><operator pos:line="983" pos:column="12">-&gt;<pos:position pos:line="983" pos:column="17"/></operator><name pos:line="983" pos:column="14">path<pos:position pos:line="983" pos:column="18"/></name></name> <operator pos:line="983" pos:column="19">+=<pos:position pos:line="983" pos:column="21"/></operator> <literal type="number" pos:line="983" pos:column="22">6<pos:position pos:line="983" pos:column="23"/></literal></expr>;<pos:position pos:line="983" pos:column="24"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="985" pos:column="5">/* XXX Ignore case?  What if we proxy a case-insensitive server?!? 
     * While we are at it, shouldn't we also canonicalize the entire
     * scheme?  See proxy_fixup()
     */</comment>
    <if pos:line="989" pos:column="5">if <condition pos:line="989" pos:column="8">(<expr><name><name pos:line="989" pos:column="9">thiscmd<pos:position pos:line="989" pos:column="16"/></name><operator pos:line="989" pos:column="16">-&gt;<pos:position pos:line="989" pos:column="21"/></operator><name pos:line="989" pos:column="18">cmd_data<pos:position pos:line="989" pos:column="26"/></name></name></expr>)<pos:position pos:line="989" pos:column="27"/></condition><then pos:line="989" pos:column="27"> <block pos:line="989" pos:column="28">{ <comment type="block" pos:line="989" pos:column="30">/* &lt;ProxyMatch&gt; */</comment>
        <expr_stmt><expr><name pos:line="990" pos:column="9">r<pos:position pos:line="990" pos:column="10"/></name> <operator pos:line="990" pos:column="11">=<pos:position pos:line="990" pos:column="12"/></operator> <call><name pos:line="990" pos:column="13">ap_pregcomp<pos:position pos:line="990" pos:column="24"/></name><argument_list pos:line="990" pos:column="24">(<argument><expr><name><name pos:line="990" pos:column="25">cmd<pos:position pos:line="990" pos:column="28"/></name><operator pos:line="990" pos:column="28">-&gt;<pos:position pos:line="990" pos:column="33"/></operator><name pos:line="990" pos:column="30">pool<pos:position pos:line="990" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="990" pos:column="36">cmd<pos:position pos:line="990" pos:column="39"/></name><operator pos:line="990" pos:column="39">-&gt;<pos:position pos:line="990" pos:column="44"/></operator><name pos:line="990" pos:column="41">path<pos:position pos:line="990" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="990" pos:column="47">REG_EXTENDED<pos:position pos:line="990" pos:column="59"/></name></expr></argument>)<pos:position pos:line="990" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="990" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="991" pos:column="6"/></block></then>
    <elseif pos:line="992" pos:column="5">else <if pos:line="992" pos:column="10">if <condition pos:line="992" pos:column="13">(<expr><operator pos:line="992" pos:column="14">!<pos:position pos:line="992" pos:column="15"/></operator><call><name pos:line="992" pos:column="15">strcmp<pos:position pos:line="992" pos:column="21"/></name><argument_list pos:line="992" pos:column="21">(<argument><expr><name><name pos:line="992" pos:column="22">cmd<pos:position pos:line="992" pos:column="25"/></name><operator pos:line="992" pos:column="25">-&gt;<pos:position pos:line="992" pos:column="30"/></operator><name pos:line="992" pos:column="27">path<pos:position pos:line="992" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="992" pos:column="33">"~"<pos:position pos:line="992" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="992" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="992" pos:column="38"/></condition><then pos:line="992" pos:column="38"> <block pos:line="992" pos:column="39">{
        <expr_stmt><expr><name><name pos:line="993" pos:column="9">cmd<pos:position pos:line="993" pos:column="12"/></name><operator pos:line="993" pos:column="12">-&gt;<pos:position pos:line="993" pos:column="17"/></operator><name pos:line="993" pos:column="14">path<pos:position pos:line="993" pos:column="18"/></name></name> <operator pos:line="993" pos:column="19">=<pos:position pos:line="993" pos:column="20"/></operator> <call><name pos:line="993" pos:column="21">ap_getword_conf<pos:position pos:line="993" pos:column="36"/></name><argument_list pos:line="993" pos:column="36">(<argument><expr><name><name pos:line="993" pos:column="37">cmd<pos:position pos:line="993" pos:column="40"/></name><operator pos:line="993" pos:column="40">-&gt;<pos:position pos:line="993" pos:column="45"/></operator><name pos:line="993" pos:column="42">pool<pos:position pos:line="993" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="993" pos:column="48">&amp;<pos:position pos:line="993" pos:column="53"/></operator><name pos:line="993" pos:column="49">arg<pos:position pos:line="993" pos:column="52"/></name></expr></argument>)<pos:position pos:line="993" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="993" pos:column="54"/></expr_stmt>
        <if pos:line="994" pos:column="9">if <condition pos:line="994" pos:column="12">(<expr><operator pos:line="994" pos:column="13">!<pos:position pos:line="994" pos:column="14"/></operator><name><name pos:line="994" pos:column="14">cmd<pos:position pos:line="994" pos:column="17"/></name><operator pos:line="994" pos:column="17">-&gt;<pos:position pos:line="994" pos:column="22"/></operator><name pos:line="994" pos:column="19">path<pos:position pos:line="994" pos:column="23"/></name></name></expr>)<pos:position pos:line="994" pos:column="24"/></condition><then pos:line="994" pos:column="24">
            <block type="pseudo"><return pos:line="995" pos:column="13">return <expr><literal type="string" pos:line="995" pos:column="20">"&lt;Proxy ~ &gt; block must specify a path"<pos:position pos:line="995" pos:column="64"/></literal></expr>;<pos:position pos:line="995" pos:column="59"/></return></block></then></if>
        <if pos:line="996" pos:column="9">if <condition pos:line="996" pos:column="12">(<expr><call><name pos:line="996" pos:column="13">strncasecmp<pos:position pos:line="996" pos:column="24"/></name><argument_list pos:line="996" pos:column="24">(<argument><expr><name><name pos:line="996" pos:column="25">cmd<pos:position pos:line="996" pos:column="28"/></name><operator pos:line="996" pos:column="28">-&gt;<pos:position pos:line="996" pos:column="33"/></operator><name pos:line="996" pos:column="30">path<pos:position pos:line="996" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="996" pos:column="36">"proxy:"<pos:position pos:line="996" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="996" pos:column="46">6<pos:position pos:line="996" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="996" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="996" pos:column="49"/></condition><then pos:line="996" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="997" pos:column="13">cmd<pos:position pos:line="997" pos:column="16"/></name><operator pos:line="997" pos:column="16">-&gt;<pos:position pos:line="997" pos:column="21"/></operator><name pos:line="997" pos:column="18">path<pos:position pos:line="997" pos:column="22"/></name></name> <operator pos:line="997" pos:column="23">+=<pos:position pos:line="997" pos:column="25"/></operator> <literal type="number" pos:line="997" pos:column="26">6<pos:position pos:line="997" pos:column="27"/></literal></expr>;<pos:position pos:line="997" pos:column="28"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="998" pos:column="9">r<pos:position pos:line="998" pos:column="10"/></name> <operator pos:line="998" pos:column="11">=<pos:position pos:line="998" pos:column="12"/></operator> <call><name pos:line="998" pos:column="13">ap_pregcomp<pos:position pos:line="998" pos:column="24"/></name><argument_list pos:line="998" pos:column="24">(<argument><expr><name><name pos:line="998" pos:column="25">cmd<pos:position pos:line="998" pos:column="28"/></name><operator pos:line="998" pos:column="28">-&gt;<pos:position pos:line="998" pos:column="33"/></operator><name pos:line="998" pos:column="30">pool<pos:position pos:line="998" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="998" pos:column="36">cmd<pos:position pos:line="998" pos:column="39"/></name><operator pos:line="998" pos:column="39">-&gt;<pos:position pos:line="998" pos:column="44"/></operator><name pos:line="998" pos:column="41">path<pos:position pos:line="998" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="998" pos:column="47">REG_EXTENDED<pos:position pos:line="998" pos:column="59"/></name></expr></argument>)<pos:position pos:line="998" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="998" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="999" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="1001" pos:column="5">/* initialize our config and fetch it */</comment>
    <expr_stmt><expr><name pos:line="1002" pos:column="5">conf<pos:position pos:line="1002" pos:column="9"/></name> <operator pos:line="1002" pos:column="10">=<pos:position pos:line="1002" pos:column="11"/></operator> <call><name pos:line="1002" pos:column="12">ap_set_config_vectors<pos:position pos:line="1002" pos:column="33"/></name><argument_list pos:line="1002" pos:column="33">(<argument><expr><name><name pos:line="1002" pos:column="34">cmd<pos:position pos:line="1002" pos:column="37"/></name><operator pos:line="1002" pos:column="37">-&gt;<pos:position pos:line="1002" pos:column="42"/></operator><name pos:line="1002" pos:column="39">server<pos:position pos:line="1002" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="1002" pos:column="47">new_dir_conf<pos:position pos:line="1002" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="1002" pos:column="61">cmd<pos:position pos:line="1002" pos:column="64"/></name><operator pos:line="1002" pos:column="64">-&gt;<pos:position pos:line="1002" pos:column="69"/></operator><name pos:line="1002" pos:column="66">path<pos:position pos:line="1002" pos:column="70"/></name></name></expr></argument>,
                                 <argument><expr><operator pos:line="1003" pos:column="34">&amp;<pos:position pos:line="1003" pos:column="39"/></operator><name pos:line="1003" pos:column="35">proxy_module<pos:position pos:line="1003" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="1003" pos:column="49">cmd<pos:position pos:line="1003" pos:column="52"/></name><operator pos:line="1003" pos:column="52">-&gt;<pos:position pos:line="1003" pos:column="57"/></operator><name pos:line="1003" pos:column="54">pool<pos:position pos:line="1003" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="1003" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="1003" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><name pos:line="1005" pos:column="5">errmsg<pos:position pos:line="1005" pos:column="11"/></name> <operator pos:line="1005" pos:column="12">=<pos:position pos:line="1005" pos:column="13"/></operator> <call><name pos:line="1005" pos:column="14">ap_walk_config<pos:position pos:line="1005" pos:column="28"/></name><argument_list pos:line="1005" pos:column="28">(<argument><expr><name><name pos:line="1005" pos:column="29">cmd<pos:position pos:line="1005" pos:column="32"/></name><operator pos:line="1005" pos:column="32">-&gt;<pos:position pos:line="1005" pos:column="37"/></operator><name pos:line="1005" pos:column="34">directive<pos:position pos:line="1005" pos:column="43"/></name><operator pos:line="1005" pos:column="43">-&gt;<pos:position pos:line="1005" pos:column="48"/></operator><name pos:line="1005" pos:column="45">first_child<pos:position pos:line="1005" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="1005" pos:column="58">cmd<pos:position pos:line="1005" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="1005" pos:column="63">new_dir_conf<pos:position pos:line="1005" pos:column="75"/></name></expr></argument>)<pos:position pos:line="1005" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="1005" pos:column="77"/></expr_stmt>
    <if pos:line="1006" pos:column="5">if <condition pos:line="1006" pos:column="8">(<expr><name pos:line="1006" pos:column="9">errmsg<pos:position pos:line="1006" pos:column="15"/></name> <operator pos:line="1006" pos:column="16">!=<pos:position pos:line="1006" pos:column="18"/></operator> <name pos:line="1006" pos:column="19">NULL<pos:position pos:line="1006" pos:column="23"/></name></expr>)<pos:position pos:line="1006" pos:column="24"/></condition><then pos:line="1006" pos:column="24">
        <block type="pseudo"><return pos:line="1007" pos:column="9">return <expr><name pos:line="1007" pos:column="16">errmsg<pos:position pos:line="1007" pos:column="22"/></name></expr>;<pos:position pos:line="1007" pos:column="23"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="1009" pos:column="5">conf<pos:position pos:line="1009" pos:column="9"/></name><operator pos:line="1009" pos:column="9">-&gt;<pos:position pos:line="1009" pos:column="14"/></operator><name pos:line="1009" pos:column="11">r<pos:position pos:line="1009" pos:column="12"/></name></name> <operator pos:line="1009" pos:column="13">=<pos:position pos:line="1009" pos:column="14"/></operator> <name pos:line="1009" pos:column="15">r<pos:position pos:line="1009" pos:column="16"/></name></expr>;<pos:position pos:line="1009" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1010" pos:column="5">conf<pos:position pos:line="1010" pos:column="9"/></name><operator pos:line="1010" pos:column="9">-&gt;<pos:position pos:line="1010" pos:column="14"/></operator><name pos:line="1010" pos:column="11">p<pos:position pos:line="1010" pos:column="12"/></name></name> <operator pos:line="1010" pos:column="13">=<pos:position pos:line="1010" pos:column="14"/></operator> <name><name pos:line="1010" pos:column="15">cmd<pos:position pos:line="1010" pos:column="18"/></name><operator pos:line="1010" pos:column="18">-&gt;<pos:position pos:line="1010" pos:column="23"/></operator><name pos:line="1010" pos:column="20">path<pos:position pos:line="1010" pos:column="24"/></name></name></expr>;<pos:position pos:line="1010" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1011" pos:column="5">conf<pos:position pos:line="1011" pos:column="9"/></name><operator pos:line="1011" pos:column="9">-&gt;<pos:position pos:line="1011" pos:column="14"/></operator><name pos:line="1011" pos:column="11">p_is_fnmatch<pos:position pos:line="1011" pos:column="23"/></name></name> <operator pos:line="1011" pos:column="24">=<pos:position pos:line="1011" pos:column="25"/></operator> <call><name pos:line="1011" pos:column="26">apr_fnmatch_test<pos:position pos:line="1011" pos:column="42"/></name><argument_list pos:line="1011" pos:column="42">(<argument><expr><name><name pos:line="1011" pos:column="43">conf<pos:position pos:line="1011" pos:column="47"/></name><operator pos:line="1011" pos:column="47">-&gt;<pos:position pos:line="1011" pos:column="52"/></operator><name pos:line="1011" pos:column="49">p<pos:position pos:line="1011" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="1011" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1011" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="1013" pos:column="5">ap_add_per_proxy_conf<pos:position pos:line="1013" pos:column="26"/></name><argument_list pos:line="1013" pos:column="26">(<argument><expr><name><name pos:line="1013" pos:column="27">cmd<pos:position pos:line="1013" pos:column="30"/></name><operator pos:line="1013" pos:column="30">-&gt;<pos:position pos:line="1013" pos:column="35"/></operator><name pos:line="1013" pos:column="32">server<pos:position pos:line="1013" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="1013" pos:column="40">new_dir_conf<pos:position pos:line="1013" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1013" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1013" pos:column="54"/></expr_stmt>

    <if pos:line="1015" pos:column="5">if <condition pos:line="1015" pos:column="8">(<expr><operator pos:line="1015" pos:column="9">*<pos:position pos:line="1015" pos:column="10"/></operator><name pos:line="1015" pos:column="10">arg<pos:position pos:line="1015" pos:column="13"/></name> <operator pos:line="1015" pos:column="14">!=<pos:position pos:line="1015" pos:column="16"/></operator> <literal type="char" pos:line="1015" pos:column="17">'\0'<pos:position pos:line="1015" pos:column="21"/></literal></expr>)<pos:position pos:line="1015" pos:column="22"/></condition><then pos:line="1015" pos:column="22"> <block pos:line="1015" pos:column="23">{
        <return pos:line="1016" pos:column="9">return <expr><call><name pos:line="1016" pos:column="16">apr_pstrcat<pos:position pos:line="1016" pos:column="27"/></name><argument_list pos:line="1016" pos:column="27">(<argument><expr><name><name pos:line="1016" pos:column="28">cmd<pos:position pos:line="1016" pos:column="31"/></name><operator pos:line="1016" pos:column="31">-&gt;<pos:position pos:line="1016" pos:column="36"/></operator><name pos:line="1016" pos:column="33">pool<pos:position pos:line="1016" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1016" pos:column="39">"Multiple "<pos:position pos:line="1016" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="1016" pos:column="52">thiscmd<pos:position pos:line="1016" pos:column="59"/></name><operator pos:line="1016" pos:column="59">-&gt;<pos:position pos:line="1016" pos:column="64"/></operator><name pos:line="1016" pos:column="61">name<pos:position pos:line="1016" pos:column="65"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="1017" pos:column="28">"&gt; arguments not (yet) supported."<pos:position pos:line="1017" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="1017" pos:column="64">NULL<pos:position pos:line="1017" pos:column="68"/></name></expr></argument>)<pos:position pos:line="1017" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="1017" pos:column="70"/></return>
    }<pos:position pos:line="1018" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="1020" pos:column="5">cmd<pos:position pos:line="1020" pos:column="8"/></name><operator pos:line="1020" pos:column="8">-&gt;<pos:position pos:line="1020" pos:column="13"/></operator><name pos:line="1020" pos:column="10">path<pos:position pos:line="1020" pos:column="14"/></name></name> <operator pos:line="1020" pos:column="15">=<pos:position pos:line="1020" pos:column="16"/></operator> <name pos:line="1020" pos:column="17">old_path<pos:position pos:line="1020" pos:column="25"/></name></expr>;<pos:position pos:line="1020" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1021" pos:column="5">cmd<pos:position pos:line="1021" pos:column="8"/></name><operator pos:line="1021" pos:column="8">-&gt;<pos:position pos:line="1021" pos:column="13"/></operator><name pos:line="1021" pos:column="10">override<pos:position pos:line="1021" pos:column="18"/></name></name> <operator pos:line="1021" pos:column="19">=<pos:position pos:line="1021" pos:column="20"/></operator> <name pos:line="1021" pos:column="21">old_overrides<pos:position pos:line="1021" pos:column="34"/></name></expr>;<pos:position pos:line="1021" pos:column="35"/></expr_stmt>

    <return pos:line="1023" pos:column="5">return <expr><name pos:line="1023" pos:column="12">NULL<pos:position pos:line="1023" pos:column="16"/></name></expr>;<pos:position pos:line="1023" pos:column="17"/></return>
}<pos:position pos:line="1024" pos:column="2"/></block></function>

<decl_stmt><decl><specifier pos:line="1026" pos:column="1">static<pos:position pos:line="1026" pos:column="7"/></specifier> <type><specifier pos:line="1026" pos:column="8">const<pos:position pos:line="1026" pos:column="13"/></specifier> <name pos:line="1026" pos:column="14">command_rec<pos:position pos:line="1026" pos:column="25"/></name></type> <name><name pos:line="1026" pos:column="26">proxy_cmds<pos:position pos:line="1026" pos:column="36"/></name><index pos:line="1026" pos:column="36">[]<pos:position pos:line="1026" pos:column="38"/></index></name> <init pos:line="1026" pos:column="39">=
<expr><block pos:line="1027" pos:column="1">{
    <expr><call><name pos:line="1028" pos:column="5">AP_INIT_RAW_ARGS<pos:position pos:line="1028" pos:column="21"/></name><argument_list pos:line="1028" pos:column="21">(<argument><expr><literal type="string" pos:line="1028" pos:column="22">"&lt;Proxy"<pos:position pos:line="1028" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="1028" pos:column="32">proxysection<pos:position pos:line="1028" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1028" pos:column="46">NULL<pos:position pos:line="1028" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1028" pos:column="52">RSRC_CONF<pos:position pos:line="1028" pos:column="61"/></name></expr></argument>, 
    <argument><expr><literal type="string" pos:line="1029" pos:column="5">"Container for directives affecting resources located in the proxied "<pos:position pos:line="1029" pos:column="75"/></literal>
    <literal type="string" pos:line="1030" pos:column="5">"location"<pos:position pos:line="1030" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="1030" pos:column="16"/></argument_list></call></expr>,
    <expr><call><name pos:line="1031" pos:column="5">AP_INIT_RAW_ARGS<pos:position pos:line="1031" pos:column="21"/></name><argument_list pos:line="1031" pos:column="21">(<argument><expr><literal type="string" pos:line="1031" pos:column="22">"&lt;ProxyMatch"<pos:position pos:line="1031" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="1031" pos:column="37">proxysection<pos:position pos:line="1031" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="1031" pos:column="51">(<pos:position pos:line="1031" pos:column="52"/></operator><name pos:line="1031" pos:column="52">void<pos:position pos:line="1031" pos:column="56"/></name><operator pos:line="1031" pos:column="56">*<pos:position pos:line="1031" pos:column="57"/></operator><operator pos:line="1031" pos:column="57">)<pos:position pos:line="1031" pos:column="58"/></operator><literal type="number" pos:line="1031" pos:column="58">1<pos:position pos:line="1031" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="1031" pos:column="61">RSRC_CONF<pos:position pos:line="1031" pos:column="70"/></name></expr></argument>,
    <argument><expr><literal type="string" pos:line="1032" pos:column="5">"Container for directives affecting resources located in the proxied "<pos:position pos:line="1032" pos:column="75"/></literal>
    <literal type="string" pos:line="1033" pos:column="5">"location, in regular expression syntax"<pos:position pos:line="1033" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="1033" pos:column="46"/></argument_list></call></expr>,
    <expr><call><name pos:line="1034" pos:column="5">AP_INIT_FLAG<pos:position pos:line="1034" pos:column="17"/></name><argument_list pos:line="1034" pos:column="17">(<argument><expr><literal type="string" pos:line="1034" pos:column="18">"ProxyRequests"<pos:position pos:line="1034" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="1034" pos:column="35">set_proxy_req<pos:position pos:line="1034" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1034" pos:column="50">NULL<pos:position pos:line="1034" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1034" pos:column="56">RSRC_CONF<pos:position pos:line="1034" pos:column="65"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1035" pos:column="6">"on if the true proxy requests should be accepted"<pos:position pos:line="1035" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="1035" pos:column="57"/></argument_list></call></expr>,
    <expr><call><name pos:line="1036" pos:column="5">AP_INIT_TAKE2<pos:position pos:line="1036" pos:column="18"/></name><argument_list pos:line="1036" pos:column="18">(<argument><expr><literal type="string" pos:line="1036" pos:column="19">"ProxyRemote"<pos:position pos:line="1036" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="1036" pos:column="34">add_proxy_noregex<pos:position pos:line="1036" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1036" pos:column="53">NULL<pos:position pos:line="1036" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1036" pos:column="59">RSRC_CONF<pos:position pos:line="1036" pos:column="68"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1037" pos:column="6">"a scheme, partial URL or '*' and a proxy server"<pos:position pos:line="1037" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="1037" pos:column="56"/></argument_list></call></expr>,
    <expr><call><name pos:line="1038" pos:column="5">AP_INIT_TAKE2<pos:position pos:line="1038" pos:column="18"/></name><argument_list pos:line="1038" pos:column="18">(<argument><expr><literal type="string" pos:line="1038" pos:column="19">"ProxyRemoteMatch"<pos:position pos:line="1038" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="1038" pos:column="39">add_proxy_regex<pos:position pos:line="1038" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1038" pos:column="56">NULL<pos:position pos:line="1038" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1038" pos:column="62">RSRC_CONF<pos:position pos:line="1038" pos:column="71"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1039" pos:column="6">"a regex pattern and a proxy server"<pos:position pos:line="1039" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="1039" pos:column="43"/></argument_list></call></expr>,
    <expr><call><name pos:line="1040" pos:column="5">AP_INIT_TAKE12<pos:position pos:line="1040" pos:column="19"/></name><argument_list pos:line="1040" pos:column="19">(<argument><expr><literal type="string" pos:line="1040" pos:column="20">"ProxyPass"<pos:position pos:line="1040" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="1040" pos:column="33">add_pass<pos:position pos:line="1040" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="1040" pos:column="43">NULL<pos:position pos:line="1040" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1040" pos:column="49">RSRC_CONF<pos:position pos:line="1040" pos:column="58"/></name><operator pos:line="1040" pos:column="58">|<pos:position pos:line="1040" pos:column="59"/></operator><name pos:line="1040" pos:column="59">ACCESS_CONF<pos:position pos:line="1040" pos:column="70"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1041" pos:column="6">"a virtual path and a URL"<pos:position pos:line="1041" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="1041" pos:column="33"/></argument_list></call></expr>,
    <expr><call><name pos:line="1042" pos:column="5">AP_INIT_TAKE12<pos:position pos:line="1042" pos:column="19"/></name><argument_list pos:line="1042" pos:column="19">(<argument><expr><literal type="string" pos:line="1042" pos:column="20">"ProxyPassReverse"<pos:position pos:line="1042" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="1042" pos:column="40">add_pass_reverse<pos:position pos:line="1042" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="1042" pos:column="58">NULL<pos:position pos:line="1042" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="1042" pos:column="64">RSRC_CONF<pos:position pos:line="1042" pos:column="73"/></name><operator pos:line="1042" pos:column="73">|<pos:position pos:line="1042" pos:column="74"/></operator><name pos:line="1042" pos:column="74">ACCESS_CONF<pos:position pos:line="1042" pos:column="85"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1043" pos:column="6">"a virtual path and a URL for reverse proxy behaviour"<pos:position pos:line="1043" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="1043" pos:column="61"/></argument_list></call></expr>,
    <expr><call><name pos:line="1044" pos:column="5">AP_INIT_ITERATE<pos:position pos:line="1044" pos:column="20"/></name><argument_list pos:line="1044" pos:column="20">(<argument><expr><literal type="string" pos:line="1044" pos:column="21">"ProxyBlock"<pos:position pos:line="1044" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="1044" pos:column="35">set_proxy_exclude<pos:position pos:line="1044" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1044" pos:column="54">NULL<pos:position pos:line="1044" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="1044" pos:column="60">RSRC_CONF<pos:position pos:line="1044" pos:column="69"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1045" pos:column="6">"A list of names, hosts or domains to which the proxy will not connect"<pos:position pos:line="1045" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="1045" pos:column="78"/></argument_list></call></expr>,
    <expr><call><name pos:line="1046" pos:column="5">AP_INIT_TAKE1<pos:position pos:line="1046" pos:column="18"/></name><argument_list pos:line="1046" pos:column="18">(<argument><expr><literal type="string" pos:line="1046" pos:column="19">"ProxyReceiveBufferSize"<pos:position pos:line="1046" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="1046" pos:column="45">set_recv_buffer_size<pos:position pos:line="1046" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="1046" pos:column="67">NULL<pos:position pos:line="1046" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="1046" pos:column="73">RSRC_CONF<pos:position pos:line="1046" pos:column="82"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1047" pos:column="6">"Receive buffer size for outgoing HTTP and FTP connections in bytes"<pos:position pos:line="1047" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="1047" pos:column="75"/></argument_list></call></expr>,
    <expr><call><name pos:line="1048" pos:column="5">AP_INIT_TAKE1<pos:position pos:line="1048" pos:column="18"/></name><argument_list pos:line="1048" pos:column="18">(<argument><expr><literal type="string" pos:line="1048" pos:column="19">"ProxyIOBufferSize"<pos:position pos:line="1048" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="1048" pos:column="40">set_io_buffer_size<pos:position pos:line="1048" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="1048" pos:column="60">NULL<pos:position pos:line="1048" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="1048" pos:column="66">RSRC_CONF<pos:position pos:line="1048" pos:column="75"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1049" pos:column="6">"IO buffer size for outgoing HTTP and FTP connections in bytes"<pos:position pos:line="1049" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="1049" pos:column="70"/></argument_list></call></expr>,
    <expr><call><name pos:line="1050" pos:column="5">AP_INIT_TAKE1<pos:position pos:line="1050" pos:column="18"/></name><argument_list pos:line="1050" pos:column="18">(<argument><expr><literal type="string" pos:line="1050" pos:column="19">"ProxyMaxForwards"<pos:position pos:line="1050" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="1050" pos:column="39">set_max_forwards<pos:position pos:line="1050" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1050" pos:column="57">NULL<pos:position pos:line="1050" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="1050" pos:column="63">RSRC_CONF<pos:position pos:line="1050" pos:column="72"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1051" pos:column="6">"The maximum number of proxies a request may be forwarded through."<pos:position pos:line="1051" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="1051" pos:column="74"/></argument_list></call></expr>,
    <expr><call><name pos:line="1052" pos:column="5">AP_INIT_ITERATE<pos:position pos:line="1052" pos:column="20"/></name><argument_list pos:line="1052" pos:column="20">(<argument><expr><literal type="string" pos:line="1052" pos:column="21">"NoProxy"<pos:position pos:line="1052" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="1052" pos:column="32">set_proxy_dirconn<pos:position pos:line="1052" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="1052" pos:column="51">NULL<pos:position pos:line="1052" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1052" pos:column="57">RSRC_CONF<pos:position pos:line="1052" pos:column="66"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1053" pos:column="6">"A list of domains, hosts, or subnets to which the proxy will connect directly"<pos:position pos:line="1053" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="1053" pos:column="86"/></argument_list></call></expr>,
    <expr><call><name pos:line="1054" pos:column="5">AP_INIT_TAKE1<pos:position pos:line="1054" pos:column="18"/></name><argument_list pos:line="1054" pos:column="18">(<argument><expr><literal type="string" pos:line="1054" pos:column="19">"ProxyDomain"<pos:position pos:line="1054" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="1054" pos:column="34">set_proxy_domain<pos:position pos:line="1054" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1054" pos:column="52">NULL<pos:position pos:line="1054" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="1054" pos:column="58">RSRC_CONF<pos:position pos:line="1054" pos:column="67"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1055" pos:column="6">"The default intranet domain name (in absence of a domain in the URL)"<pos:position pos:line="1055" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="1055" pos:column="77"/></argument_list></call></expr>,
    <expr><call><name pos:line="1056" pos:column="5">AP_INIT_ITERATE<pos:position pos:line="1056" pos:column="20"/></name><argument_list pos:line="1056" pos:column="20">(<argument><expr><literal type="string" pos:line="1056" pos:column="21">"AllowCONNECT"<pos:position pos:line="1056" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="1056" pos:column="37">set_allowed_ports<pos:position pos:line="1056" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1056" pos:column="56">NULL<pos:position pos:line="1056" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1056" pos:column="62">RSRC_CONF<pos:position pos:line="1056" pos:column="71"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1057" pos:column="6">"A list of ports which CONNECT may connect to"<pos:position pos:line="1057" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="1057" pos:column="53"/></argument_list></call></expr>,
    <expr><call><name pos:line="1058" pos:column="5">AP_INIT_TAKE1<pos:position pos:line="1058" pos:column="18"/></name><argument_list pos:line="1058" pos:column="18">(<argument><expr><literal type="string" pos:line="1058" pos:column="19">"ProxyVia"<pos:position pos:line="1058" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="1058" pos:column="31">set_via_opt<pos:position pos:line="1058" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1058" pos:column="44">NULL<pos:position pos:line="1058" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1058" pos:column="50">RSRC_CONF<pos:position pos:line="1058" pos:column="59"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1059" pos:column="6">"Configure Via: proxy header header to one of: on | off | block | full"<pos:position pos:line="1059" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="1059" pos:column="78"/></argument_list></call></expr>,
    <expr><call><name pos:line="1060" pos:column="5">AP_INIT_FLAG<pos:position pos:line="1060" pos:column="17"/></name><argument_list pos:line="1060" pos:column="17">(<argument><expr><literal type="string" pos:line="1060" pos:column="18">"ProxyErrorOverride"<pos:position pos:line="1060" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="1060" pos:column="40">set_proxy_error_override<pos:position pos:line="1060" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="1060" pos:column="66">NULL<pos:position pos:line="1060" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="1060" pos:column="72">RSRC_CONF<pos:position pos:line="1060" pos:column="81"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1061" pos:column="6">"use our error handling pages instead of the servers' we are proxying"<pos:position pos:line="1061" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="1061" pos:column="77"/></argument_list></call></expr>,
    <expr><call><name pos:line="1062" pos:column="5">AP_INIT_FLAG<pos:position pos:line="1062" pos:column="17"/></name><argument_list pos:line="1062" pos:column="17">(<argument><expr><literal type="string" pos:line="1062" pos:column="18">"ProxyPreserveHost"<pos:position pos:line="1062" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="1062" pos:column="39">set_preserve_host<pos:position pos:line="1062" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="1062" pos:column="58">NULL<pos:position pos:line="1062" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="1062" pos:column="64">RSRC_CONF<pos:position pos:line="1062" pos:column="73"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1063" pos:column="6">"on if we should preserve host header while proxying"<pos:position pos:line="1063" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="1063" pos:column="60"/></argument_list></call></expr>,
    <expr><call><name pos:line="1064" pos:column="5">AP_INIT_TAKE1<pos:position pos:line="1064" pos:column="18"/></name><argument_list pos:line="1064" pos:column="18">(<argument><expr><literal type="string" pos:line="1064" pos:column="19">"ProxyTimeout"<pos:position pos:line="1064" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="1064" pos:column="35">set_proxy_timeout<pos:position pos:line="1064" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1064" pos:column="54">NULL<pos:position pos:line="1064" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="1064" pos:column="60">RSRC_CONF<pos:position pos:line="1064" pos:column="69"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1065" pos:column="6">"Set the timeout (in seconds) for a proxied connection. "<pos:position pos:line="1065" pos:column="63"/></literal>
     <literal type="string" pos:line="1066" pos:column="6">"This overrides the server timeout"<pos:position pos:line="1066" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="1066" pos:column="42"/></argument_list></call></expr>,
    <expr><call><name pos:line="1067" pos:column="5">AP_INIT_TAKE1<pos:position pos:line="1067" pos:column="18"/></name><argument_list pos:line="1067" pos:column="18">(<argument><expr><literal type="string" pos:line="1067" pos:column="19">"ProxyBadHeader"<pos:position pos:line="1067" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="1067" pos:column="37">set_bad_opt<pos:position pos:line="1067" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1067" pos:column="50">NULL<pos:position pos:line="1067" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1067" pos:column="56">RSRC_CONF<pos:position pos:line="1067" pos:column="65"/></name></expr></argument>,
     <argument><expr><literal type="string" pos:line="1068" pos:column="6">"How to handle bad header line in response: IsError | Ignore | StartBody"<pos:position pos:line="1068" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="1068" pos:column="80"/></argument_list></call></expr>,
 
    <expr><block pos:line="1070" pos:column="5">{<expr><name pos:line="1070" pos:column="6">NULL<pos:position pos:line="1070" pos:column="10"/></name></expr>}<pos:position pos:line="1070" pos:column="11"/></block></expr>
}<pos:position pos:line="1071" pos:column="2"/></block></expr></init></decl>;<pos:position pos:line="1071" pos:column="3"/></decl_stmt>

<expr_stmt><expr><call><name pos:line="1073" pos:column="1">APR_DECLARE_OPTIONAL_FN<pos:position pos:line="1073" pos:column="24"/></name><argument_list pos:line="1073" pos:column="24">(<argument><expr><name pos:line="1073" pos:column="25">int<pos:position pos:line="1073" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1073" pos:column="30">ssl_proxy_enable<pos:position pos:line="1073" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="1073" pos:column="48">(<pos:position pos:line="1073" pos:column="49"/></operator><name pos:line="1073" pos:column="49">conn_rec<pos:position pos:line="1073" pos:column="57"/></name> <operator pos:line="1073" pos:column="58">*<pos:position pos:line="1073" pos:column="59"/></operator><operator pos:line="1073" pos:column="59">)<pos:position pos:line="1073" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="1073" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1073" pos:column="62"/></expr_stmt>
<expr_stmt><expr><call><name pos:line="1074" pos:column="1">APR_DECLARE_OPTIONAL_FN<pos:position pos:line="1074" pos:column="24"/></name><argument_list pos:line="1074" pos:column="24">(<argument><expr><name pos:line="1074" pos:column="25">int<pos:position pos:line="1074" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1074" pos:column="30">ssl_engine_disable<pos:position pos:line="1074" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="1074" pos:column="50">(<pos:position pos:line="1074" pos:column="51"/></operator><name pos:line="1074" pos:column="51">conn_rec<pos:position pos:line="1074" pos:column="59"/></name> <operator pos:line="1074" pos:column="60">*<pos:position pos:line="1074" pos:column="61"/></operator><operator pos:line="1074" pos:column="61">)<pos:position pos:line="1074" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="1074" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1074" pos:column="64"/></expr_stmt>

<expr_stmt><expr><specifier pos:line="1076" pos:column="1">static<pos:position pos:line="1076" pos:column="7"/></specifier> <call><name pos:line="1076" pos:column="8">APR_OPTIONAL_FN_TYPE<pos:position pos:line="1076" pos:column="28"/></name><argument_list pos:line="1076" pos:column="28">(<argument><expr><name pos:line="1076" pos:column="29">ssl_proxy_enable<pos:position pos:line="1076" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1076" pos:column="46"/></argument_list></call> <operator pos:line="1076" pos:column="47">*<pos:position pos:line="1076" pos:column="48"/></operator><name pos:line="1076" pos:column="48">proxy_ssl_enable<pos:position pos:line="1076" pos:column="64"/></name> <operator pos:line="1076" pos:column="65">=<pos:position pos:line="1076" pos:column="66"/></operator> <name pos:line="1076" pos:column="67">NULL<pos:position pos:line="1076" pos:column="71"/></name></expr>;<pos:position pos:line="1076" pos:column="72"/></expr_stmt>
<expr_stmt><expr><specifier pos:line="1077" pos:column="1">static<pos:position pos:line="1077" pos:column="7"/></specifier> <call><name pos:line="1077" pos:column="8">APR_OPTIONAL_FN_TYPE<pos:position pos:line="1077" pos:column="28"/></name><argument_list pos:line="1077" pos:column="28">(<argument><expr><name pos:line="1077" pos:column="29">ssl_engine_disable<pos:position pos:line="1077" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1077" pos:column="48"/></argument_list></call> <operator pos:line="1077" pos:column="49">*<pos:position pos:line="1077" pos:column="50"/></operator><name pos:line="1077" pos:column="50">proxy_ssl_disable<pos:position pos:line="1077" pos:column="67"/></name> <operator pos:line="1077" pos:column="68">=<pos:position pos:line="1077" pos:column="69"/></operator> <name pos:line="1077" pos:column="70">NULL<pos:position pos:line="1077" pos:column="74"/></name></expr>;<pos:position pos:line="1077" pos:column="75"/></expr_stmt>

<macro><name pos:line="1079" pos:column="1">PROXY_DECLARE<pos:position pos:line="1079" pos:column="14"/></name><argument_list pos:line="1079" pos:column="14">(<argument pos:line="1079" pos:column="15">int<pos:position pos:line="1079" pos:column="18"/></argument>)<pos:position pos:line="1079" pos:column="19"/></argument_list></macro> <macro><name pos:line="1079" pos:column="20">ap_proxy_ssl_enable<pos:position pos:line="1079" pos:column="39"/></name><argument_list pos:line="1079" pos:column="39">(<argument pos:line="1079" pos:column="40">conn_rec *c<pos:position pos:line="1079" pos:column="51"/></argument>)<pos:position pos:line="1079" pos:column="52"/></argument_list></macro>
<block pos:line="1080" pos:column="1">{
    <comment type="block" pos:line="1081" pos:column="5">/* 
     * if c == NULL just check if the optional function was imported
     * else run the optional function so ssl filters are inserted
     */</comment>
    <if pos:line="1085" pos:column="5">if <condition pos:line="1085" pos:column="8">(<expr><name pos:line="1085" pos:column="9">proxy_ssl_enable<pos:position pos:line="1085" pos:column="25"/></name></expr>)<pos:position pos:line="1085" pos:column="26"/></condition><then pos:line="1085" pos:column="26"> <block pos:line="1085" pos:column="27">{
        <return pos:line="1086" pos:column="9">return <expr><ternary><condition><expr><name pos:line="1086" pos:column="16">c<pos:position pos:line="1086" pos:column="17"/></name></expr> ?<pos:position pos:line="1086" pos:column="19"/></condition><then pos:line="1086" pos:column="19"> <expr><call><name pos:line="1086" pos:column="20">proxy_ssl_enable<pos:position pos:line="1086" pos:column="36"/></name><argument_list pos:line="1086" pos:column="36">(<argument><expr><name pos:line="1086" pos:column="37">c<pos:position pos:line="1086" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1086" pos:column="39"/></argument_list></call></expr> <pos:position pos:line="1086" pos:column="40"/></then><else pos:line="1086" pos:column="40">: <expr><literal type="number" pos:line="1086" pos:column="42">1<pos:position pos:line="1086" pos:column="43"/></literal></expr></else></ternary></expr>;<pos:position pos:line="1086" pos:column="44"/></return>
    }<pos:position pos:line="1087" pos:column="6"/></block></then></if>

    <return pos:line="1089" pos:column="5">return <expr><literal type="number" pos:line="1089" pos:column="12">0<pos:position pos:line="1089" pos:column="13"/></literal></expr>;<pos:position pos:line="1089" pos:column="14"/></return>
}<pos:position pos:line="1090" pos:column="2"/></block>

<macro><name pos:line="1092" pos:column="1">PROXY_DECLARE<pos:position pos:line="1092" pos:column="14"/></name><argument_list pos:line="1092" pos:column="14">(<argument pos:line="1092" pos:column="15">int<pos:position pos:line="1092" pos:column="18"/></argument>)<pos:position pos:line="1092" pos:column="19"/></argument_list></macro> <macro><name pos:line="1092" pos:column="20">ap_proxy_ssl_disable<pos:position pos:line="1092" pos:column="40"/></name><argument_list pos:line="1092" pos:column="40">(<argument pos:line="1092" pos:column="41">conn_rec *c<pos:position pos:line="1092" pos:column="52"/></argument>)<pos:position pos:line="1092" pos:column="53"/></argument_list></macro>
<block pos:line="1093" pos:column="1">{
    <if pos:line="1094" pos:column="5">if <condition pos:line="1094" pos:column="8">(<expr><name pos:line="1094" pos:column="9">proxy_ssl_disable<pos:position pos:line="1094" pos:column="26"/></name></expr>)<pos:position pos:line="1094" pos:column="27"/></condition><then pos:line="1094" pos:column="27"> <block pos:line="1094" pos:column="28">{
        <return pos:line="1095" pos:column="9">return <expr><call><name pos:line="1095" pos:column="16">proxy_ssl_disable<pos:position pos:line="1095" pos:column="33"/></name><argument_list pos:line="1095" pos:column="33">(<argument><expr><name pos:line="1095" pos:column="34">c<pos:position pos:line="1095" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1095" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1095" pos:column="37"/></return>
    }<pos:position pos:line="1096" pos:column="6"/></block></then></if>

    <return pos:line="1098" pos:column="5">return <expr><literal type="number" pos:line="1098" pos:column="12">0<pos:position pos:line="1098" pos:column="13"/></literal></expr>;<pos:position pos:line="1098" pos:column="14"/></return>
}<pos:position pos:line="1099" pos:column="2"/></block>

<function><specifier pos:line="1101" pos:column="1">static<pos:position pos:line="1101" pos:column="7"/></specifier> <type><name pos:line="1101" pos:column="8">int<pos:position pos:line="1101" pos:column="11"/></name></type> <name pos:line="1101" pos:column="12">proxy_post_config<pos:position pos:line="1101" pos:column="29"/></name><parameter_list pos:line="1101" pos:column="29">(<parameter><decl><type><name pos:line="1101" pos:column="30">apr_pool_t<pos:position pos:line="1101" pos:column="40"/></name> <modifier pos:line="1101" pos:column="41">*<pos:position pos:line="1101" pos:column="42"/></modifier></type><name pos:line="1101" pos:column="42">pconf<pos:position pos:line="1101" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1101" pos:column="49">apr_pool_t<pos:position pos:line="1101" pos:column="59"/></name> <modifier pos:line="1101" pos:column="60">*<pos:position pos:line="1101" pos:column="61"/></modifier></type><name pos:line="1101" pos:column="61">plog<pos:position pos:line="1101" pos:column="65"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="1102" pos:column="30">apr_pool_t<pos:position pos:line="1102" pos:column="40"/></name> <modifier pos:line="1102" pos:column="41">*<pos:position pos:line="1102" pos:column="42"/></modifier></type><name pos:line="1102" pos:column="42">ptemp<pos:position pos:line="1102" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1102" pos:column="49">server_rec<pos:position pos:line="1102" pos:column="59"/></name> <modifier pos:line="1102" pos:column="60">*<pos:position pos:line="1102" pos:column="61"/></modifier></type><name pos:line="1102" pos:column="61">s<pos:position pos:line="1102" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1102" pos:column="63"/></parameter_list>
<block pos:line="1103" pos:column="1">{
    <expr_stmt><expr><name pos:line="1104" pos:column="5">proxy_ssl_enable<pos:position pos:line="1104" pos:column="21"/></name> <operator pos:line="1104" pos:column="22">=<pos:position pos:line="1104" pos:column="23"/></operator> <call><name pos:line="1104" pos:column="24">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="1104" pos:column="48"/></name><argument_list pos:line="1104" pos:column="48">(<argument><expr><name pos:line="1104" pos:column="49">ssl_proxy_enable<pos:position pos:line="1104" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1104" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1104" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1105" pos:column="5">proxy_ssl_disable<pos:position pos:line="1105" pos:column="22"/></name> <operator pos:line="1105" pos:column="23">=<pos:position pos:line="1105" pos:column="24"/></operator> <call><name pos:line="1105" pos:column="25">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="1105" pos:column="49"/></name><argument_list pos:line="1105" pos:column="49">(<argument><expr><name pos:line="1105" pos:column="50">ssl_engine_disable<pos:position pos:line="1105" pos:column="68"/></name></expr></argument>)<pos:position pos:line="1105" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="1105" pos:column="70"/></expr_stmt>

    <return pos:line="1107" pos:column="5">return <expr><name pos:line="1107" pos:column="12">OK<pos:position pos:line="1107" pos:column="14"/></name></expr>;<pos:position pos:line="1107" pos:column="15"/></return>
}<pos:position pos:line="1108" pos:column="2"/></block></function>

<function><specifier pos:line="1110" pos:column="1">static<pos:position pos:line="1110" pos:column="7"/></specifier> <type><name pos:line="1110" pos:column="8">void<pos:position pos:line="1110" pos:column="12"/></name></type> <name pos:line="1110" pos:column="13">register_hooks<pos:position pos:line="1110" pos:column="27"/></name><parameter_list pos:line="1110" pos:column="27">(<parameter><decl><type><name pos:line="1110" pos:column="28">apr_pool_t<pos:position pos:line="1110" pos:column="38"/></name> <modifier pos:line="1110" pos:column="39">*<pos:position pos:line="1110" pos:column="40"/></modifier></type><name pos:line="1110" pos:column="40">p<pos:position pos:line="1110" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1110" pos:column="42"/></parameter_list>
<block pos:line="1111" pos:column="1">{
    <comment type="block" pos:line="1112" pos:column="5">/* handler */</comment>
    <expr_stmt><expr><call><name pos:line="1113" pos:column="5">ap_hook_handler<pos:position pos:line="1113" pos:column="20"/></name><argument_list pos:line="1113" pos:column="20">(<argument><expr><name pos:line="1113" pos:column="21">proxy_handler<pos:position pos:line="1113" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1113" pos:column="36">NULL<pos:position pos:line="1113" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1113" pos:column="42">NULL<pos:position pos:line="1113" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1113" pos:column="48">APR_HOOK_FIRST<pos:position pos:line="1113" pos:column="62"/></name></expr></argument>)<pos:position pos:line="1113" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1113" pos:column="64"/></expr_stmt>
    <comment type="block" pos:line="1114" pos:column="5">/* filename-to-URI translation */</comment>
    <expr_stmt><expr><call><name pos:line="1115" pos:column="5">ap_hook_translate_name<pos:position pos:line="1115" pos:column="27"/></name><argument_list pos:line="1115" pos:column="27">(<argument><expr><name pos:line="1115" pos:column="28">proxy_trans<pos:position pos:line="1115" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1115" pos:column="41">NULL<pos:position pos:line="1115" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1115" pos:column="47">NULL<pos:position pos:line="1115" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1115" pos:column="53">APR_HOOK_FIRST<pos:position pos:line="1115" pos:column="67"/></name></expr></argument>)<pos:position pos:line="1115" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1115" pos:column="69"/></expr_stmt>
    <comment type="block" pos:line="1116" pos:column="5">/* walk &lt;Proxy &gt; entries and suppress default TRACE behavior */</comment>
    <expr_stmt><expr><call><name pos:line="1117" pos:column="5">ap_hook_map_to_storage<pos:position pos:line="1117" pos:column="27"/></name><argument_list pos:line="1117" pos:column="27">(<argument><expr><name pos:line="1117" pos:column="28">proxy_map_location<pos:position pos:line="1117" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1117" pos:column="48">NULL<pos:position pos:line="1117" pos:column="52"/></name></expr></argument>,<argument><expr><name pos:line="1117" pos:column="53">NULL<pos:position pos:line="1117" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1117" pos:column="59">APR_HOOK_FIRST<pos:position pos:line="1117" pos:column="73"/></name></expr></argument>)<pos:position pos:line="1117" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1117" pos:column="75"/></expr_stmt>
    <comment type="block" pos:line="1118" pos:column="5">/* fixups */</comment>
    <expr_stmt><expr><call><name pos:line="1119" pos:column="5">ap_hook_fixups<pos:position pos:line="1119" pos:column="19"/></name><argument_list pos:line="1119" pos:column="19">(<argument><expr><name pos:line="1119" pos:column="20">proxy_fixup<pos:position pos:line="1119" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1119" pos:column="33">NULL<pos:position pos:line="1119" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1119" pos:column="39">NULL<pos:position pos:line="1119" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1119" pos:column="45">APR_HOOK_FIRST<pos:position pos:line="1119" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1119" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1119" pos:column="61"/></expr_stmt>
    <comment type="block" pos:line="1120" pos:column="5">/* post read_request handling */</comment>
    <expr_stmt><expr><call><name pos:line="1121" pos:column="5">ap_hook_post_read_request<pos:position pos:line="1121" pos:column="30"/></name><argument_list pos:line="1121" pos:column="30">(<argument><expr><name pos:line="1121" pos:column="31">proxy_detect<pos:position pos:line="1121" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1121" pos:column="45">NULL<pos:position pos:line="1121" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="1121" pos:column="51">NULL<pos:position pos:line="1121" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1121" pos:column="57">APR_HOOK_FIRST<pos:position pos:line="1121" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1121" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1121" pos:column="73"/></expr_stmt>
    <comment type="block" pos:line="1122" pos:column="5">/* post config handling */</comment>
    <expr_stmt><expr><call><name pos:line="1123" pos:column="5">ap_hook_post_config<pos:position pos:line="1123" pos:column="24"/></name><argument_list pos:line="1123" pos:column="24">(<argument><expr><name pos:line="1123" pos:column="25">proxy_post_config<pos:position pos:line="1123" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1123" pos:column="44">NULL<pos:position pos:line="1123" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1123" pos:column="50">NULL<pos:position pos:line="1123" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1123" pos:column="56">APR_HOOK_MIDDLE<pos:position pos:line="1123" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1123" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1123" pos:column="73"/></expr_stmt>
}<pos:position pos:line="1124" pos:column="2"/></block></function>

<decl_stmt><decl><type><name pos:line="1126" pos:column="1">module<pos:position pos:line="1126" pos:column="7"/></name> <name pos:line="1126" pos:column="8">AP_MODULE_DECLARE_DATA<pos:position pos:line="1126" pos:column="30"/></name></type> <name pos:line="1126" pos:column="31">proxy_module<pos:position pos:line="1126" pos:column="43"/></name> <init pos:line="1126" pos:column="44">=
<expr><block pos:line="1127" pos:column="1">{
    <expr><name pos:line="1128" pos:column="5">STANDARD20_MODULE_STUFF<pos:position pos:line="1128" pos:column="28"/></name></expr>,
    <expr><name pos:line="1129" pos:column="5">create_proxy_dir_config<pos:position pos:line="1129" pos:column="28"/></name></expr>,    <comment type="block" pos:line="1129" pos:column="33">/* create per-directory config structure */</comment>
    <expr><name pos:line="1130" pos:column="5">merge_proxy_dir_config<pos:position pos:line="1130" pos:column="27"/></name></expr>,     <comment type="block" pos:line="1130" pos:column="33">/* merge per-directory config structures */</comment>
    <expr><name pos:line="1131" pos:column="5">create_proxy_config<pos:position pos:line="1131" pos:column="24"/></name></expr>,	<comment type="block" pos:line="1131" pos:column="33">/* create per-server config structure */</comment>
    <expr><name pos:line="1132" pos:column="5">merge_proxy_config<pos:position pos:line="1132" pos:column="23"/></name></expr>,		<comment type="block" pos:line="1132" pos:column="33">/* merge per-server config structures */</comment>
    <expr><name pos:line="1133" pos:column="5">proxy_cmds<pos:position pos:line="1133" pos:column="15"/></name></expr>,			<comment type="block" pos:line="1133" pos:column="33">/* command table */</comment>
    <expr><name pos:line="1134" pos:column="5">register_hooks<pos:position pos:line="1134" pos:column="19"/></name></expr>
}<pos:position pos:line="1135" pos:column="2"/></block></expr></init></decl>;<pos:position pos:line="1135" pos:column="3"/></decl_stmt>

<macro><name pos:line="1137" pos:column="1">APR_HOOK_STRUCT<pos:position pos:line="1137" pos:column="16"/></name><argument_list pos:line="1137" pos:column="16">(
	<argument pos:line="1138" pos:column="9">APR_HOOK_LINK(scheme_handler)
	APR_HOOK_LINK(canon_handler)<pos:position pos:line="1139" pos:column="37"/></argument>
)<pos:position pos:line="1140" pos:column="2"/></argument_list></macro>

<macro><name pos:line="1142" pos:column="1">APR_IMPLEMENT_EXTERNAL_HOOK_RUN_FIRST<pos:position pos:line="1142" pos:column="38"/></name><argument_list pos:line="1142" pos:column="38">(<argument pos:line="1142" pos:column="39">proxy<pos:position pos:line="1142" pos:column="44"/></argument>, <argument pos:line="1142" pos:column="46">PROXY<pos:position pos:line="1142" pos:column="51"/></argument>, <argument pos:line="1142" pos:column="53">int<pos:position pos:line="1142" pos:column="56"/></argument>, <argument pos:line="1142" pos:column="58">scheme_handler<pos:position pos:line="1142" pos:column="72"/></argument>, 
                                     <argument pos:line="1143" pos:column="38">(request_rec *r, proxy_server_conf *conf, 
                                     char *url, const char *proxyhost, 
                                     apr_port_t proxyport)<pos:position pos:line="1145" pos:column="59"/></argument>,<argument pos:line="1145" pos:column="60">(r,conf,url,
                                     proxyhost,proxyport)<pos:position pos:line="1146" pos:column="58"/></argument>,<argument pos:line="1146" pos:column="59">DECLINED<pos:position pos:line="1146" pos:column="67"/></argument>)<pos:position pos:line="1146" pos:column="68"/></argument_list></macro>
<macro><name pos:line="1147" pos:column="1">APR_IMPLEMENT_EXTERNAL_HOOK_RUN_FIRST<pos:position pos:line="1147" pos:column="38"/></name><argument_list pos:line="1147" pos:column="38">(<argument pos:line="1147" pos:column="39">proxy<pos:position pos:line="1147" pos:column="44"/></argument>, <argument pos:line="1147" pos:column="46">PROXY<pos:position pos:line="1147" pos:column="51"/></argument>, <argument pos:line="1147" pos:column="53">int<pos:position pos:line="1147" pos:column="56"/></argument>, <argument pos:line="1147" pos:column="58">canon_handler<pos:position pos:line="1147" pos:column="71"/></argument>, 
                                     <argument pos:line="1148" pos:column="38">(request_rec *r, char *url)<pos:position pos:line="1148" pos:column="65"/></argument>,<argument pos:line="1148" pos:column="66">(r,
                                     url)<pos:position pos:line="1149" pos:column="42"/></argument>,<argument pos:line="1149" pos:column="43">DECLINED<pos:position pos:line="1149" pos:column="51"/></argument>)<pos:position pos:line="1149" pos:column="52"/></argument_list></macro>
<macro><name pos:line="1150" pos:column="1">APR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL<pos:position pos:line="1150" pos:column="36"/></name><argument_list pos:line="1150" pos:column="36">(<argument pos:line="1150" pos:column="37">proxy<pos:position pos:line="1150" pos:column="42"/></argument>, <argument pos:line="1150" pos:column="44">PROXY<pos:position pos:line="1150" pos:column="49"/></argument>, <argument pos:line="1150" pos:column="51">int<pos:position pos:line="1150" pos:column="54"/></argument>, <argument pos:line="1150" pos:column="56">fixups<pos:position pos:line="1150" pos:column="62"/></argument>,
				    <argument pos:line="1151" pos:column="37">(request_rec *r)<pos:position pos:line="1151" pos:column="53"/></argument>, <argument pos:line="1151" pos:column="55">(r)<pos:position pos:line="1151" pos:column="58"/></argument>,
				    <argument pos:line="1152" pos:column="37">OK<pos:position pos:line="1152" pos:column="39"/></argument>, <argument pos:line="1152" pos:column="41">DECLINED<pos:position pos:line="1152" pos:column="49"/></argument>)<pos:position pos:line="1152" pos:column="50"/></argument_list></macro>
</unit>

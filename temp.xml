<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/repos/httpd-2.2.15/modules/aaa/mod_authn_alias.c" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<cpp:include pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">include<pos:position pos:line="17" pos:column="9"/></cpp:directive> <cpp:file pos:line="17" pos:column="10">"apr_strings.h"<pos:position pos:line="17" pos:column="25"/></cpp:file></cpp:include>
<cpp:define pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">define<pos:position pos:line="18" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="18" pos:column="9">APR_WANT_STRFUNC<pos:position pos:line="18" pos:column="25"/></name></cpp:macro></cpp:define>        <comment type="block" pos:line="18" pos:column="33">/* for strcasecmp */</comment>
<cpp:include pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">include<pos:position pos:line="19" pos:column="9"/></cpp:directive> <cpp:file pos:line="19" pos:column="10">"apr_want.h"<pos:position pos:line="19" pos:column="22"/></cpp:file></cpp:include>

<cpp:define pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">define<pos:position pos:line="21" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="21" pos:column="9">CORE_PRIVATE<pos:position pos:line="21" pos:column="21"/></name></cpp:macro></cpp:define>
<cpp:include pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">include<pos:position pos:line="22" pos:column="9"/></cpp:directive> <cpp:file pos:line="22" pos:column="10">"ap_config.h"<pos:position pos:line="22" pos:column="23"/></cpp:file></cpp:include>
<cpp:include pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">include<pos:position pos:line="23" pos:column="9"/></cpp:directive> <cpp:file pos:line="23" pos:column="10">"httpd.h"<pos:position pos:line="23" pos:column="19"/></cpp:file></cpp:include>
<cpp:include pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">include<pos:position pos:line="24" pos:column="9"/></cpp:directive> <cpp:file pos:line="24" pos:column="10">"http_config.h"<pos:position pos:line="24" pos:column="25"/></cpp:file></cpp:include>
<cpp:include pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">include<pos:position pos:line="25" pos:column="9"/></cpp:directive> <cpp:file pos:line="25" pos:column="10">"http_core.h"<pos:position pos:line="25" pos:column="23"/></cpp:file></cpp:include>
<cpp:include pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">include<pos:position pos:line="26" pos:column="9"/></cpp:directive> <cpp:file pos:line="26" pos:column="10">"http_request.h"<pos:position pos:line="26" pos:column="26"/></cpp:file></cpp:include>
<cpp:include pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">include<pos:position pos:line="27" pos:column="9"/></cpp:directive> <cpp:file pos:line="27" pos:column="10">"ap_provider.h"<pos:position pos:line="27" pos:column="25"/></cpp:file></cpp:include>

<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include<pos:position pos:line="29" pos:column="9"/></cpp:directive> <cpp:file pos:line="29" pos:column="10">"mod_auth.h"<pos:position pos:line="29" pos:column="22"/></cpp:file></cpp:include>

<typedef pos:line="31" pos:column="1">typedef <type><struct pos:line="31" pos:column="9">struct <name pos:line="31" pos:column="16">provider_alias_rec<pos:position pos:line="31" pos:column="34"/></name> <block pos:line="31" pos:column="35">{
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">char<pos:position pos:line="32" pos:column="9"/></name> <modifier pos:line="32" pos:column="10">*<pos:position pos:line="32" pos:column="11"/></modifier></type><name pos:line="32" pos:column="11">provider_name<pos:position pos:line="32" pos:column="24"/></name></decl>;<pos:position pos:line="32" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name> <modifier pos:line="33" pos:column="10">*<pos:position pos:line="33" pos:column="11"/></modifier></type><name pos:line="33" pos:column="11">provider_alias<pos:position pos:line="33" pos:column="25"/></name></decl>;<pos:position pos:line="33" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">ap_conf_vector_t<pos:position pos:line="34" pos:column="21"/></name> <modifier pos:line="34" pos:column="22">*<pos:position pos:line="34" pos:column="23"/></modifier></type><name pos:line="34" pos:column="23">sec_auth<pos:position pos:line="34" pos:column="31"/></name></decl>;<pos:position pos:line="34" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="35" pos:column="5">const<pos:position pos:line="35" pos:column="10"/></specifier> <name pos:line="35" pos:column="11">authn_provider<pos:position pos:line="35" pos:column="25"/></name> <modifier pos:line="35" pos:column="26">*<pos:position pos:line="35" pos:column="27"/></modifier></type><name pos:line="35" pos:column="27">provider<pos:position pos:line="35" pos:column="35"/></name></decl>;<pos:position pos:line="35" pos:column="36"/></decl_stmt>
}<pos:position pos:line="36" pos:column="2"/></block></struct></type> <name pos:line="36" pos:column="3">provider_alias_rec<pos:position pos:line="36" pos:column="21"/></name>;<pos:position pos:line="36" pos:column="22"/></typedef>

<typedef pos:line="38" pos:column="1">typedef <type><struct pos:line="38" pos:column="9">struct <name pos:line="38" pos:column="16">authn_alias_srv_conf<pos:position pos:line="38" pos:column="36"/></name> <block pos:line="38" pos:column="37">{
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">apr_hash_t<pos:position pos:line="39" pos:column="15"/></name> <modifier pos:line="39" pos:column="16">*<pos:position pos:line="39" pos:column="17"/></modifier></type><name pos:line="39" pos:column="17">alias_rec<pos:position pos:line="39" pos:column="26"/></name></decl>;<pos:position pos:line="39" pos:column="27"/></decl_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></struct></type> <name pos:line="40" pos:column="3">authn_alias_srv_conf<pos:position pos:line="40" pos:column="23"/></name>;<pos:position pos:line="40" pos:column="24"/></typedef>

<decl_stmt><decl><type><name pos:line="42" pos:column="1">module<pos:position pos:line="42" pos:column="7"/></name> <name pos:line="42" pos:column="8">AP_MODULE_DECLARE_DATA<pos:position pos:line="42" pos:column="30"/></name></type> <name pos:line="42" pos:column="31">authn_alias_module<pos:position pos:line="42" pos:column="49"/></name></decl>;<pos:position pos:line="42" pos:column="50"/></decl_stmt>

<function><specifier pos:line="44" pos:column="1">static<pos:position pos:line="44" pos:column="7"/></specifier> <type><name pos:line="44" pos:column="8">authn_status<pos:position pos:line="44" pos:column="20"/></name></type> <name pos:line="44" pos:column="21">authn_alias_check_password<pos:position pos:line="44" pos:column="47"/></name><parameter_list pos:line="44" pos:column="47">(<parameter><decl><type><name pos:line="44" pos:column="48">request_rec<pos:position pos:line="44" pos:column="59"/></name> <modifier pos:line="44" pos:column="60">*<pos:position pos:line="44" pos:column="61"/></modifier></type><name pos:line="44" pos:column="61">r<pos:position pos:line="44" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="44" pos:column="64">const<pos:position pos:line="44" pos:column="69"/></specifier> <name pos:line="44" pos:column="70">char<pos:position pos:line="44" pos:column="74"/></name> <modifier pos:line="44" pos:column="75">*<pos:position pos:line="44" pos:column="76"/></modifier></type><name pos:line="44" pos:column="76">user<pos:position pos:line="44" pos:column="80"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="45" pos:column="47">const<pos:position pos:line="45" pos:column="52"/></specifier> <name pos:line="45" pos:column="53">char<pos:position pos:line="45" pos:column="57"/></name> <modifier pos:line="45" pos:column="58">*<pos:position pos:line="45" pos:column="59"/></modifier></type><name pos:line="45" pos:column="59">password<pos:position pos:line="45" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="45" pos:column="68"/></parameter_list>
<block pos:line="46" pos:column="1">{
    <comment type="block" pos:line="47" pos:column="5">/* Look up the provider alias in the alias list */</comment>
    <comment type="block" pos:line="48" pos:column="5">/* Get the the dir_config and call ap_Merge_per_dir_configs() */</comment>
    <comment type="block" pos:line="49" pos:column="5">/* Call the real provider-&gt;check_password() function */</comment>
    <comment type="block" pos:line="50" pos:column="5">/* return the result of the above function call */</comment>

    <decl_stmt><decl><type><specifier pos:line="52" pos:column="5">const<pos:position pos:line="52" pos:column="10"/></specifier> <name pos:line="52" pos:column="11">char<pos:position pos:line="52" pos:column="15"/></name> <modifier pos:line="52" pos:column="16">*<pos:position pos:line="52" pos:column="17"/></modifier></type><name pos:line="52" pos:column="17">provider_name<pos:position pos:line="52" pos:column="30"/></name> <init pos:line="52" pos:column="31">= <expr><call><name pos:line="52" pos:column="33">apr_table_get<pos:position pos:line="52" pos:column="46"/></name><argument_list pos:line="52" pos:column="46">(<argument><expr><name><name pos:line="52" pos:column="47">r<pos:position pos:line="52" pos:column="48"/></name><operator pos:line="52" pos:column="48">-&gt;<pos:position pos:line="52" pos:column="53"/></operator><name pos:line="52" pos:column="50">notes<pos:position pos:line="52" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="57">AUTHN_PROVIDER_NAME_NOTE<pos:position pos:line="52" pos:column="81"/></name></expr></argument>)<pos:position pos:line="52" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="83"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="53" pos:column="5">authn_status<pos:position pos:line="53" pos:column="17"/></name></type> <name pos:line="53" pos:column="18">ret<pos:position pos:line="53" pos:column="21"/></name> <init pos:line="53" pos:column="22">= <expr><name pos:line="53" pos:column="24">AUTH_USER_NOT_FOUND<pos:position pos:line="53" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="53" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="54" pos:column="5">authn_alias_srv_conf<pos:position pos:line="54" pos:column="25"/></name> <modifier pos:line="54" pos:column="26">*<pos:position pos:line="54" pos:column="27"/></modifier></type><name pos:line="54" pos:column="27">authcfg<pos:position pos:line="54" pos:column="34"/></name> <init pos:line="54" pos:column="35">=
        <expr><operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">authn_alias_srv_conf<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">*<pos:position pos:line="55" pos:column="32"/></operator><operator pos:line="55" pos:column="32">)<pos:position pos:line="55" pos:column="33"/></operator><call><name pos:line="55" pos:column="33">ap_get_module_config<pos:position pos:line="55" pos:column="53"/></name><argument_list pos:line="55" pos:column="53">(<argument><expr><name><name pos:line="55" pos:column="54">r<pos:position pos:line="55" pos:column="55"/></name><operator pos:line="55" pos:column="55">-&gt;<pos:position pos:line="55" pos:column="60"/></operator><name pos:line="55" pos:column="57">server<pos:position pos:line="55" pos:column="63"/></name><operator pos:line="55" pos:column="63">-&gt;<pos:position pos:line="55" pos:column="68"/></operator><name pos:line="55" pos:column="65">module_config<pos:position pos:line="55" pos:column="78"/></name></name></expr></argument>,
                                                     <argument><expr><operator pos:line="56" pos:column="54">&amp;<pos:position pos:line="56" pos:column="59"/></operator><name pos:line="56" pos:column="55">authn_alias_module<pos:position pos:line="56" pos:column="73"/></name></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="75"/></decl_stmt>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">provider_name<pos:position pos:line="58" pos:column="22"/></name></expr>)<pos:position pos:line="58" pos:column="23"/></condition><then pos:line="58" pos:column="23"> <block pos:line="58" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="59" pos:column="9">provider_alias_rec<pos:position pos:line="59" pos:column="27"/></name> <modifier pos:line="59" pos:column="28">*<pos:position pos:line="59" pos:column="29"/></modifier></type><name pos:line="59" pos:column="29">prvdraliasrec<pos:position pos:line="59" pos:column="42"/></name> <init pos:line="59" pos:column="43">= <expr><call><name pos:line="59" pos:column="45">apr_hash_get<pos:position pos:line="59" pos:column="57"/></name><argument_list pos:line="59" pos:column="57">(<argument><expr><name><name pos:line="59" pos:column="58">authcfg<pos:position pos:line="59" pos:column="65"/></name><operator pos:line="59" pos:column="65">-&gt;<pos:position pos:line="59" pos:column="70"/></operator><name pos:line="59" pos:column="67">alias_rec<pos:position pos:line="59" pos:column="76"/></name></name></expr></argument>,
                                                         <argument><expr><name pos:line="60" pos:column="58">provider_name<pos:position pos:line="60" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="73">APR_HASH_KEY_STRING<pos:position pos:line="60" pos:column="92"/></name></expr></argument>)<pos:position pos:line="60" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="60" pos:column="94"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="61" pos:column="9">ap_conf_vector_t<pos:position pos:line="61" pos:column="25"/></name> <modifier pos:line="61" pos:column="26">*<pos:position pos:line="61" pos:column="27"/></modifier></type><name pos:line="61" pos:column="27">orig_dir_config<pos:position pos:line="61" pos:column="42"/></name> <init pos:line="61" pos:column="43">= <expr><name><name pos:line="61" pos:column="45">r<pos:position pos:line="61" pos:column="46"/></name><operator pos:line="61" pos:column="46">-&gt;<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="48">per_dir_config<pos:position pos:line="61" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="61" pos:column="63"/></decl_stmt>

        <comment type="block" pos:line="63" pos:column="9">/* If we found the alias provider in the list, then merge the directory
           configurations and call the real provider */</comment>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">prvdraliasrec<pos:position pos:line="65" pos:column="26"/></name></expr>)<pos:position pos:line="65" pos:column="27"/></condition><then pos:line="65" pos:column="27"> <block pos:line="65" pos:column="28">{
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">r<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">per_dir_config<pos:position pos:line="66" pos:column="30"/></name></name> <operator pos:line="66" pos:column="31">=<pos:position pos:line="66" pos:column="32"/></operator> <call><name pos:line="66" pos:column="33">ap_merge_per_dir_configs<pos:position pos:line="66" pos:column="57"/></name><argument_list pos:line="66" pos:column="57">(<argument><expr><name><name pos:line="66" pos:column="58">r<pos:position pos:line="66" pos:column="59"/></name><operator pos:line="66" pos:column="59">-&gt;<pos:position pos:line="66" pos:column="64"/></operator><name pos:line="66" pos:column="61">pool<pos:position pos:line="66" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="67">orig_dir_config<pos:position pos:line="66" pos:column="82"/></name></expr></argument>,
                                                         <argument><expr><name><name pos:line="67" pos:column="58">prvdraliasrec<pos:position pos:line="67" pos:column="71"/></name><operator pos:line="67" pos:column="71">-&gt;<pos:position pos:line="67" pos:column="76"/></operator><name pos:line="67" pos:column="73">sec_auth<pos:position pos:line="67" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><name pos:line="68" pos:column="13">ret<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">=<pos:position pos:line="68" pos:column="18"/></operator> <call><name><name pos:line="68" pos:column="19">prvdraliasrec<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">-&gt;<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="34">provider<pos:position pos:line="68" pos:column="42"/></name><operator pos:line="68" pos:column="42">-&gt;<pos:position pos:line="68" pos:column="47"/></operator><name pos:line="68" pos:column="44">check_password<pos:position pos:line="68" pos:column="58"/></name></name><argument_list pos:line="68" pos:column="58">(<argument><expr><name pos:line="68" pos:column="59">r<pos:position pos:line="68" pos:column="60"/></name></expr></argument>,<argument><expr><name pos:line="68" pos:column="61">user<pos:position pos:line="68" pos:column="65"/></name></expr></argument>,<argument><expr><name pos:line="68" pos:column="66">password<pos:position pos:line="68" pos:column="74"/></name></expr></argument>)<pos:position pos:line="68" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="69" pos:column="13">r<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">per_dir_config<pos:position pos:line="69" pos:column="30"/></name></name> <operator pos:line="69" pos:column="31">=<pos:position pos:line="69" pos:column="32"/></operator> <name pos:line="69" pos:column="33">orig_dir_config<pos:position pos:line="69" pos:column="48"/></name></expr>;<pos:position pos:line="69" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">ret<pos:position pos:line="73" pos:column="15"/></name></expr>;<pos:position pos:line="73" pos:column="16"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function>

<function><specifier pos:line="76" pos:column="1">static<pos:position pos:line="76" pos:column="7"/></specifier> <type><name pos:line="76" pos:column="8">authn_status<pos:position pos:line="76" pos:column="20"/></name></type> <name pos:line="76" pos:column="21">authn_alias_get_realm_hash<pos:position pos:line="76" pos:column="47"/></name><parameter_list pos:line="76" pos:column="47">(<parameter><decl><type><name pos:line="76" pos:column="48">request_rec<pos:position pos:line="76" pos:column="59"/></name> <modifier pos:line="76" pos:column="60">*<pos:position pos:line="76" pos:column="61"/></modifier></type><name pos:line="76" pos:column="61">r<pos:position pos:line="76" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="76" pos:column="64">const<pos:position pos:line="76" pos:column="69"/></specifier> <name pos:line="76" pos:column="70">char<pos:position pos:line="76" pos:column="74"/></name> <modifier pos:line="76" pos:column="75">*<pos:position pos:line="76" pos:column="76"/></modifier></type><name pos:line="76" pos:column="76">user<pos:position pos:line="76" pos:column="80"/></name></decl></parameter>,
                                               <parameter><decl><type><specifier pos:line="77" pos:column="48">const<pos:position pos:line="77" pos:column="53"/></specifier> <name pos:line="77" pos:column="54">char<pos:position pos:line="77" pos:column="58"/></name> <modifier pos:line="77" pos:column="59">*<pos:position pos:line="77" pos:column="60"/></modifier></type><name pos:line="77" pos:column="60">realm<pos:position pos:line="77" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="77" pos:column="67">char<pos:position pos:line="77" pos:column="71"/></name> <modifier pos:line="77" pos:column="72">*<pos:position pos:line="77" pos:column="73"/></modifier><modifier pos:line="77" pos:column="73">*<pos:position pos:line="77" pos:column="74"/></modifier></type><name pos:line="77" pos:column="74">rethash<pos:position pos:line="77" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="77" pos:column="82"/></parameter_list>
<block pos:line="78" pos:column="1">{
    <comment type="block" pos:line="79" pos:column="5">/* Look up the provider alias in the alias list */</comment>
    <comment type="block" pos:line="80" pos:column="5">/* Get the the dir_config and call ap_Merge_per_dir_configs() */</comment>
    <comment type="block" pos:line="81" pos:column="5">/* Call the real provider-&gt;get_realm_hash() function */</comment>
    <comment type="block" pos:line="82" pos:column="5">/* return the result of the above function call */</comment>

    <decl_stmt><decl><type><specifier pos:line="84" pos:column="5">const<pos:position pos:line="84" pos:column="10"/></specifier> <name pos:line="84" pos:column="11">char<pos:position pos:line="84" pos:column="15"/></name> <modifier pos:line="84" pos:column="16">*<pos:position pos:line="84" pos:column="17"/></modifier></type><name pos:line="84" pos:column="17">provider_name<pos:position pos:line="84" pos:column="30"/></name> <init pos:line="84" pos:column="31">= <expr><call><name pos:line="84" pos:column="33">apr_table_get<pos:position pos:line="84" pos:column="46"/></name><argument_list pos:line="84" pos:column="46">(<argument><expr><name><name pos:line="84" pos:column="47">r<pos:position pos:line="84" pos:column="48"/></name><operator pos:line="84" pos:column="48">-&gt;<pos:position pos:line="84" pos:column="53"/></operator><name pos:line="84" pos:column="50">notes<pos:position pos:line="84" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="57">AUTHN_PROVIDER_NAME_NOTE<pos:position pos:line="84" pos:column="81"/></name></expr></argument>)<pos:position pos:line="84" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="84" pos:column="83"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="85" pos:column="5">authn_status<pos:position pos:line="85" pos:column="17"/></name></type> <name pos:line="85" pos:column="18">ret<pos:position pos:line="85" pos:column="21"/></name> <init pos:line="85" pos:column="22">= <expr><name pos:line="85" pos:column="24">AUTH_USER_NOT_FOUND<pos:position pos:line="85" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="85" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="86" pos:column="5">authn_alias_srv_conf<pos:position pos:line="86" pos:column="25"/></name> <modifier pos:line="86" pos:column="26">*<pos:position pos:line="86" pos:column="27"/></modifier></type><name pos:line="86" pos:column="27">authcfg<pos:position pos:line="86" pos:column="34"/></name> <init pos:line="86" pos:column="35">=
        <expr><operator pos:line="87" pos:column="9">(<pos:position pos:line="87" pos:column="10"/></operator><name pos:line="87" pos:column="10">authn_alias_srv_conf<pos:position pos:line="87" pos:column="30"/></name> <operator pos:line="87" pos:column="31">*<pos:position pos:line="87" pos:column="32"/></operator><operator pos:line="87" pos:column="32">)<pos:position pos:line="87" pos:column="33"/></operator><call><name pos:line="87" pos:column="33">ap_get_module_config<pos:position pos:line="87" pos:column="53"/></name><argument_list pos:line="87" pos:column="53">(<argument><expr><name><name pos:line="87" pos:column="54">r<pos:position pos:line="87" pos:column="55"/></name><operator pos:line="87" pos:column="55">-&gt;<pos:position pos:line="87" pos:column="60"/></operator><name pos:line="87" pos:column="57">server<pos:position pos:line="87" pos:column="63"/></name><operator pos:line="87" pos:column="63">-&gt;<pos:position pos:line="87" pos:column="68"/></operator><name pos:line="87" pos:column="65">module_config<pos:position pos:line="87" pos:column="78"/></name></name></expr></argument>,
                                                     <argument><expr><operator pos:line="88" pos:column="54">&amp;<pos:position pos:line="88" pos:column="59"/></operator><name pos:line="88" pos:column="55">authn_alias_module<pos:position pos:line="88" pos:column="73"/></name></expr></argument>)<pos:position pos:line="88" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="88" pos:column="75"/></decl_stmt>

    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><name pos:line="90" pos:column="9">provider_name<pos:position pos:line="90" pos:column="22"/></name></expr>)<pos:position pos:line="90" pos:column="23"/></condition><then pos:line="90" pos:column="23"> <block pos:line="90" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="91" pos:column="9">provider_alias_rec<pos:position pos:line="91" pos:column="27"/></name> <modifier pos:line="91" pos:column="28">*<pos:position pos:line="91" pos:column="29"/></modifier></type><name pos:line="91" pos:column="29">prvdraliasrec<pos:position pos:line="91" pos:column="42"/></name> <init pos:line="91" pos:column="43">= <expr><call><name pos:line="91" pos:column="45">apr_hash_get<pos:position pos:line="91" pos:column="57"/></name><argument_list pos:line="91" pos:column="57">(<argument><expr><name><name pos:line="91" pos:column="58">authcfg<pos:position pos:line="91" pos:column="65"/></name><operator pos:line="91" pos:column="65">-&gt;<pos:position pos:line="91" pos:column="70"/></operator><name pos:line="91" pos:column="67">alias_rec<pos:position pos:line="91" pos:column="76"/></name></name></expr></argument>,
                                                         <argument><expr><name pos:line="92" pos:column="58">provider_name<pos:position pos:line="92" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="73">APR_HASH_KEY_STRING<pos:position pos:line="92" pos:column="92"/></name></expr></argument>)<pos:position pos:line="92" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="92" pos:column="94"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="93" pos:column="9">ap_conf_vector_t<pos:position pos:line="93" pos:column="25"/></name> <modifier pos:line="93" pos:column="26">*<pos:position pos:line="93" pos:column="27"/></modifier></type><name pos:line="93" pos:column="27">orig_dir_config<pos:position pos:line="93" pos:column="42"/></name> <init pos:line="93" pos:column="43">= <expr><name><name pos:line="93" pos:column="45">r<pos:position pos:line="93" pos:column="46"/></name><operator pos:line="93" pos:column="46">-&gt;<pos:position pos:line="93" pos:column="51"/></operator><name pos:line="93" pos:column="48">per_dir_config<pos:position pos:line="93" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="93" pos:column="63"/></decl_stmt>

        <comment type="block" pos:line="95" pos:column="9">/* If we found the alias provider in the list, then merge the directory
           configurations and call the real provider */</comment>
        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name pos:line="97" pos:column="13">prvdraliasrec<pos:position pos:line="97" pos:column="26"/></name></expr>)<pos:position pos:line="97" pos:column="27"/></condition><then pos:line="97" pos:column="27"> <block pos:line="97" pos:column="28">{
            <expr_stmt><expr><name><name pos:line="98" pos:column="13">r<pos:position pos:line="98" pos:column="14"/></name><operator pos:line="98" pos:column="14">-&gt;<pos:position pos:line="98" pos:column="19"/></operator><name pos:line="98" pos:column="16">per_dir_config<pos:position pos:line="98" pos:column="30"/></name></name> <operator pos:line="98" pos:column="31">=<pos:position pos:line="98" pos:column="32"/></operator> <call><name pos:line="98" pos:column="33">ap_merge_per_dir_configs<pos:position pos:line="98" pos:column="57"/></name><argument_list pos:line="98" pos:column="57">(<argument><expr><name><name pos:line="98" pos:column="58">r<pos:position pos:line="98" pos:column="59"/></name><operator pos:line="98" pos:column="59">-&gt;<pos:position pos:line="98" pos:column="64"/></operator><name pos:line="98" pos:column="61">pool<pos:position pos:line="98" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="67">orig_dir_config<pos:position pos:line="98" pos:column="82"/></name></expr></argument>,
                                                         <argument><expr><name><name pos:line="99" pos:column="58">prvdraliasrec<pos:position pos:line="99" pos:column="71"/></name><operator pos:line="99" pos:column="71">-&gt;<pos:position pos:line="99" pos:column="76"/></operator><name pos:line="99" pos:column="73">sec_auth<pos:position pos:line="99" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><name pos:line="100" pos:column="13">ret<pos:position pos:line="100" pos:column="16"/></name> <operator pos:line="100" pos:column="17">=<pos:position pos:line="100" pos:column="18"/></operator> <call><name><name pos:line="100" pos:column="19">prvdraliasrec<pos:position pos:line="100" pos:column="32"/></name><operator pos:line="100" pos:column="32">-&gt;<pos:position pos:line="100" pos:column="37"/></operator><name pos:line="100" pos:column="34">provider<pos:position pos:line="100" pos:column="42"/></name><operator pos:line="100" pos:column="42">-&gt;<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="44">get_realm_hash<pos:position pos:line="100" pos:column="58"/></name></name><argument_list pos:line="100" pos:column="58">(<argument><expr><name pos:line="100" pos:column="59">r<pos:position pos:line="100" pos:column="60"/></name></expr></argument>,<argument><expr><name pos:line="100" pos:column="61">user<pos:position pos:line="100" pos:column="65"/></name></expr></argument>,<argument><expr><name pos:line="100" pos:column="66">realm<pos:position pos:line="100" pos:column="71"/></name></expr></argument>,<argument><expr><name pos:line="100" pos:column="72">rethash<pos:position pos:line="100" pos:column="79"/></name></expr></argument>)<pos:position pos:line="100" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="101" pos:column="13">r<pos:position pos:line="101" pos:column="14"/></name><operator pos:line="101" pos:column="14">-&gt;<pos:position pos:line="101" pos:column="19"/></operator><name pos:line="101" pos:column="16">per_dir_config<pos:position pos:line="101" pos:column="30"/></name></name> <operator pos:line="101" pos:column="31">=<pos:position pos:line="101" pos:column="32"/></operator> <name pos:line="101" pos:column="33">orig_dir_config<pos:position pos:line="101" pos:column="48"/></name></expr>;<pos:position pos:line="101" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="102" pos:column="10"/></block></then></if>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>

    <return pos:line="105" pos:column="5">return <expr><name pos:line="105" pos:column="12">ret<pos:position pos:line="105" pos:column="15"/></name></expr>;<pos:position pos:line="105" pos:column="16"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function>

<function><specifier pos:line="108" pos:column="1">static<pos:position pos:line="108" pos:column="7"/></specifier> <type><name pos:line="108" pos:column="8">void<pos:position pos:line="108" pos:column="12"/></name> <modifier pos:line="108" pos:column="13">*<pos:position pos:line="108" pos:column="14"/></modifier></type><name pos:line="108" pos:column="14">create_authn_alias_svr_config<pos:position pos:line="108" pos:column="43"/></name><parameter_list pos:line="108" pos:column="43">(<parameter><decl><type><name pos:line="108" pos:column="44">apr_pool_t<pos:position pos:line="108" pos:column="54"/></name> <modifier pos:line="108" pos:column="55">*<pos:position pos:line="108" pos:column="56"/></modifier></type><name pos:line="108" pos:column="56">p<pos:position pos:line="108" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="108" pos:column="59">server_rec<pos:position pos:line="108" pos:column="69"/></name> <modifier pos:line="108" pos:column="70">*<pos:position pos:line="108" pos:column="71"/></modifier></type><name pos:line="108" pos:column="71">s<pos:position pos:line="108" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="108" pos:column="73"/></parameter_list>
<block pos:line="109" pos:column="1">{

    <decl_stmt><decl><type><name pos:line="111" pos:column="5">authn_alias_srv_conf<pos:position pos:line="111" pos:column="25"/></name> <modifier pos:line="111" pos:column="26">*<pos:position pos:line="111" pos:column="27"/></modifier></type><name pos:line="111" pos:column="27">authcfg<pos:position pos:line="111" pos:column="34"/></name></decl>;<pos:position pos:line="111" pos:column="35"/></decl_stmt>

    <expr_stmt><expr><name pos:line="113" pos:column="5">authcfg<pos:position pos:line="113" pos:column="12"/></name> <operator pos:line="113" pos:column="13">=<pos:position pos:line="113" pos:column="14"/></operator> <operator pos:line="113" pos:column="15">(<pos:position pos:line="113" pos:column="16"/></operator><name pos:line="113" pos:column="16">authn_alias_srv_conf<pos:position pos:line="113" pos:column="36"/></name> <operator pos:line="113" pos:column="37">*<pos:position pos:line="113" pos:column="38"/></operator><operator pos:line="113" pos:column="38">)<pos:position pos:line="113" pos:column="39"/></operator> <call><name pos:line="113" pos:column="40">apr_pcalloc<pos:position pos:line="113" pos:column="51"/></name><argument_list pos:line="113" pos:column="51">(<argument><expr><name pos:line="113" pos:column="52">p<pos:position pos:line="113" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="113" pos:column="55">sizeof<argument_list pos:line="113" pos:column="61">(<argument><expr><name pos:line="113" pos:column="62">authn_alias_srv_conf<pos:position pos:line="113" pos:column="82"/></name></expr></argument>)<pos:position pos:line="113" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="113" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="85"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="114" pos:column="5">authcfg<pos:position pos:line="114" pos:column="12"/></name><operator pos:line="114" pos:column="12">-&gt;<pos:position pos:line="114" pos:column="17"/></operator><name pos:line="114" pos:column="14">alias_rec<pos:position pos:line="114" pos:column="23"/></name></name> <operator pos:line="114" pos:column="24">=<pos:position pos:line="114" pos:column="25"/></operator> <call><name pos:line="114" pos:column="26">apr_hash_make<pos:position pos:line="114" pos:column="39"/></name><argument_list pos:line="114" pos:column="39">(<argument><expr><name pos:line="114" pos:column="40">p<pos:position pos:line="114" pos:column="41"/></name></expr></argument>)<pos:position pos:line="114" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="43"/></expr_stmt>

    <return pos:line="116" pos:column="5">return <expr><operator pos:line="116" pos:column="12">(<pos:position pos:line="116" pos:column="13"/></operator><name pos:line="116" pos:column="13">void<pos:position pos:line="116" pos:column="17"/></name> <operator pos:line="116" pos:column="18">*<pos:position pos:line="116" pos:column="19"/></operator><operator pos:line="116" pos:column="19">)<pos:position pos:line="116" pos:column="20"/></operator> <name pos:line="116" pos:column="21">authcfg<pos:position pos:line="116" pos:column="28"/></name></expr>;<pos:position pos:line="116" pos:column="29"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function>

<decl_stmt><decl><specifier pos:line="119" pos:column="1">static<pos:position pos:line="119" pos:column="7"/></specifier> <type><specifier pos:line="119" pos:column="8">const<pos:position pos:line="119" pos:column="13"/></specifier> <name pos:line="119" pos:column="14">authn_provider<pos:position pos:line="119" pos:column="28"/></name></type> <name pos:line="119" pos:column="29">authn_alias_provider<pos:position pos:line="119" pos:column="49"/></name> <init pos:line="119" pos:column="50">=
<expr><block pos:line="120" pos:column="1">{
    <expr><operator pos:line="121" pos:column="5">&amp;<pos:position pos:line="121" pos:column="10"/></operator><name pos:line="121" pos:column="6">authn_alias_check_password<pos:position pos:line="121" pos:column="32"/></name></expr>,
    <expr><operator pos:line="122" pos:column="5">&amp;<pos:position pos:line="122" pos:column="10"/></operator><name pos:line="122" pos:column="6">authn_alias_get_realm_hash<pos:position pos:line="122" pos:column="32"/></name></expr>,
}<pos:position pos:line="123" pos:column="2"/></block></expr></init></decl>;<pos:position pos:line="123" pos:column="3"/></decl_stmt>

<decl_stmt><decl><specifier pos:line="125" pos:column="1">static<pos:position pos:line="125" pos:column="7"/></specifier> <type><specifier pos:line="125" pos:column="8">const<pos:position pos:line="125" pos:column="13"/></specifier> <name pos:line="125" pos:column="14">authn_provider<pos:position pos:line="125" pos:column="28"/></name></type> <name pos:line="125" pos:column="29">authn_alias_provider_nodigest<pos:position pos:line="125" pos:column="58"/></name> <init pos:line="125" pos:column="59">=
<expr><block pos:line="126" pos:column="1">{
    <expr><operator pos:line="127" pos:column="5">&amp;<pos:position pos:line="127" pos:column="10"/></operator><name pos:line="127" pos:column="6">authn_alias_check_password<pos:position pos:line="127" pos:column="32"/></name></expr>,
    <expr><name pos:line="128" pos:column="5">NULL<pos:position pos:line="128" pos:column="9"/></name></expr>,
}<pos:position pos:line="129" pos:column="2"/></block></expr></init></decl>;<pos:position pos:line="129" pos:column="3"/></decl_stmt>

<function><specifier pos:line="131" pos:column="1">static<pos:position pos:line="131" pos:column="7"/></specifier> <type><specifier pos:line="131" pos:column="8">const<pos:position pos:line="131" pos:column="13"/></specifier> <name pos:line="131" pos:column="14">char<pos:position pos:line="131" pos:column="18"/></name> <modifier pos:line="131" pos:column="19">*<pos:position pos:line="131" pos:column="20"/></modifier></type><name pos:line="131" pos:column="20">authaliassection<pos:position pos:line="131" pos:column="36"/></name><parameter_list pos:line="131" pos:column="36">(<parameter><decl><type><name pos:line="131" pos:column="37">cmd_parms<pos:position pos:line="131" pos:column="46"/></name> <modifier pos:line="131" pos:column="47">*<pos:position pos:line="131" pos:column="48"/></modifier></type><name pos:line="131" pos:column="48">cmd<pos:position pos:line="131" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="131" pos:column="53">void<pos:position pos:line="131" pos:column="57"/></name> <modifier pos:line="131" pos:column="58">*<pos:position pos:line="131" pos:column="59"/></modifier></type><name pos:line="131" pos:column="59">mconfig<pos:position pos:line="131" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="131" pos:column="68">const<pos:position pos:line="131" pos:column="73"/></specifier> <name pos:line="131" pos:column="74">char<pos:position pos:line="131" pos:column="78"/></name> <modifier pos:line="131" pos:column="79">*<pos:position pos:line="131" pos:column="80"/></modifier></type><name pos:line="131" pos:column="80">arg<pos:position pos:line="131" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="131" pos:column="84"/></parameter_list>
<block pos:line="132" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="133" pos:column="5">int<pos:position pos:line="133" pos:column="8"/></name></type> <name pos:line="133" pos:column="9">old_overrides<pos:position pos:line="133" pos:column="22"/></name> <init pos:line="133" pos:column="23">= <expr><name><name pos:line="133" pos:column="25">cmd<pos:position pos:line="133" pos:column="28"/></name><operator pos:line="133" pos:column="28">-&gt;<pos:position pos:line="133" pos:column="33"/></operator><name pos:line="133" pos:column="30">override<pos:position pos:line="133" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="133" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="134" pos:column="5">const<pos:position pos:line="134" pos:column="10"/></specifier> <name pos:line="134" pos:column="11">char<pos:position pos:line="134" pos:column="15"/></name> <modifier pos:line="134" pos:column="16">*<pos:position pos:line="134" pos:column="17"/></modifier></type><name pos:line="134" pos:column="17">endp<pos:position pos:line="134" pos:column="21"/></name> <init pos:line="134" pos:column="22">= <expr><call><name pos:line="134" pos:column="24">ap_strrchr_c<pos:position pos:line="134" pos:column="36"/></name><argument_list pos:line="134" pos:column="36">(<argument><expr><name pos:line="134" pos:column="37">arg<pos:position pos:line="134" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="134" pos:column="42">'&gt;'<pos:position pos:line="134" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="134" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="135" pos:column="5">const<pos:position pos:line="135" pos:column="10"/></specifier> <name pos:line="135" pos:column="11">char<pos:position pos:line="135" pos:column="15"/></name> <modifier pos:line="135" pos:column="16">*<pos:position pos:line="135" pos:column="17"/></modifier></type><name pos:line="135" pos:column="17">args<pos:position pos:line="135" pos:column="21"/></name></decl>;<pos:position pos:line="135" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="136" pos:column="5">char<pos:position pos:line="136" pos:column="9"/></name> <modifier pos:line="136" pos:column="10">*<pos:position pos:line="136" pos:column="11"/></modifier></type><name pos:line="136" pos:column="11">provider_alias<pos:position pos:line="136" pos:column="25"/></name></decl>;<pos:position pos:line="136" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="137" pos:column="5">char<pos:position pos:line="137" pos:column="9"/></name> <modifier pos:line="137" pos:column="10">*<pos:position pos:line="137" pos:column="11"/></modifier></type><name pos:line="137" pos:column="11">provider_name<pos:position pos:line="137" pos:column="24"/></name></decl>;<pos:position pos:line="137" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="138" pos:column="5">const<pos:position pos:line="138" pos:column="10"/></specifier> <name pos:line="138" pos:column="11">char<pos:position pos:line="138" pos:column="15"/></name> <modifier pos:line="138" pos:column="16">*<pos:position pos:line="138" pos:column="17"/></modifier></type><name pos:line="138" pos:column="17">errmsg<pos:position pos:line="138" pos:column="23"/></name></decl>;<pos:position pos:line="138" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="139" pos:column="5">const<pos:position pos:line="139" pos:column="10"/></specifier> <name pos:line="139" pos:column="11">authn_provider<pos:position pos:line="139" pos:column="25"/></name> <modifier pos:line="139" pos:column="26">*<pos:position pos:line="139" pos:column="27"/></modifier></type><name pos:line="139" pos:column="27">provider<pos:position pos:line="139" pos:column="35"/></name> <init pos:line="139" pos:column="36">= <expr><name pos:line="139" pos:column="38">NULL<pos:position pos:line="139" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="139" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="140" pos:column="5">ap_conf_vector_t<pos:position pos:line="140" pos:column="21"/></name> <modifier pos:line="140" pos:column="22">*<pos:position pos:line="140" pos:column="23"/></modifier></type><name pos:line="140" pos:column="23">new_auth_config<pos:position pos:line="140" pos:column="38"/></name> <init pos:line="140" pos:column="39">= <expr><call><name pos:line="140" pos:column="41">ap_create_per_dir_config<pos:position pos:line="140" pos:column="65"/></name><argument_list pos:line="140" pos:column="65">(<argument><expr><name><name pos:line="140" pos:column="66">cmd<pos:position pos:line="140" pos:column="69"/></name><operator pos:line="140" pos:column="69">-&gt;<pos:position pos:line="140" pos:column="74"/></operator><name pos:line="140" pos:column="71">pool<pos:position pos:line="140" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="140" pos:column="77"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="141" pos:column="5">authn_alias_srv_conf<pos:position pos:line="141" pos:column="25"/></name> <modifier pos:line="141" pos:column="26">*<pos:position pos:line="141" pos:column="27"/></modifier></type><name pos:line="141" pos:column="27">authcfg<pos:position pos:line="141" pos:column="34"/></name> <init pos:line="141" pos:column="35">=
        <expr><operator pos:line="142" pos:column="9">(<pos:position pos:line="142" pos:column="10"/></operator><name pos:line="142" pos:column="10">authn_alias_srv_conf<pos:position pos:line="142" pos:column="30"/></name> <operator pos:line="142" pos:column="31">*<pos:position pos:line="142" pos:column="32"/></operator><operator pos:line="142" pos:column="32">)<pos:position pos:line="142" pos:column="33"/></operator><call><name pos:line="142" pos:column="33">ap_get_module_config<pos:position pos:line="142" pos:column="53"/></name><argument_list pos:line="142" pos:column="53">(<argument><expr><name><name pos:line="142" pos:column="54">cmd<pos:position pos:line="142" pos:column="57"/></name><operator pos:line="142" pos:column="57">-&gt;<pos:position pos:line="142" pos:column="62"/></operator><name pos:line="142" pos:column="59">server<pos:position pos:line="142" pos:column="65"/></name><operator pos:line="142" pos:column="65">-&gt;<pos:position pos:line="142" pos:column="70"/></operator><name pos:line="142" pos:column="67">module_config<pos:position pos:line="142" pos:column="80"/></name></name></expr></argument>,
                                                     <argument><expr><operator pos:line="143" pos:column="54">&amp;<pos:position pos:line="143" pos:column="59"/></operator><name pos:line="143" pos:column="55">authn_alias_module<pos:position pos:line="143" pos:column="73"/></name></expr></argument>)<pos:position pos:line="143" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="143" pos:column="75"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="145" pos:column="5">const<pos:position pos:line="145" pos:column="10"/></specifier> <name pos:line="145" pos:column="11">char<pos:position pos:line="145" pos:column="15"/></name> <modifier pos:line="145" pos:column="16">*<pos:position pos:line="145" pos:column="17"/></modifier></type><name pos:line="145" pos:column="17">err<pos:position pos:line="145" pos:column="20"/></name> <init pos:line="145" pos:column="21">= <expr><call><name pos:line="145" pos:column="23">ap_check_cmd_context<pos:position pos:line="145" pos:column="43"/></name><argument_list pos:line="145" pos:column="43">(<argument><expr><name pos:line="145" pos:column="44">cmd<pos:position pos:line="145" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="49">GLOBAL_ONLY<pos:position pos:line="145" pos:column="60"/></name></expr></argument>)<pos:position pos:line="145" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="145" pos:column="62"/></decl_stmt>
    <if pos:line="146" pos:column="5">if <condition pos:line="146" pos:column="8">(<expr><name pos:line="146" pos:column="9">err<pos:position pos:line="146" pos:column="12"/></name> <operator pos:line="146" pos:column="13">!=<pos:position pos:line="146" pos:column="15"/></operator> <name pos:line="146" pos:column="16">NULL<pos:position pos:line="146" pos:column="20"/></name></expr>)<pos:position pos:line="146" pos:column="21"/></condition><then pos:line="146" pos:column="21"> <block pos:line="146" pos:column="22">{
        <return pos:line="147" pos:column="9">return <expr><name pos:line="147" pos:column="16">err<pos:position pos:line="147" pos:column="19"/></name></expr>;<pos:position pos:line="147" pos:column="20"/></return>
    }<pos:position pos:line="148" pos:column="6"/></block></then></if>

    <if pos:line="150" pos:column="5">if <condition pos:line="150" pos:column="8">(<expr><name pos:line="150" pos:column="9">endp<pos:position pos:line="150" pos:column="13"/></name> <operator pos:line="150" pos:column="14">==<pos:position pos:line="150" pos:column="16"/></operator> <name pos:line="150" pos:column="17">NULL<pos:position pos:line="150" pos:column="21"/></name></expr>)<pos:position pos:line="150" pos:column="22"/></condition><then pos:line="150" pos:column="22"> <block pos:line="150" pos:column="23">{
        <return pos:line="151" pos:column="9">return <expr><call><name pos:line="151" pos:column="16">apr_pstrcat<pos:position pos:line="151" pos:column="27"/></name><argument_list pos:line="151" pos:column="27">(<argument><expr><name><name pos:line="151" pos:column="28">cmd<pos:position pos:line="151" pos:column="31"/></name><operator pos:line="151" pos:column="31">-&gt;<pos:position pos:line="151" pos:column="36"/></operator><name pos:line="151" pos:column="33">pool<pos:position pos:line="151" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="39">cmd<pos:position pos:line="151" pos:column="42"/></name><operator pos:line="151" pos:column="42">-&gt;<pos:position pos:line="151" pos:column="47"/></operator><name pos:line="151" pos:column="44">cmd<pos:position pos:line="151" pos:column="47"/></name><operator pos:line="151" pos:column="47">-&gt;<pos:position pos:line="151" pos:column="52"/></operator><name pos:line="151" pos:column="49">name<pos:position pos:line="151" pos:column="53"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="152" pos:column="28">"&gt; directive missing closing '&gt;'"<pos:position pos:line="152" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="63">NULL<pos:position pos:line="152" pos:column="67"/></name></expr></argument>)<pos:position pos:line="152" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="69"/></return>
    }<pos:position pos:line="153" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="155" pos:column="5">args<pos:position pos:line="155" pos:column="9"/></name> <operator pos:line="155" pos:column="10">=<pos:position pos:line="155" pos:column="11"/></operator> <call><name pos:line="155" pos:column="12">apr_pstrndup<pos:position pos:line="155" pos:column="24"/></name><argument_list pos:line="155" pos:column="24">(<argument><expr><name><name pos:line="155" pos:column="25">cmd<pos:position pos:line="155" pos:column="28"/></name><operator pos:line="155" pos:column="28">-&gt;<pos:position pos:line="155" pos:column="33"/></operator><name pos:line="155" pos:column="30">pool<pos:position pos:line="155" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="36">arg<pos:position pos:line="155" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="41">endp<pos:position pos:line="155" pos:column="45"/></name> <operator pos:line="155" pos:column="46">-<pos:position pos:line="155" pos:column="47"/></operator> <name pos:line="155" pos:column="48">arg<pos:position pos:line="155" pos:column="51"/></name></expr></argument>)<pos:position pos:line="155" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="53"/></expr_stmt>

    <if pos:line="157" pos:column="5">if <condition pos:line="157" pos:column="8">(<expr><operator pos:line="157" pos:column="9">!<pos:position pos:line="157" pos:column="10"/></operator><name><name pos:line="157" pos:column="10">args<pos:position pos:line="157" pos:column="14"/></name><index pos:line="157" pos:column="14">[<expr><literal type="number" pos:line="157" pos:column="15">0<pos:position pos:line="157" pos:column="16"/></literal></expr>]<pos:position pos:line="157" pos:column="17"/></index></name></expr>)<pos:position pos:line="157" pos:column="18"/></condition><then pos:line="157" pos:column="18"> <block pos:line="157" pos:column="19">{
        <return pos:line="158" pos:column="9">return <expr><call><name pos:line="158" pos:column="16">apr_pstrcat<pos:position pos:line="158" pos:column="27"/></name><argument_list pos:line="158" pos:column="27">(<argument><expr><name><name pos:line="158" pos:column="28">cmd<pos:position pos:line="158" pos:column="31"/></name><operator pos:line="158" pos:column="31">-&gt;<pos:position pos:line="158" pos:column="36"/></operator><name pos:line="158" pos:column="33">pool<pos:position pos:line="158" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="158" pos:column="39">cmd<pos:position pos:line="158" pos:column="42"/></name><operator pos:line="158" pos:column="42">-&gt;<pos:position pos:line="158" pos:column="47"/></operator><name pos:line="158" pos:column="44">cmd<pos:position pos:line="158" pos:column="47"/></name><operator pos:line="158" pos:column="47">-&gt;<pos:position pos:line="158" pos:column="52"/></operator><name pos:line="158" pos:column="49">name<pos:position pos:line="158" pos:column="53"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="159" pos:column="28">"&gt; directive requires additional arguments"<pos:position pos:line="159" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="73">NULL<pos:position pos:line="159" pos:column="77"/></name></expr></argument>)<pos:position pos:line="159" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="79"/></return>
    }<pos:position pos:line="160" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="162" pos:column="5">/* Pull the real provider name and the alias name from the block header */</comment>
    <expr_stmt><expr><name pos:line="163" pos:column="5">provider_name<pos:position pos:line="163" pos:column="18"/></name> <operator pos:line="163" pos:column="19">=<pos:position pos:line="163" pos:column="20"/></operator> <call><name pos:line="163" pos:column="21">ap_getword_conf<pos:position pos:line="163" pos:column="36"/></name><argument_list pos:line="163" pos:column="36">(<argument><expr><name><name pos:line="163" pos:column="37">cmd<pos:position pos:line="163" pos:column="40"/></name><operator pos:line="163" pos:column="40">-&gt;<pos:position pos:line="163" pos:column="45"/></operator><name pos:line="163" pos:column="42">pool<pos:position pos:line="163" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="163" pos:column="48">&amp;<pos:position pos:line="163" pos:column="53"/></operator><name pos:line="163" pos:column="49">args<pos:position pos:line="163" pos:column="53"/></name></expr></argument>)<pos:position pos:line="163" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="164" pos:column="5">provider_alias<pos:position pos:line="164" pos:column="19"/></name> <operator pos:line="164" pos:column="20">=<pos:position pos:line="164" pos:column="21"/></operator> <call><name pos:line="164" pos:column="22">ap_getword_conf<pos:position pos:line="164" pos:column="37"/></name><argument_list pos:line="164" pos:column="37">(<argument><expr><name><name pos:line="164" pos:column="38">cmd<pos:position pos:line="164" pos:column="41"/></name><operator pos:line="164" pos:column="41">-&gt;<pos:position pos:line="164" pos:column="46"/></operator><name pos:line="164" pos:column="43">pool<pos:position pos:line="164" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="164" pos:column="49">&amp;<pos:position pos:line="164" pos:column="54"/></operator><name pos:line="164" pos:column="50">args<pos:position pos:line="164" pos:column="54"/></name></expr></argument>)<pos:position pos:line="164" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="56"/></expr_stmt>

    <if pos:line="166" pos:column="5">if <condition pos:line="166" pos:column="8">(<expr><operator pos:line="166" pos:column="9">!<pos:position pos:line="166" pos:column="10"/></operator><name><name pos:line="166" pos:column="10">provider_name<pos:position pos:line="166" pos:column="23"/></name><index pos:line="166" pos:column="23">[<expr><literal type="number" pos:line="166" pos:column="24">0<pos:position pos:line="166" pos:column="25"/></literal></expr>]<pos:position pos:line="166" pos:column="26"/></index></name> <operator pos:line="166" pos:column="27">||<pos:position pos:line="166" pos:column="29"/></operator> <operator pos:line="166" pos:column="30">!<pos:position pos:line="166" pos:column="31"/></operator><name><name pos:line="166" pos:column="31">provider_alias<pos:position pos:line="166" pos:column="45"/></name><index pos:line="166" pos:column="45">[<expr><literal type="number" pos:line="166" pos:column="46">0<pos:position pos:line="166" pos:column="47"/></literal></expr>]<pos:position pos:line="166" pos:column="48"/></index></name></expr>)<pos:position pos:line="166" pos:column="49"/></condition><then pos:line="166" pos:column="49"> <block pos:line="166" pos:column="50">{
        <return pos:line="167" pos:column="9">return <expr><call><name pos:line="167" pos:column="16">apr_pstrcat<pos:position pos:line="167" pos:column="27"/></name><argument_list pos:line="167" pos:column="27">(<argument><expr><name><name pos:line="167" pos:column="28">cmd<pos:position pos:line="167" pos:column="31"/></name><operator pos:line="167" pos:column="31">-&gt;<pos:position pos:line="167" pos:column="36"/></operator><name pos:line="167" pos:column="33">pool<pos:position pos:line="167" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="167" pos:column="39">cmd<pos:position pos:line="167" pos:column="42"/></name><operator pos:line="167" pos:column="42">-&gt;<pos:position pos:line="167" pos:column="47"/></operator><name pos:line="167" pos:column="44">cmd<pos:position pos:line="167" pos:column="47"/></name><operator pos:line="167" pos:column="47">-&gt;<pos:position pos:line="167" pos:column="52"/></operator><name pos:line="167" pos:column="49">name<pos:position pos:line="167" pos:column="53"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="168" pos:column="28">"&gt; directive requires additional arguments"<pos:position pos:line="168" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="73">NULL<pos:position pos:line="168" pos:column="77"/></name></expr></argument>)<pos:position pos:line="168" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="79"/></return>
    }<pos:position pos:line="169" pos:column="6"/></block></then></if>

    <if pos:line="171" pos:column="5">if <condition pos:line="171" pos:column="8">(<expr><call><name pos:line="171" pos:column="9">strcasecmp<pos:position pos:line="171" pos:column="19"/></name><argument_list pos:line="171" pos:column="19">(<argument><expr><name pos:line="171" pos:column="20">provider_name<pos:position pos:line="171" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="35">provider_alias<pos:position pos:line="171" pos:column="49"/></name></expr></argument>)<pos:position pos:line="171" pos:column="50"/></argument_list></call> <operator pos:line="171" pos:column="51">==<pos:position pos:line="171" pos:column="53"/></operator> <literal type="number" pos:line="171" pos:column="54">0<pos:position pos:line="171" pos:column="55"/></literal></expr>)<pos:position pos:line="171" pos:column="56"/></condition><then pos:line="171" pos:column="56"> <block pos:line="171" pos:column="57">{
        <return pos:line="172" pos:column="9">return <expr><call><name pos:line="172" pos:column="16">apr_pstrcat<pos:position pos:line="172" pos:column="27"/></name><argument_list pos:line="172" pos:column="27">(<argument><expr><name><name pos:line="172" pos:column="28">cmd<pos:position pos:line="172" pos:column="31"/></name><operator pos:line="172" pos:column="31">-&gt;<pos:position pos:line="172" pos:column="36"/></operator><name pos:line="172" pos:column="33">pool<pos:position pos:line="172" pos:column="37"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="173" pos:column="28">"The alias provider name must be different from the base provider name."<pos:position pos:line="173" pos:column="100"/></literal></expr></argument>, <argument><expr><name pos:line="173" pos:column="102">NULL<pos:position pos:line="173" pos:column="106"/></name></expr></argument>)<pos:position pos:line="173" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="108"/></return>
    }<pos:position pos:line="174" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="176" pos:column="5">/* Look up the alias provider to make sure that it hasn't already been registered. */</comment>
    <expr_stmt><expr><name pos:line="177" pos:column="5">provider<pos:position pos:line="177" pos:column="13"/></name> <operator pos:line="177" pos:column="14">=<pos:position pos:line="177" pos:column="15"/></operator> <call><name pos:line="177" pos:column="16">ap_lookup_provider<pos:position pos:line="177" pos:column="34"/></name><argument_list pos:line="177" pos:column="34">(<argument><expr><name pos:line="177" pos:column="35">AUTHN_PROVIDER_GROUP<pos:position pos:line="177" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="57">provider_alias<pos:position pos:line="177" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="73">"0"<pos:position pos:line="177" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="78"/></expr_stmt>
    <if pos:line="178" pos:column="5">if <condition pos:line="178" pos:column="8">(<expr><name pos:line="178" pos:column="9">provider<pos:position pos:line="178" pos:column="17"/></name></expr>)<pos:position pos:line="178" pos:column="18"/></condition><then pos:line="178" pos:column="18"> <block pos:line="178" pos:column="19">{
        <return pos:line="179" pos:column="9">return <expr><call><name pos:line="179" pos:column="16">apr_pstrcat<pos:position pos:line="179" pos:column="27"/></name><argument_list pos:line="179" pos:column="27">(<argument><expr><name><name pos:line="179" pos:column="28">cmd<pos:position pos:line="179" pos:column="31"/></name><operator pos:line="179" pos:column="31">-&gt;<pos:position pos:line="179" pos:column="36"/></operator><name pos:line="179" pos:column="33">pool<pos:position pos:line="179" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="39">"The alias provider "<pos:position pos:line="179" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="179" pos:column="62">provider_alias<pos:position pos:line="179" pos:column="76"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="180" pos:column="28">" has already be registered previously as either a base provider or an alias provider."<pos:position pos:line="180" pos:column="115"/></literal></expr></argument>,
                           <argument><expr><name pos:line="181" pos:column="28">NULL<pos:position pos:line="181" pos:column="32"/></name></expr></argument>)<pos:position pos:line="181" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="34"/></return>
    }<pos:position pos:line="182" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="184" pos:column="5">/* walk the subsection configuration to get the per_dir config that we will
       merge just before the real provider is called. */</comment>
    <expr_stmt><expr><name><name pos:line="186" pos:column="5">cmd<pos:position pos:line="186" pos:column="8"/></name><operator pos:line="186" pos:column="8">-&gt;<pos:position pos:line="186" pos:column="13"/></operator><name pos:line="186" pos:column="10">override<pos:position pos:line="186" pos:column="18"/></name></name> <operator pos:line="186" pos:column="19">=<pos:position pos:line="186" pos:column="20"/></operator> <name pos:line="186" pos:column="21">OR_ALL<pos:position pos:line="186" pos:column="27"/></name><operator pos:line="186" pos:column="27">|<pos:position pos:line="186" pos:column="28"/></operator><name pos:line="186" pos:column="28">ACCESS_CONF<pos:position pos:line="186" pos:column="39"/></name></expr>;<pos:position pos:line="186" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="187" pos:column="5">errmsg<pos:position pos:line="187" pos:column="11"/></name> <operator pos:line="187" pos:column="12">=<pos:position pos:line="187" pos:column="13"/></operator> <call><name pos:line="187" pos:column="14">ap_walk_config<pos:position pos:line="187" pos:column="28"/></name><argument_list pos:line="187" pos:column="28">(<argument><expr><name><name pos:line="187" pos:column="29">cmd<pos:position pos:line="187" pos:column="32"/></name><operator pos:line="187" pos:column="32">-&gt;<pos:position pos:line="187" pos:column="37"/></operator><name pos:line="187" pos:column="34">directive<pos:position pos:line="187" pos:column="43"/></name><operator pos:line="187" pos:column="43">-&gt;<pos:position pos:line="187" pos:column="48"/></operator><name pos:line="187" pos:column="45">first_child<pos:position pos:line="187" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="58">cmd<pos:position pos:line="187" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="63">new_auth_config<pos:position pos:line="187" pos:column="78"/></name></expr></argument>)<pos:position pos:line="187" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="80"/></expr_stmt>

    <if pos:line="189" pos:column="5">if <condition pos:line="189" pos:column="8">(<expr><operator pos:line="189" pos:column="9">!<pos:position pos:line="189" pos:column="10"/></operator><name pos:line="189" pos:column="10">errmsg<pos:position pos:line="189" pos:column="16"/></name></expr>)<pos:position pos:line="189" pos:column="17"/></condition><then pos:line="189" pos:column="17"> <block pos:line="189" pos:column="18">{
        <decl_stmt><decl><type><name pos:line="190" pos:column="9">provider_alias_rec<pos:position pos:line="190" pos:column="27"/></name> <modifier pos:line="190" pos:column="28">*<pos:position pos:line="190" pos:column="29"/></modifier></type><name pos:line="190" pos:column="29">prvdraliasrec<pos:position pos:line="190" pos:column="42"/></name> <init pos:line="190" pos:column="43">= <expr><call><name pos:line="190" pos:column="45">apr_pcalloc<pos:position pos:line="190" pos:column="56"/></name><argument_list pos:line="190" pos:column="56">(<argument><expr><name><name pos:line="190" pos:column="57">cmd<pos:position pos:line="190" pos:column="60"/></name><operator pos:line="190" pos:column="60">-&gt;<pos:position pos:line="190" pos:column="65"/></operator><name pos:line="190" pos:column="62">pool<pos:position pos:line="190" pos:column="66"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="190" pos:column="68">sizeof<argument_list pos:line="190" pos:column="74">(<argument><expr><name pos:line="190" pos:column="75">provider_alias_rec<pos:position pos:line="190" pos:column="93"/></name></expr></argument>)<pos:position pos:line="190" pos:column="94"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="190" pos:column="95"/></argument_list></call></expr></init></decl>;<pos:position pos:line="190" pos:column="96"/></decl_stmt>
        <expr_stmt><expr><name pos:line="191" pos:column="9">provider<pos:position pos:line="191" pos:column="17"/></name> <operator pos:line="191" pos:column="18">=<pos:position pos:line="191" pos:column="19"/></operator> <call><name pos:line="191" pos:column="20">ap_lookup_provider<pos:position pos:line="191" pos:column="38"/></name><argument_list pos:line="191" pos:column="38">(<argument><expr><name pos:line="191" pos:column="39">AUTHN_PROVIDER_GROUP<pos:position pos:line="191" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="61">provider_name<pos:position pos:line="191" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="76">"0"<pos:position pos:line="191" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="81"/></expr_stmt>

        <comment type="block" pos:line="193" pos:column="9">/* Save off the new directory config along with the original provider name
           and function pointer data */</comment>
        <expr_stmt><expr><name><name pos:line="195" pos:column="9">prvdraliasrec<pos:position pos:line="195" pos:column="22"/></name><operator pos:line="195" pos:column="22">-&gt;<pos:position pos:line="195" pos:column="27"/></operator><name pos:line="195" pos:column="24">sec_auth<pos:position pos:line="195" pos:column="32"/></name></name> <operator pos:line="195" pos:column="33">=<pos:position pos:line="195" pos:column="34"/></operator> <name pos:line="195" pos:column="35">new_auth_config<pos:position pos:line="195" pos:column="50"/></name></expr>;<pos:position pos:line="195" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="196" pos:column="9">prvdraliasrec<pos:position pos:line="196" pos:column="22"/></name><operator pos:line="196" pos:column="22">-&gt;<pos:position pos:line="196" pos:column="27"/></operator><name pos:line="196" pos:column="24">provider_name<pos:position pos:line="196" pos:column="37"/></name></name> <operator pos:line="196" pos:column="38">=<pos:position pos:line="196" pos:column="39"/></operator> <name pos:line="196" pos:column="40">provider_name<pos:position pos:line="196" pos:column="53"/></name></expr>;<pos:position pos:line="196" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="197" pos:column="9">prvdraliasrec<pos:position pos:line="197" pos:column="22"/></name><operator pos:line="197" pos:column="22">-&gt;<pos:position pos:line="197" pos:column="27"/></operator><name pos:line="197" pos:column="24">provider_alias<pos:position pos:line="197" pos:column="38"/></name></name> <operator pos:line="197" pos:column="39">=<pos:position pos:line="197" pos:column="40"/></operator> <name pos:line="197" pos:column="41">provider_alias<pos:position pos:line="197" pos:column="55"/></name></expr>;<pos:position pos:line="197" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="198" pos:column="9">prvdraliasrec<pos:position pos:line="198" pos:column="22"/></name><operator pos:line="198" pos:column="22">-&gt;<pos:position pos:line="198" pos:column="27"/></operator><name pos:line="198" pos:column="24">provider<pos:position pos:line="198" pos:column="32"/></name></name> <operator pos:line="198" pos:column="33">=<pos:position pos:line="198" pos:column="34"/></operator> <name pos:line="198" pos:column="35">provider<pos:position pos:line="198" pos:column="43"/></name></expr>;<pos:position pos:line="198" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="199" pos:column="9">apr_hash_set<pos:position pos:line="199" pos:column="21"/></name><argument_list pos:line="199" pos:column="21">(<argument><expr><name><name pos:line="199" pos:column="22">authcfg<pos:position pos:line="199" pos:column="29"/></name><operator pos:line="199" pos:column="29">-&gt;<pos:position pos:line="199" pos:column="34"/></operator><name pos:line="199" pos:column="31">alias_rec<pos:position pos:line="199" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="42">provider_alias<pos:position pos:line="199" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="58">APR_HASH_KEY_STRING<pos:position pos:line="199" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="79">prvdraliasrec<pos:position pos:line="199" pos:column="92"/></name></expr></argument>)<pos:position pos:line="199" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="94"/></expr_stmt>

        <comment type="block" pos:line="201" pos:column="9">/* Register the fake provider so that we get called first */</comment>
        <expr_stmt><expr><call><name pos:line="202" pos:column="9">ap_register_provider<pos:position pos:line="202" pos:column="29"/></name><argument_list pos:line="202" pos:column="29">(<argument><expr><name><name pos:line="202" pos:column="30">cmd<pos:position pos:line="202" pos:column="33"/></name><operator pos:line="202" pos:column="33">-&gt;<pos:position pos:line="202" pos:column="38"/></operator><name pos:line="202" pos:column="35">pool<pos:position pos:line="202" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="41">AUTHN_PROVIDER_GROUP<pos:position pos:line="202" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="63">provider_alias<pos:position pos:line="202" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="79">"0"<pos:position pos:line="202" pos:column="82"/></literal></expr></argument>,
                             <argument><expr><ternary><condition><expr><name><name pos:line="203" pos:column="30">provider<pos:position pos:line="203" pos:column="38"/></name><operator pos:line="203" pos:column="38">-&gt;<pos:position pos:line="203" pos:column="43"/></operator><name pos:line="203" pos:column="40">get_realm_hash<pos:position pos:line="203" pos:column="54"/></name></name></expr> ?<pos:position pos:line="203" pos:column="56"/></condition><then pos:line="203" pos:column="56">
                                 <expr><operator pos:line="204" pos:column="34">&amp;<pos:position pos:line="204" pos:column="39"/></operator><name pos:line="204" pos:column="35">authn_alias_provider<pos:position pos:line="204" pos:column="55"/></name></expr> <pos:position pos:line="204" pos:column="56"/></then><else pos:line="204" pos:column="56">: 
                                 <expr><operator pos:line="205" pos:column="34">&amp;<pos:position pos:line="205" pos:column="39"/></operator><name pos:line="205" pos:column="35">authn_alias_provider_nodigest<pos:position pos:line="205" pos:column="64"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="205" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="206" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="208" pos:column="5">cmd<pos:position pos:line="208" pos:column="8"/></name><operator pos:line="208" pos:column="8">-&gt;<pos:position pos:line="208" pos:column="13"/></operator><name pos:line="208" pos:column="10">override<pos:position pos:line="208" pos:column="18"/></name></name> <operator pos:line="208" pos:column="19">=<pos:position pos:line="208" pos:column="20"/></operator> <name pos:line="208" pos:column="21">old_overrides<pos:position pos:line="208" pos:column="34"/></name></expr>;<pos:position pos:line="208" pos:column="35"/></expr_stmt>

    <return pos:line="210" pos:column="5">return <expr><name pos:line="210" pos:column="12">errmsg<pos:position pos:line="210" pos:column="18"/></name></expr>;<pos:position pos:line="210" pos:column="19"/></return>
}<pos:position pos:line="211" pos:column="2"/></block></function>

<decl_stmt><decl><specifier pos:line="213" pos:column="1">static<pos:position pos:line="213" pos:column="7"/></specifier> <type><specifier pos:line="213" pos:column="8">const<pos:position pos:line="213" pos:column="13"/></specifier> <name pos:line="213" pos:column="14">command_rec<pos:position pos:line="213" pos:column="25"/></name></type> <name><name pos:line="213" pos:column="26">authn_alias_cmds<pos:position pos:line="213" pos:column="42"/></name><index pos:line="213" pos:column="42">[]<pos:position pos:line="213" pos:column="44"/></index></name> <init pos:line="213" pos:column="45">=
<expr><block pos:line="214" pos:column="1">{
    <expr><call><name pos:line="215" pos:column="5">AP_INIT_RAW_ARGS<pos:position pos:line="215" pos:column="21"/></name><argument_list pos:line="215" pos:column="21">(<argument><expr><literal type="string" pos:line="215" pos:column="22">"&lt;AuthnProviderAlias"<pos:position pos:line="215" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="215" pos:column="45">authaliassection<pos:position pos:line="215" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="63">NULL<pos:position pos:line="215" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="69">RSRC_CONF<pos:position pos:line="215" pos:column="78"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="216" pos:column="22">"Container for authentication directives grouped under "<pos:position pos:line="216" pos:column="78"/></literal>
                     <literal type="string" pos:line="217" pos:column="22">"a provider alias"<pos:position pos:line="217" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="41"/></argument_list></call></expr>,
    <expr><block pos:line="218" pos:column="5">{<expr><name pos:line="218" pos:column="6">NULL<pos:position pos:line="218" pos:column="10"/></name></expr>}<pos:position pos:line="218" pos:column="11"/></block></expr>
}<pos:position pos:line="219" pos:column="2"/></block></expr></init></decl>;<pos:position pos:line="219" pos:column="3"/></decl_stmt>


<decl_stmt><decl><type><name pos:line="222" pos:column="1">module<pos:position pos:line="222" pos:column="7"/></name> <name pos:line="222" pos:column="8">AP_MODULE_DECLARE_DATA<pos:position pos:line="222" pos:column="30"/></name></type> <name pos:line="222" pos:column="31">authn_alias_module<pos:position pos:line="222" pos:column="49"/></name> <init pos:line="222" pos:column="50">=
<expr><block pos:line="223" pos:column="1">{
    <expr><name pos:line="224" pos:column="5">STANDARD20_MODULE_STUFF<pos:position pos:line="224" pos:column="28"/></name></expr>,
    <expr><name pos:line="225" pos:column="5">NULL<pos:position pos:line="225" pos:column="9"/></name></expr>,                          <comment type="block" pos:line="225" pos:column="36">/* dir config creater */</comment>
    <expr><name pos:line="226" pos:column="5">NULL<pos:position pos:line="226" pos:column="9"/></name></expr>,                          <comment type="block" pos:line="226" pos:column="36">/* dir merger --- default is to override */</comment>
    <expr><name pos:line="227" pos:column="5">create_authn_alias_svr_config<pos:position pos:line="227" pos:column="34"/></name></expr>, <comment type="block" pos:line="227" pos:column="36">/* server config */</comment>
    <expr><name pos:line="228" pos:column="5">NULL<pos:position pos:line="228" pos:column="9"/></name></expr>,                          <comment type="block" pos:line="228" pos:column="36">/* merge server config */</comment>
    <expr><name pos:line="229" pos:column="5">authn_alias_cmds<pos:position pos:line="229" pos:column="21"/></name></expr>,               <comment type="block" pos:line="229" pos:column="37">/* command apr_table_t */</comment>
    <expr><name pos:line="230" pos:column="5">NULL<pos:position pos:line="230" pos:column="9"/></name></expr>                           <comment type="block" pos:line="230" pos:column="36">/* register hooks */</comment>
}<pos:position pos:line="231" pos:column="2"/></block></expr></init></decl>;<pos:position pos:line="231" pos:column="3"/></decl_stmt>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/repos/httpd-2.3.8/modules/loggers/mod_logio.c" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<comment type="block" pos:line="17" pos:column="1">/*
 * Written by Bojan Smojver &lt;bojan rexursive.com&gt;:
 *
 * The argument to LogFormat and CustomLog is a string, which can include
 * literal characters copied into the log files, and '%' directives as
 * follows:
 *
 * %...I:  bytes received, including request and headers, cannot be zero
 * %...O:  bytes sent, including headers, cannot be zero
 *
 */</comment>

<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include<pos:position pos:line="29" pos:column="9"/></cpp:directive> <cpp:file pos:line="29" pos:column="10">"apr_strings.h"<pos:position pos:line="29" pos:column="25"/></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include<pos:position pos:line="30" pos:column="9"/></cpp:directive> <cpp:file pos:line="30" pos:column="10">"apr_lib.h"<pos:position pos:line="30" pos:column="21"/></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include<pos:position pos:line="31" pos:column="9"/></cpp:directive> <cpp:file pos:line="31" pos:column="10">"apr_hash.h"<pos:position pos:line="31" pos:column="22"/></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include<pos:position pos:line="32" pos:column="9"/></cpp:directive> <cpp:file pos:line="32" pos:column="10">"apr_optional.h"<pos:position pos:line="32" pos:column="26"/></cpp:file></cpp:include>

<cpp:define pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">define<pos:position pos:line="34" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="34" pos:column="9">APR_WANT_STRFUNC<pos:position pos:line="34" pos:column="25"/></name></cpp:macro></cpp:define>
<cpp:include pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">include<pos:position pos:line="35" pos:column="9"/></cpp:directive> <cpp:file pos:line="35" pos:column="10">"apr_want.h"<pos:position pos:line="35" pos:column="22"/></cpp:file></cpp:include>

<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include<pos:position pos:line="37" pos:column="9"/></cpp:directive> <cpp:file pos:line="37" pos:column="10">"ap_config.h"<pos:position pos:line="37" pos:column="23"/></cpp:file></cpp:include>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include<pos:position pos:line="38" pos:column="9"/></cpp:directive> <cpp:file pos:line="38" pos:column="10">"mod_log_config.h"<pos:position pos:line="38" pos:column="28"/></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include<pos:position pos:line="39" pos:column="9"/></cpp:directive> <cpp:file pos:line="39" pos:column="10">"httpd.h"<pos:position pos:line="39" pos:column="19"/></cpp:file></cpp:include>
<cpp:include pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">include<pos:position pos:line="40" pos:column="9"/></cpp:directive> <cpp:file pos:line="40" pos:column="10">"http_core.h"<pos:position pos:line="40" pos:column="23"/></cpp:file></cpp:include>
<cpp:include pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">include<pos:position pos:line="41" pos:column="9"/></cpp:directive> <cpp:file pos:line="41" pos:column="10">"http_config.h"<pos:position pos:line="41" pos:column="25"/></cpp:file></cpp:include>
<cpp:include pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">include<pos:position pos:line="42" pos:column="9"/></cpp:directive> <cpp:file pos:line="42" pos:column="10">"http_connection.h"<pos:position pos:line="42" pos:column="29"/></cpp:file></cpp:include>
<cpp:include pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">include<pos:position pos:line="43" pos:column="9"/></cpp:directive> <cpp:file pos:line="43" pos:column="10">"http_protocol.h"<pos:position pos:line="43" pos:column="27"/></cpp:file></cpp:include>

<decl_stmt><decl><type><name pos:line="45" pos:column="1">module<pos:position pos:line="45" pos:column="7"/></name> <name pos:line="45" pos:column="8">AP_MODULE_DECLARE_DATA<pos:position pos:line="45" pos:column="30"/></name></type> <name pos:line="45" pos:column="31">logio_module<pos:position pos:line="45" pos:column="43"/></name></decl>;<pos:position pos:line="45" pos:column="44"/></decl_stmt>

<decl_stmt><decl><specifier pos:line="47" pos:column="1">static<pos:position pos:line="47" pos:column="7"/></specifier> <type><specifier pos:line="47" pos:column="8">const<pos:position pos:line="47" pos:column="13"/></specifier> <name pos:line="47" pos:column="14">char<pos:position pos:line="47" pos:column="18"/></name></type> <name><name pos:line="47" pos:column="19">logio_filter_name<pos:position pos:line="47" pos:column="36"/></name><index pos:line="47" pos:column="36">[]<pos:position pos:line="47" pos:column="38"/></index></name> <init pos:line="47" pos:column="39">= <expr><literal type="string" pos:line="47" pos:column="41">"LOG_INPUT_OUTPUT"<pos:position pos:line="47" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="47" pos:column="60"/></decl_stmt>

<comment type="block" pos:line="49" pos:column="1">/*
 * Logging of input and output config...
 */</comment>

<typedef pos:line="53" pos:column="1">typedef <type><struct pos:line="53" pos:column="9">struct <name pos:line="53" pos:column="16">logio_config_t<pos:position pos:line="53" pos:column="30"/></name> <block pos:line="53" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="54" pos:column="5">apr_off_t<pos:position pos:line="54" pos:column="14"/></name></type> <name pos:line="54" pos:column="15">bytes_in<pos:position pos:line="54" pos:column="23"/></name></decl>;<pos:position pos:line="54" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="55" pos:column="5">apr_off_t<pos:position pos:line="55" pos:column="14"/></name></type> <name pos:line="55" pos:column="15">bytes_out<pos:position pos:line="55" pos:column="24"/></name></decl>;<pos:position pos:line="55" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="56" pos:column="5">apr_off_t<pos:position pos:line="56" pos:column="14"/></name></type> <name pos:line="56" pos:column="15">bytes_last_request<pos:position pos:line="56" pos:column="33"/></name></decl>;<pos:position pos:line="56" pos:column="34"/></decl_stmt>
}<pos:position pos:line="57" pos:column="2"/></block></struct></type> <name pos:line="57" pos:column="3">logio_config_t<pos:position pos:line="57" pos:column="17"/></name>;<pos:position pos:line="57" pos:column="18"/></typedef>

<comment type="block" pos:line="59" pos:column="1">/*
 * Optional function for the core to add to bytes_out
 */</comment>

<function><specifier pos:line="63" pos:column="1">static<pos:position pos:line="63" pos:column="7"/></specifier> <type><name pos:line="63" pos:column="8">void<pos:position pos:line="63" pos:column="12"/></name></type> <name pos:line="63" pos:column="13">ap_logio_add_bytes_out<pos:position pos:line="63" pos:column="35"/></name><parameter_list pos:line="63" pos:column="35">(<parameter><decl><type><name pos:line="63" pos:column="36">conn_rec<pos:position pos:line="63" pos:column="44"/></name> <modifier pos:line="63" pos:column="45">*<pos:position pos:line="63" pos:column="46"/></modifier></type><name pos:line="63" pos:column="46">c<pos:position pos:line="63" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="63" pos:column="49">apr_off_t<pos:position pos:line="63" pos:column="58"/></name></type> <name pos:line="63" pos:column="59">bytes<pos:position pos:line="63" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="63" pos:column="65"/></parameter_list><block pos:line="63" pos:column="65">{
    <decl_stmt><decl><type><name pos:line="64" pos:column="5">logio_config_t<pos:position pos:line="64" pos:column="19"/></name> <modifier pos:line="64" pos:column="20">*<pos:position pos:line="64" pos:column="21"/></modifier></type><name pos:line="64" pos:column="21">cf<pos:position pos:line="64" pos:column="23"/></name> <init pos:line="64" pos:column="24">= <expr><call><name pos:line="64" pos:column="26">ap_get_module_config<pos:position pos:line="64" pos:column="46"/></name><argument_list pos:line="64" pos:column="46">(<argument><expr><name><name pos:line="64" pos:column="47">c<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">-&gt;<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="50">conn_config<pos:position pos:line="64" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="63">&amp;<pos:position pos:line="64" pos:column="68"/></operator><name pos:line="64" pos:column="64">logio_module<pos:position pos:line="64" pos:column="76"/></name></expr></argument>)<pos:position pos:line="64" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="78"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="66" pos:column="5">cf<pos:position pos:line="66" pos:column="7"/></name><operator pos:line="66" pos:column="7">-&gt;<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="9">bytes_out<pos:position pos:line="66" pos:column="18"/></name></name> <operator pos:line="66" pos:column="19">+=<pos:position pos:line="66" pos:column="21"/></operator> <name pos:line="66" pos:column="22">bytes<pos:position pos:line="66" pos:column="27"/></name></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
}<pos:position pos:line="67" pos:column="2"/></block></function>

<comment type="block" pos:line="69" pos:column="1">/*
 * Optional function for modules to adjust bytes_in
 */</comment>

<function><specifier pos:line="73" pos:column="1">static<pos:position pos:line="73" pos:column="7"/></specifier> <type><name pos:line="73" pos:column="8">void<pos:position pos:line="73" pos:column="12"/></name></type> <name pos:line="73" pos:column="13">ap_logio_add_bytes_in<pos:position pos:line="73" pos:column="34"/></name><parameter_list pos:line="73" pos:column="34">(<parameter><decl><type><name pos:line="73" pos:column="35">conn_rec<pos:position pos:line="73" pos:column="43"/></name> <modifier pos:line="73" pos:column="44">*<pos:position pos:line="73" pos:column="45"/></modifier></type><name pos:line="73" pos:column="45">c<pos:position pos:line="73" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="73" pos:column="48">apr_off_t<pos:position pos:line="73" pos:column="57"/></name></type> <name pos:line="73" pos:column="58">bytes<pos:position pos:line="73" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="73" pos:column="64"/></parameter_list><block pos:line="73" pos:column="64">{
    <decl_stmt><decl><type><name pos:line="74" pos:column="5">logio_config_t<pos:position pos:line="74" pos:column="19"/></name> <modifier pos:line="74" pos:column="20">*<pos:position pos:line="74" pos:column="21"/></modifier></type><name pos:line="74" pos:column="21">cf<pos:position pos:line="74" pos:column="23"/></name> <init pos:line="74" pos:column="24">= <expr><call><name pos:line="74" pos:column="26">ap_get_module_config<pos:position pos:line="74" pos:column="46"/></name><argument_list pos:line="74" pos:column="46">(<argument><expr><name><name pos:line="74" pos:column="47">c<pos:position pos:line="74" pos:column="48"/></name><operator pos:line="74" pos:column="48">-&gt;<pos:position pos:line="74" pos:column="53"/></operator><name pos:line="74" pos:column="50">conn_config<pos:position pos:line="74" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="63">&amp;<pos:position pos:line="74" pos:column="68"/></operator><name pos:line="74" pos:column="64">logio_module<pos:position pos:line="74" pos:column="76"/></name></expr></argument>)<pos:position pos:line="74" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="78"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="76" pos:column="5">cf<pos:position pos:line="76" pos:column="7"/></name><operator pos:line="76" pos:column="7">-&gt;<pos:position pos:line="76" pos:column="12"/></operator><name pos:line="76" pos:column="9">bytes_in<pos:position pos:line="76" pos:column="17"/></name></name> <operator pos:line="76" pos:column="18">+=<pos:position pos:line="76" pos:column="20"/></operator> <name pos:line="76" pos:column="21">bytes<pos:position pos:line="76" pos:column="26"/></name></expr>;<pos:position pos:line="76" pos:column="27"/></expr_stmt>
}<pos:position pos:line="77" pos:column="2"/></block></function>

<comment type="block" pos:line="79" pos:column="1">/*
 * Optional function to get total byte count of last request for
 * ap_increment_counts.
 */</comment>

<function><specifier pos:line="84" pos:column="1">static<pos:position pos:line="84" pos:column="7"/></specifier> <type><name pos:line="84" pos:column="8">apr_off_t<pos:position pos:line="84" pos:column="17"/></name></type> <name pos:line="84" pos:column="18">ap_logio_get_last_bytes<pos:position pos:line="84" pos:column="41"/></name><parameter_list pos:line="84" pos:column="41">(<parameter><decl><type><name pos:line="84" pos:column="42">conn_rec<pos:position pos:line="84" pos:column="50"/></name> <modifier pos:line="84" pos:column="51">*<pos:position pos:line="84" pos:column="52"/></modifier></type><name pos:line="84" pos:column="52">c<pos:position pos:line="84" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="84" pos:column="54"/></parameter_list>
<block pos:line="85" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="86" pos:column="5">logio_config_t<pos:position pos:line="86" pos:column="19"/></name> <modifier pos:line="86" pos:column="20">*<pos:position pos:line="86" pos:column="21"/></modifier></type><name pos:line="86" pos:column="21">cf<pos:position pos:line="86" pos:column="23"/></name> <init pos:line="86" pos:column="24">= <expr><call><name pos:line="86" pos:column="26">ap_get_module_config<pos:position pos:line="86" pos:column="46"/></name><argument_list pos:line="86" pos:column="46">(<argument><expr><name><name pos:line="86" pos:column="47">c<pos:position pos:line="86" pos:column="48"/></name><operator pos:line="86" pos:column="48">-&gt;<pos:position pos:line="86" pos:column="53"/></operator><name pos:line="86" pos:column="50">conn_config<pos:position pos:line="86" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="63">&amp;<pos:position pos:line="86" pos:column="68"/></operator><name pos:line="86" pos:column="64">logio_module<pos:position pos:line="86" pos:column="76"/></name></expr></argument>)<pos:position pos:line="86" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="86" pos:column="78"/></decl_stmt>

    <return pos:line="88" pos:column="5">return <expr><name><name pos:line="88" pos:column="12">cf<pos:position pos:line="88" pos:column="14"/></name><operator pos:line="88" pos:column="14">-&gt;<pos:position pos:line="88" pos:column="19"/></operator><name pos:line="88" pos:column="16">bytes_last_request<pos:position pos:line="88" pos:column="34"/></name></name></expr>;<pos:position pos:line="88" pos:column="35"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function>

<comment type="block" pos:line="91" pos:column="1">/*
 * Format items...
 */</comment>

<function><specifier pos:line="95" pos:column="1">static<pos:position pos:line="95" pos:column="7"/></specifier> <type><specifier pos:line="95" pos:column="8">const<pos:position pos:line="95" pos:column="13"/></specifier> <name pos:line="95" pos:column="14">char<pos:position pos:line="95" pos:column="18"/></name> <modifier pos:line="95" pos:column="19">*<pos:position pos:line="95" pos:column="20"/></modifier></type><name pos:line="95" pos:column="20">log_bytes_in<pos:position pos:line="95" pos:column="32"/></name><parameter_list pos:line="95" pos:column="32">(<parameter><decl><type><name pos:line="95" pos:column="33">request_rec<pos:position pos:line="95" pos:column="44"/></name> <modifier pos:line="95" pos:column="45">*<pos:position pos:line="95" pos:column="46"/></modifier></type><name pos:line="95" pos:column="46">r<pos:position pos:line="95" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="95" pos:column="49">char<pos:position pos:line="95" pos:column="53"/></name> <modifier pos:line="95" pos:column="54">*<pos:position pos:line="95" pos:column="55"/></modifier></type><name pos:line="95" pos:column="55">a<pos:position pos:line="95" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="95" pos:column="57"/></parameter_list>
<block pos:line="96" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="97" pos:column="5">logio_config_t<pos:position pos:line="97" pos:column="19"/></name> <modifier pos:line="97" pos:column="20">*<pos:position pos:line="97" pos:column="21"/></modifier></type><name pos:line="97" pos:column="21">cf<pos:position pos:line="97" pos:column="23"/></name> <init pos:line="97" pos:column="24">= <expr><call><name pos:line="97" pos:column="26">ap_get_module_config<pos:position pos:line="97" pos:column="46"/></name><argument_list pos:line="97" pos:column="46">(<argument><expr><name><name pos:line="97" pos:column="47">r<pos:position pos:line="97" pos:column="48"/></name><operator pos:line="97" pos:column="48">-&gt;<pos:position pos:line="97" pos:column="53"/></operator><name pos:line="97" pos:column="50">connection<pos:position pos:line="97" pos:column="60"/></name><operator pos:line="97" pos:column="60">-&gt;<pos:position pos:line="97" pos:column="65"/></operator><name pos:line="97" pos:column="62">conn_config<pos:position pos:line="97" pos:column="73"/></name></name></expr></argument>,
                                              <argument><expr><operator pos:line="98" pos:column="47">&amp;<pos:position pos:line="98" pos:column="52"/></operator><name pos:line="98" pos:column="48">logio_module<pos:position pos:line="98" pos:column="60"/></name></expr></argument>)<pos:position pos:line="98" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="98" pos:column="62"/></decl_stmt>

    <return pos:line="100" pos:column="5">return <expr><call><name pos:line="100" pos:column="12">apr_off_t_toa<pos:position pos:line="100" pos:column="25"/></name><argument_list pos:line="100" pos:column="25">(<argument><expr><name><name pos:line="100" pos:column="26">r<pos:position pos:line="100" pos:column="27"/></name><operator pos:line="100" pos:column="27">-&gt;<pos:position pos:line="100" pos:column="32"/></operator><name pos:line="100" pos:column="29">pool<pos:position pos:line="100" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="35">cf<pos:position pos:line="100" pos:column="37"/></name><operator pos:line="100" pos:column="37">-&gt;<pos:position pos:line="100" pos:column="42"/></operator><name pos:line="100" pos:column="39">bytes_in<pos:position pos:line="100" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="49"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function>

<function><specifier pos:line="103" pos:column="1">static<pos:position pos:line="103" pos:column="7"/></specifier> <type><specifier pos:line="103" pos:column="8">const<pos:position pos:line="103" pos:column="13"/></specifier> <name pos:line="103" pos:column="14">char<pos:position pos:line="103" pos:column="18"/></name> <modifier pos:line="103" pos:column="19">*<pos:position pos:line="103" pos:column="20"/></modifier></type><name pos:line="103" pos:column="20">log_bytes_out<pos:position pos:line="103" pos:column="33"/></name><parameter_list pos:line="103" pos:column="33">(<parameter><decl><type><name pos:line="103" pos:column="34">request_rec<pos:position pos:line="103" pos:column="45"/></name> <modifier pos:line="103" pos:column="46">*<pos:position pos:line="103" pos:column="47"/></modifier></type><name pos:line="103" pos:column="47">r<pos:position pos:line="103" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="103" pos:column="50">char<pos:position pos:line="103" pos:column="54"/></name> <modifier pos:line="103" pos:column="55">*<pos:position pos:line="103" pos:column="56"/></modifier></type><name pos:line="103" pos:column="56">a<pos:position pos:line="103" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="103" pos:column="58"/></parameter_list>
<block pos:line="104" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="105" pos:column="5">logio_config_t<pos:position pos:line="105" pos:column="19"/></name> <modifier pos:line="105" pos:column="20">*<pos:position pos:line="105" pos:column="21"/></modifier></type><name pos:line="105" pos:column="21">cf<pos:position pos:line="105" pos:column="23"/></name> <init pos:line="105" pos:column="24">= <expr><call><name pos:line="105" pos:column="26">ap_get_module_config<pos:position pos:line="105" pos:column="46"/></name><argument_list pos:line="105" pos:column="46">(<argument><expr><name><name pos:line="105" pos:column="47">r<pos:position pos:line="105" pos:column="48"/></name><operator pos:line="105" pos:column="48">-&gt;<pos:position pos:line="105" pos:column="53"/></operator><name pos:line="105" pos:column="50">connection<pos:position pos:line="105" pos:column="60"/></name><operator pos:line="105" pos:column="60">-&gt;<pos:position pos:line="105" pos:column="65"/></operator><name pos:line="105" pos:column="62">conn_config<pos:position pos:line="105" pos:column="73"/></name></name></expr></argument>,
                                              <argument><expr><operator pos:line="106" pos:column="47">&amp;<pos:position pos:line="106" pos:column="52"/></operator><name pos:line="106" pos:column="48">logio_module<pos:position pos:line="106" pos:column="60"/></name></expr></argument>)<pos:position pos:line="106" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="106" pos:column="62"/></decl_stmt>

    <return pos:line="108" pos:column="5">return <expr><call><name pos:line="108" pos:column="12">apr_off_t_toa<pos:position pos:line="108" pos:column="25"/></name><argument_list pos:line="108" pos:column="25">(<argument><expr><name><name pos:line="108" pos:column="26">r<pos:position pos:line="108" pos:column="27"/></name><operator pos:line="108" pos:column="27">-&gt;<pos:position pos:line="108" pos:column="32"/></operator><name pos:line="108" pos:column="29">pool<pos:position pos:line="108" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="35">cf<pos:position pos:line="108" pos:column="37"/></name><operator pos:line="108" pos:column="37">-&gt;<pos:position pos:line="108" pos:column="42"/></operator><name pos:line="108" pos:column="39">bytes_out<pos:position pos:line="108" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="50"/></return>
}<pos:position pos:line="109" pos:column="2"/></block></function>

<comment type="block" pos:line="111" pos:column="1">/*
 * Reset counters after logging...
 */</comment>

<function><specifier pos:line="115" pos:column="1">static<pos:position pos:line="115" pos:column="7"/></specifier> <type><name pos:line="115" pos:column="8">int<pos:position pos:line="115" pos:column="11"/></name></type> <name pos:line="115" pos:column="12">logio_transaction<pos:position pos:line="115" pos:column="29"/></name><parameter_list pos:line="115" pos:column="29">(<parameter><decl><type><name pos:line="115" pos:column="30">request_rec<pos:position pos:line="115" pos:column="41"/></name> <modifier pos:line="115" pos:column="42">*<pos:position pos:line="115" pos:column="43"/></modifier></type><name pos:line="115" pos:column="43">r<pos:position pos:line="115" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="115" pos:column="45"/></parameter_list>
<block pos:line="116" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="117" pos:column="5">logio_config_t<pos:position pos:line="117" pos:column="19"/></name> <modifier pos:line="117" pos:column="20">*<pos:position pos:line="117" pos:column="21"/></modifier></type><name pos:line="117" pos:column="21">cf<pos:position pos:line="117" pos:column="23"/></name> <init pos:line="117" pos:column="24">= <expr><call><name pos:line="117" pos:column="26">ap_get_module_config<pos:position pos:line="117" pos:column="46"/></name><argument_list pos:line="117" pos:column="46">(<argument><expr><name><name pos:line="117" pos:column="47">r<pos:position pos:line="117" pos:column="48"/></name><operator pos:line="117" pos:column="48">-&gt;<pos:position pos:line="117" pos:column="53"/></operator><name pos:line="117" pos:column="50">connection<pos:position pos:line="117" pos:column="60"/></name><operator pos:line="117" pos:column="60">-&gt;<pos:position pos:line="117" pos:column="65"/></operator><name pos:line="117" pos:column="62">conn_config<pos:position pos:line="117" pos:column="73"/></name></name></expr></argument>,
                                              <argument><expr><operator pos:line="118" pos:column="47">&amp;<pos:position pos:line="118" pos:column="52"/></operator><name pos:line="118" pos:column="48">logio_module<pos:position pos:line="118" pos:column="60"/></name></expr></argument>)<pos:position pos:line="118" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="118" pos:column="62"/></decl_stmt>

    <comment type="block" pos:line="120" pos:column="5">/* need to save byte count of last request for ap_increment_counts */</comment>
    <expr_stmt><expr><name><name pos:line="121" pos:column="5">cf<pos:position pos:line="121" pos:column="7"/></name><operator pos:line="121" pos:column="7">-&gt;<pos:position pos:line="121" pos:column="12"/></operator><name pos:line="121" pos:column="9">bytes_last_request<pos:position pos:line="121" pos:column="27"/></name></name> <operator pos:line="121" pos:column="28">=<pos:position pos:line="121" pos:column="29"/></operator> <name><name pos:line="121" pos:column="30">cf<pos:position pos:line="121" pos:column="32"/></name><operator pos:line="121" pos:column="32">-&gt;<pos:position pos:line="121" pos:column="37"/></operator><name pos:line="121" pos:column="34">bytes_in<pos:position pos:line="121" pos:column="42"/></name></name> <operator pos:line="121" pos:column="43">+<pos:position pos:line="121" pos:column="44"/></operator> <name><name pos:line="121" pos:column="45">cf<pos:position pos:line="121" pos:column="47"/></name><operator pos:line="121" pos:column="47">-&gt;<pos:position pos:line="121" pos:column="52"/></operator><name pos:line="121" pos:column="49">bytes_out<pos:position pos:line="121" pos:column="58"/></name></name></expr>;<pos:position pos:line="121" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="122" pos:column="5">cf<pos:position pos:line="122" pos:column="7"/></name><operator pos:line="122" pos:column="7">-&gt;<pos:position pos:line="122" pos:column="12"/></operator><name pos:line="122" pos:column="9">bytes_in<pos:position pos:line="122" pos:column="17"/></name></name> <operator pos:line="122" pos:column="18">=<pos:position pos:line="122" pos:column="19"/></operator> <name><name pos:line="122" pos:column="20">cf<pos:position pos:line="122" pos:column="22"/></name><operator pos:line="122" pos:column="22">-&gt;<pos:position pos:line="122" pos:column="27"/></operator><name pos:line="122" pos:column="24">bytes_out<pos:position pos:line="122" pos:column="33"/></name></name> <operator pos:line="122" pos:column="34">=<pos:position pos:line="122" pos:column="35"/></operator> <literal type="number" pos:line="122" pos:column="36">0<pos:position pos:line="122" pos:column="37"/></literal></expr>;<pos:position pos:line="122" pos:column="38"/></expr_stmt>

    <return pos:line="124" pos:column="5">return <expr><name pos:line="124" pos:column="12">OK<pos:position pos:line="124" pos:column="14"/></name></expr>;<pos:position pos:line="124" pos:column="15"/></return>
}<pos:position pos:line="125" pos:column="2"/></block></function>

<comment type="block" pos:line="127" pos:column="1">/*
 * Logging of input filter...
 */</comment>

<function><specifier pos:line="131" pos:column="1">static<pos:position pos:line="131" pos:column="7"/></specifier> <type><name pos:line="131" pos:column="8">apr_status_t<pos:position pos:line="131" pos:column="20"/></name></type> <name pos:line="131" pos:column="21">logio_in_filter<pos:position pos:line="131" pos:column="36"/></name><parameter_list pos:line="131" pos:column="36">(<parameter><decl><type><name pos:line="131" pos:column="37">ap_filter_t<pos:position pos:line="131" pos:column="48"/></name> <modifier pos:line="131" pos:column="49">*<pos:position pos:line="131" pos:column="50"/></modifier></type><name pos:line="131" pos:column="50">f<pos:position pos:line="131" pos:column="51"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="132" pos:column="37">apr_bucket_brigade<pos:position pos:line="132" pos:column="55"/></name> <modifier pos:line="132" pos:column="56">*<pos:position pos:line="132" pos:column="57"/></modifier></type><name pos:line="132" pos:column="57">bb<pos:position pos:line="132" pos:column="59"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="133" pos:column="37">ap_input_mode_t<pos:position pos:line="133" pos:column="52"/></name></type> <name pos:line="133" pos:column="53">mode<pos:position pos:line="133" pos:column="57"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="134" pos:column="37">apr_read_type_e<pos:position pos:line="134" pos:column="52"/></name></type> <name pos:line="134" pos:column="53">block<pos:position pos:line="134" pos:column="58"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="135" pos:column="37">apr_off_t<pos:position pos:line="135" pos:column="46"/></name></type> <name pos:line="135" pos:column="47">readbytes<pos:position pos:line="135" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="135" pos:column="57"/></parameter_list> <block pos:line="135" pos:column="58">{
    <decl_stmt><decl><type><name pos:line="136" pos:column="5">apr_off_t<pos:position pos:line="136" pos:column="14"/></name></type> <name pos:line="136" pos:column="15">length<pos:position pos:line="136" pos:column="21"/></name></decl>;<pos:position pos:line="136" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="137" pos:column="5">apr_status_t<pos:position pos:line="137" pos:column="17"/></name></type> <name pos:line="137" pos:column="18">status<pos:position pos:line="137" pos:column="24"/></name></decl>;<pos:position pos:line="137" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="138" pos:column="5">logio_config_t<pos:position pos:line="138" pos:column="19"/></name> <modifier pos:line="138" pos:column="20">*<pos:position pos:line="138" pos:column="21"/></modifier></type><name pos:line="138" pos:column="21">cf<pos:position pos:line="138" pos:column="23"/></name> <init pos:line="138" pos:column="24">= <expr><call><name pos:line="138" pos:column="26">ap_get_module_config<pos:position pos:line="138" pos:column="46"/></name><argument_list pos:line="138" pos:column="46">(<argument><expr><name><name pos:line="138" pos:column="47">f<pos:position pos:line="138" pos:column="48"/></name><operator pos:line="138" pos:column="48">-&gt;<pos:position pos:line="138" pos:column="53"/></operator><name pos:line="138" pos:column="50">c<pos:position pos:line="138" pos:column="51"/></name><operator pos:line="138" pos:column="51">-&gt;<pos:position pos:line="138" pos:column="56"/></operator><name pos:line="138" pos:column="53">conn_config<pos:position pos:line="138" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="138" pos:column="66">&amp;<pos:position pos:line="138" pos:column="71"/></operator><name pos:line="138" pos:column="67">logio_module<pos:position pos:line="138" pos:column="79"/></name></expr></argument>)<pos:position pos:line="138" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="138" pos:column="81"/></decl_stmt>

    <expr_stmt><expr><name pos:line="140" pos:column="5">status<pos:position pos:line="140" pos:column="11"/></name> <operator pos:line="140" pos:column="12">=<pos:position pos:line="140" pos:column="13"/></operator> <call><name pos:line="140" pos:column="14">ap_get_brigade<pos:position pos:line="140" pos:column="28"/></name><argument_list pos:line="140" pos:column="28">(<argument><expr><name><name pos:line="140" pos:column="29">f<pos:position pos:line="140" pos:column="30"/></name><operator pos:line="140" pos:column="30">-&gt;<pos:position pos:line="140" pos:column="35"/></operator><name pos:line="140" pos:column="32">next<pos:position pos:line="140" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="38">bb<pos:position pos:line="140" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="42">mode<pos:position pos:line="140" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="48">block<pos:position pos:line="140" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="55">readbytes<pos:position pos:line="140" pos:column="64"/></name></expr></argument>)<pos:position pos:line="140" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="142" pos:column="5">apr_brigade_length<pos:position pos:line="142" pos:column="23"/></name> <argument_list pos:line="142" pos:column="24">(<argument><expr><name pos:line="142" pos:column="25">bb<pos:position pos:line="142" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="29">0<pos:position pos:line="142" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="142" pos:column="32">&amp;<pos:position pos:line="142" pos:column="37"/></operator><name pos:line="142" pos:column="33">length<pos:position pos:line="142" pos:column="39"/></name></expr></argument>)<pos:position pos:line="142" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="41"/></expr_stmt>

    <if pos:line="144" pos:column="5">if <condition pos:line="144" pos:column="8">(<expr><name pos:line="144" pos:column="9">length<pos:position pos:line="144" pos:column="15"/></name> <operator pos:line="144" pos:column="16">&gt;<pos:position pos:line="144" pos:column="20"/></operator> <literal type="number" pos:line="144" pos:column="18">0<pos:position pos:line="144" pos:column="19"/></literal></expr>)<pos:position pos:line="144" pos:column="20"/></condition><then pos:line="144" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="145" pos:column="9">cf<pos:position pos:line="145" pos:column="11"/></name><operator pos:line="145" pos:column="11">-&gt;<pos:position pos:line="145" pos:column="16"/></operator><name pos:line="145" pos:column="13">bytes_in<pos:position pos:line="145" pos:column="21"/></name></name> <operator pos:line="145" pos:column="22">+=<pos:position pos:line="145" pos:column="24"/></operator> <name pos:line="145" pos:column="25">length<pos:position pos:line="145" pos:column="31"/></name></expr>;<pos:position pos:line="145" pos:column="32"/></expr_stmt></block></then></if>

    <return pos:line="147" pos:column="5">return <expr><name pos:line="147" pos:column="12">status<pos:position pos:line="147" pos:column="18"/></name></expr>;<pos:position pos:line="147" pos:column="19"/></return>
}<pos:position pos:line="148" pos:column="2"/></block></function>

<comment type="block" pos:line="150" pos:column="1">/*
 * The hooks...
 */</comment>

<function><specifier pos:line="154" pos:column="1">static<pos:position pos:line="154" pos:column="7"/></specifier> <type><name pos:line="154" pos:column="8">int<pos:position pos:line="154" pos:column="11"/></name></type> <name pos:line="154" pos:column="12">logio_pre_conn<pos:position pos:line="154" pos:column="26"/></name><parameter_list pos:line="154" pos:column="26">(<parameter><decl><type><name pos:line="154" pos:column="27">conn_rec<pos:position pos:line="154" pos:column="35"/></name> <modifier pos:line="154" pos:column="36">*<pos:position pos:line="154" pos:column="37"/></modifier></type><name pos:line="154" pos:column="37">c<pos:position pos:line="154" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="154" pos:column="40">void<pos:position pos:line="154" pos:column="44"/></name> <modifier pos:line="154" pos:column="45">*<pos:position pos:line="154" pos:column="46"/></modifier></type><name pos:line="154" pos:column="46">csd<pos:position pos:line="154" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="154" pos:column="50"/></parameter_list> <block pos:line="154" pos:column="51">{
    <decl_stmt><decl><type><name pos:line="155" pos:column="5">logio_config_t<pos:position pos:line="155" pos:column="19"/></name> <modifier pos:line="155" pos:column="20">*<pos:position pos:line="155" pos:column="21"/></modifier></type><name pos:line="155" pos:column="21">cf<pos:position pos:line="155" pos:column="23"/></name> <init pos:line="155" pos:column="24">= <expr><call><name pos:line="155" pos:column="26">apr_pcalloc<pos:position pos:line="155" pos:column="37"/></name><argument_list pos:line="155" pos:column="37">(<argument><expr><name><name pos:line="155" pos:column="38">c<pos:position pos:line="155" pos:column="39"/></name><operator pos:line="155" pos:column="39">-&gt;<pos:position pos:line="155" pos:column="44"/></operator><name pos:line="155" pos:column="41">pool<pos:position pos:line="155" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="155" pos:column="47">sizeof<argument_list pos:line="155" pos:column="53">(<argument><expr><operator pos:line="155" pos:column="54">*<pos:position pos:line="155" pos:column="55"/></operator><name pos:line="155" pos:column="55">cf<pos:position pos:line="155" pos:column="57"/></name></expr></argument>)<pos:position pos:line="155" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="155" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="155" pos:column="60"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="157" pos:column="5">ap_set_module_config<pos:position pos:line="157" pos:column="25"/></name><argument_list pos:line="157" pos:column="25">(<argument><expr><name><name pos:line="157" pos:column="26">c<pos:position pos:line="157" pos:column="27"/></name><operator pos:line="157" pos:column="27">-&gt;<pos:position pos:line="157" pos:column="32"/></operator><name pos:line="157" pos:column="29">conn_config<pos:position pos:line="157" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="157" pos:column="42">&amp;<pos:position pos:line="157" pos:column="47"/></operator><name pos:line="157" pos:column="43">logio_module<pos:position pos:line="157" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="57">cf<pos:position pos:line="157" pos:column="59"/></name></expr></argument>)<pos:position pos:line="157" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="159" pos:column="5">ap_add_input_filter<pos:position pos:line="159" pos:column="24"/></name><argument_list pos:line="159" pos:column="24">(<argument><expr><name pos:line="159" pos:column="25">logio_filter_name<pos:position pos:line="159" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="44">NULL<pos:position pos:line="159" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="50">NULL<pos:position pos:line="159" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="56">c<pos:position pos:line="159" pos:column="57"/></name></expr></argument>)<pos:position pos:line="159" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="59"/></expr_stmt>

    <return pos:line="161" pos:column="5">return <expr><name pos:line="161" pos:column="12">OK<pos:position pos:line="161" pos:column="14"/></name></expr>;<pos:position pos:line="161" pos:column="15"/></return>
}<pos:position pos:line="162" pos:column="2"/></block></function>

<function><specifier pos:line="164" pos:column="1">static<pos:position pos:line="164" pos:column="7"/></specifier> <type><name pos:line="164" pos:column="8">int<pos:position pos:line="164" pos:column="11"/></name></type> <name pos:line="164" pos:column="12">logio_pre_config<pos:position pos:line="164" pos:column="28"/></name><parameter_list pos:line="164" pos:column="28">(<parameter><decl><type><name pos:line="164" pos:column="29">apr_pool_t<pos:position pos:line="164" pos:column="39"/></name> <modifier pos:line="164" pos:column="40">*<pos:position pos:line="164" pos:column="41"/></modifier></type><name pos:line="164" pos:column="41">p<pos:position pos:line="164" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="164" pos:column="44">apr_pool_t<pos:position pos:line="164" pos:column="54"/></name> <modifier pos:line="164" pos:column="55">*<pos:position pos:line="164" pos:column="56"/></modifier></type><name pos:line="164" pos:column="56">plog<pos:position pos:line="164" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="164" pos:column="62">apr_pool_t<pos:position pos:line="164" pos:column="72"/></name> <modifier pos:line="164" pos:column="73">*<pos:position pos:line="164" pos:column="74"/></modifier></type><name pos:line="164" pos:column="74">ptemp<pos:position pos:line="164" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="164" pos:column="80"/></parameter_list>
<block pos:line="165" pos:column="1">{
    <expr_stmt><expr><specifier pos:line="166" pos:column="5">static<pos:position pos:line="166" pos:column="11"/></specifier> <call><name pos:line="166" pos:column="12">APR_OPTIONAL_FN_TYPE<pos:position pos:line="166" pos:column="32"/></name><argument_list pos:line="166" pos:column="32">(<argument><expr><name pos:line="166" pos:column="33">ap_register_log_handler<pos:position pos:line="166" pos:column="56"/></name></expr></argument>)<pos:position pos:line="166" pos:column="57"/></argument_list></call> <operator pos:line="166" pos:column="58">*<pos:position pos:line="166" pos:column="59"/></operator><name pos:line="166" pos:column="59">log_pfn_register<pos:position pos:line="166" pos:column="75"/></name></expr>;<pos:position pos:line="166" pos:column="76"/></expr_stmt>

    <expr_stmt><expr><name pos:line="168" pos:column="5">log_pfn_register<pos:position pos:line="168" pos:column="21"/></name> <operator pos:line="168" pos:column="22">=<pos:position pos:line="168" pos:column="23"/></operator> <call><name pos:line="168" pos:column="24">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="168" pos:column="48"/></name><argument_list pos:line="168" pos:column="48">(<argument><expr><name pos:line="168" pos:column="49">ap_register_log_handler<pos:position pos:line="168" pos:column="72"/></name></expr></argument>)<pos:position pos:line="168" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="74"/></expr_stmt>

    <if pos:line="170" pos:column="5">if <condition pos:line="170" pos:column="8">(<expr><name pos:line="170" pos:column="9">log_pfn_register<pos:position pos:line="170" pos:column="25"/></name></expr>)<pos:position pos:line="170" pos:column="26"/></condition><then pos:line="170" pos:column="26"> <block pos:line="170" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="171" pos:column="9">log_pfn_register<pos:position pos:line="171" pos:column="25"/></name><argument_list pos:line="171" pos:column="25">(<argument><expr><name pos:line="171" pos:column="26">p<pos:position pos:line="171" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="29">"I"<pos:position pos:line="171" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="171" pos:column="34">log_bytes_in<pos:position pos:line="171" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="171" pos:column="48">0<pos:position pos:line="171" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="172" pos:column="9">log_pfn_register<pos:position pos:line="172" pos:column="25"/></name><argument_list pos:line="172" pos:column="25">(<argument><expr><name pos:line="172" pos:column="26">p<pos:position pos:line="172" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="29">"O"<pos:position pos:line="172" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="172" pos:column="34">log_bytes_out<pos:position pos:line="172" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="172" pos:column="49">0<pos:position pos:line="172" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="173" pos:column="6"/></block></then></if>

    <return pos:line="175" pos:column="5">return <expr><name pos:line="175" pos:column="12">OK<pos:position pos:line="175" pos:column="14"/></name></expr>;<pos:position pos:line="175" pos:column="15"/></return>
}<pos:position pos:line="176" pos:column="2"/></block></function>

<function><specifier pos:line="178" pos:column="1">static<pos:position pos:line="178" pos:column="7"/></specifier> <type><name pos:line="178" pos:column="8">void<pos:position pos:line="178" pos:column="12"/></name></type> <name pos:line="178" pos:column="13">register_hooks<pos:position pos:line="178" pos:column="27"/></name><parameter_list pos:line="178" pos:column="27">(<parameter><decl><type><name pos:line="178" pos:column="28">apr_pool_t<pos:position pos:line="178" pos:column="38"/></name> <modifier pos:line="178" pos:column="39">*<pos:position pos:line="178" pos:column="40"/></modifier></type><name pos:line="178" pos:column="40">p<pos:position pos:line="178" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="178" pos:column="42"/></parameter_list>
<block pos:line="179" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="180" pos:column="5">static<pos:position pos:line="180" pos:column="11"/></specifier> <type><specifier pos:line="180" pos:column="12">const<pos:position pos:line="180" pos:column="17"/></specifier> <name pos:line="180" pos:column="18">char<pos:position pos:line="180" pos:column="22"/></name> <modifier pos:line="180" pos:column="23">*<pos:position pos:line="180" pos:column="24"/></modifier></type><name><name pos:line="180" pos:column="24">pre<pos:position pos:line="180" pos:column="27"/></name><index pos:line="180" pos:column="27">[]<pos:position pos:line="180" pos:column="29"/></index></name> <init pos:line="180" pos:column="30">= <expr><block pos:line="180" pos:column="32">{ <expr><literal type="string" pos:line="180" pos:column="34">"mod_log_config.c"<pos:position pos:line="180" pos:column="52"/></literal></expr>, <expr><name pos:line="180" pos:column="54">NULL<pos:position pos:line="180" pos:column="58"/></name></expr> }<pos:position pos:line="180" pos:column="60"/></block></expr></init></decl>;<pos:position pos:line="180" pos:column="61"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="182" pos:column="5">ap_hook_pre_connection<pos:position pos:line="182" pos:column="27"/></name><argument_list pos:line="182" pos:column="27">(<argument><expr><name pos:line="182" pos:column="28">logio_pre_conn<pos:position pos:line="182" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="44">NULL<pos:position pos:line="182" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="50">NULL<pos:position pos:line="182" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="56">APR_HOOK_MIDDLE<pos:position pos:line="182" pos:column="71"/></name></expr></argument>)<pos:position pos:line="182" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="183" pos:column="5">ap_hook_pre_config<pos:position pos:line="183" pos:column="23"/></name><argument_list pos:line="183" pos:column="23">(<argument><expr><name pos:line="183" pos:column="24">logio_pre_config<pos:position pos:line="183" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="42">NULL<pos:position pos:line="183" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="48">NULL<pos:position pos:line="183" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="54">APR_HOOK_REALLY_FIRST<pos:position pos:line="183" pos:column="75"/></name></expr></argument>)<pos:position pos:line="183" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="184" pos:column="5">ap_hook_log_transaction<pos:position pos:line="184" pos:column="28"/></name><argument_list pos:line="184" pos:column="28">(<argument><expr><name pos:line="184" pos:column="29">logio_transaction<pos:position pos:line="184" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="48">pre<pos:position pos:line="184" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="53">NULL<pos:position pos:line="184" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="59">APR_HOOK_MIDDLE<pos:position pos:line="184" pos:column="74"/></name></expr></argument>)<pos:position pos:line="184" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="76"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="186" pos:column="5">ap_register_input_filter<pos:position pos:line="186" pos:column="29"/></name><argument_list pos:line="186" pos:column="29">(<argument><expr><name pos:line="186" pos:column="30">logio_filter_name<pos:position pos:line="186" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="49">logio_in_filter<pos:position pos:line="186" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="66">NULL<pos:position pos:line="186" pos:column="70"/></name></expr></argument>,
                             <argument><expr><name pos:line="187" pos:column="30">AP_FTYPE_NETWORK<pos:position pos:line="187" pos:column="46"/></name> <operator pos:line="187" pos:column="47">-<pos:position pos:line="187" pos:column="48"/></operator> <literal type="number" pos:line="187" pos:column="49">1<pos:position pos:line="187" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="189" pos:column="5">APR_REGISTER_OPTIONAL_FN<pos:position pos:line="189" pos:column="29"/></name><argument_list pos:line="189" pos:column="29">(<argument><expr><name pos:line="189" pos:column="30">ap_logio_add_bytes_out<pos:position pos:line="189" pos:column="52"/></name></expr></argument>)<pos:position pos:line="189" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="190" pos:column="5">APR_REGISTER_OPTIONAL_FN<pos:position pos:line="190" pos:column="29"/></name><argument_list pos:line="190" pos:column="29">(<argument><expr><name pos:line="190" pos:column="30">ap_logio_add_bytes_in<pos:position pos:line="190" pos:column="51"/></name></expr></argument>)<pos:position pos:line="190" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="191" pos:column="5">APR_REGISTER_OPTIONAL_FN<pos:position pos:line="191" pos:column="29"/></name><argument_list pos:line="191" pos:column="29">(<argument><expr><name pos:line="191" pos:column="30">ap_logio_get_last_bytes<pos:position pos:line="191" pos:column="53"/></name></expr></argument>)<pos:position pos:line="191" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="55"/></expr_stmt>
}<pos:position pos:line="192" pos:column="2"/></block></function>

<expr_stmt><expr><call><name pos:line="194" pos:column="1">AP_DECLARE_MODULE<pos:position pos:line="194" pos:column="18"/></name><argument_list pos:line="194" pos:column="18">(<argument><expr><name pos:line="194" pos:column="19">logio<pos:position pos:line="194" pos:column="24"/></name></expr></argument>)<pos:position pos:line="194" pos:column="25"/></argument_list></call> <operator pos:line="194" pos:column="26">=<pos:position pos:line="194" pos:column="27"/></operator>
<block pos:line="195" pos:column="1">{
    <expr><name pos:line="196" pos:column="5">STANDARD20_MODULE_STUFF<pos:position pos:line="196" pos:column="28"/></name></expr>,
    <expr><name pos:line="197" pos:column="5">NULL<pos:position pos:line="197" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="197" pos:column="33">/* create per-dir config */</comment>
    <expr><name pos:line="198" pos:column="5">NULL<pos:position pos:line="198" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="198" pos:column="33">/* merge per-dir config */</comment>
    <expr><name pos:line="199" pos:column="5">NULL<pos:position pos:line="199" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="199" pos:column="33">/* server config */</comment>
    <expr><name pos:line="200" pos:column="5">NULL<pos:position pos:line="200" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="200" pos:column="33">/* merge server config */</comment>
    <expr><name pos:line="201" pos:column="5">NULL<pos:position pos:line="201" pos:column="9"/></name></expr>,                       <comment type="block" pos:line="201" pos:column="33">/* command apr_table_t */</comment>
    <expr><name pos:line="202" pos:column="5">register_hooks<pos:position pos:line="202" pos:column="19"/></name></expr>              <comment type="block" pos:line="202" pos:column="33">/* register hooks */</comment>
}<pos:position pos:line="203" pos:column="2"/></block></expr>;<pos:position pos:line="203" pos:column="3"/></expr_stmt>
</unit>

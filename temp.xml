<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C" filename="second/download/git/repos/git-2.6.7/commit.c" pos:tabs="8"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include<pos:position pos:line="1" pos:column="9"/></cpp:directive> <cpp:file pos:line="1" pos:column="10">"cache.h"<pos:position pos:line="1" pos:column="19"/></cpp:file></cpp:include>
<cpp:include pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">include<pos:position pos:line="2" pos:column="9"/></cpp:directive> <cpp:file pos:line="2" pos:column="10">"tag.h"<pos:position pos:line="2" pos:column="17"/></cpp:file></cpp:include>
<cpp:include pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">include<pos:position pos:line="3" pos:column="9"/></cpp:directive> <cpp:file pos:line="3" pos:column="10">"commit.h"<pos:position pos:line="3" pos:column="20"/></cpp:file></cpp:include>
<cpp:include pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">include<pos:position pos:line="4" pos:column="9"/></cpp:directive> <cpp:file pos:line="4" pos:column="10">"pkt-line.h"<pos:position pos:line="4" pos:column="22"/></cpp:file></cpp:include>
<cpp:include pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">include<pos:position pos:line="5" pos:column="9"/></cpp:directive> <cpp:file pos:line="5" pos:column="10">"utf8.h"<pos:position pos:line="5" pos:column="18"/></cpp:file></cpp:include>
<cpp:include pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">include<pos:position pos:line="6" pos:column="9"/></cpp:directive> <cpp:file pos:line="6" pos:column="10">"diff.h"<pos:position pos:line="6" pos:column="18"/></cpp:file></cpp:include>
<cpp:include pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">include<pos:position pos:line="7" pos:column="9"/></cpp:directive> <cpp:file pos:line="7" pos:column="10">"revision.h"<pos:position pos:line="7" pos:column="22"/></cpp:file></cpp:include>
<cpp:include pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">include<pos:position pos:line="8" pos:column="9"/></cpp:directive> <cpp:file pos:line="8" pos:column="10">"notes.h"<pos:position pos:line="8" pos:column="19"/></cpp:file></cpp:include>
<cpp:include pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">include<pos:position pos:line="9" pos:column="9"/></cpp:directive> <cpp:file pos:line="9" pos:column="10">"gpg-interface.h"<pos:position pos:line="9" pos:column="27"/></cpp:file></cpp:include>
<cpp:include pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">include<pos:position pos:line="10" pos:column="9"/></cpp:directive> <cpp:file pos:line="10" pos:column="10">"mergesort.h"<pos:position pos:line="10" pos:column="23"/></cpp:file></cpp:include>
<cpp:include pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">include<pos:position pos:line="11" pos:column="9"/></cpp:directive> <cpp:file pos:line="11" pos:column="10">"commit-slab.h"<pos:position pos:line="11" pos:column="25"/></cpp:file></cpp:include>
<cpp:include pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">include<pos:position pos:line="12" pos:column="9"/></cpp:directive> <cpp:file pos:line="12" pos:column="10">"prio-queue.h"<pos:position pos:line="12" pos:column="24"/></cpp:file></cpp:include>
<cpp:include pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">include<pos:position pos:line="13" pos:column="9"/></cpp:directive> <cpp:file pos:line="13" pos:column="10">"sha1-lookup.h"<pos:position pos:line="13" pos:column="25"/></cpp:file></cpp:include>

<function_decl><specifier pos:line="15" pos:column="1">static<pos:position pos:line="15" pos:column="7"/></specifier> <type><name><name pos:line="15" pos:column="8">struct<pos:position pos:line="15" pos:column="14"/></name> <name pos:line="15" pos:column="15">commit_extra_header<pos:position pos:line="15" pos:column="34"/></name></name> <modifier pos:line="15" pos:column="35">*<pos:position pos:line="15" pos:column="36"/></modifier></type><name pos:line="15" pos:column="36">read_commit_extra_header_lines<pos:position pos:line="15" pos:column="66"/></name><parameter_list pos:line="15" pos:column="66">(<parameter><decl><type><specifier pos:line="15" pos:column="67">const<pos:position pos:line="15" pos:column="72"/></specifier> <name pos:line="15" pos:column="73">char<pos:position pos:line="15" pos:column="77"/></name> <modifier pos:line="15" pos:column="78">*<pos:position pos:line="15" pos:column="79"/></modifier></type><name pos:line="15" pos:column="79">buf<pos:position pos:line="15" pos:column="82"/></name></decl></parameter>, <parameter><decl><type><name pos:line="15" pos:column="84">size_t<pos:position pos:line="15" pos:column="90"/></name></type> <name pos:line="15" pos:column="91">len<pos:position pos:line="15" pos:column="94"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="15" pos:column="96">const<pos:position pos:line="15" pos:column="101"/></specifier> <name pos:line="15" pos:column="102">char<pos:position pos:line="15" pos:column="106"/></name> <modifier pos:line="15" pos:column="107">*<pos:position pos:line="15" pos:column="108"/></modifier><modifier pos:line="15" pos:column="108">*<pos:position pos:line="15" pos:column="109"/></modifier></type></decl></parameter>)<pos:position pos:line="15" pos:column="110"/></parameter_list>;<pos:position pos:line="15" pos:column="111"/></function_decl>

<decl_stmt><decl><type><name pos:line="17" pos:column="1">int<pos:position pos:line="17" pos:column="4"/></name></type> <name pos:line="17" pos:column="5">save_commit_buffer<pos:position pos:line="17" pos:column="23"/></name> <init pos:line="17" pos:column="24">= <expr><literal type="number" pos:line="17" pos:column="26">1<pos:position pos:line="17" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>

<decl_stmt><decl><type><specifier pos:line="19" pos:column="1">const<pos:position pos:line="19" pos:column="6"/></specifier> <name pos:line="19" pos:column="7">char<pos:position pos:line="19" pos:column="11"/></name> <modifier pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></modifier></type><name pos:line="19" pos:column="13">commit_type<pos:position pos:line="19" pos:column="24"/></name> <init pos:line="19" pos:column="25">= <expr><literal type="string" pos:line="19" pos:column="27">"commit"<pos:position pos:line="19" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="36"/></decl_stmt>

<function><type><name><name pos:line="21" pos:column="1">struct<pos:position pos:line="21" pos:column="7"/></name> <name pos:line="21" pos:column="8">commit<pos:position pos:line="21" pos:column="14"/></name></name> <modifier pos:line="21" pos:column="15">*<pos:position pos:line="21" pos:column="16"/></modifier></type><name pos:line="21" pos:column="16">lookup_commit_reference_gently<pos:position pos:line="21" pos:column="46"/></name><parameter_list pos:line="21" pos:column="46">(<parameter><decl><type><specifier pos:line="21" pos:column="47">const<pos:position pos:line="21" pos:column="52"/></specifier> <name pos:line="21" pos:column="53">unsigned<pos:position pos:line="21" pos:column="61"/></name> <name pos:line="21" pos:column="62">char<pos:position pos:line="21" pos:column="66"/></name> <modifier pos:line="21" pos:column="67">*<pos:position pos:line="21" pos:column="68"/></modifier></type><name pos:line="21" pos:column="68">sha1<pos:position pos:line="21" pos:column="72"/></name></decl></parameter>,
					      <parameter><decl><type><name pos:line="22" pos:column="47">int<pos:position pos:line="22" pos:column="50"/></name></type> <name pos:line="22" pos:column="51">quiet<pos:position pos:line="22" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="22" pos:column="57"/></parameter_list>
<block pos:line="23" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="24" pos:column="9">struct<pos:position pos:line="24" pos:column="15"/></name> <name pos:line="24" pos:column="16">object<pos:position pos:line="24" pos:column="22"/></name></name> <modifier pos:line="24" pos:column="23">*<pos:position pos:line="24" pos:column="24"/></modifier></type><name pos:line="24" pos:column="24">obj<pos:position pos:line="24" pos:column="27"/></name> <init pos:line="24" pos:column="28">= <expr><call><name pos:line="24" pos:column="30">deref_tag<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><call><name pos:line="24" pos:column="40">parse_object<pos:position pos:line="24" pos:column="52"/></name><argument_list pos:line="24" pos:column="52">(<argument><expr><name pos:line="24" pos:column="53">sha1<pos:position pos:line="24" pos:column="57"/></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="60">NULL<pos:position pos:line="24" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="66">0<pos:position pos:line="24" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="69"/></decl_stmt>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">obj<pos:position pos:line="26" pos:column="17"/></name></expr>)<pos:position pos:line="26" pos:column="18"/></condition><then pos:line="26" pos:column="18">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><name pos:line="27" pos:column="24">NULL<pos:position pos:line="27" pos:column="28"/></name></expr>;<pos:position pos:line="27" pos:column="29"/></return></block></then></if>
	<return pos:line="28" pos:column="9">return <expr><call><name pos:line="28" pos:column="16">object_as_type<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">obj<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">OBJ_COMMIT<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">quiet<pos:position pos:line="28" pos:column="53"/></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function>

<function><type><name><name pos:line="31" pos:column="1">struct<pos:position pos:line="31" pos:column="7"/></name> <name pos:line="31" pos:column="8">commit<pos:position pos:line="31" pos:column="14"/></name></name> <modifier pos:line="31" pos:column="15">*<pos:position pos:line="31" pos:column="16"/></modifier></type><name pos:line="31" pos:column="16">lookup_commit_reference<pos:position pos:line="31" pos:column="39"/></name><parameter_list pos:line="31" pos:column="39">(<parameter><decl><type><specifier pos:line="31" pos:column="40">const<pos:position pos:line="31" pos:column="45"/></specifier> <name pos:line="31" pos:column="46">unsigned<pos:position pos:line="31" pos:column="54"/></name> <name pos:line="31" pos:column="55">char<pos:position pos:line="31" pos:column="59"/></name> <modifier pos:line="31" pos:column="60">*<pos:position pos:line="31" pos:column="61"/></modifier></type><name pos:line="31" pos:column="61">sha1<pos:position pos:line="31" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="31" pos:column="66"/></parameter_list>
<block pos:line="32" pos:column="1">{
	<return pos:line="33" pos:column="9">return <expr><call><name pos:line="33" pos:column="16">lookup_commit_reference_gently<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">(<argument><expr><name pos:line="33" pos:column="47">sha1<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="53">0<pos:position pos:line="33" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function>

<function><type><name><name pos:line="36" pos:column="1">struct<pos:position pos:line="36" pos:column="7"/></name> <name pos:line="36" pos:column="8">commit<pos:position pos:line="36" pos:column="14"/></name></name> <modifier pos:line="36" pos:column="15">*<pos:position pos:line="36" pos:column="16"/></modifier></type><name pos:line="36" pos:column="16">lookup_commit_or_die<pos:position pos:line="36" pos:column="36"/></name><parameter_list pos:line="36" pos:column="36">(<parameter><decl><type><specifier pos:line="36" pos:column="37">const<pos:position pos:line="36" pos:column="42"/></specifier> <name pos:line="36" pos:column="43">unsigned<pos:position pos:line="36" pos:column="51"/></name> <name pos:line="36" pos:column="52">char<pos:position pos:line="36" pos:column="56"/></name> <modifier pos:line="36" pos:column="57">*<pos:position pos:line="36" pos:column="58"/></modifier></type><name pos:line="36" pos:column="58">sha1<pos:position pos:line="36" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="36" pos:column="64">const<pos:position pos:line="36" pos:column="69"/></specifier> <name pos:line="36" pos:column="70">char<pos:position pos:line="36" pos:column="74"/></name> <modifier pos:line="36" pos:column="75">*<pos:position pos:line="36" pos:column="76"/></modifier></type><name pos:line="36" pos:column="76">ref_name<pos:position pos:line="36" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="36" pos:column="85"/></parameter_list>
<block pos:line="37" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="38" pos:column="9">struct<pos:position pos:line="38" pos:column="15"/></name> <name pos:line="38" pos:column="16">commit<pos:position pos:line="38" pos:column="22"/></name></name> <modifier pos:line="38" pos:column="23">*<pos:position pos:line="38" pos:column="24"/></modifier></type><name pos:line="38" pos:column="24">c<pos:position pos:line="38" pos:column="25"/></name> <init pos:line="38" pos:column="26">= <expr><call><name pos:line="38" pos:column="28">lookup_commit_reference<pos:position pos:line="38" pos:column="51"/></name><argument_list pos:line="38" pos:column="51">(<argument><expr><name pos:line="38" pos:column="52">sha1<pos:position pos:line="38" pos:column="56"/></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="58"/></decl_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">c<pos:position pos:line="39" pos:column="15"/></name></expr>)<pos:position pos:line="39" pos:column="16"/></condition><then pos:line="39" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">die<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><call><name pos:line="40" pos:column="21">_<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><literal type="string" pos:line="40" pos:column="23">"could not parse %s"<pos:position pos:line="40" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">ref_name<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt></block></then></if>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">hashcmp<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name pos:line="41" pos:column="21">sha1<pos:position pos:line="41" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="27">c<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">object<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">.<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="37">sha1<pos:position pos:line="41" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="43"/></condition><then pos:line="41" pos:column="43"> <block pos:line="41" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">warning<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><call><name pos:line="42" pos:column="25">_<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><literal type="string" pos:line="42" pos:column="27">"%s %s is not a commit!"<pos:position pos:line="42" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="43" pos:column="25">ref_name<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="35">sha1_to_hex<pos:position pos:line="43" pos:column="46"/></name><argument_list pos:line="43" pos:column="46">(<argument><expr><name pos:line="43" pos:column="47">sha1<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>
	<return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">c<pos:position pos:line="45" pos:column="17"/></name></expr>;<pos:position pos:line="45" pos:column="18"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function>

<function><type><name><name pos:line="48" pos:column="1">struct<pos:position pos:line="48" pos:column="7"/></name> <name pos:line="48" pos:column="8">commit<pos:position pos:line="48" pos:column="14"/></name></name> <modifier pos:line="48" pos:column="15">*<pos:position pos:line="48" pos:column="16"/></modifier></type><name pos:line="48" pos:column="16">lookup_commit<pos:position pos:line="48" pos:column="29"/></name><parameter_list pos:line="48" pos:column="29">(<parameter><decl><type><specifier pos:line="48" pos:column="30">const<pos:position pos:line="48" pos:column="35"/></specifier> <name pos:line="48" pos:column="36">unsigned<pos:position pos:line="48" pos:column="44"/></name> <name pos:line="48" pos:column="45">char<pos:position pos:line="48" pos:column="49"/></name> <modifier pos:line="48" pos:column="50">*<pos:position pos:line="48" pos:column="51"/></modifier></type><name pos:line="48" pos:column="51">sha1<pos:position pos:line="48" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="48" pos:column="56"/></parameter_list>
<block pos:line="49" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="50" pos:column="9">struct<pos:position pos:line="50" pos:column="15"/></name> <name pos:line="50" pos:column="16">object<pos:position pos:line="50" pos:column="22"/></name></name> <modifier pos:line="50" pos:column="23">*<pos:position pos:line="50" pos:column="24"/></modifier></type><name pos:line="50" pos:column="24">obj<pos:position pos:line="50" pos:column="27"/></name> <init pos:line="50" pos:column="28">= <expr><call><name pos:line="50" pos:column="30">lookup_object<pos:position pos:line="50" pos:column="43"/></name><argument_list pos:line="50" pos:column="43">(<argument><expr><name pos:line="50" pos:column="44">sha1<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="50"/></decl_stmt>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">obj<pos:position pos:line="51" pos:column="17"/></name></expr>)<pos:position pos:line="51" pos:column="18"/></condition><then pos:line="51" pos:column="18">
		<block type="pseudo"><return pos:line="52" pos:column="17">return <expr><call><name pos:line="52" pos:column="24">create_object<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><name pos:line="52" pos:column="38">sha1<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="44">alloc_commit_node<pos:position pos:line="52" pos:column="61"/></name><argument_list pos:line="52" pos:column="61">()<pos:position pos:line="52" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></return></block></then></if>
	<return pos:line="53" pos:column="9">return <expr><call><name pos:line="53" pos:column="16">object_as_type<pos:position pos:line="53" pos:column="30"/></name><argument_list pos:line="53" pos:column="30">(<argument><expr><name pos:line="53" pos:column="31">obj<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="36">OBJ_COMMIT<pos:position pos:line="53" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="48">0<pos:position pos:line="53" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="51"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function>

<function><type><name><name pos:line="56" pos:column="1">struct<pos:position pos:line="56" pos:column="7"/></name> <name pos:line="56" pos:column="8">commit<pos:position pos:line="56" pos:column="14"/></name></name> <modifier pos:line="56" pos:column="15">*<pos:position pos:line="56" pos:column="16"/></modifier></type><name pos:line="56" pos:column="16">lookup_commit_reference_by_name<pos:position pos:line="56" pos:column="47"/></name><parameter_list pos:line="56" pos:column="47">(<parameter><decl><type><specifier pos:line="56" pos:column="48">const<pos:position pos:line="56" pos:column="53"/></specifier> <name pos:line="56" pos:column="54">char<pos:position pos:line="56" pos:column="58"/></name> <modifier pos:line="56" pos:column="59">*<pos:position pos:line="56" pos:column="60"/></modifier></type><name pos:line="56" pos:column="60">name<pos:position pos:line="56" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="56" pos:column="65"/></parameter_list>
<block pos:line="57" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="58" pos:column="9">struct<pos:position pos:line="58" pos:column="15"/></name> <name pos:line="58" pos:column="16">object_id<pos:position pos:line="58" pos:column="25"/></name></name></type> <name pos:line="58" pos:column="26">oid<pos:position pos:line="58" pos:column="29"/></name></decl>;<pos:position pos:line="58" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="59" pos:column="9">struct<pos:position pos:line="59" pos:column="15"/></name> <name pos:line="59" pos:column="16">commit<pos:position pos:line="59" pos:column="22"/></name></name> <modifier pos:line="59" pos:column="23">*<pos:position pos:line="59" pos:column="24"/></modifier></type><name pos:line="59" pos:column="24">commit<pos:position pos:line="59" pos:column="30"/></name></decl>;<pos:position pos:line="59" pos:column="31"/></decl_stmt>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><call><name pos:line="61" pos:column="13">get_sha1_committish<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">name<pos:position pos:line="61" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="39">oid<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">.<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="43">hash<pos:position pos:line="61" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="49"/></condition><then pos:line="61" pos:column="49">
		<block type="pseudo"><return pos:line="62" pos:column="17">return <expr><name pos:line="62" pos:column="24">NULL<pos:position pos:line="62" pos:column="28"/></name></expr>;<pos:position pos:line="62" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="63" pos:column="9">commit<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <call><name pos:line="63" pos:column="18">lookup_commit_reference<pos:position pos:line="63" pos:column="41"/></name><argument_list pos:line="63" pos:column="41">(<argument><expr><name><name pos:line="63" pos:column="42">oid<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">.<pos:position pos:line="63" pos:column="46"/></operator><name pos:line="63" pos:column="46">hash<pos:position pos:line="63" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="52"/></expr_stmt>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><call><name pos:line="64" pos:column="13">parse_commit<pos:position pos:line="64" pos:column="25"/></name><argument_list pos:line="64" pos:column="25">(<argument><expr><name pos:line="64" pos:column="26">commit<pos:position pos:line="64" pos:column="32"/></name></expr></argument>)<pos:position pos:line="64" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="34"/></condition><then pos:line="64" pos:column="34">
		<block type="pseudo"><return pos:line="65" pos:column="17">return <expr><name pos:line="65" pos:column="24">NULL<pos:position pos:line="65" pos:column="28"/></name></expr>;<pos:position pos:line="65" pos:column="29"/></return></block></then></if>
	<return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">commit<pos:position pos:line="66" pos:column="22"/></name></expr>;<pos:position pos:line="66" pos:column="23"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function>

<function><specifier pos:line="69" pos:column="1">static<pos:position pos:line="69" pos:column="7"/></specifier> <type><name pos:line="69" pos:column="8">unsigned<pos:position pos:line="69" pos:column="16"/></name> <name pos:line="69" pos:column="17">long<pos:position pos:line="69" pos:column="21"/></name></type> <name pos:line="69" pos:column="22">parse_commit_date<pos:position pos:line="69" pos:column="39"/></name><parameter_list pos:line="69" pos:column="39">(<parameter><decl><type><specifier pos:line="69" pos:column="40">const<pos:position pos:line="69" pos:column="45"/></specifier> <name pos:line="69" pos:column="46">char<pos:position pos:line="69" pos:column="50"/></name> <modifier pos:line="69" pos:column="51">*<pos:position pos:line="69" pos:column="52"/></modifier></type><name pos:line="69" pos:column="52">buf<pos:position pos:line="69" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="69" pos:column="57">const<pos:position pos:line="69" pos:column="62"/></specifier> <name pos:line="69" pos:column="63">char<pos:position pos:line="69" pos:column="67"/></name> <modifier pos:line="69" pos:column="68">*<pos:position pos:line="69" pos:column="69"/></modifier></type><name pos:line="69" pos:column="69">tail<pos:position pos:line="69" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="69" pos:column="74"/></parameter_list>
<block pos:line="70" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="71" pos:column="9">const<pos:position pos:line="71" pos:column="14"/></specifier> <name pos:line="71" pos:column="15">char<pos:position pos:line="71" pos:column="19"/></name> <modifier pos:line="71" pos:column="20">*<pos:position pos:line="71" pos:column="21"/></modifier></type><name pos:line="71" pos:column="21">dateptr<pos:position pos:line="71" pos:column="28"/></name></decl>;<pos:position pos:line="71" pos:column="29"/></decl_stmt>

	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">buf<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">+<pos:position pos:line="73" pos:column="18"/></operator> <literal type="number" pos:line="73" pos:column="19">6<pos:position pos:line="73" pos:column="20"/></literal> <operator pos:line="73" pos:column="21">&gt;=<pos:position pos:line="73" pos:column="26"/></operator> <name pos:line="73" pos:column="24">tail<pos:position pos:line="73" pos:column="28"/></name></expr>)<pos:position pos:line="73" pos:column="29"/></condition><then pos:line="73" pos:column="29">
		<block type="pseudo"><return pos:line="74" pos:column="17">return <expr><literal type="number" pos:line="74" pos:column="24">0<pos:position pos:line="74" pos:column="25"/></literal></expr>;<pos:position pos:line="74" pos:column="26"/></return></block></then></if>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><call><name pos:line="75" pos:column="13">memcmp<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><name pos:line="75" pos:column="20">buf<pos:position pos:line="75" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="25">"author"<pos:position pos:line="75" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="35">6<pos:position pos:line="75" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="38"/></condition><then pos:line="75" pos:column="38">
		<block type="pseudo"><return pos:line="76" pos:column="17">return <expr><literal type="number" pos:line="76" pos:column="24">0<pos:position pos:line="76" pos:column="25"/></literal></expr>;<pos:position pos:line="76" pos:column="26"/></return></block></then></if>
	<while pos:line="77" pos:column="9">while <condition pos:line="77" pos:column="15">(<expr><name pos:line="77" pos:column="16">buf<pos:position pos:line="77" pos:column="19"/></name> <operator pos:line="77" pos:column="20">&lt;<pos:position pos:line="77" pos:column="24"/></operator> <name pos:line="77" pos:column="22">tail<pos:position pos:line="77" pos:column="26"/></name> <operator pos:line="77" pos:column="27">&amp;&amp;<pos:position pos:line="77" pos:column="37"/></operator> <operator pos:line="77" pos:column="30">*<pos:position pos:line="77" pos:column="31"/></operator><name pos:line="77" pos:column="31">buf<pos:position pos:line="77" pos:column="34"/></name><operator pos:line="77" pos:column="34">++<pos:position pos:line="77" pos:column="36"/></operator> <operator pos:line="77" pos:column="37">!=<pos:position pos:line="77" pos:column="39"/></operator> <literal type="char" pos:line="77" pos:column="40">'\n'<pos:position pos:line="77" pos:column="44"/></literal></expr>)<pos:position pos:line="77" pos:column="45"/></condition>
		<comment type="block" pos:line="78" pos:column="17">/* nada */</comment><block type="pseudo"><empty_stmt pos:line="78" pos:column="27">;<pos:position pos:line="78" pos:column="28"/></empty_stmt></block></while>
	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name pos:line="79" pos:column="13">buf<pos:position pos:line="79" pos:column="16"/></name> <operator pos:line="79" pos:column="17">+<pos:position pos:line="79" pos:column="18"/></operator> <literal type="number" pos:line="79" pos:column="19">9<pos:position pos:line="79" pos:column="20"/></literal> <operator pos:line="79" pos:column="21">&gt;=<pos:position pos:line="79" pos:column="26"/></operator> <name pos:line="79" pos:column="24">tail<pos:position pos:line="79" pos:column="28"/></name></expr>)<pos:position pos:line="79" pos:column="29"/></condition><then pos:line="79" pos:column="29">
		<block type="pseudo"><return pos:line="80" pos:column="17">return <expr><literal type="number" pos:line="80" pos:column="24">0<pos:position pos:line="80" pos:column="25"/></literal></expr>;<pos:position pos:line="80" pos:column="26"/></return></block></then></if>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><call><name pos:line="81" pos:column="13">memcmp<pos:position pos:line="81" pos:column="19"/></name><argument_list pos:line="81" pos:column="19">(<argument><expr><name pos:line="81" pos:column="20">buf<pos:position pos:line="81" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="25">"committer"<pos:position pos:line="81" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="38">9<pos:position pos:line="81" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="41"/></condition><then pos:line="81" pos:column="41">
		<block type="pseudo"><return pos:line="82" pos:column="17">return <expr><literal type="number" pos:line="82" pos:column="24">0<pos:position pos:line="82" pos:column="25"/></literal></expr>;<pos:position pos:line="82" pos:column="26"/></return></block></then></if>
	<while pos:line="83" pos:column="9">while <condition pos:line="83" pos:column="15">(<expr><name pos:line="83" pos:column="16">buf<pos:position pos:line="83" pos:column="19"/></name> <operator pos:line="83" pos:column="20">&lt;<pos:position pos:line="83" pos:column="24"/></operator> <name pos:line="83" pos:column="22">tail<pos:position pos:line="83" pos:column="26"/></name> <operator pos:line="83" pos:column="27">&amp;&amp;<pos:position pos:line="83" pos:column="37"/></operator> <operator pos:line="83" pos:column="30">*<pos:position pos:line="83" pos:column="31"/></operator><name pos:line="83" pos:column="31">buf<pos:position pos:line="83" pos:column="34"/></name><operator pos:line="83" pos:column="34">++<pos:position pos:line="83" pos:column="36"/></operator> <operator pos:line="83" pos:column="37">!=<pos:position pos:line="83" pos:column="39"/></operator> <literal type="char" pos:line="83" pos:column="40">'&gt;'<pos:position pos:line="83" pos:column="46"/></literal></expr>)<pos:position pos:line="83" pos:column="44"/></condition>
		<comment type="block" pos:line="84" pos:column="17">/* nada */</comment><block type="pseudo"><empty_stmt pos:line="84" pos:column="27">;<pos:position pos:line="84" pos:column="28"/></empty_stmt></block></while>
	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">buf<pos:position pos:line="85" pos:column="16"/></name> <operator pos:line="85" pos:column="17">&gt;=<pos:position pos:line="85" pos:column="22"/></operator> <name pos:line="85" pos:column="20">tail<pos:position pos:line="85" pos:column="24"/></name></expr>)<pos:position pos:line="85" pos:column="25"/></condition><then pos:line="85" pos:column="25">
		<block type="pseudo"><return pos:line="86" pos:column="17">return <expr><literal type="number" pos:line="86" pos:column="24">0<pos:position pos:line="86" pos:column="25"/></literal></expr>;<pos:position pos:line="86" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="87" pos:column="9">dateptr<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">=<pos:position pos:line="87" pos:column="18"/></operator> <name pos:line="87" pos:column="19">buf<pos:position pos:line="87" pos:column="22"/></name></expr>;<pos:position pos:line="87" pos:column="23"/></expr_stmt>
	<while pos:line="88" pos:column="9">while <condition pos:line="88" pos:column="15">(<expr><name pos:line="88" pos:column="16">buf<pos:position pos:line="88" pos:column="19"/></name> <operator pos:line="88" pos:column="20">&lt;<pos:position pos:line="88" pos:column="24"/></operator> <name pos:line="88" pos:column="22">tail<pos:position pos:line="88" pos:column="26"/></name> <operator pos:line="88" pos:column="27">&amp;&amp;<pos:position pos:line="88" pos:column="37"/></operator> <operator pos:line="88" pos:column="30">*<pos:position pos:line="88" pos:column="31"/></operator><name pos:line="88" pos:column="31">buf<pos:position pos:line="88" pos:column="34"/></name><operator pos:line="88" pos:column="34">++<pos:position pos:line="88" pos:column="36"/></operator> <operator pos:line="88" pos:column="37">!=<pos:position pos:line="88" pos:column="39"/></operator> <literal type="char" pos:line="88" pos:column="40">'\n'<pos:position pos:line="88" pos:column="44"/></literal></expr>)<pos:position pos:line="88" pos:column="45"/></condition>
		<comment type="block" pos:line="89" pos:column="17">/* nada */</comment><block type="pseudo"><empty_stmt pos:line="89" pos:column="27">;<pos:position pos:line="89" pos:column="28"/></empty_stmt></block></while>
	<if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><name pos:line="90" pos:column="13">buf<pos:position pos:line="90" pos:column="16"/></name> <operator pos:line="90" pos:column="17">&gt;=<pos:position pos:line="90" pos:column="22"/></operator> <name pos:line="90" pos:column="20">tail<pos:position pos:line="90" pos:column="24"/></name></expr>)<pos:position pos:line="90" pos:column="25"/></condition><then pos:line="90" pos:column="25">
		<block type="pseudo"><return pos:line="91" pos:column="17">return <expr><literal type="number" pos:line="91" pos:column="24">0<pos:position pos:line="91" pos:column="25"/></literal></expr>;<pos:position pos:line="91" pos:column="26"/></return></block></then></if>
	<comment type="block" pos:line="92" pos:column="9">/* dateptr &lt; buf &amp;&amp; buf[-1] == '\n', so strtoul will stop at buf-1 */</comment>
	<return pos:line="93" pos:column="9">return <expr><call><name pos:line="93" pos:column="16">strtoul<pos:position pos:line="93" pos:column="23"/></name><argument_list pos:line="93" pos:column="23">(<argument><expr><name pos:line="93" pos:column="24">dateptr<pos:position pos:line="93" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="33">NULL<pos:position pos:line="93" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="39">10<pos:position pos:line="93" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="43"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function>

<decl_stmt><decl><specifier pos:line="96" pos:column="1">static<pos:position pos:line="96" pos:column="7"/></specifier> <type><name><name pos:line="96" pos:column="8">struct<pos:position pos:line="96" pos:column="14"/></name> <name pos:line="96" pos:column="15">commit_graft<pos:position pos:line="96" pos:column="27"/></name></name> <modifier pos:line="96" pos:column="28">*<pos:position pos:line="96" pos:column="29"/></modifier><modifier pos:line="96" pos:column="29">*<pos:position pos:line="96" pos:column="30"/></modifier></type><name pos:line="96" pos:column="30">commit_graft<pos:position pos:line="96" pos:column="42"/></name></decl>;<pos:position pos:line="96" pos:column="43"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="97" pos:column="1">static<pos:position pos:line="97" pos:column="7"/></specifier> <type><name pos:line="97" pos:column="8">int<pos:position pos:line="97" pos:column="11"/></name></type> <name pos:line="97" pos:column="12">commit_graft_alloc<pos:position pos:line="97" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="97" pos:column="32">commit_graft_nr<pos:position pos:line="97" pos:column="47"/></name></decl>;<pos:position pos:line="97" pos:column="48"/></decl_stmt>

<function><specifier pos:line="99" pos:column="1">static<pos:position pos:line="99" pos:column="7"/></specifier> <type><specifier pos:line="99" pos:column="8">const<pos:position pos:line="99" pos:column="13"/></specifier> <name pos:line="99" pos:column="14">unsigned<pos:position pos:line="99" pos:column="22"/></name> <name pos:line="99" pos:column="23">char<pos:position pos:line="99" pos:column="27"/></name> <modifier pos:line="99" pos:column="28">*<pos:position pos:line="99" pos:column="29"/></modifier></type><name pos:line="99" pos:column="29">commit_graft_sha1_access<pos:position pos:line="99" pos:column="53"/></name><parameter_list pos:line="99" pos:column="53">(<parameter><decl><type><name pos:line="99" pos:column="54">size_t<pos:position pos:line="99" pos:column="60"/></name></type> <name pos:line="99" pos:column="61">index<pos:position pos:line="99" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="99" pos:column="68">void<pos:position pos:line="99" pos:column="72"/></name> <modifier pos:line="99" pos:column="73">*<pos:position pos:line="99" pos:column="74"/></modifier></type><name pos:line="99" pos:column="74">table<pos:position pos:line="99" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="99" pos:column="80"/></parameter_list>
<block pos:line="100" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="101" pos:column="9">struct<pos:position pos:line="101" pos:column="15"/></name> <name pos:line="101" pos:column="16">commit_graft<pos:position pos:line="101" pos:column="28"/></name></name> <modifier pos:line="101" pos:column="29">*<pos:position pos:line="101" pos:column="30"/></modifier><modifier pos:line="101" pos:column="30">*<pos:position pos:line="101" pos:column="31"/></modifier></type><name pos:line="101" pos:column="31">commit_graft_table<pos:position pos:line="101" pos:column="49"/></name> <init pos:line="101" pos:column="50">= <expr><name pos:line="101" pos:column="52">table<pos:position pos:line="101" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="101" pos:column="58"/></decl_stmt>
	<return pos:line="102" pos:column="9">return <expr><name><name pos:line="102" pos:column="16">commit_graft_table<pos:position pos:line="102" pos:column="34"/></name><index pos:line="102" pos:column="34">[<expr><name pos:line="102" pos:column="35">index<pos:position pos:line="102" pos:column="40"/></name></expr>]<pos:position pos:line="102" pos:column="41"/></index></name><operator pos:line="102" pos:column="41">-&gt;<pos:position pos:line="102" pos:column="46"/></operator><name><name pos:line="102" pos:column="43">oid<pos:position pos:line="102" pos:column="46"/></name><operator pos:line="102" pos:column="46">.<pos:position pos:line="102" pos:column="47"/></operator><name pos:line="102" pos:column="47">hash<pos:position pos:line="102" pos:column="51"/></name></name></expr>;<pos:position pos:line="102" pos:column="52"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function>

<function><specifier pos:line="105" pos:column="1">static<pos:position pos:line="105" pos:column="7"/></specifier> <type><name pos:line="105" pos:column="8">int<pos:position pos:line="105" pos:column="11"/></name></type> <name pos:line="105" pos:column="12">commit_graft_pos<pos:position pos:line="105" pos:column="28"/></name><parameter_list pos:line="105" pos:column="28">(<parameter><decl><type><specifier pos:line="105" pos:column="29">const<pos:position pos:line="105" pos:column="34"/></specifier> <name pos:line="105" pos:column="35">unsigned<pos:position pos:line="105" pos:column="43"/></name> <name pos:line="105" pos:column="44">char<pos:position pos:line="105" pos:column="48"/></name> <modifier pos:line="105" pos:column="49">*<pos:position pos:line="105" pos:column="50"/></modifier></type><name pos:line="105" pos:column="50">sha1<pos:position pos:line="105" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="105" pos:column="55"/></parameter_list>
<block pos:line="106" pos:column="1">{
	<return pos:line="107" pos:column="9">return <expr><call><name pos:line="107" pos:column="16">sha1_pos<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><name pos:line="107" pos:column="25">sha1<pos:position pos:line="107" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="31">commit_graft<pos:position pos:line="107" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="45">commit_graft_nr<pos:position pos:line="107" pos:column="60"/></name></expr></argument>,
			<argument><expr><name pos:line="108" pos:column="25">commit_graft_sha1_access<pos:position pos:line="108" pos:column="49"/></name></expr></argument>)<pos:position pos:line="108" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="51"/></return>
}<pos:position pos:line="109" pos:column="2"/></block></function>

<function><type><name pos:line="111" pos:column="1">int<pos:position pos:line="111" pos:column="4"/></name></type> <name pos:line="111" pos:column="5">register_commit_graft<pos:position pos:line="111" pos:column="26"/></name><parameter_list pos:line="111" pos:column="26">(<parameter><decl><type><name><name pos:line="111" pos:column="27">struct<pos:position pos:line="111" pos:column="33"/></name> <name pos:line="111" pos:column="34">commit_graft<pos:position pos:line="111" pos:column="46"/></name></name> <modifier pos:line="111" pos:column="47">*<pos:position pos:line="111" pos:column="48"/></modifier></type><name pos:line="111" pos:column="48">graft<pos:position pos:line="111" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="111" pos:column="55">int<pos:position pos:line="111" pos:column="58"/></name></type> <name pos:line="111" pos:column="59">ignore_dups<pos:position pos:line="111" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="111" pos:column="71"/></parameter_list>
<block pos:line="112" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="113" pos:column="9">int<pos:position pos:line="113" pos:column="12"/></name></type> <name pos:line="113" pos:column="13">pos<pos:position pos:line="113" pos:column="16"/></name> <init pos:line="113" pos:column="17">= <expr><call><name pos:line="113" pos:column="19">commit_graft_pos<pos:position pos:line="113" pos:column="35"/></name><argument_list pos:line="113" pos:column="35">(<argument><expr><name><name pos:line="113" pos:column="36">graft<pos:position pos:line="113" pos:column="41"/></name><operator pos:line="113" pos:column="41">-&gt;<pos:position pos:line="113" pos:column="46"/></operator><name pos:line="113" pos:column="43">oid<pos:position pos:line="113" pos:column="46"/></name><operator pos:line="113" pos:column="46">.<pos:position pos:line="113" pos:column="47"/></operator><name pos:line="113" pos:column="47">hash<pos:position pos:line="113" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="113" pos:column="53"/></decl_stmt>

	<if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><literal type="number" pos:line="115" pos:column="13">0<pos:position pos:line="115" pos:column="14"/></literal> <operator pos:line="115" pos:column="15">&lt;=<pos:position pos:line="115" pos:column="20"/></operator> <name pos:line="115" pos:column="18">pos<pos:position pos:line="115" pos:column="21"/></name></expr>)<pos:position pos:line="115" pos:column="22"/></condition><then pos:line="115" pos:column="22"> <block pos:line="115" pos:column="23">{
		<if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><name pos:line="116" pos:column="21">ignore_dups<pos:position pos:line="116" pos:column="32"/></name></expr>)<pos:position pos:line="116" pos:column="33"/></condition><then pos:line="116" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="25">free<pos:position pos:line="117" pos:column="29"/></name><argument_list pos:line="117" pos:column="29">(<argument><expr><name pos:line="117" pos:column="30">graft<pos:position pos:line="117" pos:column="35"/></name></expr></argument>)<pos:position pos:line="117" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="37"/></expr_stmt></block></then>
		<else pos:line="118" pos:column="17">else <block pos:line="118" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="119" pos:column="25">free<pos:position pos:line="119" pos:column="29"/></name><argument_list pos:line="119" pos:column="29">(<argument><expr><name><name pos:line="119" pos:column="30">commit_graft<pos:position pos:line="119" pos:column="42"/></name><index pos:line="119" pos:column="42">[<expr><name pos:line="119" pos:column="43">pos<pos:position pos:line="119" pos:column="46"/></name></expr>]<pos:position pos:line="119" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="119" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="120" pos:column="25">commit_graft<pos:position pos:line="120" pos:column="37"/></name><index pos:line="120" pos:column="37">[<expr><name pos:line="120" pos:column="38">pos<pos:position pos:line="120" pos:column="41"/></name></expr>]<pos:position pos:line="120" pos:column="42"/></index></name> <operator pos:line="120" pos:column="43">=<pos:position pos:line="120" pos:column="44"/></operator> <name pos:line="120" pos:column="45">graft<pos:position pos:line="120" pos:column="50"/></name></expr>;<pos:position pos:line="120" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="121" pos:column="18"/></block></else></if>
		<return pos:line="122" pos:column="17">return <expr><literal type="number" pos:line="122" pos:column="24">1<pos:position pos:line="122" pos:column="25"/></literal></expr>;<pos:position pos:line="122" pos:column="26"/></return>
	}<pos:position pos:line="123" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="124" pos:column="9">pos<pos:position pos:line="124" pos:column="12"/></name> <operator pos:line="124" pos:column="13">=<pos:position pos:line="124" pos:column="14"/></operator> <operator pos:line="124" pos:column="15">-<pos:position pos:line="124" pos:column="16"/></operator><name pos:line="124" pos:column="16">pos<pos:position pos:line="124" pos:column="19"/></name> <operator pos:line="124" pos:column="20">-<pos:position pos:line="124" pos:column="21"/></operator> <literal type="number" pos:line="124" pos:column="22">1<pos:position pos:line="124" pos:column="23"/></literal></expr>;<pos:position pos:line="124" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="125" pos:column="9">ALLOC_GROW<pos:position pos:line="125" pos:column="19"/></name><argument_list pos:line="125" pos:column="19">(<argument><expr><name pos:line="125" pos:column="20">commit_graft<pos:position pos:line="125" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="34">commit_graft_nr<pos:position pos:line="125" pos:column="49"/></name> <operator pos:line="125" pos:column="50">+<pos:position pos:line="125" pos:column="51"/></operator> <literal type="number" pos:line="125" pos:column="52">1<pos:position pos:line="125" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="55">commit_graft_alloc<pos:position pos:line="125" pos:column="73"/></name></expr></argument>)<pos:position pos:line="125" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><name pos:line="126" pos:column="9">commit_graft_nr<pos:position pos:line="126" pos:column="24"/></name><operator pos:line="126" pos:column="24">++<pos:position pos:line="126" pos:column="26"/></operator></expr>;<pos:position pos:line="126" pos:column="27"/></expr_stmt>
	<if pos:line="127" pos:column="9">if <condition pos:line="127" pos:column="12">(<expr><name pos:line="127" pos:column="13">pos<pos:position pos:line="127" pos:column="16"/></name> <operator pos:line="127" pos:column="17">&lt;<pos:position pos:line="127" pos:column="21"/></operator> <name pos:line="127" pos:column="19">commit_graft_nr<pos:position pos:line="127" pos:column="34"/></name></expr>)<pos:position pos:line="127" pos:column="35"/></condition><then pos:line="127" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="17">memmove<pos:position pos:line="128" pos:column="24"/></name><argument_list pos:line="128" pos:column="24">(<argument><expr><name pos:line="128" pos:column="25">commit_graft<pos:position pos:line="128" pos:column="37"/></name> <operator pos:line="128" pos:column="38">+<pos:position pos:line="128" pos:column="39"/></operator> <name pos:line="128" pos:column="40">pos<pos:position pos:line="128" pos:column="43"/></name> <operator pos:line="128" pos:column="44">+<pos:position pos:line="128" pos:column="45"/></operator> <literal type="number" pos:line="128" pos:column="46">1<pos:position pos:line="128" pos:column="47"/></literal></expr></argument>,
			<argument><expr><name pos:line="129" pos:column="25">commit_graft<pos:position pos:line="129" pos:column="37"/></name> <operator pos:line="129" pos:column="38">+<pos:position pos:line="129" pos:column="39"/></operator> <name pos:line="129" pos:column="40">pos<pos:position pos:line="129" pos:column="43"/></name></expr></argument>,
			<argument><expr><operator pos:line="130" pos:column="25">(<pos:position pos:line="130" pos:column="26"/></operator><name pos:line="130" pos:column="26">commit_graft_nr<pos:position pos:line="130" pos:column="41"/></name> <operator pos:line="130" pos:column="42">-<pos:position pos:line="130" pos:column="43"/></operator> <name pos:line="130" pos:column="44">pos<pos:position pos:line="130" pos:column="47"/></name> <operator pos:line="130" pos:column="48">-<pos:position pos:line="130" pos:column="49"/></operator> <literal type="number" pos:line="130" pos:column="50">1<pos:position pos:line="130" pos:column="51"/></literal><operator pos:line="130" pos:column="51">)<pos:position pos:line="130" pos:column="52"/></operator> <operator pos:line="130" pos:column="53">*<pos:position pos:line="130" pos:column="54"/></operator>
			<sizeof pos:line="131" pos:column="25">sizeof<argument_list pos:line="131" pos:column="31">(<argument><expr><operator pos:line="131" pos:column="32">*<pos:position pos:line="131" pos:column="33"/></operator><name pos:line="131" pos:column="33">commit_graft<pos:position pos:line="131" pos:column="45"/></name></expr></argument>)<pos:position pos:line="131" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="131" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="48"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="132" pos:column="9">commit_graft<pos:position pos:line="132" pos:column="21"/></name><index pos:line="132" pos:column="21">[<expr><name pos:line="132" pos:column="22">pos<pos:position pos:line="132" pos:column="25"/></name></expr>]<pos:position pos:line="132" pos:column="26"/></index></name> <operator pos:line="132" pos:column="27">=<pos:position pos:line="132" pos:column="28"/></operator> <name pos:line="132" pos:column="29">graft<pos:position pos:line="132" pos:column="34"/></name></expr>;<pos:position pos:line="132" pos:column="35"/></expr_stmt>
	<return pos:line="133" pos:column="9">return <expr><literal type="number" pos:line="133" pos:column="16">0<pos:position pos:line="133" pos:column="17"/></literal></expr>;<pos:position pos:line="133" pos:column="18"/></return>
}<pos:position pos:line="134" pos:column="2"/></block></function>

<function><type><name><name pos:line="136" pos:column="1">struct<pos:position pos:line="136" pos:column="7"/></name> <name pos:line="136" pos:column="8">commit_graft<pos:position pos:line="136" pos:column="20"/></name></name> <modifier pos:line="136" pos:column="21">*<pos:position pos:line="136" pos:column="22"/></modifier></type><name pos:line="136" pos:column="22">read_graft_line<pos:position pos:line="136" pos:column="37"/></name><parameter_list pos:line="136" pos:column="37">(<parameter><decl><type><name pos:line="136" pos:column="38">char<pos:position pos:line="136" pos:column="42"/></name> <modifier pos:line="136" pos:column="43">*<pos:position pos:line="136" pos:column="44"/></modifier></type><name pos:line="136" pos:column="44">buf<pos:position pos:line="136" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="136" pos:column="49">int<pos:position pos:line="136" pos:column="52"/></name></type> <name pos:line="136" pos:column="53">len<pos:position pos:line="136" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="136" pos:column="57"/></parameter_list>
<block pos:line="137" pos:column="1">{
	<comment type="block" pos:line="138" pos:column="9">/* The format is just "Commit Parent1 Parent2 ...\n" */</comment>
	<decl_stmt><decl><type><name pos:line="139" pos:column="9">int<pos:position pos:line="139" pos:column="12"/></name></type> <name pos:line="139" pos:column="13">i<pos:position pos:line="139" pos:column="14"/></name></decl>;<pos:position pos:line="139" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="140" pos:column="9">struct<pos:position pos:line="140" pos:column="15"/></name> <name pos:line="140" pos:column="16">commit_graft<pos:position pos:line="140" pos:column="28"/></name></name> <modifier pos:line="140" pos:column="29">*<pos:position pos:line="140" pos:column="30"/></modifier></type><name pos:line="140" pos:column="30">graft<pos:position pos:line="140" pos:column="35"/></name> <init pos:line="140" pos:column="36">= <expr><name pos:line="140" pos:column="38">NULL<pos:position pos:line="140" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="140" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="141" pos:column="9">const<pos:position pos:line="141" pos:column="14"/></specifier> <name pos:line="141" pos:column="15">int<pos:position pos:line="141" pos:column="18"/></name></type> <name pos:line="141" pos:column="19">entry_size<pos:position pos:line="141" pos:column="29"/></name> <init pos:line="141" pos:column="30">= <expr><name pos:line="141" pos:column="32">GIT_SHA1_HEXSZ<pos:position pos:line="141" pos:column="46"/></name> <operator pos:line="141" pos:column="47">+<pos:position pos:line="141" pos:column="48"/></operator> <literal type="number" pos:line="141" pos:column="49">1<pos:position pos:line="141" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="141" pos:column="51"/></decl_stmt>

	<while pos:line="143" pos:column="9">while <condition pos:line="143" pos:column="15">(<expr><name pos:line="143" pos:column="16">len<pos:position pos:line="143" pos:column="19"/></name> <operator pos:line="143" pos:column="20">&amp;&amp;<pos:position pos:line="143" pos:column="30"/></operator> <call><name pos:line="143" pos:column="23">isspace<pos:position pos:line="143" pos:column="30"/></name><argument_list pos:line="143" pos:column="30">(<argument><expr><name><name pos:line="143" pos:column="31">buf<pos:position pos:line="143" pos:column="34"/></name><index pos:line="143" pos:column="34">[<expr><name pos:line="143" pos:column="35">len<pos:position pos:line="143" pos:column="38"/></name><operator pos:line="143" pos:column="38">-<pos:position pos:line="143" pos:column="39"/></operator><literal type="number" pos:line="143" pos:column="39">1<pos:position pos:line="143" pos:column="40"/></literal></expr>]<pos:position pos:line="143" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="143" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="143" pos:column="43"/></condition>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="144" pos:column="17">buf<pos:position pos:line="144" pos:column="20"/></name><index pos:line="144" pos:column="20">[<expr><operator pos:line="144" pos:column="21">--<pos:position pos:line="144" pos:column="23"/></operator><name pos:line="144" pos:column="23">len<pos:position pos:line="144" pos:column="26"/></name></expr>]<pos:position pos:line="144" pos:column="27"/></index></name> <operator pos:line="144" pos:column="28">=<pos:position pos:line="144" pos:column="29"/></operator> <literal type="char" pos:line="144" pos:column="30">'\0'<pos:position pos:line="144" pos:column="34"/></literal></expr>;<pos:position pos:line="144" pos:column="35"/></expr_stmt></block></while>
	<if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name><name pos:line="145" pos:column="13">buf<pos:position pos:line="145" pos:column="16"/></name><index pos:line="145" pos:column="16">[<expr><literal type="number" pos:line="145" pos:column="17">0<pos:position pos:line="145" pos:column="18"/></literal></expr>]<pos:position pos:line="145" pos:column="19"/></index></name> <operator pos:line="145" pos:column="20">==<pos:position pos:line="145" pos:column="22"/></operator> <literal type="char" pos:line="145" pos:column="23">'#'<pos:position pos:line="145" pos:column="26"/></literal> <operator pos:line="145" pos:column="27">||<pos:position pos:line="145" pos:column="29"/></operator> <name><name pos:line="145" pos:column="30">buf<pos:position pos:line="145" pos:column="33"/></name><index pos:line="145" pos:column="33">[<expr><literal type="number" pos:line="145" pos:column="34">0<pos:position pos:line="145" pos:column="35"/></literal></expr>]<pos:position pos:line="145" pos:column="36"/></index></name> <operator pos:line="145" pos:column="37">==<pos:position pos:line="145" pos:column="39"/></operator> <literal type="char" pos:line="145" pos:column="40">'\0'<pos:position pos:line="145" pos:column="44"/></literal></expr>)<pos:position pos:line="145" pos:column="45"/></condition><then pos:line="145" pos:column="45">
		<block type="pseudo"><return pos:line="146" pos:column="17">return <expr><name pos:line="146" pos:column="24">NULL<pos:position pos:line="146" pos:column="28"/></name></expr>;<pos:position pos:line="146" pos:column="29"/></return></block></then></if>
	<if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><operator pos:line="147" pos:column="13">(<pos:position pos:line="147" pos:column="14"/></operator><name pos:line="147" pos:column="14">len<pos:position pos:line="147" pos:column="17"/></name> <operator pos:line="147" pos:column="18">+<pos:position pos:line="147" pos:column="19"/></operator> <literal type="number" pos:line="147" pos:column="20">1<pos:position pos:line="147" pos:column="21"/></literal><operator pos:line="147" pos:column="21">)<pos:position pos:line="147" pos:column="22"/></operator> <operator pos:line="147" pos:column="23">%<pos:position pos:line="147" pos:column="24"/></operator> <name pos:line="147" pos:column="25">entry_size<pos:position pos:line="147" pos:column="35"/></name></expr>)<pos:position pos:line="147" pos:column="36"/></condition><then pos:line="147" pos:column="36">
		<block type="pseudo"><goto pos:line="148" pos:column="17">goto <name pos:line="148" pos:column="22">bad_graft_data<pos:position pos:line="148" pos:column="36"/></name>;<pos:position pos:line="148" pos:column="37"/></goto></block></then></if>
	<expr_stmt><expr><name pos:line="149" pos:column="9">i<pos:position pos:line="149" pos:column="10"/></name> <operator pos:line="149" pos:column="11">=<pos:position pos:line="149" pos:column="12"/></operator> <operator pos:line="149" pos:column="13">(<pos:position pos:line="149" pos:column="14"/></operator><name pos:line="149" pos:column="14">len<pos:position pos:line="149" pos:column="17"/></name> <operator pos:line="149" pos:column="18">+<pos:position pos:line="149" pos:column="19"/></operator> <literal type="number" pos:line="149" pos:column="20">1<pos:position pos:line="149" pos:column="21"/></literal><operator pos:line="149" pos:column="21">)<pos:position pos:line="149" pos:column="22"/></operator> <operator pos:line="149" pos:column="23">/<pos:position pos:line="149" pos:column="24"/></operator> <name pos:line="149" pos:column="25">entry_size<pos:position pos:line="149" pos:column="35"/></name> <operator pos:line="149" pos:column="36">-<pos:position pos:line="149" pos:column="37"/></operator> <literal type="number" pos:line="149" pos:column="38">1<pos:position pos:line="149" pos:column="39"/></literal></expr>;<pos:position pos:line="149" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="150" pos:column="9">graft<pos:position pos:line="150" pos:column="14"/></name> <operator pos:line="150" pos:column="15">=<pos:position pos:line="150" pos:column="16"/></operator> <call><name pos:line="150" pos:column="17">xmalloc<pos:position pos:line="150" pos:column="24"/></name><argument_list pos:line="150" pos:column="24">(<argument><expr><sizeof pos:line="150" pos:column="25">sizeof<argument_list pos:line="150" pos:column="31">(<argument><expr><operator pos:line="150" pos:column="32">*<pos:position pos:line="150" pos:column="33"/></operator><name pos:line="150" pos:column="33">graft<pos:position pos:line="150" pos:column="38"/></name></expr></argument>)<pos:position pos:line="150" pos:column="39"/></argument_list></sizeof> <operator pos:line="150" pos:column="40">+<pos:position pos:line="150" pos:column="41"/></operator> <name pos:line="150" pos:column="42">GIT_SHA1_RAWSZ<pos:position pos:line="150" pos:column="56"/></name> <operator pos:line="150" pos:column="57">*<pos:position pos:line="150" pos:column="58"/></operator> <name pos:line="150" pos:column="59">i<pos:position pos:line="150" pos:column="60"/></name></expr></argument>)<pos:position pos:line="150" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="151" pos:column="9">graft<pos:position pos:line="151" pos:column="14"/></name><operator pos:line="151" pos:column="14">-&gt;<pos:position pos:line="151" pos:column="19"/></operator><name pos:line="151" pos:column="16">nr_parent<pos:position pos:line="151" pos:column="25"/></name></name> <operator pos:line="151" pos:column="26">=<pos:position pos:line="151" pos:column="27"/></operator> <name pos:line="151" pos:column="28">i<pos:position pos:line="151" pos:column="29"/></name></expr>;<pos:position pos:line="151" pos:column="30"/></expr_stmt>
	<if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><call><name pos:line="152" pos:column="13">get_oid_hex<pos:position pos:line="152" pos:column="24"/></name><argument_list pos:line="152" pos:column="24">(<argument><expr><name pos:line="152" pos:column="25">buf<pos:position pos:line="152" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="30">&amp;<pos:position pos:line="152" pos:column="35"/></operator><name><name pos:line="152" pos:column="31">graft<pos:position pos:line="152" pos:column="36"/></name><operator pos:line="152" pos:column="36">-&gt;<pos:position pos:line="152" pos:column="41"/></operator><name pos:line="152" pos:column="38">oid<pos:position pos:line="152" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="152" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="152" pos:column="43"/></condition><then pos:line="152" pos:column="43">
		<block type="pseudo"><goto pos:line="153" pos:column="17">goto <name pos:line="153" pos:column="22">bad_graft_data<pos:position pos:line="153" pos:column="36"/></name>;<pos:position pos:line="153" pos:column="37"/></goto></block></then></if>
	<for pos:line="154" pos:column="9">for <control pos:line="154" pos:column="13">(<init><expr><name pos:line="154" pos:column="14">i<pos:position pos:line="154" pos:column="15"/></name> <operator pos:line="154" pos:column="16">=<pos:position pos:line="154" pos:column="17"/></operator> <name pos:line="154" pos:column="18">GIT_SHA1_HEXSZ<pos:position pos:line="154" pos:column="32"/></name></expr>;<pos:position pos:line="154" pos:column="33"/></init> <condition><expr><name pos:line="154" pos:column="34">i<pos:position pos:line="154" pos:column="35"/></name> <operator pos:line="154" pos:column="36">&lt;<pos:position pos:line="154" pos:column="40"/></operator> <name pos:line="154" pos:column="38">len<pos:position pos:line="154" pos:column="41"/></name></expr>;<pos:position pos:line="154" pos:column="42"/></condition> <incr><expr><name pos:line="154" pos:column="43">i<pos:position pos:line="154" pos:column="44"/></name> <operator pos:line="154" pos:column="45">+=<pos:position pos:line="154" pos:column="47"/></operator> <name pos:line="154" pos:column="48">entry_size<pos:position pos:line="154" pos:column="58"/></name></expr></incr>)<pos:position pos:line="154" pos:column="59"/></control> <block pos:line="154" pos:column="60">{
		<if pos:line="155" pos:column="17">if <condition pos:line="155" pos:column="20">(<expr><name><name pos:line="155" pos:column="21">buf<pos:position pos:line="155" pos:column="24"/></name><index pos:line="155" pos:column="24">[<expr><name pos:line="155" pos:column="25">i<pos:position pos:line="155" pos:column="26"/></name></expr>]<pos:position pos:line="155" pos:column="27"/></index></name> <operator pos:line="155" pos:column="28">!=<pos:position pos:line="155" pos:column="30"/></operator> <literal type="char" pos:line="155" pos:column="31">' '<pos:position pos:line="155" pos:column="34"/></literal></expr>)<pos:position pos:line="155" pos:column="35"/></condition><then pos:line="155" pos:column="35">
			<block type="pseudo"><goto pos:line="156" pos:column="25">goto <name pos:line="156" pos:column="30">bad_graft_data<pos:position pos:line="156" pos:column="44"/></name>;<pos:position pos:line="156" pos:column="45"/></goto></block></then></if>
		<if pos:line="157" pos:column="17">if <condition pos:line="157" pos:column="20">(<expr><call><name pos:line="157" pos:column="21">get_sha1_hex<pos:position pos:line="157" pos:column="33"/></name><argument_list pos:line="157" pos:column="33">(<argument><expr><name pos:line="157" pos:column="34">buf<pos:position pos:line="157" pos:column="37"/></name> <operator pos:line="157" pos:column="38">+<pos:position pos:line="157" pos:column="39"/></operator> <name pos:line="157" pos:column="40">i<pos:position pos:line="157" pos:column="41"/></name> <operator pos:line="157" pos:column="42">+<pos:position pos:line="157" pos:column="43"/></operator> <literal type="number" pos:line="157" pos:column="44">1<pos:position pos:line="157" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="47">graft<pos:position pos:line="157" pos:column="52"/></name><operator pos:line="157" pos:column="52">-&gt;<pos:position pos:line="157" pos:column="57"/></operator><name pos:line="157" pos:column="54">parent<pos:position pos:line="157" pos:column="60"/></name><index pos:line="157" pos:column="60">[<expr><name pos:line="157" pos:column="61">i<pos:position pos:line="157" pos:column="62"/></name><operator pos:line="157" pos:column="62">/<pos:position pos:line="157" pos:column="63"/></operator><name pos:line="157" pos:column="63">entry_size<pos:position pos:line="157" pos:column="73"/></name></expr>]<pos:position pos:line="157" pos:column="74"/></index></name><operator pos:line="157" pos:column="74">.<pos:position pos:line="157" pos:column="75"/></operator><name pos:line="157" pos:column="75">hash<pos:position pos:line="157" pos:column="79"/></name></expr></argument>)<pos:position pos:line="157" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="157" pos:column="81"/></condition><then pos:line="157" pos:column="81">
			<block type="pseudo"><goto pos:line="158" pos:column="25">goto <name pos:line="158" pos:column="30">bad_graft_data<pos:position pos:line="158" pos:column="44"/></name>;<pos:position pos:line="158" pos:column="45"/></goto></block></then></if>
	}<pos:position pos:line="159" pos:column="10"/></block></for>
	<return pos:line="160" pos:column="9">return <expr><name pos:line="160" pos:column="16">graft<pos:position pos:line="160" pos:column="21"/></name></expr>;<pos:position pos:line="160" pos:column="22"/></return>

<label><name pos:line="162" pos:column="1">bad_graft_data<pos:position pos:line="162" pos:column="15"/></name>:<pos:position pos:line="162" pos:column="16"/></label>
	<expr_stmt><expr><call><name pos:line="163" pos:column="9">error<pos:position pos:line="163" pos:column="14"/></name><argument_list pos:line="163" pos:column="14">(<argument><expr><literal type="string" pos:line="163" pos:column="15">"bad graft data: %s"<pos:position pos:line="163" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="37">buf<pos:position pos:line="163" pos:column="40"/></name></expr></argument>)<pos:position pos:line="163" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="164" pos:column="9">free<pos:position pos:line="164" pos:column="13"/></name><argument_list pos:line="164" pos:column="13">(<argument><expr><name pos:line="164" pos:column="14">graft<pos:position pos:line="164" pos:column="19"/></name></expr></argument>)<pos:position pos:line="164" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="21"/></expr_stmt>
	<return pos:line="165" pos:column="9">return <expr><name pos:line="165" pos:column="16">NULL<pos:position pos:line="165" pos:column="20"/></name></expr>;<pos:position pos:line="165" pos:column="21"/></return>
}<pos:position pos:line="166" pos:column="2"/></block></function>

<function><specifier pos:line="168" pos:column="1">static<pos:position pos:line="168" pos:column="7"/></specifier> <type><name pos:line="168" pos:column="8">int<pos:position pos:line="168" pos:column="11"/></name></type> <name pos:line="168" pos:column="12">read_graft_file<pos:position pos:line="168" pos:column="27"/></name><parameter_list pos:line="168" pos:column="27">(<parameter><decl><type><specifier pos:line="168" pos:column="28">const<pos:position pos:line="168" pos:column="33"/></specifier> <name pos:line="168" pos:column="34">char<pos:position pos:line="168" pos:column="38"/></name> <modifier pos:line="168" pos:column="39">*<pos:position pos:line="168" pos:column="40"/></modifier></type><name pos:line="168" pos:column="40">graft_file<pos:position pos:line="168" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="168" pos:column="51"/></parameter_list>
<block pos:line="169" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="170" pos:column="9">FILE<pos:position pos:line="170" pos:column="13"/></name> <modifier pos:line="170" pos:column="14">*<pos:position pos:line="170" pos:column="15"/></modifier></type><name pos:line="170" pos:column="15">fp<pos:position pos:line="170" pos:column="17"/></name> <init pos:line="170" pos:column="18">= <expr><call><name pos:line="170" pos:column="20">fopen<pos:position pos:line="170" pos:column="25"/></name><argument_list pos:line="170" pos:column="25">(<argument><expr><name pos:line="170" pos:column="26">graft_file<pos:position pos:line="170" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="38">"r"<pos:position pos:line="170" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="170" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="171" pos:column="9">struct<pos:position pos:line="171" pos:column="15"/></name> <name pos:line="171" pos:column="16">strbuf<pos:position pos:line="171" pos:column="22"/></name></name></type> <name pos:line="171" pos:column="23">buf<pos:position pos:line="171" pos:column="26"/></name> <init pos:line="171" pos:column="27">= <expr><name pos:line="171" pos:column="29">STRBUF_INIT<pos:position pos:line="171" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="171" pos:column="41"/></decl_stmt>
	<if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><operator pos:line="172" pos:column="13">!<pos:position pos:line="172" pos:column="14"/></operator><name pos:line="172" pos:column="14">fp<pos:position pos:line="172" pos:column="16"/></name></expr>)<pos:position pos:line="172" pos:column="17"/></condition><then pos:line="172" pos:column="17">
		<block type="pseudo"><return pos:line="173" pos:column="17">return <expr><operator pos:line="173" pos:column="24">-<pos:position pos:line="173" pos:column="25"/></operator><literal type="number" pos:line="173" pos:column="25">1<pos:position pos:line="173" pos:column="26"/></literal></expr>;<pos:position pos:line="173" pos:column="27"/></return></block></then></if>
	<while pos:line="174" pos:column="9">while <condition pos:line="174" pos:column="15">(<expr><operator pos:line="174" pos:column="16">!<pos:position pos:line="174" pos:column="17"/></operator><call><name pos:line="174" pos:column="17">strbuf_getwholeline<pos:position pos:line="174" pos:column="36"/></name><argument_list pos:line="174" pos:column="36">(<argument><expr><operator pos:line="174" pos:column="37">&amp;<pos:position pos:line="174" pos:column="42"/></operator><name pos:line="174" pos:column="38">buf<pos:position pos:line="174" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="43">fp<pos:position pos:line="174" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="174" pos:column="47">'\n'<pos:position pos:line="174" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="53"/></condition> <block pos:line="174" pos:column="54">{
		<comment type="block" pos:line="175" pos:column="17">/* The format is just "Commit Parent1 Parent2 ...\n" */</comment>
		<decl_stmt><decl><type><name><name pos:line="176" pos:column="17">struct<pos:position pos:line="176" pos:column="23"/></name> <name pos:line="176" pos:column="24">commit_graft<pos:position pos:line="176" pos:column="36"/></name></name> <modifier pos:line="176" pos:column="37">*<pos:position pos:line="176" pos:column="38"/></modifier></type><name pos:line="176" pos:column="38">graft<pos:position pos:line="176" pos:column="43"/></name> <init pos:line="176" pos:column="44">= <expr><call><name pos:line="176" pos:column="46">read_graft_line<pos:position pos:line="176" pos:column="61"/></name><argument_list pos:line="176" pos:column="61">(<argument><expr><name><name pos:line="176" pos:column="62">buf<pos:position pos:line="176" pos:column="65"/></name><operator pos:line="176" pos:column="65">.<pos:position pos:line="176" pos:column="66"/></operator><name pos:line="176" pos:column="66">buf<pos:position pos:line="176" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="71">buf<pos:position pos:line="176" pos:column="74"/></name><operator pos:line="176" pos:column="74">.<pos:position pos:line="176" pos:column="75"/></operator><name pos:line="176" pos:column="75">len<pos:position pos:line="176" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="176" pos:column="80"/></decl_stmt>
		<if pos:line="177" pos:column="17">if <condition pos:line="177" pos:column="20">(<expr><operator pos:line="177" pos:column="21">!<pos:position pos:line="177" pos:column="22"/></operator><name pos:line="177" pos:column="22">graft<pos:position pos:line="177" pos:column="27"/></name></expr>)<pos:position pos:line="177" pos:column="28"/></condition><then pos:line="177" pos:column="28">
			<block type="pseudo"><continue pos:line="178" pos:column="25">continue;<pos:position pos:line="178" pos:column="34"/></continue></block></then></if>
		<if pos:line="179" pos:column="17">if <condition pos:line="179" pos:column="20">(<expr><call><name pos:line="179" pos:column="21">register_commit_graft<pos:position pos:line="179" pos:column="42"/></name><argument_list pos:line="179" pos:column="42">(<argument><expr><name pos:line="179" pos:column="43">graft<pos:position pos:line="179" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="179" pos:column="50">1<pos:position pos:line="179" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="179" pos:column="53"/></condition><then pos:line="179" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="180" pos:column="25">error<pos:position pos:line="180" pos:column="30"/></name><argument_list pos:line="180" pos:column="30">(<argument><expr><literal type="string" pos:line="180" pos:column="31">"duplicate graft data: %s"<pos:position pos:line="180" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="59">buf<pos:position pos:line="180" pos:column="62"/></name><operator pos:line="180" pos:column="62">.<pos:position pos:line="180" pos:column="63"/></operator><name pos:line="180" pos:column="63">buf<pos:position pos:line="180" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="180" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="68"/></expr_stmt></block></then></if>
	}<pos:position pos:line="181" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="182" pos:column="9">fclose<pos:position pos:line="182" pos:column="15"/></name><argument_list pos:line="182" pos:column="15">(<argument><expr><name pos:line="182" pos:column="16">fp<pos:position pos:line="182" pos:column="18"/></name></expr></argument>)<pos:position pos:line="182" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="183" pos:column="9">strbuf_release<pos:position pos:line="183" pos:column="23"/></name><argument_list pos:line="183" pos:column="23">(<argument><expr><operator pos:line="183" pos:column="24">&amp;<pos:position pos:line="183" pos:column="29"/></operator><name pos:line="183" pos:column="25">buf<pos:position pos:line="183" pos:column="28"/></name></expr></argument>)<pos:position pos:line="183" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="30"/></expr_stmt>
	<return pos:line="184" pos:column="9">return <expr><literal type="number" pos:line="184" pos:column="16">0<pos:position pos:line="184" pos:column="17"/></literal></expr>;<pos:position pos:line="184" pos:column="18"/></return>
}<pos:position pos:line="185" pos:column="2"/></block></function>

<function><specifier pos:line="187" pos:column="1">static<pos:position pos:line="187" pos:column="7"/></specifier> <type><name pos:line="187" pos:column="8">void<pos:position pos:line="187" pos:column="12"/></name></type> <name pos:line="187" pos:column="13">prepare_commit_graft<pos:position pos:line="187" pos:column="33"/></name><parameter_list pos:line="187" pos:column="33">(<parameter><decl><type><name pos:line="187" pos:column="34">void<pos:position pos:line="187" pos:column="38"/></name></type></decl></parameter>)<pos:position pos:line="187" pos:column="39"/></parameter_list>
<block pos:line="188" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="189" pos:column="9">static<pos:position pos:line="189" pos:column="15"/></specifier> <type><name pos:line="189" pos:column="16">int<pos:position pos:line="189" pos:column="19"/></name></type> <name pos:line="189" pos:column="20">commit_graft_prepared<pos:position pos:line="189" pos:column="41"/></name></decl>;<pos:position pos:line="189" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="190" pos:column="9">char<pos:position pos:line="190" pos:column="13"/></name> <modifier pos:line="190" pos:column="14">*<pos:position pos:line="190" pos:column="15"/></modifier></type><name pos:line="190" pos:column="15">graft_file<pos:position pos:line="190" pos:column="25"/></name></decl>;<pos:position pos:line="190" pos:column="26"/></decl_stmt>

	<if pos:line="192" pos:column="9">if <condition pos:line="192" pos:column="12">(<expr><name pos:line="192" pos:column="13">commit_graft_prepared<pos:position pos:line="192" pos:column="34"/></name></expr>)<pos:position pos:line="192" pos:column="35"/></condition><then pos:line="192" pos:column="35">
		<block type="pseudo"><return pos:line="193" pos:column="17">return;<pos:position pos:line="193" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="194" pos:column="9">graft_file<pos:position pos:line="194" pos:column="19"/></name> <operator pos:line="194" pos:column="20">=<pos:position pos:line="194" pos:column="21"/></operator> <call><name pos:line="194" pos:column="22">get_graft_file<pos:position pos:line="194" pos:column="36"/></name><argument_list pos:line="194" pos:column="36">()<pos:position pos:line="194" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="195" pos:column="9">read_graft_file<pos:position pos:line="195" pos:column="24"/></name><argument_list pos:line="195" pos:column="24">(<argument><expr><name pos:line="195" pos:column="25">graft_file<pos:position pos:line="195" pos:column="35"/></name></expr></argument>)<pos:position pos:line="195" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="37"/></expr_stmt>
	<comment type="block" pos:line="196" pos:column="9">/* make sure shallows are read */</comment>
	<expr_stmt><expr><call><name pos:line="197" pos:column="9">is_repository_shallow<pos:position pos:line="197" pos:column="30"/></name><argument_list pos:line="197" pos:column="30">()<pos:position pos:line="197" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="198" pos:column="9">commit_graft_prepared<pos:position pos:line="198" pos:column="30"/></name> <operator pos:line="198" pos:column="31">=<pos:position pos:line="198" pos:column="32"/></operator> <literal type="number" pos:line="198" pos:column="33">1<pos:position pos:line="198" pos:column="34"/></literal></expr>;<pos:position pos:line="198" pos:column="35"/></expr_stmt>
}<pos:position pos:line="199" pos:column="2"/></block></function>

<function><type><name><name pos:line="201" pos:column="1">struct<pos:position pos:line="201" pos:column="7"/></name> <name pos:line="201" pos:column="8">commit_graft<pos:position pos:line="201" pos:column="20"/></name></name> <modifier pos:line="201" pos:column="21">*<pos:position pos:line="201" pos:column="22"/></modifier></type><name pos:line="201" pos:column="22">lookup_commit_graft<pos:position pos:line="201" pos:column="41"/></name><parameter_list pos:line="201" pos:column="41">(<parameter><decl><type><specifier pos:line="201" pos:column="42">const<pos:position pos:line="201" pos:column="47"/></specifier> <name pos:line="201" pos:column="48">unsigned<pos:position pos:line="201" pos:column="56"/></name> <name pos:line="201" pos:column="57">char<pos:position pos:line="201" pos:column="61"/></name> <modifier pos:line="201" pos:column="62">*<pos:position pos:line="201" pos:column="63"/></modifier></type><name pos:line="201" pos:column="63">sha1<pos:position pos:line="201" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="201" pos:column="68"/></parameter_list>
<block pos:line="202" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="203" pos:column="9">int<pos:position pos:line="203" pos:column="12"/></name></type> <name pos:line="203" pos:column="13">pos<pos:position pos:line="203" pos:column="16"/></name></decl>;<pos:position pos:line="203" pos:column="17"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="204" pos:column="9">prepare_commit_graft<pos:position pos:line="204" pos:column="29"/></name><argument_list pos:line="204" pos:column="29">()<pos:position pos:line="204" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="205" pos:column="9">pos<pos:position pos:line="205" pos:column="12"/></name> <operator pos:line="205" pos:column="13">=<pos:position pos:line="205" pos:column="14"/></operator> <call><name pos:line="205" pos:column="15">commit_graft_pos<pos:position pos:line="205" pos:column="31"/></name><argument_list pos:line="205" pos:column="31">(<argument><expr><name pos:line="205" pos:column="32">sha1<pos:position pos:line="205" pos:column="36"/></name></expr></argument>)<pos:position pos:line="205" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="38"/></expr_stmt>
	<if pos:line="206" pos:column="9">if <condition pos:line="206" pos:column="12">(<expr><name pos:line="206" pos:column="13">pos<pos:position pos:line="206" pos:column="16"/></name> <operator pos:line="206" pos:column="17">&lt;<pos:position pos:line="206" pos:column="21"/></operator> <literal type="number" pos:line="206" pos:column="19">0<pos:position pos:line="206" pos:column="20"/></literal></expr>)<pos:position pos:line="206" pos:column="21"/></condition><then pos:line="206" pos:column="21">
		<block type="pseudo"><return pos:line="207" pos:column="17">return <expr><name pos:line="207" pos:column="24">NULL<pos:position pos:line="207" pos:column="28"/></name></expr>;<pos:position pos:line="207" pos:column="29"/></return></block></then></if>
	<return pos:line="208" pos:column="9">return <expr><name><name pos:line="208" pos:column="16">commit_graft<pos:position pos:line="208" pos:column="28"/></name><index pos:line="208" pos:column="28">[<expr><name pos:line="208" pos:column="29">pos<pos:position pos:line="208" pos:column="32"/></name></expr>]<pos:position pos:line="208" pos:column="33"/></index></name></expr>;<pos:position pos:line="208" pos:column="34"/></return>
}<pos:position pos:line="209" pos:column="2"/></block></function>

<function><type><name pos:line="211" pos:column="1">int<pos:position pos:line="211" pos:column="4"/></name></type> <name pos:line="211" pos:column="5">for_each_commit_graft<pos:position pos:line="211" pos:column="26"/></name><parameter_list pos:line="211" pos:column="26">(<parameter><decl><type><name pos:line="211" pos:column="27">each_commit_graft_fn<pos:position pos:line="211" pos:column="47"/></name></type> <name pos:line="211" pos:column="48">fn<pos:position pos:line="211" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="211" pos:column="52">void<pos:position pos:line="211" pos:column="56"/></name> <modifier pos:line="211" pos:column="57">*<pos:position pos:line="211" pos:column="58"/></modifier></type><name pos:line="211" pos:column="58">cb_data<pos:position pos:line="211" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="211" pos:column="66"/></parameter_list>
<block pos:line="212" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="213" pos:column="9">int<pos:position pos:line="213" pos:column="12"/></name></type> <name pos:line="213" pos:column="13">i<pos:position pos:line="213" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="213" pos:column="16">ret<pos:position pos:line="213" pos:column="19"/></name></decl>;<pos:position pos:line="213" pos:column="20"/></decl_stmt>
	<for pos:line="214" pos:column="9">for <control pos:line="214" pos:column="13">(<init><expr><name pos:line="214" pos:column="14">i<pos:position pos:line="214" pos:column="15"/></name> <operator pos:line="214" pos:column="16">=<pos:position pos:line="214" pos:column="17"/></operator> <name pos:line="214" pos:column="18">ret<pos:position pos:line="214" pos:column="21"/></name> <operator pos:line="214" pos:column="22">=<pos:position pos:line="214" pos:column="23"/></operator> <literal type="number" pos:line="214" pos:column="24">0<pos:position pos:line="214" pos:column="25"/></literal></expr>;<pos:position pos:line="214" pos:column="26"/></init> <condition><expr><name pos:line="214" pos:column="27">i<pos:position pos:line="214" pos:column="28"/></name> <operator pos:line="214" pos:column="29">&lt;<pos:position pos:line="214" pos:column="33"/></operator> <name pos:line="214" pos:column="31">commit_graft_nr<pos:position pos:line="214" pos:column="46"/></name> <operator pos:line="214" pos:column="47">&amp;&amp;<pos:position pos:line="214" pos:column="57"/></operator> <operator pos:line="214" pos:column="50">!<pos:position pos:line="214" pos:column="51"/></operator><name pos:line="214" pos:column="51">ret<pos:position pos:line="214" pos:column="54"/></name></expr>;<pos:position pos:line="214" pos:column="55"/></condition> <incr><expr><name pos:line="214" pos:column="56">i<pos:position pos:line="214" pos:column="57"/></name><operator pos:line="214" pos:column="57">++<pos:position pos:line="214" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="214" pos:column="60"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="215" pos:column="17">ret<pos:position pos:line="215" pos:column="20"/></name> <operator pos:line="215" pos:column="21">=<pos:position pos:line="215" pos:column="22"/></operator> <call><name pos:line="215" pos:column="23">fn<pos:position pos:line="215" pos:column="25"/></name><argument_list pos:line="215" pos:column="25">(<argument><expr><name><name pos:line="215" pos:column="26">commit_graft<pos:position pos:line="215" pos:column="38"/></name><index pos:line="215" pos:column="38">[<expr><name pos:line="215" pos:column="39">i<pos:position pos:line="215" pos:column="40"/></name></expr>]<pos:position pos:line="215" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="43">cb_data<pos:position pos:line="215" pos:column="50"/></name></expr></argument>)<pos:position pos:line="215" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="52"/></expr_stmt></block></for>
	<return pos:line="216" pos:column="9">return <expr><name pos:line="216" pos:column="16">ret<pos:position pos:line="216" pos:column="19"/></name></expr>;<pos:position pos:line="216" pos:column="20"/></return>
}<pos:position pos:line="217" pos:column="2"/></block></function>

<function><type><name pos:line="219" pos:column="1">int<pos:position pos:line="219" pos:column="4"/></name></type> <name pos:line="219" pos:column="5">unregister_shallow<pos:position pos:line="219" pos:column="23"/></name><parameter_list pos:line="219" pos:column="23">(<parameter><decl><type><specifier pos:line="219" pos:column="24">const<pos:position pos:line="219" pos:column="29"/></specifier> <name pos:line="219" pos:column="30">unsigned<pos:position pos:line="219" pos:column="38"/></name> <name pos:line="219" pos:column="39">char<pos:position pos:line="219" pos:column="43"/></name> <modifier pos:line="219" pos:column="44">*<pos:position pos:line="219" pos:column="45"/></modifier></type><name pos:line="219" pos:column="45">sha1<pos:position pos:line="219" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="219" pos:column="50"/></parameter_list>
<block pos:line="220" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="221" pos:column="9">int<pos:position pos:line="221" pos:column="12"/></name></type> <name pos:line="221" pos:column="13">pos<pos:position pos:line="221" pos:column="16"/></name> <init pos:line="221" pos:column="17">= <expr><call><name pos:line="221" pos:column="19">commit_graft_pos<pos:position pos:line="221" pos:column="35"/></name><argument_list pos:line="221" pos:column="35">(<argument><expr><name pos:line="221" pos:column="36">sha1<pos:position pos:line="221" pos:column="40"/></name></expr></argument>)<pos:position pos:line="221" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="221" pos:column="42"/></decl_stmt>
	<if pos:line="222" pos:column="9">if <condition pos:line="222" pos:column="12">(<expr><name pos:line="222" pos:column="13">pos<pos:position pos:line="222" pos:column="16"/></name> <operator pos:line="222" pos:column="17">&lt;<pos:position pos:line="222" pos:column="21"/></operator> <literal type="number" pos:line="222" pos:column="19">0<pos:position pos:line="222" pos:column="20"/></literal></expr>)<pos:position pos:line="222" pos:column="21"/></condition><then pos:line="222" pos:column="21">
		<block type="pseudo"><return pos:line="223" pos:column="17">return <expr><operator pos:line="223" pos:column="24">-<pos:position pos:line="223" pos:column="25"/></operator><literal type="number" pos:line="223" pos:column="25">1<pos:position pos:line="223" pos:column="26"/></literal></expr>;<pos:position pos:line="223" pos:column="27"/></return></block></then></if>
	<if pos:line="224" pos:column="9">if <condition pos:line="224" pos:column="12">(<expr><name pos:line="224" pos:column="13">pos<pos:position pos:line="224" pos:column="16"/></name> <operator pos:line="224" pos:column="17">+<pos:position pos:line="224" pos:column="18"/></operator> <literal type="number" pos:line="224" pos:column="19">1<pos:position pos:line="224" pos:column="20"/></literal> <operator pos:line="224" pos:column="21">&lt;<pos:position pos:line="224" pos:column="25"/></operator> <name pos:line="224" pos:column="23">commit_graft_nr<pos:position pos:line="224" pos:column="38"/></name></expr>)<pos:position pos:line="224" pos:column="39"/></condition><then pos:line="224" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="225" pos:column="17">memmove<pos:position pos:line="225" pos:column="24"/></name><argument_list pos:line="225" pos:column="24">(<argument><expr><name pos:line="225" pos:column="25">commit_graft<pos:position pos:line="225" pos:column="37"/></name> <operator pos:line="225" pos:column="38">+<pos:position pos:line="225" pos:column="39"/></operator> <name pos:line="225" pos:column="40">pos<pos:position pos:line="225" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="45">commit_graft<pos:position pos:line="225" pos:column="57"/></name> <operator pos:line="225" pos:column="58">+<pos:position pos:line="225" pos:column="59"/></operator> <name pos:line="225" pos:column="60">pos<pos:position pos:line="225" pos:column="63"/></name> <operator pos:line="225" pos:column="64">+<pos:position pos:line="225" pos:column="65"/></operator> <literal type="number" pos:line="225" pos:column="66">1<pos:position pos:line="225" pos:column="67"/></literal></expr></argument>,
				<argument><expr><sizeof pos:line="226" pos:column="33">sizeof<argument_list pos:line="226" pos:column="39">(<argument><expr pos:line="226" pos:column="40">struct <name pos:line="226" pos:column="47">commit_graft<pos:position pos:line="226" pos:column="59"/></name> <operator pos:line="226" pos:column="60">*<pos:position pos:line="226" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="226" pos:column="62"/></argument_list></sizeof>
				<operator pos:line="227" pos:column="33">*<pos:position pos:line="227" pos:column="34"/></operator> <operator pos:line="227" pos:column="35">(<pos:position pos:line="227" pos:column="36"/></operator><name pos:line="227" pos:column="36">commit_graft_nr<pos:position pos:line="227" pos:column="51"/></name> <operator pos:line="227" pos:column="52">-<pos:position pos:line="227" pos:column="53"/></operator> <name pos:line="227" pos:column="54">pos<pos:position pos:line="227" pos:column="57"/></name> <operator pos:line="227" pos:column="58">-<pos:position pos:line="227" pos:column="59"/></operator> <literal type="number" pos:line="227" pos:column="60">1<pos:position pos:line="227" pos:column="61"/></literal><operator pos:line="227" pos:column="61">)<pos:position pos:line="227" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="227" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="64"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="228" pos:column="9">commit_graft_nr<pos:position pos:line="228" pos:column="24"/></name><operator pos:line="228" pos:column="24">--<pos:position pos:line="228" pos:column="26"/></operator></expr>;<pos:position pos:line="228" pos:column="27"/></expr_stmt>
	<return pos:line="229" pos:column="9">return <expr><literal type="number" pos:line="229" pos:column="16">0<pos:position pos:line="229" pos:column="17"/></literal></expr>;<pos:position pos:line="229" pos:column="18"/></return>
}<pos:position pos:line="230" pos:column="2"/></block></function>

<struct pos:line="232" pos:column="1">struct <name pos:line="232" pos:column="8">commit_buffer<pos:position pos:line="232" pos:column="21"/></name> <block pos:line="232" pos:column="22">{
	<decl_stmt><decl><type><name pos:line="233" pos:column="9">void<pos:position pos:line="233" pos:column="13"/></name> <modifier pos:line="233" pos:column="14">*<pos:position pos:line="233" pos:column="15"/></modifier></type><name pos:line="233" pos:column="15">buffer<pos:position pos:line="233" pos:column="21"/></name></decl>;<pos:position pos:line="233" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="234" pos:column="9">unsigned<pos:position pos:line="234" pos:column="17"/></name> <name pos:line="234" pos:column="18">long<pos:position pos:line="234" pos:column="22"/></name></type> <name pos:line="234" pos:column="23">size<pos:position pos:line="234" pos:column="27"/></name></decl>;<pos:position pos:line="234" pos:column="28"/></decl_stmt>
}<pos:position pos:line="235" pos:column="2"/></block>;<pos:position pos:line="235" pos:column="3"/></struct>
<expr_stmt><expr><call><name pos:line="236" pos:column="1">define_commit_slab<pos:position pos:line="236" pos:column="19"/></name><argument_list pos:line="236" pos:column="19">(<argument><expr><name pos:line="236" pos:column="20">buffer_slab<pos:position pos:line="236" pos:column="31"/></name></expr></argument>, <argument><expr pos:line="236" pos:column="33">struct <name pos:line="236" pos:column="40">commit_buffer<pos:position pos:line="236" pos:column="53"/></name></expr></argument>)<pos:position pos:line="236" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="55"/></expr_stmt>
<decl_stmt><decl><specifier pos:line="237" pos:column="1">static<pos:position pos:line="237" pos:column="7"/></specifier> <type><name><name pos:line="237" pos:column="8">struct<pos:position pos:line="237" pos:column="14"/></name> <name pos:line="237" pos:column="15">buffer_slab<pos:position pos:line="237" pos:column="26"/></name></name></type> <name pos:line="237" pos:column="27">buffer_slab<pos:position pos:line="237" pos:column="38"/></name> <init pos:line="237" pos:column="39">= <expr><call><name pos:line="237" pos:column="41">COMMIT_SLAB_INIT<pos:position pos:line="237" pos:column="57"/></name><argument_list pos:line="237" pos:column="57">(<argument><expr><literal type="number" pos:line="237" pos:column="58">1<pos:position pos:line="237" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="237" pos:column="61">buffer_slab<pos:position pos:line="237" pos:column="72"/></name></expr></argument>)<pos:position pos:line="237" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="237" pos:column="74"/></decl_stmt>

<function><type><name pos:line="239" pos:column="1">void<pos:position pos:line="239" pos:column="5"/></name></type> <name pos:line="239" pos:column="6">set_commit_buffer<pos:position pos:line="239" pos:column="23"/></name><parameter_list pos:line="239" pos:column="23">(<parameter><decl><type><name><name pos:line="239" pos:column="24">struct<pos:position pos:line="239" pos:column="30"/></name> <name pos:line="239" pos:column="31">commit<pos:position pos:line="239" pos:column="37"/></name></name> <modifier pos:line="239" pos:column="38">*<pos:position pos:line="239" pos:column="39"/></modifier></type><name pos:line="239" pos:column="39">commit<pos:position pos:line="239" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="239" pos:column="47">void<pos:position pos:line="239" pos:column="51"/></name> <modifier pos:line="239" pos:column="52">*<pos:position pos:line="239" pos:column="53"/></modifier></type><name pos:line="239" pos:column="53">buffer<pos:position pos:line="239" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="239" pos:column="61">unsigned<pos:position pos:line="239" pos:column="69"/></name> <name pos:line="239" pos:column="70">long<pos:position pos:line="239" pos:column="74"/></name></type> <name pos:line="239" pos:column="75">size<pos:position pos:line="239" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="239" pos:column="80"/></parameter_list>
<block pos:line="240" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="241" pos:column="9">struct<pos:position pos:line="241" pos:column="15"/></name> <name pos:line="241" pos:column="16">commit_buffer<pos:position pos:line="241" pos:column="29"/></name></name> <modifier pos:line="241" pos:column="30">*<pos:position pos:line="241" pos:column="31"/></modifier></type><name pos:line="241" pos:column="31">v<pos:position pos:line="241" pos:column="32"/></name> <init pos:line="241" pos:column="33">= <expr><call><name pos:line="241" pos:column="35">buffer_slab_at<pos:position pos:line="241" pos:column="49"/></name><argument_list pos:line="241" pos:column="49">(<argument><expr><operator pos:line="241" pos:column="50">&amp;<pos:position pos:line="241" pos:column="55"/></operator><name pos:line="241" pos:column="51">buffer_slab<pos:position pos:line="241" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="241" pos:column="64">commit<pos:position pos:line="241" pos:column="70"/></name></expr></argument>)<pos:position pos:line="241" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="241" pos:column="72"/></decl_stmt>
	<expr_stmt><expr><name><name pos:line="242" pos:column="9">v<pos:position pos:line="242" pos:column="10"/></name><operator pos:line="242" pos:column="10">-&gt;<pos:position pos:line="242" pos:column="15"/></operator><name pos:line="242" pos:column="12">buffer<pos:position pos:line="242" pos:column="18"/></name></name> <operator pos:line="242" pos:column="19">=<pos:position pos:line="242" pos:column="20"/></operator> <name pos:line="242" pos:column="21">buffer<pos:position pos:line="242" pos:column="27"/></name></expr>;<pos:position pos:line="242" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="243" pos:column="9">v<pos:position pos:line="243" pos:column="10"/></name><operator pos:line="243" pos:column="10">-&gt;<pos:position pos:line="243" pos:column="15"/></operator><name pos:line="243" pos:column="12">size<pos:position pos:line="243" pos:column="16"/></name></name> <operator pos:line="243" pos:column="17">=<pos:position pos:line="243" pos:column="18"/></operator> <name pos:line="243" pos:column="19">size<pos:position pos:line="243" pos:column="23"/></name></expr>;<pos:position pos:line="243" pos:column="24"/></expr_stmt>
}<pos:position pos:line="244" pos:column="2"/></block></function>

<function><type><specifier pos:line="246" pos:column="1">const<pos:position pos:line="246" pos:column="6"/></specifier> <name pos:line="246" pos:column="7">void<pos:position pos:line="246" pos:column="11"/></name> <modifier pos:line="246" pos:column="12">*<pos:position pos:line="246" pos:column="13"/></modifier></type><name pos:line="246" pos:column="13">get_cached_commit_buffer<pos:position pos:line="246" pos:column="37"/></name><parameter_list pos:line="246" pos:column="37">(<parameter><decl><type><specifier pos:line="246" pos:column="38">const<pos:position pos:line="246" pos:column="43"/></specifier> <name><name pos:line="246" pos:column="44">struct<pos:position pos:line="246" pos:column="50"/></name> <name pos:line="246" pos:column="51">commit<pos:position pos:line="246" pos:column="57"/></name></name> <modifier pos:line="246" pos:column="58">*<pos:position pos:line="246" pos:column="59"/></modifier></type><name pos:line="246" pos:column="59">commit<pos:position pos:line="246" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="246" pos:column="67">unsigned<pos:position pos:line="246" pos:column="75"/></name> <name pos:line="246" pos:column="76">long<pos:position pos:line="246" pos:column="80"/></name> <modifier pos:line="246" pos:column="81">*<pos:position pos:line="246" pos:column="82"/></modifier></type><name pos:line="246" pos:column="82">sizep<pos:position pos:line="246" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="246" pos:column="88"/></parameter_list>
<block pos:line="247" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="248" pos:column="9">struct<pos:position pos:line="248" pos:column="15"/></name> <name pos:line="248" pos:column="16">commit_buffer<pos:position pos:line="248" pos:column="29"/></name></name> <modifier pos:line="248" pos:column="30">*<pos:position pos:line="248" pos:column="31"/></modifier></type><name pos:line="248" pos:column="31">v<pos:position pos:line="248" pos:column="32"/></name> <init pos:line="248" pos:column="33">= <expr><call><name pos:line="248" pos:column="35">buffer_slab_peek<pos:position pos:line="248" pos:column="51"/></name><argument_list pos:line="248" pos:column="51">(<argument><expr><operator pos:line="248" pos:column="52">&amp;<pos:position pos:line="248" pos:column="57"/></operator><name pos:line="248" pos:column="53">buffer_slab<pos:position pos:line="248" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="66">commit<pos:position pos:line="248" pos:column="72"/></name></expr></argument>)<pos:position pos:line="248" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="248" pos:column="74"/></decl_stmt>
	<if pos:line="249" pos:column="9">if <condition pos:line="249" pos:column="12">(<expr><operator pos:line="249" pos:column="13">!<pos:position pos:line="249" pos:column="14"/></operator><name pos:line="249" pos:column="14">v<pos:position pos:line="249" pos:column="15"/></name></expr>)<pos:position pos:line="249" pos:column="16"/></condition><then pos:line="249" pos:column="16"> <block pos:line="249" pos:column="17">{
		<if pos:line="250" pos:column="17">if <condition pos:line="250" pos:column="20">(<expr><name pos:line="250" pos:column="21">sizep<pos:position pos:line="250" pos:column="26"/></name></expr>)<pos:position pos:line="250" pos:column="27"/></condition><then pos:line="250" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="251" pos:column="25">*<pos:position pos:line="251" pos:column="26"/></operator><name pos:line="251" pos:column="26">sizep<pos:position pos:line="251" pos:column="31"/></name> <operator pos:line="251" pos:column="32">=<pos:position pos:line="251" pos:column="33"/></operator> <literal type="number" pos:line="251" pos:column="34">0<pos:position pos:line="251" pos:column="35"/></literal></expr>;<pos:position pos:line="251" pos:column="36"/></expr_stmt></block></then></if>
		<return pos:line="252" pos:column="17">return <expr><name pos:line="252" pos:column="24">NULL<pos:position pos:line="252" pos:column="28"/></name></expr>;<pos:position pos:line="252" pos:column="29"/></return>
	}<pos:position pos:line="253" pos:column="10"/></block></then></if>
	<if pos:line="254" pos:column="9">if <condition pos:line="254" pos:column="12">(<expr><name pos:line="254" pos:column="13">sizep<pos:position pos:line="254" pos:column="18"/></name></expr>)<pos:position pos:line="254" pos:column="19"/></condition><then pos:line="254" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="255" pos:column="17">*<pos:position pos:line="255" pos:column="18"/></operator><name pos:line="255" pos:column="18">sizep<pos:position pos:line="255" pos:column="23"/></name> <operator pos:line="255" pos:column="24">=<pos:position pos:line="255" pos:column="25"/></operator> <name><name pos:line="255" pos:column="26">v<pos:position pos:line="255" pos:column="27"/></name><operator pos:line="255" pos:column="27">-&gt;<pos:position pos:line="255" pos:column="32"/></operator><name pos:line="255" pos:column="29">size<pos:position pos:line="255" pos:column="33"/></name></name></expr>;<pos:position pos:line="255" pos:column="34"/></expr_stmt></block></then></if>
	<return pos:line="256" pos:column="9">return <expr><name><name pos:line="256" pos:column="16">v<pos:position pos:line="256" pos:column="17"/></name><operator pos:line="256" pos:column="17">-&gt;<pos:position pos:line="256" pos:column="22"/></operator><name pos:line="256" pos:column="19">buffer<pos:position pos:line="256" pos:column="25"/></name></name></expr>;<pos:position pos:line="256" pos:column="26"/></return>
}<pos:position pos:line="257" pos:column="2"/></block></function>

<function><type><specifier pos:line="259" pos:column="1">const<pos:position pos:line="259" pos:column="6"/></specifier> <name pos:line="259" pos:column="7">void<pos:position pos:line="259" pos:column="11"/></name> <modifier pos:line="259" pos:column="12">*<pos:position pos:line="259" pos:column="13"/></modifier></type><name pos:line="259" pos:column="13">get_commit_buffer<pos:position pos:line="259" pos:column="30"/></name><parameter_list pos:line="259" pos:column="30">(<parameter><decl><type><specifier pos:line="259" pos:column="31">const<pos:position pos:line="259" pos:column="36"/></specifier> <name><name pos:line="259" pos:column="37">struct<pos:position pos:line="259" pos:column="43"/></name> <name pos:line="259" pos:column="44">commit<pos:position pos:line="259" pos:column="50"/></name></name> <modifier pos:line="259" pos:column="51">*<pos:position pos:line="259" pos:column="52"/></modifier></type><name pos:line="259" pos:column="52">commit<pos:position pos:line="259" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="259" pos:column="60">unsigned<pos:position pos:line="259" pos:column="68"/></name> <name pos:line="259" pos:column="69">long<pos:position pos:line="259" pos:column="73"/></name> <modifier pos:line="259" pos:column="74">*<pos:position pos:line="259" pos:column="75"/></modifier></type><name pos:line="259" pos:column="75">sizep<pos:position pos:line="259" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="259" pos:column="81"/></parameter_list>
<block pos:line="260" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="261" pos:column="9">const<pos:position pos:line="261" pos:column="14"/></specifier> <name pos:line="261" pos:column="15">void<pos:position pos:line="261" pos:column="19"/></name> <modifier pos:line="261" pos:column="20">*<pos:position pos:line="261" pos:column="21"/></modifier></type><name pos:line="261" pos:column="21">ret<pos:position pos:line="261" pos:column="24"/></name> <init pos:line="261" pos:column="25">= <expr><call><name pos:line="261" pos:column="27">get_cached_commit_buffer<pos:position pos:line="261" pos:column="51"/></name><argument_list pos:line="261" pos:column="51">(<argument><expr><name pos:line="261" pos:column="52">commit<pos:position pos:line="261" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="60">sizep<pos:position pos:line="261" pos:column="65"/></name></expr></argument>)<pos:position pos:line="261" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="261" pos:column="67"/></decl_stmt>
	<if pos:line="262" pos:column="9">if <condition pos:line="262" pos:column="12">(<expr><operator pos:line="262" pos:column="13">!<pos:position pos:line="262" pos:column="14"/></operator><name pos:line="262" pos:column="14">ret<pos:position pos:line="262" pos:column="17"/></name></expr>)<pos:position pos:line="262" pos:column="18"/></condition><then pos:line="262" pos:column="18"> <block pos:line="262" pos:column="19">{
		<decl_stmt><decl><type><name><name pos:line="263" pos:column="17">enum<pos:position pos:line="263" pos:column="21"/></name> <name pos:line="263" pos:column="22">object_type<pos:position pos:line="263" pos:column="33"/></name></name></type> <name pos:line="263" pos:column="34">type<pos:position pos:line="263" pos:column="38"/></name></decl>;<pos:position pos:line="263" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="264" pos:column="17">unsigned<pos:position pos:line="264" pos:column="25"/></name> <name pos:line="264" pos:column="26">long<pos:position pos:line="264" pos:column="30"/></name></type> <name pos:line="264" pos:column="31">size<pos:position pos:line="264" pos:column="35"/></name></decl>;<pos:position pos:line="264" pos:column="36"/></decl_stmt>
		<expr_stmt><expr><name pos:line="265" pos:column="17">ret<pos:position pos:line="265" pos:column="20"/></name> <operator pos:line="265" pos:column="21">=<pos:position pos:line="265" pos:column="22"/></operator> <call><name pos:line="265" pos:column="23">read_sha1_file<pos:position pos:line="265" pos:column="37"/></name><argument_list pos:line="265" pos:column="37">(<argument><expr><name><name pos:line="265" pos:column="38">commit<pos:position pos:line="265" pos:column="44"/></name><operator pos:line="265" pos:column="44">-&gt;<pos:position pos:line="265" pos:column="49"/></operator><name pos:line="265" pos:column="46">object<pos:position pos:line="265" pos:column="52"/></name><operator pos:line="265" pos:column="52">.<pos:position pos:line="265" pos:column="53"/></operator><name pos:line="265" pos:column="53">sha1<pos:position pos:line="265" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="265" pos:column="59">&amp;<pos:position pos:line="265" pos:column="64"/></operator><name pos:line="265" pos:column="60">type<pos:position pos:line="265" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="265" pos:column="66">&amp;<pos:position pos:line="265" pos:column="71"/></operator><name pos:line="265" pos:column="67">size<pos:position pos:line="265" pos:column="71"/></name></expr></argument>)<pos:position pos:line="265" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="73"/></expr_stmt>
		<if pos:line="266" pos:column="17">if <condition pos:line="266" pos:column="20">(<expr><operator pos:line="266" pos:column="21">!<pos:position pos:line="266" pos:column="22"/></operator><name pos:line="266" pos:column="22">ret<pos:position pos:line="266" pos:column="25"/></name></expr>)<pos:position pos:line="266" pos:column="26"/></condition><then pos:line="266" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="267" pos:column="25">die<pos:position pos:line="267" pos:column="28"/></name><argument_list pos:line="267" pos:column="28">(<argument><expr><literal type="string" pos:line="267" pos:column="29">"cannot read commit object %s"<pos:position pos:line="267" pos:column="59"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="268" pos:column="29">sha1_to_hex<pos:position pos:line="268" pos:column="40"/></name><argument_list pos:line="268" pos:column="40">(<argument><expr><name><name pos:line="268" pos:column="41">commit<pos:position pos:line="268" pos:column="47"/></name><operator pos:line="268" pos:column="47">-&gt;<pos:position pos:line="268" pos:column="52"/></operator><name pos:line="268" pos:column="49">object<pos:position pos:line="268" pos:column="55"/></name><operator pos:line="268" pos:column="55">.<pos:position pos:line="268" pos:column="56"/></operator><name pos:line="268" pos:column="56">sha1<pos:position pos:line="268" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="268" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="268" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="63"/></expr_stmt></block></then></if>
		<if pos:line="269" pos:column="17">if <condition pos:line="269" pos:column="20">(<expr><name pos:line="269" pos:column="21">type<pos:position pos:line="269" pos:column="25"/></name> <operator pos:line="269" pos:column="26">!=<pos:position pos:line="269" pos:column="28"/></operator> <name pos:line="269" pos:column="29">OBJ_COMMIT<pos:position pos:line="269" pos:column="39"/></name></expr>)<pos:position pos:line="269" pos:column="40"/></condition><then pos:line="269" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="270" pos:column="25">die<pos:position pos:line="270" pos:column="28"/></name><argument_list pos:line="270" pos:column="28">(<argument><expr><literal type="string" pos:line="270" pos:column="29">"expected commit for %s, got %s"<pos:position pos:line="270" pos:column="61"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="271" pos:column="29">sha1_to_hex<pos:position pos:line="271" pos:column="40"/></name><argument_list pos:line="271" pos:column="40">(<argument><expr><name><name pos:line="271" pos:column="41">commit<pos:position pos:line="271" pos:column="47"/></name><operator pos:line="271" pos:column="47">-&gt;<pos:position pos:line="271" pos:column="52"/></operator><name pos:line="271" pos:column="49">object<pos:position pos:line="271" pos:column="55"/></name><operator pos:line="271" pos:column="55">.<pos:position pos:line="271" pos:column="56"/></operator><name pos:line="271" pos:column="56">sha1<pos:position pos:line="271" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="271" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="271" pos:column="63">typename<pos:position pos:line="271" pos:column="71"/></name><argument_list pos:line="271" pos:column="71">(<argument><expr><name pos:line="271" pos:column="72">type<pos:position pos:line="271" pos:column="76"/></name></expr></argument>)<pos:position pos:line="271" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="271" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="79"/></expr_stmt></block></then></if>
		<if pos:line="272" pos:column="17">if <condition pos:line="272" pos:column="20">(<expr><name pos:line="272" pos:column="21">sizep<pos:position pos:line="272" pos:column="26"/></name></expr>)<pos:position pos:line="272" pos:column="27"/></condition><then pos:line="272" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="273" pos:column="25">*<pos:position pos:line="273" pos:column="26"/></operator><name pos:line="273" pos:column="26">sizep<pos:position pos:line="273" pos:column="31"/></name> <operator pos:line="273" pos:column="32">=<pos:position pos:line="273" pos:column="33"/></operator> <name pos:line="273" pos:column="34">size<pos:position pos:line="273" pos:column="38"/></name></expr>;<pos:position pos:line="273" pos:column="39"/></expr_stmt></block></then></if>
	}<pos:position pos:line="274" pos:column="10"/></block></then></if>
	<return pos:line="275" pos:column="9">return <expr><name pos:line="275" pos:column="16">ret<pos:position pos:line="275" pos:column="19"/></name></expr>;<pos:position pos:line="275" pos:column="20"/></return>
}<pos:position pos:line="276" pos:column="2"/></block></function>

<function><type><name pos:line="278" pos:column="1">void<pos:position pos:line="278" pos:column="5"/></name></type> <name pos:line="278" pos:column="6">unuse_commit_buffer<pos:position pos:line="278" pos:column="25"/></name><parameter_list pos:line="278" pos:column="25">(<parameter><decl><type><specifier pos:line="278" pos:column="26">const<pos:position pos:line="278" pos:column="31"/></specifier> <name><name pos:line="278" pos:column="32">struct<pos:position pos:line="278" pos:column="38"/></name> <name pos:line="278" pos:column="39">commit<pos:position pos:line="278" pos:column="45"/></name></name> <modifier pos:line="278" pos:column="46">*<pos:position pos:line="278" pos:column="47"/></modifier></type><name pos:line="278" pos:column="47">commit<pos:position pos:line="278" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="278" pos:column="55">const<pos:position pos:line="278" pos:column="60"/></specifier> <name pos:line="278" pos:column="61">void<pos:position pos:line="278" pos:column="65"/></name> <modifier pos:line="278" pos:column="66">*<pos:position pos:line="278" pos:column="67"/></modifier></type><name pos:line="278" pos:column="67">buffer<pos:position pos:line="278" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="278" pos:column="74"/></parameter_list>
<block pos:line="279" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="280" pos:column="9">struct<pos:position pos:line="280" pos:column="15"/></name> <name pos:line="280" pos:column="16">commit_buffer<pos:position pos:line="280" pos:column="29"/></name></name> <modifier pos:line="280" pos:column="30">*<pos:position pos:line="280" pos:column="31"/></modifier></type><name pos:line="280" pos:column="31">v<pos:position pos:line="280" pos:column="32"/></name> <init pos:line="280" pos:column="33">= <expr><call><name pos:line="280" pos:column="35">buffer_slab_peek<pos:position pos:line="280" pos:column="51"/></name><argument_list pos:line="280" pos:column="51">(<argument><expr><operator pos:line="280" pos:column="52">&amp;<pos:position pos:line="280" pos:column="57"/></operator><name pos:line="280" pos:column="53">buffer_slab<pos:position pos:line="280" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="280" pos:column="66">commit<pos:position pos:line="280" pos:column="72"/></name></expr></argument>)<pos:position pos:line="280" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="280" pos:column="74"/></decl_stmt>
	<if pos:line="281" pos:column="9">if <condition pos:line="281" pos:column="12">(<expr><operator pos:line="281" pos:column="13">!<pos:position pos:line="281" pos:column="14"/></operator><operator pos:line="281" pos:column="14">(<pos:position pos:line="281" pos:column="15"/></operator><name pos:line="281" pos:column="15">v<pos:position pos:line="281" pos:column="16"/></name> <operator pos:line="281" pos:column="17">&amp;&amp;<pos:position pos:line="281" pos:column="27"/></operator> <name><name pos:line="281" pos:column="20">v<pos:position pos:line="281" pos:column="21"/></name><operator pos:line="281" pos:column="21">-&gt;<pos:position pos:line="281" pos:column="26"/></operator><name pos:line="281" pos:column="23">buffer<pos:position pos:line="281" pos:column="29"/></name></name> <operator pos:line="281" pos:column="30">==<pos:position pos:line="281" pos:column="32"/></operator> <name pos:line="281" pos:column="33">buffer<pos:position pos:line="281" pos:column="39"/></name><operator pos:line="281" pos:column="39">)<pos:position pos:line="281" pos:column="40"/></operator></expr>)<pos:position pos:line="281" pos:column="41"/></condition><then pos:line="281" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="282" pos:column="17">free<pos:position pos:line="282" pos:column="21"/></name><argument_list pos:line="282" pos:column="21">(<argument><expr><operator pos:line="282" pos:column="22">(<pos:position pos:line="282" pos:column="23"/></operator><name pos:line="282" pos:column="23">void<pos:position pos:line="282" pos:column="27"/></name> <operator pos:line="282" pos:column="28">*<pos:position pos:line="282" pos:column="29"/></operator><operator pos:line="282" pos:column="29">)<pos:position pos:line="282" pos:column="30"/></operator><name pos:line="282" pos:column="30">buffer<pos:position pos:line="282" pos:column="36"/></name></expr></argument>)<pos:position pos:line="282" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="38"/></expr_stmt></block></then></if>
}<pos:position pos:line="283" pos:column="2"/></block></function>

<function><type><name pos:line="285" pos:column="1">void<pos:position pos:line="285" pos:column="5"/></name></type> <name pos:line="285" pos:column="6">free_commit_buffer<pos:position pos:line="285" pos:column="24"/></name><parameter_list pos:line="285" pos:column="24">(<parameter><decl><type><name><name pos:line="285" pos:column="25">struct<pos:position pos:line="285" pos:column="31"/></name> <name pos:line="285" pos:column="32">commit<pos:position pos:line="285" pos:column="38"/></name></name> <modifier pos:line="285" pos:column="39">*<pos:position pos:line="285" pos:column="40"/></modifier></type><name pos:line="285" pos:column="40">commit<pos:position pos:line="285" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="285" pos:column="47"/></parameter_list>
<block pos:line="286" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="287" pos:column="9">struct<pos:position pos:line="287" pos:column="15"/></name> <name pos:line="287" pos:column="16">commit_buffer<pos:position pos:line="287" pos:column="29"/></name></name> <modifier pos:line="287" pos:column="30">*<pos:position pos:line="287" pos:column="31"/></modifier></type><name pos:line="287" pos:column="31">v<pos:position pos:line="287" pos:column="32"/></name> <init pos:line="287" pos:column="33">= <expr><call><name pos:line="287" pos:column="35">buffer_slab_peek<pos:position pos:line="287" pos:column="51"/></name><argument_list pos:line="287" pos:column="51">(<argument><expr><operator pos:line="287" pos:column="52">&amp;<pos:position pos:line="287" pos:column="57"/></operator><name pos:line="287" pos:column="53">buffer_slab<pos:position pos:line="287" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="287" pos:column="66">commit<pos:position pos:line="287" pos:column="72"/></name></expr></argument>)<pos:position pos:line="287" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="287" pos:column="74"/></decl_stmt>
	<if pos:line="288" pos:column="9">if <condition pos:line="288" pos:column="12">(<expr><name pos:line="288" pos:column="13">v<pos:position pos:line="288" pos:column="14"/></name></expr>)<pos:position pos:line="288" pos:column="15"/></condition><then pos:line="288" pos:column="15"> <block pos:line="288" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="289" pos:column="17">free<pos:position pos:line="289" pos:column="21"/></name><argument_list pos:line="289" pos:column="21">(<argument><expr><name><name pos:line="289" pos:column="22">v<pos:position pos:line="289" pos:column="23"/></name><operator pos:line="289" pos:column="23">-&gt;<pos:position pos:line="289" pos:column="28"/></operator><name pos:line="289" pos:column="25">buffer<pos:position pos:line="289" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="289" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="290" pos:column="17">v<pos:position pos:line="290" pos:column="18"/></name><operator pos:line="290" pos:column="18">-&gt;<pos:position pos:line="290" pos:column="23"/></operator><name pos:line="290" pos:column="20">buffer<pos:position pos:line="290" pos:column="26"/></name></name> <operator pos:line="290" pos:column="27">=<pos:position pos:line="290" pos:column="28"/></operator> <name pos:line="290" pos:column="29">NULL<pos:position pos:line="290" pos:column="33"/></name></expr>;<pos:position pos:line="290" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="291" pos:column="17">v<pos:position pos:line="291" pos:column="18"/></name><operator pos:line="291" pos:column="18">-&gt;<pos:position pos:line="291" pos:column="23"/></operator><name pos:line="291" pos:column="20">size<pos:position pos:line="291" pos:column="24"/></name></name> <operator pos:line="291" pos:column="25">=<pos:position pos:line="291" pos:column="26"/></operator> <literal type="number" pos:line="291" pos:column="27">0<pos:position pos:line="291" pos:column="28"/></literal></expr>;<pos:position pos:line="291" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="292" pos:column="10"/></block></then></if>
}<pos:position pos:line="293" pos:column="2"/></block></function>

<function><type><specifier pos:line="295" pos:column="1">const<pos:position pos:line="295" pos:column="6"/></specifier> <name pos:line="295" pos:column="7">void<pos:position pos:line="295" pos:column="11"/></name> <modifier pos:line="295" pos:column="12">*<pos:position pos:line="295" pos:column="13"/></modifier></type><name pos:line="295" pos:column="13">detach_commit_buffer<pos:position pos:line="295" pos:column="33"/></name><parameter_list pos:line="295" pos:column="33">(<parameter><decl><type><name><name pos:line="295" pos:column="34">struct<pos:position pos:line="295" pos:column="40"/></name> <name pos:line="295" pos:column="41">commit<pos:position pos:line="295" pos:column="47"/></name></name> <modifier pos:line="295" pos:column="48">*<pos:position pos:line="295" pos:column="49"/></modifier></type><name pos:line="295" pos:column="49">commit<pos:position pos:line="295" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="295" pos:column="57">unsigned<pos:position pos:line="295" pos:column="65"/></name> <name pos:line="295" pos:column="66">long<pos:position pos:line="295" pos:column="70"/></name> <modifier pos:line="295" pos:column="71">*<pos:position pos:line="295" pos:column="72"/></modifier></type><name pos:line="295" pos:column="72">sizep<pos:position pos:line="295" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="295" pos:column="78"/></parameter_list>
<block pos:line="296" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="297" pos:column="9">struct<pos:position pos:line="297" pos:column="15"/></name> <name pos:line="297" pos:column="16">commit_buffer<pos:position pos:line="297" pos:column="29"/></name></name> <modifier pos:line="297" pos:column="30">*<pos:position pos:line="297" pos:column="31"/></modifier></type><name pos:line="297" pos:column="31">v<pos:position pos:line="297" pos:column="32"/></name> <init pos:line="297" pos:column="33">= <expr><call><name pos:line="297" pos:column="35">buffer_slab_peek<pos:position pos:line="297" pos:column="51"/></name><argument_list pos:line="297" pos:column="51">(<argument><expr><operator pos:line="297" pos:column="52">&amp;<pos:position pos:line="297" pos:column="57"/></operator><name pos:line="297" pos:column="53">buffer_slab<pos:position pos:line="297" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="66">commit<pos:position pos:line="297" pos:column="72"/></name></expr></argument>)<pos:position pos:line="297" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="297" pos:column="74"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="298" pos:column="9">void<pos:position pos:line="298" pos:column="13"/></name> <modifier pos:line="298" pos:column="14">*<pos:position pos:line="298" pos:column="15"/></modifier></type><name pos:line="298" pos:column="15">ret<pos:position pos:line="298" pos:column="18"/></name></decl>;<pos:position pos:line="298" pos:column="19"/></decl_stmt>

	<if pos:line="300" pos:column="9">if <condition pos:line="300" pos:column="12">(<expr><operator pos:line="300" pos:column="13">!<pos:position pos:line="300" pos:column="14"/></operator><name pos:line="300" pos:column="14">v<pos:position pos:line="300" pos:column="15"/></name></expr>)<pos:position pos:line="300" pos:column="16"/></condition><then pos:line="300" pos:column="16"> <block pos:line="300" pos:column="17">{
		<if pos:line="301" pos:column="17">if <condition pos:line="301" pos:column="20">(<expr><name pos:line="301" pos:column="21">sizep<pos:position pos:line="301" pos:column="26"/></name></expr>)<pos:position pos:line="301" pos:column="27"/></condition><then pos:line="301" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="302" pos:column="25">*<pos:position pos:line="302" pos:column="26"/></operator><name pos:line="302" pos:column="26">sizep<pos:position pos:line="302" pos:column="31"/></name> <operator pos:line="302" pos:column="32">=<pos:position pos:line="302" pos:column="33"/></operator> <literal type="number" pos:line="302" pos:column="34">0<pos:position pos:line="302" pos:column="35"/></literal></expr>;<pos:position pos:line="302" pos:column="36"/></expr_stmt></block></then></if>
		<return pos:line="303" pos:column="17">return <expr><name pos:line="303" pos:column="24">NULL<pos:position pos:line="303" pos:column="28"/></name></expr>;<pos:position pos:line="303" pos:column="29"/></return>
	}<pos:position pos:line="304" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="305" pos:column="9">ret<pos:position pos:line="305" pos:column="12"/></name> <operator pos:line="305" pos:column="13">=<pos:position pos:line="305" pos:column="14"/></operator> <name><name pos:line="305" pos:column="15">v<pos:position pos:line="305" pos:column="16"/></name><operator pos:line="305" pos:column="16">-&gt;<pos:position pos:line="305" pos:column="21"/></operator><name pos:line="305" pos:column="18">buffer<pos:position pos:line="305" pos:column="24"/></name></name></expr>;<pos:position pos:line="305" pos:column="25"/></expr_stmt>
	<if pos:line="306" pos:column="9">if <condition pos:line="306" pos:column="12">(<expr><name pos:line="306" pos:column="13">sizep<pos:position pos:line="306" pos:column="18"/></name></expr>)<pos:position pos:line="306" pos:column="19"/></condition><then pos:line="306" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="307" pos:column="17">*<pos:position pos:line="307" pos:column="18"/></operator><name pos:line="307" pos:column="18">sizep<pos:position pos:line="307" pos:column="23"/></name> <operator pos:line="307" pos:column="24">=<pos:position pos:line="307" pos:column="25"/></operator> <name><name pos:line="307" pos:column="26">v<pos:position pos:line="307" pos:column="27"/></name><operator pos:line="307" pos:column="27">-&gt;<pos:position pos:line="307" pos:column="32"/></operator><name pos:line="307" pos:column="29">size<pos:position pos:line="307" pos:column="33"/></name></name></expr>;<pos:position pos:line="307" pos:column="34"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="309" pos:column="9">v<pos:position pos:line="309" pos:column="10"/></name><operator pos:line="309" pos:column="10">-&gt;<pos:position pos:line="309" pos:column="15"/></operator><name pos:line="309" pos:column="12">buffer<pos:position pos:line="309" pos:column="18"/></name></name> <operator pos:line="309" pos:column="19">=<pos:position pos:line="309" pos:column="20"/></operator> <name pos:line="309" pos:column="21">NULL<pos:position pos:line="309" pos:column="25"/></name></expr>;<pos:position pos:line="309" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="310" pos:column="9">v<pos:position pos:line="310" pos:column="10"/></name><operator pos:line="310" pos:column="10">-&gt;<pos:position pos:line="310" pos:column="15"/></operator><name pos:line="310" pos:column="12">size<pos:position pos:line="310" pos:column="16"/></name></name> <operator pos:line="310" pos:column="17">=<pos:position pos:line="310" pos:column="18"/></operator> <literal type="number" pos:line="310" pos:column="19">0<pos:position pos:line="310" pos:column="20"/></literal></expr>;<pos:position pos:line="310" pos:column="21"/></expr_stmt>
	<return pos:line="311" pos:column="9">return <expr><name pos:line="311" pos:column="16">ret<pos:position pos:line="311" pos:column="19"/></name></expr>;<pos:position pos:line="311" pos:column="20"/></return>
}<pos:position pos:line="312" pos:column="2"/></block></function>

<function><type><name pos:line="314" pos:column="1">int<pos:position pos:line="314" pos:column="4"/></name></type> <name pos:line="314" pos:column="5">parse_commit_buffer<pos:position pos:line="314" pos:column="24"/></name><parameter_list pos:line="314" pos:column="24">(<parameter><decl><type><name><name pos:line="314" pos:column="25">struct<pos:position pos:line="314" pos:column="31"/></name> <name pos:line="314" pos:column="32">commit<pos:position pos:line="314" pos:column="38"/></name></name> <modifier pos:line="314" pos:column="39">*<pos:position pos:line="314" pos:column="40"/></modifier></type><name pos:line="314" pos:column="40">item<pos:position pos:line="314" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="314" pos:column="46">const<pos:position pos:line="314" pos:column="51"/></specifier> <name pos:line="314" pos:column="52">void<pos:position pos:line="314" pos:column="56"/></name> <modifier pos:line="314" pos:column="57">*<pos:position pos:line="314" pos:column="58"/></modifier></type><name pos:line="314" pos:column="58">buffer<pos:position pos:line="314" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="314" pos:column="66">unsigned<pos:position pos:line="314" pos:column="74"/></name> <name pos:line="314" pos:column="75">long<pos:position pos:line="314" pos:column="79"/></name></type> <name pos:line="314" pos:column="80">size<pos:position pos:line="314" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="314" pos:column="85"/></parameter_list>
<block pos:line="315" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="316" pos:column="9">const<pos:position pos:line="316" pos:column="14"/></specifier> <name pos:line="316" pos:column="15">char<pos:position pos:line="316" pos:column="19"/></name> <modifier pos:line="316" pos:column="20">*<pos:position pos:line="316" pos:column="21"/></modifier></type><name pos:line="316" pos:column="21">tail<pos:position pos:line="316" pos:column="25"/></name> <init pos:line="316" pos:column="26">= <expr><name pos:line="316" pos:column="28">buffer<pos:position pos:line="316" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="316" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="317" pos:column="9">const<pos:position pos:line="317" pos:column="14"/></specifier> <name pos:line="317" pos:column="15">char<pos:position pos:line="317" pos:column="19"/></name> <modifier pos:line="317" pos:column="20">*<pos:position pos:line="317" pos:column="21"/></modifier></type><name pos:line="317" pos:column="21">bufptr<pos:position pos:line="317" pos:column="27"/></name> <init pos:line="317" pos:column="28">= <expr><name pos:line="317" pos:column="30">buffer<pos:position pos:line="317" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="317" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="318" pos:column="9">struct<pos:position pos:line="318" pos:column="15"/></name> <name pos:line="318" pos:column="16">object_id<pos:position pos:line="318" pos:column="25"/></name></name></type> <name pos:line="318" pos:column="26">parent<pos:position pos:line="318" pos:column="32"/></name></decl>;<pos:position pos:line="318" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="319" pos:column="9">struct<pos:position pos:line="319" pos:column="15"/></name> <name pos:line="319" pos:column="16">commit_list<pos:position pos:line="319" pos:column="27"/></name></name> <modifier pos:line="319" pos:column="28">*<pos:position pos:line="319" pos:column="29"/></modifier><modifier pos:line="319" pos:column="29">*<pos:position pos:line="319" pos:column="30"/></modifier></type><name pos:line="319" pos:column="30">pptr<pos:position pos:line="319" pos:column="34"/></name></decl>;<pos:position pos:line="319" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="320" pos:column="9">struct<pos:position pos:line="320" pos:column="15"/></name> <name pos:line="320" pos:column="16">commit_graft<pos:position pos:line="320" pos:column="28"/></name></name> <modifier pos:line="320" pos:column="29">*<pos:position pos:line="320" pos:column="30"/></modifier></type><name pos:line="320" pos:column="30">graft<pos:position pos:line="320" pos:column="35"/></name></decl>;<pos:position pos:line="320" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="321" pos:column="9">const<pos:position pos:line="321" pos:column="14"/></specifier> <name pos:line="321" pos:column="15">int<pos:position pos:line="321" pos:column="18"/></name></type> <name pos:line="321" pos:column="19">tree_entry_len<pos:position pos:line="321" pos:column="33"/></name> <init pos:line="321" pos:column="34">= <expr><name pos:line="321" pos:column="36">GIT_SHA1_HEXSZ<pos:position pos:line="321" pos:column="50"/></name> <operator pos:line="321" pos:column="51">+<pos:position pos:line="321" pos:column="52"/></operator> <literal type="number" pos:line="321" pos:column="53">5<pos:position pos:line="321" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="321" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="322" pos:column="9">const<pos:position pos:line="322" pos:column="14"/></specifier> <name pos:line="322" pos:column="15">int<pos:position pos:line="322" pos:column="18"/></name></type> <name pos:line="322" pos:column="19">parent_entry_len<pos:position pos:line="322" pos:column="35"/></name> <init pos:line="322" pos:column="36">= <expr><name pos:line="322" pos:column="38">GIT_SHA1_HEXSZ<pos:position pos:line="322" pos:column="52"/></name> <operator pos:line="322" pos:column="53">+<pos:position pos:line="322" pos:column="54"/></operator> <literal type="number" pos:line="322" pos:column="55">7<pos:position pos:line="322" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="322" pos:column="57"/></decl_stmt>

	<if pos:line="324" pos:column="9">if <condition pos:line="324" pos:column="12">(<expr><name><name pos:line="324" pos:column="13">item<pos:position pos:line="324" pos:column="17"/></name><operator pos:line="324" pos:column="17">-&gt;<pos:position pos:line="324" pos:column="22"/></operator><name pos:line="324" pos:column="19">object<pos:position pos:line="324" pos:column="25"/></name><operator pos:line="324" pos:column="25">.<pos:position pos:line="324" pos:column="26"/></operator><name pos:line="324" pos:column="26">parsed<pos:position pos:line="324" pos:column="32"/></name></name></expr>)<pos:position pos:line="324" pos:column="33"/></condition><then pos:line="324" pos:column="33">
		<block type="pseudo"><return pos:line="325" pos:column="17">return <expr><literal type="number" pos:line="325" pos:column="24">0<pos:position pos:line="325" pos:column="25"/></literal></expr>;<pos:position pos:line="325" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="326" pos:column="9">item<pos:position pos:line="326" pos:column="13"/></name><operator pos:line="326" pos:column="13">-&gt;<pos:position pos:line="326" pos:column="18"/></operator><name pos:line="326" pos:column="15">object<pos:position pos:line="326" pos:column="21"/></name><operator pos:line="326" pos:column="21">.<pos:position pos:line="326" pos:column="22"/></operator><name pos:line="326" pos:column="22">parsed<pos:position pos:line="326" pos:column="28"/></name></name> <operator pos:line="326" pos:column="29">=<pos:position pos:line="326" pos:column="30"/></operator> <literal type="number" pos:line="326" pos:column="31">1<pos:position pos:line="326" pos:column="32"/></literal></expr>;<pos:position pos:line="326" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="327" pos:column="9">tail<pos:position pos:line="327" pos:column="13"/></name> <operator pos:line="327" pos:column="14">+=<pos:position pos:line="327" pos:column="16"/></operator> <name pos:line="327" pos:column="17">size<pos:position pos:line="327" pos:column="21"/></name></expr>;<pos:position pos:line="327" pos:column="22"/></expr_stmt>
	<if pos:line="328" pos:column="9">if <condition pos:line="328" pos:column="12">(<expr><name pos:line="328" pos:column="13">tail<pos:position pos:line="328" pos:column="17"/></name> <operator pos:line="328" pos:column="18">&lt;=<pos:position pos:line="328" pos:column="23"/></operator> <name pos:line="328" pos:column="21">bufptr<pos:position pos:line="328" pos:column="27"/></name> <operator pos:line="328" pos:column="28">+<pos:position pos:line="328" pos:column="29"/></operator> <name pos:line="328" pos:column="30">tree_entry_len<pos:position pos:line="328" pos:column="44"/></name> <operator pos:line="328" pos:column="45">+<pos:position pos:line="328" pos:column="46"/></operator> <literal type="number" pos:line="328" pos:column="47">1<pos:position pos:line="328" pos:column="48"/></literal> <operator pos:line="328" pos:column="49">||<pos:position pos:line="328" pos:column="51"/></operator> <call><name pos:line="328" pos:column="52">memcmp<pos:position pos:line="328" pos:column="58"/></name><argument_list pos:line="328" pos:column="58">(<argument><expr><name pos:line="328" pos:column="59">bufptr<pos:position pos:line="328" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="328" pos:column="67">"tree "<pos:position pos:line="328" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="328" pos:column="76">5<pos:position pos:line="328" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="328" pos:column="78"/></argument_list></call> <operator pos:line="328" pos:column="79">||<pos:position pos:line="328" pos:column="81"/></operator>
			<name><name pos:line="329" pos:column="25">bufptr<pos:position pos:line="329" pos:column="31"/></name><index pos:line="329" pos:column="31">[<expr><name pos:line="329" pos:column="32">tree_entry_len<pos:position pos:line="329" pos:column="46"/></name></expr>]<pos:position pos:line="329" pos:column="47"/></index></name> <operator pos:line="329" pos:column="48">!=<pos:position pos:line="329" pos:column="50"/></operator> <literal type="char" pos:line="329" pos:column="51">'\n'<pos:position pos:line="329" pos:column="55"/></literal></expr>)<pos:position pos:line="329" pos:column="56"/></condition><then pos:line="329" pos:column="56">
		<block type="pseudo"><return pos:line="330" pos:column="17">return <expr><call><name pos:line="330" pos:column="24">error<pos:position pos:line="330" pos:column="29"/></name><argument_list pos:line="330" pos:column="29">(<argument><expr><literal type="string" pos:line="330" pos:column="30">"bogus commit object %s"<pos:position pos:line="330" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="330" pos:column="56">sha1_to_hex<pos:position pos:line="330" pos:column="67"/></name><argument_list pos:line="330" pos:column="67">(<argument><expr><name><name pos:line="330" pos:column="68">item<pos:position pos:line="330" pos:column="72"/></name><operator pos:line="330" pos:column="72">-&gt;<pos:position pos:line="330" pos:column="77"/></operator><name pos:line="330" pos:column="74">object<pos:position pos:line="330" pos:column="80"/></name><operator pos:line="330" pos:column="80">.<pos:position pos:line="330" pos:column="81"/></operator><name pos:line="330" pos:column="81">sha1<pos:position pos:line="330" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="330" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="330" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="88"/></return></block></then></if>
	<if pos:line="331" pos:column="9">if <condition pos:line="331" pos:column="12">(<expr><call><name pos:line="331" pos:column="13">get_sha1_hex<pos:position pos:line="331" pos:column="25"/></name><argument_list pos:line="331" pos:column="25">(<argument><expr><name pos:line="331" pos:column="26">bufptr<pos:position pos:line="331" pos:column="32"/></name> <operator pos:line="331" pos:column="33">+<pos:position pos:line="331" pos:column="34"/></operator> <literal type="number" pos:line="331" pos:column="35">5<pos:position pos:line="331" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="331" pos:column="38">parent<pos:position pos:line="331" pos:column="44"/></name><operator pos:line="331" pos:column="44">.<pos:position pos:line="331" pos:column="45"/></operator><name pos:line="331" pos:column="45">hash<pos:position pos:line="331" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="331" pos:column="50"/></argument_list></call> <operator pos:line="331" pos:column="51">&lt;<pos:position pos:line="331" pos:column="55"/></operator> <literal type="number" pos:line="331" pos:column="53">0<pos:position pos:line="331" pos:column="54"/></literal></expr>)<pos:position pos:line="331" pos:column="55"/></condition><then pos:line="331" pos:column="55">
		<block type="pseudo"><return pos:line="332" pos:column="17">return <expr><call><name pos:line="332" pos:column="24">error<pos:position pos:line="332" pos:column="29"/></name><argument_list pos:line="332" pos:column="29">(<argument><expr><literal type="string" pos:line="332" pos:column="30">"bad tree pointer in commit %s"<pos:position pos:line="332" pos:column="61"/></literal></expr></argument>,
			     <argument><expr><call><name pos:line="333" pos:column="30">sha1_to_hex<pos:position pos:line="333" pos:column="41"/></name><argument_list pos:line="333" pos:column="41">(<argument><expr><name><name pos:line="333" pos:column="42">item<pos:position pos:line="333" pos:column="46"/></name><operator pos:line="333" pos:column="46">-&gt;<pos:position pos:line="333" pos:column="51"/></operator><name pos:line="333" pos:column="48">object<pos:position pos:line="333" pos:column="54"/></name><operator pos:line="333" pos:column="54">.<pos:position pos:line="333" pos:column="55"/></operator><name pos:line="333" pos:column="55">sha1<pos:position pos:line="333" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="333" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="333" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="62"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="334" pos:column="9">item<pos:position pos:line="334" pos:column="13"/></name><operator pos:line="334" pos:column="13">-&gt;<pos:position pos:line="334" pos:column="18"/></operator><name pos:line="334" pos:column="15">tree<pos:position pos:line="334" pos:column="19"/></name></name> <operator pos:line="334" pos:column="20">=<pos:position pos:line="334" pos:column="21"/></operator> <call><name pos:line="334" pos:column="22">lookup_tree<pos:position pos:line="334" pos:column="33"/></name><argument_list pos:line="334" pos:column="33">(<argument><expr><name><name pos:line="334" pos:column="34">parent<pos:position pos:line="334" pos:column="40"/></name><operator pos:line="334" pos:column="40">.<pos:position pos:line="334" pos:column="41"/></operator><name pos:line="334" pos:column="41">hash<pos:position pos:line="334" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="334" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name pos:line="335" pos:column="9">bufptr<pos:position pos:line="335" pos:column="15"/></name> <operator pos:line="335" pos:column="16">+=<pos:position pos:line="335" pos:column="18"/></operator> <name pos:line="335" pos:column="19">tree_entry_len<pos:position pos:line="335" pos:column="33"/></name> <operator pos:line="335" pos:column="34">+<pos:position pos:line="335" pos:column="35"/></operator> <literal type="number" pos:line="335" pos:column="36">1<pos:position pos:line="335" pos:column="37"/></literal></expr>;<pos:position pos:line="335" pos:column="38"/></expr_stmt> <comment type="block" pos:line="335" pos:column="39">/* "tree " + "hex sha1" + "\n" */</comment>
	<expr_stmt><expr><name pos:line="336" pos:column="9">pptr<pos:position pos:line="336" pos:column="13"/></name> <operator pos:line="336" pos:column="14">=<pos:position pos:line="336" pos:column="15"/></operator> <operator pos:line="336" pos:column="16">&amp;<pos:position pos:line="336" pos:column="21"/></operator><name><name pos:line="336" pos:column="17">item<pos:position pos:line="336" pos:column="21"/></name><operator pos:line="336" pos:column="21">-&gt;<pos:position pos:line="336" pos:column="26"/></operator><name pos:line="336" pos:column="23">parents<pos:position pos:line="336" pos:column="30"/></name></name></expr>;<pos:position pos:line="336" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><name pos:line="338" pos:column="9">graft<pos:position pos:line="338" pos:column="14"/></name> <operator pos:line="338" pos:column="15">=<pos:position pos:line="338" pos:column="16"/></operator> <call><name pos:line="338" pos:column="17">lookup_commit_graft<pos:position pos:line="338" pos:column="36"/></name><argument_list pos:line="338" pos:column="36">(<argument><expr><name><name pos:line="338" pos:column="37">item<pos:position pos:line="338" pos:column="41"/></name><operator pos:line="338" pos:column="41">-&gt;<pos:position pos:line="338" pos:column="46"/></operator><name pos:line="338" pos:column="43">object<pos:position pos:line="338" pos:column="49"/></name><operator pos:line="338" pos:column="49">.<pos:position pos:line="338" pos:column="50"/></operator><name pos:line="338" pos:column="50">sha1<pos:position pos:line="338" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="338" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="56"/></expr_stmt>
	<while pos:line="339" pos:column="9">while <condition pos:line="339" pos:column="15">(<expr><name pos:line="339" pos:column="16">bufptr<pos:position pos:line="339" pos:column="22"/></name> <operator pos:line="339" pos:column="23">+<pos:position pos:line="339" pos:column="24"/></operator> <name pos:line="339" pos:column="25">parent_entry_len<pos:position pos:line="339" pos:column="41"/></name> <operator pos:line="339" pos:column="42">&lt;<pos:position pos:line="339" pos:column="46"/></operator> <name pos:line="339" pos:column="44">tail<pos:position pos:line="339" pos:column="48"/></name> <operator pos:line="339" pos:column="49">&amp;&amp;<pos:position pos:line="339" pos:column="59"/></operator> <operator pos:line="339" pos:column="52">!<pos:position pos:line="339" pos:column="53"/></operator><call><name pos:line="339" pos:column="53">memcmp<pos:position pos:line="339" pos:column="59"/></name><argument_list pos:line="339" pos:column="59">(<argument><expr><name pos:line="339" pos:column="60">bufptr<pos:position pos:line="339" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="339" pos:column="68">"parent "<pos:position pos:line="339" pos:column="77"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="339" pos:column="79">7<pos:position pos:line="339" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="339" pos:column="82"/></condition> <block pos:line="339" pos:column="83">{
		<decl_stmt><decl><type><name><name pos:line="340" pos:column="17">struct<pos:position pos:line="340" pos:column="23"/></name> <name pos:line="340" pos:column="24">commit<pos:position pos:line="340" pos:column="30"/></name></name> <modifier pos:line="340" pos:column="31">*<pos:position pos:line="340" pos:column="32"/></modifier></type><name pos:line="340" pos:column="32">new_parent<pos:position pos:line="340" pos:column="42"/></name></decl>;<pos:position pos:line="340" pos:column="43"/></decl_stmt>

		<if pos:line="342" pos:column="17">if <condition pos:line="342" pos:column="20">(<expr><name pos:line="342" pos:column="21">tail<pos:position pos:line="342" pos:column="25"/></name> <operator pos:line="342" pos:column="26">&lt;=<pos:position pos:line="342" pos:column="31"/></operator> <name pos:line="342" pos:column="29">bufptr<pos:position pos:line="342" pos:column="35"/></name> <operator pos:line="342" pos:column="36">+<pos:position pos:line="342" pos:column="37"/></operator> <name pos:line="342" pos:column="38">parent_entry_len<pos:position pos:line="342" pos:column="54"/></name> <operator pos:line="342" pos:column="55">+<pos:position pos:line="342" pos:column="56"/></operator> <literal type="number" pos:line="342" pos:column="57">1<pos:position pos:line="342" pos:column="58"/></literal> <operator pos:line="342" pos:column="59">||<pos:position pos:line="342" pos:column="61"/></operator>
		    <call><name pos:line="343" pos:column="21">get_sha1_hex<pos:position pos:line="343" pos:column="33"/></name><argument_list pos:line="343" pos:column="33">(<argument><expr><name pos:line="343" pos:column="34">bufptr<pos:position pos:line="343" pos:column="40"/></name> <operator pos:line="343" pos:column="41">+<pos:position pos:line="343" pos:column="42"/></operator> <literal type="number" pos:line="343" pos:column="43">7<pos:position pos:line="343" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="343" pos:column="46">parent<pos:position pos:line="343" pos:column="52"/></name><operator pos:line="343" pos:column="52">.<pos:position pos:line="343" pos:column="53"/></operator><name pos:line="343" pos:column="53">hash<pos:position pos:line="343" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="343" pos:column="58"/></argument_list></call> <operator pos:line="343" pos:column="59">||<pos:position pos:line="343" pos:column="61"/></operator>
		    <name><name pos:line="344" pos:column="21">bufptr<pos:position pos:line="344" pos:column="27"/></name><index pos:line="344" pos:column="27">[<expr><name pos:line="344" pos:column="28">parent_entry_len<pos:position pos:line="344" pos:column="44"/></name></expr>]<pos:position pos:line="344" pos:column="45"/></index></name> <operator pos:line="344" pos:column="46">!=<pos:position pos:line="344" pos:column="48"/></operator> <literal type="char" pos:line="344" pos:column="49">'\n'<pos:position pos:line="344" pos:column="53"/></literal></expr>)<pos:position pos:line="344" pos:column="54"/></condition><then pos:line="344" pos:column="54">
			<block type="pseudo"><return pos:line="345" pos:column="25">return <expr><call><name pos:line="345" pos:column="32">error<pos:position pos:line="345" pos:column="37"/></name><argument_list pos:line="345" pos:column="37">(<argument><expr><literal type="string" pos:line="345" pos:column="38">"bad parents in commit %s"<pos:position pos:line="345" pos:column="64"/></literal></expr></argument>, <argument><expr><call><name pos:line="345" pos:column="66">sha1_to_hex<pos:position pos:line="345" pos:column="77"/></name><argument_list pos:line="345" pos:column="77">(<argument><expr><name><name pos:line="345" pos:column="78">item<pos:position pos:line="345" pos:column="82"/></name><operator pos:line="345" pos:column="82">-&gt;<pos:position pos:line="345" pos:column="87"/></operator><name pos:line="345" pos:column="84">object<pos:position pos:line="345" pos:column="90"/></name><operator pos:line="345" pos:column="90">.<pos:position pos:line="345" pos:column="91"/></operator><name pos:line="345" pos:column="91">sha1<pos:position pos:line="345" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="345" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="345" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="98"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="346" pos:column="17">bufptr<pos:position pos:line="346" pos:column="23"/></name> <operator pos:line="346" pos:column="24">+=<pos:position pos:line="346" pos:column="26"/></operator> <name pos:line="346" pos:column="27">parent_entry_len<pos:position pos:line="346" pos:column="43"/></name> <operator pos:line="346" pos:column="44">+<pos:position pos:line="346" pos:column="45"/></operator> <literal type="number" pos:line="346" pos:column="46">1<pos:position pos:line="346" pos:column="47"/></literal></expr>;<pos:position pos:line="346" pos:column="48"/></expr_stmt>
		<comment type="block" pos:line="347" pos:column="17">/*
		 * The clone is shallow if nr_parent &lt; 0, and we must
		 * not traverse its real parents even when we unhide them.
		 */</comment>
		<if pos:line="351" pos:column="17">if <condition pos:line="351" pos:column="20">(<expr><name pos:line="351" pos:column="21">graft<pos:position pos:line="351" pos:column="26"/></name> <operator pos:line="351" pos:column="27">&amp;&amp;<pos:position pos:line="351" pos:column="37"/></operator> <operator pos:line="351" pos:column="30">(<pos:position pos:line="351" pos:column="31"/></operator><name><name pos:line="351" pos:column="31">graft<pos:position pos:line="351" pos:column="36"/></name><operator pos:line="351" pos:column="36">-&gt;<pos:position pos:line="351" pos:column="41"/></operator><name pos:line="351" pos:column="38">nr_parent<pos:position pos:line="351" pos:column="47"/></name></name> <operator pos:line="351" pos:column="48">&lt;<pos:position pos:line="351" pos:column="52"/></operator> <literal type="number" pos:line="351" pos:column="50">0<pos:position pos:line="351" pos:column="51"/></literal> <operator pos:line="351" pos:column="52">||<pos:position pos:line="351" pos:column="54"/></operator> <name pos:line="351" pos:column="55">grafts_replace_parents<pos:position pos:line="351" pos:column="77"/></name><operator pos:line="351" pos:column="77">)<pos:position pos:line="351" pos:column="78"/></operator></expr>)<pos:position pos:line="351" pos:column="79"/></condition><then pos:line="351" pos:column="79">
			<block type="pseudo"><continue pos:line="352" pos:column="25">continue;<pos:position pos:line="352" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="353" pos:column="17">new_parent<pos:position pos:line="353" pos:column="27"/></name> <operator pos:line="353" pos:column="28">=<pos:position pos:line="353" pos:column="29"/></operator> <call><name pos:line="353" pos:column="30">lookup_commit<pos:position pos:line="353" pos:column="43"/></name><argument_list pos:line="353" pos:column="43">(<argument><expr><name><name pos:line="353" pos:column="44">parent<pos:position pos:line="353" pos:column="50"/></name><operator pos:line="353" pos:column="50">.<pos:position pos:line="353" pos:column="51"/></operator><name pos:line="353" pos:column="51">hash<pos:position pos:line="353" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="353" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="57"/></expr_stmt>
		<if pos:line="354" pos:column="17">if <condition pos:line="354" pos:column="20">(<expr><name pos:line="354" pos:column="21">new_parent<pos:position pos:line="354" pos:column="31"/></name></expr>)<pos:position pos:line="354" pos:column="32"/></condition><then pos:line="354" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="355" pos:column="25">pptr<pos:position pos:line="355" pos:column="29"/></name> <operator pos:line="355" pos:column="30">=<pos:position pos:line="355" pos:column="31"/></operator> <operator pos:line="355" pos:column="32">&amp;<pos:position pos:line="355" pos:column="37"/></operator><call><name pos:line="355" pos:column="33">commit_list_insert<pos:position pos:line="355" pos:column="51"/></name><argument_list pos:line="355" pos:column="51">(<argument><expr><name pos:line="355" pos:column="52">new_parent<pos:position pos:line="355" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="355" pos:column="64">pptr<pos:position pos:line="355" pos:column="68"/></name></expr></argument>)<pos:position pos:line="355" pos:column="69"/></argument_list></call><operator pos:line="355" pos:column="69">-&gt;<pos:position pos:line="355" pos:column="74"/></operator><name pos:line="355" pos:column="71">next<pos:position pos:line="355" pos:column="75"/></name></expr>;<pos:position pos:line="355" pos:column="76"/></expr_stmt></block></then></if>
	}<pos:position pos:line="356" pos:column="10"/></block></while>
	<if pos:line="357" pos:column="9">if <condition pos:line="357" pos:column="12">(<expr><name pos:line="357" pos:column="13">graft<pos:position pos:line="357" pos:column="18"/></name></expr>)<pos:position pos:line="357" pos:column="19"/></condition><then pos:line="357" pos:column="19"> <block pos:line="357" pos:column="20">{
		<decl_stmt><decl><type><name pos:line="358" pos:column="17">int<pos:position pos:line="358" pos:column="20"/></name></type> <name pos:line="358" pos:column="21">i<pos:position pos:line="358" pos:column="22"/></name></decl>;<pos:position pos:line="358" pos:column="23"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="359" pos:column="17">struct<pos:position pos:line="359" pos:column="23"/></name> <name pos:line="359" pos:column="24">commit<pos:position pos:line="359" pos:column="30"/></name></name> <modifier pos:line="359" pos:column="31">*<pos:position pos:line="359" pos:column="32"/></modifier></type><name pos:line="359" pos:column="32">new_parent<pos:position pos:line="359" pos:column="42"/></name></decl>;<pos:position pos:line="359" pos:column="43"/></decl_stmt>
		<for pos:line="360" pos:column="17">for <control pos:line="360" pos:column="21">(<init><expr><name pos:line="360" pos:column="22">i<pos:position pos:line="360" pos:column="23"/></name> <operator pos:line="360" pos:column="24">=<pos:position pos:line="360" pos:column="25"/></operator> <literal type="number" pos:line="360" pos:column="26">0<pos:position pos:line="360" pos:column="27"/></literal></expr>;<pos:position pos:line="360" pos:column="28"/></init> <condition><expr><name pos:line="360" pos:column="29">i<pos:position pos:line="360" pos:column="30"/></name> <operator pos:line="360" pos:column="31">&lt;<pos:position pos:line="360" pos:column="35"/></operator> <name><name pos:line="360" pos:column="33">graft<pos:position pos:line="360" pos:column="38"/></name><operator pos:line="360" pos:column="38">-&gt;<pos:position pos:line="360" pos:column="43"/></operator><name pos:line="360" pos:column="40">nr_parent<pos:position pos:line="360" pos:column="49"/></name></name></expr>;<pos:position pos:line="360" pos:column="50"/></condition> <incr><expr><name pos:line="360" pos:column="51">i<pos:position pos:line="360" pos:column="52"/></name><operator pos:line="360" pos:column="52">++<pos:position pos:line="360" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="360" pos:column="55"/></control> <block pos:line="360" pos:column="56">{
			<expr_stmt><expr><name pos:line="361" pos:column="25">new_parent<pos:position pos:line="361" pos:column="35"/></name> <operator pos:line="361" pos:column="36">=<pos:position pos:line="361" pos:column="37"/></operator> <call><name pos:line="361" pos:column="38">lookup_commit<pos:position pos:line="361" pos:column="51"/></name><argument_list pos:line="361" pos:column="51">(<argument><expr><name><name pos:line="361" pos:column="52">graft<pos:position pos:line="361" pos:column="57"/></name><operator pos:line="361" pos:column="57">-&gt;<pos:position pos:line="361" pos:column="62"/></operator><name pos:line="361" pos:column="59">parent<pos:position pos:line="361" pos:column="65"/></name><index pos:line="361" pos:column="65">[<expr><name pos:line="361" pos:column="66">i<pos:position pos:line="361" pos:column="67"/></name></expr>]<pos:position pos:line="361" pos:column="68"/></index></name><operator pos:line="361" pos:column="68">.<pos:position pos:line="361" pos:column="69"/></operator><name pos:line="361" pos:column="69">hash<pos:position pos:line="361" pos:column="73"/></name></expr></argument>)<pos:position pos:line="361" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="75"/></expr_stmt>
			<if pos:line="362" pos:column="25">if <condition pos:line="362" pos:column="28">(<expr><operator pos:line="362" pos:column="29">!<pos:position pos:line="362" pos:column="30"/></operator><name pos:line="362" pos:column="30">new_parent<pos:position pos:line="362" pos:column="40"/></name></expr>)<pos:position pos:line="362" pos:column="41"/></condition><then pos:line="362" pos:column="41">
				<block type="pseudo"><continue pos:line="363" pos:column="33">continue;<pos:position pos:line="363" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="364" pos:column="25">pptr<pos:position pos:line="364" pos:column="29"/></name> <operator pos:line="364" pos:column="30">=<pos:position pos:line="364" pos:column="31"/></operator> <operator pos:line="364" pos:column="32">&amp;<pos:position pos:line="364" pos:column="37"/></operator><call><name pos:line="364" pos:column="33">commit_list_insert<pos:position pos:line="364" pos:column="51"/></name><argument_list pos:line="364" pos:column="51">(<argument><expr><name pos:line="364" pos:column="52">new_parent<pos:position pos:line="364" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="364" pos:column="64">pptr<pos:position pos:line="364" pos:column="68"/></name></expr></argument>)<pos:position pos:line="364" pos:column="69"/></argument_list></call><operator pos:line="364" pos:column="69">-&gt;<pos:position pos:line="364" pos:column="74"/></operator><name pos:line="364" pos:column="71">next<pos:position pos:line="364" pos:column="75"/></name></expr>;<pos:position pos:line="364" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="365" pos:column="18"/></block></for>
	}<pos:position pos:line="366" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="367" pos:column="9">item<pos:position pos:line="367" pos:column="13"/></name><operator pos:line="367" pos:column="13">-&gt;<pos:position pos:line="367" pos:column="18"/></operator><name pos:line="367" pos:column="15">date<pos:position pos:line="367" pos:column="19"/></name></name> <operator pos:line="367" pos:column="20">=<pos:position pos:line="367" pos:column="21"/></operator> <call><name pos:line="367" pos:column="22">parse_commit_date<pos:position pos:line="367" pos:column="39"/></name><argument_list pos:line="367" pos:column="39">(<argument><expr><name pos:line="367" pos:column="40">bufptr<pos:position pos:line="367" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="367" pos:column="48">tail<pos:position pos:line="367" pos:column="52"/></name></expr></argument>)<pos:position pos:line="367" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="54"/></expr_stmt>

	<return pos:line="369" pos:column="9">return <expr><literal type="number" pos:line="369" pos:column="16">0<pos:position pos:line="369" pos:column="17"/></literal></expr>;<pos:position pos:line="369" pos:column="18"/></return>
}<pos:position pos:line="370" pos:column="2"/></block></function>

<function><type><name pos:line="372" pos:column="1">int<pos:position pos:line="372" pos:column="4"/></name></type> <name pos:line="372" pos:column="5">parse_commit_gently<pos:position pos:line="372" pos:column="24"/></name><parameter_list pos:line="372" pos:column="24">(<parameter><decl><type><name><name pos:line="372" pos:column="25">struct<pos:position pos:line="372" pos:column="31"/></name> <name pos:line="372" pos:column="32">commit<pos:position pos:line="372" pos:column="38"/></name></name> <modifier pos:line="372" pos:column="39">*<pos:position pos:line="372" pos:column="40"/></modifier></type><name pos:line="372" pos:column="40">item<pos:position pos:line="372" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="372" pos:column="46">int<pos:position pos:line="372" pos:column="49"/></name></type> <name pos:line="372" pos:column="50">quiet_on_missing<pos:position pos:line="372" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="372" pos:column="67"/></parameter_list>
<block pos:line="373" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="374" pos:column="9">enum<pos:position pos:line="374" pos:column="13"/></name> <name pos:line="374" pos:column="14">object_type<pos:position pos:line="374" pos:column="25"/></name></name></type> <name pos:line="374" pos:column="26">type<pos:position pos:line="374" pos:column="30"/></name></decl>;<pos:position pos:line="374" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="375" pos:column="9">void<pos:position pos:line="375" pos:column="13"/></name> <modifier pos:line="375" pos:column="14">*<pos:position pos:line="375" pos:column="15"/></modifier></type><name pos:line="375" pos:column="15">buffer<pos:position pos:line="375" pos:column="21"/></name></decl>;<pos:position pos:line="375" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="376" pos:column="9">unsigned<pos:position pos:line="376" pos:column="17"/></name> <name pos:line="376" pos:column="18">long<pos:position pos:line="376" pos:column="22"/></name></type> <name pos:line="376" pos:column="23">size<pos:position pos:line="376" pos:column="27"/></name></decl>;<pos:position pos:line="376" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="377" pos:column="9">int<pos:position pos:line="377" pos:column="12"/></name></type> <name pos:line="377" pos:column="13">ret<pos:position pos:line="377" pos:column="16"/></name></decl>;<pos:position pos:line="377" pos:column="17"/></decl_stmt>

	<if pos:line="379" pos:column="9">if <condition pos:line="379" pos:column="12">(<expr><operator pos:line="379" pos:column="13">!<pos:position pos:line="379" pos:column="14"/></operator><name pos:line="379" pos:column="14">item<pos:position pos:line="379" pos:column="18"/></name></expr>)<pos:position pos:line="379" pos:column="19"/></condition><then pos:line="379" pos:column="19">
		<block type="pseudo"><return pos:line="380" pos:column="17">return <expr><operator pos:line="380" pos:column="24">-<pos:position pos:line="380" pos:column="25"/></operator><literal type="number" pos:line="380" pos:column="25">1<pos:position pos:line="380" pos:column="26"/></literal></expr>;<pos:position pos:line="380" pos:column="27"/></return></block></then></if>
	<if pos:line="381" pos:column="9">if <condition pos:line="381" pos:column="12">(<expr><name><name pos:line="381" pos:column="13">item<pos:position pos:line="381" pos:column="17"/></name><operator pos:line="381" pos:column="17">-&gt;<pos:position pos:line="381" pos:column="22"/></operator><name pos:line="381" pos:column="19">object<pos:position pos:line="381" pos:column="25"/></name><operator pos:line="381" pos:column="25">.<pos:position pos:line="381" pos:column="26"/></operator><name pos:line="381" pos:column="26">parsed<pos:position pos:line="381" pos:column="32"/></name></name></expr>)<pos:position pos:line="381" pos:column="33"/></condition><then pos:line="381" pos:column="33">
		<block type="pseudo"><return pos:line="382" pos:column="17">return <expr><literal type="number" pos:line="382" pos:column="24">0<pos:position pos:line="382" pos:column="25"/></literal></expr>;<pos:position pos:line="382" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="383" pos:column="9">buffer<pos:position pos:line="383" pos:column="15"/></name> <operator pos:line="383" pos:column="16">=<pos:position pos:line="383" pos:column="17"/></operator> <call><name pos:line="383" pos:column="18">read_sha1_file<pos:position pos:line="383" pos:column="32"/></name><argument_list pos:line="383" pos:column="32">(<argument><expr><name><name pos:line="383" pos:column="33">item<pos:position pos:line="383" pos:column="37"/></name><operator pos:line="383" pos:column="37">-&gt;<pos:position pos:line="383" pos:column="42"/></operator><name pos:line="383" pos:column="39">object<pos:position pos:line="383" pos:column="45"/></name><operator pos:line="383" pos:column="45">.<pos:position pos:line="383" pos:column="46"/></operator><name pos:line="383" pos:column="46">sha1<pos:position pos:line="383" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="383" pos:column="52">&amp;<pos:position pos:line="383" pos:column="57"/></operator><name pos:line="383" pos:column="53">type<pos:position pos:line="383" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="383" pos:column="59">&amp;<pos:position pos:line="383" pos:column="64"/></operator><name pos:line="383" pos:column="60">size<pos:position pos:line="383" pos:column="64"/></name></expr></argument>)<pos:position pos:line="383" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="66"/></expr_stmt>
	<if pos:line="384" pos:column="9">if <condition pos:line="384" pos:column="12">(<expr><operator pos:line="384" pos:column="13">!<pos:position pos:line="384" pos:column="14"/></operator><name pos:line="384" pos:column="14">buffer<pos:position pos:line="384" pos:column="20"/></name></expr>)<pos:position pos:line="384" pos:column="21"/></condition><then pos:line="384" pos:column="21">
		<block type="pseudo"><return pos:line="385" pos:column="17">return <expr><ternary><condition><expr><name pos:line="385" pos:column="24">quiet_on_missing<pos:position pos:line="385" pos:column="40"/></name></expr> ?<pos:position pos:line="385" pos:column="42"/></condition><then pos:line="385" pos:column="42"> <expr><operator pos:line="385" pos:column="43">-<pos:position pos:line="385" pos:column="44"/></operator><literal type="number" pos:line="385" pos:column="44">1<pos:position pos:line="385" pos:column="45"/></literal></expr> <pos:position pos:line="385" pos:column="46"/></then><else pos:line="385" pos:column="46">:
			<expr><call><name pos:line="386" pos:column="25">error<pos:position pos:line="386" pos:column="30"/></name><argument_list pos:line="386" pos:column="30">(<argument><expr><literal type="string" pos:line="386" pos:column="31">"Could not read %s"<pos:position pos:line="386" pos:column="50"/></literal></expr></argument>,
			     <argument><expr><call><name pos:line="387" pos:column="30">sha1_to_hex<pos:position pos:line="387" pos:column="41"/></name><argument_list pos:line="387" pos:column="41">(<argument><expr><name><name pos:line="387" pos:column="42">item<pos:position pos:line="387" pos:column="46"/></name><operator pos:line="387" pos:column="46">-&gt;<pos:position pos:line="387" pos:column="51"/></operator><name pos:line="387" pos:column="48">object<pos:position pos:line="387" pos:column="54"/></name><operator pos:line="387" pos:column="54">.<pos:position pos:line="387" pos:column="55"/></operator><name pos:line="387" pos:column="55">sha1<pos:position pos:line="387" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="387" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="387" pos:column="61"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="387" pos:column="62"/></return></block></then></if>
	<if pos:line="388" pos:column="9">if <condition pos:line="388" pos:column="12">(<expr><name pos:line="388" pos:column="13">type<pos:position pos:line="388" pos:column="17"/></name> <operator pos:line="388" pos:column="18">!=<pos:position pos:line="388" pos:column="20"/></operator> <name pos:line="388" pos:column="21">OBJ_COMMIT<pos:position pos:line="388" pos:column="31"/></name></expr>)<pos:position pos:line="388" pos:column="32"/></condition><then pos:line="388" pos:column="32"> <block pos:line="388" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="389" pos:column="17">free<pos:position pos:line="389" pos:column="21"/></name><argument_list pos:line="389" pos:column="21">(<argument><expr><name pos:line="389" pos:column="22">buffer<pos:position pos:line="389" pos:column="28"/></name></expr></argument>)<pos:position pos:line="389" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="389" pos:column="30"/></expr_stmt>
		<return pos:line="390" pos:column="17">return <expr><call><name pos:line="390" pos:column="24">error<pos:position pos:line="390" pos:column="29"/></name><argument_list pos:line="390" pos:column="29">(<argument><expr><literal type="string" pos:line="390" pos:column="30">"Object %s not a commit"<pos:position pos:line="390" pos:column="54"/></literal></expr></argument>,
			     <argument><expr><call><name pos:line="391" pos:column="30">sha1_to_hex<pos:position pos:line="391" pos:column="41"/></name><argument_list pos:line="391" pos:column="41">(<argument><expr><name><name pos:line="391" pos:column="42">item<pos:position pos:line="391" pos:column="46"/></name><operator pos:line="391" pos:column="46">-&gt;<pos:position pos:line="391" pos:column="51"/></operator><name pos:line="391" pos:column="48">object<pos:position pos:line="391" pos:column="54"/></name><operator pos:line="391" pos:column="54">.<pos:position pos:line="391" pos:column="55"/></operator><name pos:line="391" pos:column="55">sha1<pos:position pos:line="391" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="391" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="391" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="391" pos:column="62"/></return>
	}<pos:position pos:line="392" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="393" pos:column="9">ret<pos:position pos:line="393" pos:column="12"/></name> <operator pos:line="393" pos:column="13">=<pos:position pos:line="393" pos:column="14"/></operator> <call><name pos:line="393" pos:column="15">parse_commit_buffer<pos:position pos:line="393" pos:column="34"/></name><argument_list pos:line="393" pos:column="34">(<argument><expr><name pos:line="393" pos:column="35">item<pos:position pos:line="393" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="41">buffer<pos:position pos:line="393" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="49">size<pos:position pos:line="393" pos:column="53"/></name></expr></argument>)<pos:position pos:line="393" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="55"/></expr_stmt>
	<if pos:line="394" pos:column="9">if <condition pos:line="394" pos:column="12">(<expr><name pos:line="394" pos:column="13">save_commit_buffer<pos:position pos:line="394" pos:column="31"/></name> <operator pos:line="394" pos:column="32">&amp;&amp;<pos:position pos:line="394" pos:column="42"/></operator> <operator pos:line="394" pos:column="35">!<pos:position pos:line="394" pos:column="36"/></operator><name pos:line="394" pos:column="36">ret<pos:position pos:line="394" pos:column="39"/></name></expr>)<pos:position pos:line="394" pos:column="40"/></condition><then pos:line="394" pos:column="40"> <block pos:line="394" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="395" pos:column="17">set_commit_buffer<pos:position pos:line="395" pos:column="34"/></name><argument_list pos:line="395" pos:column="34">(<argument><expr><name pos:line="395" pos:column="35">item<pos:position pos:line="395" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="395" pos:column="41">buffer<pos:position pos:line="395" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="395" pos:column="49">size<pos:position pos:line="395" pos:column="53"/></name></expr></argument>)<pos:position pos:line="395" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="55"/></expr_stmt>
		<return pos:line="396" pos:column="17">return <expr><literal type="number" pos:line="396" pos:column="24">0<pos:position pos:line="396" pos:column="25"/></literal></expr>;<pos:position pos:line="396" pos:column="26"/></return>
	}<pos:position pos:line="397" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="398" pos:column="9">free<pos:position pos:line="398" pos:column="13"/></name><argument_list pos:line="398" pos:column="13">(<argument><expr><name pos:line="398" pos:column="14">buffer<pos:position pos:line="398" pos:column="20"/></name></expr></argument>)<pos:position pos:line="398" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="22"/></expr_stmt>
	<return pos:line="399" pos:column="9">return <expr><name pos:line="399" pos:column="16">ret<pos:position pos:line="399" pos:column="19"/></name></expr>;<pos:position pos:line="399" pos:column="20"/></return>
}<pos:position pos:line="400" pos:column="2"/></block></function>

<function><type><name pos:line="402" pos:column="1">void<pos:position pos:line="402" pos:column="5"/></name></type> <name pos:line="402" pos:column="6">parse_commit_or_die<pos:position pos:line="402" pos:column="25"/></name><parameter_list pos:line="402" pos:column="25">(<parameter><decl><type><name><name pos:line="402" pos:column="26">struct<pos:position pos:line="402" pos:column="32"/></name> <name pos:line="402" pos:column="33">commit<pos:position pos:line="402" pos:column="39"/></name></name> <modifier pos:line="402" pos:column="40">*<pos:position pos:line="402" pos:column="41"/></modifier></type><name pos:line="402" pos:column="41">item<pos:position pos:line="402" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="402" pos:column="46"/></parameter_list>
<block pos:line="403" pos:column="1">{
	<if pos:line="404" pos:column="9">if <condition pos:line="404" pos:column="12">(<expr><call><name pos:line="404" pos:column="13">parse_commit<pos:position pos:line="404" pos:column="25"/></name><argument_list pos:line="404" pos:column="25">(<argument><expr><name pos:line="404" pos:column="26">item<pos:position pos:line="404" pos:column="30"/></name></expr></argument>)<pos:position pos:line="404" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="404" pos:column="32"/></condition><then pos:line="404" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="405" pos:column="17">die<pos:position pos:line="405" pos:column="20"/></name><argument_list pos:line="405" pos:column="20">(<argument><expr><literal type="string" pos:line="405" pos:column="21">"unable to parse commit %s"<pos:position pos:line="405" pos:column="48"/></literal></expr></argument>,
		    <argument><expr><ternary><condition><expr><name pos:line="406" pos:column="21">item<pos:position pos:line="406" pos:column="25"/></name></expr> ?<pos:position pos:line="406" pos:column="27"/></condition><then pos:line="406" pos:column="27"> <expr><call><name pos:line="406" pos:column="28">sha1_to_hex<pos:position pos:line="406" pos:column="39"/></name><argument_list pos:line="406" pos:column="39">(<argument><expr><name><name pos:line="406" pos:column="40">item<pos:position pos:line="406" pos:column="44"/></name><operator pos:line="406" pos:column="44">-&gt;<pos:position pos:line="406" pos:column="49"/></operator><name pos:line="406" pos:column="46">object<pos:position pos:line="406" pos:column="52"/></name><operator pos:line="406" pos:column="52">.<pos:position pos:line="406" pos:column="53"/></operator><name pos:line="406" pos:column="53">sha1<pos:position pos:line="406" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="406" pos:column="58"/></argument_list></call></expr> <pos:position pos:line="406" pos:column="59"/></then><else pos:line="406" pos:column="59">: <expr><literal type="string" pos:line="406" pos:column="61">"(null)"<pos:position pos:line="406" pos:column="69"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="406" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="71"/></expr_stmt></block></then></if>
}<pos:position pos:line="407" pos:column="2"/></block></function>

<function><type><name pos:line="409" pos:column="1">int<pos:position pos:line="409" pos:column="4"/></name></type> <name pos:line="409" pos:column="5">find_commit_subject<pos:position pos:line="409" pos:column="24"/></name><parameter_list pos:line="409" pos:column="24">(<parameter><decl><type><specifier pos:line="409" pos:column="25">const<pos:position pos:line="409" pos:column="30"/></specifier> <name pos:line="409" pos:column="31">char<pos:position pos:line="409" pos:column="35"/></name> <modifier pos:line="409" pos:column="36">*<pos:position pos:line="409" pos:column="37"/></modifier></type><name pos:line="409" pos:column="37">commit_buffer<pos:position pos:line="409" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="409" pos:column="52">const<pos:position pos:line="409" pos:column="57"/></specifier> <name pos:line="409" pos:column="58">char<pos:position pos:line="409" pos:column="62"/></name> <modifier pos:line="409" pos:column="63">*<pos:position pos:line="409" pos:column="64"/></modifier><modifier pos:line="409" pos:column="64">*<pos:position pos:line="409" pos:column="65"/></modifier></type><name pos:line="409" pos:column="65">subject<pos:position pos:line="409" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="409" pos:column="73"/></parameter_list>
<block pos:line="410" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="411" pos:column="9">const<pos:position pos:line="411" pos:column="14"/></specifier> <name pos:line="411" pos:column="15">char<pos:position pos:line="411" pos:column="19"/></name> <modifier pos:line="411" pos:column="20">*<pos:position pos:line="411" pos:column="21"/></modifier></type><name pos:line="411" pos:column="21">eol<pos:position pos:line="411" pos:column="24"/></name></decl>;<pos:position pos:line="411" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="412" pos:column="9">const<pos:position pos:line="412" pos:column="14"/></specifier> <name pos:line="412" pos:column="15">char<pos:position pos:line="412" pos:column="19"/></name> <modifier pos:line="412" pos:column="20">*<pos:position pos:line="412" pos:column="21"/></modifier></type><name pos:line="412" pos:column="21">p<pos:position pos:line="412" pos:column="22"/></name> <init pos:line="412" pos:column="23">= <expr><name pos:line="412" pos:column="25">commit_buffer<pos:position pos:line="412" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="412" pos:column="39"/></decl_stmt>

	<while pos:line="414" pos:column="9">while <condition pos:line="414" pos:column="15">(<expr><operator pos:line="414" pos:column="16">*<pos:position pos:line="414" pos:column="17"/></operator><name pos:line="414" pos:column="17">p<pos:position pos:line="414" pos:column="18"/></name> <operator pos:line="414" pos:column="19">&amp;&amp;<pos:position pos:line="414" pos:column="29"/></operator> <operator pos:line="414" pos:column="22">(<pos:position pos:line="414" pos:column="23"/></operator><operator pos:line="414" pos:column="23">*<pos:position pos:line="414" pos:column="24"/></operator><name pos:line="414" pos:column="24">p<pos:position pos:line="414" pos:column="25"/></name> <operator pos:line="414" pos:column="26">!=<pos:position pos:line="414" pos:column="28"/></operator> <literal type="char" pos:line="414" pos:column="29">'\n'<pos:position pos:line="414" pos:column="33"/></literal> <operator pos:line="414" pos:column="34">||<pos:position pos:line="414" pos:column="36"/></operator> <name><name pos:line="414" pos:column="37">p<pos:position pos:line="414" pos:column="38"/></name><index pos:line="414" pos:column="38">[<expr><literal type="number" pos:line="414" pos:column="39">1<pos:position pos:line="414" pos:column="40"/></literal></expr>]<pos:position pos:line="414" pos:column="41"/></index></name> <operator pos:line="414" pos:column="42">!=<pos:position pos:line="414" pos:column="44"/></operator> <literal type="char" pos:line="414" pos:column="45">'\n'<pos:position pos:line="414" pos:column="49"/></literal><operator pos:line="414" pos:column="49">)<pos:position pos:line="414" pos:column="50"/></operator></expr>)<pos:position pos:line="414" pos:column="51"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="415" pos:column="17">p<pos:position pos:line="415" pos:column="18"/></name><operator pos:line="415" pos:column="18">++<pos:position pos:line="415" pos:column="20"/></operator></expr>;<pos:position pos:line="415" pos:column="21"/></expr_stmt></block></while>
	<if pos:line="416" pos:column="9">if <condition pos:line="416" pos:column="12">(<expr><operator pos:line="416" pos:column="13">*<pos:position pos:line="416" pos:column="14"/></operator><name pos:line="416" pos:column="14">p<pos:position pos:line="416" pos:column="15"/></name></expr>)<pos:position pos:line="416" pos:column="16"/></condition><then pos:line="416" pos:column="16"> <block pos:line="416" pos:column="17">{
		<expr_stmt><expr><name pos:line="417" pos:column="17">p<pos:position pos:line="417" pos:column="18"/></name> <operator pos:line="417" pos:column="19">+=<pos:position pos:line="417" pos:column="21"/></operator> <literal type="number" pos:line="417" pos:column="22">2<pos:position pos:line="417" pos:column="23"/></literal></expr>;<pos:position pos:line="417" pos:column="24"/></expr_stmt>
		<for pos:line="418" pos:column="17">for <control pos:line="418" pos:column="21">(<init><expr><name pos:line="418" pos:column="22">eol<pos:position pos:line="418" pos:column="25"/></name> <operator pos:line="418" pos:column="26">=<pos:position pos:line="418" pos:column="27"/></operator> <name pos:line="418" pos:column="28">p<pos:position pos:line="418" pos:column="29"/></name></expr>;<pos:position pos:line="418" pos:column="30"/></init> <condition><expr><operator pos:line="418" pos:column="31">*<pos:position pos:line="418" pos:column="32"/></operator><name pos:line="418" pos:column="32">eol<pos:position pos:line="418" pos:column="35"/></name> <operator pos:line="418" pos:column="36">&amp;&amp;<pos:position pos:line="418" pos:column="46"/></operator> <operator pos:line="418" pos:column="39">*<pos:position pos:line="418" pos:column="40"/></operator><name pos:line="418" pos:column="40">eol<pos:position pos:line="418" pos:column="43"/></name> <operator pos:line="418" pos:column="44">!=<pos:position pos:line="418" pos:column="46"/></operator> <literal type="char" pos:line="418" pos:column="47">'\n'<pos:position pos:line="418" pos:column="51"/></literal></expr>;<pos:position pos:line="418" pos:column="52"/></condition> <incr><expr><name pos:line="418" pos:column="53">eol<pos:position pos:line="418" pos:column="56"/></name><operator pos:line="418" pos:column="56">++<pos:position pos:line="418" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="418" pos:column="59"/></control>
			<block type="pseudo"><empty_stmt pos:line="419" pos:column="25">;<pos:position pos:line="419" pos:column="26"/></empty_stmt></block></for> <comment type="block" pos:line="419" pos:column="27">/* do nothing */</comment>
	}<pos:position pos:line="420" pos:column="10"/></block></then> <else pos:line="420" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="421" pos:column="17">eol<pos:position pos:line="421" pos:column="20"/></name> <operator pos:line="421" pos:column="21">=<pos:position pos:line="421" pos:column="22"/></operator> <name pos:line="421" pos:column="23">p<pos:position pos:line="421" pos:column="24"/></name></expr>;<pos:position pos:line="421" pos:column="25"/></expr_stmt></block></else></if>

	<expr_stmt><expr><operator pos:line="423" pos:column="9">*<pos:position pos:line="423" pos:column="10"/></operator><name pos:line="423" pos:column="10">subject<pos:position pos:line="423" pos:column="17"/></name> <operator pos:line="423" pos:column="18">=<pos:position pos:line="423" pos:column="19"/></operator> <name pos:line="423" pos:column="20">p<pos:position pos:line="423" pos:column="21"/></name></expr>;<pos:position pos:line="423" pos:column="22"/></expr_stmt>

	<return pos:line="425" pos:column="9">return <expr><name pos:line="425" pos:column="16">eol<pos:position pos:line="425" pos:column="19"/></name> <operator pos:line="425" pos:column="20">-<pos:position pos:line="425" pos:column="21"/></operator> <name pos:line="425" pos:column="22">p<pos:position pos:line="425" pos:column="23"/></name></expr>;<pos:position pos:line="425" pos:column="24"/></return>
}<pos:position pos:line="426" pos:column="2"/></block></function>

<function><type><name><name pos:line="428" pos:column="1">struct<pos:position pos:line="428" pos:column="7"/></name> <name pos:line="428" pos:column="8">commit_list<pos:position pos:line="428" pos:column="19"/></name></name> <modifier pos:line="428" pos:column="20">*<pos:position pos:line="428" pos:column="21"/></modifier></type><name pos:line="428" pos:column="21">commit_list_insert<pos:position pos:line="428" pos:column="39"/></name><parameter_list pos:line="428" pos:column="39">(<parameter><decl><type><name><name pos:line="428" pos:column="40">struct<pos:position pos:line="428" pos:column="46"/></name> <name pos:line="428" pos:column="47">commit<pos:position pos:line="428" pos:column="53"/></name></name> <modifier pos:line="428" pos:column="54">*<pos:position pos:line="428" pos:column="55"/></modifier></type><name pos:line="428" pos:column="55">item<pos:position pos:line="428" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="428" pos:column="61">struct<pos:position pos:line="428" pos:column="67"/></name> <name pos:line="428" pos:column="68">commit_list<pos:position pos:line="428" pos:column="79"/></name></name> <modifier pos:line="428" pos:column="80">*<pos:position pos:line="428" pos:column="81"/></modifier><modifier pos:line="428" pos:column="81">*<pos:position pos:line="428" pos:column="82"/></modifier></type><name pos:line="428" pos:column="82">list_p<pos:position pos:line="428" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="428" pos:column="89"/></parameter_list>
<block pos:line="429" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="430" pos:column="9">struct<pos:position pos:line="430" pos:column="15"/></name> <name pos:line="430" pos:column="16">commit_list<pos:position pos:line="430" pos:column="27"/></name></name> <modifier pos:line="430" pos:column="28">*<pos:position pos:line="430" pos:column="29"/></modifier></type><name pos:line="430" pos:column="29">new_list<pos:position pos:line="430" pos:column="37"/></name> <init pos:line="430" pos:column="38">= <expr><call><name pos:line="430" pos:column="40">xmalloc<pos:position pos:line="430" pos:column="47"/></name><argument_list pos:line="430" pos:column="47">(<argument><expr><sizeof pos:line="430" pos:column="48">sizeof<argument_list pos:line="430" pos:column="54">(<argument><expr pos:line="430" pos:column="55">struct <name pos:line="430" pos:column="62">commit_list<pos:position pos:line="430" pos:column="73"/></name></expr></argument>)<pos:position pos:line="430" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="430" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="430" pos:column="76"/></decl_stmt>
	<expr_stmt><expr><name><name pos:line="431" pos:column="9">new_list<pos:position pos:line="431" pos:column="17"/></name><operator pos:line="431" pos:column="17">-&gt;<pos:position pos:line="431" pos:column="22"/></operator><name pos:line="431" pos:column="19">item<pos:position pos:line="431" pos:column="23"/></name></name> <operator pos:line="431" pos:column="24">=<pos:position pos:line="431" pos:column="25"/></operator> <name pos:line="431" pos:column="26">item<pos:position pos:line="431" pos:column="30"/></name></expr>;<pos:position pos:line="431" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="432" pos:column="9">new_list<pos:position pos:line="432" pos:column="17"/></name><operator pos:line="432" pos:column="17">-&gt;<pos:position pos:line="432" pos:column="22"/></operator><name pos:line="432" pos:column="19">next<pos:position pos:line="432" pos:column="23"/></name></name> <operator pos:line="432" pos:column="24">=<pos:position pos:line="432" pos:column="25"/></operator> <operator pos:line="432" pos:column="26">*<pos:position pos:line="432" pos:column="27"/></operator><name pos:line="432" pos:column="27">list_p<pos:position pos:line="432" pos:column="33"/></name></expr>;<pos:position pos:line="432" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="433" pos:column="9">*<pos:position pos:line="433" pos:column="10"/></operator><name pos:line="433" pos:column="10">list_p<pos:position pos:line="433" pos:column="16"/></name> <operator pos:line="433" pos:column="17">=<pos:position pos:line="433" pos:column="18"/></operator> <name pos:line="433" pos:column="19">new_list<pos:position pos:line="433" pos:column="27"/></name></expr>;<pos:position pos:line="433" pos:column="28"/></expr_stmt>
	<return pos:line="434" pos:column="9">return <expr><name pos:line="434" pos:column="16">new_list<pos:position pos:line="434" pos:column="24"/></name></expr>;<pos:position pos:line="434" pos:column="25"/></return>
}<pos:position pos:line="435" pos:column="2"/></block></function>

<function><type><name pos:line="437" pos:column="1">unsigned<pos:position pos:line="437" pos:column="9"/></name></type> <name pos:line="437" pos:column="10">commit_list_count<pos:position pos:line="437" pos:column="27"/></name><parameter_list pos:line="437" pos:column="27">(<parameter><decl><type><specifier pos:line="437" pos:column="28">const<pos:position pos:line="437" pos:column="33"/></specifier> <name><name pos:line="437" pos:column="34">struct<pos:position pos:line="437" pos:column="40"/></name> <name pos:line="437" pos:column="41">commit_list<pos:position pos:line="437" pos:column="52"/></name></name> <modifier pos:line="437" pos:column="53">*<pos:position pos:line="437" pos:column="54"/></modifier></type><name pos:line="437" pos:column="54">l<pos:position pos:line="437" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="437" pos:column="56"/></parameter_list>
<block pos:line="438" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="439" pos:column="9">unsigned<pos:position pos:line="439" pos:column="17"/></name></type> <name pos:line="439" pos:column="18">c<pos:position pos:line="439" pos:column="19"/></name> <init pos:line="439" pos:column="20">= <expr><literal type="number" pos:line="439" pos:column="22">0<pos:position pos:line="439" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="439" pos:column="24"/></decl_stmt>
	<for pos:line="440" pos:column="9">for <control pos:line="440" pos:column="13">(<init pos:line="440" pos:column="14">;<pos:position pos:line="440" pos:column="15"/></init> <condition><expr><name pos:line="440" pos:column="16">l<pos:position pos:line="440" pos:column="17"/></name></expr>;<pos:position pos:line="440" pos:column="18"/></condition> <incr><expr><name pos:line="440" pos:column="19">l<pos:position pos:line="440" pos:column="20"/></name> <operator pos:line="440" pos:column="21">=<pos:position pos:line="440" pos:column="22"/></operator> <name><name pos:line="440" pos:column="23">l<pos:position pos:line="440" pos:column="24"/></name><operator pos:line="440" pos:column="24">-&gt;<pos:position pos:line="440" pos:column="29"/></operator><name pos:line="440" pos:column="26">next<pos:position pos:line="440" pos:column="30"/></name></name></expr></incr> )<pos:position pos:line="440" pos:column="32"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="441" pos:column="17">c<pos:position pos:line="441" pos:column="18"/></name><operator pos:line="441" pos:column="18">++<pos:position pos:line="441" pos:column="20"/></operator></expr>;<pos:position pos:line="441" pos:column="21"/></expr_stmt></block></for>
	<return pos:line="442" pos:column="9">return <expr><name pos:line="442" pos:column="16">c<pos:position pos:line="442" pos:column="17"/></name></expr>;<pos:position pos:line="442" pos:column="18"/></return>
}<pos:position pos:line="443" pos:column="2"/></block></function>

<function><type><name><name pos:line="445" pos:column="1">struct<pos:position pos:line="445" pos:column="7"/></name> <name pos:line="445" pos:column="8">commit_list<pos:position pos:line="445" pos:column="19"/></name></name> <modifier pos:line="445" pos:column="20">*<pos:position pos:line="445" pos:column="21"/></modifier></type><name pos:line="445" pos:column="21">copy_commit_list<pos:position pos:line="445" pos:column="37"/></name><parameter_list pos:line="445" pos:column="37">(<parameter><decl><type><name><name pos:line="445" pos:column="38">struct<pos:position pos:line="445" pos:column="44"/></name> <name pos:line="445" pos:column="45">commit_list<pos:position pos:line="445" pos:column="56"/></name></name> <modifier pos:line="445" pos:column="57">*<pos:position pos:line="445" pos:column="58"/></modifier></type><name pos:line="445" pos:column="58">list<pos:position pos:line="445" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="445" pos:column="63"/></parameter_list>
<block pos:line="446" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="447" pos:column="9">struct<pos:position pos:line="447" pos:column="15"/></name> <name pos:line="447" pos:column="16">commit_list<pos:position pos:line="447" pos:column="27"/></name></name> <modifier pos:line="447" pos:column="28">*<pos:position pos:line="447" pos:column="29"/></modifier></type><name pos:line="447" pos:column="29">head<pos:position pos:line="447" pos:column="33"/></name> <init pos:line="447" pos:column="34">= <expr><name pos:line="447" pos:column="36">NULL<pos:position pos:line="447" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="447" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="448" pos:column="9">struct<pos:position pos:line="448" pos:column="15"/></name> <name pos:line="448" pos:column="16">commit_list<pos:position pos:line="448" pos:column="27"/></name></name> <modifier pos:line="448" pos:column="28">*<pos:position pos:line="448" pos:column="29"/></modifier><modifier pos:line="448" pos:column="29">*<pos:position pos:line="448" pos:column="30"/></modifier></type><name pos:line="448" pos:column="30">pp<pos:position pos:line="448" pos:column="32"/></name> <init pos:line="448" pos:column="33">= <expr><operator pos:line="448" pos:column="35">&amp;<pos:position pos:line="448" pos:column="40"/></operator><name pos:line="448" pos:column="36">head<pos:position pos:line="448" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="448" pos:column="41"/></decl_stmt>
	<while pos:line="449" pos:column="9">while <condition pos:line="449" pos:column="15">(<expr><name pos:line="449" pos:column="16">list<pos:position pos:line="449" pos:column="20"/></name></expr>)<pos:position pos:line="449" pos:column="21"/></condition> <block pos:line="449" pos:column="22">{
		<expr_stmt><expr><name pos:line="450" pos:column="17">pp<pos:position pos:line="450" pos:column="19"/></name> <operator pos:line="450" pos:column="20">=<pos:position pos:line="450" pos:column="21"/></operator> <call><name pos:line="450" pos:column="22">commit_list_append<pos:position pos:line="450" pos:column="40"/></name><argument_list pos:line="450" pos:column="40">(<argument><expr><name><name pos:line="450" pos:column="41">list<pos:position pos:line="450" pos:column="45"/></name><operator pos:line="450" pos:column="45">-&gt;<pos:position pos:line="450" pos:column="50"/></operator><name pos:line="450" pos:column="47">item<pos:position pos:line="450" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="450" pos:column="53">pp<pos:position pos:line="450" pos:column="55"/></name></expr></argument>)<pos:position pos:line="450" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="451" pos:column="17">list<pos:position pos:line="451" pos:column="21"/></name> <operator pos:line="451" pos:column="22">=<pos:position pos:line="451" pos:column="23"/></operator> <name><name pos:line="451" pos:column="24">list<pos:position pos:line="451" pos:column="28"/></name><operator pos:line="451" pos:column="28">-&gt;<pos:position pos:line="451" pos:column="33"/></operator><name pos:line="451" pos:column="30">next<pos:position pos:line="451" pos:column="34"/></name></name></expr>;<pos:position pos:line="451" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="452" pos:column="10"/></block></while>
	<return pos:line="453" pos:column="9">return <expr><name pos:line="453" pos:column="16">head<pos:position pos:line="453" pos:column="20"/></name></expr>;<pos:position pos:line="453" pos:column="21"/></return>
}<pos:position pos:line="454" pos:column="2"/></block></function>

<function><type><name pos:line="456" pos:column="1">void<pos:position pos:line="456" pos:column="5"/></name></type> <name pos:line="456" pos:column="6">free_commit_list<pos:position pos:line="456" pos:column="22"/></name><parameter_list pos:line="456" pos:column="22">(<parameter><decl><type><name><name pos:line="456" pos:column="23">struct<pos:position pos:line="456" pos:column="29"/></name> <name pos:line="456" pos:column="30">commit_list<pos:position pos:line="456" pos:column="41"/></name></name> <modifier pos:line="456" pos:column="42">*<pos:position pos:line="456" pos:column="43"/></modifier></type><name pos:line="456" pos:column="43">list<pos:position pos:line="456" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="456" pos:column="48"/></parameter_list>
<block pos:line="457" pos:column="1">{
	<while pos:line="458" pos:column="9">while <condition pos:line="458" pos:column="15">(<expr><name pos:line="458" pos:column="16">list<pos:position pos:line="458" pos:column="20"/></name></expr>)<pos:position pos:line="458" pos:column="21"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="459" pos:column="17">pop_commit<pos:position pos:line="459" pos:column="27"/></name><argument_list pos:line="459" pos:column="27">(<argument><expr><operator pos:line="459" pos:column="28">&amp;<pos:position pos:line="459" pos:column="33"/></operator><name pos:line="459" pos:column="29">list<pos:position pos:line="459" pos:column="33"/></name></expr></argument>)<pos:position pos:line="459" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="459" pos:column="35"/></expr_stmt></block></while>
}<pos:position pos:line="460" pos:column="2"/></block></function>

<function><type><name><name pos:line="462" pos:column="1">struct<pos:position pos:line="462" pos:column="7"/></name> <name pos:line="462" pos:column="8">commit_list<pos:position pos:line="462" pos:column="19"/></name></name> <modifier pos:line="462" pos:column="20">*<pos:position pos:line="462" pos:column="21"/></modifier></type> <name pos:line="462" pos:column="22">commit_list_insert_by_date<pos:position pos:line="462" pos:column="48"/></name><parameter_list pos:line="462" pos:column="48">(<parameter><decl><type><name><name pos:line="462" pos:column="49">struct<pos:position pos:line="462" pos:column="55"/></name> <name pos:line="462" pos:column="56">commit<pos:position pos:line="462" pos:column="62"/></name></name> <modifier pos:line="462" pos:column="63">*<pos:position pos:line="462" pos:column="64"/></modifier></type><name pos:line="462" pos:column="64">item<pos:position pos:line="462" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="462" pos:column="70">struct<pos:position pos:line="462" pos:column="76"/></name> <name pos:line="462" pos:column="77">commit_list<pos:position pos:line="462" pos:column="88"/></name></name> <modifier pos:line="462" pos:column="89">*<pos:position pos:line="462" pos:column="90"/></modifier><modifier pos:line="462" pos:column="90">*<pos:position pos:line="462" pos:column="91"/></modifier></type><name pos:line="462" pos:column="91">list<pos:position pos:line="462" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="462" pos:column="96"/></parameter_list>
<block pos:line="463" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="464" pos:column="9">struct<pos:position pos:line="464" pos:column="15"/></name> <name pos:line="464" pos:column="16">commit_list<pos:position pos:line="464" pos:column="27"/></name></name> <modifier pos:line="464" pos:column="28">*<pos:position pos:line="464" pos:column="29"/></modifier><modifier pos:line="464" pos:column="29">*<pos:position pos:line="464" pos:column="30"/></modifier></type><name pos:line="464" pos:column="30">pp<pos:position pos:line="464" pos:column="32"/></name> <init pos:line="464" pos:column="33">= <expr><name pos:line="464" pos:column="35">list<pos:position pos:line="464" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="464" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="465" pos:column="9">struct<pos:position pos:line="465" pos:column="15"/></name> <name pos:line="465" pos:column="16">commit_list<pos:position pos:line="465" pos:column="27"/></name></name> <modifier pos:line="465" pos:column="28">*<pos:position pos:line="465" pos:column="29"/></modifier></type><name pos:line="465" pos:column="29">p<pos:position pos:line="465" pos:column="30"/></name></decl>;<pos:position pos:line="465" pos:column="31"/></decl_stmt>
	<while pos:line="466" pos:column="9">while <condition pos:line="466" pos:column="15">(<expr><operator pos:line="466" pos:column="16">(<pos:position pos:line="466" pos:column="17"/></operator><name pos:line="466" pos:column="17">p<pos:position pos:line="466" pos:column="18"/></name> <operator pos:line="466" pos:column="19">=<pos:position pos:line="466" pos:column="20"/></operator> <operator pos:line="466" pos:column="21">*<pos:position pos:line="466" pos:column="22"/></operator><name pos:line="466" pos:column="22">pp<pos:position pos:line="466" pos:column="24"/></name><operator pos:line="466" pos:column="24">)<pos:position pos:line="466" pos:column="25"/></operator> <operator pos:line="466" pos:column="26">!=<pos:position pos:line="466" pos:column="28"/></operator> <name pos:line="466" pos:column="29">NULL<pos:position pos:line="466" pos:column="33"/></name></expr>)<pos:position pos:line="466" pos:column="34"/></condition> <block pos:line="466" pos:column="35">{
		<if pos:line="467" pos:column="17">if <condition pos:line="467" pos:column="20">(<expr><name><name pos:line="467" pos:column="21">p<pos:position pos:line="467" pos:column="22"/></name><operator pos:line="467" pos:column="22">-&gt;<pos:position pos:line="467" pos:column="27"/></operator><name pos:line="467" pos:column="24">item<pos:position pos:line="467" pos:column="28"/></name><operator pos:line="467" pos:column="28">-&gt;<pos:position pos:line="467" pos:column="33"/></operator><name pos:line="467" pos:column="30">date<pos:position pos:line="467" pos:column="34"/></name></name> <operator pos:line="467" pos:column="35">&lt;<pos:position pos:line="467" pos:column="39"/></operator> <name><name pos:line="467" pos:column="37">item<pos:position pos:line="467" pos:column="41"/></name><operator pos:line="467" pos:column="41">-&gt;<pos:position pos:line="467" pos:column="46"/></operator><name pos:line="467" pos:column="43">date<pos:position pos:line="467" pos:column="47"/></name></name></expr>)<pos:position pos:line="467" pos:column="48"/></condition><then pos:line="467" pos:column="48"> <block pos:line="467" pos:column="49">{
			<break pos:line="468" pos:column="25">break;<pos:position pos:line="468" pos:column="31"/></break>
		}<pos:position pos:line="469" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="470" pos:column="17">pp<pos:position pos:line="470" pos:column="19"/></name> <operator pos:line="470" pos:column="20">=<pos:position pos:line="470" pos:column="21"/></operator> <operator pos:line="470" pos:column="22">&amp;<pos:position pos:line="470" pos:column="27"/></operator><name><name pos:line="470" pos:column="23">p<pos:position pos:line="470" pos:column="24"/></name><operator pos:line="470" pos:column="24">-&gt;<pos:position pos:line="470" pos:column="29"/></operator><name pos:line="470" pos:column="26">next<pos:position pos:line="470" pos:column="30"/></name></name></expr>;<pos:position pos:line="470" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="471" pos:column="10"/></block></while>
	<return pos:line="472" pos:column="9">return <expr><call><name pos:line="472" pos:column="16">commit_list_insert<pos:position pos:line="472" pos:column="34"/></name><argument_list pos:line="472" pos:column="34">(<argument><expr><name pos:line="472" pos:column="35">item<pos:position pos:line="472" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="472" pos:column="41">pp<pos:position pos:line="472" pos:column="43"/></name></expr></argument>)<pos:position pos:line="472" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="472" pos:column="45"/></return>
}<pos:position pos:line="473" pos:column="2"/></block></function>

<function><specifier pos:line="475" pos:column="1">static<pos:position pos:line="475" pos:column="7"/></specifier> <type><name pos:line="475" pos:column="8">int<pos:position pos:line="475" pos:column="11"/></name></type> <name pos:line="475" pos:column="12">commit_list_compare_by_date<pos:position pos:line="475" pos:column="39"/></name><parameter_list pos:line="475" pos:column="39">(<parameter><decl><type><specifier pos:line="475" pos:column="40">const<pos:position pos:line="475" pos:column="45"/></specifier> <name pos:line="475" pos:column="46">void<pos:position pos:line="475" pos:column="50"/></name> <modifier pos:line="475" pos:column="51">*<pos:position pos:line="475" pos:column="52"/></modifier></type><name pos:line="475" pos:column="52">a<pos:position pos:line="475" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="475" pos:column="55">const<pos:position pos:line="475" pos:column="60"/></specifier> <name pos:line="475" pos:column="61">void<pos:position pos:line="475" pos:column="65"/></name> <modifier pos:line="475" pos:column="66">*<pos:position pos:line="475" pos:column="67"/></modifier></type><name pos:line="475" pos:column="67">b<pos:position pos:line="475" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="475" pos:column="69"/></parameter_list>
<block pos:line="476" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="477" pos:column="9">unsigned<pos:position pos:line="477" pos:column="17"/></name> <name pos:line="477" pos:column="18">long<pos:position pos:line="477" pos:column="22"/></name></type> <name pos:line="477" pos:column="23">a_date<pos:position pos:line="477" pos:column="29"/></name> <init pos:line="477" pos:column="30">= <expr><operator pos:line="477" pos:column="32">(<pos:position pos:line="477" pos:column="33"/></operator><operator pos:line="477" pos:column="33">(<pos:position pos:line="477" pos:column="34"/></operator><specifier pos:line="477" pos:column="34">const<pos:position pos:line="477" pos:column="39"/></specifier> struct <name pos:line="477" pos:column="47">commit_list<pos:position pos:line="477" pos:column="58"/></name> <operator pos:line="477" pos:column="59">*<pos:position pos:line="477" pos:column="60"/></operator><operator pos:line="477" pos:column="60">)<pos:position pos:line="477" pos:column="61"/></operator><name pos:line="477" pos:column="61">a<pos:position pos:line="477" pos:column="62"/></name><operator pos:line="477" pos:column="62">)<pos:position pos:line="477" pos:column="63"/></operator><operator pos:line="477" pos:column="63">-&gt;<pos:position pos:line="477" pos:column="68"/></operator><name><name pos:line="477" pos:column="65">item<pos:position pos:line="477" pos:column="69"/></name><operator pos:line="477" pos:column="69">-&gt;<pos:position pos:line="477" pos:column="74"/></operator><name pos:line="477" pos:column="71">date<pos:position pos:line="477" pos:column="75"/></name></name></expr></init></decl>;<pos:position pos:line="477" pos:column="76"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="478" pos:column="9">unsigned<pos:position pos:line="478" pos:column="17"/></name> <name pos:line="478" pos:column="18">long<pos:position pos:line="478" pos:column="22"/></name></type> <name pos:line="478" pos:column="23">b_date<pos:position pos:line="478" pos:column="29"/></name> <init pos:line="478" pos:column="30">= <expr><operator pos:line="478" pos:column="32">(<pos:position pos:line="478" pos:column="33"/></operator><operator pos:line="478" pos:column="33">(<pos:position pos:line="478" pos:column="34"/></operator><specifier pos:line="478" pos:column="34">const<pos:position pos:line="478" pos:column="39"/></specifier> struct <name pos:line="478" pos:column="47">commit_list<pos:position pos:line="478" pos:column="58"/></name> <operator pos:line="478" pos:column="59">*<pos:position pos:line="478" pos:column="60"/></operator><operator pos:line="478" pos:column="60">)<pos:position pos:line="478" pos:column="61"/></operator><name pos:line="478" pos:column="61">b<pos:position pos:line="478" pos:column="62"/></name><operator pos:line="478" pos:column="62">)<pos:position pos:line="478" pos:column="63"/></operator><operator pos:line="478" pos:column="63">-&gt;<pos:position pos:line="478" pos:column="68"/></operator><name><name pos:line="478" pos:column="65">item<pos:position pos:line="478" pos:column="69"/></name><operator pos:line="478" pos:column="69">-&gt;<pos:position pos:line="478" pos:column="74"/></operator><name pos:line="478" pos:column="71">date<pos:position pos:line="478" pos:column="75"/></name></name></expr></init></decl>;<pos:position pos:line="478" pos:column="76"/></decl_stmt>
	<if pos:line="479" pos:column="9">if <condition pos:line="479" pos:column="12">(<expr><name pos:line="479" pos:column="13">a_date<pos:position pos:line="479" pos:column="19"/></name> <operator pos:line="479" pos:column="20">&lt;<pos:position pos:line="479" pos:column="24"/></operator> <name pos:line="479" pos:column="22">b_date<pos:position pos:line="479" pos:column="28"/></name></expr>)<pos:position pos:line="479" pos:column="29"/></condition><then pos:line="479" pos:column="29">
		<block type="pseudo"><return pos:line="480" pos:column="17">return <expr><literal type="number" pos:line="480" pos:column="24">1<pos:position pos:line="480" pos:column="25"/></literal></expr>;<pos:position pos:line="480" pos:column="26"/></return></block></then></if>
	<if pos:line="481" pos:column="9">if <condition pos:line="481" pos:column="12">(<expr><name pos:line="481" pos:column="13">a_date<pos:position pos:line="481" pos:column="19"/></name> <operator pos:line="481" pos:column="20">&gt;<pos:position pos:line="481" pos:column="24"/></operator> <name pos:line="481" pos:column="22">b_date<pos:position pos:line="481" pos:column="28"/></name></expr>)<pos:position pos:line="481" pos:column="29"/></condition><then pos:line="481" pos:column="29">
		<block type="pseudo"><return pos:line="482" pos:column="17">return <expr><operator pos:line="482" pos:column="24">-<pos:position pos:line="482" pos:column="25"/></operator><literal type="number" pos:line="482" pos:column="25">1<pos:position pos:line="482" pos:column="26"/></literal></expr>;<pos:position pos:line="482" pos:column="27"/></return></block></then></if>
	<return pos:line="483" pos:column="9">return <expr><literal type="number" pos:line="483" pos:column="16">0<pos:position pos:line="483" pos:column="17"/></literal></expr>;<pos:position pos:line="483" pos:column="18"/></return>
}<pos:position pos:line="484" pos:column="2"/></block></function>

<function><specifier pos:line="486" pos:column="1">static<pos:position pos:line="486" pos:column="7"/></specifier> <type><name pos:line="486" pos:column="8">void<pos:position pos:line="486" pos:column="12"/></name> <modifier pos:line="486" pos:column="13">*<pos:position pos:line="486" pos:column="14"/></modifier></type><name pos:line="486" pos:column="14">commit_list_get_next<pos:position pos:line="486" pos:column="34"/></name><parameter_list pos:line="486" pos:column="34">(<parameter><decl><type><specifier pos:line="486" pos:column="35">const<pos:position pos:line="486" pos:column="40"/></specifier> <name pos:line="486" pos:column="41">void<pos:position pos:line="486" pos:column="45"/></name> <modifier pos:line="486" pos:column="46">*<pos:position pos:line="486" pos:column="47"/></modifier></type><name pos:line="486" pos:column="47">a<pos:position pos:line="486" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="486" pos:column="49"/></parameter_list>
<block pos:line="487" pos:column="1">{
	<return pos:line="488" pos:column="9">return <expr><operator pos:line="488" pos:column="16">(<pos:position pos:line="488" pos:column="17"/></operator><operator pos:line="488" pos:column="17">(<pos:position pos:line="488" pos:column="18"/></operator><specifier pos:line="488" pos:column="18">const<pos:position pos:line="488" pos:column="23"/></specifier> struct <name pos:line="488" pos:column="31">commit_list<pos:position pos:line="488" pos:column="42"/></name> <operator pos:line="488" pos:column="43">*<pos:position pos:line="488" pos:column="44"/></operator><operator pos:line="488" pos:column="44">)<pos:position pos:line="488" pos:column="45"/></operator><name pos:line="488" pos:column="45">a<pos:position pos:line="488" pos:column="46"/></name><operator pos:line="488" pos:column="46">)<pos:position pos:line="488" pos:column="47"/></operator><operator pos:line="488" pos:column="47">-&gt;<pos:position pos:line="488" pos:column="52"/></operator><name pos:line="488" pos:column="49">next<pos:position pos:line="488" pos:column="53"/></name></expr>;<pos:position pos:line="488" pos:column="54"/></return>
}<pos:position pos:line="489" pos:column="2"/></block></function>

<function><specifier pos:line="491" pos:column="1">static<pos:position pos:line="491" pos:column="7"/></specifier> <type><name pos:line="491" pos:column="8">void<pos:position pos:line="491" pos:column="12"/></name></type> <name pos:line="491" pos:column="13">commit_list_set_next<pos:position pos:line="491" pos:column="33"/></name><parameter_list pos:line="491" pos:column="33">(<parameter><decl><type><name pos:line="491" pos:column="34">void<pos:position pos:line="491" pos:column="38"/></name> <modifier pos:line="491" pos:column="39">*<pos:position pos:line="491" pos:column="40"/></modifier></type><name pos:line="491" pos:column="40">a<pos:position pos:line="491" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="491" pos:column="43">void<pos:position pos:line="491" pos:column="47"/></name> <modifier pos:line="491" pos:column="48">*<pos:position pos:line="491" pos:column="49"/></modifier></type><name pos:line="491" pos:column="49">next<pos:position pos:line="491" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="491" pos:column="54"/></parameter_list>
<block pos:line="492" pos:column="1">{
	<expr_stmt><expr><operator pos:line="493" pos:column="9">(<pos:position pos:line="493" pos:column="10"/></operator><operator pos:line="493" pos:column="10">(<pos:position pos:line="493" pos:column="11"/></operator>struct <name pos:line="493" pos:column="18">commit_list<pos:position pos:line="493" pos:column="29"/></name> <operator pos:line="493" pos:column="30">*<pos:position pos:line="493" pos:column="31"/></operator><operator pos:line="493" pos:column="31">)<pos:position pos:line="493" pos:column="32"/></operator><name pos:line="493" pos:column="32">a<pos:position pos:line="493" pos:column="33"/></name><operator pos:line="493" pos:column="33">)<pos:position pos:line="493" pos:column="34"/></operator><operator pos:line="493" pos:column="34">-&gt;<pos:position pos:line="493" pos:column="39"/></operator><name pos:line="493" pos:column="36">next<pos:position pos:line="493" pos:column="40"/></name> <operator pos:line="493" pos:column="41">=<pos:position pos:line="493" pos:column="42"/></operator> <name pos:line="493" pos:column="43">next<pos:position pos:line="493" pos:column="47"/></name></expr>;<pos:position pos:line="493" pos:column="48"/></expr_stmt>
}<pos:position pos:line="494" pos:column="2"/></block></function>

<function><type><name pos:line="496" pos:column="1">void<pos:position pos:line="496" pos:column="5"/></name></type> <name pos:line="496" pos:column="6">commit_list_sort_by_date<pos:position pos:line="496" pos:column="30"/></name><parameter_list pos:line="496" pos:column="30">(<parameter><decl><type><name><name pos:line="496" pos:column="31">struct<pos:position pos:line="496" pos:column="37"/></name> <name pos:line="496" pos:column="38">commit_list<pos:position pos:line="496" pos:column="49"/></name></name> <modifier pos:line="496" pos:column="50">*<pos:position pos:line="496" pos:column="51"/></modifier><modifier pos:line="496" pos:column="51">*<pos:position pos:line="496" pos:column="52"/></modifier></type><name pos:line="496" pos:column="52">list<pos:position pos:line="496" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="496" pos:column="57"/></parameter_list>
<block pos:line="497" pos:column="1">{
	<expr_stmt><expr><operator pos:line="498" pos:column="9">*<pos:position pos:line="498" pos:column="10"/></operator><name pos:line="498" pos:column="10">list<pos:position pos:line="498" pos:column="14"/></name> <operator pos:line="498" pos:column="15">=<pos:position pos:line="498" pos:column="16"/></operator> <call><name pos:line="498" pos:column="17">llist_mergesort<pos:position pos:line="498" pos:column="32"/></name><argument_list pos:line="498" pos:column="32">(<argument><expr><operator pos:line="498" pos:column="33">*<pos:position pos:line="498" pos:column="34"/></operator><name pos:line="498" pos:column="34">list<pos:position pos:line="498" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="498" pos:column="40">commit_list_get_next<pos:position pos:line="498" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="498" pos:column="62">commit_list_set_next<pos:position pos:line="498" pos:column="82"/></name></expr></argument>,
				<argument><expr><name pos:line="499" pos:column="33">commit_list_compare_by_date<pos:position pos:line="499" pos:column="60"/></name></expr></argument>)<pos:position pos:line="499" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="499" pos:column="62"/></expr_stmt>
}<pos:position pos:line="500" pos:column="2"/></block></function>

<function><type><name><name pos:line="502" pos:column="1">struct<pos:position pos:line="502" pos:column="7"/></name> <name pos:line="502" pos:column="8">commit<pos:position pos:line="502" pos:column="14"/></name></name> <modifier pos:line="502" pos:column="15">*<pos:position pos:line="502" pos:column="16"/></modifier></type><name pos:line="502" pos:column="16">pop_most_recent_commit<pos:position pos:line="502" pos:column="38"/></name><parameter_list pos:line="502" pos:column="38">(<parameter><decl><type><name><name pos:line="502" pos:column="39">struct<pos:position pos:line="502" pos:column="45"/></name> <name pos:line="502" pos:column="46">commit_list<pos:position pos:line="502" pos:column="57"/></name></name> <modifier pos:line="502" pos:column="58">*<pos:position pos:line="502" pos:column="59"/></modifier><modifier pos:line="502" pos:column="59">*<pos:position pos:line="502" pos:column="60"/></modifier></type><name pos:line="502" pos:column="60">list<pos:position pos:line="502" pos:column="64"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="503" pos:column="39">unsigned<pos:position pos:line="503" pos:column="47"/></name> <name pos:line="503" pos:column="48">int<pos:position pos:line="503" pos:column="51"/></name></type> <name pos:line="503" pos:column="52">mark<pos:position pos:line="503" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="503" pos:column="57"/></parameter_list>
<block pos:line="504" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="505" pos:column="9">struct<pos:position pos:line="505" pos:column="15"/></name> <name pos:line="505" pos:column="16">commit<pos:position pos:line="505" pos:column="22"/></name></name> <modifier pos:line="505" pos:column="23">*<pos:position pos:line="505" pos:column="24"/></modifier></type><name pos:line="505" pos:column="24">ret<pos:position pos:line="505" pos:column="27"/></name> <init pos:line="505" pos:column="28">= <expr><call><name pos:line="505" pos:column="30">pop_commit<pos:position pos:line="505" pos:column="40"/></name><argument_list pos:line="505" pos:column="40">(<argument><expr><name pos:line="505" pos:column="41">list<pos:position pos:line="505" pos:column="45"/></name></expr></argument>)<pos:position pos:line="505" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="505" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="506" pos:column="9">struct<pos:position pos:line="506" pos:column="15"/></name> <name pos:line="506" pos:column="16">commit_list<pos:position pos:line="506" pos:column="27"/></name></name> <modifier pos:line="506" pos:column="28">*<pos:position pos:line="506" pos:column="29"/></modifier></type><name pos:line="506" pos:column="29">parents<pos:position pos:line="506" pos:column="36"/></name> <init pos:line="506" pos:column="37">= <expr><name><name pos:line="506" pos:column="39">ret<pos:position pos:line="506" pos:column="42"/></name><operator pos:line="506" pos:column="42">-&gt;<pos:position pos:line="506" pos:column="47"/></operator><name pos:line="506" pos:column="44">parents<pos:position pos:line="506" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="506" pos:column="52"/></decl_stmt>

	<while pos:line="508" pos:column="9">while <condition pos:line="508" pos:column="15">(<expr><name pos:line="508" pos:column="16">parents<pos:position pos:line="508" pos:column="23"/></name></expr>)<pos:position pos:line="508" pos:column="24"/></condition> <block pos:line="508" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="509" pos:column="17">struct<pos:position pos:line="509" pos:column="23"/></name> <name pos:line="509" pos:column="24">commit<pos:position pos:line="509" pos:column="30"/></name></name> <modifier pos:line="509" pos:column="31">*<pos:position pos:line="509" pos:column="32"/></modifier></type><name pos:line="509" pos:column="32">commit<pos:position pos:line="509" pos:column="38"/></name> <init pos:line="509" pos:column="39">= <expr><name><name pos:line="509" pos:column="41">parents<pos:position pos:line="509" pos:column="48"/></name><operator pos:line="509" pos:column="48">-&gt;<pos:position pos:line="509" pos:column="53"/></operator><name pos:line="509" pos:column="50">item<pos:position pos:line="509" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="509" pos:column="55"/></decl_stmt>
		<if pos:line="510" pos:column="17">if <condition pos:line="510" pos:column="20">(<expr><operator pos:line="510" pos:column="21">!<pos:position pos:line="510" pos:column="22"/></operator><call><name pos:line="510" pos:column="22">parse_commit<pos:position pos:line="510" pos:column="34"/></name><argument_list pos:line="510" pos:column="34">(<argument><expr><name pos:line="510" pos:column="35">commit<pos:position pos:line="510" pos:column="41"/></name></expr></argument>)<pos:position pos:line="510" pos:column="42"/></argument_list></call> <operator pos:line="510" pos:column="43">&amp;&amp;<pos:position pos:line="510" pos:column="53"/></operator> <operator pos:line="510" pos:column="46">!<pos:position pos:line="510" pos:column="47"/></operator><operator pos:line="510" pos:column="47">(<pos:position pos:line="510" pos:column="48"/></operator><name><name pos:line="510" pos:column="48">commit<pos:position pos:line="510" pos:column="54"/></name><operator pos:line="510" pos:column="54">-&gt;<pos:position pos:line="510" pos:column="59"/></operator><name pos:line="510" pos:column="56">object<pos:position pos:line="510" pos:column="62"/></name><operator pos:line="510" pos:column="62">.<pos:position pos:line="510" pos:column="63"/></operator><name pos:line="510" pos:column="63">flags<pos:position pos:line="510" pos:column="68"/></name></name> <operator pos:line="510" pos:column="69">&amp;<pos:position pos:line="510" pos:column="74"/></operator> <name pos:line="510" pos:column="71">mark<pos:position pos:line="510" pos:column="75"/></name><operator pos:line="510" pos:column="75">)<pos:position pos:line="510" pos:column="76"/></operator></expr>)<pos:position pos:line="510" pos:column="77"/></condition><then pos:line="510" pos:column="77"> <block pos:line="510" pos:column="78">{
			<expr_stmt><expr><name><name pos:line="511" pos:column="25">commit<pos:position pos:line="511" pos:column="31"/></name><operator pos:line="511" pos:column="31">-&gt;<pos:position pos:line="511" pos:column="36"/></operator><name pos:line="511" pos:column="33">object<pos:position pos:line="511" pos:column="39"/></name><operator pos:line="511" pos:column="39">.<pos:position pos:line="511" pos:column="40"/></operator><name pos:line="511" pos:column="40">flags<pos:position pos:line="511" pos:column="45"/></name></name> <operator pos:line="511" pos:column="46">|=<pos:position pos:line="511" pos:column="48"/></operator> <name pos:line="511" pos:column="49">mark<pos:position pos:line="511" pos:column="53"/></name></expr>;<pos:position pos:line="511" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="512" pos:column="25">commit_list_insert_by_date<pos:position pos:line="512" pos:column="51"/></name><argument_list pos:line="512" pos:column="51">(<argument><expr><name pos:line="512" pos:column="52">commit<pos:position pos:line="512" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="512" pos:column="60">list<pos:position pos:line="512" pos:column="64"/></name></expr></argument>)<pos:position pos:line="512" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="512" pos:column="66"/></expr_stmt>
		}<pos:position pos:line="513" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="514" pos:column="17">parents<pos:position pos:line="514" pos:column="24"/></name> <operator pos:line="514" pos:column="25">=<pos:position pos:line="514" pos:column="26"/></operator> <name><name pos:line="514" pos:column="27">parents<pos:position pos:line="514" pos:column="34"/></name><operator pos:line="514" pos:column="34">-&gt;<pos:position pos:line="514" pos:column="39"/></operator><name pos:line="514" pos:column="36">next<pos:position pos:line="514" pos:column="40"/></name></name></expr>;<pos:position pos:line="514" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="515" pos:column="10"/></block></while>
	<return pos:line="516" pos:column="9">return <expr><name pos:line="516" pos:column="16">ret<pos:position pos:line="516" pos:column="19"/></name></expr>;<pos:position pos:line="516" pos:column="20"/></return>
}<pos:position pos:line="517" pos:column="2"/></block></function>

<function><specifier pos:line="519" pos:column="1">static<pos:position pos:line="519" pos:column="7"/></specifier> <type><name pos:line="519" pos:column="8">void<pos:position pos:line="519" pos:column="12"/></name></type> <name pos:line="519" pos:column="13">clear_commit_marks_1<pos:position pos:line="519" pos:column="33"/></name><parameter_list pos:line="519" pos:column="33">(<parameter><decl><type><name><name pos:line="519" pos:column="34">struct<pos:position pos:line="519" pos:column="40"/></name> <name pos:line="519" pos:column="41">commit_list<pos:position pos:line="519" pos:column="52"/></name></name> <modifier pos:line="519" pos:column="53">*<pos:position pos:line="519" pos:column="54"/></modifier><modifier pos:line="519" pos:column="54">*<pos:position pos:line="519" pos:column="55"/></modifier></type><name pos:line="519" pos:column="55">plist<pos:position pos:line="519" pos:column="60"/></name></decl></parameter>,
				 <parameter><decl><type><name><name pos:line="520" pos:column="34">struct<pos:position pos:line="520" pos:column="40"/></name> <name pos:line="520" pos:column="41">commit<pos:position pos:line="520" pos:column="47"/></name></name> <modifier pos:line="520" pos:column="48">*<pos:position pos:line="520" pos:column="49"/></modifier></type><name pos:line="520" pos:column="49">commit<pos:position pos:line="520" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="520" pos:column="57">unsigned<pos:position pos:line="520" pos:column="65"/></name> <name pos:line="520" pos:column="66">int<pos:position pos:line="520" pos:column="69"/></name></type> <name pos:line="520" pos:column="70">mark<pos:position pos:line="520" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="520" pos:column="75"/></parameter_list>
<block pos:line="521" pos:column="1">{
	<while pos:line="522" pos:column="9">while <condition pos:line="522" pos:column="15">(<expr><name pos:line="522" pos:column="16">commit<pos:position pos:line="522" pos:column="22"/></name></expr>)<pos:position pos:line="522" pos:column="23"/></condition> <block pos:line="522" pos:column="24">{
		<decl_stmt><decl><type><name><name pos:line="523" pos:column="17">struct<pos:position pos:line="523" pos:column="23"/></name> <name pos:line="523" pos:column="24">commit_list<pos:position pos:line="523" pos:column="35"/></name></name> <modifier pos:line="523" pos:column="36">*<pos:position pos:line="523" pos:column="37"/></modifier></type><name pos:line="523" pos:column="37">parents<pos:position pos:line="523" pos:column="44"/></name></decl>;<pos:position pos:line="523" pos:column="45"/></decl_stmt>

		<if pos:line="525" pos:column="17">if <condition pos:line="525" pos:column="20">(<expr><operator pos:line="525" pos:column="21">!<pos:position pos:line="525" pos:column="22"/></operator><operator pos:line="525" pos:column="22">(<pos:position pos:line="525" pos:column="23"/></operator><name pos:line="525" pos:column="23">mark<pos:position pos:line="525" pos:column="27"/></name> <operator pos:line="525" pos:column="28">&amp;<pos:position pos:line="525" pos:column="33"/></operator> <name><name pos:line="525" pos:column="30">commit<pos:position pos:line="525" pos:column="36"/></name><operator pos:line="525" pos:column="36">-&gt;<pos:position pos:line="525" pos:column="41"/></operator><name pos:line="525" pos:column="38">object<pos:position pos:line="525" pos:column="44"/></name><operator pos:line="525" pos:column="44">.<pos:position pos:line="525" pos:column="45"/></operator><name pos:line="525" pos:column="45">flags<pos:position pos:line="525" pos:column="50"/></name></name><operator pos:line="525" pos:column="50">)<pos:position pos:line="525" pos:column="51"/></operator></expr>)<pos:position pos:line="525" pos:column="52"/></condition><then pos:line="525" pos:column="52">
			<block type="pseudo"><return pos:line="526" pos:column="25">return;<pos:position pos:line="526" pos:column="32"/></return></block></then></if>

		<expr_stmt><expr><name><name pos:line="528" pos:column="17">commit<pos:position pos:line="528" pos:column="23"/></name><operator pos:line="528" pos:column="23">-&gt;<pos:position pos:line="528" pos:column="28"/></operator><name pos:line="528" pos:column="25">object<pos:position pos:line="528" pos:column="31"/></name><operator pos:line="528" pos:column="31">.<pos:position pos:line="528" pos:column="32"/></operator><name pos:line="528" pos:column="32">flags<pos:position pos:line="528" pos:column="37"/></name></name> <operator pos:line="528" pos:column="38">&amp;=<pos:position pos:line="528" pos:column="44"/></operator> <operator pos:line="528" pos:column="41">~<pos:position pos:line="528" pos:column="42"/></operator><name pos:line="528" pos:column="42">mark<pos:position pos:line="528" pos:column="46"/></name></expr>;<pos:position pos:line="528" pos:column="47"/></expr_stmt>

		<expr_stmt><expr><name pos:line="530" pos:column="17">parents<pos:position pos:line="530" pos:column="24"/></name> <operator pos:line="530" pos:column="25">=<pos:position pos:line="530" pos:column="26"/></operator> <name><name pos:line="530" pos:column="27">commit<pos:position pos:line="530" pos:column="33"/></name><operator pos:line="530" pos:column="33">-&gt;<pos:position pos:line="530" pos:column="38"/></operator><name pos:line="530" pos:column="35">parents<pos:position pos:line="530" pos:column="42"/></name></name></expr>;<pos:position pos:line="530" pos:column="43"/></expr_stmt>
		<if pos:line="531" pos:column="17">if <condition pos:line="531" pos:column="20">(<expr><operator pos:line="531" pos:column="21">!<pos:position pos:line="531" pos:column="22"/></operator><name pos:line="531" pos:column="22">parents<pos:position pos:line="531" pos:column="29"/></name></expr>)<pos:position pos:line="531" pos:column="30"/></condition><then pos:line="531" pos:column="30">
			<block type="pseudo"><return pos:line="532" pos:column="25">return;<pos:position pos:line="532" pos:column="32"/></return></block></then></if>

		<while pos:line="534" pos:column="17">while <condition pos:line="534" pos:column="23">(<expr><operator pos:line="534" pos:column="24">(<pos:position pos:line="534" pos:column="25"/></operator><name pos:line="534" pos:column="25">parents<pos:position pos:line="534" pos:column="32"/></name> <operator pos:line="534" pos:column="33">=<pos:position pos:line="534" pos:column="34"/></operator> <name><name pos:line="534" pos:column="35">parents<pos:position pos:line="534" pos:column="42"/></name><operator pos:line="534" pos:column="42">-&gt;<pos:position pos:line="534" pos:column="47"/></operator><name pos:line="534" pos:column="44">next<pos:position pos:line="534" pos:column="48"/></name></name><operator pos:line="534" pos:column="48">)<pos:position pos:line="534" pos:column="49"/></operator></expr>)<pos:position pos:line="534" pos:column="50"/></condition>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="535" pos:column="25">commit_list_insert<pos:position pos:line="535" pos:column="43"/></name><argument_list pos:line="535" pos:column="43">(<argument><expr><name><name pos:line="535" pos:column="44">parents<pos:position pos:line="535" pos:column="51"/></name><operator pos:line="535" pos:column="51">-&gt;<pos:position pos:line="535" pos:column="56"/></operator><name pos:line="535" pos:column="53">item<pos:position pos:line="535" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="535" pos:column="59">plist<pos:position pos:line="535" pos:column="64"/></name></expr></argument>)<pos:position pos:line="535" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="535" pos:column="66"/></expr_stmt></block></while>

		<expr_stmt><expr><name pos:line="537" pos:column="17">commit<pos:position pos:line="537" pos:column="23"/></name> <operator pos:line="537" pos:column="24">=<pos:position pos:line="537" pos:column="25"/></operator> <name><name pos:line="537" pos:column="26">commit<pos:position pos:line="537" pos:column="32"/></name><operator pos:line="537" pos:column="32">-&gt;<pos:position pos:line="537" pos:column="37"/></operator><name pos:line="537" pos:column="34">parents<pos:position pos:line="537" pos:column="41"/></name><operator pos:line="537" pos:column="41">-&gt;<pos:position pos:line="537" pos:column="46"/></operator><name pos:line="537" pos:column="43">item<pos:position pos:line="537" pos:column="47"/></name></name></expr>;<pos:position pos:line="537" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="538" pos:column="10"/></block></while>
}<pos:position pos:line="539" pos:column="2"/></block></function>

<function><type><name pos:line="541" pos:column="1">void<pos:position pos:line="541" pos:column="5"/></name></type> <name pos:line="541" pos:column="6">clear_commit_marks_many<pos:position pos:line="541" pos:column="29"/></name><parameter_list pos:line="541" pos:column="29">(<parameter><decl><type><name pos:line="541" pos:column="30">int<pos:position pos:line="541" pos:column="33"/></name></type> <name pos:line="541" pos:column="34">nr<pos:position pos:line="541" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="541" pos:column="38">struct<pos:position pos:line="541" pos:column="44"/></name> <name pos:line="541" pos:column="45">commit<pos:position pos:line="541" pos:column="51"/></name></name> <modifier pos:line="541" pos:column="52">*<pos:position pos:line="541" pos:column="53"/></modifier><modifier pos:line="541" pos:column="53">*<pos:position pos:line="541" pos:column="54"/></modifier></type><name pos:line="541" pos:column="54">commit<pos:position pos:line="541" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="541" pos:column="62">unsigned<pos:position pos:line="541" pos:column="70"/></name> <name pos:line="541" pos:column="71">int<pos:position pos:line="541" pos:column="74"/></name></type> <name pos:line="541" pos:column="75">mark<pos:position pos:line="541" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="541" pos:column="80"/></parameter_list>
<block pos:line="542" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="543" pos:column="9">struct<pos:position pos:line="543" pos:column="15"/></name> <name pos:line="543" pos:column="16">commit_list<pos:position pos:line="543" pos:column="27"/></name></name> <modifier pos:line="543" pos:column="28">*<pos:position pos:line="543" pos:column="29"/></modifier></type><name pos:line="543" pos:column="29">list<pos:position pos:line="543" pos:column="33"/></name> <init pos:line="543" pos:column="34">= <expr><name pos:line="543" pos:column="36">NULL<pos:position pos:line="543" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="543" pos:column="41"/></decl_stmt>

	<while pos:line="545" pos:column="9">while <condition pos:line="545" pos:column="15">(<expr><name pos:line="545" pos:column="16">nr<pos:position pos:line="545" pos:column="18"/></name><operator pos:line="545" pos:column="18">--<pos:position pos:line="545" pos:column="20"/></operator></expr>)<pos:position pos:line="545" pos:column="21"/></condition> <block pos:line="545" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="546" pos:column="17">commit_list_insert<pos:position pos:line="546" pos:column="35"/></name><argument_list pos:line="546" pos:column="35">(<argument><expr><operator pos:line="546" pos:column="36">*<pos:position pos:line="546" pos:column="37"/></operator><name pos:line="546" pos:column="37">commit<pos:position pos:line="546" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="546" pos:column="45">&amp;<pos:position pos:line="546" pos:column="50"/></operator><name pos:line="546" pos:column="46">list<pos:position pos:line="546" pos:column="50"/></name></expr></argument>)<pos:position pos:line="546" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="546" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="547" pos:column="17">commit<pos:position pos:line="547" pos:column="23"/></name><operator pos:line="547" pos:column="23">++<pos:position pos:line="547" pos:column="25"/></operator></expr>;<pos:position pos:line="547" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="548" pos:column="10"/></block></while>
	<while pos:line="549" pos:column="9">while <condition pos:line="549" pos:column="15">(<expr><name pos:line="549" pos:column="16">list<pos:position pos:line="549" pos:column="20"/></name></expr>)<pos:position pos:line="549" pos:column="21"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="550" pos:column="17">clear_commit_marks_1<pos:position pos:line="550" pos:column="37"/></name><argument_list pos:line="550" pos:column="37">(<argument><expr><operator pos:line="550" pos:column="38">&amp;<pos:position pos:line="550" pos:column="43"/></operator><name pos:line="550" pos:column="39">list<pos:position pos:line="550" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="550" pos:column="45">pop_commit<pos:position pos:line="550" pos:column="55"/></name><argument_list pos:line="550" pos:column="55">(<argument><expr><operator pos:line="550" pos:column="56">&amp;<pos:position pos:line="550" pos:column="61"/></operator><name pos:line="550" pos:column="57">list<pos:position pos:line="550" pos:column="61"/></name></expr></argument>)<pos:position pos:line="550" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="550" pos:column="64">mark<pos:position pos:line="550" pos:column="68"/></name></expr></argument>)<pos:position pos:line="550" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="550" pos:column="70"/></expr_stmt></block></while>
}<pos:position pos:line="551" pos:column="2"/></block></function>

<function><type><name pos:line="553" pos:column="1">void<pos:position pos:line="553" pos:column="5"/></name></type> <name pos:line="553" pos:column="6">clear_commit_marks<pos:position pos:line="553" pos:column="24"/></name><parameter_list pos:line="553" pos:column="24">(<parameter><decl><type><name><name pos:line="553" pos:column="25">struct<pos:position pos:line="553" pos:column="31"/></name> <name pos:line="553" pos:column="32">commit<pos:position pos:line="553" pos:column="38"/></name></name> <modifier pos:line="553" pos:column="39">*<pos:position pos:line="553" pos:column="40"/></modifier></type><name pos:line="553" pos:column="40">commit<pos:position pos:line="553" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="553" pos:column="48">unsigned<pos:position pos:line="553" pos:column="56"/></name> <name pos:line="553" pos:column="57">int<pos:position pos:line="553" pos:column="60"/></name></type> <name pos:line="553" pos:column="61">mark<pos:position pos:line="553" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="553" pos:column="66"/></parameter_list>
<block pos:line="554" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="555" pos:column="9">clear_commit_marks_many<pos:position pos:line="555" pos:column="32"/></name><argument_list pos:line="555" pos:column="32">(<argument><expr><literal type="number" pos:line="555" pos:column="33">1<pos:position pos:line="555" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="555" pos:column="36">&amp;<pos:position pos:line="555" pos:column="41"/></operator><name pos:line="555" pos:column="37">commit<pos:position pos:line="555" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="555" pos:column="45">mark<pos:position pos:line="555" pos:column="49"/></name></expr></argument>)<pos:position pos:line="555" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="555" pos:column="51"/></expr_stmt>
}<pos:position pos:line="556" pos:column="2"/></block></function>

<function><type><name pos:line="558" pos:column="1">void<pos:position pos:line="558" pos:column="5"/></name></type> <name pos:line="558" pos:column="6">clear_commit_marks_for_object_array<pos:position pos:line="558" pos:column="41"/></name><parameter_list pos:line="558" pos:column="41">(<parameter><decl><type><name><name pos:line="558" pos:column="42">struct<pos:position pos:line="558" pos:column="48"/></name> <name pos:line="558" pos:column="49">object_array<pos:position pos:line="558" pos:column="61"/></name></name> <modifier pos:line="558" pos:column="62">*<pos:position pos:line="558" pos:column="63"/></modifier></type><name pos:line="558" pos:column="63">a<pos:position pos:line="558" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="558" pos:column="66">unsigned<pos:position pos:line="558" pos:column="74"/></name></type> <name pos:line="558" pos:column="75">mark<pos:position pos:line="558" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="558" pos:column="80"/></parameter_list>
<block pos:line="559" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="560" pos:column="9">struct<pos:position pos:line="560" pos:column="15"/></name> <name pos:line="560" pos:column="16">object<pos:position pos:line="560" pos:column="22"/></name></name> <modifier pos:line="560" pos:column="23">*<pos:position pos:line="560" pos:column="24"/></modifier></type><name pos:line="560" pos:column="24">object<pos:position pos:line="560" pos:column="30"/></name></decl>;<pos:position pos:line="560" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="561" pos:column="9">struct<pos:position pos:line="561" pos:column="15"/></name> <name pos:line="561" pos:column="16">commit<pos:position pos:line="561" pos:column="22"/></name></name> <modifier pos:line="561" pos:column="23">*<pos:position pos:line="561" pos:column="24"/></modifier></type><name pos:line="561" pos:column="24">commit<pos:position pos:line="561" pos:column="30"/></name></decl>;<pos:position pos:line="561" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="562" pos:column="9">unsigned<pos:position pos:line="562" pos:column="17"/></name> <name pos:line="562" pos:column="18">int<pos:position pos:line="562" pos:column="21"/></name></type> <name pos:line="562" pos:column="22">i<pos:position pos:line="562" pos:column="23"/></name></decl>;<pos:position pos:line="562" pos:column="24"/></decl_stmt>

	<for pos:line="564" pos:column="9">for <control pos:line="564" pos:column="13">(<init><expr><name pos:line="564" pos:column="14">i<pos:position pos:line="564" pos:column="15"/></name> <operator pos:line="564" pos:column="16">=<pos:position pos:line="564" pos:column="17"/></operator> <literal type="number" pos:line="564" pos:column="18">0<pos:position pos:line="564" pos:column="19"/></literal></expr>;<pos:position pos:line="564" pos:column="20"/></init> <condition><expr><name pos:line="564" pos:column="21">i<pos:position pos:line="564" pos:column="22"/></name> <operator pos:line="564" pos:column="23">&lt;<pos:position pos:line="564" pos:column="27"/></operator> <name><name pos:line="564" pos:column="25">a<pos:position pos:line="564" pos:column="26"/></name><operator pos:line="564" pos:column="26">-&gt;<pos:position pos:line="564" pos:column="31"/></operator><name pos:line="564" pos:column="28">nr<pos:position pos:line="564" pos:column="30"/></name></name></expr>;<pos:position pos:line="564" pos:column="31"/></condition> <incr><expr><name pos:line="564" pos:column="32">i<pos:position pos:line="564" pos:column="33"/></name><operator pos:line="564" pos:column="33">++<pos:position pos:line="564" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="564" pos:column="36"/></control> <block pos:line="564" pos:column="37">{
		<expr_stmt><expr><name pos:line="565" pos:column="17">object<pos:position pos:line="565" pos:column="23"/></name> <operator pos:line="565" pos:column="24">=<pos:position pos:line="565" pos:column="25"/></operator> <name><name pos:line="565" pos:column="26">a<pos:position pos:line="565" pos:column="27"/></name><operator pos:line="565" pos:column="27">-&gt;<pos:position pos:line="565" pos:column="32"/></operator><name pos:line="565" pos:column="29">objects<pos:position pos:line="565" pos:column="36"/></name><index pos:line="565" pos:column="36">[<expr><name pos:line="565" pos:column="37">i<pos:position pos:line="565" pos:column="38"/></name></expr>]<pos:position pos:line="565" pos:column="39"/></index></name><operator pos:line="565" pos:column="39">.<pos:position pos:line="565" pos:column="40"/></operator><name pos:line="565" pos:column="40">item<pos:position pos:line="565" pos:column="44"/></name></expr>;<pos:position pos:line="565" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="566" pos:column="17">commit<pos:position pos:line="566" pos:column="23"/></name> <operator pos:line="566" pos:column="24">=<pos:position pos:line="566" pos:column="25"/></operator> <call><name pos:line="566" pos:column="26">lookup_commit_reference_gently<pos:position pos:line="566" pos:column="56"/></name><argument_list pos:line="566" pos:column="56">(<argument><expr><name><name pos:line="566" pos:column="57">object<pos:position pos:line="566" pos:column="63"/></name><operator pos:line="566" pos:column="63">-&gt;<pos:position pos:line="566" pos:column="68"/></operator><name pos:line="566" pos:column="65">sha1<pos:position pos:line="566" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="566" pos:column="71">1<pos:position pos:line="566" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="566" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="566" pos:column="74"/></expr_stmt>
		<if pos:line="567" pos:column="17">if <condition pos:line="567" pos:column="20">(<expr><name pos:line="567" pos:column="21">commit<pos:position pos:line="567" pos:column="27"/></name></expr>)<pos:position pos:line="567" pos:column="28"/></condition><then pos:line="567" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="568" pos:column="25">clear_commit_marks<pos:position pos:line="568" pos:column="43"/></name><argument_list pos:line="568" pos:column="43">(<argument><expr><name pos:line="568" pos:column="44">commit<pos:position pos:line="568" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="568" pos:column="52">mark<pos:position pos:line="568" pos:column="56"/></name></expr></argument>)<pos:position pos:line="568" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="568" pos:column="58"/></expr_stmt></block></then></if>
	}<pos:position pos:line="569" pos:column="10"/></block></for>
}<pos:position pos:line="570" pos:column="2"/></block></function>

<function><type><name><name pos:line="572" pos:column="1">struct<pos:position pos:line="572" pos:column="7"/></name> <name pos:line="572" pos:column="8">commit<pos:position pos:line="572" pos:column="14"/></name></name> <modifier pos:line="572" pos:column="15">*<pos:position pos:line="572" pos:column="16"/></modifier></type><name pos:line="572" pos:column="16">pop_commit<pos:position pos:line="572" pos:column="26"/></name><parameter_list pos:line="572" pos:column="26">(<parameter><decl><type><name><name pos:line="572" pos:column="27">struct<pos:position pos:line="572" pos:column="33"/></name> <name pos:line="572" pos:column="34">commit_list<pos:position pos:line="572" pos:column="45"/></name></name> <modifier pos:line="572" pos:column="46">*<pos:position pos:line="572" pos:column="47"/></modifier><modifier pos:line="572" pos:column="47">*<pos:position pos:line="572" pos:column="48"/></modifier></type><name pos:line="572" pos:column="48">stack<pos:position pos:line="572" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="572" pos:column="54"/></parameter_list>
<block pos:line="573" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="574" pos:column="9">struct<pos:position pos:line="574" pos:column="15"/></name> <name pos:line="574" pos:column="16">commit_list<pos:position pos:line="574" pos:column="27"/></name></name> <modifier pos:line="574" pos:column="28">*<pos:position pos:line="574" pos:column="29"/></modifier></type><name pos:line="574" pos:column="29">top<pos:position pos:line="574" pos:column="32"/></name> <init pos:line="574" pos:column="33">= <expr><operator pos:line="574" pos:column="35">*<pos:position pos:line="574" pos:column="36"/></operator><name pos:line="574" pos:column="36">stack<pos:position pos:line="574" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="574" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="575" pos:column="9">struct<pos:position pos:line="575" pos:column="15"/></name> <name pos:line="575" pos:column="16">commit<pos:position pos:line="575" pos:column="22"/></name></name> <modifier pos:line="575" pos:column="23">*<pos:position pos:line="575" pos:column="24"/></modifier></type><name pos:line="575" pos:column="24">item<pos:position pos:line="575" pos:column="28"/></name> <init pos:line="575" pos:column="29">= <expr><ternary><condition><expr><name pos:line="575" pos:column="31">top<pos:position pos:line="575" pos:column="34"/></name></expr> ?<pos:position pos:line="575" pos:column="36"/></condition><then pos:line="575" pos:column="36"> <expr><name><name pos:line="575" pos:column="37">top<pos:position pos:line="575" pos:column="40"/></name><operator pos:line="575" pos:column="40">-&gt;<pos:position pos:line="575" pos:column="45"/></operator><name pos:line="575" pos:column="42">item<pos:position pos:line="575" pos:column="46"/></name></name></expr> <pos:position pos:line="575" pos:column="47"/></then><else pos:line="575" pos:column="47">: <expr><name pos:line="575" pos:column="49">NULL<pos:position pos:line="575" pos:column="53"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="575" pos:column="54"/></decl_stmt>

	<if pos:line="577" pos:column="9">if <condition pos:line="577" pos:column="12">(<expr><name pos:line="577" pos:column="13">top<pos:position pos:line="577" pos:column="16"/></name></expr>)<pos:position pos:line="577" pos:column="17"/></condition><then pos:line="577" pos:column="17"> <block pos:line="577" pos:column="18">{
		<expr_stmt><expr><operator pos:line="578" pos:column="17">*<pos:position pos:line="578" pos:column="18"/></operator><name pos:line="578" pos:column="18">stack<pos:position pos:line="578" pos:column="23"/></name> <operator pos:line="578" pos:column="24">=<pos:position pos:line="578" pos:column="25"/></operator> <name><name pos:line="578" pos:column="26">top<pos:position pos:line="578" pos:column="29"/></name><operator pos:line="578" pos:column="29">-&gt;<pos:position pos:line="578" pos:column="34"/></operator><name pos:line="578" pos:column="31">next<pos:position pos:line="578" pos:column="35"/></name></name></expr>;<pos:position pos:line="578" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="579" pos:column="17">free<pos:position pos:line="579" pos:column="21"/></name><argument_list pos:line="579" pos:column="21">(<argument><expr><name pos:line="579" pos:column="22">top<pos:position pos:line="579" pos:column="25"/></name></expr></argument>)<pos:position pos:line="579" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="579" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="580" pos:column="10"/></block></then></if>
	<return pos:line="581" pos:column="9">return <expr><name pos:line="581" pos:column="16">item<pos:position pos:line="581" pos:column="20"/></name></expr>;<pos:position pos:line="581" pos:column="21"/></return>
}<pos:position pos:line="582" pos:column="2"/></block></function>

<comment type="block" pos:line="584" pos:column="1">/*
 * Topological sort support
 */</comment>

<comment type="block" pos:line="588" pos:column="1">/* count number of children that have not been emitted */</comment>
<expr_stmt><expr><call><name pos:line="589" pos:column="1">define_commit_slab<pos:position pos:line="589" pos:column="19"/></name><argument_list pos:line="589" pos:column="19">(<argument><expr><name pos:line="589" pos:column="20">indegree_slab<pos:position pos:line="589" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="589" pos:column="35">int<pos:position pos:line="589" pos:column="38"/></name></expr></argument>)<pos:position pos:line="589" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="589" pos:column="40"/></expr_stmt>

<comment type="block" pos:line="591" pos:column="1">/* record author-date for each commit object */</comment>
<macro><name pos:line="592" pos:column="1">define_commit_slab<pos:position pos:line="592" pos:column="19"/></name><argument_list pos:line="592" pos:column="19">(<argument pos:line="592" pos:column="20">author_date_slab<pos:position pos:line="592" pos:column="36"/></argument>, <argument pos:line="592" pos:column="38">unsigned long<pos:position pos:line="592" pos:column="51"/></argument>)<pos:position pos:line="592" pos:column="52"/></argument_list></macro><empty_stmt pos:line="592" pos:column="52">;<pos:position pos:line="592" pos:column="53"/></empty_stmt>

<function><specifier pos:line="594" pos:column="1">static<pos:position pos:line="594" pos:column="7"/></specifier> <type><name pos:line="594" pos:column="8">void<pos:position pos:line="594" pos:column="12"/></name></type> <name pos:line="594" pos:column="13">record_author_date<pos:position pos:line="594" pos:column="31"/></name><parameter_list pos:line="594" pos:column="31">(<parameter><decl><type><name><name pos:line="594" pos:column="32">struct<pos:position pos:line="594" pos:column="38"/></name> <name pos:line="594" pos:column="39">author_date_slab<pos:position pos:line="594" pos:column="55"/></name></name> <modifier pos:line="594" pos:column="56">*<pos:position pos:line="594" pos:column="57"/></modifier></type><name pos:line="594" pos:column="57">author_date<pos:position pos:line="594" pos:column="68"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="595" pos:column="32">struct<pos:position pos:line="595" pos:column="38"/></name> <name pos:line="595" pos:column="39">commit<pos:position pos:line="595" pos:column="45"/></name></name> <modifier pos:line="595" pos:column="46">*<pos:position pos:line="595" pos:column="47"/></modifier></type><name pos:line="595" pos:column="47">commit<pos:position pos:line="595" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="595" pos:column="54"/></parameter_list>
<block pos:line="596" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="597" pos:column="9">const<pos:position pos:line="597" pos:column="14"/></specifier> <name pos:line="597" pos:column="15">char<pos:position pos:line="597" pos:column="19"/></name> <modifier pos:line="597" pos:column="20">*<pos:position pos:line="597" pos:column="21"/></modifier></type><name pos:line="597" pos:column="21">buffer<pos:position pos:line="597" pos:column="27"/></name> <init pos:line="597" pos:column="28">= <expr><call><name pos:line="597" pos:column="30">get_commit_buffer<pos:position pos:line="597" pos:column="47"/></name><argument_list pos:line="597" pos:column="47">(<argument><expr><name pos:line="597" pos:column="48">commit<pos:position pos:line="597" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="597" pos:column="56">NULL<pos:position pos:line="597" pos:column="60"/></name></expr></argument>)<pos:position pos:line="597" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="597" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="598" pos:column="9">struct<pos:position pos:line="598" pos:column="15"/></name> <name pos:line="598" pos:column="16">ident_split<pos:position pos:line="598" pos:column="27"/></name></name></type> <name pos:line="598" pos:column="28">ident<pos:position pos:line="598" pos:column="33"/></name></decl>;<pos:position pos:line="598" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="599" pos:column="9">const<pos:position pos:line="599" pos:column="14"/></specifier> <name pos:line="599" pos:column="15">char<pos:position pos:line="599" pos:column="19"/></name> <modifier pos:line="599" pos:column="20">*<pos:position pos:line="599" pos:column="21"/></modifier></type><name pos:line="599" pos:column="21">ident_line<pos:position pos:line="599" pos:column="31"/></name></decl>;<pos:position pos:line="599" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="600" pos:column="9">size_t<pos:position pos:line="600" pos:column="15"/></name></type> <name pos:line="600" pos:column="16">ident_len<pos:position pos:line="600" pos:column="25"/></name></decl>;<pos:position pos:line="600" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="601" pos:column="9">char<pos:position pos:line="601" pos:column="13"/></name> <modifier pos:line="601" pos:column="14">*<pos:position pos:line="601" pos:column="15"/></modifier></type><name pos:line="601" pos:column="15">date_end<pos:position pos:line="601" pos:column="23"/></name></decl>;<pos:position pos:line="601" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="602" pos:column="9">unsigned<pos:position pos:line="602" pos:column="17"/></name> <name pos:line="602" pos:column="18">long<pos:position pos:line="602" pos:column="22"/></name></type> <name pos:line="602" pos:column="23">date<pos:position pos:line="602" pos:column="27"/></name></decl>;<pos:position pos:line="602" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><name pos:line="604" pos:column="9">ident_line<pos:position pos:line="604" pos:column="19"/></name> <operator pos:line="604" pos:column="20">=<pos:position pos:line="604" pos:column="21"/></operator> <call><name pos:line="604" pos:column="22">find_commit_header<pos:position pos:line="604" pos:column="40"/></name><argument_list pos:line="604" pos:column="40">(<argument><expr><name pos:line="604" pos:column="41">buffer<pos:position pos:line="604" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="604" pos:column="49">"author"<pos:position pos:line="604" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="604" pos:column="59">&amp;<pos:position pos:line="604" pos:column="64"/></operator><name pos:line="604" pos:column="60">ident_len<pos:position pos:line="604" pos:column="69"/></name></expr></argument>)<pos:position pos:line="604" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="604" pos:column="71"/></expr_stmt>
	<if pos:line="605" pos:column="9">if <condition pos:line="605" pos:column="12">(<expr><operator pos:line="605" pos:column="13">!<pos:position pos:line="605" pos:column="14"/></operator><name pos:line="605" pos:column="14">ident_line<pos:position pos:line="605" pos:column="24"/></name></expr>)<pos:position pos:line="605" pos:column="25"/></condition><then pos:line="605" pos:column="25">
		<block type="pseudo"><goto pos:line="606" pos:column="17">goto <name pos:line="606" pos:column="22">fail_exit<pos:position pos:line="606" pos:column="31"/></name>;<pos:position pos:line="606" pos:column="32"/></goto></block></then></if> <comment type="block" pos:line="606" pos:column="33">/* no author line */</comment>
	<if pos:line="607" pos:column="9">if <condition pos:line="607" pos:column="12">(<expr><call><name pos:line="607" pos:column="13">split_ident_line<pos:position pos:line="607" pos:column="29"/></name><argument_list pos:line="607" pos:column="29">(<argument><expr><operator pos:line="607" pos:column="30">&amp;<pos:position pos:line="607" pos:column="35"/></operator><name pos:line="607" pos:column="31">ident<pos:position pos:line="607" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="607" pos:column="38">ident_line<pos:position pos:line="607" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="607" pos:column="50">ident_len<pos:position pos:line="607" pos:column="59"/></name></expr></argument>)<pos:position pos:line="607" pos:column="60"/></argument_list></call> <operator pos:line="607" pos:column="61">||<pos:position pos:line="607" pos:column="63"/></operator>
	    <operator pos:line="608" pos:column="13">!<pos:position pos:line="608" pos:column="14"/></operator><name><name pos:line="608" pos:column="14">ident<pos:position pos:line="608" pos:column="19"/></name><operator pos:line="608" pos:column="19">.<pos:position pos:line="608" pos:column="20"/></operator><name pos:line="608" pos:column="20">date_begin<pos:position pos:line="608" pos:column="30"/></name></name> <operator pos:line="608" pos:column="31">||<pos:position pos:line="608" pos:column="33"/></operator> <operator pos:line="608" pos:column="34">!<pos:position pos:line="608" pos:column="35"/></operator><name><name pos:line="608" pos:column="35">ident<pos:position pos:line="608" pos:column="40"/></name><operator pos:line="608" pos:column="40">.<pos:position pos:line="608" pos:column="41"/></operator><name pos:line="608" pos:column="41">date_end<pos:position pos:line="608" pos:column="49"/></name></name></expr>)<pos:position pos:line="608" pos:column="50"/></condition><then pos:line="608" pos:column="50">
		<block type="pseudo"><goto pos:line="609" pos:column="17">goto <name pos:line="609" pos:column="22">fail_exit<pos:position pos:line="609" pos:column="31"/></name>;<pos:position pos:line="609" pos:column="32"/></goto></block></then></if> <comment type="block" pos:line="609" pos:column="33">/* malformed "author" line */</comment>

	<expr_stmt><expr><name pos:line="611" pos:column="9">date<pos:position pos:line="611" pos:column="13"/></name> <operator pos:line="611" pos:column="14">=<pos:position pos:line="611" pos:column="15"/></operator> <call><name pos:line="611" pos:column="16">strtoul<pos:position pos:line="611" pos:column="23"/></name><argument_list pos:line="611" pos:column="23">(<argument><expr><name><name pos:line="611" pos:column="24">ident<pos:position pos:line="611" pos:column="29"/></name><operator pos:line="611" pos:column="29">.<pos:position pos:line="611" pos:column="30"/></operator><name pos:line="611" pos:column="30">date_begin<pos:position pos:line="611" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="611" pos:column="42">&amp;<pos:position pos:line="611" pos:column="47"/></operator><name pos:line="611" pos:column="43">date_end<pos:position pos:line="611" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="611" pos:column="53">10<pos:position pos:line="611" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="611" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="611" pos:column="57"/></expr_stmt>
	<if pos:line="612" pos:column="9">if <condition pos:line="612" pos:column="12">(<expr><name pos:line="612" pos:column="13">date_end<pos:position pos:line="612" pos:column="21"/></name> <operator pos:line="612" pos:column="22">!=<pos:position pos:line="612" pos:column="24"/></operator> <name><name pos:line="612" pos:column="25">ident<pos:position pos:line="612" pos:column="30"/></name><operator pos:line="612" pos:column="30">.<pos:position pos:line="612" pos:column="31"/></operator><name pos:line="612" pos:column="31">date_end<pos:position pos:line="612" pos:column="39"/></name></name></expr>)<pos:position pos:line="612" pos:column="40"/></condition><then pos:line="612" pos:column="40">
		<block type="pseudo"><goto pos:line="613" pos:column="17">goto <name pos:line="613" pos:column="22">fail_exit<pos:position pos:line="613" pos:column="31"/></name>;<pos:position pos:line="613" pos:column="32"/></goto></block></then></if> <comment type="block" pos:line="613" pos:column="33">/* malformed date */</comment>
	<expr_stmt><expr><operator pos:line="614" pos:column="9">*<pos:position pos:line="614" pos:column="10"/></operator><operator pos:line="614" pos:column="10">(<pos:position pos:line="614" pos:column="11"/></operator><call><name pos:line="614" pos:column="11">author_date_slab_at<pos:position pos:line="614" pos:column="30"/></name><argument_list pos:line="614" pos:column="30">(<argument><expr><name pos:line="614" pos:column="31">author_date<pos:position pos:line="614" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="44">commit<pos:position pos:line="614" pos:column="50"/></name></expr></argument>)<pos:position pos:line="614" pos:column="51"/></argument_list></call><operator pos:line="614" pos:column="51">)<pos:position pos:line="614" pos:column="52"/></operator> <operator pos:line="614" pos:column="53">=<pos:position pos:line="614" pos:column="54"/></operator> <name pos:line="614" pos:column="55">date<pos:position pos:line="614" pos:column="59"/></name></expr>;<pos:position pos:line="614" pos:column="60"/></expr_stmt>

<label><name pos:line="616" pos:column="1">fail_exit<pos:position pos:line="616" pos:column="10"/></name>:<pos:position pos:line="616" pos:column="11"/></label>
	<expr_stmt><expr><call><name pos:line="617" pos:column="9">unuse_commit_buffer<pos:position pos:line="617" pos:column="28"/></name><argument_list pos:line="617" pos:column="28">(<argument><expr><name pos:line="617" pos:column="29">commit<pos:position pos:line="617" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="617" pos:column="37">buffer<pos:position pos:line="617" pos:column="43"/></name></expr></argument>)<pos:position pos:line="617" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="617" pos:column="45"/></expr_stmt>
}<pos:position pos:line="618" pos:column="2"/></block></function>

<function><specifier pos:line="620" pos:column="1">static<pos:position pos:line="620" pos:column="7"/></specifier> <type><name pos:line="620" pos:column="8">int<pos:position pos:line="620" pos:column="11"/></name></type> <name pos:line="620" pos:column="12">compare_commits_by_author_date<pos:position pos:line="620" pos:column="42"/></name><parameter_list pos:line="620" pos:column="42">(<parameter><decl><type><specifier pos:line="620" pos:column="43">const<pos:position pos:line="620" pos:column="48"/></specifier> <name pos:line="620" pos:column="49">void<pos:position pos:line="620" pos:column="53"/></name> <modifier pos:line="620" pos:column="54">*<pos:position pos:line="620" pos:column="55"/></modifier></type><name pos:line="620" pos:column="55">a_<pos:position pos:line="620" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="620" pos:column="59">const<pos:position pos:line="620" pos:column="64"/></specifier> <name pos:line="620" pos:column="65">void<pos:position pos:line="620" pos:column="69"/></name> <modifier pos:line="620" pos:column="70">*<pos:position pos:line="620" pos:column="71"/></modifier></type><name pos:line="620" pos:column="71">b_<pos:position pos:line="620" pos:column="73"/></name></decl></parameter>,
					  <parameter><decl><type><name pos:line="621" pos:column="43">void<pos:position pos:line="621" pos:column="47"/></name> <modifier pos:line="621" pos:column="48">*<pos:position pos:line="621" pos:column="49"/></modifier></type><name pos:line="621" pos:column="49">cb_data<pos:position pos:line="621" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="621" pos:column="57"/></parameter_list>
<block pos:line="622" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="623" pos:column="9">const<pos:position pos:line="623" pos:column="14"/></specifier> <name><name pos:line="623" pos:column="15">struct<pos:position pos:line="623" pos:column="21"/></name> <name pos:line="623" pos:column="22">commit<pos:position pos:line="623" pos:column="28"/></name></name> <modifier pos:line="623" pos:column="29">*<pos:position pos:line="623" pos:column="30"/></modifier></type><name pos:line="623" pos:column="30">a<pos:position pos:line="623" pos:column="31"/></name> <init pos:line="623" pos:column="32">= <expr><name pos:line="623" pos:column="34">a_<pos:position pos:line="623" pos:column="36"/></name></expr></init></decl>, <modifier pos:line="623" pos:column="38">*<pos:position pos:line="623" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="623" pos:column="39">b<pos:position pos:line="623" pos:column="40"/></name> <init pos:line="623" pos:column="41">= <expr><name pos:line="623" pos:column="43">b_<pos:position pos:line="623" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="623" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="624" pos:column="9">struct<pos:position pos:line="624" pos:column="15"/></name> <name pos:line="624" pos:column="16">author_date_slab<pos:position pos:line="624" pos:column="32"/></name></name> <modifier pos:line="624" pos:column="33">*<pos:position pos:line="624" pos:column="34"/></modifier></type><name pos:line="624" pos:column="34">author_date<pos:position pos:line="624" pos:column="45"/></name> <init pos:line="624" pos:column="46">= <expr><name pos:line="624" pos:column="48">cb_data<pos:position pos:line="624" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="624" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="625" pos:column="9">unsigned<pos:position pos:line="625" pos:column="17"/></name> <name pos:line="625" pos:column="18">long<pos:position pos:line="625" pos:column="22"/></name></type> <name pos:line="625" pos:column="23">a_date<pos:position pos:line="625" pos:column="29"/></name> <init pos:line="625" pos:column="30">= <expr><operator pos:line="625" pos:column="32">*<pos:position pos:line="625" pos:column="33"/></operator><operator pos:line="625" pos:column="33">(<pos:position pos:line="625" pos:column="34"/></operator><call><name pos:line="625" pos:column="34">author_date_slab_at<pos:position pos:line="625" pos:column="53"/></name><argument_list pos:line="625" pos:column="53">(<argument><expr><name pos:line="625" pos:column="54">author_date<pos:position pos:line="625" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="625" pos:column="67">a<pos:position pos:line="625" pos:column="68"/></name></expr></argument>)<pos:position pos:line="625" pos:column="69"/></argument_list></call><operator pos:line="625" pos:column="69">)<pos:position pos:line="625" pos:column="70"/></operator></expr></init></decl>;<pos:position pos:line="625" pos:column="71"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="626" pos:column="9">unsigned<pos:position pos:line="626" pos:column="17"/></name> <name pos:line="626" pos:column="18">long<pos:position pos:line="626" pos:column="22"/></name></type> <name pos:line="626" pos:column="23">b_date<pos:position pos:line="626" pos:column="29"/></name> <init pos:line="626" pos:column="30">= <expr><operator pos:line="626" pos:column="32">*<pos:position pos:line="626" pos:column="33"/></operator><operator pos:line="626" pos:column="33">(<pos:position pos:line="626" pos:column="34"/></operator><call><name pos:line="626" pos:column="34">author_date_slab_at<pos:position pos:line="626" pos:column="53"/></name><argument_list pos:line="626" pos:column="53">(<argument><expr><name pos:line="626" pos:column="54">author_date<pos:position pos:line="626" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="626" pos:column="67">b<pos:position pos:line="626" pos:column="68"/></name></expr></argument>)<pos:position pos:line="626" pos:column="69"/></argument_list></call><operator pos:line="626" pos:column="69">)<pos:position pos:line="626" pos:column="70"/></operator></expr></init></decl>;<pos:position pos:line="626" pos:column="71"/></decl_stmt>

	<comment type="block" pos:line="628" pos:column="9">/* newer commits with larger date first */</comment>
	<if pos:line="629" pos:column="9">if <condition pos:line="629" pos:column="12">(<expr><name pos:line="629" pos:column="13">a_date<pos:position pos:line="629" pos:column="19"/></name> <operator pos:line="629" pos:column="20">&lt;<pos:position pos:line="629" pos:column="24"/></operator> <name pos:line="629" pos:column="22">b_date<pos:position pos:line="629" pos:column="28"/></name></expr>)<pos:position pos:line="629" pos:column="29"/></condition><then pos:line="629" pos:column="29">
		<block type="pseudo"><return pos:line="630" pos:column="17">return <expr><literal type="number" pos:line="630" pos:column="24">1<pos:position pos:line="630" pos:column="25"/></literal></expr>;<pos:position pos:line="630" pos:column="26"/></return></block></then>
	<elseif pos:line="631" pos:column="9">else <if pos:line="631" pos:column="14">if <condition pos:line="631" pos:column="17">(<expr><name pos:line="631" pos:column="18">a_date<pos:position pos:line="631" pos:column="24"/></name> <operator pos:line="631" pos:column="25">&gt;<pos:position pos:line="631" pos:column="29"/></operator> <name pos:line="631" pos:column="27">b_date<pos:position pos:line="631" pos:column="33"/></name></expr>)<pos:position pos:line="631" pos:column="34"/></condition><then pos:line="631" pos:column="34">
		<block type="pseudo"><return pos:line="632" pos:column="17">return <expr><operator pos:line="632" pos:column="24">-<pos:position pos:line="632" pos:column="25"/></operator><literal type="number" pos:line="632" pos:column="25">1<pos:position pos:line="632" pos:column="26"/></literal></expr>;<pos:position pos:line="632" pos:column="27"/></return></block></then></if></elseif></if>
	<return pos:line="633" pos:column="9">return <expr><literal type="number" pos:line="633" pos:column="16">0<pos:position pos:line="633" pos:column="17"/></literal></expr>;<pos:position pos:line="633" pos:column="18"/></return>
}<pos:position pos:line="634" pos:column="2"/></block></function>

<function><type><name pos:line="636" pos:column="1">int<pos:position pos:line="636" pos:column="4"/></name></type> <name pos:line="636" pos:column="5">compare_commits_by_commit_date<pos:position pos:line="636" pos:column="35"/></name><parameter_list pos:line="636" pos:column="35">(<parameter><decl><type><specifier pos:line="636" pos:column="36">const<pos:position pos:line="636" pos:column="41"/></specifier> <name pos:line="636" pos:column="42">void<pos:position pos:line="636" pos:column="46"/></name> <modifier pos:line="636" pos:column="47">*<pos:position pos:line="636" pos:column="48"/></modifier></type><name pos:line="636" pos:column="48">a_<pos:position pos:line="636" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="636" pos:column="52">const<pos:position pos:line="636" pos:column="57"/></specifier> <name pos:line="636" pos:column="58">void<pos:position pos:line="636" pos:column="62"/></name> <modifier pos:line="636" pos:column="63">*<pos:position pos:line="636" pos:column="64"/></modifier></type><name pos:line="636" pos:column="64">b_<pos:position pos:line="636" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="636" pos:column="68">void<pos:position pos:line="636" pos:column="72"/></name> <modifier pos:line="636" pos:column="73">*<pos:position pos:line="636" pos:column="74"/></modifier></type><name pos:line="636" pos:column="74">unused<pos:position pos:line="636" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="636" pos:column="81"/></parameter_list>
<block pos:line="637" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="638" pos:column="9">const<pos:position pos:line="638" pos:column="14"/></specifier> <name><name pos:line="638" pos:column="15">struct<pos:position pos:line="638" pos:column="21"/></name> <name pos:line="638" pos:column="22">commit<pos:position pos:line="638" pos:column="28"/></name></name> <modifier pos:line="638" pos:column="29">*<pos:position pos:line="638" pos:column="30"/></modifier></type><name pos:line="638" pos:column="30">a<pos:position pos:line="638" pos:column="31"/></name> <init pos:line="638" pos:column="32">= <expr><name pos:line="638" pos:column="34">a_<pos:position pos:line="638" pos:column="36"/></name></expr></init></decl>, <modifier pos:line="638" pos:column="38">*<pos:position pos:line="638" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="638" pos:column="39">b<pos:position pos:line="638" pos:column="40"/></name> <init pos:line="638" pos:column="41">= <expr><name pos:line="638" pos:column="43">b_<pos:position pos:line="638" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="638" pos:column="46"/></decl_stmt>
	<comment type="block" pos:line="639" pos:column="9">/* newer commits with larger date first */</comment>
	<if pos:line="640" pos:column="9">if <condition pos:line="640" pos:column="12">(<expr><name><name pos:line="640" pos:column="13">a<pos:position pos:line="640" pos:column="14"/></name><operator pos:line="640" pos:column="14">-&gt;<pos:position pos:line="640" pos:column="19"/></operator><name pos:line="640" pos:column="16">date<pos:position pos:line="640" pos:column="20"/></name></name> <operator pos:line="640" pos:column="21">&lt;<pos:position pos:line="640" pos:column="25"/></operator> <name><name pos:line="640" pos:column="23">b<pos:position pos:line="640" pos:column="24"/></name><operator pos:line="640" pos:column="24">-&gt;<pos:position pos:line="640" pos:column="29"/></operator><name pos:line="640" pos:column="26">date<pos:position pos:line="640" pos:column="30"/></name></name></expr>)<pos:position pos:line="640" pos:column="31"/></condition><then pos:line="640" pos:column="31">
		<block type="pseudo"><return pos:line="641" pos:column="17">return <expr><literal type="number" pos:line="641" pos:column="24">1<pos:position pos:line="641" pos:column="25"/></literal></expr>;<pos:position pos:line="641" pos:column="26"/></return></block></then>
	<elseif pos:line="642" pos:column="9">else <if pos:line="642" pos:column="14">if <condition pos:line="642" pos:column="17">(<expr><name><name pos:line="642" pos:column="18">a<pos:position pos:line="642" pos:column="19"/></name><operator pos:line="642" pos:column="19">-&gt;<pos:position pos:line="642" pos:column="24"/></operator><name pos:line="642" pos:column="21">date<pos:position pos:line="642" pos:column="25"/></name></name> <operator pos:line="642" pos:column="26">&gt;<pos:position pos:line="642" pos:column="30"/></operator> <name><name pos:line="642" pos:column="28">b<pos:position pos:line="642" pos:column="29"/></name><operator pos:line="642" pos:column="29">-&gt;<pos:position pos:line="642" pos:column="34"/></operator><name pos:line="642" pos:column="31">date<pos:position pos:line="642" pos:column="35"/></name></name></expr>)<pos:position pos:line="642" pos:column="36"/></condition><then pos:line="642" pos:column="36">
		<block type="pseudo"><return pos:line="643" pos:column="17">return <expr><operator pos:line="643" pos:column="24">-<pos:position pos:line="643" pos:column="25"/></operator><literal type="number" pos:line="643" pos:column="25">1<pos:position pos:line="643" pos:column="26"/></literal></expr>;<pos:position pos:line="643" pos:column="27"/></return></block></then></if></elseif></if>
	<return pos:line="644" pos:column="9">return <expr><literal type="number" pos:line="644" pos:column="16">0<pos:position pos:line="644" pos:column="17"/></literal></expr>;<pos:position pos:line="644" pos:column="18"/></return>
}<pos:position pos:line="645" pos:column="2"/></block></function>

<comment type="block" pos:line="647" pos:column="1">/*
 * Performs an in-place topological sort on the list supplied.
 */</comment>
<function><type><name pos:line="650" pos:column="1">void<pos:position pos:line="650" pos:column="5"/></name></type> <name pos:line="650" pos:column="6">sort_in_topological_order<pos:position pos:line="650" pos:column="31"/></name><parameter_list pos:line="650" pos:column="31">(<parameter><decl><type><name><name pos:line="650" pos:column="32">struct<pos:position pos:line="650" pos:column="38"/></name> <name pos:line="650" pos:column="39">commit_list<pos:position pos:line="650" pos:column="50"/></name></name> <modifier pos:line="650" pos:column="51">*<pos:position pos:line="650" pos:column="52"/></modifier><modifier pos:line="650" pos:column="52">*<pos:position pos:line="650" pos:column="53"/></modifier></type><name pos:line="650" pos:column="53">list<pos:position pos:line="650" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="650" pos:column="59">enum<pos:position pos:line="650" pos:column="63"/></name> <name pos:line="650" pos:column="64">rev_sort_order<pos:position pos:line="650" pos:column="78"/></name></name></type> <name pos:line="650" pos:column="79">sort_order<pos:position pos:line="650" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="650" pos:column="90"/></parameter_list>
<block pos:line="651" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="652" pos:column="9">struct<pos:position pos:line="652" pos:column="15"/></name> <name pos:line="652" pos:column="16">commit_list<pos:position pos:line="652" pos:column="27"/></name></name> <modifier pos:line="652" pos:column="28">*<pos:position pos:line="652" pos:column="29"/></modifier></type><name pos:line="652" pos:column="29">next<pos:position pos:line="652" pos:column="33"/></name></decl>, <modifier pos:line="652" pos:column="35">*<pos:position pos:line="652" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="652" pos:column="36">orig<pos:position pos:line="652" pos:column="40"/></name> <init pos:line="652" pos:column="41">= <expr><operator pos:line="652" pos:column="43">*<pos:position pos:line="652" pos:column="44"/></operator><name pos:line="652" pos:column="44">list<pos:position pos:line="652" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="652" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="653" pos:column="9">struct<pos:position pos:line="653" pos:column="15"/></name> <name pos:line="653" pos:column="16">commit_list<pos:position pos:line="653" pos:column="27"/></name></name> <modifier pos:line="653" pos:column="28">*<pos:position pos:line="653" pos:column="29"/></modifier><modifier pos:line="653" pos:column="29">*<pos:position pos:line="653" pos:column="30"/></modifier></type><name pos:line="653" pos:column="30">pptr<pos:position pos:line="653" pos:column="34"/></name></decl>;<pos:position pos:line="653" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="654" pos:column="9">struct<pos:position pos:line="654" pos:column="15"/></name> <name pos:line="654" pos:column="16">indegree_slab<pos:position pos:line="654" pos:column="29"/></name></name></type> <name pos:line="654" pos:column="30">indegree<pos:position pos:line="654" pos:column="38"/></name></decl>;<pos:position pos:line="654" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="655" pos:column="9">struct<pos:position pos:line="655" pos:column="15"/></name> <name pos:line="655" pos:column="16">prio_queue<pos:position pos:line="655" pos:column="26"/></name></name></type> <name pos:line="655" pos:column="27">queue<pos:position pos:line="655" pos:column="32"/></name></decl>;<pos:position pos:line="655" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="656" pos:column="9">struct<pos:position pos:line="656" pos:column="15"/></name> <name pos:line="656" pos:column="16">commit<pos:position pos:line="656" pos:column="22"/></name></name> <modifier pos:line="656" pos:column="23">*<pos:position pos:line="656" pos:column="24"/></modifier></type><name pos:line="656" pos:column="24">commit<pos:position pos:line="656" pos:column="30"/></name></decl>;<pos:position pos:line="656" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="657" pos:column="9">struct<pos:position pos:line="657" pos:column="15"/></name> <name pos:line="657" pos:column="16">author_date_slab<pos:position pos:line="657" pos:column="32"/></name></name></type> <name pos:line="657" pos:column="33">author_date<pos:position pos:line="657" pos:column="44"/></name></decl>;<pos:position pos:line="657" pos:column="45"/></decl_stmt>

	<if pos:line="659" pos:column="9">if <condition pos:line="659" pos:column="12">(<expr><operator pos:line="659" pos:column="13">!<pos:position pos:line="659" pos:column="14"/></operator><name pos:line="659" pos:column="14">orig<pos:position pos:line="659" pos:column="18"/></name></expr>)<pos:position pos:line="659" pos:column="19"/></condition><then pos:line="659" pos:column="19">
		<block type="pseudo"><return pos:line="660" pos:column="17">return;<pos:position pos:line="660" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="661" pos:column="9">*<pos:position pos:line="661" pos:column="10"/></operator><name pos:line="661" pos:column="10">list<pos:position pos:line="661" pos:column="14"/></name> <operator pos:line="661" pos:column="15">=<pos:position pos:line="661" pos:column="16"/></operator> <name pos:line="661" pos:column="17">NULL<pos:position pos:line="661" pos:column="21"/></name></expr>;<pos:position pos:line="661" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="663" pos:column="9">init_indegree_slab<pos:position pos:line="663" pos:column="27"/></name><argument_list pos:line="663" pos:column="27">(<argument><expr><operator pos:line="663" pos:column="28">&amp;<pos:position pos:line="663" pos:column="33"/></operator><name pos:line="663" pos:column="29">indegree<pos:position pos:line="663" pos:column="37"/></name></expr></argument>)<pos:position pos:line="663" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="663" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="664" pos:column="9">memset<pos:position pos:line="664" pos:column="15"/></name><argument_list pos:line="664" pos:column="15">(<argument><expr><operator pos:line="664" pos:column="16">&amp;<pos:position pos:line="664" pos:column="21"/></operator><name pos:line="664" pos:column="17">queue<pos:position pos:line="664" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="664" pos:column="24">'\0'<pos:position pos:line="664" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="664" pos:column="30">sizeof<argument_list pos:line="664" pos:column="36">(<argument><expr><name pos:line="664" pos:column="37">queue<pos:position pos:line="664" pos:column="42"/></name></expr></argument>)<pos:position pos:line="664" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="664" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="664" pos:column="45"/></expr_stmt>

	<switch pos:line="666" pos:column="9">switch <condition pos:line="666" pos:column="16">(<expr><name pos:line="666" pos:column="17">sort_order<pos:position pos:line="666" pos:column="27"/></name></expr>)<pos:position pos:line="666" pos:column="28"/></condition> <block pos:line="666" pos:column="29">{
	<default pos:line="667" pos:column="9">default:<pos:position pos:line="667" pos:column="17"/></default> <comment type="block" pos:line="667" pos:column="18">/* REV_SORT_IN_GRAPH_ORDER */</comment>
		<expr_stmt><expr><name><name pos:line="668" pos:column="17">queue<pos:position pos:line="668" pos:column="22"/></name><operator pos:line="668" pos:column="22">.<pos:position pos:line="668" pos:column="23"/></operator><name pos:line="668" pos:column="23">compare<pos:position pos:line="668" pos:column="30"/></name></name> <operator pos:line="668" pos:column="31">=<pos:position pos:line="668" pos:column="32"/></operator> <name pos:line="668" pos:column="33">NULL<pos:position pos:line="668" pos:column="37"/></name></expr>;<pos:position pos:line="668" pos:column="38"/></expr_stmt>
		<break pos:line="669" pos:column="17">break;<pos:position pos:line="669" pos:column="23"/></break>
	<case pos:line="670" pos:column="9">case <expr><name pos:line="670" pos:column="14">REV_SORT_BY_COMMIT_DATE<pos:position pos:line="670" pos:column="37"/></name></expr>:<pos:position pos:line="670" pos:column="38"/></case>
		<expr_stmt><expr><name><name pos:line="671" pos:column="17">queue<pos:position pos:line="671" pos:column="22"/></name><operator pos:line="671" pos:column="22">.<pos:position pos:line="671" pos:column="23"/></operator><name pos:line="671" pos:column="23">compare<pos:position pos:line="671" pos:column="30"/></name></name> <operator pos:line="671" pos:column="31">=<pos:position pos:line="671" pos:column="32"/></operator> <name pos:line="671" pos:column="33">compare_commits_by_commit_date<pos:position pos:line="671" pos:column="63"/></name></expr>;<pos:position pos:line="671" pos:column="64"/></expr_stmt>
		<break pos:line="672" pos:column="17">break;<pos:position pos:line="672" pos:column="23"/></break>
	<case pos:line="673" pos:column="9">case <expr><name pos:line="673" pos:column="14">REV_SORT_BY_AUTHOR_DATE<pos:position pos:line="673" pos:column="37"/></name></expr>:<pos:position pos:line="673" pos:column="38"/></case>
		<expr_stmt><expr><call><name pos:line="674" pos:column="17">init_author_date_slab<pos:position pos:line="674" pos:column="38"/></name><argument_list pos:line="674" pos:column="38">(<argument><expr><operator pos:line="674" pos:column="39">&amp;<pos:position pos:line="674" pos:column="44"/></operator><name pos:line="674" pos:column="40">author_date<pos:position pos:line="674" pos:column="51"/></name></expr></argument>)<pos:position pos:line="674" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="674" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="675" pos:column="17">queue<pos:position pos:line="675" pos:column="22"/></name><operator pos:line="675" pos:column="22">.<pos:position pos:line="675" pos:column="23"/></operator><name pos:line="675" pos:column="23">compare<pos:position pos:line="675" pos:column="30"/></name></name> <operator pos:line="675" pos:column="31">=<pos:position pos:line="675" pos:column="32"/></operator> <name pos:line="675" pos:column="33">compare_commits_by_author_date<pos:position pos:line="675" pos:column="63"/></name></expr>;<pos:position pos:line="675" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="676" pos:column="17">queue<pos:position pos:line="676" pos:column="22"/></name><operator pos:line="676" pos:column="22">.<pos:position pos:line="676" pos:column="23"/></operator><name pos:line="676" pos:column="23">cb_data<pos:position pos:line="676" pos:column="30"/></name></name> <operator pos:line="676" pos:column="31">=<pos:position pos:line="676" pos:column="32"/></operator> <operator pos:line="676" pos:column="33">&amp;<pos:position pos:line="676" pos:column="38"/></operator><name pos:line="676" pos:column="34">author_date<pos:position pos:line="676" pos:column="45"/></name></expr>;<pos:position pos:line="676" pos:column="46"/></expr_stmt>
		<break pos:line="677" pos:column="17">break;<pos:position pos:line="677" pos:column="23"/></break>
	}<pos:position pos:line="678" pos:column="10"/></block></switch>

	<comment type="block" pos:line="680" pos:column="9">/* Mark them and clear the indegree */</comment>
	<for pos:line="681" pos:column="9">for <control pos:line="681" pos:column="13">(<init><expr><name pos:line="681" pos:column="14">next<pos:position pos:line="681" pos:column="18"/></name> <operator pos:line="681" pos:column="19">=<pos:position pos:line="681" pos:column="20"/></operator> <name pos:line="681" pos:column="21">orig<pos:position pos:line="681" pos:column="25"/></name></expr>;<pos:position pos:line="681" pos:column="26"/></init> <condition><expr><name pos:line="681" pos:column="27">next<pos:position pos:line="681" pos:column="31"/></name></expr>;<pos:position pos:line="681" pos:column="32"/></condition> <incr><expr><name pos:line="681" pos:column="33">next<pos:position pos:line="681" pos:column="37"/></name> <operator pos:line="681" pos:column="38">=<pos:position pos:line="681" pos:column="39"/></operator> <name><name pos:line="681" pos:column="40">next<pos:position pos:line="681" pos:column="44"/></name><operator pos:line="681" pos:column="44">-&gt;<pos:position pos:line="681" pos:column="49"/></operator><name pos:line="681" pos:column="46">next<pos:position pos:line="681" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="681" pos:column="51"/></control> <block pos:line="681" pos:column="52">{
		<decl_stmt><decl><type><name><name pos:line="682" pos:column="17">struct<pos:position pos:line="682" pos:column="23"/></name> <name pos:line="682" pos:column="24">commit<pos:position pos:line="682" pos:column="30"/></name></name> <modifier pos:line="682" pos:column="31">*<pos:position pos:line="682" pos:column="32"/></modifier></type><name pos:line="682" pos:column="32">commit<pos:position pos:line="682" pos:column="38"/></name> <init pos:line="682" pos:column="39">= <expr><name><name pos:line="682" pos:column="41">next<pos:position pos:line="682" pos:column="45"/></name><operator pos:line="682" pos:column="45">-&gt;<pos:position pos:line="682" pos:column="50"/></operator><name pos:line="682" pos:column="47">item<pos:position pos:line="682" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="682" pos:column="52"/></decl_stmt>
		<expr_stmt><expr><operator pos:line="683" pos:column="17">*<pos:position pos:line="683" pos:column="18"/></operator><operator pos:line="683" pos:column="18">(<pos:position pos:line="683" pos:column="19"/></operator><call><name pos:line="683" pos:column="19">indegree_slab_at<pos:position pos:line="683" pos:column="35"/></name><argument_list pos:line="683" pos:column="35">(<argument><expr><operator pos:line="683" pos:column="36">&amp;<pos:position pos:line="683" pos:column="41"/></operator><name pos:line="683" pos:column="37">indegree<pos:position pos:line="683" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="683" pos:column="47">commit<pos:position pos:line="683" pos:column="53"/></name></expr></argument>)<pos:position pos:line="683" pos:column="54"/></argument_list></call><operator pos:line="683" pos:column="54">)<pos:position pos:line="683" pos:column="55"/></operator> <operator pos:line="683" pos:column="56">=<pos:position pos:line="683" pos:column="57"/></operator> <literal type="number" pos:line="683" pos:column="58">1<pos:position pos:line="683" pos:column="59"/></literal></expr>;<pos:position pos:line="683" pos:column="60"/></expr_stmt>
		<comment type="block" pos:line="684" pos:column="17">/* also record the author dates, if needed */</comment>
		<if pos:line="685" pos:column="17">if <condition pos:line="685" pos:column="20">(<expr><name pos:line="685" pos:column="21">sort_order<pos:position pos:line="685" pos:column="31"/></name> <operator pos:line="685" pos:column="32">==<pos:position pos:line="685" pos:column="34"/></operator> <name pos:line="685" pos:column="35">REV_SORT_BY_AUTHOR_DATE<pos:position pos:line="685" pos:column="58"/></name></expr>)<pos:position pos:line="685" pos:column="59"/></condition><then pos:line="685" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="686" pos:column="25">record_author_date<pos:position pos:line="686" pos:column="43"/></name><argument_list pos:line="686" pos:column="43">(<argument><expr><operator pos:line="686" pos:column="44">&amp;<pos:position pos:line="686" pos:column="49"/></operator><name pos:line="686" pos:column="45">author_date<pos:position pos:line="686" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="686" pos:column="58">commit<pos:position pos:line="686" pos:column="64"/></name></expr></argument>)<pos:position pos:line="686" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="686" pos:column="66"/></expr_stmt></block></then></if>
	}<pos:position pos:line="687" pos:column="10"/></block></for>

	<comment type="block" pos:line="689" pos:column="9">/* update the indegree */</comment>
	<for pos:line="690" pos:column="9">for <control pos:line="690" pos:column="13">(<init><expr><name pos:line="690" pos:column="14">next<pos:position pos:line="690" pos:column="18"/></name> <operator pos:line="690" pos:column="19">=<pos:position pos:line="690" pos:column="20"/></operator> <name pos:line="690" pos:column="21">orig<pos:position pos:line="690" pos:column="25"/></name></expr>;<pos:position pos:line="690" pos:column="26"/></init> <condition><expr><name pos:line="690" pos:column="27">next<pos:position pos:line="690" pos:column="31"/></name></expr>;<pos:position pos:line="690" pos:column="32"/></condition> <incr><expr><name pos:line="690" pos:column="33">next<pos:position pos:line="690" pos:column="37"/></name> <operator pos:line="690" pos:column="38">=<pos:position pos:line="690" pos:column="39"/></operator> <name><name pos:line="690" pos:column="40">next<pos:position pos:line="690" pos:column="44"/></name><operator pos:line="690" pos:column="44">-&gt;<pos:position pos:line="690" pos:column="49"/></operator><name pos:line="690" pos:column="46">next<pos:position pos:line="690" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="690" pos:column="51"/></control> <block pos:line="690" pos:column="52">{
		<decl_stmt><decl><type><name><name pos:line="691" pos:column="17">struct<pos:position pos:line="691" pos:column="23"/></name> <name pos:line="691" pos:column="24">commit_list<pos:position pos:line="691" pos:column="35"/></name></name> <modifier pos:line="691" pos:column="36">*<pos:position pos:line="691" pos:column="37"/></modifier></type><name pos:line="691" pos:column="37">parents<pos:position pos:line="691" pos:column="44"/></name> <init pos:line="691" pos:column="45">= <expr><name><name pos:line="691" pos:column="47">next<pos:position pos:line="691" pos:column="51"/></name><operator pos:line="691" pos:column="51">-&gt;<pos:position pos:line="691" pos:column="56"/></operator><name pos:line="691" pos:column="53">item<pos:position pos:line="691" pos:column="57"/></name><operator pos:line="691" pos:column="57">-&gt;<pos:position pos:line="691" pos:column="62"/></operator><name pos:line="691" pos:column="59">parents<pos:position pos:line="691" pos:column="66"/></name></name></expr></init></decl>;<pos:position pos:line="691" pos:column="67"/></decl_stmt>
		<while pos:line="692" pos:column="17">while <condition pos:line="692" pos:column="23">(<expr><name pos:line="692" pos:column="24">parents<pos:position pos:line="692" pos:column="31"/></name></expr>)<pos:position pos:line="692" pos:column="32"/></condition> <block pos:line="692" pos:column="33">{
			<decl_stmt><decl><type><name><name pos:line="693" pos:column="25">struct<pos:position pos:line="693" pos:column="31"/></name> <name pos:line="693" pos:column="32">commit<pos:position pos:line="693" pos:column="38"/></name></name> <modifier pos:line="693" pos:column="39">*<pos:position pos:line="693" pos:column="40"/></modifier></type><name pos:line="693" pos:column="40">parent<pos:position pos:line="693" pos:column="46"/></name> <init pos:line="693" pos:column="47">= <expr><name><name pos:line="693" pos:column="49">parents<pos:position pos:line="693" pos:column="56"/></name><operator pos:line="693" pos:column="56">-&gt;<pos:position pos:line="693" pos:column="61"/></operator><name pos:line="693" pos:column="58">item<pos:position pos:line="693" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="693" pos:column="63"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="694" pos:column="25">int<pos:position pos:line="694" pos:column="28"/></name> <modifier pos:line="694" pos:column="29">*<pos:position pos:line="694" pos:column="30"/></modifier></type><name pos:line="694" pos:column="30">pi<pos:position pos:line="694" pos:column="32"/></name> <init pos:line="694" pos:column="33">= <expr><call><name pos:line="694" pos:column="35">indegree_slab_at<pos:position pos:line="694" pos:column="51"/></name><argument_list pos:line="694" pos:column="51">(<argument><expr><operator pos:line="694" pos:column="52">&amp;<pos:position pos:line="694" pos:column="57"/></operator><name pos:line="694" pos:column="53">indegree<pos:position pos:line="694" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="694" pos:column="63">parent<pos:position pos:line="694" pos:column="69"/></name></expr></argument>)<pos:position pos:line="694" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="694" pos:column="71"/></decl_stmt>

			<if pos:line="696" pos:column="25">if <condition pos:line="696" pos:column="28">(<expr><operator pos:line="696" pos:column="29">*<pos:position pos:line="696" pos:column="30"/></operator><name pos:line="696" pos:column="30">pi<pos:position pos:line="696" pos:column="32"/></name></expr>)<pos:position pos:line="696" pos:column="33"/></condition><then pos:line="696" pos:column="33">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="697" pos:column="33">(<pos:position pos:line="697" pos:column="34"/></operator><operator pos:line="697" pos:column="34">*<pos:position pos:line="697" pos:column="35"/></operator><name pos:line="697" pos:column="35">pi<pos:position pos:line="697" pos:column="37"/></name><operator pos:line="697" pos:column="37">)<pos:position pos:line="697" pos:column="38"/></operator><operator pos:line="697" pos:column="38">++<pos:position pos:line="697" pos:column="40"/></operator></expr>;<pos:position pos:line="697" pos:column="41"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="698" pos:column="25">parents<pos:position pos:line="698" pos:column="32"/></name> <operator pos:line="698" pos:column="33">=<pos:position pos:line="698" pos:column="34"/></operator> <name><name pos:line="698" pos:column="35">parents<pos:position pos:line="698" pos:column="42"/></name><operator pos:line="698" pos:column="42">-&gt;<pos:position pos:line="698" pos:column="47"/></operator><name pos:line="698" pos:column="44">next<pos:position pos:line="698" pos:column="48"/></name></name></expr>;<pos:position pos:line="698" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="699" pos:column="18"/></block></while>
	}<pos:position pos:line="700" pos:column="10"/></block></for>

	<comment type="block" pos:line="702" pos:column="9">/*
	 * find the tips
	 *
	 * tips are nodes not reachable from any other node in the list
	 *
	 * the tips serve as a starting set for the work queue.
	 */</comment>
	<for pos:line="709" pos:column="9">for <control pos:line="709" pos:column="13">(<init><expr><name pos:line="709" pos:column="14">next<pos:position pos:line="709" pos:column="18"/></name> <operator pos:line="709" pos:column="19">=<pos:position pos:line="709" pos:column="20"/></operator> <name pos:line="709" pos:column="21">orig<pos:position pos:line="709" pos:column="25"/></name></expr>;<pos:position pos:line="709" pos:column="26"/></init> <condition><expr><name pos:line="709" pos:column="27">next<pos:position pos:line="709" pos:column="31"/></name></expr>;<pos:position pos:line="709" pos:column="32"/></condition> <incr><expr><name pos:line="709" pos:column="33">next<pos:position pos:line="709" pos:column="37"/></name> <operator pos:line="709" pos:column="38">=<pos:position pos:line="709" pos:column="39"/></operator> <name><name pos:line="709" pos:column="40">next<pos:position pos:line="709" pos:column="44"/></name><operator pos:line="709" pos:column="44">-&gt;<pos:position pos:line="709" pos:column="49"/></operator><name pos:line="709" pos:column="46">next<pos:position pos:line="709" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="709" pos:column="51"/></control> <block pos:line="709" pos:column="52">{
		<decl_stmt><decl><type><name><name pos:line="710" pos:column="17">struct<pos:position pos:line="710" pos:column="23"/></name> <name pos:line="710" pos:column="24">commit<pos:position pos:line="710" pos:column="30"/></name></name> <modifier pos:line="710" pos:column="31">*<pos:position pos:line="710" pos:column="32"/></modifier></type><name pos:line="710" pos:column="32">commit<pos:position pos:line="710" pos:column="38"/></name> <init pos:line="710" pos:column="39">= <expr><name><name pos:line="710" pos:column="41">next<pos:position pos:line="710" pos:column="45"/></name><operator pos:line="710" pos:column="45">-&gt;<pos:position pos:line="710" pos:column="50"/></operator><name pos:line="710" pos:column="47">item<pos:position pos:line="710" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="710" pos:column="52"/></decl_stmt>

		<if pos:line="712" pos:column="17">if <condition pos:line="712" pos:column="20">(<expr><operator pos:line="712" pos:column="21">*<pos:position pos:line="712" pos:column="22"/></operator><operator pos:line="712" pos:column="22">(<pos:position pos:line="712" pos:column="23"/></operator><call><name pos:line="712" pos:column="23">indegree_slab_at<pos:position pos:line="712" pos:column="39"/></name><argument_list pos:line="712" pos:column="39">(<argument><expr><operator pos:line="712" pos:column="40">&amp;<pos:position pos:line="712" pos:column="45"/></operator><name pos:line="712" pos:column="41">indegree<pos:position pos:line="712" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="712" pos:column="51">commit<pos:position pos:line="712" pos:column="57"/></name></expr></argument>)<pos:position pos:line="712" pos:column="58"/></argument_list></call><operator pos:line="712" pos:column="58">)<pos:position pos:line="712" pos:column="59"/></operator> <operator pos:line="712" pos:column="60">==<pos:position pos:line="712" pos:column="62"/></operator> <literal type="number" pos:line="712" pos:column="63">1<pos:position pos:line="712" pos:column="64"/></literal></expr>)<pos:position pos:line="712" pos:column="65"/></condition><then pos:line="712" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="713" pos:column="25">prio_queue_put<pos:position pos:line="713" pos:column="39"/></name><argument_list pos:line="713" pos:column="39">(<argument><expr><operator pos:line="713" pos:column="40">&amp;<pos:position pos:line="713" pos:column="45"/></operator><name pos:line="713" pos:column="41">queue<pos:position pos:line="713" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="713" pos:column="48">commit<pos:position pos:line="713" pos:column="54"/></name></expr></argument>)<pos:position pos:line="713" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="713" pos:column="56"/></expr_stmt></block></then></if>
	}<pos:position pos:line="714" pos:column="10"/></block></for>

	<comment type="block" pos:line="716" pos:column="9">/*
	 * This is unfortunate; the initial tips need to be shown
	 * in the order given from the revision traversal machinery.
	 */</comment>
	<if pos:line="720" pos:column="9">if <condition pos:line="720" pos:column="12">(<expr><name pos:line="720" pos:column="13">sort_order<pos:position pos:line="720" pos:column="23"/></name> <operator pos:line="720" pos:column="24">==<pos:position pos:line="720" pos:column="26"/></operator> <name pos:line="720" pos:column="27">REV_SORT_IN_GRAPH_ORDER<pos:position pos:line="720" pos:column="50"/></name></expr>)<pos:position pos:line="720" pos:column="51"/></condition><then pos:line="720" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="721" pos:column="17">prio_queue_reverse<pos:position pos:line="721" pos:column="35"/></name><argument_list pos:line="721" pos:column="35">(<argument><expr><operator pos:line="721" pos:column="36">&amp;<pos:position pos:line="721" pos:column="41"/></operator><name pos:line="721" pos:column="37">queue<pos:position pos:line="721" pos:column="42"/></name></expr></argument>)<pos:position pos:line="721" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="721" pos:column="44"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="723" pos:column="9">/* We no longer need the commit list */</comment>
	<expr_stmt><expr><call><name pos:line="724" pos:column="9">free_commit_list<pos:position pos:line="724" pos:column="25"/></name><argument_list pos:line="724" pos:column="25">(<argument><expr><name pos:line="724" pos:column="26">orig<pos:position pos:line="724" pos:column="30"/></name></expr></argument>)<pos:position pos:line="724" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="724" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><name pos:line="726" pos:column="9">pptr<pos:position pos:line="726" pos:column="13"/></name> <operator pos:line="726" pos:column="14">=<pos:position pos:line="726" pos:column="15"/></operator> <name pos:line="726" pos:column="16">list<pos:position pos:line="726" pos:column="20"/></name></expr>;<pos:position pos:line="726" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="727" pos:column="9">*<pos:position pos:line="727" pos:column="10"/></operator><name pos:line="727" pos:column="10">list<pos:position pos:line="727" pos:column="14"/></name> <operator pos:line="727" pos:column="15">=<pos:position pos:line="727" pos:column="16"/></operator> <name pos:line="727" pos:column="17">NULL<pos:position pos:line="727" pos:column="21"/></name></expr>;<pos:position pos:line="727" pos:column="22"/></expr_stmt>
	<while pos:line="728" pos:column="9">while <condition pos:line="728" pos:column="15">(<expr><operator pos:line="728" pos:column="16">(<pos:position pos:line="728" pos:column="17"/></operator><name pos:line="728" pos:column="17">commit<pos:position pos:line="728" pos:column="23"/></name> <operator pos:line="728" pos:column="24">=<pos:position pos:line="728" pos:column="25"/></operator> <call><name pos:line="728" pos:column="26">prio_queue_get<pos:position pos:line="728" pos:column="40"/></name><argument_list pos:line="728" pos:column="40">(<argument><expr><operator pos:line="728" pos:column="41">&amp;<pos:position pos:line="728" pos:column="46"/></operator><name pos:line="728" pos:column="42">queue<pos:position pos:line="728" pos:column="47"/></name></expr></argument>)<pos:position pos:line="728" pos:column="48"/></argument_list></call><operator pos:line="728" pos:column="48">)<pos:position pos:line="728" pos:column="49"/></operator> <operator pos:line="728" pos:column="50">!=<pos:position pos:line="728" pos:column="52"/></operator> <name pos:line="728" pos:column="53">NULL<pos:position pos:line="728" pos:column="57"/></name></expr>)<pos:position pos:line="728" pos:column="58"/></condition> <block pos:line="728" pos:column="59">{
		<decl_stmt><decl><type><name><name pos:line="729" pos:column="17">struct<pos:position pos:line="729" pos:column="23"/></name> <name pos:line="729" pos:column="24">commit_list<pos:position pos:line="729" pos:column="35"/></name></name> <modifier pos:line="729" pos:column="36">*<pos:position pos:line="729" pos:column="37"/></modifier></type><name pos:line="729" pos:column="37">parents<pos:position pos:line="729" pos:column="44"/></name></decl>;<pos:position pos:line="729" pos:column="45"/></decl_stmt>

		<for pos:line="731" pos:column="17">for <control pos:line="731" pos:column="21">(<init><expr><name pos:line="731" pos:column="22">parents<pos:position pos:line="731" pos:column="29"/></name> <operator pos:line="731" pos:column="30">=<pos:position pos:line="731" pos:column="31"/></operator> <name><name pos:line="731" pos:column="32">commit<pos:position pos:line="731" pos:column="38"/></name><operator pos:line="731" pos:column="38">-&gt;<pos:position pos:line="731" pos:column="43"/></operator><name pos:line="731" pos:column="40">parents<pos:position pos:line="731" pos:column="47"/></name></name></expr>;<pos:position pos:line="731" pos:column="48"/></init> <condition><expr><name pos:line="731" pos:column="49">parents<pos:position pos:line="731" pos:column="56"/></name></expr> ;<pos:position pos:line="731" pos:column="58"/></condition> <incr><expr><name pos:line="731" pos:column="59">parents<pos:position pos:line="731" pos:column="66"/></name> <operator pos:line="731" pos:column="67">=<pos:position pos:line="731" pos:column="68"/></operator> <name><name pos:line="731" pos:column="69">parents<pos:position pos:line="731" pos:column="76"/></name><operator pos:line="731" pos:column="76">-&gt;<pos:position pos:line="731" pos:column="81"/></operator><name pos:line="731" pos:column="78">next<pos:position pos:line="731" pos:column="82"/></name></name></expr></incr>)<pos:position pos:line="731" pos:column="83"/></control> <block pos:line="731" pos:column="84">{
			<decl_stmt><decl><type><name><name pos:line="732" pos:column="25">struct<pos:position pos:line="732" pos:column="31"/></name> <name pos:line="732" pos:column="32">commit<pos:position pos:line="732" pos:column="38"/></name></name> <modifier pos:line="732" pos:column="39">*<pos:position pos:line="732" pos:column="40"/></modifier></type><name pos:line="732" pos:column="40">parent<pos:position pos:line="732" pos:column="46"/></name> <init pos:line="732" pos:column="47">= <expr><name><name pos:line="732" pos:column="49">parents<pos:position pos:line="732" pos:column="56"/></name><operator pos:line="732" pos:column="56">-&gt;<pos:position pos:line="732" pos:column="61"/></operator><name pos:line="732" pos:column="58">item<pos:position pos:line="732" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="732" pos:column="63"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="733" pos:column="25">int<pos:position pos:line="733" pos:column="28"/></name> <modifier pos:line="733" pos:column="29">*<pos:position pos:line="733" pos:column="30"/></modifier></type><name pos:line="733" pos:column="30">pi<pos:position pos:line="733" pos:column="32"/></name> <init pos:line="733" pos:column="33">= <expr><call><name pos:line="733" pos:column="35">indegree_slab_at<pos:position pos:line="733" pos:column="51"/></name><argument_list pos:line="733" pos:column="51">(<argument><expr><operator pos:line="733" pos:column="52">&amp;<pos:position pos:line="733" pos:column="57"/></operator><name pos:line="733" pos:column="53">indegree<pos:position pos:line="733" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="733" pos:column="63">parent<pos:position pos:line="733" pos:column="69"/></name></expr></argument>)<pos:position pos:line="733" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="733" pos:column="71"/></decl_stmt>

			<if pos:line="735" pos:column="25">if <condition pos:line="735" pos:column="28">(<expr><operator pos:line="735" pos:column="29">!<pos:position pos:line="735" pos:column="30"/></operator><operator pos:line="735" pos:column="30">*<pos:position pos:line="735" pos:column="31"/></operator><name pos:line="735" pos:column="31">pi<pos:position pos:line="735" pos:column="33"/></name></expr>)<pos:position pos:line="735" pos:column="34"/></condition><then pos:line="735" pos:column="34">
				<block type="pseudo"><continue pos:line="736" pos:column="33">continue;<pos:position pos:line="736" pos:column="42"/></continue></block></then></if>

			<comment type="block" pos:line="738" pos:column="25">/*
			 * parents are only enqueued for emission
			 * when all their children have been emitted thereby
			 * guaranteeing topological order.
			 */</comment>
			<if pos:line="743" pos:column="25">if <condition pos:line="743" pos:column="28">(<expr><operator pos:line="743" pos:column="29">--<pos:position pos:line="743" pos:column="31"/></operator><operator pos:line="743" pos:column="31">(<pos:position pos:line="743" pos:column="32"/></operator><operator pos:line="743" pos:column="32">*<pos:position pos:line="743" pos:column="33"/></operator><name pos:line="743" pos:column="33">pi<pos:position pos:line="743" pos:column="35"/></name><operator pos:line="743" pos:column="35">)<pos:position pos:line="743" pos:column="36"/></operator> <operator pos:line="743" pos:column="37">==<pos:position pos:line="743" pos:column="39"/></operator> <literal type="number" pos:line="743" pos:column="40">1<pos:position pos:line="743" pos:column="41"/></literal></expr>)<pos:position pos:line="743" pos:column="42"/></condition><then pos:line="743" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="744" pos:column="33">prio_queue_put<pos:position pos:line="744" pos:column="47"/></name><argument_list pos:line="744" pos:column="47">(<argument><expr><operator pos:line="744" pos:column="48">&amp;<pos:position pos:line="744" pos:column="53"/></operator><name pos:line="744" pos:column="49">queue<pos:position pos:line="744" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="744" pos:column="56">parent<pos:position pos:line="744" pos:column="62"/></name></expr></argument>)<pos:position pos:line="744" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="744" pos:column="64"/></expr_stmt></block></then></if>
		}<pos:position pos:line="745" pos:column="18"/></block></for>
		<comment type="block" pos:line="746" pos:column="17">/*
		 * all children of commit have already been
		 * emitted. we can emit it now.
		 */</comment>
		<expr_stmt><expr><operator pos:line="750" pos:column="17">*<pos:position pos:line="750" pos:column="18"/></operator><operator pos:line="750" pos:column="18">(<pos:position pos:line="750" pos:column="19"/></operator><call><name pos:line="750" pos:column="19">indegree_slab_at<pos:position pos:line="750" pos:column="35"/></name><argument_list pos:line="750" pos:column="35">(<argument><expr><operator pos:line="750" pos:column="36">&amp;<pos:position pos:line="750" pos:column="41"/></operator><name pos:line="750" pos:column="37">indegree<pos:position pos:line="750" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="750" pos:column="47">commit<pos:position pos:line="750" pos:column="53"/></name></expr></argument>)<pos:position pos:line="750" pos:column="54"/></argument_list></call><operator pos:line="750" pos:column="54">)<pos:position pos:line="750" pos:column="55"/></operator> <operator pos:line="750" pos:column="56">=<pos:position pos:line="750" pos:column="57"/></operator> <literal type="number" pos:line="750" pos:column="58">0<pos:position pos:line="750" pos:column="59"/></literal></expr>;<pos:position pos:line="750" pos:column="60"/></expr_stmt>

		<expr_stmt><expr><name pos:line="752" pos:column="17">pptr<pos:position pos:line="752" pos:column="21"/></name> <operator pos:line="752" pos:column="22">=<pos:position pos:line="752" pos:column="23"/></operator> <operator pos:line="752" pos:column="24">&amp;<pos:position pos:line="752" pos:column="29"/></operator><call><name pos:line="752" pos:column="25">commit_list_insert<pos:position pos:line="752" pos:column="43"/></name><argument_list pos:line="752" pos:column="43">(<argument><expr><name pos:line="752" pos:column="44">commit<pos:position pos:line="752" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="752" pos:column="52">pptr<pos:position pos:line="752" pos:column="56"/></name></expr></argument>)<pos:position pos:line="752" pos:column="57"/></argument_list></call><operator pos:line="752" pos:column="57">-&gt;<pos:position pos:line="752" pos:column="62"/></operator><name pos:line="752" pos:column="59">next<pos:position pos:line="752" pos:column="63"/></name></expr>;<pos:position pos:line="752" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="753" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="755" pos:column="9">clear_indegree_slab<pos:position pos:line="755" pos:column="28"/></name><argument_list pos:line="755" pos:column="28">(<argument><expr><operator pos:line="755" pos:column="29">&amp;<pos:position pos:line="755" pos:column="34"/></operator><name pos:line="755" pos:column="30">indegree<pos:position pos:line="755" pos:column="38"/></name></expr></argument>)<pos:position pos:line="755" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="755" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="756" pos:column="9">clear_prio_queue<pos:position pos:line="756" pos:column="25"/></name><argument_list pos:line="756" pos:column="25">(<argument><expr><operator pos:line="756" pos:column="26">&amp;<pos:position pos:line="756" pos:column="31"/></operator><name pos:line="756" pos:column="27">queue<pos:position pos:line="756" pos:column="32"/></name></expr></argument>)<pos:position pos:line="756" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="756" pos:column="34"/></expr_stmt>
	<if pos:line="757" pos:column="9">if <condition pos:line="757" pos:column="12">(<expr><name pos:line="757" pos:column="13">sort_order<pos:position pos:line="757" pos:column="23"/></name> <operator pos:line="757" pos:column="24">==<pos:position pos:line="757" pos:column="26"/></operator> <name pos:line="757" pos:column="27">REV_SORT_BY_AUTHOR_DATE<pos:position pos:line="757" pos:column="50"/></name></expr>)<pos:position pos:line="757" pos:column="51"/></condition><then pos:line="757" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="758" pos:column="17">clear_author_date_slab<pos:position pos:line="758" pos:column="39"/></name><argument_list pos:line="758" pos:column="39">(<argument><expr><operator pos:line="758" pos:column="40">&amp;<pos:position pos:line="758" pos:column="45"/></operator><name pos:line="758" pos:column="41">author_date<pos:position pos:line="758" pos:column="52"/></name></expr></argument>)<pos:position pos:line="758" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="758" pos:column="54"/></expr_stmt></block></then></if>
}<pos:position pos:line="759" pos:column="2"/></block></function>

<comment type="block" pos:line="761" pos:column="1">/* merge-base stuff */</comment>

<comment type="block" pos:line="763" pos:column="1">/* Remember to update object flag allocation in object.h */</comment>
<cpp:define pos:line="764" pos:column="1">#<cpp:directive pos:line="764" pos:column="2">define<pos:position pos:line="764" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="764" pos:column="9">PARENT1<pos:position pos:line="764" pos:column="16"/></name></cpp:macro>		<cpp:value pos:line="764" pos:column="25">(1u&lt;&lt;16)<pos:position pos:line="764" pos:column="33"/></cpp:value></cpp:define>
<cpp:define pos:line="765" pos:column="1">#<cpp:directive pos:line="765" pos:column="2">define<pos:position pos:line="765" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="765" pos:column="9">PARENT2<pos:position pos:line="765" pos:column="16"/></name></cpp:macro>		<cpp:value pos:line="765" pos:column="25">(1u&lt;&lt;17)<pos:position pos:line="765" pos:column="33"/></cpp:value></cpp:define>
<cpp:define pos:line="766" pos:column="1">#<cpp:directive pos:line="766" pos:column="2">define<pos:position pos:line="766" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="766" pos:column="9">STALE<pos:position pos:line="766" pos:column="14"/></name></cpp:macro>		<cpp:value pos:line="766" pos:column="25">(1u&lt;&lt;18)<pos:position pos:line="766" pos:column="33"/></cpp:value></cpp:define>
<cpp:define pos:line="767" pos:column="1">#<cpp:directive pos:line="767" pos:column="2">define<pos:position pos:line="767" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="767" pos:column="9">RESULT<pos:position pos:line="767" pos:column="15"/></name></cpp:macro>		<cpp:value pos:line="767" pos:column="25">(1u&lt;&lt;19)<pos:position pos:line="767" pos:column="33"/></cpp:value></cpp:define>

<decl_stmt><decl><specifier pos:line="769" pos:column="1">static<pos:position pos:line="769" pos:column="7"/></specifier> <type><specifier pos:line="769" pos:column="8">const<pos:position pos:line="769" pos:column="13"/></specifier> <name pos:line="769" pos:column="14">unsigned<pos:position pos:line="769" pos:column="22"/></name></type> <name pos:line="769" pos:column="23">all_flags<pos:position pos:line="769" pos:column="32"/></name> <init pos:line="769" pos:column="33">= <expr><operator pos:line="769" pos:column="35">(<pos:position pos:line="769" pos:column="36"/></operator><name pos:line="769" pos:column="36">PARENT1<pos:position pos:line="769" pos:column="43"/></name> <operator pos:line="769" pos:column="44">|<pos:position pos:line="769" pos:column="45"/></operator> <name pos:line="769" pos:column="46">PARENT2<pos:position pos:line="769" pos:column="53"/></name> <operator pos:line="769" pos:column="54">|<pos:position pos:line="769" pos:column="55"/></operator> <name pos:line="769" pos:column="56">STALE<pos:position pos:line="769" pos:column="61"/></name> <operator pos:line="769" pos:column="62">|<pos:position pos:line="769" pos:column="63"/></operator> <name pos:line="769" pos:column="64">RESULT<pos:position pos:line="769" pos:column="70"/></name><operator pos:line="769" pos:column="70">)<pos:position pos:line="769" pos:column="71"/></operator></expr></init></decl>;<pos:position pos:line="769" pos:column="72"/></decl_stmt>

<function><specifier pos:line="771" pos:column="1">static<pos:position pos:line="771" pos:column="7"/></specifier> <type><name pos:line="771" pos:column="8">int<pos:position pos:line="771" pos:column="11"/></name></type> <name pos:line="771" pos:column="12">queue_has_nonstale<pos:position pos:line="771" pos:column="30"/></name><parameter_list pos:line="771" pos:column="30">(<parameter><decl><type><name><name pos:line="771" pos:column="31">struct<pos:position pos:line="771" pos:column="37"/></name> <name pos:line="771" pos:column="38">prio_queue<pos:position pos:line="771" pos:column="48"/></name></name> <modifier pos:line="771" pos:column="49">*<pos:position pos:line="771" pos:column="50"/></modifier></type><name pos:line="771" pos:column="50">queue<pos:position pos:line="771" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="771" pos:column="56"/></parameter_list>
<block pos:line="772" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="773" pos:column="9">int<pos:position pos:line="773" pos:column="12"/></name></type> <name pos:line="773" pos:column="13">i<pos:position pos:line="773" pos:column="14"/></name></decl>;<pos:position pos:line="773" pos:column="15"/></decl_stmt>
	<for pos:line="774" pos:column="9">for <control pos:line="774" pos:column="13">(<init><expr><name pos:line="774" pos:column="14">i<pos:position pos:line="774" pos:column="15"/></name> <operator pos:line="774" pos:column="16">=<pos:position pos:line="774" pos:column="17"/></operator> <literal type="number" pos:line="774" pos:column="18">0<pos:position pos:line="774" pos:column="19"/></literal></expr>;<pos:position pos:line="774" pos:column="20"/></init> <condition><expr><name pos:line="774" pos:column="21">i<pos:position pos:line="774" pos:column="22"/></name> <operator pos:line="774" pos:column="23">&lt;<pos:position pos:line="774" pos:column="27"/></operator> <name><name pos:line="774" pos:column="25">queue<pos:position pos:line="774" pos:column="30"/></name><operator pos:line="774" pos:column="30">-&gt;<pos:position pos:line="774" pos:column="35"/></operator><name pos:line="774" pos:column="32">nr<pos:position pos:line="774" pos:column="34"/></name></name></expr>;<pos:position pos:line="774" pos:column="35"/></condition> <incr><expr><name pos:line="774" pos:column="36">i<pos:position pos:line="774" pos:column="37"/></name><operator pos:line="774" pos:column="37">++<pos:position pos:line="774" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="774" pos:column="40"/></control> <block pos:line="774" pos:column="41">{
		<decl_stmt><decl><type><name><name pos:line="775" pos:column="17">struct<pos:position pos:line="775" pos:column="23"/></name> <name pos:line="775" pos:column="24">commit<pos:position pos:line="775" pos:column="30"/></name></name> <modifier pos:line="775" pos:column="31">*<pos:position pos:line="775" pos:column="32"/></modifier></type><name pos:line="775" pos:column="32">commit<pos:position pos:line="775" pos:column="38"/></name> <init pos:line="775" pos:column="39">= <expr><name><name pos:line="775" pos:column="41">queue<pos:position pos:line="775" pos:column="46"/></name><operator pos:line="775" pos:column="46">-&gt;<pos:position pos:line="775" pos:column="51"/></operator><name pos:line="775" pos:column="48">array<pos:position pos:line="775" pos:column="53"/></name><index pos:line="775" pos:column="53">[<expr><name pos:line="775" pos:column="54">i<pos:position pos:line="775" pos:column="55"/></name></expr>]<pos:position pos:line="775" pos:column="56"/></index></name><operator pos:line="775" pos:column="56">.<pos:position pos:line="775" pos:column="57"/></operator><name pos:line="775" pos:column="57">data<pos:position pos:line="775" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="775" pos:column="62"/></decl_stmt>
		<if pos:line="776" pos:column="17">if <condition pos:line="776" pos:column="20">(<expr><operator pos:line="776" pos:column="21">!<pos:position pos:line="776" pos:column="22"/></operator><operator pos:line="776" pos:column="22">(<pos:position pos:line="776" pos:column="23"/></operator><name><name pos:line="776" pos:column="23">commit<pos:position pos:line="776" pos:column="29"/></name><operator pos:line="776" pos:column="29">-&gt;<pos:position pos:line="776" pos:column="34"/></operator><name pos:line="776" pos:column="31">object<pos:position pos:line="776" pos:column="37"/></name><operator pos:line="776" pos:column="37">.<pos:position pos:line="776" pos:column="38"/></operator><name pos:line="776" pos:column="38">flags<pos:position pos:line="776" pos:column="43"/></name></name> <operator pos:line="776" pos:column="44">&amp;<pos:position pos:line="776" pos:column="49"/></operator> <name pos:line="776" pos:column="46">STALE<pos:position pos:line="776" pos:column="51"/></name><operator pos:line="776" pos:column="51">)<pos:position pos:line="776" pos:column="52"/></operator></expr>)<pos:position pos:line="776" pos:column="53"/></condition><then pos:line="776" pos:column="53">
			<block type="pseudo"><return pos:line="777" pos:column="25">return <expr><literal type="number" pos:line="777" pos:column="32">1<pos:position pos:line="777" pos:column="33"/></literal></expr>;<pos:position pos:line="777" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="778" pos:column="10"/></block></for>
	<return pos:line="779" pos:column="9">return <expr><literal type="number" pos:line="779" pos:column="16">0<pos:position pos:line="779" pos:column="17"/></literal></expr>;<pos:position pos:line="779" pos:column="18"/></return>
}<pos:position pos:line="780" pos:column="2"/></block></function>

<comment type="block" pos:line="782" pos:column="1">/* all input commits in one and twos[] must have been parsed! */</comment>
<function><specifier pos:line="783" pos:column="1">static<pos:position pos:line="783" pos:column="7"/></specifier> <type><name><name pos:line="783" pos:column="8">struct<pos:position pos:line="783" pos:column="14"/></name> <name pos:line="783" pos:column="15">commit_list<pos:position pos:line="783" pos:column="26"/></name></name> <modifier pos:line="783" pos:column="27">*<pos:position pos:line="783" pos:column="28"/></modifier></type><name pos:line="783" pos:column="28">paint_down_to_common<pos:position pos:line="783" pos:column="48"/></name><parameter_list pos:line="783" pos:column="48">(<parameter><decl><type><name><name pos:line="783" pos:column="49">struct<pos:position pos:line="783" pos:column="55"/></name> <name pos:line="783" pos:column="56">commit<pos:position pos:line="783" pos:column="62"/></name></name> <modifier pos:line="783" pos:column="63">*<pos:position pos:line="783" pos:column="64"/></modifier></type><name pos:line="783" pos:column="64">one<pos:position pos:line="783" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="783" pos:column="69">int<pos:position pos:line="783" pos:column="72"/></name></type> <name pos:line="783" pos:column="73">n<pos:position pos:line="783" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="783" pos:column="76">struct<pos:position pos:line="783" pos:column="82"/></name> <name pos:line="783" pos:column="83">commit<pos:position pos:line="783" pos:column="89"/></name></name> <modifier pos:line="783" pos:column="90">*<pos:position pos:line="783" pos:column="91"/></modifier><modifier pos:line="783" pos:column="91">*<pos:position pos:line="783" pos:column="92"/></modifier></type><name pos:line="783" pos:column="92">twos<pos:position pos:line="783" pos:column="96"/></name></decl></parameter>)<pos:position pos:line="783" pos:column="97"/></parameter_list>
<block pos:line="784" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="785" pos:column="9">struct<pos:position pos:line="785" pos:column="15"/></name> <name pos:line="785" pos:column="16">prio_queue<pos:position pos:line="785" pos:column="26"/></name></name></type> <name pos:line="785" pos:column="27">queue<pos:position pos:line="785" pos:column="32"/></name> <init pos:line="785" pos:column="33">= <expr><block pos:line="785" pos:column="35">{ <expr><name pos:line="785" pos:column="37">compare_commits_by_commit_date<pos:position pos:line="785" pos:column="67"/></name></expr> }<pos:position pos:line="785" pos:column="69"/></block></expr></init></decl>;<pos:position pos:line="785" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="786" pos:column="9">struct<pos:position pos:line="786" pos:column="15"/></name> <name pos:line="786" pos:column="16">commit_list<pos:position pos:line="786" pos:column="27"/></name></name> <modifier pos:line="786" pos:column="28">*<pos:position pos:line="786" pos:column="29"/></modifier></type><name pos:line="786" pos:column="29">result<pos:position pos:line="786" pos:column="35"/></name> <init pos:line="786" pos:column="36">= <expr><name pos:line="786" pos:column="38">NULL<pos:position pos:line="786" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="786" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="787" pos:column="9">int<pos:position pos:line="787" pos:column="12"/></name></type> <name pos:line="787" pos:column="13">i<pos:position pos:line="787" pos:column="14"/></name></decl>;<pos:position pos:line="787" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="789" pos:column="9">one<pos:position pos:line="789" pos:column="12"/></name><operator pos:line="789" pos:column="12">-&gt;<pos:position pos:line="789" pos:column="17"/></operator><name pos:line="789" pos:column="14">object<pos:position pos:line="789" pos:column="20"/></name><operator pos:line="789" pos:column="20">.<pos:position pos:line="789" pos:column="21"/></operator><name pos:line="789" pos:column="21">flags<pos:position pos:line="789" pos:column="26"/></name></name> <operator pos:line="789" pos:column="27">|=<pos:position pos:line="789" pos:column="29"/></operator> <name pos:line="789" pos:column="30">PARENT1<pos:position pos:line="789" pos:column="37"/></name></expr>;<pos:position pos:line="789" pos:column="38"/></expr_stmt>
	<if pos:line="790" pos:column="9">if <condition pos:line="790" pos:column="12">(<expr><operator pos:line="790" pos:column="13">!<pos:position pos:line="790" pos:column="14"/></operator><name pos:line="790" pos:column="14">n<pos:position pos:line="790" pos:column="15"/></name></expr>)<pos:position pos:line="790" pos:column="16"/></condition><then pos:line="790" pos:column="16"> <block pos:line="790" pos:column="17">{
		<expr_stmt><expr><call><name pos:line="791" pos:column="17">commit_list_append<pos:position pos:line="791" pos:column="35"/></name><argument_list pos:line="791" pos:column="35">(<argument><expr><name pos:line="791" pos:column="36">one<pos:position pos:line="791" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="791" pos:column="41">&amp;<pos:position pos:line="791" pos:column="46"/></operator><name pos:line="791" pos:column="42">result<pos:position pos:line="791" pos:column="48"/></name></expr></argument>)<pos:position pos:line="791" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="791" pos:column="50"/></expr_stmt>
		<return pos:line="792" pos:column="17">return <expr><name pos:line="792" pos:column="24">result<pos:position pos:line="792" pos:column="30"/></name></expr>;<pos:position pos:line="792" pos:column="31"/></return>
	}<pos:position pos:line="793" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="794" pos:column="9">prio_queue_put<pos:position pos:line="794" pos:column="23"/></name><argument_list pos:line="794" pos:column="23">(<argument><expr><operator pos:line="794" pos:column="24">&amp;<pos:position pos:line="794" pos:column="29"/></operator><name pos:line="794" pos:column="25">queue<pos:position pos:line="794" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="794" pos:column="32">one<pos:position pos:line="794" pos:column="35"/></name></expr></argument>)<pos:position pos:line="794" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="794" pos:column="37"/></expr_stmt>

	<for pos:line="796" pos:column="9">for <control pos:line="796" pos:column="13">(<init><expr><name pos:line="796" pos:column="14">i<pos:position pos:line="796" pos:column="15"/></name> <operator pos:line="796" pos:column="16">=<pos:position pos:line="796" pos:column="17"/></operator> <literal type="number" pos:line="796" pos:column="18">0<pos:position pos:line="796" pos:column="19"/></literal></expr>;<pos:position pos:line="796" pos:column="20"/></init> <condition><expr><name pos:line="796" pos:column="21">i<pos:position pos:line="796" pos:column="22"/></name> <operator pos:line="796" pos:column="23">&lt;<pos:position pos:line="796" pos:column="27"/></operator> <name pos:line="796" pos:column="25">n<pos:position pos:line="796" pos:column="26"/></name></expr>;<pos:position pos:line="796" pos:column="27"/></condition> <incr><expr><name pos:line="796" pos:column="28">i<pos:position pos:line="796" pos:column="29"/></name><operator pos:line="796" pos:column="29">++<pos:position pos:line="796" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="796" pos:column="32"/></control> <block pos:line="796" pos:column="33">{
		<expr_stmt><expr><name><name pos:line="797" pos:column="17">twos<pos:position pos:line="797" pos:column="21"/></name><index pos:line="797" pos:column="21">[<expr><name pos:line="797" pos:column="22">i<pos:position pos:line="797" pos:column="23"/></name></expr>]<pos:position pos:line="797" pos:column="24"/></index></name><operator pos:line="797" pos:column="24">-&gt;<pos:position pos:line="797" pos:column="29"/></operator><name><name pos:line="797" pos:column="26">object<pos:position pos:line="797" pos:column="32"/></name><operator pos:line="797" pos:column="32">.<pos:position pos:line="797" pos:column="33"/></operator><name pos:line="797" pos:column="33">flags<pos:position pos:line="797" pos:column="38"/></name></name> <operator pos:line="797" pos:column="39">|=<pos:position pos:line="797" pos:column="41"/></operator> <name pos:line="797" pos:column="42">PARENT2<pos:position pos:line="797" pos:column="49"/></name></expr>;<pos:position pos:line="797" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="798" pos:column="17">prio_queue_put<pos:position pos:line="798" pos:column="31"/></name><argument_list pos:line="798" pos:column="31">(<argument><expr><operator pos:line="798" pos:column="32">&amp;<pos:position pos:line="798" pos:column="37"/></operator><name pos:line="798" pos:column="33">queue<pos:position pos:line="798" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="798" pos:column="40">twos<pos:position pos:line="798" pos:column="44"/></name><index pos:line="798" pos:column="44">[<expr><name pos:line="798" pos:column="45">i<pos:position pos:line="798" pos:column="46"/></name></expr>]<pos:position pos:line="798" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="798" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="798" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="799" pos:column="10"/></block></for>

	<while pos:line="801" pos:column="9">while <condition pos:line="801" pos:column="15">(<expr><call><name pos:line="801" pos:column="16">queue_has_nonstale<pos:position pos:line="801" pos:column="34"/></name><argument_list pos:line="801" pos:column="34">(<argument><expr><operator pos:line="801" pos:column="35">&amp;<pos:position pos:line="801" pos:column="40"/></operator><name pos:line="801" pos:column="36">queue<pos:position pos:line="801" pos:column="41"/></name></expr></argument>)<pos:position pos:line="801" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="801" pos:column="43"/></condition> <block pos:line="801" pos:column="44">{
		<decl_stmt><decl><type><name><name pos:line="802" pos:column="17">struct<pos:position pos:line="802" pos:column="23"/></name> <name pos:line="802" pos:column="24">commit<pos:position pos:line="802" pos:column="30"/></name></name> <modifier pos:line="802" pos:column="31">*<pos:position pos:line="802" pos:column="32"/></modifier></type><name pos:line="802" pos:column="32">commit<pos:position pos:line="802" pos:column="38"/></name> <init pos:line="802" pos:column="39">= <expr><call><name pos:line="802" pos:column="41">prio_queue_get<pos:position pos:line="802" pos:column="55"/></name><argument_list pos:line="802" pos:column="55">(<argument><expr><operator pos:line="802" pos:column="56">&amp;<pos:position pos:line="802" pos:column="61"/></operator><name pos:line="802" pos:column="57">queue<pos:position pos:line="802" pos:column="62"/></name></expr></argument>)<pos:position pos:line="802" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="802" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="803" pos:column="17">struct<pos:position pos:line="803" pos:column="23"/></name> <name pos:line="803" pos:column="24">commit_list<pos:position pos:line="803" pos:column="35"/></name></name> <modifier pos:line="803" pos:column="36">*<pos:position pos:line="803" pos:column="37"/></modifier></type><name pos:line="803" pos:column="37">parents<pos:position pos:line="803" pos:column="44"/></name></decl>;<pos:position pos:line="803" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="804" pos:column="17">int<pos:position pos:line="804" pos:column="20"/></name></type> <name pos:line="804" pos:column="21">flags<pos:position pos:line="804" pos:column="26"/></name></decl>;<pos:position pos:line="804" pos:column="27"/></decl_stmt>

		<expr_stmt><expr><name pos:line="806" pos:column="17">flags<pos:position pos:line="806" pos:column="22"/></name> <operator pos:line="806" pos:column="23">=<pos:position pos:line="806" pos:column="24"/></operator> <name><name pos:line="806" pos:column="25">commit<pos:position pos:line="806" pos:column="31"/></name><operator pos:line="806" pos:column="31">-&gt;<pos:position pos:line="806" pos:column="36"/></operator><name pos:line="806" pos:column="33">object<pos:position pos:line="806" pos:column="39"/></name><operator pos:line="806" pos:column="39">.<pos:position pos:line="806" pos:column="40"/></operator><name pos:line="806" pos:column="40">flags<pos:position pos:line="806" pos:column="45"/></name></name> <operator pos:line="806" pos:column="46">&amp;<pos:position pos:line="806" pos:column="51"/></operator> <operator pos:line="806" pos:column="48">(<pos:position pos:line="806" pos:column="49"/></operator><name pos:line="806" pos:column="49">PARENT1<pos:position pos:line="806" pos:column="56"/></name> <operator pos:line="806" pos:column="57">|<pos:position pos:line="806" pos:column="58"/></operator> <name pos:line="806" pos:column="59">PARENT2<pos:position pos:line="806" pos:column="66"/></name> <operator pos:line="806" pos:column="67">|<pos:position pos:line="806" pos:column="68"/></operator> <name pos:line="806" pos:column="69">STALE<pos:position pos:line="806" pos:column="74"/></name><operator pos:line="806" pos:column="74">)<pos:position pos:line="806" pos:column="75"/></operator></expr>;<pos:position pos:line="806" pos:column="76"/></expr_stmt>
		<if pos:line="807" pos:column="17">if <condition pos:line="807" pos:column="20">(<expr><name pos:line="807" pos:column="21">flags<pos:position pos:line="807" pos:column="26"/></name> <operator pos:line="807" pos:column="27">==<pos:position pos:line="807" pos:column="29"/></operator> <operator pos:line="807" pos:column="30">(<pos:position pos:line="807" pos:column="31"/></operator><name pos:line="807" pos:column="31">PARENT1<pos:position pos:line="807" pos:column="38"/></name> <operator pos:line="807" pos:column="39">|<pos:position pos:line="807" pos:column="40"/></operator> <name pos:line="807" pos:column="41">PARENT2<pos:position pos:line="807" pos:column="48"/></name><operator pos:line="807" pos:column="48">)<pos:position pos:line="807" pos:column="49"/></operator></expr>)<pos:position pos:line="807" pos:column="50"/></condition><then pos:line="807" pos:column="50"> <block pos:line="807" pos:column="51">{
			<if pos:line="808" pos:column="25">if <condition pos:line="808" pos:column="28">(<expr><operator pos:line="808" pos:column="29">!<pos:position pos:line="808" pos:column="30"/></operator><operator pos:line="808" pos:column="30">(<pos:position pos:line="808" pos:column="31"/></operator><name><name pos:line="808" pos:column="31">commit<pos:position pos:line="808" pos:column="37"/></name><operator pos:line="808" pos:column="37">-&gt;<pos:position pos:line="808" pos:column="42"/></operator><name pos:line="808" pos:column="39">object<pos:position pos:line="808" pos:column="45"/></name><operator pos:line="808" pos:column="45">.<pos:position pos:line="808" pos:column="46"/></operator><name pos:line="808" pos:column="46">flags<pos:position pos:line="808" pos:column="51"/></name></name> <operator pos:line="808" pos:column="52">&amp;<pos:position pos:line="808" pos:column="57"/></operator> <name pos:line="808" pos:column="54">RESULT<pos:position pos:line="808" pos:column="60"/></name><operator pos:line="808" pos:column="60">)<pos:position pos:line="808" pos:column="61"/></operator></expr>)<pos:position pos:line="808" pos:column="62"/></condition><then pos:line="808" pos:column="62"> <block pos:line="808" pos:column="63">{
				<expr_stmt><expr><name><name pos:line="809" pos:column="33">commit<pos:position pos:line="809" pos:column="39"/></name><operator pos:line="809" pos:column="39">-&gt;<pos:position pos:line="809" pos:column="44"/></operator><name pos:line="809" pos:column="41">object<pos:position pos:line="809" pos:column="47"/></name><operator pos:line="809" pos:column="47">.<pos:position pos:line="809" pos:column="48"/></operator><name pos:line="809" pos:column="48">flags<pos:position pos:line="809" pos:column="53"/></name></name> <operator pos:line="809" pos:column="54">|=<pos:position pos:line="809" pos:column="56"/></operator> <name pos:line="809" pos:column="57">RESULT<pos:position pos:line="809" pos:column="63"/></name></expr>;<pos:position pos:line="809" pos:column="64"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="810" pos:column="33">commit_list_insert_by_date<pos:position pos:line="810" pos:column="59"/></name><argument_list pos:line="810" pos:column="59">(<argument><expr><name pos:line="810" pos:column="60">commit<pos:position pos:line="810" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="810" pos:column="68">&amp;<pos:position pos:line="810" pos:column="73"/></operator><name pos:line="810" pos:column="69">result<pos:position pos:line="810" pos:column="75"/></name></expr></argument>)<pos:position pos:line="810" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="810" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="811" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="812" pos:column="25">/* Mark parents of a found merge stale */</comment>
			<expr_stmt><expr><name pos:line="813" pos:column="25">flags<pos:position pos:line="813" pos:column="30"/></name> <operator pos:line="813" pos:column="31">|=<pos:position pos:line="813" pos:column="33"/></operator> <name pos:line="813" pos:column="34">STALE<pos:position pos:line="813" pos:column="39"/></name></expr>;<pos:position pos:line="813" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="814" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="815" pos:column="17">parents<pos:position pos:line="815" pos:column="24"/></name> <operator pos:line="815" pos:column="25">=<pos:position pos:line="815" pos:column="26"/></operator> <name><name pos:line="815" pos:column="27">commit<pos:position pos:line="815" pos:column="33"/></name><operator pos:line="815" pos:column="33">-&gt;<pos:position pos:line="815" pos:column="38"/></operator><name pos:line="815" pos:column="35">parents<pos:position pos:line="815" pos:column="42"/></name></name></expr>;<pos:position pos:line="815" pos:column="43"/></expr_stmt>
		<while pos:line="816" pos:column="17">while <condition pos:line="816" pos:column="23">(<expr><name pos:line="816" pos:column="24">parents<pos:position pos:line="816" pos:column="31"/></name></expr>)<pos:position pos:line="816" pos:column="32"/></condition> <block pos:line="816" pos:column="33">{
			<decl_stmt><decl><type><name><name pos:line="817" pos:column="25">struct<pos:position pos:line="817" pos:column="31"/></name> <name pos:line="817" pos:column="32">commit<pos:position pos:line="817" pos:column="38"/></name></name> <modifier pos:line="817" pos:column="39">*<pos:position pos:line="817" pos:column="40"/></modifier></type><name pos:line="817" pos:column="40">p<pos:position pos:line="817" pos:column="41"/></name> <init pos:line="817" pos:column="42">= <expr><name><name pos:line="817" pos:column="44">parents<pos:position pos:line="817" pos:column="51"/></name><operator pos:line="817" pos:column="51">-&gt;<pos:position pos:line="817" pos:column="56"/></operator><name pos:line="817" pos:column="53">item<pos:position pos:line="817" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="817" pos:column="58"/></decl_stmt>
			<expr_stmt><expr><name pos:line="818" pos:column="25">parents<pos:position pos:line="818" pos:column="32"/></name> <operator pos:line="818" pos:column="33">=<pos:position pos:line="818" pos:column="34"/></operator> <name><name pos:line="818" pos:column="35">parents<pos:position pos:line="818" pos:column="42"/></name><operator pos:line="818" pos:column="42">-&gt;<pos:position pos:line="818" pos:column="47"/></operator><name pos:line="818" pos:column="44">next<pos:position pos:line="818" pos:column="48"/></name></name></expr>;<pos:position pos:line="818" pos:column="49"/></expr_stmt>
			<if pos:line="819" pos:column="25">if <condition pos:line="819" pos:column="28">(<expr><operator pos:line="819" pos:column="29">(<pos:position pos:line="819" pos:column="30"/></operator><name><name pos:line="819" pos:column="30">p<pos:position pos:line="819" pos:column="31"/></name><operator pos:line="819" pos:column="31">-&gt;<pos:position pos:line="819" pos:column="36"/></operator><name pos:line="819" pos:column="33">object<pos:position pos:line="819" pos:column="39"/></name><operator pos:line="819" pos:column="39">.<pos:position pos:line="819" pos:column="40"/></operator><name pos:line="819" pos:column="40">flags<pos:position pos:line="819" pos:column="45"/></name></name> <operator pos:line="819" pos:column="46">&amp;<pos:position pos:line="819" pos:column="51"/></operator> <name pos:line="819" pos:column="48">flags<pos:position pos:line="819" pos:column="53"/></name><operator pos:line="819" pos:column="53">)<pos:position pos:line="819" pos:column="54"/></operator> <operator pos:line="819" pos:column="55">==<pos:position pos:line="819" pos:column="57"/></operator> <name pos:line="819" pos:column="58">flags<pos:position pos:line="819" pos:column="63"/></name></expr>)<pos:position pos:line="819" pos:column="64"/></condition><then pos:line="819" pos:column="64">
				<block type="pseudo"><continue pos:line="820" pos:column="33">continue;<pos:position pos:line="820" pos:column="42"/></continue></block></then></if>
			<if pos:line="821" pos:column="25">if <condition pos:line="821" pos:column="28">(<expr><call><name pos:line="821" pos:column="29">parse_commit<pos:position pos:line="821" pos:column="41"/></name><argument_list pos:line="821" pos:column="41">(<argument><expr><name pos:line="821" pos:column="42">p<pos:position pos:line="821" pos:column="43"/></name></expr></argument>)<pos:position pos:line="821" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="821" pos:column="45"/></condition><then pos:line="821" pos:column="45">
				<block type="pseudo"><return pos:line="822" pos:column="33">return <expr><name pos:line="822" pos:column="40">NULL<pos:position pos:line="822" pos:column="44"/></name></expr>;<pos:position pos:line="822" pos:column="45"/></return></block></then></if>
			<expr_stmt><expr><name><name pos:line="823" pos:column="25">p<pos:position pos:line="823" pos:column="26"/></name><operator pos:line="823" pos:column="26">-&gt;<pos:position pos:line="823" pos:column="31"/></operator><name pos:line="823" pos:column="28">object<pos:position pos:line="823" pos:column="34"/></name><operator pos:line="823" pos:column="34">.<pos:position pos:line="823" pos:column="35"/></operator><name pos:line="823" pos:column="35">flags<pos:position pos:line="823" pos:column="40"/></name></name> <operator pos:line="823" pos:column="41">|=<pos:position pos:line="823" pos:column="43"/></operator> <name pos:line="823" pos:column="44">flags<pos:position pos:line="823" pos:column="49"/></name></expr>;<pos:position pos:line="823" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="824" pos:column="25">prio_queue_put<pos:position pos:line="824" pos:column="39"/></name><argument_list pos:line="824" pos:column="39">(<argument><expr><operator pos:line="824" pos:column="40">&amp;<pos:position pos:line="824" pos:column="45"/></operator><name pos:line="824" pos:column="41">queue<pos:position pos:line="824" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="824" pos:column="48">p<pos:position pos:line="824" pos:column="49"/></name></expr></argument>)<pos:position pos:line="824" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="824" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="825" pos:column="18"/></block></while>
	}<pos:position pos:line="826" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="828" pos:column="9">clear_prio_queue<pos:position pos:line="828" pos:column="25"/></name><argument_list pos:line="828" pos:column="25">(<argument><expr><operator pos:line="828" pos:column="26">&amp;<pos:position pos:line="828" pos:column="31"/></operator><name pos:line="828" pos:column="27">queue<pos:position pos:line="828" pos:column="32"/></name></expr></argument>)<pos:position pos:line="828" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="828" pos:column="34"/></expr_stmt>
	<return pos:line="829" pos:column="9">return <expr><name pos:line="829" pos:column="16">result<pos:position pos:line="829" pos:column="22"/></name></expr>;<pos:position pos:line="829" pos:column="23"/></return>
}<pos:position pos:line="830" pos:column="2"/></block></function>

<function><specifier pos:line="832" pos:column="1">static<pos:position pos:line="832" pos:column="7"/></specifier> <type><name><name pos:line="832" pos:column="8">struct<pos:position pos:line="832" pos:column="14"/></name> <name pos:line="832" pos:column="15">commit_list<pos:position pos:line="832" pos:column="26"/></name></name> <modifier pos:line="832" pos:column="27">*<pos:position pos:line="832" pos:column="28"/></modifier></type><name pos:line="832" pos:column="28">merge_bases_many<pos:position pos:line="832" pos:column="44"/></name><parameter_list pos:line="832" pos:column="44">(<parameter><decl><type><name><name pos:line="832" pos:column="45">struct<pos:position pos:line="832" pos:column="51"/></name> <name pos:line="832" pos:column="52">commit<pos:position pos:line="832" pos:column="58"/></name></name> <modifier pos:line="832" pos:column="59">*<pos:position pos:line="832" pos:column="60"/></modifier></type><name pos:line="832" pos:column="60">one<pos:position pos:line="832" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="832" pos:column="65">int<pos:position pos:line="832" pos:column="68"/></name></type> <name pos:line="832" pos:column="69">n<pos:position pos:line="832" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="832" pos:column="72">struct<pos:position pos:line="832" pos:column="78"/></name> <name pos:line="832" pos:column="79">commit<pos:position pos:line="832" pos:column="85"/></name></name> <modifier pos:line="832" pos:column="86">*<pos:position pos:line="832" pos:column="87"/></modifier><modifier pos:line="832" pos:column="87">*<pos:position pos:line="832" pos:column="88"/></modifier></type><name pos:line="832" pos:column="88">twos<pos:position pos:line="832" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="832" pos:column="93"/></parameter_list>
<block pos:line="833" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="834" pos:column="9">struct<pos:position pos:line="834" pos:column="15"/></name> <name pos:line="834" pos:column="16">commit_list<pos:position pos:line="834" pos:column="27"/></name></name> <modifier pos:line="834" pos:column="28">*<pos:position pos:line="834" pos:column="29"/></modifier></type><name pos:line="834" pos:column="29">list<pos:position pos:line="834" pos:column="33"/></name> <init pos:line="834" pos:column="34">= <expr><name pos:line="834" pos:column="36">NULL<pos:position pos:line="834" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="834" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="835" pos:column="9">struct<pos:position pos:line="835" pos:column="15"/></name> <name pos:line="835" pos:column="16">commit_list<pos:position pos:line="835" pos:column="27"/></name></name> <modifier pos:line="835" pos:column="28">*<pos:position pos:line="835" pos:column="29"/></modifier></type><name pos:line="835" pos:column="29">result<pos:position pos:line="835" pos:column="35"/></name> <init pos:line="835" pos:column="36">= <expr><name pos:line="835" pos:column="38">NULL<pos:position pos:line="835" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="835" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="836" pos:column="9">int<pos:position pos:line="836" pos:column="12"/></name></type> <name pos:line="836" pos:column="13">i<pos:position pos:line="836" pos:column="14"/></name></decl>;<pos:position pos:line="836" pos:column="15"/></decl_stmt>

	<for pos:line="838" pos:column="9">for <control pos:line="838" pos:column="13">(<init><expr><name pos:line="838" pos:column="14">i<pos:position pos:line="838" pos:column="15"/></name> <operator pos:line="838" pos:column="16">=<pos:position pos:line="838" pos:column="17"/></operator> <literal type="number" pos:line="838" pos:column="18">0<pos:position pos:line="838" pos:column="19"/></literal></expr>;<pos:position pos:line="838" pos:column="20"/></init> <condition><expr><name pos:line="838" pos:column="21">i<pos:position pos:line="838" pos:column="22"/></name> <operator pos:line="838" pos:column="23">&lt;<pos:position pos:line="838" pos:column="27"/></operator> <name pos:line="838" pos:column="25">n<pos:position pos:line="838" pos:column="26"/></name></expr>;<pos:position pos:line="838" pos:column="27"/></condition> <incr><expr><name pos:line="838" pos:column="28">i<pos:position pos:line="838" pos:column="29"/></name><operator pos:line="838" pos:column="29">++<pos:position pos:line="838" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="838" pos:column="32"/></control> <block pos:line="838" pos:column="33">{
		<if pos:line="839" pos:column="17">if <condition pos:line="839" pos:column="20">(<expr><name pos:line="839" pos:column="21">one<pos:position pos:line="839" pos:column="24"/></name> <operator pos:line="839" pos:column="25">==<pos:position pos:line="839" pos:column="27"/></operator> <name><name pos:line="839" pos:column="28">twos<pos:position pos:line="839" pos:column="32"/></name><index pos:line="839" pos:column="32">[<expr><name pos:line="839" pos:column="33">i<pos:position pos:line="839" pos:column="34"/></name></expr>]<pos:position pos:line="839" pos:column="35"/></index></name></expr>)<pos:position pos:line="839" pos:column="36"/></condition><then pos:line="839" pos:column="36">
			<comment type="block" pos:line="840" pos:column="25">/*
			 * We do not mark this even with RESULT so we do not
			 * have to clean it up.
			 */</comment>
			<block type="pseudo"><return pos:line="844" pos:column="25">return <expr><call><name pos:line="844" pos:column="32">commit_list_insert<pos:position pos:line="844" pos:column="50"/></name><argument_list pos:line="844" pos:column="50">(<argument><expr><name pos:line="844" pos:column="51">one<pos:position pos:line="844" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="844" pos:column="56">&amp;<pos:position pos:line="844" pos:column="61"/></operator><name pos:line="844" pos:column="57">result<pos:position pos:line="844" pos:column="63"/></name></expr></argument>)<pos:position pos:line="844" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="844" pos:column="65"/></return></block></then></if>
	}<pos:position pos:line="845" pos:column="10"/></block></for>

	<if pos:line="847" pos:column="9">if <condition pos:line="847" pos:column="12">(<expr><call><name pos:line="847" pos:column="13">parse_commit<pos:position pos:line="847" pos:column="25"/></name><argument_list pos:line="847" pos:column="25">(<argument><expr><name pos:line="847" pos:column="26">one<pos:position pos:line="847" pos:column="29"/></name></expr></argument>)<pos:position pos:line="847" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="847" pos:column="31"/></condition><then pos:line="847" pos:column="31">
		<block type="pseudo"><return pos:line="848" pos:column="17">return <expr><name pos:line="848" pos:column="24">NULL<pos:position pos:line="848" pos:column="28"/></name></expr>;<pos:position pos:line="848" pos:column="29"/></return></block></then></if>
	<for pos:line="849" pos:column="9">for <control pos:line="849" pos:column="13">(<init><expr><name pos:line="849" pos:column="14">i<pos:position pos:line="849" pos:column="15"/></name> <operator pos:line="849" pos:column="16">=<pos:position pos:line="849" pos:column="17"/></operator> <literal type="number" pos:line="849" pos:column="18">0<pos:position pos:line="849" pos:column="19"/></literal></expr>;<pos:position pos:line="849" pos:column="20"/></init> <condition><expr><name pos:line="849" pos:column="21">i<pos:position pos:line="849" pos:column="22"/></name> <operator pos:line="849" pos:column="23">&lt;<pos:position pos:line="849" pos:column="27"/></operator> <name pos:line="849" pos:column="25">n<pos:position pos:line="849" pos:column="26"/></name></expr>;<pos:position pos:line="849" pos:column="27"/></condition> <incr><expr><name pos:line="849" pos:column="28">i<pos:position pos:line="849" pos:column="29"/></name><operator pos:line="849" pos:column="29">++<pos:position pos:line="849" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="849" pos:column="32"/></control> <block pos:line="849" pos:column="33">{
		<if pos:line="850" pos:column="17">if <condition pos:line="850" pos:column="20">(<expr><call><name pos:line="850" pos:column="21">parse_commit<pos:position pos:line="850" pos:column="33"/></name><argument_list pos:line="850" pos:column="33">(<argument><expr><name><name pos:line="850" pos:column="34">twos<pos:position pos:line="850" pos:column="38"/></name><index pos:line="850" pos:column="38">[<expr><name pos:line="850" pos:column="39">i<pos:position pos:line="850" pos:column="40"/></name></expr>]<pos:position pos:line="850" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="850" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="850" pos:column="43"/></condition><then pos:line="850" pos:column="43">
			<block type="pseudo"><return pos:line="851" pos:column="25">return <expr><name pos:line="851" pos:column="32">NULL<pos:position pos:line="851" pos:column="36"/></name></expr>;<pos:position pos:line="851" pos:column="37"/></return></block></then></if>
	}<pos:position pos:line="852" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="854" pos:column="9">list<pos:position pos:line="854" pos:column="13"/></name> <operator pos:line="854" pos:column="14">=<pos:position pos:line="854" pos:column="15"/></operator> <call><name pos:line="854" pos:column="16">paint_down_to_common<pos:position pos:line="854" pos:column="36"/></name><argument_list pos:line="854" pos:column="36">(<argument><expr><name pos:line="854" pos:column="37">one<pos:position pos:line="854" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="854" pos:column="42">n<pos:position pos:line="854" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="854" pos:column="45">twos<pos:position pos:line="854" pos:column="49"/></name></expr></argument>)<pos:position pos:line="854" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="854" pos:column="51"/></expr_stmt>

	<while pos:line="856" pos:column="9">while <condition pos:line="856" pos:column="15">(<expr><name pos:line="856" pos:column="16">list<pos:position pos:line="856" pos:column="20"/></name></expr>)<pos:position pos:line="856" pos:column="21"/></condition> <block pos:line="856" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="857" pos:column="17">struct<pos:position pos:line="857" pos:column="23"/></name> <name pos:line="857" pos:column="24">commit<pos:position pos:line="857" pos:column="30"/></name></name> <modifier pos:line="857" pos:column="31">*<pos:position pos:line="857" pos:column="32"/></modifier></type><name pos:line="857" pos:column="32">commit<pos:position pos:line="857" pos:column="38"/></name> <init pos:line="857" pos:column="39">= <expr><call><name pos:line="857" pos:column="41">pop_commit<pos:position pos:line="857" pos:column="51"/></name><argument_list pos:line="857" pos:column="51">(<argument><expr><operator pos:line="857" pos:column="52">&amp;<pos:position pos:line="857" pos:column="57"/></operator><name pos:line="857" pos:column="53">list<pos:position pos:line="857" pos:column="57"/></name></expr></argument>)<pos:position pos:line="857" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="857" pos:column="59"/></decl_stmt>
		<if pos:line="858" pos:column="17">if <condition pos:line="858" pos:column="20">(<expr><operator pos:line="858" pos:column="21">!<pos:position pos:line="858" pos:column="22"/></operator><operator pos:line="858" pos:column="22">(<pos:position pos:line="858" pos:column="23"/></operator><name><name pos:line="858" pos:column="23">commit<pos:position pos:line="858" pos:column="29"/></name><operator pos:line="858" pos:column="29">-&gt;<pos:position pos:line="858" pos:column="34"/></operator><name pos:line="858" pos:column="31">object<pos:position pos:line="858" pos:column="37"/></name><operator pos:line="858" pos:column="37">.<pos:position pos:line="858" pos:column="38"/></operator><name pos:line="858" pos:column="38">flags<pos:position pos:line="858" pos:column="43"/></name></name> <operator pos:line="858" pos:column="44">&amp;<pos:position pos:line="858" pos:column="49"/></operator> <name pos:line="858" pos:column="46">STALE<pos:position pos:line="858" pos:column="51"/></name><operator pos:line="858" pos:column="51">)<pos:position pos:line="858" pos:column="52"/></operator></expr>)<pos:position pos:line="858" pos:column="53"/></condition><then pos:line="858" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="859" pos:column="25">commit_list_insert_by_date<pos:position pos:line="859" pos:column="51"/></name><argument_list pos:line="859" pos:column="51">(<argument><expr><name pos:line="859" pos:column="52">commit<pos:position pos:line="859" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="859" pos:column="60">&amp;<pos:position pos:line="859" pos:column="65"/></operator><name pos:line="859" pos:column="61">result<pos:position pos:line="859" pos:column="67"/></name></expr></argument>)<pos:position pos:line="859" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="859" pos:column="69"/></expr_stmt></block></then></if>
	}<pos:position pos:line="860" pos:column="10"/></block></while>
	<return pos:line="861" pos:column="9">return <expr><name pos:line="861" pos:column="16">result<pos:position pos:line="861" pos:column="22"/></name></expr>;<pos:position pos:line="861" pos:column="23"/></return>
}<pos:position pos:line="862" pos:column="2"/></block></function>

<function><type><name><name pos:line="864" pos:column="1">struct<pos:position pos:line="864" pos:column="7"/></name> <name pos:line="864" pos:column="8">commit_list<pos:position pos:line="864" pos:column="19"/></name></name> <modifier pos:line="864" pos:column="20">*<pos:position pos:line="864" pos:column="21"/></modifier></type><name pos:line="864" pos:column="21">get_octopus_merge_bases<pos:position pos:line="864" pos:column="44"/></name><parameter_list pos:line="864" pos:column="44">(<parameter><decl><type><name><name pos:line="864" pos:column="45">struct<pos:position pos:line="864" pos:column="51"/></name> <name pos:line="864" pos:column="52">commit_list<pos:position pos:line="864" pos:column="63"/></name></name> <modifier pos:line="864" pos:column="64">*<pos:position pos:line="864" pos:column="65"/></modifier></type><name pos:line="864" pos:column="65">in<pos:position pos:line="864" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="864" pos:column="68"/></parameter_list>
<block pos:line="865" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="866" pos:column="9">struct<pos:position pos:line="866" pos:column="15"/></name> <name pos:line="866" pos:column="16">commit_list<pos:position pos:line="866" pos:column="27"/></name></name> <modifier pos:line="866" pos:column="28">*<pos:position pos:line="866" pos:column="29"/></modifier></type><name pos:line="866" pos:column="29">i<pos:position pos:line="866" pos:column="30"/></name></decl>, <modifier pos:line="866" pos:column="32">*<pos:position pos:line="866" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="866" pos:column="33">j<pos:position pos:line="866" pos:column="34"/></name></decl>, <modifier pos:line="866" pos:column="36">*<pos:position pos:line="866" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="866" pos:column="37">k<pos:position pos:line="866" pos:column="38"/></name></decl>, <modifier pos:line="866" pos:column="40">*<pos:position pos:line="866" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="866" pos:column="41">ret<pos:position pos:line="866" pos:column="44"/></name> <init pos:line="866" pos:column="45">= <expr><name pos:line="866" pos:column="47">NULL<pos:position pos:line="866" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="866" pos:column="52"/></decl_stmt>

	<if pos:line="868" pos:column="9">if <condition pos:line="868" pos:column="12">(<expr><operator pos:line="868" pos:column="13">!<pos:position pos:line="868" pos:column="14"/></operator><name pos:line="868" pos:column="14">in<pos:position pos:line="868" pos:column="16"/></name></expr>)<pos:position pos:line="868" pos:column="17"/></condition><then pos:line="868" pos:column="17">
		<block type="pseudo"><return pos:line="869" pos:column="17">return <expr><name pos:line="869" pos:column="24">ret<pos:position pos:line="869" pos:column="27"/></name></expr>;<pos:position pos:line="869" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="871" pos:column="9">commit_list_insert<pos:position pos:line="871" pos:column="27"/></name><argument_list pos:line="871" pos:column="27">(<argument><expr><name><name pos:line="871" pos:column="28">in<pos:position pos:line="871" pos:column="30"/></name><operator pos:line="871" pos:column="30">-&gt;<pos:position pos:line="871" pos:column="35"/></operator><name pos:line="871" pos:column="32">item<pos:position pos:line="871" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="871" pos:column="38">&amp;<pos:position pos:line="871" pos:column="43"/></operator><name pos:line="871" pos:column="39">ret<pos:position pos:line="871" pos:column="42"/></name></expr></argument>)<pos:position pos:line="871" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="871" pos:column="44"/></expr_stmt>

	<for pos:line="873" pos:column="9">for <control pos:line="873" pos:column="13">(<init><expr><name pos:line="873" pos:column="14">i<pos:position pos:line="873" pos:column="15"/></name> <operator pos:line="873" pos:column="16">=<pos:position pos:line="873" pos:column="17"/></operator> <name><name pos:line="873" pos:column="18">in<pos:position pos:line="873" pos:column="20"/></name><operator pos:line="873" pos:column="20">-&gt;<pos:position pos:line="873" pos:column="25"/></operator><name pos:line="873" pos:column="22">next<pos:position pos:line="873" pos:column="26"/></name></name></expr>;<pos:position pos:line="873" pos:column="27"/></init> <condition><expr><name pos:line="873" pos:column="28">i<pos:position pos:line="873" pos:column="29"/></name></expr>;<pos:position pos:line="873" pos:column="30"/></condition> <incr><expr><name pos:line="873" pos:column="31">i<pos:position pos:line="873" pos:column="32"/></name> <operator pos:line="873" pos:column="33">=<pos:position pos:line="873" pos:column="34"/></operator> <name><name pos:line="873" pos:column="35">i<pos:position pos:line="873" pos:column="36"/></name><operator pos:line="873" pos:column="36">-&gt;<pos:position pos:line="873" pos:column="41"/></operator><name pos:line="873" pos:column="38">next<pos:position pos:line="873" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="873" pos:column="43"/></control> <block pos:line="873" pos:column="44">{
		<decl_stmt><decl><type><name><name pos:line="874" pos:column="17">struct<pos:position pos:line="874" pos:column="23"/></name> <name pos:line="874" pos:column="24">commit_list<pos:position pos:line="874" pos:column="35"/></name></name> <modifier pos:line="874" pos:column="36">*<pos:position pos:line="874" pos:column="37"/></modifier></type><name pos:line="874" pos:column="37">new<pos:position pos:line="874" pos:column="40"/></name> <init pos:line="874" pos:column="41">= <expr><name pos:line="874" pos:column="43">NULL<pos:position pos:line="874" pos:column="47"/></name></expr></init></decl>, <modifier pos:line="874" pos:column="49">*<pos:position pos:line="874" pos:column="50"/></modifier><decl><type ref="prev"/><name pos:line="874" pos:column="50">end<pos:position pos:line="874" pos:column="53"/></name> <init pos:line="874" pos:column="54">= <expr><name pos:line="874" pos:column="56">NULL<pos:position pos:line="874" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="874" pos:column="61"/></decl_stmt>

		<for pos:line="876" pos:column="17">for <control pos:line="876" pos:column="21">(<init><expr><name pos:line="876" pos:column="22">j<pos:position pos:line="876" pos:column="23"/></name> <operator pos:line="876" pos:column="24">=<pos:position pos:line="876" pos:column="25"/></operator> <name pos:line="876" pos:column="26">ret<pos:position pos:line="876" pos:column="29"/></name></expr>;<pos:position pos:line="876" pos:column="30"/></init> <condition><expr><name pos:line="876" pos:column="31">j<pos:position pos:line="876" pos:column="32"/></name></expr>;<pos:position pos:line="876" pos:column="33"/></condition> <incr><expr><name pos:line="876" pos:column="34">j<pos:position pos:line="876" pos:column="35"/></name> <operator pos:line="876" pos:column="36">=<pos:position pos:line="876" pos:column="37"/></operator> <name><name pos:line="876" pos:column="38">j<pos:position pos:line="876" pos:column="39"/></name><operator pos:line="876" pos:column="39">-&gt;<pos:position pos:line="876" pos:column="44"/></operator><name pos:line="876" pos:column="41">next<pos:position pos:line="876" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="876" pos:column="46"/></control> <block pos:line="876" pos:column="47">{
			<decl_stmt><decl><type><name><name pos:line="877" pos:column="25">struct<pos:position pos:line="877" pos:column="31"/></name> <name pos:line="877" pos:column="32">commit_list<pos:position pos:line="877" pos:column="43"/></name></name> <modifier pos:line="877" pos:column="44">*<pos:position pos:line="877" pos:column="45"/></modifier></type><name pos:line="877" pos:column="45">bases<pos:position pos:line="877" pos:column="50"/></name></decl>;<pos:position pos:line="877" pos:column="51"/></decl_stmt>
			<expr_stmt><expr><name pos:line="878" pos:column="25">bases<pos:position pos:line="878" pos:column="30"/></name> <operator pos:line="878" pos:column="31">=<pos:position pos:line="878" pos:column="32"/></operator> <call><name pos:line="878" pos:column="33">get_merge_bases<pos:position pos:line="878" pos:column="48"/></name><argument_list pos:line="878" pos:column="48">(<argument><expr><name><name pos:line="878" pos:column="49">i<pos:position pos:line="878" pos:column="50"/></name><operator pos:line="878" pos:column="50">-&gt;<pos:position pos:line="878" pos:column="55"/></operator><name pos:line="878" pos:column="52">item<pos:position pos:line="878" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="878" pos:column="58">j<pos:position pos:line="878" pos:column="59"/></name><operator pos:line="878" pos:column="59">-&gt;<pos:position pos:line="878" pos:column="64"/></operator><name pos:line="878" pos:column="61">item<pos:position pos:line="878" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="878" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="878" pos:column="67"/></expr_stmt>
			<if pos:line="879" pos:column="25">if <condition pos:line="879" pos:column="28">(<expr><operator pos:line="879" pos:column="29">!<pos:position pos:line="879" pos:column="30"/></operator><name pos:line="879" pos:column="30">new<pos:position pos:line="879" pos:column="33"/></name></expr>)<pos:position pos:line="879" pos:column="34"/></condition><then pos:line="879" pos:column="34">
				<block type="pseudo"><expr_stmt><expr><name pos:line="880" pos:column="33">new<pos:position pos:line="880" pos:column="36"/></name> <operator pos:line="880" pos:column="37">=<pos:position pos:line="880" pos:column="38"/></operator> <name pos:line="880" pos:column="39">bases<pos:position pos:line="880" pos:column="44"/></name></expr>;<pos:position pos:line="880" pos:column="45"/></expr_stmt></block></then>
			<else pos:line="881" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="882" pos:column="33">end<pos:position pos:line="882" pos:column="36"/></name><operator pos:line="882" pos:column="36">-&gt;<pos:position pos:line="882" pos:column="41"/></operator><name pos:line="882" pos:column="38">next<pos:position pos:line="882" pos:column="42"/></name></name> <operator pos:line="882" pos:column="43">=<pos:position pos:line="882" pos:column="44"/></operator> <name pos:line="882" pos:column="45">bases<pos:position pos:line="882" pos:column="50"/></name></expr>;<pos:position pos:line="882" pos:column="51"/></expr_stmt></block></else></if>
			<for pos:line="883" pos:column="25">for <control pos:line="883" pos:column="29">(<init><expr><name pos:line="883" pos:column="30">k<pos:position pos:line="883" pos:column="31"/></name> <operator pos:line="883" pos:column="32">=<pos:position pos:line="883" pos:column="33"/></operator> <name pos:line="883" pos:column="34">bases<pos:position pos:line="883" pos:column="39"/></name></expr>;<pos:position pos:line="883" pos:column="40"/></init> <condition><expr><name pos:line="883" pos:column="41">k<pos:position pos:line="883" pos:column="42"/></name></expr>;<pos:position pos:line="883" pos:column="43"/></condition> <incr><expr><name pos:line="883" pos:column="44">k<pos:position pos:line="883" pos:column="45"/></name> <operator pos:line="883" pos:column="46">=<pos:position pos:line="883" pos:column="47"/></operator> <name><name pos:line="883" pos:column="48">k<pos:position pos:line="883" pos:column="49"/></name><operator pos:line="883" pos:column="49">-&gt;<pos:position pos:line="883" pos:column="54"/></operator><name pos:line="883" pos:column="51">next<pos:position pos:line="883" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="883" pos:column="56"/></control>
				<block type="pseudo"><expr_stmt><expr><name pos:line="884" pos:column="33">end<pos:position pos:line="884" pos:column="36"/></name> <operator pos:line="884" pos:column="37">=<pos:position pos:line="884" pos:column="38"/></operator> <name pos:line="884" pos:column="39">k<pos:position pos:line="884" pos:column="40"/></name></expr>;<pos:position pos:line="884" pos:column="41"/></expr_stmt></block></for>
		}<pos:position pos:line="885" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="886" pos:column="17">ret<pos:position pos:line="886" pos:column="20"/></name> <operator pos:line="886" pos:column="21">=<pos:position pos:line="886" pos:column="22"/></operator> <name pos:line="886" pos:column="23">new<pos:position pos:line="886" pos:column="26"/></name></expr>;<pos:position pos:line="886" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="887" pos:column="10"/></block></for>
	<return pos:line="888" pos:column="9">return <expr><name pos:line="888" pos:column="16">ret<pos:position pos:line="888" pos:column="19"/></name></expr>;<pos:position pos:line="888" pos:column="20"/></return>
}<pos:position pos:line="889" pos:column="2"/></block></function>

<function><specifier pos:line="891" pos:column="1">static<pos:position pos:line="891" pos:column="7"/></specifier> <type><name pos:line="891" pos:column="8">int<pos:position pos:line="891" pos:column="11"/></name></type> <name pos:line="891" pos:column="12">remove_redundant<pos:position pos:line="891" pos:column="28"/></name><parameter_list pos:line="891" pos:column="28">(<parameter><decl><type><name><name pos:line="891" pos:column="29">struct<pos:position pos:line="891" pos:column="35"/></name> <name pos:line="891" pos:column="36">commit<pos:position pos:line="891" pos:column="42"/></name></name> <modifier pos:line="891" pos:column="43">*<pos:position pos:line="891" pos:column="44"/></modifier><modifier pos:line="891" pos:column="44">*<pos:position pos:line="891" pos:column="45"/></modifier></type><name pos:line="891" pos:column="45">array<pos:position pos:line="891" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="891" pos:column="52">int<pos:position pos:line="891" pos:column="55"/></name></type> <name pos:line="891" pos:column="56">cnt<pos:position pos:line="891" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="891" pos:column="60"/></parameter_list>
<block pos:line="892" pos:column="1">{
	<comment type="block" pos:line="893" pos:column="9">/*
	 * Some commit in the array may be an ancestor of
	 * another commit.  Move such commit to the end of
	 * the array, and return the number of commits that
	 * are independent from each other.
	 */</comment>
	<decl_stmt><decl><type><name><name pos:line="899" pos:column="9">struct<pos:position pos:line="899" pos:column="15"/></name> <name pos:line="899" pos:column="16">commit<pos:position pos:line="899" pos:column="22"/></name></name> <modifier pos:line="899" pos:column="23">*<pos:position pos:line="899" pos:column="24"/></modifier><modifier pos:line="899" pos:column="24">*<pos:position pos:line="899" pos:column="25"/></modifier></type><name pos:line="899" pos:column="25">work<pos:position pos:line="899" pos:column="29"/></name></decl>;<pos:position pos:line="899" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="900" pos:column="9">unsigned<pos:position pos:line="900" pos:column="17"/></name> <name pos:line="900" pos:column="18">char<pos:position pos:line="900" pos:column="22"/></name> <modifier pos:line="900" pos:column="23">*<pos:position pos:line="900" pos:column="24"/></modifier></type><name pos:line="900" pos:column="24">redundant<pos:position pos:line="900" pos:column="33"/></name></decl>;<pos:position pos:line="900" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="901" pos:column="9">int<pos:position pos:line="901" pos:column="12"/></name> <modifier pos:line="901" pos:column="13">*<pos:position pos:line="901" pos:column="14"/></modifier></type><name pos:line="901" pos:column="14">filled_index<pos:position pos:line="901" pos:column="26"/></name></decl>;<pos:position pos:line="901" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="902" pos:column="9">int<pos:position pos:line="902" pos:column="12"/></name></type> <name pos:line="902" pos:column="13">i<pos:position pos:line="902" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="902" pos:column="16">j<pos:position pos:line="902" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="902" pos:column="19">filled<pos:position pos:line="902" pos:column="25"/></name></decl>;<pos:position pos:line="902" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><name pos:line="904" pos:column="9">work<pos:position pos:line="904" pos:column="13"/></name> <operator pos:line="904" pos:column="14">=<pos:position pos:line="904" pos:column="15"/></operator> <call><name pos:line="904" pos:column="16">xcalloc<pos:position pos:line="904" pos:column="23"/></name><argument_list pos:line="904" pos:column="23">(<argument><expr><name pos:line="904" pos:column="24">cnt<pos:position pos:line="904" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="904" pos:column="29">sizeof<argument_list pos:line="904" pos:column="35">(<argument><expr><operator pos:line="904" pos:column="36">*<pos:position pos:line="904" pos:column="37"/></operator><name pos:line="904" pos:column="37">work<pos:position pos:line="904" pos:column="41"/></name></expr></argument>)<pos:position pos:line="904" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="904" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="904" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="905" pos:column="9">redundant<pos:position pos:line="905" pos:column="18"/></name> <operator pos:line="905" pos:column="19">=<pos:position pos:line="905" pos:column="20"/></operator> <call><name pos:line="905" pos:column="21">xcalloc<pos:position pos:line="905" pos:column="28"/></name><argument_list pos:line="905" pos:column="28">(<argument><expr><name pos:line="905" pos:column="29">cnt<pos:position pos:line="905" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="905" pos:column="34">1<pos:position pos:line="905" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="905" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="905" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="906" pos:column="9">filled_index<pos:position pos:line="906" pos:column="21"/></name> <operator pos:line="906" pos:column="22">=<pos:position pos:line="906" pos:column="23"/></operator> <call><name pos:line="906" pos:column="24">xmalloc<pos:position pos:line="906" pos:column="31"/></name><argument_list pos:line="906" pos:column="31">(<argument><expr><sizeof pos:line="906" pos:column="32">sizeof<argument_list pos:line="906" pos:column="38">(<argument><expr><operator pos:line="906" pos:column="39">*<pos:position pos:line="906" pos:column="40"/></operator><name pos:line="906" pos:column="40">filled_index<pos:position pos:line="906" pos:column="52"/></name></expr></argument>)<pos:position pos:line="906" pos:column="53"/></argument_list></sizeof> <operator pos:line="906" pos:column="54">*<pos:position pos:line="906" pos:column="55"/></operator> <operator pos:line="906" pos:column="56">(<pos:position pos:line="906" pos:column="57"/></operator><name pos:line="906" pos:column="57">cnt<pos:position pos:line="906" pos:column="60"/></name> <operator pos:line="906" pos:column="61">-<pos:position pos:line="906" pos:column="62"/></operator> <literal type="number" pos:line="906" pos:column="63">1<pos:position pos:line="906" pos:column="64"/></literal><operator pos:line="906" pos:column="64">)<pos:position pos:line="906" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="906" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="906" pos:column="67"/></expr_stmt>

	<for pos:line="908" pos:column="9">for <control pos:line="908" pos:column="13">(<init><expr><name pos:line="908" pos:column="14">i<pos:position pos:line="908" pos:column="15"/></name> <operator pos:line="908" pos:column="16">=<pos:position pos:line="908" pos:column="17"/></operator> <literal type="number" pos:line="908" pos:column="18">0<pos:position pos:line="908" pos:column="19"/></literal></expr>;<pos:position pos:line="908" pos:column="20"/></init> <condition><expr><name pos:line="908" pos:column="21">i<pos:position pos:line="908" pos:column="22"/></name> <operator pos:line="908" pos:column="23">&lt;<pos:position pos:line="908" pos:column="27"/></operator> <name pos:line="908" pos:column="25">cnt<pos:position pos:line="908" pos:column="28"/></name></expr>;<pos:position pos:line="908" pos:column="29"/></condition> <incr><expr><name pos:line="908" pos:column="30">i<pos:position pos:line="908" pos:column="31"/></name><operator pos:line="908" pos:column="31">++<pos:position pos:line="908" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="908" pos:column="34"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="909" pos:column="17">parse_commit<pos:position pos:line="909" pos:column="29"/></name><argument_list pos:line="909" pos:column="29">(<argument><expr><name><name pos:line="909" pos:column="30">array<pos:position pos:line="909" pos:column="35"/></name><index pos:line="909" pos:column="35">[<expr><name pos:line="909" pos:column="36">i<pos:position pos:line="909" pos:column="37"/></name></expr>]<pos:position pos:line="909" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="909" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="909" pos:column="40"/></expr_stmt></block></for>
	<for pos:line="910" pos:column="9">for <control pos:line="910" pos:column="13">(<init><expr><name pos:line="910" pos:column="14">i<pos:position pos:line="910" pos:column="15"/></name> <operator pos:line="910" pos:column="16">=<pos:position pos:line="910" pos:column="17"/></operator> <literal type="number" pos:line="910" pos:column="18">0<pos:position pos:line="910" pos:column="19"/></literal></expr>;<pos:position pos:line="910" pos:column="20"/></init> <condition><expr><name pos:line="910" pos:column="21">i<pos:position pos:line="910" pos:column="22"/></name> <operator pos:line="910" pos:column="23">&lt;<pos:position pos:line="910" pos:column="27"/></operator> <name pos:line="910" pos:column="25">cnt<pos:position pos:line="910" pos:column="28"/></name></expr>;<pos:position pos:line="910" pos:column="29"/></condition> <incr><expr><name pos:line="910" pos:column="30">i<pos:position pos:line="910" pos:column="31"/></name><operator pos:line="910" pos:column="31">++<pos:position pos:line="910" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="910" pos:column="34"/></control> <block pos:line="910" pos:column="35">{
		<decl_stmt><decl><type><name><name pos:line="911" pos:column="17">struct<pos:position pos:line="911" pos:column="23"/></name> <name pos:line="911" pos:column="24">commit_list<pos:position pos:line="911" pos:column="35"/></name></name> <modifier pos:line="911" pos:column="36">*<pos:position pos:line="911" pos:column="37"/></modifier></type><name pos:line="911" pos:column="37">common<pos:position pos:line="911" pos:column="43"/></name></decl>;<pos:position pos:line="911" pos:column="44"/></decl_stmt>

		<if pos:line="913" pos:column="17">if <condition pos:line="913" pos:column="20">(<expr><name><name pos:line="913" pos:column="21">redundant<pos:position pos:line="913" pos:column="30"/></name><index pos:line="913" pos:column="30">[<expr><name pos:line="913" pos:column="31">i<pos:position pos:line="913" pos:column="32"/></name></expr>]<pos:position pos:line="913" pos:column="33"/></index></name></expr>)<pos:position pos:line="913" pos:column="34"/></condition><then pos:line="913" pos:column="34">
			<block type="pseudo"><continue pos:line="914" pos:column="25">continue;<pos:position pos:line="914" pos:column="34"/></continue></block></then></if>
		<for pos:line="915" pos:column="17">for <control pos:line="915" pos:column="21">(<init><expr><name pos:line="915" pos:column="22">j<pos:position pos:line="915" pos:column="23"/></name> <operator pos:line="915" pos:column="24">=<pos:position pos:line="915" pos:column="25"/></operator> <name pos:line="915" pos:column="26">filled<pos:position pos:line="915" pos:column="32"/></name> <operator pos:line="915" pos:column="33">=<pos:position pos:line="915" pos:column="34"/></operator> <literal type="number" pos:line="915" pos:column="35">0<pos:position pos:line="915" pos:column="36"/></literal></expr>;<pos:position pos:line="915" pos:column="37"/></init> <condition><expr><name pos:line="915" pos:column="38">j<pos:position pos:line="915" pos:column="39"/></name> <operator pos:line="915" pos:column="40">&lt;<pos:position pos:line="915" pos:column="44"/></operator> <name pos:line="915" pos:column="42">cnt<pos:position pos:line="915" pos:column="45"/></name></expr>;<pos:position pos:line="915" pos:column="46"/></condition> <incr><expr><name pos:line="915" pos:column="47">j<pos:position pos:line="915" pos:column="48"/></name><operator pos:line="915" pos:column="48">++<pos:position pos:line="915" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="915" pos:column="51"/></control> <block pos:line="915" pos:column="52">{
			<if pos:line="916" pos:column="25">if <condition pos:line="916" pos:column="28">(<expr><name pos:line="916" pos:column="29">i<pos:position pos:line="916" pos:column="30"/></name> <operator pos:line="916" pos:column="31">==<pos:position pos:line="916" pos:column="33"/></operator> <name pos:line="916" pos:column="34">j<pos:position pos:line="916" pos:column="35"/></name> <operator pos:line="916" pos:column="36">||<pos:position pos:line="916" pos:column="38"/></operator> <name><name pos:line="916" pos:column="39">redundant<pos:position pos:line="916" pos:column="48"/></name><index pos:line="916" pos:column="48">[<expr><name pos:line="916" pos:column="49">j<pos:position pos:line="916" pos:column="50"/></name></expr>]<pos:position pos:line="916" pos:column="51"/></index></name></expr>)<pos:position pos:line="916" pos:column="52"/></condition><then pos:line="916" pos:column="52">
				<block type="pseudo"><continue pos:line="917" pos:column="33">continue;<pos:position pos:line="917" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name><name pos:line="918" pos:column="25">filled_index<pos:position pos:line="918" pos:column="37"/></name><index pos:line="918" pos:column="37">[<expr><name pos:line="918" pos:column="38">filled<pos:position pos:line="918" pos:column="44"/></name></expr>]<pos:position pos:line="918" pos:column="45"/></index></name> <operator pos:line="918" pos:column="46">=<pos:position pos:line="918" pos:column="47"/></operator> <name pos:line="918" pos:column="48">j<pos:position pos:line="918" pos:column="49"/></name></expr>;<pos:position pos:line="918" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="919" pos:column="25">work<pos:position pos:line="919" pos:column="29"/></name><index pos:line="919" pos:column="29">[<expr><name pos:line="919" pos:column="30">filled<pos:position pos:line="919" pos:column="36"/></name><operator pos:line="919" pos:column="36">++<pos:position pos:line="919" pos:column="38"/></operator></expr>]<pos:position pos:line="919" pos:column="39"/></index></name> <operator pos:line="919" pos:column="40">=<pos:position pos:line="919" pos:column="41"/></operator> <name><name pos:line="919" pos:column="42">array<pos:position pos:line="919" pos:column="47"/></name><index pos:line="919" pos:column="47">[<expr><name pos:line="919" pos:column="48">j<pos:position pos:line="919" pos:column="49"/></name></expr>]<pos:position pos:line="919" pos:column="50"/></index></name></expr>;<pos:position pos:line="919" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="920" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="921" pos:column="17">common<pos:position pos:line="921" pos:column="23"/></name> <operator pos:line="921" pos:column="24">=<pos:position pos:line="921" pos:column="25"/></operator> <call><name pos:line="921" pos:column="26">paint_down_to_common<pos:position pos:line="921" pos:column="46"/></name><argument_list pos:line="921" pos:column="46">(<argument><expr><name><name pos:line="921" pos:column="47">array<pos:position pos:line="921" pos:column="52"/></name><index pos:line="921" pos:column="52">[<expr><name pos:line="921" pos:column="53">i<pos:position pos:line="921" pos:column="54"/></name></expr>]<pos:position pos:line="921" pos:column="55"/></index></name></expr></argument>, <argument><expr><name pos:line="921" pos:column="57">filled<pos:position pos:line="921" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="921" pos:column="65">work<pos:position pos:line="921" pos:column="69"/></name></expr></argument>)<pos:position pos:line="921" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="921" pos:column="71"/></expr_stmt>
		<if pos:line="922" pos:column="17">if <condition pos:line="922" pos:column="20">(<expr><name><name pos:line="922" pos:column="21">array<pos:position pos:line="922" pos:column="26"/></name><index pos:line="922" pos:column="26">[<expr><name pos:line="922" pos:column="27">i<pos:position pos:line="922" pos:column="28"/></name></expr>]<pos:position pos:line="922" pos:column="29"/></index></name><operator pos:line="922" pos:column="29">-&gt;<pos:position pos:line="922" pos:column="34"/></operator><name><name pos:line="922" pos:column="31">object<pos:position pos:line="922" pos:column="37"/></name><operator pos:line="922" pos:column="37">.<pos:position pos:line="922" pos:column="38"/></operator><name pos:line="922" pos:column="38">flags<pos:position pos:line="922" pos:column="43"/></name></name> <operator pos:line="922" pos:column="44">&amp;<pos:position pos:line="922" pos:column="49"/></operator> <name pos:line="922" pos:column="46">PARENT2<pos:position pos:line="922" pos:column="53"/></name></expr>)<pos:position pos:line="922" pos:column="54"/></condition><then pos:line="922" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="923" pos:column="25">redundant<pos:position pos:line="923" pos:column="34"/></name><index pos:line="923" pos:column="34">[<expr><name pos:line="923" pos:column="35">i<pos:position pos:line="923" pos:column="36"/></name></expr>]<pos:position pos:line="923" pos:column="37"/></index></name> <operator pos:line="923" pos:column="38">=<pos:position pos:line="923" pos:column="39"/></operator> <literal type="number" pos:line="923" pos:column="40">1<pos:position pos:line="923" pos:column="41"/></literal></expr>;<pos:position pos:line="923" pos:column="42"/></expr_stmt></block></then></if>
		<for pos:line="924" pos:column="17">for <control pos:line="924" pos:column="21">(<init><expr><name pos:line="924" pos:column="22">j<pos:position pos:line="924" pos:column="23"/></name> <operator pos:line="924" pos:column="24">=<pos:position pos:line="924" pos:column="25"/></operator> <literal type="number" pos:line="924" pos:column="26">0<pos:position pos:line="924" pos:column="27"/></literal></expr>;<pos:position pos:line="924" pos:column="28"/></init> <condition><expr><name pos:line="924" pos:column="29">j<pos:position pos:line="924" pos:column="30"/></name> <operator pos:line="924" pos:column="31">&lt;<pos:position pos:line="924" pos:column="35"/></operator> <name pos:line="924" pos:column="33">filled<pos:position pos:line="924" pos:column="39"/></name></expr>;<pos:position pos:line="924" pos:column="40"/></condition> <incr><expr><name pos:line="924" pos:column="41">j<pos:position pos:line="924" pos:column="42"/></name><operator pos:line="924" pos:column="42">++<pos:position pos:line="924" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="924" pos:column="45"/></control>
			<block type="pseudo"><if pos:line="925" pos:column="25">if <condition pos:line="925" pos:column="28">(<expr><name><name pos:line="925" pos:column="29">work<pos:position pos:line="925" pos:column="33"/></name><index pos:line="925" pos:column="33">[<expr><name pos:line="925" pos:column="34">j<pos:position pos:line="925" pos:column="35"/></name></expr>]<pos:position pos:line="925" pos:column="36"/></index></name><operator pos:line="925" pos:column="36">-&gt;<pos:position pos:line="925" pos:column="41"/></operator><name><name pos:line="925" pos:column="38">object<pos:position pos:line="925" pos:column="44"/></name><operator pos:line="925" pos:column="44">.<pos:position pos:line="925" pos:column="45"/></operator><name pos:line="925" pos:column="45">flags<pos:position pos:line="925" pos:column="50"/></name></name> <operator pos:line="925" pos:column="51">&amp;<pos:position pos:line="925" pos:column="56"/></operator> <name pos:line="925" pos:column="53">PARENT1<pos:position pos:line="925" pos:column="60"/></name></expr>)<pos:position pos:line="925" pos:column="61"/></condition><then pos:line="925" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="926" pos:column="33">redundant<pos:position pos:line="926" pos:column="42"/></name><index pos:line="926" pos:column="42">[<expr><name><name pos:line="926" pos:column="43">filled_index<pos:position pos:line="926" pos:column="55"/></name><index pos:line="926" pos:column="55">[<expr><name pos:line="926" pos:column="56">j<pos:position pos:line="926" pos:column="57"/></name></expr>]<pos:position pos:line="926" pos:column="58"/></index></name></expr>]<pos:position pos:line="926" pos:column="59"/></index></name> <operator pos:line="926" pos:column="60">=<pos:position pos:line="926" pos:column="61"/></operator> <literal type="number" pos:line="926" pos:column="62">1<pos:position pos:line="926" pos:column="63"/></literal></expr>;<pos:position pos:line="926" pos:column="64"/></expr_stmt></block></then></if></block></for>
		<expr_stmt><expr><call><name pos:line="927" pos:column="17">clear_commit_marks<pos:position pos:line="927" pos:column="35"/></name><argument_list pos:line="927" pos:column="35">(<argument><expr><name><name pos:line="927" pos:column="36">array<pos:position pos:line="927" pos:column="41"/></name><index pos:line="927" pos:column="41">[<expr><name pos:line="927" pos:column="42">i<pos:position pos:line="927" pos:column="43"/></name></expr>]<pos:position pos:line="927" pos:column="44"/></index></name></expr></argument>, <argument><expr><name pos:line="927" pos:column="46">all_flags<pos:position pos:line="927" pos:column="55"/></name></expr></argument>)<pos:position pos:line="927" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="927" pos:column="57"/></expr_stmt>
		<for pos:line="928" pos:column="17">for <control pos:line="928" pos:column="21">(<init><expr><name pos:line="928" pos:column="22">j<pos:position pos:line="928" pos:column="23"/></name> <operator pos:line="928" pos:column="24">=<pos:position pos:line="928" pos:column="25"/></operator> <literal type="number" pos:line="928" pos:column="26">0<pos:position pos:line="928" pos:column="27"/></literal></expr>;<pos:position pos:line="928" pos:column="28"/></init> <condition><expr><name pos:line="928" pos:column="29">j<pos:position pos:line="928" pos:column="30"/></name> <operator pos:line="928" pos:column="31">&lt;<pos:position pos:line="928" pos:column="35"/></operator> <name pos:line="928" pos:column="33">filled<pos:position pos:line="928" pos:column="39"/></name></expr>;<pos:position pos:line="928" pos:column="40"/></condition> <incr><expr><name pos:line="928" pos:column="41">j<pos:position pos:line="928" pos:column="42"/></name><operator pos:line="928" pos:column="42">++<pos:position pos:line="928" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="928" pos:column="45"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="929" pos:column="25">clear_commit_marks<pos:position pos:line="929" pos:column="43"/></name><argument_list pos:line="929" pos:column="43">(<argument><expr><name><name pos:line="929" pos:column="44">work<pos:position pos:line="929" pos:column="48"/></name><index pos:line="929" pos:column="48">[<expr><name pos:line="929" pos:column="49">j<pos:position pos:line="929" pos:column="50"/></name></expr>]<pos:position pos:line="929" pos:column="51"/></index></name></expr></argument>, <argument><expr><name pos:line="929" pos:column="53">all_flags<pos:position pos:line="929" pos:column="62"/></name></expr></argument>)<pos:position pos:line="929" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="929" pos:column="64"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="930" pos:column="17">free_commit_list<pos:position pos:line="930" pos:column="33"/></name><argument_list pos:line="930" pos:column="33">(<argument><expr><name pos:line="930" pos:column="34">common<pos:position pos:line="930" pos:column="40"/></name></expr></argument>)<pos:position pos:line="930" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="930" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="931" pos:column="10"/></block></for>

	<comment type="block" pos:line="933" pos:column="9">/* Now collect the result */</comment>
	<expr_stmt><expr><call><name pos:line="934" pos:column="9">memcpy<pos:position pos:line="934" pos:column="15"/></name><argument_list pos:line="934" pos:column="15">(<argument><expr><name pos:line="934" pos:column="16">work<pos:position pos:line="934" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="934" pos:column="22">array<pos:position pos:line="934" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="934" pos:column="29">sizeof<argument_list pos:line="934" pos:column="35">(<argument><expr><operator pos:line="934" pos:column="36">*<pos:position pos:line="934" pos:column="37"/></operator><name pos:line="934" pos:column="37">array<pos:position pos:line="934" pos:column="42"/></name></expr></argument>)<pos:position pos:line="934" pos:column="43"/></argument_list></sizeof> <operator pos:line="934" pos:column="44">*<pos:position pos:line="934" pos:column="45"/></operator> <name pos:line="934" pos:column="46">cnt<pos:position pos:line="934" pos:column="49"/></name></expr></argument>)<pos:position pos:line="934" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="934" pos:column="51"/></expr_stmt>
	<for pos:line="935" pos:column="9">for <control pos:line="935" pos:column="13">(<init><expr><name pos:line="935" pos:column="14">i<pos:position pos:line="935" pos:column="15"/></name> <operator pos:line="935" pos:column="16">=<pos:position pos:line="935" pos:column="17"/></operator> <name pos:line="935" pos:column="18">filled<pos:position pos:line="935" pos:column="24"/></name> <operator pos:line="935" pos:column="25">=<pos:position pos:line="935" pos:column="26"/></operator> <literal type="number" pos:line="935" pos:column="27">0<pos:position pos:line="935" pos:column="28"/></literal></expr>;<pos:position pos:line="935" pos:column="29"/></init> <condition><expr><name pos:line="935" pos:column="30">i<pos:position pos:line="935" pos:column="31"/></name> <operator pos:line="935" pos:column="32">&lt;<pos:position pos:line="935" pos:column="36"/></operator> <name pos:line="935" pos:column="34">cnt<pos:position pos:line="935" pos:column="37"/></name></expr>;<pos:position pos:line="935" pos:column="38"/></condition> <incr><expr><name pos:line="935" pos:column="39">i<pos:position pos:line="935" pos:column="40"/></name><operator pos:line="935" pos:column="40">++<pos:position pos:line="935" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="935" pos:column="43"/></control>
		<block type="pseudo"><if pos:line="936" pos:column="17">if <condition pos:line="936" pos:column="20">(<expr><operator pos:line="936" pos:column="21">!<pos:position pos:line="936" pos:column="22"/></operator><name><name pos:line="936" pos:column="22">redundant<pos:position pos:line="936" pos:column="31"/></name><index pos:line="936" pos:column="31">[<expr><name pos:line="936" pos:column="32">i<pos:position pos:line="936" pos:column="33"/></name></expr>]<pos:position pos:line="936" pos:column="34"/></index></name></expr>)<pos:position pos:line="936" pos:column="35"/></condition><then pos:line="936" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="937" pos:column="25">array<pos:position pos:line="937" pos:column="30"/></name><index pos:line="937" pos:column="30">[<expr><name pos:line="937" pos:column="31">filled<pos:position pos:line="937" pos:column="37"/></name><operator pos:line="937" pos:column="37">++<pos:position pos:line="937" pos:column="39"/></operator></expr>]<pos:position pos:line="937" pos:column="40"/></index></name> <operator pos:line="937" pos:column="41">=<pos:position pos:line="937" pos:column="42"/></operator> <name><name pos:line="937" pos:column="43">work<pos:position pos:line="937" pos:column="47"/></name><index pos:line="937" pos:column="47">[<expr><name pos:line="937" pos:column="48">i<pos:position pos:line="937" pos:column="49"/></name></expr>]<pos:position pos:line="937" pos:column="50"/></index></name></expr>;<pos:position pos:line="937" pos:column="51"/></expr_stmt></block></then></if></block></for>
	<for pos:line="938" pos:column="9">for <control pos:line="938" pos:column="13">(<init><expr><name pos:line="938" pos:column="14">j<pos:position pos:line="938" pos:column="15"/></name> <operator pos:line="938" pos:column="16">=<pos:position pos:line="938" pos:column="17"/></operator> <name pos:line="938" pos:column="18">filled<pos:position pos:line="938" pos:column="24"/></name></expr><operator pos:line="938" pos:column="24">,<pos:position pos:line="938" pos:column="25"/></operator> <expr><name pos:line="938" pos:column="26">i<pos:position pos:line="938" pos:column="27"/></name> <operator pos:line="938" pos:column="28">=<pos:position pos:line="938" pos:column="29"/></operator> <literal type="number" pos:line="938" pos:column="30">0<pos:position pos:line="938" pos:column="31"/></literal></expr>;<pos:position pos:line="938" pos:column="32"/></init> <condition><expr><name pos:line="938" pos:column="33">i<pos:position pos:line="938" pos:column="34"/></name> <operator pos:line="938" pos:column="35">&lt;<pos:position pos:line="938" pos:column="39"/></operator> <name pos:line="938" pos:column="37">cnt<pos:position pos:line="938" pos:column="40"/></name></expr>;<pos:position pos:line="938" pos:column="41"/></condition> <incr><expr><name pos:line="938" pos:column="42">i<pos:position pos:line="938" pos:column="43"/></name><operator pos:line="938" pos:column="43">++<pos:position pos:line="938" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="938" pos:column="46"/></control>
		<block type="pseudo"><if pos:line="939" pos:column="17">if <condition pos:line="939" pos:column="20">(<expr><name><name pos:line="939" pos:column="21">redundant<pos:position pos:line="939" pos:column="30"/></name><index pos:line="939" pos:column="30">[<expr><name pos:line="939" pos:column="31">i<pos:position pos:line="939" pos:column="32"/></name></expr>]<pos:position pos:line="939" pos:column="33"/></index></name></expr>)<pos:position pos:line="939" pos:column="34"/></condition><then pos:line="939" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="940" pos:column="25">array<pos:position pos:line="940" pos:column="30"/></name><index pos:line="940" pos:column="30">[<expr><name pos:line="940" pos:column="31">j<pos:position pos:line="940" pos:column="32"/></name><operator pos:line="940" pos:column="32">++<pos:position pos:line="940" pos:column="34"/></operator></expr>]<pos:position pos:line="940" pos:column="35"/></index></name> <operator pos:line="940" pos:column="36">=<pos:position pos:line="940" pos:column="37"/></operator> <name><name pos:line="940" pos:column="38">work<pos:position pos:line="940" pos:column="42"/></name><index pos:line="940" pos:column="42">[<expr><name pos:line="940" pos:column="43">i<pos:position pos:line="940" pos:column="44"/></name></expr>]<pos:position pos:line="940" pos:column="45"/></index></name></expr>;<pos:position pos:line="940" pos:column="46"/></expr_stmt></block></then></if></block></for>
	<expr_stmt><expr><call><name pos:line="941" pos:column="9">free<pos:position pos:line="941" pos:column="13"/></name><argument_list pos:line="941" pos:column="13">(<argument><expr><name pos:line="941" pos:column="14">work<pos:position pos:line="941" pos:column="18"/></name></expr></argument>)<pos:position pos:line="941" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="941" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="942" pos:column="9">free<pos:position pos:line="942" pos:column="13"/></name><argument_list pos:line="942" pos:column="13">(<argument><expr><name pos:line="942" pos:column="14">redundant<pos:position pos:line="942" pos:column="23"/></name></expr></argument>)<pos:position pos:line="942" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="942" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="943" pos:column="9">free<pos:position pos:line="943" pos:column="13"/></name><argument_list pos:line="943" pos:column="13">(<argument><expr><name pos:line="943" pos:column="14">filled_index<pos:position pos:line="943" pos:column="26"/></name></expr></argument>)<pos:position pos:line="943" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="943" pos:column="28"/></expr_stmt>
	<return pos:line="944" pos:column="9">return <expr><name pos:line="944" pos:column="16">filled<pos:position pos:line="944" pos:column="22"/></name></expr>;<pos:position pos:line="944" pos:column="23"/></return>
}<pos:position pos:line="945" pos:column="2"/></block></function>

<function><specifier pos:line="947" pos:column="1">static<pos:position pos:line="947" pos:column="7"/></specifier> <type><name><name pos:line="947" pos:column="8">struct<pos:position pos:line="947" pos:column="14"/></name> <name pos:line="947" pos:column="15">commit_list<pos:position pos:line="947" pos:column="26"/></name></name> <modifier pos:line="947" pos:column="27">*<pos:position pos:line="947" pos:column="28"/></modifier></type><name pos:line="947" pos:column="28">get_merge_bases_many_0<pos:position pos:line="947" pos:column="50"/></name><parameter_list pos:line="947" pos:column="50">(<parameter><decl><type><name><name pos:line="947" pos:column="51">struct<pos:position pos:line="947" pos:column="57"/></name> <name pos:line="947" pos:column="58">commit<pos:position pos:line="947" pos:column="64"/></name></name> <modifier pos:line="947" pos:column="65">*<pos:position pos:line="947" pos:column="66"/></modifier></type><name pos:line="947" pos:column="66">one<pos:position pos:line="947" pos:column="69"/></name></decl></parameter>,
						  <parameter><decl><type><name pos:line="948" pos:column="51">int<pos:position pos:line="948" pos:column="54"/></name></type> <name pos:line="948" pos:column="55">n<pos:position pos:line="948" pos:column="56"/></name></decl></parameter>,
						  <parameter><decl><type><name><name pos:line="949" pos:column="51">struct<pos:position pos:line="949" pos:column="57"/></name> <name pos:line="949" pos:column="58">commit<pos:position pos:line="949" pos:column="64"/></name></name> <modifier pos:line="949" pos:column="65">*<pos:position pos:line="949" pos:column="66"/></modifier><modifier pos:line="949" pos:column="66">*<pos:position pos:line="949" pos:column="67"/></modifier></type><name pos:line="949" pos:column="67">twos<pos:position pos:line="949" pos:column="71"/></name></decl></parameter>,
						  <parameter><decl><type><name pos:line="950" pos:column="51">int<pos:position pos:line="950" pos:column="54"/></name></type> <name pos:line="950" pos:column="55">cleanup<pos:position pos:line="950" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="950" pos:column="63"/></parameter_list>
<block pos:line="951" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="952" pos:column="9">struct<pos:position pos:line="952" pos:column="15"/></name> <name pos:line="952" pos:column="16">commit_list<pos:position pos:line="952" pos:column="27"/></name></name> <modifier pos:line="952" pos:column="28">*<pos:position pos:line="952" pos:column="29"/></modifier></type><name pos:line="952" pos:column="29">list<pos:position pos:line="952" pos:column="33"/></name></decl>;<pos:position pos:line="952" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="953" pos:column="9">struct<pos:position pos:line="953" pos:column="15"/></name> <name pos:line="953" pos:column="16">commit<pos:position pos:line="953" pos:column="22"/></name></name> <modifier pos:line="953" pos:column="23">*<pos:position pos:line="953" pos:column="24"/></modifier><modifier pos:line="953" pos:column="24">*<pos:position pos:line="953" pos:column="25"/></modifier></type><name pos:line="953" pos:column="25">rslt<pos:position pos:line="953" pos:column="29"/></name></decl>;<pos:position pos:line="953" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="954" pos:column="9">struct<pos:position pos:line="954" pos:column="15"/></name> <name pos:line="954" pos:column="16">commit_list<pos:position pos:line="954" pos:column="27"/></name></name> <modifier pos:line="954" pos:column="28">*<pos:position pos:line="954" pos:column="29"/></modifier></type><name pos:line="954" pos:column="29">result<pos:position pos:line="954" pos:column="35"/></name></decl>;<pos:position pos:line="954" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="955" pos:column="9">int<pos:position pos:line="955" pos:column="12"/></name></type> <name pos:line="955" pos:column="13">cnt<pos:position pos:line="955" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="955" pos:column="18">i<pos:position pos:line="955" pos:column="19"/></name></decl>;<pos:position pos:line="955" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="957" pos:column="9">result<pos:position pos:line="957" pos:column="15"/></name> <operator pos:line="957" pos:column="16">=<pos:position pos:line="957" pos:column="17"/></operator> <call><name pos:line="957" pos:column="18">merge_bases_many<pos:position pos:line="957" pos:column="34"/></name><argument_list pos:line="957" pos:column="34">(<argument><expr><name pos:line="957" pos:column="35">one<pos:position pos:line="957" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="957" pos:column="40">n<pos:position pos:line="957" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="957" pos:column="43">twos<pos:position pos:line="957" pos:column="47"/></name></expr></argument>)<pos:position pos:line="957" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="957" pos:column="49"/></expr_stmt>
	<for pos:line="958" pos:column="9">for <control pos:line="958" pos:column="13">(<init><expr><name pos:line="958" pos:column="14">i<pos:position pos:line="958" pos:column="15"/></name> <operator pos:line="958" pos:column="16">=<pos:position pos:line="958" pos:column="17"/></operator> <literal type="number" pos:line="958" pos:column="18">0<pos:position pos:line="958" pos:column="19"/></literal></expr>;<pos:position pos:line="958" pos:column="20"/></init> <condition><expr><name pos:line="958" pos:column="21">i<pos:position pos:line="958" pos:column="22"/></name> <operator pos:line="958" pos:column="23">&lt;<pos:position pos:line="958" pos:column="27"/></operator> <name pos:line="958" pos:column="25">n<pos:position pos:line="958" pos:column="26"/></name></expr>;<pos:position pos:line="958" pos:column="27"/></condition> <incr><expr><name pos:line="958" pos:column="28">i<pos:position pos:line="958" pos:column="29"/></name><operator pos:line="958" pos:column="29">++<pos:position pos:line="958" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="958" pos:column="32"/></control> <block pos:line="958" pos:column="33">{
		<if pos:line="959" pos:column="17">if <condition pos:line="959" pos:column="20">(<expr><name pos:line="959" pos:column="21">one<pos:position pos:line="959" pos:column="24"/></name> <operator pos:line="959" pos:column="25">==<pos:position pos:line="959" pos:column="27"/></operator> <name><name pos:line="959" pos:column="28">twos<pos:position pos:line="959" pos:column="32"/></name><index pos:line="959" pos:column="32">[<expr><name pos:line="959" pos:column="33">i<pos:position pos:line="959" pos:column="34"/></name></expr>]<pos:position pos:line="959" pos:column="35"/></index></name></expr>)<pos:position pos:line="959" pos:column="36"/></condition><then pos:line="959" pos:column="36">
			<block type="pseudo"><return pos:line="960" pos:column="25">return <expr><name pos:line="960" pos:column="32">result<pos:position pos:line="960" pos:column="38"/></name></expr>;<pos:position pos:line="960" pos:column="39"/></return></block></then></if>
	}<pos:position pos:line="961" pos:column="10"/></block></for>
	<if pos:line="962" pos:column="9">if <condition pos:line="962" pos:column="12">(<expr><operator pos:line="962" pos:column="13">!<pos:position pos:line="962" pos:column="14"/></operator><name pos:line="962" pos:column="14">result<pos:position pos:line="962" pos:column="20"/></name> <operator pos:line="962" pos:column="21">||<pos:position pos:line="962" pos:column="23"/></operator> <operator pos:line="962" pos:column="24">!<pos:position pos:line="962" pos:column="25"/></operator><name><name pos:line="962" pos:column="25">result<pos:position pos:line="962" pos:column="31"/></name><operator pos:line="962" pos:column="31">-&gt;<pos:position pos:line="962" pos:column="36"/></operator><name pos:line="962" pos:column="33">next<pos:position pos:line="962" pos:column="37"/></name></name></expr>)<pos:position pos:line="962" pos:column="38"/></condition><then pos:line="962" pos:column="38"> <block pos:line="962" pos:column="39">{
		<if pos:line="963" pos:column="17">if <condition pos:line="963" pos:column="20">(<expr><name pos:line="963" pos:column="21">cleanup<pos:position pos:line="963" pos:column="28"/></name></expr>)<pos:position pos:line="963" pos:column="29"/></condition><then pos:line="963" pos:column="29"> <block pos:line="963" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="964" pos:column="25">clear_commit_marks<pos:position pos:line="964" pos:column="43"/></name><argument_list pos:line="964" pos:column="43">(<argument><expr><name pos:line="964" pos:column="44">one<pos:position pos:line="964" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="964" pos:column="49">all_flags<pos:position pos:line="964" pos:column="58"/></name></expr></argument>)<pos:position pos:line="964" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="964" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="965" pos:column="25">clear_commit_marks_many<pos:position pos:line="965" pos:column="48"/></name><argument_list pos:line="965" pos:column="48">(<argument><expr><name pos:line="965" pos:column="49">n<pos:position pos:line="965" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="965" pos:column="52">twos<pos:position pos:line="965" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="965" pos:column="58">all_flags<pos:position pos:line="965" pos:column="67"/></name></expr></argument>)<pos:position pos:line="965" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="965" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="966" pos:column="18"/></block></then></if>
		<return pos:line="967" pos:column="17">return <expr><name pos:line="967" pos:column="24">result<pos:position pos:line="967" pos:column="30"/></name></expr>;<pos:position pos:line="967" pos:column="31"/></return>
	}<pos:position pos:line="968" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="970" pos:column="9">/* There are more than one */</comment>
	<expr_stmt><expr><name pos:line="971" pos:column="9">cnt<pos:position pos:line="971" pos:column="12"/></name> <operator pos:line="971" pos:column="13">=<pos:position pos:line="971" pos:column="14"/></operator> <call><name pos:line="971" pos:column="15">commit_list_count<pos:position pos:line="971" pos:column="32"/></name><argument_list pos:line="971" pos:column="32">(<argument><expr><name pos:line="971" pos:column="33">result<pos:position pos:line="971" pos:column="39"/></name></expr></argument>)<pos:position pos:line="971" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="971" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="972" pos:column="9">rslt<pos:position pos:line="972" pos:column="13"/></name> <operator pos:line="972" pos:column="14">=<pos:position pos:line="972" pos:column="15"/></operator> <call><name pos:line="972" pos:column="16">xcalloc<pos:position pos:line="972" pos:column="23"/></name><argument_list pos:line="972" pos:column="23">(<argument><expr><name pos:line="972" pos:column="24">cnt<pos:position pos:line="972" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="972" pos:column="29">sizeof<argument_list pos:line="972" pos:column="35">(<argument><expr><operator pos:line="972" pos:column="36">*<pos:position pos:line="972" pos:column="37"/></operator><name pos:line="972" pos:column="37">rslt<pos:position pos:line="972" pos:column="41"/></name></expr></argument>)<pos:position pos:line="972" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="972" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="972" pos:column="44"/></expr_stmt>
	<for pos:line="973" pos:column="9">for <control pos:line="973" pos:column="13">(<init><expr><name pos:line="973" pos:column="14">list<pos:position pos:line="973" pos:column="18"/></name> <operator pos:line="973" pos:column="19">=<pos:position pos:line="973" pos:column="20"/></operator> <name pos:line="973" pos:column="21">result<pos:position pos:line="973" pos:column="27"/></name></expr><operator pos:line="973" pos:column="27">,<pos:position pos:line="973" pos:column="28"/></operator> <expr><name pos:line="973" pos:column="29">i<pos:position pos:line="973" pos:column="30"/></name> <operator pos:line="973" pos:column="31">=<pos:position pos:line="973" pos:column="32"/></operator> <literal type="number" pos:line="973" pos:column="33">0<pos:position pos:line="973" pos:column="34"/></literal></expr>;<pos:position pos:line="973" pos:column="35"/></init> <condition><expr><name pos:line="973" pos:column="36">list<pos:position pos:line="973" pos:column="40"/></name></expr>;<pos:position pos:line="973" pos:column="41"/></condition> <incr><expr><name pos:line="973" pos:column="42">list<pos:position pos:line="973" pos:column="46"/></name> <operator pos:line="973" pos:column="47">=<pos:position pos:line="973" pos:column="48"/></operator> <name><name pos:line="973" pos:column="49">list<pos:position pos:line="973" pos:column="53"/></name><operator pos:line="973" pos:column="53">-&gt;<pos:position pos:line="973" pos:column="58"/></operator><name pos:line="973" pos:column="55">next<pos:position pos:line="973" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="973" pos:column="60"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="974" pos:column="17">rslt<pos:position pos:line="974" pos:column="21"/></name><index pos:line="974" pos:column="21">[<expr><name pos:line="974" pos:column="22">i<pos:position pos:line="974" pos:column="23"/></name><operator pos:line="974" pos:column="23">++<pos:position pos:line="974" pos:column="25"/></operator></expr>]<pos:position pos:line="974" pos:column="26"/></index></name> <operator pos:line="974" pos:column="27">=<pos:position pos:line="974" pos:column="28"/></operator> <name><name pos:line="974" pos:column="29">list<pos:position pos:line="974" pos:column="33"/></name><operator pos:line="974" pos:column="33">-&gt;<pos:position pos:line="974" pos:column="38"/></operator><name pos:line="974" pos:column="35">item<pos:position pos:line="974" pos:column="39"/></name></name></expr>;<pos:position pos:line="974" pos:column="40"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="975" pos:column="9">free_commit_list<pos:position pos:line="975" pos:column="25"/></name><argument_list pos:line="975" pos:column="25">(<argument><expr><name pos:line="975" pos:column="26">result<pos:position pos:line="975" pos:column="32"/></name></expr></argument>)<pos:position pos:line="975" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="975" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="977" pos:column="9">clear_commit_marks<pos:position pos:line="977" pos:column="27"/></name><argument_list pos:line="977" pos:column="27">(<argument><expr><name pos:line="977" pos:column="28">one<pos:position pos:line="977" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="977" pos:column="33">all_flags<pos:position pos:line="977" pos:column="42"/></name></expr></argument>)<pos:position pos:line="977" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="977" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="978" pos:column="9">clear_commit_marks_many<pos:position pos:line="978" pos:column="32"/></name><argument_list pos:line="978" pos:column="32">(<argument><expr><name pos:line="978" pos:column="33">n<pos:position pos:line="978" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="978" pos:column="36">twos<pos:position pos:line="978" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="978" pos:column="42">all_flags<pos:position pos:line="978" pos:column="51"/></name></expr></argument>)<pos:position pos:line="978" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="978" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><name pos:line="980" pos:column="9">cnt<pos:position pos:line="980" pos:column="12"/></name> <operator pos:line="980" pos:column="13">=<pos:position pos:line="980" pos:column="14"/></operator> <call><name pos:line="980" pos:column="15">remove_redundant<pos:position pos:line="980" pos:column="31"/></name><argument_list pos:line="980" pos:column="31">(<argument><expr><name pos:line="980" pos:column="32">rslt<pos:position pos:line="980" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="980" pos:column="38">cnt<pos:position pos:line="980" pos:column="41"/></name></expr></argument>)<pos:position pos:line="980" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="980" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="981" pos:column="9">result<pos:position pos:line="981" pos:column="15"/></name> <operator pos:line="981" pos:column="16">=<pos:position pos:line="981" pos:column="17"/></operator> <name pos:line="981" pos:column="18">NULL<pos:position pos:line="981" pos:column="22"/></name></expr>;<pos:position pos:line="981" pos:column="23"/></expr_stmt>
	<for pos:line="982" pos:column="9">for <control pos:line="982" pos:column="13">(<init><expr><name pos:line="982" pos:column="14">i<pos:position pos:line="982" pos:column="15"/></name> <operator pos:line="982" pos:column="16">=<pos:position pos:line="982" pos:column="17"/></operator> <literal type="number" pos:line="982" pos:column="18">0<pos:position pos:line="982" pos:column="19"/></literal></expr>;<pos:position pos:line="982" pos:column="20"/></init> <condition><expr><name pos:line="982" pos:column="21">i<pos:position pos:line="982" pos:column="22"/></name> <operator pos:line="982" pos:column="23">&lt;<pos:position pos:line="982" pos:column="27"/></operator> <name pos:line="982" pos:column="25">cnt<pos:position pos:line="982" pos:column="28"/></name></expr>;<pos:position pos:line="982" pos:column="29"/></condition> <incr><expr><name pos:line="982" pos:column="30">i<pos:position pos:line="982" pos:column="31"/></name><operator pos:line="982" pos:column="31">++<pos:position pos:line="982" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="982" pos:column="34"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="983" pos:column="17">commit_list_insert_by_date<pos:position pos:line="983" pos:column="43"/></name><argument_list pos:line="983" pos:column="43">(<argument><expr><name><name pos:line="983" pos:column="44">rslt<pos:position pos:line="983" pos:column="48"/></name><index pos:line="983" pos:column="48">[<expr><name pos:line="983" pos:column="49">i<pos:position pos:line="983" pos:column="50"/></name></expr>]<pos:position pos:line="983" pos:column="51"/></index></name></expr></argument>, <argument><expr><operator pos:line="983" pos:column="53">&amp;<pos:position pos:line="983" pos:column="58"/></operator><name pos:line="983" pos:column="54">result<pos:position pos:line="983" pos:column="60"/></name></expr></argument>)<pos:position pos:line="983" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="983" pos:column="62"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="984" pos:column="9">free<pos:position pos:line="984" pos:column="13"/></name><argument_list pos:line="984" pos:column="13">(<argument><expr><name pos:line="984" pos:column="14">rslt<pos:position pos:line="984" pos:column="18"/></name></expr></argument>)<pos:position pos:line="984" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="984" pos:column="20"/></expr_stmt>
	<return pos:line="985" pos:column="9">return <expr><name pos:line="985" pos:column="16">result<pos:position pos:line="985" pos:column="22"/></name></expr>;<pos:position pos:line="985" pos:column="23"/></return>
}<pos:position pos:line="986" pos:column="2"/></block></function>

<function><type><name><name pos:line="988" pos:column="1">struct<pos:position pos:line="988" pos:column="7"/></name> <name pos:line="988" pos:column="8">commit_list<pos:position pos:line="988" pos:column="19"/></name></name> <modifier pos:line="988" pos:column="20">*<pos:position pos:line="988" pos:column="21"/></modifier></type><name pos:line="988" pos:column="21">get_merge_bases_many<pos:position pos:line="988" pos:column="41"/></name><parameter_list pos:line="988" pos:column="41">(<parameter><decl><type><name><name pos:line="988" pos:column="42">struct<pos:position pos:line="988" pos:column="48"/></name> <name pos:line="988" pos:column="49">commit<pos:position pos:line="988" pos:column="55"/></name></name> <modifier pos:line="988" pos:column="56">*<pos:position pos:line="988" pos:column="57"/></modifier></type><name pos:line="988" pos:column="57">one<pos:position pos:line="988" pos:column="60"/></name></decl></parameter>,
					 <parameter><decl><type><name pos:line="989" pos:column="42">int<pos:position pos:line="989" pos:column="45"/></name></type> <name pos:line="989" pos:column="46">n<pos:position pos:line="989" pos:column="47"/></name></decl></parameter>,
					 <parameter><decl><type><name><name pos:line="990" pos:column="42">struct<pos:position pos:line="990" pos:column="48"/></name> <name pos:line="990" pos:column="49">commit<pos:position pos:line="990" pos:column="55"/></name></name> <modifier pos:line="990" pos:column="56">*<pos:position pos:line="990" pos:column="57"/></modifier><modifier pos:line="990" pos:column="57">*<pos:position pos:line="990" pos:column="58"/></modifier></type><name pos:line="990" pos:column="58">twos<pos:position pos:line="990" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="990" pos:column="63"/></parameter_list>
<block pos:line="991" pos:column="1">{
	<return pos:line="992" pos:column="9">return <expr><call><name pos:line="992" pos:column="16">get_merge_bases_many_0<pos:position pos:line="992" pos:column="38"/></name><argument_list pos:line="992" pos:column="38">(<argument><expr><name pos:line="992" pos:column="39">one<pos:position pos:line="992" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="992" pos:column="44">n<pos:position pos:line="992" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="992" pos:column="47">twos<pos:position pos:line="992" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="992" pos:column="53">1<pos:position pos:line="992" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="992" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="992" pos:column="56"/></return>
}<pos:position pos:line="993" pos:column="2"/></block></function>

<function><type><name><name pos:line="995" pos:column="1">struct<pos:position pos:line="995" pos:column="7"/></name> <name pos:line="995" pos:column="8">commit_list<pos:position pos:line="995" pos:column="19"/></name></name> <modifier pos:line="995" pos:column="20">*<pos:position pos:line="995" pos:column="21"/></modifier></type><name pos:line="995" pos:column="21">get_merge_bases_many_dirty<pos:position pos:line="995" pos:column="47"/></name><parameter_list pos:line="995" pos:column="47">(<parameter><decl><type><name><name pos:line="995" pos:column="48">struct<pos:position pos:line="995" pos:column="54"/></name> <name pos:line="995" pos:column="55">commit<pos:position pos:line="995" pos:column="61"/></name></name> <modifier pos:line="995" pos:column="62">*<pos:position pos:line="995" pos:column="63"/></modifier></type><name pos:line="995" pos:column="63">one<pos:position pos:line="995" pos:column="66"/></name></decl></parameter>,
					       <parameter><decl><type><name pos:line="996" pos:column="48">int<pos:position pos:line="996" pos:column="51"/></name></type> <name pos:line="996" pos:column="52">n<pos:position pos:line="996" pos:column="53"/></name></decl></parameter>,
					       <parameter><decl><type><name><name pos:line="997" pos:column="48">struct<pos:position pos:line="997" pos:column="54"/></name> <name pos:line="997" pos:column="55">commit<pos:position pos:line="997" pos:column="61"/></name></name> <modifier pos:line="997" pos:column="62">*<pos:position pos:line="997" pos:column="63"/></modifier><modifier pos:line="997" pos:column="63">*<pos:position pos:line="997" pos:column="64"/></modifier></type><name pos:line="997" pos:column="64">twos<pos:position pos:line="997" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="997" pos:column="69"/></parameter_list>
<block pos:line="998" pos:column="1">{
	<return pos:line="999" pos:column="9">return <expr><call><name pos:line="999" pos:column="16">get_merge_bases_many_0<pos:position pos:line="999" pos:column="38"/></name><argument_list pos:line="999" pos:column="38">(<argument><expr><name pos:line="999" pos:column="39">one<pos:position pos:line="999" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="999" pos:column="44">n<pos:position pos:line="999" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="999" pos:column="47">twos<pos:position pos:line="999" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="999" pos:column="53">0<pos:position pos:line="999" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="999" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="999" pos:column="56"/></return>
}<pos:position pos:line="1000" pos:column="2"/></block></function>

<function><type><name><name pos:line="1002" pos:column="1">struct<pos:position pos:line="1002" pos:column="7"/></name> <name pos:line="1002" pos:column="8">commit_list<pos:position pos:line="1002" pos:column="19"/></name></name> <modifier pos:line="1002" pos:column="20">*<pos:position pos:line="1002" pos:column="21"/></modifier></type><name pos:line="1002" pos:column="21">get_merge_bases<pos:position pos:line="1002" pos:column="36"/></name><parameter_list pos:line="1002" pos:column="36">(<parameter><decl><type><name><name pos:line="1002" pos:column="37">struct<pos:position pos:line="1002" pos:column="43"/></name> <name pos:line="1002" pos:column="44">commit<pos:position pos:line="1002" pos:column="50"/></name></name> <modifier pos:line="1002" pos:column="51">*<pos:position pos:line="1002" pos:column="52"/></modifier></type><name pos:line="1002" pos:column="52">one<pos:position pos:line="1002" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1002" pos:column="57">struct<pos:position pos:line="1002" pos:column="63"/></name> <name pos:line="1002" pos:column="64">commit<pos:position pos:line="1002" pos:column="70"/></name></name> <modifier pos:line="1002" pos:column="71">*<pos:position pos:line="1002" pos:column="72"/></modifier></type><name pos:line="1002" pos:column="72">two<pos:position pos:line="1002" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1002" pos:column="76"/></parameter_list>
<block pos:line="1003" pos:column="1">{
	<return pos:line="1004" pos:column="9">return <expr><call><name pos:line="1004" pos:column="16">get_merge_bases_many_0<pos:position pos:line="1004" pos:column="38"/></name><argument_list pos:line="1004" pos:column="38">(<argument><expr><name pos:line="1004" pos:column="39">one<pos:position pos:line="1004" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1004" pos:column="44">1<pos:position pos:line="1004" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="1004" pos:column="47">&amp;<pos:position pos:line="1004" pos:column="52"/></operator><name pos:line="1004" pos:column="48">two<pos:position pos:line="1004" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1004" pos:column="53">1<pos:position pos:line="1004" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="1004" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1004" pos:column="56"/></return>
}<pos:position pos:line="1005" pos:column="2"/></block></function>

<comment type="block" pos:line="1007" pos:column="1">/*
 * Is "commit" a descendant of one of the elements on the "with_commit" list?
 */</comment>
<function><type><name pos:line="1010" pos:column="1">int<pos:position pos:line="1010" pos:column="4"/></name></type> <name pos:line="1010" pos:column="5">is_descendant_of<pos:position pos:line="1010" pos:column="21"/></name><parameter_list pos:line="1010" pos:column="21">(<parameter><decl><type><name><name pos:line="1010" pos:column="22">struct<pos:position pos:line="1010" pos:column="28"/></name> <name pos:line="1010" pos:column="29">commit<pos:position pos:line="1010" pos:column="35"/></name></name> <modifier pos:line="1010" pos:column="36">*<pos:position pos:line="1010" pos:column="37"/></modifier></type><name pos:line="1010" pos:column="37">commit<pos:position pos:line="1010" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1010" pos:column="45">struct<pos:position pos:line="1010" pos:column="51"/></name> <name pos:line="1010" pos:column="52">commit_list<pos:position pos:line="1010" pos:column="63"/></name></name> <modifier pos:line="1010" pos:column="64">*<pos:position pos:line="1010" pos:column="65"/></modifier></type><name pos:line="1010" pos:column="65">with_commit<pos:position pos:line="1010" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1010" pos:column="77"/></parameter_list>
<block pos:line="1011" pos:column="1">{
	<if pos:line="1012" pos:column="9">if <condition pos:line="1012" pos:column="12">(<expr><operator pos:line="1012" pos:column="13">!<pos:position pos:line="1012" pos:column="14"/></operator><name pos:line="1012" pos:column="14">with_commit<pos:position pos:line="1012" pos:column="25"/></name></expr>)<pos:position pos:line="1012" pos:column="26"/></condition><then pos:line="1012" pos:column="26">
		<block type="pseudo"><return pos:line="1013" pos:column="17">return <expr><literal type="number" pos:line="1013" pos:column="24">1<pos:position pos:line="1013" pos:column="25"/></literal></expr>;<pos:position pos:line="1013" pos:column="26"/></return></block></then></if>
	<while pos:line="1014" pos:column="9">while <condition pos:line="1014" pos:column="15">(<expr><name pos:line="1014" pos:column="16">with_commit<pos:position pos:line="1014" pos:column="27"/></name></expr>)<pos:position pos:line="1014" pos:column="28"/></condition> <block pos:line="1014" pos:column="29">{
		<decl_stmt><decl><type><name><name pos:line="1015" pos:column="17">struct<pos:position pos:line="1015" pos:column="23"/></name> <name pos:line="1015" pos:column="24">commit<pos:position pos:line="1015" pos:column="30"/></name></name> <modifier pos:line="1015" pos:column="31">*<pos:position pos:line="1015" pos:column="32"/></modifier></type><name pos:line="1015" pos:column="32">other<pos:position pos:line="1015" pos:column="37"/></name></decl>;<pos:position pos:line="1015" pos:column="38"/></decl_stmt>

		<expr_stmt><expr><name pos:line="1017" pos:column="17">other<pos:position pos:line="1017" pos:column="22"/></name> <operator pos:line="1017" pos:column="23">=<pos:position pos:line="1017" pos:column="24"/></operator> <name><name pos:line="1017" pos:column="25">with_commit<pos:position pos:line="1017" pos:column="36"/></name><operator pos:line="1017" pos:column="36">-&gt;<pos:position pos:line="1017" pos:column="41"/></operator><name pos:line="1017" pos:column="38">item<pos:position pos:line="1017" pos:column="42"/></name></name></expr>;<pos:position pos:line="1017" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1018" pos:column="17">with_commit<pos:position pos:line="1018" pos:column="28"/></name> <operator pos:line="1018" pos:column="29">=<pos:position pos:line="1018" pos:column="30"/></operator> <name><name pos:line="1018" pos:column="31">with_commit<pos:position pos:line="1018" pos:column="42"/></name><operator pos:line="1018" pos:column="42">-&gt;<pos:position pos:line="1018" pos:column="47"/></operator><name pos:line="1018" pos:column="44">next<pos:position pos:line="1018" pos:column="48"/></name></name></expr>;<pos:position pos:line="1018" pos:column="49"/></expr_stmt>
		<if pos:line="1019" pos:column="17">if <condition pos:line="1019" pos:column="20">(<expr><call><name pos:line="1019" pos:column="21">in_merge_bases<pos:position pos:line="1019" pos:column="35"/></name><argument_list pos:line="1019" pos:column="35">(<argument><expr><name pos:line="1019" pos:column="36">other<pos:position pos:line="1019" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="1019" pos:column="43">commit<pos:position pos:line="1019" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1019" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="1019" pos:column="51"/></condition><then pos:line="1019" pos:column="51">
			<block type="pseudo"><return pos:line="1020" pos:column="25">return <expr><literal type="number" pos:line="1020" pos:column="32">1<pos:position pos:line="1020" pos:column="33"/></literal></expr>;<pos:position pos:line="1020" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="1021" pos:column="10"/></block></while>
	<return pos:line="1022" pos:column="9">return <expr><literal type="number" pos:line="1022" pos:column="16">0<pos:position pos:line="1022" pos:column="17"/></literal></expr>;<pos:position pos:line="1022" pos:column="18"/></return>
}<pos:position pos:line="1023" pos:column="2"/></block></function>

<comment type="block" pos:line="1025" pos:column="1">/*
 * Is "commit" an ancestor of one of the "references"?
 */</comment>
<function><type><name pos:line="1028" pos:column="1">int<pos:position pos:line="1028" pos:column="4"/></name></type> <name pos:line="1028" pos:column="5">in_merge_bases_many<pos:position pos:line="1028" pos:column="24"/></name><parameter_list pos:line="1028" pos:column="24">(<parameter><decl><type><name><name pos:line="1028" pos:column="25">struct<pos:position pos:line="1028" pos:column="31"/></name> <name pos:line="1028" pos:column="32">commit<pos:position pos:line="1028" pos:column="38"/></name></name> <modifier pos:line="1028" pos:column="39">*<pos:position pos:line="1028" pos:column="40"/></modifier></type><name pos:line="1028" pos:column="40">commit<pos:position pos:line="1028" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1028" pos:column="48">int<pos:position pos:line="1028" pos:column="51"/></name></type> <name pos:line="1028" pos:column="52">nr_reference<pos:position pos:line="1028" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1028" pos:column="66">struct<pos:position pos:line="1028" pos:column="72"/></name> <name pos:line="1028" pos:column="73">commit<pos:position pos:line="1028" pos:column="79"/></name></name> <modifier pos:line="1028" pos:column="80">*<pos:position pos:line="1028" pos:column="81"/></modifier><modifier pos:line="1028" pos:column="81">*<pos:position pos:line="1028" pos:column="82"/></modifier></type><name pos:line="1028" pos:column="82">reference<pos:position pos:line="1028" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="1028" pos:column="92"/></parameter_list>
<block pos:line="1029" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1030" pos:column="9">struct<pos:position pos:line="1030" pos:column="15"/></name> <name pos:line="1030" pos:column="16">commit_list<pos:position pos:line="1030" pos:column="27"/></name></name> <modifier pos:line="1030" pos:column="28">*<pos:position pos:line="1030" pos:column="29"/></modifier></type><name pos:line="1030" pos:column="29">bases<pos:position pos:line="1030" pos:column="34"/></name></decl>;<pos:position pos:line="1030" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1031" pos:column="9">int<pos:position pos:line="1031" pos:column="12"/></name></type> <name pos:line="1031" pos:column="13">ret<pos:position pos:line="1031" pos:column="16"/></name> <init pos:line="1031" pos:column="17">= <expr><literal type="number" pos:line="1031" pos:column="19">0<pos:position pos:line="1031" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="1031" pos:column="22">i<pos:position pos:line="1031" pos:column="23"/></name></decl>;<pos:position pos:line="1031" pos:column="24"/></decl_stmt>

	<if pos:line="1033" pos:column="9">if <condition pos:line="1033" pos:column="12">(<expr><call><name pos:line="1033" pos:column="13">parse_commit<pos:position pos:line="1033" pos:column="25"/></name><argument_list pos:line="1033" pos:column="25">(<argument><expr><name pos:line="1033" pos:column="26">commit<pos:position pos:line="1033" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1033" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="1033" pos:column="34"/></condition><then pos:line="1033" pos:column="34">
		<block type="pseudo"><return pos:line="1034" pos:column="17">return <expr><name pos:line="1034" pos:column="24">ret<pos:position pos:line="1034" pos:column="27"/></name></expr>;<pos:position pos:line="1034" pos:column="28"/></return></block></then></if>
	<for pos:line="1035" pos:column="9">for <control pos:line="1035" pos:column="13">(<init><expr><name pos:line="1035" pos:column="14">i<pos:position pos:line="1035" pos:column="15"/></name> <operator pos:line="1035" pos:column="16">=<pos:position pos:line="1035" pos:column="17"/></operator> <literal type="number" pos:line="1035" pos:column="18">0<pos:position pos:line="1035" pos:column="19"/></literal></expr>;<pos:position pos:line="1035" pos:column="20"/></init> <condition><expr><name pos:line="1035" pos:column="21">i<pos:position pos:line="1035" pos:column="22"/></name> <operator pos:line="1035" pos:column="23">&lt;<pos:position pos:line="1035" pos:column="27"/></operator> <name pos:line="1035" pos:column="25">nr_reference<pos:position pos:line="1035" pos:column="37"/></name></expr>;<pos:position pos:line="1035" pos:column="38"/></condition> <incr><expr><name pos:line="1035" pos:column="39">i<pos:position pos:line="1035" pos:column="40"/></name><operator pos:line="1035" pos:column="40">++<pos:position pos:line="1035" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="1035" pos:column="43"/></control>
		<block type="pseudo"><if pos:line="1036" pos:column="17">if <condition pos:line="1036" pos:column="20">(<expr><call><name pos:line="1036" pos:column="21">parse_commit<pos:position pos:line="1036" pos:column="33"/></name><argument_list pos:line="1036" pos:column="33">(<argument><expr><name><name pos:line="1036" pos:column="34">reference<pos:position pos:line="1036" pos:column="43"/></name><index pos:line="1036" pos:column="43">[<expr><name pos:line="1036" pos:column="44">i<pos:position pos:line="1036" pos:column="45"/></name></expr>]<pos:position pos:line="1036" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="1036" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="1036" pos:column="48"/></condition><then pos:line="1036" pos:column="48">
			<block type="pseudo"><return pos:line="1037" pos:column="25">return <expr><name pos:line="1037" pos:column="32">ret<pos:position pos:line="1037" pos:column="35"/></name></expr>;<pos:position pos:line="1037" pos:column="36"/></return></block></then></if></block></for>

	<expr_stmt><expr><name pos:line="1039" pos:column="9">bases<pos:position pos:line="1039" pos:column="14"/></name> <operator pos:line="1039" pos:column="15">=<pos:position pos:line="1039" pos:column="16"/></operator> <call><name pos:line="1039" pos:column="17">paint_down_to_common<pos:position pos:line="1039" pos:column="37"/></name><argument_list pos:line="1039" pos:column="37">(<argument><expr><name pos:line="1039" pos:column="38">commit<pos:position pos:line="1039" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1039" pos:column="46">nr_reference<pos:position pos:line="1039" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="1039" pos:column="60">reference<pos:position pos:line="1039" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1039" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1039" pos:column="71"/></expr_stmt>
	<if pos:line="1040" pos:column="9">if <condition pos:line="1040" pos:column="12">(<expr><name><name pos:line="1040" pos:column="13">commit<pos:position pos:line="1040" pos:column="19"/></name><operator pos:line="1040" pos:column="19">-&gt;<pos:position pos:line="1040" pos:column="24"/></operator><name pos:line="1040" pos:column="21">object<pos:position pos:line="1040" pos:column="27"/></name><operator pos:line="1040" pos:column="27">.<pos:position pos:line="1040" pos:column="28"/></operator><name pos:line="1040" pos:column="28">flags<pos:position pos:line="1040" pos:column="33"/></name></name> <operator pos:line="1040" pos:column="34">&amp;<pos:position pos:line="1040" pos:column="39"/></operator> <name pos:line="1040" pos:column="36">PARENT2<pos:position pos:line="1040" pos:column="43"/></name></expr>)<pos:position pos:line="1040" pos:column="44"/></condition><then pos:line="1040" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name pos:line="1041" pos:column="17">ret<pos:position pos:line="1041" pos:column="20"/></name> <operator pos:line="1041" pos:column="21">=<pos:position pos:line="1041" pos:column="22"/></operator> <literal type="number" pos:line="1041" pos:column="23">1<pos:position pos:line="1041" pos:column="24"/></literal></expr>;<pos:position pos:line="1041" pos:column="25"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="1042" pos:column="9">clear_commit_marks<pos:position pos:line="1042" pos:column="27"/></name><argument_list pos:line="1042" pos:column="27">(<argument><expr><name pos:line="1042" pos:column="28">commit<pos:position pos:line="1042" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1042" pos:column="36">all_flags<pos:position pos:line="1042" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1042" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="1042" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1043" pos:column="9">clear_commit_marks_many<pos:position pos:line="1043" pos:column="32"/></name><argument_list pos:line="1043" pos:column="32">(<argument><expr><name pos:line="1043" pos:column="33">nr_reference<pos:position pos:line="1043" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1043" pos:column="47">reference<pos:position pos:line="1043" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="1043" pos:column="58">all_flags<pos:position pos:line="1043" pos:column="67"/></name></expr></argument>)<pos:position pos:line="1043" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1043" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1044" pos:column="9">free_commit_list<pos:position pos:line="1044" pos:column="25"/></name><argument_list pos:line="1044" pos:column="25">(<argument><expr><name pos:line="1044" pos:column="26">bases<pos:position pos:line="1044" pos:column="31"/></name></expr></argument>)<pos:position pos:line="1044" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1044" pos:column="33"/></expr_stmt>
	<return pos:line="1045" pos:column="9">return <expr><name pos:line="1045" pos:column="16">ret<pos:position pos:line="1045" pos:column="19"/></name></expr>;<pos:position pos:line="1045" pos:column="20"/></return>
}<pos:position pos:line="1046" pos:column="2"/></block></function>

<comment type="block" pos:line="1048" pos:column="1">/*
 * Is "commit" an ancestor of (i.e. reachable from) the "reference"?
 */</comment>
<function><type><name pos:line="1051" pos:column="1">int<pos:position pos:line="1051" pos:column="4"/></name></type> <name pos:line="1051" pos:column="5">in_merge_bases<pos:position pos:line="1051" pos:column="19"/></name><parameter_list pos:line="1051" pos:column="19">(<parameter><decl><type><name><name pos:line="1051" pos:column="20">struct<pos:position pos:line="1051" pos:column="26"/></name> <name pos:line="1051" pos:column="27">commit<pos:position pos:line="1051" pos:column="33"/></name></name> <modifier pos:line="1051" pos:column="34">*<pos:position pos:line="1051" pos:column="35"/></modifier></type><name pos:line="1051" pos:column="35">commit<pos:position pos:line="1051" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1051" pos:column="43">struct<pos:position pos:line="1051" pos:column="49"/></name> <name pos:line="1051" pos:column="50">commit<pos:position pos:line="1051" pos:column="56"/></name></name> <modifier pos:line="1051" pos:column="57">*<pos:position pos:line="1051" pos:column="58"/></modifier></type><name pos:line="1051" pos:column="58">reference<pos:position pos:line="1051" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1051" pos:column="68"/></parameter_list>
<block pos:line="1052" pos:column="1">{
	<return pos:line="1053" pos:column="9">return <expr><call><name pos:line="1053" pos:column="16">in_merge_bases_many<pos:position pos:line="1053" pos:column="35"/></name><argument_list pos:line="1053" pos:column="35">(<argument><expr><name pos:line="1053" pos:column="36">commit<pos:position pos:line="1053" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1053" pos:column="44">1<pos:position pos:line="1053" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="1053" pos:column="47">&amp;<pos:position pos:line="1053" pos:column="52"/></operator><name pos:line="1053" pos:column="48">reference<pos:position pos:line="1053" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1053" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1053" pos:column="59"/></return>
}<pos:position pos:line="1054" pos:column="2"/></block></function>

<function><type><name><name pos:line="1056" pos:column="1">struct<pos:position pos:line="1056" pos:column="7"/></name> <name pos:line="1056" pos:column="8">commit_list<pos:position pos:line="1056" pos:column="19"/></name></name> <modifier pos:line="1056" pos:column="20">*<pos:position pos:line="1056" pos:column="21"/></modifier></type><name pos:line="1056" pos:column="21">reduce_heads<pos:position pos:line="1056" pos:column="33"/></name><parameter_list pos:line="1056" pos:column="33">(<parameter><decl><type><name><name pos:line="1056" pos:column="34">struct<pos:position pos:line="1056" pos:column="40"/></name> <name pos:line="1056" pos:column="41">commit_list<pos:position pos:line="1056" pos:column="52"/></name></name> <modifier pos:line="1056" pos:column="53">*<pos:position pos:line="1056" pos:column="54"/></modifier></type><name pos:line="1056" pos:column="54">heads<pos:position pos:line="1056" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1056" pos:column="60"/></parameter_list>
<block pos:line="1057" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1058" pos:column="9">struct<pos:position pos:line="1058" pos:column="15"/></name> <name pos:line="1058" pos:column="16">commit_list<pos:position pos:line="1058" pos:column="27"/></name></name> <modifier pos:line="1058" pos:column="28">*<pos:position pos:line="1058" pos:column="29"/></modifier></type><name pos:line="1058" pos:column="29">p<pos:position pos:line="1058" pos:column="30"/></name></decl>;<pos:position pos:line="1058" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1059" pos:column="9">struct<pos:position pos:line="1059" pos:column="15"/></name> <name pos:line="1059" pos:column="16">commit_list<pos:position pos:line="1059" pos:column="27"/></name></name> <modifier pos:line="1059" pos:column="28">*<pos:position pos:line="1059" pos:column="29"/></modifier></type><name pos:line="1059" pos:column="29">result<pos:position pos:line="1059" pos:column="35"/></name> <init pos:line="1059" pos:column="36">= <expr><name pos:line="1059" pos:column="38">NULL<pos:position pos:line="1059" pos:column="42"/></name></expr></init></decl>, <modifier pos:line="1059" pos:column="44">*<pos:position pos:line="1059" pos:column="45"/></modifier><modifier pos:line="1059" pos:column="45">*<pos:position pos:line="1059" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="1059" pos:column="46">tail<pos:position pos:line="1059" pos:column="50"/></name> <init pos:line="1059" pos:column="51">= <expr><operator pos:line="1059" pos:column="53">&amp;<pos:position pos:line="1059" pos:column="58"/></operator><name pos:line="1059" pos:column="54">result<pos:position pos:line="1059" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="1059" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1060" pos:column="9">struct<pos:position pos:line="1060" pos:column="15"/></name> <name pos:line="1060" pos:column="16">commit<pos:position pos:line="1060" pos:column="22"/></name></name> <modifier pos:line="1060" pos:column="23">*<pos:position pos:line="1060" pos:column="24"/></modifier><modifier pos:line="1060" pos:column="24">*<pos:position pos:line="1060" pos:column="25"/></modifier></type><name pos:line="1060" pos:column="25">array<pos:position pos:line="1060" pos:column="30"/></name></decl>;<pos:position pos:line="1060" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1061" pos:column="9">int<pos:position pos:line="1061" pos:column="12"/></name></type> <name pos:line="1061" pos:column="13">num_head<pos:position pos:line="1061" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="1061" pos:column="23">i<pos:position pos:line="1061" pos:column="24"/></name></decl>;<pos:position pos:line="1061" pos:column="25"/></decl_stmt>

	<if pos:line="1063" pos:column="9">if <condition pos:line="1063" pos:column="12">(<expr><operator pos:line="1063" pos:column="13">!<pos:position pos:line="1063" pos:column="14"/></operator><name pos:line="1063" pos:column="14">heads<pos:position pos:line="1063" pos:column="19"/></name></expr>)<pos:position pos:line="1063" pos:column="20"/></condition><then pos:line="1063" pos:column="20">
		<block type="pseudo"><return pos:line="1064" pos:column="17">return <expr><name pos:line="1064" pos:column="24">NULL<pos:position pos:line="1064" pos:column="28"/></name></expr>;<pos:position pos:line="1064" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="1066" pos:column="9">/* Uniquify */</comment>
	<for pos:line="1067" pos:column="9">for <control pos:line="1067" pos:column="13">(<init><expr><name pos:line="1067" pos:column="14">p<pos:position pos:line="1067" pos:column="15"/></name> <operator pos:line="1067" pos:column="16">=<pos:position pos:line="1067" pos:column="17"/></operator> <name pos:line="1067" pos:column="18">heads<pos:position pos:line="1067" pos:column="23"/></name></expr>;<pos:position pos:line="1067" pos:column="24"/></init> <condition><expr><name pos:line="1067" pos:column="25">p<pos:position pos:line="1067" pos:column="26"/></name></expr>;<pos:position pos:line="1067" pos:column="27"/></condition> <incr><expr><name pos:line="1067" pos:column="28">p<pos:position pos:line="1067" pos:column="29"/></name> <operator pos:line="1067" pos:column="30">=<pos:position pos:line="1067" pos:column="31"/></operator> <name><name pos:line="1067" pos:column="32">p<pos:position pos:line="1067" pos:column="33"/></name><operator pos:line="1067" pos:column="33">-&gt;<pos:position pos:line="1067" pos:column="38"/></operator><name pos:line="1067" pos:column="35">next<pos:position pos:line="1067" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="1067" pos:column="40"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="1068" pos:column="17">p<pos:position pos:line="1068" pos:column="18"/></name><operator pos:line="1068" pos:column="18">-&gt;<pos:position pos:line="1068" pos:column="23"/></operator><name pos:line="1068" pos:column="20">item<pos:position pos:line="1068" pos:column="24"/></name><operator pos:line="1068" pos:column="24">-&gt;<pos:position pos:line="1068" pos:column="29"/></operator><name pos:line="1068" pos:column="26">object<pos:position pos:line="1068" pos:column="32"/></name><operator pos:line="1068" pos:column="32">.<pos:position pos:line="1068" pos:column="33"/></operator><name pos:line="1068" pos:column="33">flags<pos:position pos:line="1068" pos:column="38"/></name></name> <operator pos:line="1068" pos:column="39">&amp;=<pos:position pos:line="1068" pos:column="45"/></operator> <operator pos:line="1068" pos:column="42">~<pos:position pos:line="1068" pos:column="43"/></operator><name pos:line="1068" pos:column="43">STALE<pos:position pos:line="1068" pos:column="48"/></name></expr>;<pos:position pos:line="1068" pos:column="49"/></expr_stmt></block></for>
	<for pos:line="1069" pos:column="9">for <control pos:line="1069" pos:column="13">(<init><expr><name pos:line="1069" pos:column="14">p<pos:position pos:line="1069" pos:column="15"/></name> <operator pos:line="1069" pos:column="16">=<pos:position pos:line="1069" pos:column="17"/></operator> <name pos:line="1069" pos:column="18">heads<pos:position pos:line="1069" pos:column="23"/></name></expr><operator pos:line="1069" pos:column="23">,<pos:position pos:line="1069" pos:column="24"/></operator> <expr><name pos:line="1069" pos:column="25">num_head<pos:position pos:line="1069" pos:column="33"/></name> <operator pos:line="1069" pos:column="34">=<pos:position pos:line="1069" pos:column="35"/></operator> <literal type="number" pos:line="1069" pos:column="36">0<pos:position pos:line="1069" pos:column="37"/></literal></expr>;<pos:position pos:line="1069" pos:column="38"/></init> <condition><expr><name pos:line="1069" pos:column="39">p<pos:position pos:line="1069" pos:column="40"/></name></expr>;<pos:position pos:line="1069" pos:column="41"/></condition> <incr><expr><name pos:line="1069" pos:column="42">p<pos:position pos:line="1069" pos:column="43"/></name> <operator pos:line="1069" pos:column="44">=<pos:position pos:line="1069" pos:column="45"/></operator> <name><name pos:line="1069" pos:column="46">p<pos:position pos:line="1069" pos:column="47"/></name><operator pos:line="1069" pos:column="47">-&gt;<pos:position pos:line="1069" pos:column="52"/></operator><name pos:line="1069" pos:column="49">next<pos:position pos:line="1069" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="1069" pos:column="54"/></control> <block pos:line="1069" pos:column="55">{
		<if pos:line="1070" pos:column="17">if <condition pos:line="1070" pos:column="20">(<expr><name><name pos:line="1070" pos:column="21">p<pos:position pos:line="1070" pos:column="22"/></name><operator pos:line="1070" pos:column="22">-&gt;<pos:position pos:line="1070" pos:column="27"/></operator><name pos:line="1070" pos:column="24">item<pos:position pos:line="1070" pos:column="28"/></name><operator pos:line="1070" pos:column="28">-&gt;<pos:position pos:line="1070" pos:column="33"/></operator><name pos:line="1070" pos:column="30">object<pos:position pos:line="1070" pos:column="36"/></name><operator pos:line="1070" pos:column="36">.<pos:position pos:line="1070" pos:column="37"/></operator><name pos:line="1070" pos:column="37">flags<pos:position pos:line="1070" pos:column="42"/></name></name> <operator pos:line="1070" pos:column="43">&amp;<pos:position pos:line="1070" pos:column="48"/></operator> <name pos:line="1070" pos:column="45">STALE<pos:position pos:line="1070" pos:column="50"/></name></expr>)<pos:position pos:line="1070" pos:column="51"/></condition><then pos:line="1070" pos:column="51">
			<block type="pseudo"><continue pos:line="1071" pos:column="25">continue;<pos:position pos:line="1071" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name><name pos:line="1072" pos:column="17">p<pos:position pos:line="1072" pos:column="18"/></name><operator pos:line="1072" pos:column="18">-&gt;<pos:position pos:line="1072" pos:column="23"/></operator><name pos:line="1072" pos:column="20">item<pos:position pos:line="1072" pos:column="24"/></name><operator pos:line="1072" pos:column="24">-&gt;<pos:position pos:line="1072" pos:column="29"/></operator><name pos:line="1072" pos:column="26">object<pos:position pos:line="1072" pos:column="32"/></name><operator pos:line="1072" pos:column="32">.<pos:position pos:line="1072" pos:column="33"/></operator><name pos:line="1072" pos:column="33">flags<pos:position pos:line="1072" pos:column="38"/></name></name> <operator pos:line="1072" pos:column="39">|=<pos:position pos:line="1072" pos:column="41"/></operator> <name pos:line="1072" pos:column="42">STALE<pos:position pos:line="1072" pos:column="47"/></name></expr>;<pos:position pos:line="1072" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1073" pos:column="17">num_head<pos:position pos:line="1073" pos:column="25"/></name><operator pos:line="1073" pos:column="25">++<pos:position pos:line="1073" pos:column="27"/></operator></expr>;<pos:position pos:line="1073" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="1074" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="1075" pos:column="9">array<pos:position pos:line="1075" pos:column="14"/></name> <operator pos:line="1075" pos:column="15">=<pos:position pos:line="1075" pos:column="16"/></operator> <call><name pos:line="1075" pos:column="17">xcalloc<pos:position pos:line="1075" pos:column="24"/></name><argument_list pos:line="1075" pos:column="24">(<argument><expr><name pos:line="1075" pos:column="25">num_head<pos:position pos:line="1075" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="1075" pos:column="35">sizeof<argument_list pos:line="1075" pos:column="41">(<argument><expr><operator pos:line="1075" pos:column="42">*<pos:position pos:line="1075" pos:column="43"/></operator><name pos:line="1075" pos:column="43">array<pos:position pos:line="1075" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1075" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1075" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1075" pos:column="51"/></expr_stmt>
	<for pos:line="1076" pos:column="9">for <control pos:line="1076" pos:column="13">(<init><expr><name pos:line="1076" pos:column="14">p<pos:position pos:line="1076" pos:column="15"/></name> <operator pos:line="1076" pos:column="16">=<pos:position pos:line="1076" pos:column="17"/></operator> <name pos:line="1076" pos:column="18">heads<pos:position pos:line="1076" pos:column="23"/></name></expr><operator pos:line="1076" pos:column="23">,<pos:position pos:line="1076" pos:column="24"/></operator> <expr><name pos:line="1076" pos:column="25">i<pos:position pos:line="1076" pos:column="26"/></name> <operator pos:line="1076" pos:column="27">=<pos:position pos:line="1076" pos:column="28"/></operator> <literal type="number" pos:line="1076" pos:column="29">0<pos:position pos:line="1076" pos:column="30"/></literal></expr>;<pos:position pos:line="1076" pos:column="31"/></init> <condition><expr><name pos:line="1076" pos:column="32">p<pos:position pos:line="1076" pos:column="33"/></name></expr>;<pos:position pos:line="1076" pos:column="34"/></condition> <incr><expr><name pos:line="1076" pos:column="35">p<pos:position pos:line="1076" pos:column="36"/></name> <operator pos:line="1076" pos:column="37">=<pos:position pos:line="1076" pos:column="38"/></operator> <name><name pos:line="1076" pos:column="39">p<pos:position pos:line="1076" pos:column="40"/></name><operator pos:line="1076" pos:column="40">-&gt;<pos:position pos:line="1076" pos:column="45"/></operator><name pos:line="1076" pos:column="42">next<pos:position pos:line="1076" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="1076" pos:column="47"/></control> <block pos:line="1076" pos:column="48">{
		<if pos:line="1077" pos:column="17">if <condition pos:line="1077" pos:column="20">(<expr><name><name pos:line="1077" pos:column="21">p<pos:position pos:line="1077" pos:column="22"/></name><operator pos:line="1077" pos:column="22">-&gt;<pos:position pos:line="1077" pos:column="27"/></operator><name pos:line="1077" pos:column="24">item<pos:position pos:line="1077" pos:column="28"/></name><operator pos:line="1077" pos:column="28">-&gt;<pos:position pos:line="1077" pos:column="33"/></operator><name pos:line="1077" pos:column="30">object<pos:position pos:line="1077" pos:column="36"/></name><operator pos:line="1077" pos:column="36">.<pos:position pos:line="1077" pos:column="37"/></operator><name pos:line="1077" pos:column="37">flags<pos:position pos:line="1077" pos:column="42"/></name></name> <operator pos:line="1077" pos:column="43">&amp;<pos:position pos:line="1077" pos:column="48"/></operator> <name pos:line="1077" pos:column="45">STALE<pos:position pos:line="1077" pos:column="50"/></name></expr>)<pos:position pos:line="1077" pos:column="51"/></condition><then pos:line="1077" pos:column="51"> <block pos:line="1077" pos:column="52">{
			<expr_stmt><expr><name><name pos:line="1078" pos:column="25">array<pos:position pos:line="1078" pos:column="30"/></name><index pos:line="1078" pos:column="30">[<expr><name pos:line="1078" pos:column="31">i<pos:position pos:line="1078" pos:column="32"/></name><operator pos:line="1078" pos:column="32">++<pos:position pos:line="1078" pos:column="34"/></operator></expr>]<pos:position pos:line="1078" pos:column="35"/></index></name> <operator pos:line="1078" pos:column="36">=<pos:position pos:line="1078" pos:column="37"/></operator> <name><name pos:line="1078" pos:column="38">p<pos:position pos:line="1078" pos:column="39"/></name><operator pos:line="1078" pos:column="39">-&gt;<pos:position pos:line="1078" pos:column="44"/></operator><name pos:line="1078" pos:column="41">item<pos:position pos:line="1078" pos:column="45"/></name></name></expr>;<pos:position pos:line="1078" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="1079" pos:column="25">p<pos:position pos:line="1079" pos:column="26"/></name><operator pos:line="1079" pos:column="26">-&gt;<pos:position pos:line="1079" pos:column="31"/></operator><name pos:line="1079" pos:column="28">item<pos:position pos:line="1079" pos:column="32"/></name><operator pos:line="1079" pos:column="32">-&gt;<pos:position pos:line="1079" pos:column="37"/></operator><name pos:line="1079" pos:column="34">object<pos:position pos:line="1079" pos:column="40"/></name><operator pos:line="1079" pos:column="40">.<pos:position pos:line="1079" pos:column="41"/></operator><name pos:line="1079" pos:column="41">flags<pos:position pos:line="1079" pos:column="46"/></name></name> <operator pos:line="1079" pos:column="47">&amp;=<pos:position pos:line="1079" pos:column="53"/></operator> <operator pos:line="1079" pos:column="50">~<pos:position pos:line="1079" pos:column="51"/></operator><name pos:line="1079" pos:column="51">STALE<pos:position pos:line="1079" pos:column="56"/></name></expr>;<pos:position pos:line="1079" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="1080" pos:column="18"/></block></then></if>
	}<pos:position pos:line="1081" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="1082" pos:column="9">num_head<pos:position pos:line="1082" pos:column="17"/></name> <operator pos:line="1082" pos:column="18">=<pos:position pos:line="1082" pos:column="19"/></operator> <call><name pos:line="1082" pos:column="20">remove_redundant<pos:position pos:line="1082" pos:column="36"/></name><argument_list pos:line="1082" pos:column="36">(<argument><expr><name pos:line="1082" pos:column="37">array<pos:position pos:line="1082" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1082" pos:column="44">num_head<pos:position pos:line="1082" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1082" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1082" pos:column="54"/></expr_stmt>
	<for pos:line="1083" pos:column="9">for <control pos:line="1083" pos:column="13">(<init><expr><name pos:line="1083" pos:column="14">i<pos:position pos:line="1083" pos:column="15"/></name> <operator pos:line="1083" pos:column="16">=<pos:position pos:line="1083" pos:column="17"/></operator> <literal type="number" pos:line="1083" pos:column="18">0<pos:position pos:line="1083" pos:column="19"/></literal></expr>;<pos:position pos:line="1083" pos:column="20"/></init> <condition><expr><name pos:line="1083" pos:column="21">i<pos:position pos:line="1083" pos:column="22"/></name> <operator pos:line="1083" pos:column="23">&lt;<pos:position pos:line="1083" pos:column="27"/></operator> <name pos:line="1083" pos:column="25">num_head<pos:position pos:line="1083" pos:column="33"/></name></expr>;<pos:position pos:line="1083" pos:column="34"/></condition> <incr><expr><name pos:line="1083" pos:column="35">i<pos:position pos:line="1083" pos:column="36"/></name><operator pos:line="1083" pos:column="36">++<pos:position pos:line="1083" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="1083" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="1084" pos:column="17">tail<pos:position pos:line="1084" pos:column="21"/></name> <operator pos:line="1084" pos:column="22">=<pos:position pos:line="1084" pos:column="23"/></operator> <operator pos:line="1084" pos:column="24">&amp;<pos:position pos:line="1084" pos:column="29"/></operator><call><name pos:line="1084" pos:column="25">commit_list_insert<pos:position pos:line="1084" pos:column="43"/></name><argument_list pos:line="1084" pos:column="43">(<argument><expr><name><name pos:line="1084" pos:column="44">array<pos:position pos:line="1084" pos:column="49"/></name><index pos:line="1084" pos:column="49">[<expr><name pos:line="1084" pos:column="50">i<pos:position pos:line="1084" pos:column="51"/></name></expr>]<pos:position pos:line="1084" pos:column="52"/></index></name></expr></argument>, <argument><expr><name pos:line="1084" pos:column="54">tail<pos:position pos:line="1084" pos:column="58"/></name></expr></argument>)<pos:position pos:line="1084" pos:column="59"/></argument_list></call><operator pos:line="1084" pos:column="59">-&gt;<pos:position pos:line="1084" pos:column="64"/></operator><name pos:line="1084" pos:column="61">next<pos:position pos:line="1084" pos:column="65"/></name></expr>;<pos:position pos:line="1084" pos:column="66"/></expr_stmt></block></for>
	<return pos:line="1085" pos:column="9">return <expr><name pos:line="1085" pos:column="16">result<pos:position pos:line="1085" pos:column="22"/></name></expr>;<pos:position pos:line="1085" pos:column="23"/></return>
}<pos:position pos:line="1086" pos:column="2"/></block></function>

<decl_stmt><decl><specifier pos:line="1088" pos:column="1">static<pos:position pos:line="1088" pos:column="7"/></specifier> <type><specifier pos:line="1088" pos:column="8">const<pos:position pos:line="1088" pos:column="13"/></specifier> <name pos:line="1088" pos:column="14">char<pos:position pos:line="1088" pos:column="18"/></name></type> <name><name pos:line="1088" pos:column="19">gpg_sig_header<pos:position pos:line="1088" pos:column="33"/></name><index pos:line="1088" pos:column="33">[]<pos:position pos:line="1088" pos:column="35"/></index></name> <init pos:line="1088" pos:column="36">= <expr><literal type="string" pos:line="1088" pos:column="38">"gpgsig"<pos:position pos:line="1088" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="1088" pos:column="47"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="1089" pos:column="1">static<pos:position pos:line="1089" pos:column="7"/></specifier> <type><specifier pos:line="1089" pos:column="8">const<pos:position pos:line="1089" pos:column="13"/></specifier> <name pos:line="1089" pos:column="14">int<pos:position pos:line="1089" pos:column="17"/></name></type> <name pos:line="1089" pos:column="18">gpg_sig_header_len<pos:position pos:line="1089" pos:column="36"/></name> <init pos:line="1089" pos:column="37">= <expr><sizeof pos:line="1089" pos:column="39">sizeof<argument_list pos:line="1089" pos:column="45">(<argument><expr><name pos:line="1089" pos:column="46">gpg_sig_header<pos:position pos:line="1089" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1089" pos:column="61"/></argument_list></sizeof> <operator pos:line="1089" pos:column="62">-<pos:position pos:line="1089" pos:column="63"/></operator> <literal type="number" pos:line="1089" pos:column="64">1<pos:position pos:line="1089" pos:column="65"/></literal></expr></init></decl>;<pos:position pos:line="1089" pos:column="66"/></decl_stmt>

<function><specifier pos:line="1091" pos:column="1">static<pos:position pos:line="1091" pos:column="7"/></specifier> <type><name pos:line="1091" pos:column="8">int<pos:position pos:line="1091" pos:column="11"/></name></type> <name pos:line="1091" pos:column="12">do_sign_commit<pos:position pos:line="1091" pos:column="26"/></name><parameter_list pos:line="1091" pos:column="26">(<parameter><decl><type><name><name pos:line="1091" pos:column="27">struct<pos:position pos:line="1091" pos:column="33"/></name> <name pos:line="1091" pos:column="34">strbuf<pos:position pos:line="1091" pos:column="40"/></name></name> <modifier pos:line="1091" pos:column="41">*<pos:position pos:line="1091" pos:column="42"/></modifier></type><name pos:line="1091" pos:column="42">buf<pos:position pos:line="1091" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1091" pos:column="47">const<pos:position pos:line="1091" pos:column="52"/></specifier> <name pos:line="1091" pos:column="53">char<pos:position pos:line="1091" pos:column="57"/></name> <modifier pos:line="1091" pos:column="58">*<pos:position pos:line="1091" pos:column="59"/></modifier></type><name pos:line="1091" pos:column="59">keyid<pos:position pos:line="1091" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1091" pos:column="65"/></parameter_list>
<block pos:line="1092" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1093" pos:column="9">struct<pos:position pos:line="1093" pos:column="15"/></name> <name pos:line="1093" pos:column="16">strbuf<pos:position pos:line="1093" pos:column="22"/></name></name></type> <name pos:line="1093" pos:column="23">sig<pos:position pos:line="1093" pos:column="26"/></name> <init pos:line="1093" pos:column="27">= <expr><name pos:line="1093" pos:column="29">STRBUF_INIT<pos:position pos:line="1093" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="1093" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1094" pos:column="9">int<pos:position pos:line="1094" pos:column="12"/></name></type> <name pos:line="1094" pos:column="13">inspos<pos:position pos:line="1094" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="1094" pos:column="21">copypos<pos:position pos:line="1094" pos:column="28"/></name></decl>;<pos:position pos:line="1094" pos:column="29"/></decl_stmt>

	<comment type="block" pos:line="1096" pos:column="9">/* find the end of the header */</comment>
	<expr_stmt><expr><name pos:line="1097" pos:column="9">inspos<pos:position pos:line="1097" pos:column="15"/></name> <operator pos:line="1097" pos:column="16">=<pos:position pos:line="1097" pos:column="17"/></operator> <call><name pos:line="1097" pos:column="18">strstr<pos:position pos:line="1097" pos:column="24"/></name><argument_list pos:line="1097" pos:column="24">(<argument><expr><name><name pos:line="1097" pos:column="25">buf<pos:position pos:line="1097" pos:column="28"/></name><operator pos:line="1097" pos:column="28">-&gt;<pos:position pos:line="1097" pos:column="33"/></operator><name pos:line="1097" pos:column="30">buf<pos:position pos:line="1097" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1097" pos:column="35">"\n\n"<pos:position pos:line="1097" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="1097" pos:column="42"/></argument_list></call> <operator pos:line="1097" pos:column="43">-<pos:position pos:line="1097" pos:column="44"/></operator> <name><name pos:line="1097" pos:column="45">buf<pos:position pos:line="1097" pos:column="48"/></name><operator pos:line="1097" pos:column="48">-&gt;<pos:position pos:line="1097" pos:column="53"/></operator><name pos:line="1097" pos:column="50">buf<pos:position pos:line="1097" pos:column="53"/></name></name> <operator pos:line="1097" pos:column="54">+<pos:position pos:line="1097" pos:column="55"/></operator> <literal type="number" pos:line="1097" pos:column="56">1<pos:position pos:line="1097" pos:column="57"/></literal></expr>;<pos:position pos:line="1097" pos:column="58"/></expr_stmt>

	<if pos:line="1099" pos:column="9">if <condition pos:line="1099" pos:column="12">(<expr><operator pos:line="1099" pos:column="13">!<pos:position pos:line="1099" pos:column="14"/></operator><name pos:line="1099" pos:column="14">keyid<pos:position pos:line="1099" pos:column="19"/></name> <operator pos:line="1099" pos:column="20">||<pos:position pos:line="1099" pos:column="22"/></operator> <operator pos:line="1099" pos:column="23">!<pos:position pos:line="1099" pos:column="24"/></operator><operator pos:line="1099" pos:column="24">*<pos:position pos:line="1099" pos:column="25"/></operator><name pos:line="1099" pos:column="25">keyid<pos:position pos:line="1099" pos:column="30"/></name></expr>)<pos:position pos:line="1099" pos:column="31"/></condition><then pos:line="1099" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="1100" pos:column="17">keyid<pos:position pos:line="1100" pos:column="22"/></name> <operator pos:line="1100" pos:column="23">=<pos:position pos:line="1100" pos:column="24"/></operator> <call><name pos:line="1100" pos:column="25">get_signing_key<pos:position pos:line="1100" pos:column="40"/></name><argument_list pos:line="1100" pos:column="40">()<pos:position pos:line="1100" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="1100" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="1101" pos:column="9">if <condition pos:line="1101" pos:column="12">(<expr><call><name pos:line="1101" pos:column="13">sign_buffer<pos:position pos:line="1101" pos:column="24"/></name><argument_list pos:line="1101" pos:column="24">(<argument><expr><name pos:line="1101" pos:column="25">buf<pos:position pos:line="1101" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="1101" pos:column="30">&amp;<pos:position pos:line="1101" pos:column="35"/></operator><name pos:line="1101" pos:column="31">sig<pos:position pos:line="1101" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1101" pos:column="36">keyid<pos:position pos:line="1101" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1101" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="1101" pos:column="43"/></condition><then pos:line="1101" pos:column="43"> <block pos:line="1101" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="1102" pos:column="17">strbuf_release<pos:position pos:line="1102" pos:column="31"/></name><argument_list pos:line="1102" pos:column="31">(<argument><expr><operator pos:line="1102" pos:column="32">&amp;<pos:position pos:line="1102" pos:column="37"/></operator><name pos:line="1102" pos:column="33">sig<pos:position pos:line="1102" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1102" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1102" pos:column="38"/></expr_stmt>
		<return pos:line="1103" pos:column="17">return <expr><operator pos:line="1103" pos:column="24">-<pos:position pos:line="1103" pos:column="25"/></operator><literal type="number" pos:line="1103" pos:column="25">1<pos:position pos:line="1103" pos:column="26"/></literal></expr>;<pos:position pos:line="1103" pos:column="27"/></return>
	}<pos:position pos:line="1104" pos:column="10"/></block></then></if>

	<for pos:line="1106" pos:column="9">for <control pos:line="1106" pos:column="13">(<init><expr><name pos:line="1106" pos:column="14">copypos<pos:position pos:line="1106" pos:column="21"/></name> <operator pos:line="1106" pos:column="22">=<pos:position pos:line="1106" pos:column="23"/></operator> <literal type="number" pos:line="1106" pos:column="24">0<pos:position pos:line="1106" pos:column="25"/></literal></expr>;<pos:position pos:line="1106" pos:column="26"/></init> <condition><expr><name><name pos:line="1106" pos:column="27">sig<pos:position pos:line="1106" pos:column="30"/></name><operator pos:line="1106" pos:column="30">.<pos:position pos:line="1106" pos:column="31"/></operator><name pos:line="1106" pos:column="31">buf<pos:position pos:line="1106" pos:column="34"/></name><index pos:line="1106" pos:column="34">[<expr><name pos:line="1106" pos:column="35">copypos<pos:position pos:line="1106" pos:column="42"/></name></expr>]<pos:position pos:line="1106" pos:column="43"/></index></name></expr>;<pos:position pos:line="1106" pos:column="44"/></condition> <incr/>)<pos:position pos:line="1106" pos:column="46"/></control> <block pos:line="1106" pos:column="47">{
		<decl_stmt><decl><type><specifier pos:line="1107" pos:column="17">const<pos:position pos:line="1107" pos:column="22"/></specifier> <name pos:line="1107" pos:column="23">char<pos:position pos:line="1107" pos:column="27"/></name> <modifier pos:line="1107" pos:column="28">*<pos:position pos:line="1107" pos:column="29"/></modifier></type><name pos:line="1107" pos:column="29">bol<pos:position pos:line="1107" pos:column="32"/></name> <init pos:line="1107" pos:column="33">= <expr><name><name pos:line="1107" pos:column="35">sig<pos:position pos:line="1107" pos:column="38"/></name><operator pos:line="1107" pos:column="38">.<pos:position pos:line="1107" pos:column="39"/></operator><name pos:line="1107" pos:column="39">buf<pos:position pos:line="1107" pos:column="42"/></name></name> <operator pos:line="1107" pos:column="43">+<pos:position pos:line="1107" pos:column="44"/></operator> <name pos:line="1107" pos:column="45">copypos<pos:position pos:line="1107" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="1107" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1108" pos:column="17">const<pos:position pos:line="1108" pos:column="22"/></specifier> <name pos:line="1108" pos:column="23">char<pos:position pos:line="1108" pos:column="27"/></name> <modifier pos:line="1108" pos:column="28">*<pos:position pos:line="1108" pos:column="29"/></modifier></type><name pos:line="1108" pos:column="29">eol<pos:position pos:line="1108" pos:column="32"/></name> <init pos:line="1108" pos:column="33">= <expr><call><name pos:line="1108" pos:column="35">strchrnul<pos:position pos:line="1108" pos:column="44"/></name><argument_list pos:line="1108" pos:column="44">(<argument><expr><name pos:line="1108" pos:column="45">bol<pos:position pos:line="1108" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1108" pos:column="50">'\n'<pos:position pos:line="1108" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="1108" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1108" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="1109" pos:column="17">int<pos:position pos:line="1109" pos:column="20"/></name></type> <name pos:line="1109" pos:column="21">len<pos:position pos:line="1109" pos:column="24"/></name> <init pos:line="1109" pos:column="25">= <expr><operator pos:line="1109" pos:column="27">(<pos:position pos:line="1109" pos:column="28"/></operator><name pos:line="1109" pos:column="28">eol<pos:position pos:line="1109" pos:column="31"/></name> <operator pos:line="1109" pos:column="32">-<pos:position pos:line="1109" pos:column="33"/></operator> <name pos:line="1109" pos:column="34">bol<pos:position pos:line="1109" pos:column="37"/></name><operator pos:line="1109" pos:column="37">)<pos:position pos:line="1109" pos:column="38"/></operator> <operator pos:line="1109" pos:column="39">+<pos:position pos:line="1109" pos:column="40"/></operator> <operator pos:line="1109" pos:column="41">!<pos:position pos:line="1109" pos:column="42"/></operator><operator pos:line="1109" pos:column="42">!<pos:position pos:line="1109" pos:column="43"/></operator><operator pos:line="1109" pos:column="43">*<pos:position pos:line="1109" pos:column="44"/></operator><name pos:line="1109" pos:column="44">eol<pos:position pos:line="1109" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="1109" pos:column="48"/></decl_stmt>

		<if pos:line="1111" pos:column="17">if <condition pos:line="1111" pos:column="20">(<expr><operator pos:line="1111" pos:column="21">!<pos:position pos:line="1111" pos:column="22"/></operator><name pos:line="1111" pos:column="22">copypos<pos:position pos:line="1111" pos:column="29"/></name></expr>)<pos:position pos:line="1111" pos:column="30"/></condition><then pos:line="1111" pos:column="30"> <block pos:line="1111" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="1112" pos:column="25">strbuf_insert<pos:position pos:line="1112" pos:column="38"/></name><argument_list pos:line="1112" pos:column="38">(<argument><expr><name pos:line="1112" pos:column="39">buf<pos:position pos:line="1112" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1112" pos:column="44">inspos<pos:position pos:line="1112" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1112" pos:column="52">gpg_sig_header<pos:position pos:line="1112" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="1112" pos:column="68">gpg_sig_header_len<pos:position pos:line="1112" pos:column="86"/></name></expr></argument>)<pos:position pos:line="1112" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="1112" pos:column="88"/></expr_stmt>
			<expr_stmt><expr><name pos:line="1113" pos:column="25">inspos<pos:position pos:line="1113" pos:column="31"/></name> <operator pos:line="1113" pos:column="32">+=<pos:position pos:line="1113" pos:column="34"/></operator> <name pos:line="1113" pos:column="35">gpg_sig_header_len<pos:position pos:line="1113" pos:column="53"/></name></expr>;<pos:position pos:line="1113" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="1114" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="1115" pos:column="17">strbuf_insert<pos:position pos:line="1115" pos:column="30"/></name><argument_list pos:line="1115" pos:column="30">(<argument><expr><name pos:line="1115" pos:column="31">buf<pos:position pos:line="1115" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1115" pos:column="36">inspos<pos:position pos:line="1115" pos:column="42"/></name><operator pos:line="1115" pos:column="42">++<pos:position pos:line="1115" pos:column="44"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="1115" pos:column="46">" "<pos:position pos:line="1115" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1115" pos:column="51">1<pos:position pos:line="1115" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="1115" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1115" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="1116" pos:column="17">strbuf_insert<pos:position pos:line="1116" pos:column="30"/></name><argument_list pos:line="1116" pos:column="30">(<argument><expr><name pos:line="1116" pos:column="31">buf<pos:position pos:line="1116" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1116" pos:column="36">inspos<pos:position pos:line="1116" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1116" pos:column="44">bol<pos:position pos:line="1116" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1116" pos:column="49">len<pos:position pos:line="1116" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1116" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1116" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1117" pos:column="17">inspos<pos:position pos:line="1117" pos:column="23"/></name> <operator pos:line="1117" pos:column="24">+=<pos:position pos:line="1117" pos:column="26"/></operator> <name pos:line="1117" pos:column="27">len<pos:position pos:line="1117" pos:column="30"/></name></expr>;<pos:position pos:line="1117" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1118" pos:column="17">copypos<pos:position pos:line="1118" pos:column="24"/></name> <operator pos:line="1118" pos:column="25">+=<pos:position pos:line="1118" pos:column="27"/></operator> <name pos:line="1118" pos:column="28">len<pos:position pos:line="1118" pos:column="31"/></name></expr>;<pos:position pos:line="1118" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="1119" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="1120" pos:column="9">strbuf_release<pos:position pos:line="1120" pos:column="23"/></name><argument_list pos:line="1120" pos:column="23">(<argument><expr><operator pos:line="1120" pos:column="24">&amp;<pos:position pos:line="1120" pos:column="29"/></operator><name pos:line="1120" pos:column="25">sig<pos:position pos:line="1120" pos:column="28"/></name></expr></argument>)<pos:position pos:line="1120" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1120" pos:column="30"/></expr_stmt>
	<return pos:line="1121" pos:column="9">return <expr><literal type="number" pos:line="1121" pos:column="16">0<pos:position pos:line="1121" pos:column="17"/></literal></expr>;<pos:position pos:line="1121" pos:column="18"/></return>
}<pos:position pos:line="1122" pos:column="2"/></block></function>

<function><type><name pos:line="1124" pos:column="1">int<pos:position pos:line="1124" pos:column="4"/></name></type> <name pos:line="1124" pos:column="5">parse_signed_commit<pos:position pos:line="1124" pos:column="24"/></name><parameter_list pos:line="1124" pos:column="24">(<parameter><decl><type><specifier pos:line="1124" pos:column="25">const<pos:position pos:line="1124" pos:column="30"/></specifier> <name><name pos:line="1124" pos:column="31">struct<pos:position pos:line="1124" pos:column="37"/></name> <name pos:line="1124" pos:column="38">commit<pos:position pos:line="1124" pos:column="44"/></name></name> <modifier pos:line="1124" pos:column="45">*<pos:position pos:line="1124" pos:column="46"/></modifier></type><name pos:line="1124" pos:column="46">commit<pos:position pos:line="1124" pos:column="52"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="1125" pos:column="25">struct<pos:position pos:line="1125" pos:column="31"/></name> <name pos:line="1125" pos:column="32">strbuf<pos:position pos:line="1125" pos:column="38"/></name></name> <modifier pos:line="1125" pos:column="39">*<pos:position pos:line="1125" pos:column="40"/></modifier></type><name pos:line="1125" pos:column="40">payload<pos:position pos:line="1125" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1125" pos:column="49">struct<pos:position pos:line="1125" pos:column="55"/></name> <name pos:line="1125" pos:column="56">strbuf<pos:position pos:line="1125" pos:column="62"/></name></name> <modifier pos:line="1125" pos:column="63">*<pos:position pos:line="1125" pos:column="64"/></modifier></type><name pos:line="1125" pos:column="64">signature<pos:position pos:line="1125" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1125" pos:column="74"/></parameter_list>
<block pos:line="1126" pos:column="1">{

	<decl_stmt><decl><type><name pos:line="1128" pos:column="9">unsigned<pos:position pos:line="1128" pos:column="17"/></name> <name pos:line="1128" pos:column="18">long<pos:position pos:line="1128" pos:column="22"/></name></type> <name pos:line="1128" pos:column="23">size<pos:position pos:line="1128" pos:column="27"/></name></decl>;<pos:position pos:line="1128" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1129" pos:column="9">const<pos:position pos:line="1129" pos:column="14"/></specifier> <name pos:line="1129" pos:column="15">char<pos:position pos:line="1129" pos:column="19"/></name> <modifier pos:line="1129" pos:column="20">*<pos:position pos:line="1129" pos:column="21"/></modifier></type><name pos:line="1129" pos:column="21">buffer<pos:position pos:line="1129" pos:column="27"/></name> <init pos:line="1129" pos:column="28">= <expr><call><name pos:line="1129" pos:column="30">get_commit_buffer<pos:position pos:line="1129" pos:column="47"/></name><argument_list pos:line="1129" pos:column="47">(<argument><expr><name pos:line="1129" pos:column="48">commit<pos:position pos:line="1129" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="1129" pos:column="56">&amp;<pos:position pos:line="1129" pos:column="61"/></operator><name pos:line="1129" pos:column="57">size<pos:position pos:line="1129" pos:column="61"/></name></expr></argument>)<pos:position pos:line="1129" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1129" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1130" pos:column="9">int<pos:position pos:line="1130" pos:column="12"/></name></type> <name pos:line="1130" pos:column="13">in_signature<pos:position pos:line="1130" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="1130" pos:column="27">saw_signature<pos:position pos:line="1130" pos:column="40"/></name> <init pos:line="1130" pos:column="41">= <expr><operator pos:line="1130" pos:column="43">-<pos:position pos:line="1130" pos:column="44"/></operator><literal type="number" pos:line="1130" pos:column="44">1<pos:position pos:line="1130" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="1130" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1131" pos:column="9">const<pos:position pos:line="1131" pos:column="14"/></specifier> <name pos:line="1131" pos:column="15">char<pos:position pos:line="1131" pos:column="19"/></name> <modifier pos:line="1131" pos:column="20">*<pos:position pos:line="1131" pos:column="21"/></modifier></type><name pos:line="1131" pos:column="21">line<pos:position pos:line="1131" pos:column="25"/></name></decl>, <modifier pos:line="1131" pos:column="27">*<pos:position pos:line="1131" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="1131" pos:column="28">tail<pos:position pos:line="1131" pos:column="32"/></name></decl>;<pos:position pos:line="1131" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><name pos:line="1133" pos:column="9">line<pos:position pos:line="1133" pos:column="13"/></name> <operator pos:line="1133" pos:column="14">=<pos:position pos:line="1133" pos:column="15"/></operator> <name pos:line="1133" pos:column="16">buffer<pos:position pos:line="1133" pos:column="22"/></name></expr>;<pos:position pos:line="1133" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="1134" pos:column="9">tail<pos:position pos:line="1134" pos:column="13"/></name> <operator pos:line="1134" pos:column="14">=<pos:position pos:line="1134" pos:column="15"/></operator> <name pos:line="1134" pos:column="16">buffer<pos:position pos:line="1134" pos:column="22"/></name> <operator pos:line="1134" pos:column="23">+<pos:position pos:line="1134" pos:column="24"/></operator> <name pos:line="1134" pos:column="25">size<pos:position pos:line="1134" pos:column="29"/></name></expr>;<pos:position pos:line="1134" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="1135" pos:column="9">in_signature<pos:position pos:line="1135" pos:column="21"/></name> <operator pos:line="1135" pos:column="22">=<pos:position pos:line="1135" pos:column="23"/></operator> <literal type="number" pos:line="1135" pos:column="24">0<pos:position pos:line="1135" pos:column="25"/></literal></expr>;<pos:position pos:line="1135" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="1136" pos:column="9">saw_signature<pos:position pos:line="1136" pos:column="22"/></name> <operator pos:line="1136" pos:column="23">=<pos:position pos:line="1136" pos:column="24"/></operator> <literal type="number" pos:line="1136" pos:column="25">0<pos:position pos:line="1136" pos:column="26"/></literal></expr>;<pos:position pos:line="1136" pos:column="27"/></expr_stmt>
	<while pos:line="1137" pos:column="9">while <condition pos:line="1137" pos:column="15">(<expr><name pos:line="1137" pos:column="16">line<pos:position pos:line="1137" pos:column="20"/></name> <operator pos:line="1137" pos:column="21">&lt;<pos:position pos:line="1137" pos:column="25"/></operator> <name pos:line="1137" pos:column="23">tail<pos:position pos:line="1137" pos:column="27"/></name></expr>)<pos:position pos:line="1137" pos:column="28"/></condition> <block pos:line="1137" pos:column="29">{
		<decl_stmt><decl><type><specifier pos:line="1138" pos:column="17">const<pos:position pos:line="1138" pos:column="22"/></specifier> <name pos:line="1138" pos:column="23">char<pos:position pos:line="1138" pos:column="27"/></name> <modifier pos:line="1138" pos:column="28">*<pos:position pos:line="1138" pos:column="29"/></modifier></type><name pos:line="1138" pos:column="29">sig<pos:position pos:line="1138" pos:column="32"/></name> <init pos:line="1138" pos:column="33">= <expr><name pos:line="1138" pos:column="35">NULL<pos:position pos:line="1138" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="1138" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1139" pos:column="17">const<pos:position pos:line="1139" pos:column="22"/></specifier> <name pos:line="1139" pos:column="23">char<pos:position pos:line="1139" pos:column="27"/></name> <modifier pos:line="1139" pos:column="28">*<pos:position pos:line="1139" pos:column="29"/></modifier></type><name pos:line="1139" pos:column="29">next<pos:position pos:line="1139" pos:column="33"/></name> <init pos:line="1139" pos:column="34">= <expr><call><name pos:line="1139" pos:column="36">memchr<pos:position pos:line="1139" pos:column="42"/></name><argument_list pos:line="1139" pos:column="42">(<argument><expr><name pos:line="1139" pos:column="43">line<pos:position pos:line="1139" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1139" pos:column="49">'\n'<pos:position pos:line="1139" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="1139" pos:column="55">tail<pos:position pos:line="1139" pos:column="59"/></name> <operator pos:line="1139" pos:column="60">-<pos:position pos:line="1139" pos:column="61"/></operator> <name pos:line="1139" pos:column="62">line<pos:position pos:line="1139" pos:column="66"/></name></expr></argument>)<pos:position pos:line="1139" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1139" pos:column="68"/></decl_stmt>

		<expr_stmt><expr><name pos:line="1141" pos:column="17">next<pos:position pos:line="1141" pos:column="21"/></name> <operator pos:line="1141" pos:column="22">=<pos:position pos:line="1141" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="1141" pos:column="24">next<pos:position pos:line="1141" pos:column="28"/></name></expr> ?<pos:position pos:line="1141" pos:column="30"/></condition><then pos:line="1141" pos:column="30"> <expr><name pos:line="1141" pos:column="31">next<pos:position pos:line="1141" pos:column="35"/></name> <operator pos:line="1141" pos:column="36">+<pos:position pos:line="1141" pos:column="37"/></operator> <literal type="number" pos:line="1141" pos:column="38">1<pos:position pos:line="1141" pos:column="39"/></literal></expr> <pos:position pos:line="1141" pos:column="40"/></then><else pos:line="1141" pos:column="40">: <expr><name pos:line="1141" pos:column="42">tail<pos:position pos:line="1141" pos:column="46"/></name></expr></else></ternary></expr>;<pos:position pos:line="1141" pos:column="47"/></expr_stmt>
		<if pos:line="1142" pos:column="17">if <condition pos:line="1142" pos:column="20">(<expr><name pos:line="1142" pos:column="21">in_signature<pos:position pos:line="1142" pos:column="33"/></name> <operator pos:line="1142" pos:column="34">&amp;&amp;<pos:position pos:line="1142" pos:column="44"/></operator> <name><name pos:line="1142" pos:column="37">line<pos:position pos:line="1142" pos:column="41"/></name><index pos:line="1142" pos:column="41">[<expr><literal type="number" pos:line="1142" pos:column="42">0<pos:position pos:line="1142" pos:column="43"/></literal></expr>]<pos:position pos:line="1142" pos:column="44"/></index></name> <operator pos:line="1142" pos:column="45">==<pos:position pos:line="1142" pos:column="47"/></operator> <literal type="char" pos:line="1142" pos:column="48">' '<pos:position pos:line="1142" pos:column="51"/></literal></expr>)<pos:position pos:line="1142" pos:column="52"/></condition><then pos:line="1142" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="1143" pos:column="25">sig<pos:position pos:line="1143" pos:column="28"/></name> <operator pos:line="1143" pos:column="29">=<pos:position pos:line="1143" pos:column="30"/></operator> <name pos:line="1143" pos:column="31">line<pos:position pos:line="1143" pos:column="35"/></name> <operator pos:line="1143" pos:column="36">+<pos:position pos:line="1143" pos:column="37"/></operator> <literal type="number" pos:line="1143" pos:column="38">1<pos:position pos:line="1143" pos:column="39"/></literal></expr>;<pos:position pos:line="1143" pos:column="40"/></expr_stmt></block></then>
		<elseif pos:line="1144" pos:column="17">else <if pos:line="1144" pos:column="22">if <condition pos:line="1144" pos:column="25">(<expr><call><name pos:line="1144" pos:column="26">starts_with<pos:position pos:line="1144" pos:column="37"/></name><argument_list pos:line="1144" pos:column="37">(<argument><expr><name pos:line="1144" pos:column="38">line<pos:position pos:line="1144" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1144" pos:column="44">gpg_sig_header<pos:position pos:line="1144" pos:column="58"/></name></expr></argument>)<pos:position pos:line="1144" pos:column="59"/></argument_list></call> <operator pos:line="1144" pos:column="60">&amp;&amp;<pos:position pos:line="1144" pos:column="70"/></operator>
			 <name><name pos:line="1145" pos:column="26">line<pos:position pos:line="1145" pos:column="30"/></name><index pos:line="1145" pos:column="30">[<expr><name pos:line="1145" pos:column="31">gpg_sig_header_len<pos:position pos:line="1145" pos:column="49"/></name></expr>]<pos:position pos:line="1145" pos:column="50"/></index></name> <operator pos:line="1145" pos:column="51">==<pos:position pos:line="1145" pos:column="53"/></operator> <literal type="char" pos:line="1145" pos:column="54">' '<pos:position pos:line="1145" pos:column="57"/></literal></expr>)<pos:position pos:line="1145" pos:column="58"/></condition><then pos:line="1145" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name pos:line="1146" pos:column="25">sig<pos:position pos:line="1146" pos:column="28"/></name> <operator pos:line="1146" pos:column="29">=<pos:position pos:line="1146" pos:column="30"/></operator> <name pos:line="1146" pos:column="31">line<pos:position pos:line="1146" pos:column="35"/></name> <operator pos:line="1146" pos:column="36">+<pos:position pos:line="1146" pos:column="37"/></operator> <name pos:line="1146" pos:column="38">gpg_sig_header_len<pos:position pos:line="1146" pos:column="56"/></name> <operator pos:line="1146" pos:column="57">+<pos:position pos:line="1146" pos:column="58"/></operator> <literal type="number" pos:line="1146" pos:column="59">1<pos:position pos:line="1146" pos:column="60"/></literal></expr>;<pos:position pos:line="1146" pos:column="61"/></expr_stmt></block></then></if></elseif></if>
		<if pos:line="1147" pos:column="17">if <condition pos:line="1147" pos:column="20">(<expr><name pos:line="1147" pos:column="21">sig<pos:position pos:line="1147" pos:column="24"/></name></expr>)<pos:position pos:line="1147" pos:column="25"/></condition><then pos:line="1147" pos:column="25"> <block pos:line="1147" pos:column="26">{
			<expr_stmt><expr><call><name pos:line="1148" pos:column="25">strbuf_add<pos:position pos:line="1148" pos:column="35"/></name><argument_list pos:line="1148" pos:column="35">(<argument><expr><name pos:line="1148" pos:column="36">signature<pos:position pos:line="1148" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1148" pos:column="47">sig<pos:position pos:line="1148" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1148" pos:column="52">next<pos:position pos:line="1148" pos:column="56"/></name> <operator pos:line="1148" pos:column="57">-<pos:position pos:line="1148" pos:column="58"/></operator> <name pos:line="1148" pos:column="59">sig<pos:position pos:line="1148" pos:column="62"/></name></expr></argument>)<pos:position pos:line="1148" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1148" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name pos:line="1149" pos:column="25">saw_signature<pos:position pos:line="1149" pos:column="38"/></name> <operator pos:line="1149" pos:column="39">=<pos:position pos:line="1149" pos:column="40"/></operator> <literal type="number" pos:line="1149" pos:column="41">1<pos:position pos:line="1149" pos:column="42"/></literal></expr>;<pos:position pos:line="1149" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="1150" pos:column="25">in_signature<pos:position pos:line="1150" pos:column="37"/></name> <operator pos:line="1150" pos:column="38">=<pos:position pos:line="1150" pos:column="39"/></operator> <literal type="number" pos:line="1150" pos:column="40">1<pos:position pos:line="1150" pos:column="41"/></literal></expr>;<pos:position pos:line="1150" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="1151" pos:column="18"/></block></then> <else pos:line="1151" pos:column="19">else <block pos:line="1151" pos:column="24">{
			<if pos:line="1152" pos:column="25">if <condition pos:line="1152" pos:column="28">(<expr><operator pos:line="1152" pos:column="29">*<pos:position pos:line="1152" pos:column="30"/></operator><name pos:line="1152" pos:column="30">line<pos:position pos:line="1152" pos:column="34"/></name> <operator pos:line="1152" pos:column="35">==<pos:position pos:line="1152" pos:column="37"/></operator> <literal type="char" pos:line="1152" pos:column="38">'\n'<pos:position pos:line="1152" pos:column="42"/></literal></expr>)<pos:position pos:line="1152" pos:column="43"/></condition><then pos:line="1152" pos:column="43">
				<comment type="block" pos:line="1153" pos:column="33">/* dump the whole remainder of the buffer */</comment>
				<block type="pseudo"><expr_stmt><expr><name pos:line="1154" pos:column="33">next<pos:position pos:line="1154" pos:column="37"/></name> <operator pos:line="1154" pos:column="38">=<pos:position pos:line="1154" pos:column="39"/></operator> <name pos:line="1154" pos:column="40">tail<pos:position pos:line="1154" pos:column="44"/></name></expr>;<pos:position pos:line="1154" pos:column="45"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="1155" pos:column="25">strbuf_add<pos:position pos:line="1155" pos:column="35"/></name><argument_list pos:line="1155" pos:column="35">(<argument><expr><name pos:line="1155" pos:column="36">payload<pos:position pos:line="1155" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1155" pos:column="45">line<pos:position pos:line="1155" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="1155" pos:column="51">next<pos:position pos:line="1155" pos:column="55"/></name> <operator pos:line="1155" pos:column="56">-<pos:position pos:line="1155" pos:column="57"/></operator> <name pos:line="1155" pos:column="58">line<pos:position pos:line="1155" pos:column="62"/></name></expr></argument>)<pos:position pos:line="1155" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1155" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name pos:line="1156" pos:column="25">in_signature<pos:position pos:line="1156" pos:column="37"/></name> <operator pos:line="1156" pos:column="38">=<pos:position pos:line="1156" pos:column="39"/></operator> <literal type="number" pos:line="1156" pos:column="40">0<pos:position pos:line="1156" pos:column="41"/></literal></expr>;<pos:position pos:line="1156" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="1157" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="1158" pos:column="17">line<pos:position pos:line="1158" pos:column="21"/></name> <operator pos:line="1158" pos:column="22">=<pos:position pos:line="1158" pos:column="23"/></operator> <name pos:line="1158" pos:column="24">next<pos:position pos:line="1158" pos:column="28"/></name></expr>;<pos:position pos:line="1158" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="1159" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="1160" pos:column="9">unuse_commit_buffer<pos:position pos:line="1160" pos:column="28"/></name><argument_list pos:line="1160" pos:column="28">(<argument><expr><name pos:line="1160" pos:column="29">commit<pos:position pos:line="1160" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1160" pos:column="37">buffer<pos:position pos:line="1160" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1160" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1160" pos:column="45"/></expr_stmt>
	<return pos:line="1161" pos:column="9">return <expr><name pos:line="1161" pos:column="16">saw_signature<pos:position pos:line="1161" pos:column="29"/></name></expr>;<pos:position pos:line="1161" pos:column="30"/></return>
}<pos:position pos:line="1162" pos:column="2"/></block></function>

<function><type><name pos:line="1164" pos:column="1">int<pos:position pos:line="1164" pos:column="4"/></name></type> <name pos:line="1164" pos:column="5">remove_signature<pos:position pos:line="1164" pos:column="21"/></name><parameter_list pos:line="1164" pos:column="21">(<parameter><decl><type><name><name pos:line="1164" pos:column="22">struct<pos:position pos:line="1164" pos:column="28"/></name> <name pos:line="1164" pos:column="29">strbuf<pos:position pos:line="1164" pos:column="35"/></name></name> <modifier pos:line="1164" pos:column="36">*<pos:position pos:line="1164" pos:column="37"/></modifier></type><name pos:line="1164" pos:column="37">buf<pos:position pos:line="1164" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1164" pos:column="41"/></parameter_list>
<block pos:line="1165" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="1166" pos:column="9">const<pos:position pos:line="1166" pos:column="14"/></specifier> <name pos:line="1166" pos:column="15">char<pos:position pos:line="1166" pos:column="19"/></name> <modifier pos:line="1166" pos:column="20">*<pos:position pos:line="1166" pos:column="21"/></modifier></type><name pos:line="1166" pos:column="21">line<pos:position pos:line="1166" pos:column="25"/></name> <init pos:line="1166" pos:column="26">= <expr><name><name pos:line="1166" pos:column="28">buf<pos:position pos:line="1166" pos:column="31"/></name><operator pos:line="1166" pos:column="31">-&gt;<pos:position pos:line="1166" pos:column="36"/></operator><name pos:line="1166" pos:column="33">buf<pos:position pos:line="1166" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="1166" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1167" pos:column="9">const<pos:position pos:line="1167" pos:column="14"/></specifier> <name pos:line="1167" pos:column="15">char<pos:position pos:line="1167" pos:column="19"/></name> <modifier pos:line="1167" pos:column="20">*<pos:position pos:line="1167" pos:column="21"/></modifier></type><name pos:line="1167" pos:column="21">tail<pos:position pos:line="1167" pos:column="25"/></name> <init pos:line="1167" pos:column="26">= <expr><name><name pos:line="1167" pos:column="28">buf<pos:position pos:line="1167" pos:column="31"/></name><operator pos:line="1167" pos:column="31">-&gt;<pos:position pos:line="1167" pos:column="36"/></operator><name pos:line="1167" pos:column="33">buf<pos:position pos:line="1167" pos:column="36"/></name></name> <operator pos:line="1167" pos:column="37">+<pos:position pos:line="1167" pos:column="38"/></operator> <name><name pos:line="1167" pos:column="39">buf<pos:position pos:line="1167" pos:column="42"/></name><operator pos:line="1167" pos:column="42">-&gt;<pos:position pos:line="1167" pos:column="47"/></operator><name pos:line="1167" pos:column="44">len<pos:position pos:line="1167" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="1167" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1168" pos:column="9">int<pos:position pos:line="1168" pos:column="12"/></name></type> <name pos:line="1168" pos:column="13">in_signature<pos:position pos:line="1168" pos:column="25"/></name> <init pos:line="1168" pos:column="26">= <expr><literal type="number" pos:line="1168" pos:column="28">0<pos:position pos:line="1168" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="1168" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1169" pos:column="9">const<pos:position pos:line="1169" pos:column="14"/></specifier> <name pos:line="1169" pos:column="15">char<pos:position pos:line="1169" pos:column="19"/></name> <modifier pos:line="1169" pos:column="20">*<pos:position pos:line="1169" pos:column="21"/></modifier></type><name pos:line="1169" pos:column="21">sig_start<pos:position pos:line="1169" pos:column="30"/></name> <init pos:line="1169" pos:column="31">= <expr><name pos:line="1169" pos:column="33">NULL<pos:position pos:line="1169" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="1169" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1170" pos:column="9">const<pos:position pos:line="1170" pos:column="14"/></specifier> <name pos:line="1170" pos:column="15">char<pos:position pos:line="1170" pos:column="19"/></name> <modifier pos:line="1170" pos:column="20">*<pos:position pos:line="1170" pos:column="21"/></modifier></type><name pos:line="1170" pos:column="21">sig_end<pos:position pos:line="1170" pos:column="28"/></name> <init pos:line="1170" pos:column="29">= <expr><name pos:line="1170" pos:column="31">NULL<pos:position pos:line="1170" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="1170" pos:column="36"/></decl_stmt>

	<while pos:line="1172" pos:column="9">while <condition pos:line="1172" pos:column="15">(<expr><name pos:line="1172" pos:column="16">line<pos:position pos:line="1172" pos:column="20"/></name> <operator pos:line="1172" pos:column="21">&lt;<pos:position pos:line="1172" pos:column="25"/></operator> <name pos:line="1172" pos:column="23">tail<pos:position pos:line="1172" pos:column="27"/></name></expr>)<pos:position pos:line="1172" pos:column="28"/></condition> <block pos:line="1172" pos:column="29">{
		<decl_stmt><decl><type><specifier pos:line="1173" pos:column="17">const<pos:position pos:line="1173" pos:column="22"/></specifier> <name pos:line="1173" pos:column="23">char<pos:position pos:line="1173" pos:column="27"/></name> <modifier pos:line="1173" pos:column="28">*<pos:position pos:line="1173" pos:column="29"/></modifier></type><name pos:line="1173" pos:column="29">next<pos:position pos:line="1173" pos:column="33"/></name> <init pos:line="1173" pos:column="34">= <expr><call><name pos:line="1173" pos:column="36">memchr<pos:position pos:line="1173" pos:column="42"/></name><argument_list pos:line="1173" pos:column="42">(<argument><expr><name pos:line="1173" pos:column="43">line<pos:position pos:line="1173" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1173" pos:column="49">'\n'<pos:position pos:line="1173" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="1173" pos:column="55">tail<pos:position pos:line="1173" pos:column="59"/></name> <operator pos:line="1173" pos:column="60">-<pos:position pos:line="1173" pos:column="61"/></operator> <name pos:line="1173" pos:column="62">line<pos:position pos:line="1173" pos:column="66"/></name></expr></argument>)<pos:position pos:line="1173" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1173" pos:column="68"/></decl_stmt>
		<expr_stmt><expr><name pos:line="1174" pos:column="17">next<pos:position pos:line="1174" pos:column="21"/></name> <operator pos:line="1174" pos:column="22">=<pos:position pos:line="1174" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="1174" pos:column="24">next<pos:position pos:line="1174" pos:column="28"/></name></expr> ?<pos:position pos:line="1174" pos:column="30"/></condition><then pos:line="1174" pos:column="30"> <expr><name pos:line="1174" pos:column="31">next<pos:position pos:line="1174" pos:column="35"/></name> <operator pos:line="1174" pos:column="36">+<pos:position pos:line="1174" pos:column="37"/></operator> <literal type="number" pos:line="1174" pos:column="38">1<pos:position pos:line="1174" pos:column="39"/></literal></expr> <pos:position pos:line="1174" pos:column="40"/></then><else pos:line="1174" pos:column="40">: <expr><name pos:line="1174" pos:column="42">tail<pos:position pos:line="1174" pos:column="46"/></name></expr></else></ternary></expr>;<pos:position pos:line="1174" pos:column="47"/></expr_stmt>

		<if pos:line="1176" pos:column="17">if <condition pos:line="1176" pos:column="20">(<expr><name pos:line="1176" pos:column="21">in_signature<pos:position pos:line="1176" pos:column="33"/></name> <operator pos:line="1176" pos:column="34">&amp;&amp;<pos:position pos:line="1176" pos:column="44"/></operator> <name><name pos:line="1176" pos:column="37">line<pos:position pos:line="1176" pos:column="41"/></name><index pos:line="1176" pos:column="41">[<expr><literal type="number" pos:line="1176" pos:column="42">0<pos:position pos:line="1176" pos:column="43"/></literal></expr>]<pos:position pos:line="1176" pos:column="44"/></index></name> <operator pos:line="1176" pos:column="45">==<pos:position pos:line="1176" pos:column="47"/></operator> <literal type="char" pos:line="1176" pos:column="48">' '<pos:position pos:line="1176" pos:column="51"/></literal></expr>)<pos:position pos:line="1176" pos:column="52"/></condition><then pos:line="1176" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="1177" pos:column="25">sig_end<pos:position pos:line="1177" pos:column="32"/></name> <operator pos:line="1177" pos:column="33">=<pos:position pos:line="1177" pos:column="34"/></operator> <name pos:line="1177" pos:column="35">next<pos:position pos:line="1177" pos:column="39"/></name></expr>;<pos:position pos:line="1177" pos:column="40"/></expr_stmt></block></then>
		<elseif pos:line="1178" pos:column="17">else <if pos:line="1178" pos:column="22">if <condition pos:line="1178" pos:column="25">(<expr><call><name pos:line="1178" pos:column="26">starts_with<pos:position pos:line="1178" pos:column="37"/></name><argument_list pos:line="1178" pos:column="37">(<argument><expr><name pos:line="1178" pos:column="38">line<pos:position pos:line="1178" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1178" pos:column="44">gpg_sig_header<pos:position pos:line="1178" pos:column="58"/></name></expr></argument>)<pos:position pos:line="1178" pos:column="59"/></argument_list></call> <operator pos:line="1178" pos:column="60">&amp;&amp;<pos:position pos:line="1178" pos:column="70"/></operator>
			 <name><name pos:line="1179" pos:column="26">line<pos:position pos:line="1179" pos:column="30"/></name><index pos:line="1179" pos:column="30">[<expr><name pos:line="1179" pos:column="31">gpg_sig_header_len<pos:position pos:line="1179" pos:column="49"/></name></expr>]<pos:position pos:line="1179" pos:column="50"/></index></name> <operator pos:line="1179" pos:column="51">==<pos:position pos:line="1179" pos:column="53"/></operator> <literal type="char" pos:line="1179" pos:column="54">' '<pos:position pos:line="1179" pos:column="57"/></literal></expr>)<pos:position pos:line="1179" pos:column="58"/></condition><then pos:line="1179" pos:column="58"> <block pos:line="1179" pos:column="59">{
			<expr_stmt><expr><name pos:line="1180" pos:column="25">sig_start<pos:position pos:line="1180" pos:column="34"/></name> <operator pos:line="1180" pos:column="35">=<pos:position pos:line="1180" pos:column="36"/></operator> <name pos:line="1180" pos:column="37">line<pos:position pos:line="1180" pos:column="41"/></name></expr>;<pos:position pos:line="1180" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="1181" pos:column="25">sig_end<pos:position pos:line="1181" pos:column="32"/></name> <operator pos:line="1181" pos:column="33">=<pos:position pos:line="1181" pos:column="34"/></operator> <name pos:line="1181" pos:column="35">next<pos:position pos:line="1181" pos:column="39"/></name></expr>;<pos:position pos:line="1181" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="1182" pos:column="25">in_signature<pos:position pos:line="1182" pos:column="37"/></name> <operator pos:line="1182" pos:column="38">=<pos:position pos:line="1182" pos:column="39"/></operator> <literal type="number" pos:line="1182" pos:column="40">1<pos:position pos:line="1182" pos:column="41"/></literal></expr>;<pos:position pos:line="1182" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="1183" pos:column="18"/></block></then></if></elseif> <else pos:line="1183" pos:column="19">else <block pos:line="1183" pos:column="24">{
			<if pos:line="1184" pos:column="25">if <condition pos:line="1184" pos:column="28">(<expr><operator pos:line="1184" pos:column="29">*<pos:position pos:line="1184" pos:column="30"/></operator><name pos:line="1184" pos:column="30">line<pos:position pos:line="1184" pos:column="34"/></name> <operator pos:line="1184" pos:column="35">==<pos:position pos:line="1184" pos:column="37"/></operator> <literal type="char" pos:line="1184" pos:column="38">'\n'<pos:position pos:line="1184" pos:column="42"/></literal></expr>)<pos:position pos:line="1184" pos:column="43"/></condition><then pos:line="1184" pos:column="43">
				<comment type="block" pos:line="1185" pos:column="33">/* dump the whole remainder of the buffer */</comment>
				<block type="pseudo"><expr_stmt><expr><name pos:line="1186" pos:column="33">next<pos:position pos:line="1186" pos:column="37"/></name> <operator pos:line="1186" pos:column="38">=<pos:position pos:line="1186" pos:column="39"/></operator> <name pos:line="1186" pos:column="40">tail<pos:position pos:line="1186" pos:column="44"/></name></expr>;<pos:position pos:line="1186" pos:column="45"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="1187" pos:column="25">in_signature<pos:position pos:line="1187" pos:column="37"/></name> <operator pos:line="1187" pos:column="38">=<pos:position pos:line="1187" pos:column="39"/></operator> <literal type="number" pos:line="1187" pos:column="40">0<pos:position pos:line="1187" pos:column="41"/></literal></expr>;<pos:position pos:line="1187" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="1188" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="1189" pos:column="17">line<pos:position pos:line="1189" pos:column="21"/></name> <operator pos:line="1189" pos:column="22">=<pos:position pos:line="1189" pos:column="23"/></operator> <name pos:line="1189" pos:column="24">next<pos:position pos:line="1189" pos:column="28"/></name></expr>;<pos:position pos:line="1189" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="1190" pos:column="10"/></block></while>

	<if pos:line="1192" pos:column="9">if <condition pos:line="1192" pos:column="12">(<expr><name pos:line="1192" pos:column="13">sig_start<pos:position pos:line="1192" pos:column="22"/></name></expr>)<pos:position pos:line="1192" pos:column="23"/></condition><then pos:line="1192" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="1193" pos:column="17">strbuf_remove<pos:position pos:line="1193" pos:column="30"/></name><argument_list pos:line="1193" pos:column="30">(<argument><expr><name pos:line="1193" pos:column="31">buf<pos:position pos:line="1193" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1193" pos:column="36">sig_start<pos:position pos:line="1193" pos:column="45"/></name> <operator pos:line="1193" pos:column="46">-<pos:position pos:line="1193" pos:column="47"/></operator> <name><name pos:line="1193" pos:column="48">buf<pos:position pos:line="1193" pos:column="51"/></name><operator pos:line="1193" pos:column="51">-&gt;<pos:position pos:line="1193" pos:column="56"/></operator><name pos:line="1193" pos:column="53">buf<pos:position pos:line="1193" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="1193" pos:column="58">sig_end<pos:position pos:line="1193" pos:column="65"/></name> <operator pos:line="1193" pos:column="66">-<pos:position pos:line="1193" pos:column="67"/></operator> <name pos:line="1193" pos:column="68">sig_start<pos:position pos:line="1193" pos:column="77"/></name></expr></argument>)<pos:position pos:line="1193" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="1193" pos:column="79"/></expr_stmt></block></then></if>

	<return pos:line="1195" pos:column="9">return <expr><name pos:line="1195" pos:column="16">sig_start<pos:position pos:line="1195" pos:column="25"/></name> <operator pos:line="1195" pos:column="26">!=<pos:position pos:line="1195" pos:column="28"/></operator> <name pos:line="1195" pos:column="29">NULL<pos:position pos:line="1195" pos:column="33"/></name></expr>;<pos:position pos:line="1195" pos:column="34"/></return>
}<pos:position pos:line="1196" pos:column="2"/></block></function>

<function><specifier pos:line="1198" pos:column="1">static<pos:position pos:line="1198" pos:column="7"/></specifier> <type><name pos:line="1198" pos:column="8">void<pos:position pos:line="1198" pos:column="12"/></name></type> <name pos:line="1198" pos:column="13">handle_signed_tag<pos:position pos:line="1198" pos:column="30"/></name><parameter_list pos:line="1198" pos:column="30">(<parameter><decl><type><name><name pos:line="1198" pos:column="31">struct<pos:position pos:line="1198" pos:column="37"/></name> <name pos:line="1198" pos:column="38">commit<pos:position pos:line="1198" pos:column="44"/></name></name> <modifier pos:line="1198" pos:column="45">*<pos:position pos:line="1198" pos:column="46"/></modifier></type><name pos:line="1198" pos:column="46">parent<pos:position pos:line="1198" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1198" pos:column="54">struct<pos:position pos:line="1198" pos:column="60"/></name> <name pos:line="1198" pos:column="61">commit_extra_header<pos:position pos:line="1198" pos:column="80"/></name></name> <modifier pos:line="1198" pos:column="81">*<pos:position pos:line="1198" pos:column="82"/></modifier><modifier pos:line="1198" pos:column="82">*<pos:position pos:line="1198" pos:column="83"/></modifier><modifier pos:line="1198" pos:column="83">*<pos:position pos:line="1198" pos:column="84"/></modifier></type><name pos:line="1198" pos:column="84">tail<pos:position pos:line="1198" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="1198" pos:column="89"/></parameter_list>
<block pos:line="1199" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1200" pos:column="9">struct<pos:position pos:line="1200" pos:column="15"/></name> <name pos:line="1200" pos:column="16">merge_remote_desc<pos:position pos:line="1200" pos:column="33"/></name></name> <modifier pos:line="1200" pos:column="34">*<pos:position pos:line="1200" pos:column="35"/></modifier></type><name pos:line="1200" pos:column="35">desc<pos:position pos:line="1200" pos:column="39"/></name></decl>;<pos:position pos:line="1200" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1201" pos:column="9">struct<pos:position pos:line="1201" pos:column="15"/></name> <name pos:line="1201" pos:column="16">commit_extra_header<pos:position pos:line="1201" pos:column="35"/></name></name> <modifier pos:line="1201" pos:column="36">*<pos:position pos:line="1201" pos:column="37"/></modifier></type><name pos:line="1201" pos:column="37">mergetag<pos:position pos:line="1201" pos:column="45"/></name></decl>;<pos:position pos:line="1201" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1202" pos:column="9">char<pos:position pos:line="1202" pos:column="13"/></name> <modifier pos:line="1202" pos:column="14">*<pos:position pos:line="1202" pos:column="15"/></modifier></type><name pos:line="1202" pos:column="15">buf<pos:position pos:line="1202" pos:column="18"/></name></decl>;<pos:position pos:line="1202" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1203" pos:column="9">unsigned<pos:position pos:line="1203" pos:column="17"/></name> <name pos:line="1203" pos:column="18">long<pos:position pos:line="1203" pos:column="22"/></name></type> <name pos:line="1203" pos:column="23">size<pos:position pos:line="1203" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="1203" pos:column="29">len<pos:position pos:line="1203" pos:column="32"/></name></decl>;<pos:position pos:line="1203" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1204" pos:column="9">enum<pos:position pos:line="1204" pos:column="13"/></name> <name pos:line="1204" pos:column="14">object_type<pos:position pos:line="1204" pos:column="25"/></name></name></type> <name pos:line="1204" pos:column="26">type<pos:position pos:line="1204" pos:column="30"/></name></decl>;<pos:position pos:line="1204" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><name pos:line="1206" pos:column="9">desc<pos:position pos:line="1206" pos:column="13"/></name> <operator pos:line="1206" pos:column="14">=<pos:position pos:line="1206" pos:column="15"/></operator> <call><name pos:line="1206" pos:column="16">merge_remote_util<pos:position pos:line="1206" pos:column="33"/></name><argument_list pos:line="1206" pos:column="33">(<argument><expr><name pos:line="1206" pos:column="34">parent<pos:position pos:line="1206" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1206" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1206" pos:column="42"/></expr_stmt>
	<if pos:line="1207" pos:column="9">if <condition pos:line="1207" pos:column="12">(<expr><operator pos:line="1207" pos:column="13">!<pos:position pos:line="1207" pos:column="14"/></operator><name pos:line="1207" pos:column="14">desc<pos:position pos:line="1207" pos:column="18"/></name> <operator pos:line="1207" pos:column="19">||<pos:position pos:line="1207" pos:column="21"/></operator> <operator pos:line="1207" pos:column="22">!<pos:position pos:line="1207" pos:column="23"/></operator><name><name pos:line="1207" pos:column="23">desc<pos:position pos:line="1207" pos:column="27"/></name><operator pos:line="1207" pos:column="27">-&gt;<pos:position pos:line="1207" pos:column="32"/></operator><name pos:line="1207" pos:column="29">obj<pos:position pos:line="1207" pos:column="32"/></name></name></expr>)<pos:position pos:line="1207" pos:column="33"/></condition><then pos:line="1207" pos:column="33">
		<block type="pseudo"><return pos:line="1208" pos:column="17">return;<pos:position pos:line="1208" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="1209" pos:column="9">buf<pos:position pos:line="1209" pos:column="12"/></name> <operator pos:line="1209" pos:column="13">=<pos:position pos:line="1209" pos:column="14"/></operator> <call><name pos:line="1209" pos:column="15">read_sha1_file<pos:position pos:line="1209" pos:column="29"/></name><argument_list pos:line="1209" pos:column="29">(<argument><expr><name><name pos:line="1209" pos:column="30">desc<pos:position pos:line="1209" pos:column="34"/></name><operator pos:line="1209" pos:column="34">-&gt;<pos:position pos:line="1209" pos:column="39"/></operator><name pos:line="1209" pos:column="36">obj<pos:position pos:line="1209" pos:column="39"/></name><operator pos:line="1209" pos:column="39">-&gt;<pos:position pos:line="1209" pos:column="44"/></operator><name pos:line="1209" pos:column="41">sha1<pos:position pos:line="1209" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="1209" pos:column="47">&amp;<pos:position pos:line="1209" pos:column="52"/></operator><name pos:line="1209" pos:column="48">type<pos:position pos:line="1209" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="1209" pos:column="54">&amp;<pos:position pos:line="1209" pos:column="59"/></operator><name pos:line="1209" pos:column="55">size<pos:position pos:line="1209" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1209" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1209" pos:column="61"/></expr_stmt>
	<if pos:line="1210" pos:column="9">if <condition pos:line="1210" pos:column="12">(<expr><operator pos:line="1210" pos:column="13">!<pos:position pos:line="1210" pos:column="14"/></operator><name pos:line="1210" pos:column="14">buf<pos:position pos:line="1210" pos:column="17"/></name> <operator pos:line="1210" pos:column="18">||<pos:position pos:line="1210" pos:column="20"/></operator> <name pos:line="1210" pos:column="21">type<pos:position pos:line="1210" pos:column="25"/></name> <operator pos:line="1210" pos:column="26">!=<pos:position pos:line="1210" pos:column="28"/></operator> <name pos:line="1210" pos:column="29">OBJ_TAG<pos:position pos:line="1210" pos:column="36"/></name></expr>)<pos:position pos:line="1210" pos:column="37"/></condition><then pos:line="1210" pos:column="37">
		<block type="pseudo"><goto pos:line="1211" pos:column="17">goto <name pos:line="1211" pos:column="22">free_return<pos:position pos:line="1211" pos:column="33"/></name>;<pos:position pos:line="1211" pos:column="34"/></goto></block></then></if>
	<expr_stmt><expr><name pos:line="1212" pos:column="9">len<pos:position pos:line="1212" pos:column="12"/></name> <operator pos:line="1212" pos:column="13">=<pos:position pos:line="1212" pos:column="14"/></operator> <call><name pos:line="1212" pos:column="15">parse_signature<pos:position pos:line="1212" pos:column="30"/></name><argument_list pos:line="1212" pos:column="30">(<argument><expr><name pos:line="1212" pos:column="31">buf<pos:position pos:line="1212" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1212" pos:column="36">size<pos:position pos:line="1212" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1212" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1212" pos:column="42"/></expr_stmt>
	<if pos:line="1213" pos:column="9">if <condition pos:line="1213" pos:column="12">(<expr><name pos:line="1213" pos:column="13">size<pos:position pos:line="1213" pos:column="17"/></name> <operator pos:line="1213" pos:column="18">==<pos:position pos:line="1213" pos:column="20"/></operator> <name pos:line="1213" pos:column="21">len<pos:position pos:line="1213" pos:column="24"/></name></expr>)<pos:position pos:line="1213" pos:column="25"/></condition><then pos:line="1213" pos:column="25">
		<block type="pseudo"><goto pos:line="1214" pos:column="17">goto <name pos:line="1214" pos:column="22">free_return<pos:position pos:line="1214" pos:column="33"/></name>;<pos:position pos:line="1214" pos:column="34"/></goto></block></then></if>
	<comment type="block" pos:line="1215" pos:column="9">/*
	 * We could verify this signature and either omit the tag when
	 * it does not validate, but the integrator may not have the
	 * public key of the signer of the tag he is merging, while a
	 * later auditor may have it while auditing, so let's not run
	 * verify-signed-buffer here for now...
	 *
	 * if (verify_signed_buffer(buf, len, buf + len, size - len, ...))
	 *	warn("warning: signed tag unverified.");
	 */</comment>
	<expr_stmt><expr><name pos:line="1225" pos:column="9">mergetag<pos:position pos:line="1225" pos:column="17"/></name> <operator pos:line="1225" pos:column="18">=<pos:position pos:line="1225" pos:column="19"/></operator> <call><name pos:line="1225" pos:column="20">xcalloc<pos:position pos:line="1225" pos:column="27"/></name><argument_list pos:line="1225" pos:column="27">(<argument><expr><literal type="number" pos:line="1225" pos:column="28">1<pos:position pos:line="1225" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="1225" pos:column="31">sizeof<argument_list pos:line="1225" pos:column="37">(<argument><expr><operator pos:line="1225" pos:column="38">*<pos:position pos:line="1225" pos:column="39"/></operator><name pos:line="1225" pos:column="39">mergetag<pos:position pos:line="1225" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1225" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1225" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1225" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="1226" pos:column="9">mergetag<pos:position pos:line="1226" pos:column="17"/></name><operator pos:line="1226" pos:column="17">-&gt;<pos:position pos:line="1226" pos:column="22"/></operator><name pos:line="1226" pos:column="19">key<pos:position pos:line="1226" pos:column="22"/></name></name> <operator pos:line="1226" pos:column="23">=<pos:position pos:line="1226" pos:column="24"/></operator> <call><name pos:line="1226" pos:column="25">xstrdup<pos:position pos:line="1226" pos:column="32"/></name><argument_list pos:line="1226" pos:column="32">(<argument><expr><literal type="string" pos:line="1226" pos:column="33">"mergetag"<pos:position pos:line="1226" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="1226" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1226" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="1227" pos:column="9">mergetag<pos:position pos:line="1227" pos:column="17"/></name><operator pos:line="1227" pos:column="17">-&gt;<pos:position pos:line="1227" pos:column="22"/></operator><name pos:line="1227" pos:column="19">value<pos:position pos:line="1227" pos:column="24"/></name></name> <operator pos:line="1227" pos:column="25">=<pos:position pos:line="1227" pos:column="26"/></operator> <name pos:line="1227" pos:column="27">buf<pos:position pos:line="1227" pos:column="30"/></name></expr>;<pos:position pos:line="1227" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="1228" pos:column="9">mergetag<pos:position pos:line="1228" pos:column="17"/></name><operator pos:line="1228" pos:column="17">-&gt;<pos:position pos:line="1228" pos:column="22"/></operator><name pos:line="1228" pos:column="19">len<pos:position pos:line="1228" pos:column="22"/></name></name> <operator pos:line="1228" pos:column="23">=<pos:position pos:line="1228" pos:column="24"/></operator> <name pos:line="1228" pos:column="25">size<pos:position pos:line="1228" pos:column="29"/></name></expr>;<pos:position pos:line="1228" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="1230" pos:column="9">*<pos:position pos:line="1230" pos:column="10"/></operator><operator pos:line="1230" pos:column="10">*<pos:position pos:line="1230" pos:column="11"/></operator><name pos:line="1230" pos:column="11">tail<pos:position pos:line="1230" pos:column="15"/></name> <operator pos:line="1230" pos:column="16">=<pos:position pos:line="1230" pos:column="17"/></operator> <name pos:line="1230" pos:column="18">mergetag<pos:position pos:line="1230" pos:column="26"/></name></expr>;<pos:position pos:line="1230" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="1231" pos:column="9">*<pos:position pos:line="1231" pos:column="10"/></operator><name pos:line="1231" pos:column="10">tail<pos:position pos:line="1231" pos:column="14"/></name> <operator pos:line="1231" pos:column="15">=<pos:position pos:line="1231" pos:column="16"/></operator> <operator pos:line="1231" pos:column="17">&amp;<pos:position pos:line="1231" pos:column="22"/></operator><name><name pos:line="1231" pos:column="18">mergetag<pos:position pos:line="1231" pos:column="26"/></name><operator pos:line="1231" pos:column="26">-&gt;<pos:position pos:line="1231" pos:column="31"/></operator><name pos:line="1231" pos:column="28">next<pos:position pos:line="1231" pos:column="32"/></name></name></expr>;<pos:position pos:line="1231" pos:column="33"/></expr_stmt>
	<return pos:line="1232" pos:column="9">return;<pos:position pos:line="1232" pos:column="16"/></return>

<label><name pos:line="1234" pos:column="1">free_return<pos:position pos:line="1234" pos:column="12"/></name>:<pos:position pos:line="1234" pos:column="13"/></label>
	<expr_stmt><expr><call><name pos:line="1235" pos:column="9">free<pos:position pos:line="1235" pos:column="13"/></name><argument_list pos:line="1235" pos:column="13">(<argument><expr><name pos:line="1235" pos:column="14">buf<pos:position pos:line="1235" pos:column="17"/></name></expr></argument>)<pos:position pos:line="1235" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="1235" pos:column="19"/></expr_stmt>
}<pos:position pos:line="1236" pos:column="2"/></block></function>

<function><type><name pos:line="1238" pos:column="1">int<pos:position pos:line="1238" pos:column="4"/></name></type> <name pos:line="1238" pos:column="5">check_commit_signature<pos:position pos:line="1238" pos:column="27"/></name><parameter_list pos:line="1238" pos:column="27">(<parameter><decl><type><specifier pos:line="1238" pos:column="28">const<pos:position pos:line="1238" pos:column="33"/></specifier> <name><name pos:line="1238" pos:column="34">struct<pos:position pos:line="1238" pos:column="40"/></name> <name pos:line="1238" pos:column="41">commit<pos:position pos:line="1238" pos:column="47"/></name></name> <modifier pos:line="1238" pos:column="48">*<pos:position pos:line="1238" pos:column="49"/></modifier></type><name pos:line="1238" pos:column="49">commit<pos:position pos:line="1238" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1238" pos:column="57">struct<pos:position pos:line="1238" pos:column="63"/></name> <name pos:line="1238" pos:column="64">signature_check<pos:position pos:line="1238" pos:column="79"/></name></name> <modifier pos:line="1238" pos:column="80">*<pos:position pos:line="1238" pos:column="81"/></modifier></type><name pos:line="1238" pos:column="81">sigc<pos:position pos:line="1238" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1238" pos:column="86"/></parameter_list>
<block pos:line="1239" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1240" pos:column="9">struct<pos:position pos:line="1240" pos:column="15"/></name> <name pos:line="1240" pos:column="16">strbuf<pos:position pos:line="1240" pos:column="22"/></name></name></type> <name pos:line="1240" pos:column="23">payload<pos:position pos:line="1240" pos:column="30"/></name> <init pos:line="1240" pos:column="31">= <expr><name pos:line="1240" pos:column="33">STRBUF_INIT<pos:position pos:line="1240" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="1240" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1241" pos:column="9">struct<pos:position pos:line="1241" pos:column="15"/></name> <name pos:line="1241" pos:column="16">strbuf<pos:position pos:line="1241" pos:column="22"/></name></name></type> <name pos:line="1241" pos:column="23">signature<pos:position pos:line="1241" pos:column="32"/></name> <init pos:line="1241" pos:column="33">= <expr><name pos:line="1241" pos:column="35">STRBUF_INIT<pos:position pos:line="1241" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="1241" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1242" pos:column="9">int<pos:position pos:line="1242" pos:column="12"/></name></type> <name pos:line="1242" pos:column="13">ret<pos:position pos:line="1242" pos:column="16"/></name> <init pos:line="1242" pos:column="17">= <expr><literal type="number" pos:line="1242" pos:column="19">1<pos:position pos:line="1242" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="1242" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="1244" pos:column="9">sigc<pos:position pos:line="1244" pos:column="13"/></name><operator pos:line="1244" pos:column="13">-&gt;<pos:position pos:line="1244" pos:column="18"/></operator><name pos:line="1244" pos:column="15">result<pos:position pos:line="1244" pos:column="21"/></name></name> <operator pos:line="1244" pos:column="22">=<pos:position pos:line="1244" pos:column="23"/></operator> <literal type="char" pos:line="1244" pos:column="24">'N'<pos:position pos:line="1244" pos:column="27"/></literal></expr>;<pos:position pos:line="1244" pos:column="28"/></expr_stmt>

	<if pos:line="1246" pos:column="9">if <condition pos:line="1246" pos:column="12">(<expr><call><name pos:line="1246" pos:column="13">parse_signed_commit<pos:position pos:line="1246" pos:column="32"/></name><argument_list pos:line="1246" pos:column="32">(<argument><expr><name pos:line="1246" pos:column="33">commit<pos:position pos:line="1246" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="1246" pos:column="41">&amp;<pos:position pos:line="1246" pos:column="46"/></operator><name pos:line="1246" pos:column="42">payload<pos:position pos:line="1246" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="1246" pos:column="51">&amp;<pos:position pos:line="1246" pos:column="56"/></operator><name pos:line="1246" pos:column="52">signature<pos:position pos:line="1246" pos:column="61"/></name></expr></argument>)<pos:position pos:line="1246" pos:column="62"/></argument_list></call> <operator pos:line="1246" pos:column="63">&lt;=<pos:position pos:line="1246" pos:column="68"/></operator> <literal type="number" pos:line="1246" pos:column="66">0<pos:position pos:line="1246" pos:column="67"/></literal></expr>)<pos:position pos:line="1246" pos:column="68"/></condition><then pos:line="1246" pos:column="68">
		<block type="pseudo"><goto pos:line="1247" pos:column="17">goto <name pos:line="1247" pos:column="22">out<pos:position pos:line="1247" pos:column="25"/></name>;<pos:position pos:line="1247" pos:column="26"/></goto></block></then></if>
	<expr_stmt><expr><name pos:line="1248" pos:column="9">ret<pos:position pos:line="1248" pos:column="12"/></name> <operator pos:line="1248" pos:column="13">=<pos:position pos:line="1248" pos:column="14"/></operator> <call><name pos:line="1248" pos:column="15">check_signature<pos:position pos:line="1248" pos:column="30"/></name><argument_list pos:line="1248" pos:column="30">(<argument><expr><name><name pos:line="1248" pos:column="31">payload<pos:position pos:line="1248" pos:column="38"/></name><operator pos:line="1248" pos:column="38">.<pos:position pos:line="1248" pos:column="39"/></operator><name pos:line="1248" pos:column="39">buf<pos:position pos:line="1248" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1248" pos:column="44">payload<pos:position pos:line="1248" pos:column="51"/></name><operator pos:line="1248" pos:column="51">.<pos:position pos:line="1248" pos:column="52"/></operator><name pos:line="1248" pos:column="52">len<pos:position pos:line="1248" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1248" pos:column="57">signature<pos:position pos:line="1248" pos:column="66"/></name><operator pos:line="1248" pos:column="66">.<pos:position pos:line="1248" pos:column="67"/></operator><name pos:line="1248" pos:column="67">buf<pos:position pos:line="1248" pos:column="70"/></name></name></expr></argument>,
		<argument><expr><name><name pos:line="1249" pos:column="17">signature<pos:position pos:line="1249" pos:column="26"/></name><operator pos:line="1249" pos:column="26">.<pos:position pos:line="1249" pos:column="27"/></operator><name pos:line="1249" pos:column="27">len<pos:position pos:line="1249" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="1249" pos:column="32">sigc<pos:position pos:line="1249" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1249" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1249" pos:column="38"/></expr_stmt>

 <label><name pos:line="1251" pos:column="2">out<pos:position pos:line="1251" pos:column="5"/></name>:<pos:position pos:line="1251" pos:column="6"/></label>
	<expr_stmt><expr><call><name pos:line="1252" pos:column="9">strbuf_release<pos:position pos:line="1252" pos:column="23"/></name><argument_list pos:line="1252" pos:column="23">(<argument><expr><operator pos:line="1252" pos:column="24">&amp;<pos:position pos:line="1252" pos:column="29"/></operator><name pos:line="1252" pos:column="25">payload<pos:position pos:line="1252" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1252" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1252" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1253" pos:column="9">strbuf_release<pos:position pos:line="1253" pos:column="23"/></name><argument_list pos:line="1253" pos:column="23">(<argument><expr><operator pos:line="1253" pos:column="24">&amp;<pos:position pos:line="1253" pos:column="29"/></operator><name pos:line="1253" pos:column="25">signature<pos:position pos:line="1253" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1253" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1253" pos:column="36"/></expr_stmt>

	<return pos:line="1255" pos:column="9">return <expr><name pos:line="1255" pos:column="16">ret<pos:position pos:line="1255" pos:column="19"/></name></expr>;<pos:position pos:line="1255" pos:column="20"/></return>
}<pos:position pos:line="1256" pos:column="2"/></block></function>



<function><type><name pos:line="1260" pos:column="1">void<pos:position pos:line="1260" pos:column="5"/></name></type> <name pos:line="1260" pos:column="6">append_merge_tag_headers<pos:position pos:line="1260" pos:column="30"/></name><parameter_list pos:line="1260" pos:column="30">(<parameter><decl><type><name><name pos:line="1260" pos:column="31">struct<pos:position pos:line="1260" pos:column="37"/></name> <name pos:line="1260" pos:column="38">commit_list<pos:position pos:line="1260" pos:column="49"/></name></name> <modifier pos:line="1260" pos:column="50">*<pos:position pos:line="1260" pos:column="51"/></modifier></type><name pos:line="1260" pos:column="51">parents<pos:position pos:line="1260" pos:column="58"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="1261" pos:column="31">struct<pos:position pos:line="1261" pos:column="37"/></name> <name pos:line="1261" pos:column="38">commit_extra_header<pos:position pos:line="1261" pos:column="57"/></name></name> <modifier pos:line="1261" pos:column="58">*<pos:position pos:line="1261" pos:column="59"/></modifier><modifier pos:line="1261" pos:column="59">*<pos:position pos:line="1261" pos:column="60"/></modifier><modifier pos:line="1261" pos:column="60">*<pos:position pos:line="1261" pos:column="61"/></modifier></type><name pos:line="1261" pos:column="61">tail<pos:position pos:line="1261" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1261" pos:column="66"/></parameter_list>
<block pos:line="1262" pos:column="1">{
	<while pos:line="1263" pos:column="9">while <condition pos:line="1263" pos:column="15">(<expr><name pos:line="1263" pos:column="16">parents<pos:position pos:line="1263" pos:column="23"/></name></expr>)<pos:position pos:line="1263" pos:column="24"/></condition> <block pos:line="1263" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="1264" pos:column="17">struct<pos:position pos:line="1264" pos:column="23"/></name> <name pos:line="1264" pos:column="24">commit<pos:position pos:line="1264" pos:column="30"/></name></name> <modifier pos:line="1264" pos:column="31">*<pos:position pos:line="1264" pos:column="32"/></modifier></type><name pos:line="1264" pos:column="32">parent<pos:position pos:line="1264" pos:column="38"/></name> <init pos:line="1264" pos:column="39">= <expr><name><name pos:line="1264" pos:column="41">parents<pos:position pos:line="1264" pos:column="48"/></name><operator pos:line="1264" pos:column="48">-&gt;<pos:position pos:line="1264" pos:column="53"/></operator><name pos:line="1264" pos:column="50">item<pos:position pos:line="1264" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="1264" pos:column="55"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="1265" pos:column="17">handle_signed_tag<pos:position pos:line="1265" pos:column="34"/></name><argument_list pos:line="1265" pos:column="34">(<argument><expr><name pos:line="1265" pos:column="35">parent<pos:position pos:line="1265" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="1265" pos:column="43">tail<pos:position pos:line="1265" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1265" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1265" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1266" pos:column="17">parents<pos:position pos:line="1266" pos:column="24"/></name> <operator pos:line="1266" pos:column="25">=<pos:position pos:line="1266" pos:column="26"/></operator> <name><name pos:line="1266" pos:column="27">parents<pos:position pos:line="1266" pos:column="34"/></name><operator pos:line="1266" pos:column="34">-&gt;<pos:position pos:line="1266" pos:column="39"/></operator><name pos:line="1266" pos:column="36">next<pos:position pos:line="1266" pos:column="40"/></name></name></expr>;<pos:position pos:line="1266" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="1267" pos:column="10"/></block></while>
}<pos:position pos:line="1268" pos:column="2"/></block></function>

<function><specifier pos:line="1270" pos:column="1">static<pos:position pos:line="1270" pos:column="7"/></specifier> <type><name pos:line="1270" pos:column="8">void<pos:position pos:line="1270" pos:column="12"/></name></type> <name pos:line="1270" pos:column="13">add_extra_header<pos:position pos:line="1270" pos:column="29"/></name><parameter_list pos:line="1270" pos:column="29">(<parameter><decl><type><name><name pos:line="1270" pos:column="30">struct<pos:position pos:line="1270" pos:column="36"/></name> <name pos:line="1270" pos:column="37">strbuf<pos:position pos:line="1270" pos:column="43"/></name></name> <modifier pos:line="1270" pos:column="44">*<pos:position pos:line="1270" pos:column="45"/></modifier></type><name pos:line="1270" pos:column="45">buffer<pos:position pos:line="1270" pos:column="51"/></name></decl></parameter>,
			     <parameter><decl><type><name><name pos:line="1271" pos:column="30">struct<pos:position pos:line="1271" pos:column="36"/></name> <name pos:line="1271" pos:column="37">commit_extra_header<pos:position pos:line="1271" pos:column="56"/></name></name> <modifier pos:line="1271" pos:column="57">*<pos:position pos:line="1271" pos:column="58"/></modifier></type><name pos:line="1271" pos:column="58">extra<pos:position pos:line="1271" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1271" pos:column="64"/></parameter_list>
<block pos:line="1272" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="1273" pos:column="9">strbuf_addstr<pos:position pos:line="1273" pos:column="22"/></name><argument_list pos:line="1273" pos:column="22">(<argument><expr><name pos:line="1273" pos:column="23">buffer<pos:position pos:line="1273" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="1273" pos:column="31">extra<pos:position pos:line="1273" pos:column="36"/></name><operator pos:line="1273" pos:column="36">-&gt;<pos:position pos:line="1273" pos:column="41"/></operator><name pos:line="1273" pos:column="38">key<pos:position pos:line="1273" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="1273" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="1273" pos:column="43"/></expr_stmt>
	<if pos:line="1274" pos:column="9">if <condition pos:line="1274" pos:column="12">(<expr><name><name pos:line="1274" pos:column="13">extra<pos:position pos:line="1274" pos:column="18"/></name><operator pos:line="1274" pos:column="18">-&gt;<pos:position pos:line="1274" pos:column="23"/></operator><name pos:line="1274" pos:column="20">len<pos:position pos:line="1274" pos:column="23"/></name></name></expr>)<pos:position pos:line="1274" pos:column="24"/></condition><then pos:line="1274" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="1275" pos:column="17">strbuf_add_lines<pos:position pos:line="1275" pos:column="33"/></name><argument_list pos:line="1275" pos:column="33">(<argument><expr><name pos:line="1275" pos:column="34">buffer<pos:position pos:line="1275" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1275" pos:column="42">" "<pos:position pos:line="1275" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="1275" pos:column="47">extra<pos:position pos:line="1275" pos:column="52"/></name><operator pos:line="1275" pos:column="52">-&gt;<pos:position pos:line="1275" pos:column="57"/></operator><name pos:line="1275" pos:column="54">value<pos:position pos:line="1275" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1275" pos:column="61">extra<pos:position pos:line="1275" pos:column="66"/></name><operator pos:line="1275" pos:column="66">-&gt;<pos:position pos:line="1275" pos:column="71"/></operator><name pos:line="1275" pos:column="68">len<pos:position pos:line="1275" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="1275" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1275" pos:column="73"/></expr_stmt></block></then>
	<else pos:line="1276" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="1277" pos:column="17">strbuf_addch<pos:position pos:line="1277" pos:column="29"/></name><argument_list pos:line="1277" pos:column="29">(<argument><expr><name pos:line="1277" pos:column="30">buffer<pos:position pos:line="1277" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1277" pos:column="38">'\n'<pos:position pos:line="1277" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="1277" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1277" pos:column="44"/></expr_stmt></block></else></if>
}<pos:position pos:line="1278" pos:column="2"/></block></function>

<function><type><name><name pos:line="1280" pos:column="1">struct<pos:position pos:line="1280" pos:column="7"/></name> <name pos:line="1280" pos:column="8">commit_extra_header<pos:position pos:line="1280" pos:column="27"/></name></name> <modifier pos:line="1280" pos:column="28">*<pos:position pos:line="1280" pos:column="29"/></modifier></type><name pos:line="1280" pos:column="29">read_commit_extra_headers<pos:position pos:line="1280" pos:column="54"/></name><parameter_list pos:line="1280" pos:column="54">(<parameter><decl><type><name><name pos:line="1280" pos:column="55">struct<pos:position pos:line="1280" pos:column="61"/></name> <name pos:line="1280" pos:column="62">commit<pos:position pos:line="1280" pos:column="68"/></name></name> <modifier pos:line="1280" pos:column="69">*<pos:position pos:line="1280" pos:column="70"/></modifier></type><name pos:line="1280" pos:column="70">commit<pos:position pos:line="1280" pos:column="76"/></name></decl></parameter>,
						      <parameter><decl><type><specifier pos:line="1281" pos:column="55">const<pos:position pos:line="1281" pos:column="60"/></specifier> <name pos:line="1281" pos:column="61">char<pos:position pos:line="1281" pos:column="65"/></name> <modifier pos:line="1281" pos:column="66">*<pos:position pos:line="1281" pos:column="67"/></modifier><modifier pos:line="1281" pos:column="67">*<pos:position pos:line="1281" pos:column="68"/></modifier></type><name pos:line="1281" pos:column="68">exclude<pos:position pos:line="1281" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1281" pos:column="76"/></parameter_list>
<block pos:line="1282" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1283" pos:column="9">struct<pos:position pos:line="1283" pos:column="15"/></name> <name pos:line="1283" pos:column="16">commit_extra_header<pos:position pos:line="1283" pos:column="35"/></name></name> <modifier pos:line="1283" pos:column="36">*<pos:position pos:line="1283" pos:column="37"/></modifier></type><name pos:line="1283" pos:column="37">extra<pos:position pos:line="1283" pos:column="42"/></name> <init pos:line="1283" pos:column="43">= <expr><name pos:line="1283" pos:column="45">NULL<pos:position pos:line="1283" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="1283" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1284" pos:column="9">unsigned<pos:position pos:line="1284" pos:column="17"/></name> <name pos:line="1284" pos:column="18">long<pos:position pos:line="1284" pos:column="22"/></name></type> <name pos:line="1284" pos:column="23">size<pos:position pos:line="1284" pos:column="27"/></name></decl>;<pos:position pos:line="1284" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1285" pos:column="9">const<pos:position pos:line="1285" pos:column="14"/></specifier> <name pos:line="1285" pos:column="15">char<pos:position pos:line="1285" pos:column="19"/></name> <modifier pos:line="1285" pos:column="20">*<pos:position pos:line="1285" pos:column="21"/></modifier></type><name pos:line="1285" pos:column="21">buffer<pos:position pos:line="1285" pos:column="27"/></name> <init pos:line="1285" pos:column="28">= <expr><call><name pos:line="1285" pos:column="30">get_commit_buffer<pos:position pos:line="1285" pos:column="47"/></name><argument_list pos:line="1285" pos:column="47">(<argument><expr><name pos:line="1285" pos:column="48">commit<pos:position pos:line="1285" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="1285" pos:column="56">&amp;<pos:position pos:line="1285" pos:column="61"/></operator><name pos:line="1285" pos:column="57">size<pos:position pos:line="1285" pos:column="61"/></name></expr></argument>)<pos:position pos:line="1285" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1285" pos:column="63"/></decl_stmt>
	<expr_stmt><expr><name pos:line="1286" pos:column="9">extra<pos:position pos:line="1286" pos:column="14"/></name> <operator pos:line="1286" pos:column="15">=<pos:position pos:line="1286" pos:column="16"/></operator> <call><name pos:line="1286" pos:column="17">read_commit_extra_header_lines<pos:position pos:line="1286" pos:column="47"/></name><argument_list pos:line="1286" pos:column="47">(<argument><expr><name pos:line="1286" pos:column="48">buffer<pos:position pos:line="1286" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1286" pos:column="56">size<pos:position pos:line="1286" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1286" pos:column="62">exclude<pos:position pos:line="1286" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1286" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1286" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1287" pos:column="9">unuse_commit_buffer<pos:position pos:line="1287" pos:column="28"/></name><argument_list pos:line="1287" pos:column="28">(<argument><expr><name pos:line="1287" pos:column="29">commit<pos:position pos:line="1287" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1287" pos:column="37">buffer<pos:position pos:line="1287" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1287" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1287" pos:column="45"/></expr_stmt>
	<return pos:line="1288" pos:column="9">return <expr><name pos:line="1288" pos:column="16">extra<pos:position pos:line="1288" pos:column="21"/></name></expr>;<pos:position pos:line="1288" pos:column="22"/></return>
}<pos:position pos:line="1289" pos:column="2"/></block></function>

<function><type><name pos:line="1291" pos:column="1">void<pos:position pos:line="1291" pos:column="5"/></name></type> <name pos:line="1291" pos:column="6">for_each_mergetag<pos:position pos:line="1291" pos:column="23"/></name><parameter_list pos:line="1291" pos:column="23">(<parameter><decl><type><name pos:line="1291" pos:column="24">each_mergetag_fn<pos:position pos:line="1291" pos:column="40"/></name></type> <name pos:line="1291" pos:column="41">fn<pos:position pos:line="1291" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1291" pos:column="45">struct<pos:position pos:line="1291" pos:column="51"/></name> <name pos:line="1291" pos:column="52">commit<pos:position pos:line="1291" pos:column="58"/></name></name> <modifier pos:line="1291" pos:column="59">*<pos:position pos:line="1291" pos:column="60"/></modifier></type><name pos:line="1291" pos:column="60">commit<pos:position pos:line="1291" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1291" pos:column="68">void<pos:position pos:line="1291" pos:column="72"/></name> <modifier pos:line="1291" pos:column="73">*<pos:position pos:line="1291" pos:column="74"/></modifier></type><name pos:line="1291" pos:column="74">data<pos:position pos:line="1291" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1291" pos:column="79"/></parameter_list>
<block pos:line="1292" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1293" pos:column="9">struct<pos:position pos:line="1293" pos:column="15"/></name> <name pos:line="1293" pos:column="16">commit_extra_header<pos:position pos:line="1293" pos:column="35"/></name></name> <modifier pos:line="1293" pos:column="36">*<pos:position pos:line="1293" pos:column="37"/></modifier></type><name pos:line="1293" pos:column="37">extra<pos:position pos:line="1293" pos:column="42"/></name></decl>, <modifier pos:line="1293" pos:column="44">*<pos:position pos:line="1293" pos:column="45"/></modifier><decl><type ref="prev"/><name pos:line="1293" pos:column="45">to_free<pos:position pos:line="1293" pos:column="52"/></name></decl>;<pos:position pos:line="1293" pos:column="53"/></decl_stmt>

	<expr_stmt><expr><name pos:line="1295" pos:column="9">to_free<pos:position pos:line="1295" pos:column="16"/></name> <operator pos:line="1295" pos:column="17">=<pos:position pos:line="1295" pos:column="18"/></operator> <call><name pos:line="1295" pos:column="19">read_commit_extra_headers<pos:position pos:line="1295" pos:column="44"/></name><argument_list pos:line="1295" pos:column="44">(<argument><expr><name pos:line="1295" pos:column="45">commit<pos:position pos:line="1295" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1295" pos:column="53">NULL<pos:position pos:line="1295" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1295" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1295" pos:column="59"/></expr_stmt>
	<for pos:line="1296" pos:column="9">for <control pos:line="1296" pos:column="13">(<init><expr><name pos:line="1296" pos:column="14">extra<pos:position pos:line="1296" pos:column="19"/></name> <operator pos:line="1296" pos:column="20">=<pos:position pos:line="1296" pos:column="21"/></operator> <name pos:line="1296" pos:column="22">to_free<pos:position pos:line="1296" pos:column="29"/></name></expr>;<pos:position pos:line="1296" pos:column="30"/></init> <condition><expr><name pos:line="1296" pos:column="31">extra<pos:position pos:line="1296" pos:column="36"/></name></expr>;<pos:position pos:line="1296" pos:column="37"/></condition> <incr><expr><name pos:line="1296" pos:column="38">extra<pos:position pos:line="1296" pos:column="43"/></name> <operator pos:line="1296" pos:column="44">=<pos:position pos:line="1296" pos:column="45"/></operator> <name><name pos:line="1296" pos:column="46">extra<pos:position pos:line="1296" pos:column="51"/></name><operator pos:line="1296" pos:column="51">-&gt;<pos:position pos:line="1296" pos:column="56"/></operator><name pos:line="1296" pos:column="53">next<pos:position pos:line="1296" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="1296" pos:column="58"/></control> <block pos:line="1296" pos:column="59">{
		<if pos:line="1297" pos:column="17">if <condition pos:line="1297" pos:column="20">(<expr><call><name pos:line="1297" pos:column="21">strcmp<pos:position pos:line="1297" pos:column="27"/></name><argument_list pos:line="1297" pos:column="27">(<argument><expr><name><name pos:line="1297" pos:column="28">extra<pos:position pos:line="1297" pos:column="33"/></name><operator pos:line="1297" pos:column="33">-&gt;<pos:position pos:line="1297" pos:column="38"/></operator><name pos:line="1297" pos:column="35">key<pos:position pos:line="1297" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1297" pos:column="40">"mergetag"<pos:position pos:line="1297" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="1297" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="1297" pos:column="52"/></condition><then pos:line="1297" pos:column="52">
			<block type="pseudo"><continue pos:line="1298" pos:column="25">continue;<pos:position pos:line="1298" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="1298" pos:column="35">/* not a merge tag */</comment>
		<expr_stmt><expr><call><name pos:line="1299" pos:column="17">fn<pos:position pos:line="1299" pos:column="19"/></name><argument_list pos:line="1299" pos:column="19">(<argument><expr><name pos:line="1299" pos:column="20">commit<pos:position pos:line="1299" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1299" pos:column="28">extra<pos:position pos:line="1299" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1299" pos:column="35">data<pos:position pos:line="1299" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1299" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1299" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="1300" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="1301" pos:column="9">free_commit_extra_headers<pos:position pos:line="1301" pos:column="34"/></name><argument_list pos:line="1301" pos:column="34">(<argument><expr><name pos:line="1301" pos:column="35">to_free<pos:position pos:line="1301" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1301" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1301" pos:column="44"/></expr_stmt>
}<pos:position pos:line="1302" pos:column="2"/></block></function>

<function><specifier pos:line="1304" pos:column="1">static<pos:position pos:line="1304" pos:column="7"/></specifier> <specifier pos:line="1304" pos:column="8">inline<pos:position pos:line="1304" pos:column="14"/></specifier> <type><name pos:line="1304" pos:column="15">int<pos:position pos:line="1304" pos:column="18"/></name></type> <name pos:line="1304" pos:column="19">standard_header_field<pos:position pos:line="1304" pos:column="40"/></name><parameter_list pos:line="1304" pos:column="40">(<parameter><decl><type><specifier pos:line="1304" pos:column="41">const<pos:position pos:line="1304" pos:column="46"/></specifier> <name pos:line="1304" pos:column="47">char<pos:position pos:line="1304" pos:column="51"/></name> <modifier pos:line="1304" pos:column="52">*<pos:position pos:line="1304" pos:column="53"/></modifier></type><name pos:line="1304" pos:column="53">field<pos:position pos:line="1304" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1304" pos:column="60">size_t<pos:position pos:line="1304" pos:column="66"/></name></type> <name pos:line="1304" pos:column="67">len<pos:position pos:line="1304" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1304" pos:column="71"/></parameter_list>
<block pos:line="1305" pos:column="1">{
	<return pos:line="1306" pos:column="9">return <expr><operator pos:line="1306" pos:column="16">(<pos:position pos:line="1306" pos:column="17"/></operator><operator pos:line="1306" pos:column="17">(<pos:position pos:line="1306" pos:column="18"/></operator><name pos:line="1306" pos:column="18">len<pos:position pos:line="1306" pos:column="21"/></name> <operator pos:line="1306" pos:column="22">==<pos:position pos:line="1306" pos:column="24"/></operator> <literal type="number" pos:line="1306" pos:column="25">4<pos:position pos:line="1306" pos:column="26"/></literal> <operator pos:line="1306" pos:column="27">&amp;&amp;<pos:position pos:line="1306" pos:column="37"/></operator> <operator pos:line="1306" pos:column="30">!<pos:position pos:line="1306" pos:column="31"/></operator><call><name pos:line="1306" pos:column="31">memcmp<pos:position pos:line="1306" pos:column="37"/></name><argument_list pos:line="1306" pos:column="37">(<argument><expr><name pos:line="1306" pos:column="38">field<pos:position pos:line="1306" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1306" pos:column="45">"tree "<pos:position pos:line="1306" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1306" pos:column="54">5<pos:position pos:line="1306" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="1306" pos:column="56"/></argument_list></call><operator pos:line="1306" pos:column="56">)<pos:position pos:line="1306" pos:column="57"/></operator> <operator pos:line="1306" pos:column="58">||<pos:position pos:line="1306" pos:column="60"/></operator>
		<operator pos:line="1307" pos:column="17">(<pos:position pos:line="1307" pos:column="18"/></operator><name pos:line="1307" pos:column="18">len<pos:position pos:line="1307" pos:column="21"/></name> <operator pos:line="1307" pos:column="22">==<pos:position pos:line="1307" pos:column="24"/></operator> <literal type="number" pos:line="1307" pos:column="25">6<pos:position pos:line="1307" pos:column="26"/></literal> <operator pos:line="1307" pos:column="27">&amp;&amp;<pos:position pos:line="1307" pos:column="37"/></operator> <operator pos:line="1307" pos:column="30">!<pos:position pos:line="1307" pos:column="31"/></operator><call><name pos:line="1307" pos:column="31">memcmp<pos:position pos:line="1307" pos:column="37"/></name><argument_list pos:line="1307" pos:column="37">(<argument><expr><name pos:line="1307" pos:column="38">field<pos:position pos:line="1307" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1307" pos:column="45">"parent "<pos:position pos:line="1307" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1307" pos:column="56">7<pos:position pos:line="1307" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="1307" pos:column="58"/></argument_list></call><operator pos:line="1307" pos:column="58">)<pos:position pos:line="1307" pos:column="59"/></operator> <operator pos:line="1307" pos:column="60">||<pos:position pos:line="1307" pos:column="62"/></operator>
		<operator pos:line="1308" pos:column="17">(<pos:position pos:line="1308" pos:column="18"/></operator><name pos:line="1308" pos:column="18">len<pos:position pos:line="1308" pos:column="21"/></name> <operator pos:line="1308" pos:column="22">==<pos:position pos:line="1308" pos:column="24"/></operator> <literal type="number" pos:line="1308" pos:column="25">6<pos:position pos:line="1308" pos:column="26"/></literal> <operator pos:line="1308" pos:column="27">&amp;&amp;<pos:position pos:line="1308" pos:column="37"/></operator> <operator pos:line="1308" pos:column="30">!<pos:position pos:line="1308" pos:column="31"/></operator><call><name pos:line="1308" pos:column="31">memcmp<pos:position pos:line="1308" pos:column="37"/></name><argument_list pos:line="1308" pos:column="37">(<argument><expr><name pos:line="1308" pos:column="38">field<pos:position pos:line="1308" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1308" pos:column="45">"author "<pos:position pos:line="1308" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1308" pos:column="56">7<pos:position pos:line="1308" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="1308" pos:column="58"/></argument_list></call><operator pos:line="1308" pos:column="58">)<pos:position pos:line="1308" pos:column="59"/></operator> <operator pos:line="1308" pos:column="60">||<pos:position pos:line="1308" pos:column="62"/></operator>
		<operator pos:line="1309" pos:column="17">(<pos:position pos:line="1309" pos:column="18"/></operator><name pos:line="1309" pos:column="18">len<pos:position pos:line="1309" pos:column="21"/></name> <operator pos:line="1309" pos:column="22">==<pos:position pos:line="1309" pos:column="24"/></operator> <literal type="number" pos:line="1309" pos:column="25">9<pos:position pos:line="1309" pos:column="26"/></literal> <operator pos:line="1309" pos:column="27">&amp;&amp;<pos:position pos:line="1309" pos:column="37"/></operator> <operator pos:line="1309" pos:column="30">!<pos:position pos:line="1309" pos:column="31"/></operator><call><name pos:line="1309" pos:column="31">memcmp<pos:position pos:line="1309" pos:column="37"/></name><argument_list pos:line="1309" pos:column="37">(<argument><expr><name pos:line="1309" pos:column="38">field<pos:position pos:line="1309" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1309" pos:column="45">"committer "<pos:position pos:line="1309" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1309" pos:column="59">10<pos:position pos:line="1309" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="1309" pos:column="62"/></argument_list></call><operator pos:line="1309" pos:column="62">)<pos:position pos:line="1309" pos:column="63"/></operator> <operator pos:line="1309" pos:column="64">||<pos:position pos:line="1309" pos:column="66"/></operator>
		<operator pos:line="1310" pos:column="17">(<pos:position pos:line="1310" pos:column="18"/></operator><name pos:line="1310" pos:column="18">len<pos:position pos:line="1310" pos:column="21"/></name> <operator pos:line="1310" pos:column="22">==<pos:position pos:line="1310" pos:column="24"/></operator> <literal type="number" pos:line="1310" pos:column="25">8<pos:position pos:line="1310" pos:column="26"/></literal> <operator pos:line="1310" pos:column="27">&amp;&amp;<pos:position pos:line="1310" pos:column="37"/></operator> <operator pos:line="1310" pos:column="30">!<pos:position pos:line="1310" pos:column="31"/></operator><call><name pos:line="1310" pos:column="31">memcmp<pos:position pos:line="1310" pos:column="37"/></name><argument_list pos:line="1310" pos:column="37">(<argument><expr><name pos:line="1310" pos:column="38">field<pos:position pos:line="1310" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1310" pos:column="45">"encoding "<pos:position pos:line="1310" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1310" pos:column="58">9<pos:position pos:line="1310" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="1310" pos:column="60"/></argument_list></call><operator pos:line="1310" pos:column="60">)<pos:position pos:line="1310" pos:column="61"/></operator><operator pos:line="1310" pos:column="61">)<pos:position pos:line="1310" pos:column="62"/></operator></expr>;<pos:position pos:line="1310" pos:column="63"/></return>
}<pos:position pos:line="1311" pos:column="2"/></block></function>

<function><specifier pos:line="1313" pos:column="1">static<pos:position pos:line="1313" pos:column="7"/></specifier> <type><name pos:line="1313" pos:column="8">int<pos:position pos:line="1313" pos:column="11"/></name></type> <name pos:line="1313" pos:column="12">excluded_header_field<pos:position pos:line="1313" pos:column="33"/></name><parameter_list pos:line="1313" pos:column="33">(<parameter><decl><type><specifier pos:line="1313" pos:column="34">const<pos:position pos:line="1313" pos:column="39"/></specifier> <name pos:line="1313" pos:column="40">char<pos:position pos:line="1313" pos:column="44"/></name> <modifier pos:line="1313" pos:column="45">*<pos:position pos:line="1313" pos:column="46"/></modifier></type><name pos:line="1313" pos:column="46">field<pos:position pos:line="1313" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1313" pos:column="53">size_t<pos:position pos:line="1313" pos:column="59"/></name></type> <name pos:line="1313" pos:column="60">len<pos:position pos:line="1313" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1313" pos:column="65">const<pos:position pos:line="1313" pos:column="70"/></specifier> <name pos:line="1313" pos:column="71">char<pos:position pos:line="1313" pos:column="75"/></name> <modifier pos:line="1313" pos:column="76">*<pos:position pos:line="1313" pos:column="77"/></modifier><modifier pos:line="1313" pos:column="77">*<pos:position pos:line="1313" pos:column="78"/></modifier></type><name pos:line="1313" pos:column="78">exclude<pos:position pos:line="1313" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1313" pos:column="86"/></parameter_list>
<block pos:line="1314" pos:column="1">{
	<if pos:line="1315" pos:column="9">if <condition pos:line="1315" pos:column="12">(<expr><operator pos:line="1315" pos:column="13">!<pos:position pos:line="1315" pos:column="14"/></operator><name pos:line="1315" pos:column="14">exclude<pos:position pos:line="1315" pos:column="21"/></name></expr>)<pos:position pos:line="1315" pos:column="22"/></condition><then pos:line="1315" pos:column="22">
		<block type="pseudo"><return pos:line="1316" pos:column="17">return <expr><literal type="number" pos:line="1316" pos:column="24">0<pos:position pos:line="1316" pos:column="25"/></literal></expr>;<pos:position pos:line="1316" pos:column="26"/></return></block></then></if>

	<while pos:line="1318" pos:column="9">while <condition pos:line="1318" pos:column="15">(<expr><operator pos:line="1318" pos:column="16">*<pos:position pos:line="1318" pos:column="17"/></operator><name pos:line="1318" pos:column="17">exclude<pos:position pos:line="1318" pos:column="24"/></name></expr>)<pos:position pos:line="1318" pos:column="25"/></condition> <block pos:line="1318" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="1319" pos:column="17">size_t<pos:position pos:line="1319" pos:column="23"/></name></type> <name pos:line="1319" pos:column="24">xlen<pos:position pos:line="1319" pos:column="28"/></name> <init pos:line="1319" pos:column="29">= <expr><call><name pos:line="1319" pos:column="31">strlen<pos:position pos:line="1319" pos:column="37"/></name><argument_list pos:line="1319" pos:column="37">(<argument><expr><operator pos:line="1319" pos:column="38">*<pos:position pos:line="1319" pos:column="39"/></operator><name pos:line="1319" pos:column="39">exclude<pos:position pos:line="1319" pos:column="46"/></name></expr></argument>)<pos:position pos:line="1319" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1319" pos:column="48"/></decl_stmt>
		<if pos:line="1320" pos:column="17">if <condition pos:line="1320" pos:column="20">(<expr><name pos:line="1320" pos:column="21">len<pos:position pos:line="1320" pos:column="24"/></name> <operator pos:line="1320" pos:column="25">==<pos:position pos:line="1320" pos:column="27"/></operator> <name pos:line="1320" pos:column="28">xlen<pos:position pos:line="1320" pos:column="32"/></name> <operator pos:line="1320" pos:column="33">&amp;&amp;<pos:position pos:line="1320" pos:column="43"/></operator>
		    <operator pos:line="1321" pos:column="21">!<pos:position pos:line="1321" pos:column="22"/></operator><call><name pos:line="1321" pos:column="22">memcmp<pos:position pos:line="1321" pos:column="28"/></name><argument_list pos:line="1321" pos:column="28">(<argument><expr><name pos:line="1321" pos:column="29">field<pos:position pos:line="1321" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="1321" pos:column="36">*<pos:position pos:line="1321" pos:column="37"/></operator><name pos:line="1321" pos:column="37">exclude<pos:position pos:line="1321" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1321" pos:column="46">xlen<pos:position pos:line="1321" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1321" pos:column="51"/></argument_list></call> <operator pos:line="1321" pos:column="52">&amp;&amp;<pos:position pos:line="1321" pos:column="62"/></operator> <name><name pos:line="1321" pos:column="55">field<pos:position pos:line="1321" pos:column="60"/></name><index pos:line="1321" pos:column="60">[<expr><name pos:line="1321" pos:column="61">xlen<pos:position pos:line="1321" pos:column="65"/></name></expr>]<pos:position pos:line="1321" pos:column="66"/></index></name> <operator pos:line="1321" pos:column="67">==<pos:position pos:line="1321" pos:column="69"/></operator> <literal type="char" pos:line="1321" pos:column="70">' '<pos:position pos:line="1321" pos:column="73"/></literal></expr>)<pos:position pos:line="1321" pos:column="74"/></condition><then pos:line="1321" pos:column="74">
			<block type="pseudo"><return pos:line="1322" pos:column="25">return <expr><literal type="number" pos:line="1322" pos:column="32">1<pos:position pos:line="1322" pos:column="33"/></literal></expr>;<pos:position pos:line="1322" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="1323" pos:column="17">exclude<pos:position pos:line="1323" pos:column="24"/></name><operator pos:line="1323" pos:column="24">++<pos:position pos:line="1323" pos:column="26"/></operator></expr>;<pos:position pos:line="1323" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="1324" pos:column="10"/></block></while>
	<return pos:line="1325" pos:column="9">return <expr><literal type="number" pos:line="1325" pos:column="16">0<pos:position pos:line="1325" pos:column="17"/></literal></expr>;<pos:position pos:line="1325" pos:column="18"/></return>
}<pos:position pos:line="1326" pos:column="2"/></block></function>

<function><specifier pos:line="1328" pos:column="1">static<pos:position pos:line="1328" pos:column="7"/></specifier> <type><name><name pos:line="1328" pos:column="8">struct<pos:position pos:line="1328" pos:column="14"/></name> <name pos:line="1328" pos:column="15">commit_extra_header<pos:position pos:line="1328" pos:column="34"/></name></name> <modifier pos:line="1328" pos:column="35">*<pos:position pos:line="1328" pos:column="36"/></modifier></type><name pos:line="1328" pos:column="36">read_commit_extra_header_lines<pos:position pos:line="1328" pos:column="66"/></name><parameter_list pos:line="1328" pos:column="66">(
	<parameter><decl><type><specifier pos:line="1329" pos:column="9">const<pos:position pos:line="1329" pos:column="14"/></specifier> <name pos:line="1329" pos:column="15">char<pos:position pos:line="1329" pos:column="19"/></name> <modifier pos:line="1329" pos:column="20">*<pos:position pos:line="1329" pos:column="21"/></modifier></type><name pos:line="1329" pos:column="21">buffer<pos:position pos:line="1329" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1329" pos:column="29">size_t<pos:position pos:line="1329" pos:column="35"/></name></type> <name pos:line="1329" pos:column="36">size<pos:position pos:line="1329" pos:column="40"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="1330" pos:column="9">const<pos:position pos:line="1330" pos:column="14"/></specifier> <name pos:line="1330" pos:column="15">char<pos:position pos:line="1330" pos:column="19"/></name> <modifier pos:line="1330" pos:column="20">*<pos:position pos:line="1330" pos:column="21"/></modifier><modifier pos:line="1330" pos:column="21">*<pos:position pos:line="1330" pos:column="22"/></modifier></type><name pos:line="1330" pos:column="22">exclude<pos:position pos:line="1330" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1330" pos:column="30"/></parameter_list>
<block pos:line="1331" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1332" pos:column="9">struct<pos:position pos:line="1332" pos:column="15"/></name> <name pos:line="1332" pos:column="16">commit_extra_header<pos:position pos:line="1332" pos:column="35"/></name></name> <modifier pos:line="1332" pos:column="36">*<pos:position pos:line="1332" pos:column="37"/></modifier></type><name pos:line="1332" pos:column="37">extra<pos:position pos:line="1332" pos:column="42"/></name> <init pos:line="1332" pos:column="43">= <expr><name pos:line="1332" pos:column="45">NULL<pos:position pos:line="1332" pos:column="49"/></name></expr></init></decl>, <modifier pos:line="1332" pos:column="51">*<pos:position pos:line="1332" pos:column="52"/></modifier><modifier pos:line="1332" pos:column="52">*<pos:position pos:line="1332" pos:column="53"/></modifier><decl><type ref="prev"/><name pos:line="1332" pos:column="53">tail<pos:position pos:line="1332" pos:column="57"/></name> <init pos:line="1332" pos:column="58">= <expr><operator pos:line="1332" pos:column="60">&amp;<pos:position pos:line="1332" pos:column="65"/></operator><name pos:line="1332" pos:column="61">extra<pos:position pos:line="1332" pos:column="66"/></name></expr></init></decl>, <modifier pos:line="1332" pos:column="68">*<pos:position pos:line="1332" pos:column="69"/></modifier><decl><type ref="prev"/><name pos:line="1332" pos:column="69">it<pos:position pos:line="1332" pos:column="71"/></name> <init pos:line="1332" pos:column="72">= <expr><name pos:line="1332" pos:column="74">NULL<pos:position pos:line="1332" pos:column="78"/></name></expr></init></decl>;<pos:position pos:line="1332" pos:column="79"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1333" pos:column="9">const<pos:position pos:line="1333" pos:column="14"/></specifier> <name pos:line="1333" pos:column="15">char<pos:position pos:line="1333" pos:column="19"/></name> <modifier pos:line="1333" pos:column="20">*<pos:position pos:line="1333" pos:column="21"/></modifier></type><name pos:line="1333" pos:column="21">line<pos:position pos:line="1333" pos:column="25"/></name></decl>, <modifier pos:line="1333" pos:column="27">*<pos:position pos:line="1333" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="1333" pos:column="28">next<pos:position pos:line="1333" pos:column="32"/></name></decl>, <modifier pos:line="1333" pos:column="34">*<pos:position pos:line="1333" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="1333" pos:column="35">eof<pos:position pos:line="1333" pos:column="38"/></name></decl>, <modifier pos:line="1333" pos:column="40">*<pos:position pos:line="1333" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="1333" pos:column="41">eob<pos:position pos:line="1333" pos:column="44"/></name></decl>;<pos:position pos:line="1333" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1334" pos:column="9">struct<pos:position pos:line="1334" pos:column="15"/></name> <name pos:line="1334" pos:column="16">strbuf<pos:position pos:line="1334" pos:column="22"/></name></name></type> <name pos:line="1334" pos:column="23">buf<pos:position pos:line="1334" pos:column="26"/></name> <init pos:line="1334" pos:column="27">= <expr><name pos:line="1334" pos:column="29">STRBUF_INIT<pos:position pos:line="1334" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="1334" pos:column="41"/></decl_stmt>

	<for pos:line="1336" pos:column="9">for <control pos:line="1336" pos:column="13">(<init><expr><name pos:line="1336" pos:column="14">line<pos:position pos:line="1336" pos:column="18"/></name> <operator pos:line="1336" pos:column="19">=<pos:position pos:line="1336" pos:column="20"/></operator> <name pos:line="1336" pos:column="21">buffer<pos:position pos:line="1336" pos:column="27"/></name></expr><operator pos:line="1336" pos:column="27">,<pos:position pos:line="1336" pos:column="28"/></operator> <expr><name pos:line="1336" pos:column="29">eob<pos:position pos:line="1336" pos:column="32"/></name> <operator pos:line="1336" pos:column="33">=<pos:position pos:line="1336" pos:column="34"/></operator> <name pos:line="1336" pos:column="35">line<pos:position pos:line="1336" pos:column="39"/></name> <operator pos:line="1336" pos:column="40">+<pos:position pos:line="1336" pos:column="41"/></operator> <name pos:line="1336" pos:column="42">size<pos:position pos:line="1336" pos:column="46"/></name></expr>;<pos:position pos:line="1336" pos:column="47"/></init>
	     <condition><expr><name pos:line="1337" pos:column="14">line<pos:position pos:line="1337" pos:column="18"/></name> <operator pos:line="1337" pos:column="19">&lt;<pos:position pos:line="1337" pos:column="23"/></operator> <name pos:line="1337" pos:column="21">eob<pos:position pos:line="1337" pos:column="24"/></name> <operator pos:line="1337" pos:column="25">&amp;&amp;<pos:position pos:line="1337" pos:column="35"/></operator> <operator pos:line="1337" pos:column="28">*<pos:position pos:line="1337" pos:column="29"/></operator><name pos:line="1337" pos:column="29">line<pos:position pos:line="1337" pos:column="33"/></name> <operator pos:line="1337" pos:column="34">!=<pos:position pos:line="1337" pos:column="36"/></operator> <literal type="char" pos:line="1337" pos:column="37">'\n'<pos:position pos:line="1337" pos:column="41"/></literal></expr>;<pos:position pos:line="1337" pos:column="42"/></condition>
	     <incr><expr><name pos:line="1338" pos:column="14">line<pos:position pos:line="1338" pos:column="18"/></name> <operator pos:line="1338" pos:column="19">=<pos:position pos:line="1338" pos:column="20"/></operator> <name pos:line="1338" pos:column="21">next<pos:position pos:line="1338" pos:column="25"/></name></expr></incr>)<pos:position pos:line="1338" pos:column="26"/></control> <block pos:line="1338" pos:column="27">{
		<expr_stmt><expr><name pos:line="1339" pos:column="17">next<pos:position pos:line="1339" pos:column="21"/></name> <operator pos:line="1339" pos:column="22">=<pos:position pos:line="1339" pos:column="23"/></operator> <call><name pos:line="1339" pos:column="24">memchr<pos:position pos:line="1339" pos:column="30"/></name><argument_list pos:line="1339" pos:column="30">(<argument><expr><name pos:line="1339" pos:column="31">line<pos:position pos:line="1339" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1339" pos:column="37">'\n'<pos:position pos:line="1339" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="1339" pos:column="43">eob<pos:position pos:line="1339" pos:column="46"/></name> <operator pos:line="1339" pos:column="47">-<pos:position pos:line="1339" pos:column="48"/></operator> <name pos:line="1339" pos:column="49">line<pos:position pos:line="1339" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1339" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1339" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1340" pos:column="17">next<pos:position pos:line="1340" pos:column="21"/></name> <operator pos:line="1340" pos:column="22">=<pos:position pos:line="1340" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="1340" pos:column="24">next<pos:position pos:line="1340" pos:column="28"/></name></expr> ?<pos:position pos:line="1340" pos:column="30"/></condition><then pos:line="1340" pos:column="30"> <expr><name pos:line="1340" pos:column="31">next<pos:position pos:line="1340" pos:column="35"/></name> <operator pos:line="1340" pos:column="36">+<pos:position pos:line="1340" pos:column="37"/></operator> <literal type="number" pos:line="1340" pos:column="38">1<pos:position pos:line="1340" pos:column="39"/></literal></expr> <pos:position pos:line="1340" pos:column="40"/></then><else pos:line="1340" pos:column="40">: <expr><name pos:line="1340" pos:column="42">eob<pos:position pos:line="1340" pos:column="45"/></name></expr></else></ternary></expr>;<pos:position pos:line="1340" pos:column="46"/></expr_stmt>
		<if pos:line="1341" pos:column="17">if <condition pos:line="1341" pos:column="20">(<expr><operator pos:line="1341" pos:column="21">*<pos:position pos:line="1341" pos:column="22"/></operator><name pos:line="1341" pos:column="22">line<pos:position pos:line="1341" pos:column="26"/></name> <operator pos:line="1341" pos:column="27">==<pos:position pos:line="1341" pos:column="29"/></operator> <literal type="char" pos:line="1341" pos:column="30">' '<pos:position pos:line="1341" pos:column="33"/></literal></expr>)<pos:position pos:line="1341" pos:column="34"/></condition><then pos:line="1341" pos:column="34"> <block pos:line="1341" pos:column="35">{
			<comment type="block" pos:line="1342" pos:column="25">/* continuation */</comment>
			<if pos:line="1343" pos:column="25">if <condition pos:line="1343" pos:column="28">(<expr><name pos:line="1343" pos:column="29">it<pos:position pos:line="1343" pos:column="31"/></name></expr>)<pos:position pos:line="1343" pos:column="32"/></condition><then pos:line="1343" pos:column="32">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="1344" pos:column="33">strbuf_add<pos:position pos:line="1344" pos:column="43"/></name><argument_list pos:line="1344" pos:column="43">(<argument><expr><operator pos:line="1344" pos:column="44">&amp;<pos:position pos:line="1344" pos:column="49"/></operator><name pos:line="1344" pos:column="45">buf<pos:position pos:line="1344" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1344" pos:column="50">line<pos:position pos:line="1344" pos:column="54"/></name> <operator pos:line="1344" pos:column="55">+<pos:position pos:line="1344" pos:column="56"/></operator> <literal type="number" pos:line="1344" pos:column="57">1<pos:position pos:line="1344" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="1344" pos:column="60">next<pos:position pos:line="1344" pos:column="64"/></name> <operator pos:line="1344" pos:column="65">-<pos:position pos:line="1344" pos:column="66"/></operator> <operator pos:line="1344" pos:column="67">(<pos:position pos:line="1344" pos:column="68"/></operator><name pos:line="1344" pos:column="68">line<pos:position pos:line="1344" pos:column="72"/></name> <operator pos:line="1344" pos:column="73">+<pos:position pos:line="1344" pos:column="74"/></operator> <literal type="number" pos:line="1344" pos:column="75">1<pos:position pos:line="1344" pos:column="76"/></literal><operator pos:line="1344" pos:column="76">)<pos:position pos:line="1344" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="1344" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="1344" pos:column="79"/></expr_stmt></block></then></if>
			<continue pos:line="1345" pos:column="25">continue;<pos:position pos:line="1345" pos:column="34"/></continue>
		}<pos:position pos:line="1346" pos:column="18"/></block></then></if>
		<if pos:line="1347" pos:column="17">if <condition pos:line="1347" pos:column="20">(<expr><name pos:line="1347" pos:column="21">it<pos:position pos:line="1347" pos:column="23"/></name></expr>)<pos:position pos:line="1347" pos:column="24"/></condition><then pos:line="1347" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="1348" pos:column="25">it<pos:position pos:line="1348" pos:column="27"/></name><operator pos:line="1348" pos:column="27">-&gt;<pos:position pos:line="1348" pos:column="32"/></operator><name pos:line="1348" pos:column="29">value<pos:position pos:line="1348" pos:column="34"/></name></name> <operator pos:line="1348" pos:column="35">=<pos:position pos:line="1348" pos:column="36"/></operator> <call><name pos:line="1348" pos:column="37">strbuf_detach<pos:position pos:line="1348" pos:column="50"/></name><argument_list pos:line="1348" pos:column="50">(<argument><expr><operator pos:line="1348" pos:column="51">&amp;<pos:position pos:line="1348" pos:column="56"/></operator><name pos:line="1348" pos:column="52">buf<pos:position pos:line="1348" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="1348" pos:column="57">&amp;<pos:position pos:line="1348" pos:column="62"/></operator><name><name pos:line="1348" pos:column="58">it<pos:position pos:line="1348" pos:column="60"/></name><operator pos:line="1348" pos:column="60">-&gt;<pos:position pos:line="1348" pos:column="65"/></operator><name pos:line="1348" pos:column="62">len<pos:position pos:line="1348" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="1348" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1348" pos:column="67"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="1349" pos:column="17">strbuf_reset<pos:position pos:line="1349" pos:column="29"/></name><argument_list pos:line="1349" pos:column="29">(<argument><expr><operator pos:line="1349" pos:column="30">&amp;<pos:position pos:line="1349" pos:column="35"/></operator><name pos:line="1349" pos:column="31">buf<pos:position pos:line="1349" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1349" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1349" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1350" pos:column="17">it<pos:position pos:line="1350" pos:column="19"/></name> <operator pos:line="1350" pos:column="20">=<pos:position pos:line="1350" pos:column="21"/></operator> <name pos:line="1350" pos:column="22">NULL<pos:position pos:line="1350" pos:column="26"/></name></expr>;<pos:position pos:line="1350" pos:column="27"/></expr_stmt>

		<expr_stmt><expr><name pos:line="1352" pos:column="17">eof<pos:position pos:line="1352" pos:column="20"/></name> <operator pos:line="1352" pos:column="21">=<pos:position pos:line="1352" pos:column="22"/></operator> <call><name pos:line="1352" pos:column="23">strchr<pos:position pos:line="1352" pos:column="29"/></name><argument_list pos:line="1352" pos:column="29">(<argument><expr><name pos:line="1352" pos:column="30">line<pos:position pos:line="1352" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1352" pos:column="36">' '<pos:position pos:line="1352" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="1352" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1352" pos:column="41"/></expr_stmt>
		<if pos:line="1353" pos:column="17">if <condition pos:line="1353" pos:column="20">(<expr><name pos:line="1353" pos:column="21">next<pos:position pos:line="1353" pos:column="25"/></name> <operator pos:line="1353" pos:column="26">&lt;=<pos:position pos:line="1353" pos:column="31"/></operator> <name pos:line="1353" pos:column="29">eof<pos:position pos:line="1353" pos:column="32"/></name></expr>)<pos:position pos:line="1353" pos:column="33"/></condition><then pos:line="1353" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="1354" pos:column="25">eof<pos:position pos:line="1354" pos:column="28"/></name> <operator pos:line="1354" pos:column="29">=<pos:position pos:line="1354" pos:column="30"/></operator> <name pos:line="1354" pos:column="31">next<pos:position pos:line="1354" pos:column="35"/></name></expr>;<pos:position pos:line="1354" pos:column="36"/></expr_stmt></block></then></if>

		<if pos:line="1356" pos:column="17">if <condition pos:line="1356" pos:column="20">(<expr><call><name pos:line="1356" pos:column="21">standard_header_field<pos:position pos:line="1356" pos:column="42"/></name><argument_list pos:line="1356" pos:column="42">(<argument><expr><name pos:line="1356" pos:column="43">line<pos:position pos:line="1356" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1356" pos:column="49">eof<pos:position pos:line="1356" pos:column="52"/></name> <operator pos:line="1356" pos:column="53">-<pos:position pos:line="1356" pos:column="54"/></operator> <name pos:line="1356" pos:column="55">line<pos:position pos:line="1356" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1356" pos:column="60"/></argument_list></call> <operator pos:line="1356" pos:column="61">||<pos:position pos:line="1356" pos:column="63"/></operator>
		    <call><name pos:line="1357" pos:column="21">excluded_header_field<pos:position pos:line="1357" pos:column="42"/></name><argument_list pos:line="1357" pos:column="42">(<argument><expr><name pos:line="1357" pos:column="43">line<pos:position pos:line="1357" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1357" pos:column="49">eof<pos:position pos:line="1357" pos:column="52"/></name> <operator pos:line="1357" pos:column="53">-<pos:position pos:line="1357" pos:column="54"/></operator> <name pos:line="1357" pos:column="55">line<pos:position pos:line="1357" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="1357" pos:column="61">exclude<pos:position pos:line="1357" pos:column="68"/></name></expr></argument>)<pos:position pos:line="1357" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="1357" pos:column="70"/></condition><then pos:line="1357" pos:column="70">
			<block type="pseudo"><continue pos:line="1358" pos:column="25">continue;<pos:position pos:line="1358" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="1360" pos:column="17">it<pos:position pos:line="1360" pos:column="19"/></name> <operator pos:line="1360" pos:column="20">=<pos:position pos:line="1360" pos:column="21"/></operator> <call><name pos:line="1360" pos:column="22">xcalloc<pos:position pos:line="1360" pos:column="29"/></name><argument_list pos:line="1360" pos:column="29">(<argument><expr><literal type="number" pos:line="1360" pos:column="30">1<pos:position pos:line="1360" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="1360" pos:column="33">sizeof<argument_list pos:line="1360" pos:column="39">(<argument><expr><operator pos:line="1360" pos:column="40">*<pos:position pos:line="1360" pos:column="41"/></operator><name pos:line="1360" pos:column="41">it<pos:position pos:line="1360" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1360" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1360" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1360" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="1361" pos:column="17">it<pos:position pos:line="1361" pos:column="19"/></name><operator pos:line="1361" pos:column="19">-&gt;<pos:position pos:line="1361" pos:column="24"/></operator><name pos:line="1361" pos:column="21">key<pos:position pos:line="1361" pos:column="24"/></name></name> <operator pos:line="1361" pos:column="25">=<pos:position pos:line="1361" pos:column="26"/></operator> <call><name pos:line="1361" pos:column="27">xmemdupz<pos:position pos:line="1361" pos:column="35"/></name><argument_list pos:line="1361" pos:column="35">(<argument><expr><name pos:line="1361" pos:column="36">line<pos:position pos:line="1361" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1361" pos:column="42">eof<pos:position pos:line="1361" pos:column="45"/></name><operator pos:line="1361" pos:column="45">-<pos:position pos:line="1361" pos:column="46"/></operator><name pos:line="1361" pos:column="46">line<pos:position pos:line="1361" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1361" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1361" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="1362" pos:column="17">*<pos:position pos:line="1362" pos:column="18"/></operator><name pos:line="1362" pos:column="18">tail<pos:position pos:line="1362" pos:column="22"/></name> <operator pos:line="1362" pos:column="23">=<pos:position pos:line="1362" pos:column="24"/></operator> <name pos:line="1362" pos:column="25">it<pos:position pos:line="1362" pos:column="27"/></name></expr>;<pos:position pos:line="1362" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1363" pos:column="17">tail<pos:position pos:line="1363" pos:column="21"/></name> <operator pos:line="1363" pos:column="22">=<pos:position pos:line="1363" pos:column="23"/></operator> <operator pos:line="1363" pos:column="24">&amp;<pos:position pos:line="1363" pos:column="29"/></operator><name><name pos:line="1363" pos:column="25">it<pos:position pos:line="1363" pos:column="27"/></name><operator pos:line="1363" pos:column="27">-&gt;<pos:position pos:line="1363" pos:column="32"/></operator><name pos:line="1363" pos:column="29">next<pos:position pos:line="1363" pos:column="33"/></name></name></expr>;<pos:position pos:line="1363" pos:column="34"/></expr_stmt>
		<if pos:line="1364" pos:column="17">if <condition pos:line="1364" pos:column="20">(<expr><name pos:line="1364" pos:column="21">eof<pos:position pos:line="1364" pos:column="24"/></name> <operator pos:line="1364" pos:column="25">+<pos:position pos:line="1364" pos:column="26"/></operator> <literal type="number" pos:line="1364" pos:column="27">1<pos:position pos:line="1364" pos:column="28"/></literal> <operator pos:line="1364" pos:column="29">&lt;<pos:position pos:line="1364" pos:column="33"/></operator> <name pos:line="1364" pos:column="31">next<pos:position pos:line="1364" pos:column="35"/></name></expr>)<pos:position pos:line="1364" pos:column="36"/></condition><then pos:line="1364" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="1365" pos:column="25">strbuf_add<pos:position pos:line="1365" pos:column="35"/></name><argument_list pos:line="1365" pos:column="35">(<argument><expr><operator pos:line="1365" pos:column="36">&amp;<pos:position pos:line="1365" pos:column="41"/></operator><name pos:line="1365" pos:column="37">buf<pos:position pos:line="1365" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1365" pos:column="42">eof<pos:position pos:line="1365" pos:column="45"/></name> <operator pos:line="1365" pos:column="46">+<pos:position pos:line="1365" pos:column="47"/></operator> <literal type="number" pos:line="1365" pos:column="48">1<pos:position pos:line="1365" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="1365" pos:column="51">next<pos:position pos:line="1365" pos:column="55"/></name> <operator pos:line="1365" pos:column="56">-<pos:position pos:line="1365" pos:column="57"/></operator> <operator pos:line="1365" pos:column="58">(<pos:position pos:line="1365" pos:column="59"/></operator><name pos:line="1365" pos:column="59">eof<pos:position pos:line="1365" pos:column="62"/></name> <operator pos:line="1365" pos:column="63">+<pos:position pos:line="1365" pos:column="64"/></operator> <literal type="number" pos:line="1365" pos:column="65">1<pos:position pos:line="1365" pos:column="66"/></literal><operator pos:line="1365" pos:column="66">)<pos:position pos:line="1365" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="1365" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1365" pos:column="69"/></expr_stmt></block></then></if>
	}<pos:position pos:line="1366" pos:column="10"/></block></for>
	<if pos:line="1367" pos:column="9">if <condition pos:line="1367" pos:column="12">(<expr><name pos:line="1367" pos:column="13">it<pos:position pos:line="1367" pos:column="15"/></name></expr>)<pos:position pos:line="1367" pos:column="16"/></condition><then pos:line="1367" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="1368" pos:column="17">it<pos:position pos:line="1368" pos:column="19"/></name><operator pos:line="1368" pos:column="19">-&gt;<pos:position pos:line="1368" pos:column="24"/></operator><name pos:line="1368" pos:column="21">value<pos:position pos:line="1368" pos:column="26"/></name></name> <operator pos:line="1368" pos:column="27">=<pos:position pos:line="1368" pos:column="28"/></operator> <call><name pos:line="1368" pos:column="29">strbuf_detach<pos:position pos:line="1368" pos:column="42"/></name><argument_list pos:line="1368" pos:column="42">(<argument><expr><operator pos:line="1368" pos:column="43">&amp;<pos:position pos:line="1368" pos:column="48"/></operator><name pos:line="1368" pos:column="44">buf<pos:position pos:line="1368" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="1368" pos:column="49">&amp;<pos:position pos:line="1368" pos:column="54"/></operator><name><name pos:line="1368" pos:column="50">it<pos:position pos:line="1368" pos:column="52"/></name><operator pos:line="1368" pos:column="52">-&gt;<pos:position pos:line="1368" pos:column="57"/></operator><name pos:line="1368" pos:column="54">len<pos:position pos:line="1368" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="1368" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1368" pos:column="59"/></expr_stmt></block></then></if>
	<return pos:line="1369" pos:column="9">return <expr><name pos:line="1369" pos:column="16">extra<pos:position pos:line="1369" pos:column="21"/></name></expr>;<pos:position pos:line="1369" pos:column="22"/></return>
}<pos:position pos:line="1370" pos:column="2"/></block></function>

<function><type><name pos:line="1372" pos:column="1">void<pos:position pos:line="1372" pos:column="5"/></name></type> <name pos:line="1372" pos:column="6">free_commit_extra_headers<pos:position pos:line="1372" pos:column="31"/></name><parameter_list pos:line="1372" pos:column="31">(<parameter><decl><type><name><name pos:line="1372" pos:column="32">struct<pos:position pos:line="1372" pos:column="38"/></name> <name pos:line="1372" pos:column="39">commit_extra_header<pos:position pos:line="1372" pos:column="58"/></name></name> <modifier pos:line="1372" pos:column="59">*<pos:position pos:line="1372" pos:column="60"/></modifier></type><name pos:line="1372" pos:column="60">extra<pos:position pos:line="1372" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1372" pos:column="66"/></parameter_list>
<block pos:line="1373" pos:column="1">{
	<while pos:line="1374" pos:column="9">while <condition pos:line="1374" pos:column="15">(<expr><name pos:line="1374" pos:column="16">extra<pos:position pos:line="1374" pos:column="21"/></name></expr>)<pos:position pos:line="1374" pos:column="22"/></condition> <block pos:line="1374" pos:column="23">{
		<decl_stmt><decl><type><name><name pos:line="1375" pos:column="17">struct<pos:position pos:line="1375" pos:column="23"/></name> <name pos:line="1375" pos:column="24">commit_extra_header<pos:position pos:line="1375" pos:column="43"/></name></name> <modifier pos:line="1375" pos:column="44">*<pos:position pos:line="1375" pos:column="45"/></modifier></type><name pos:line="1375" pos:column="45">next<pos:position pos:line="1375" pos:column="49"/></name> <init pos:line="1375" pos:column="50">= <expr><name><name pos:line="1375" pos:column="52">extra<pos:position pos:line="1375" pos:column="57"/></name><operator pos:line="1375" pos:column="57">-&gt;<pos:position pos:line="1375" pos:column="62"/></operator><name pos:line="1375" pos:column="59">next<pos:position pos:line="1375" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="1375" pos:column="64"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="1376" pos:column="17">free<pos:position pos:line="1376" pos:column="21"/></name><argument_list pos:line="1376" pos:column="21">(<argument><expr><name><name pos:line="1376" pos:column="22">extra<pos:position pos:line="1376" pos:column="27"/></name><operator pos:line="1376" pos:column="27">-&gt;<pos:position pos:line="1376" pos:column="32"/></operator><name pos:line="1376" pos:column="29">key<pos:position pos:line="1376" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="1376" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1376" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="1377" pos:column="17">free<pos:position pos:line="1377" pos:column="21"/></name><argument_list pos:line="1377" pos:column="21">(<argument><expr><name><name pos:line="1377" pos:column="22">extra<pos:position pos:line="1377" pos:column="27"/></name><operator pos:line="1377" pos:column="27">-&gt;<pos:position pos:line="1377" pos:column="32"/></operator><name pos:line="1377" pos:column="29">value<pos:position pos:line="1377" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="1377" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1377" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="1378" pos:column="17">free<pos:position pos:line="1378" pos:column="21"/></name><argument_list pos:line="1378" pos:column="21">(<argument><expr><name pos:line="1378" pos:column="22">extra<pos:position pos:line="1378" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1378" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1378" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1379" pos:column="17">extra<pos:position pos:line="1379" pos:column="22"/></name> <operator pos:line="1379" pos:column="23">=<pos:position pos:line="1379" pos:column="24"/></operator> <name pos:line="1379" pos:column="25">next<pos:position pos:line="1379" pos:column="29"/></name></expr>;<pos:position pos:line="1379" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="1380" pos:column="10"/></block></while>
}<pos:position pos:line="1381" pos:column="2"/></block></function>

<function><type><name pos:line="1383" pos:column="1">int<pos:position pos:line="1383" pos:column="4"/></name></type> <name pos:line="1383" pos:column="5">commit_tree<pos:position pos:line="1383" pos:column="16"/></name><parameter_list pos:line="1383" pos:column="16">(<parameter><decl><type><specifier pos:line="1383" pos:column="17">const<pos:position pos:line="1383" pos:column="22"/></specifier> <name pos:line="1383" pos:column="23">char<pos:position pos:line="1383" pos:column="27"/></name> <modifier pos:line="1383" pos:column="28">*<pos:position pos:line="1383" pos:column="29"/></modifier></type><name pos:line="1383" pos:column="29">msg<pos:position pos:line="1383" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1383" pos:column="34">size_t<pos:position pos:line="1383" pos:column="40"/></name></type> <name pos:line="1383" pos:column="41">msg_len<pos:position pos:line="1383" pos:column="48"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="1384" pos:column="17">const<pos:position pos:line="1384" pos:column="22"/></specifier> <name pos:line="1384" pos:column="23">unsigned<pos:position pos:line="1384" pos:column="31"/></name> <name pos:line="1384" pos:column="32">char<pos:position pos:line="1384" pos:column="36"/></name> <modifier pos:line="1384" pos:column="37">*<pos:position pos:line="1384" pos:column="38"/></modifier></type><name pos:line="1384" pos:column="38">tree<pos:position pos:line="1384" pos:column="42"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="1385" pos:column="17">struct<pos:position pos:line="1385" pos:column="23"/></name> <name pos:line="1385" pos:column="24">commit_list<pos:position pos:line="1385" pos:column="35"/></name></name> <modifier pos:line="1385" pos:column="36">*<pos:position pos:line="1385" pos:column="37"/></modifier></type><name pos:line="1385" pos:column="37">parents<pos:position pos:line="1385" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1385" pos:column="46">unsigned<pos:position pos:line="1385" pos:column="54"/></name> <name pos:line="1385" pos:column="55">char<pos:position pos:line="1385" pos:column="59"/></name> <modifier pos:line="1385" pos:column="60">*<pos:position pos:line="1385" pos:column="61"/></modifier></type><name pos:line="1385" pos:column="61">ret<pos:position pos:line="1385" pos:column="64"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="1386" pos:column="17">const<pos:position pos:line="1386" pos:column="22"/></specifier> <name pos:line="1386" pos:column="23">char<pos:position pos:line="1386" pos:column="27"/></name> <modifier pos:line="1386" pos:column="28">*<pos:position pos:line="1386" pos:column="29"/></modifier></type><name pos:line="1386" pos:column="29">author<pos:position pos:line="1386" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1386" pos:column="37">const<pos:position pos:line="1386" pos:column="42"/></specifier> <name pos:line="1386" pos:column="43">char<pos:position pos:line="1386" pos:column="47"/></name> <modifier pos:line="1386" pos:column="48">*<pos:position pos:line="1386" pos:column="49"/></modifier></type><name pos:line="1386" pos:column="49">sign_commit<pos:position pos:line="1386" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1386" pos:column="61"/></parameter_list>
<block pos:line="1387" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1388" pos:column="9">struct<pos:position pos:line="1388" pos:column="15"/></name> <name pos:line="1388" pos:column="16">commit_extra_header<pos:position pos:line="1388" pos:column="35"/></name></name> <modifier pos:line="1388" pos:column="36">*<pos:position pos:line="1388" pos:column="37"/></modifier></type><name pos:line="1388" pos:column="37">extra<pos:position pos:line="1388" pos:column="42"/></name> <init pos:line="1388" pos:column="43">= <expr><name pos:line="1388" pos:column="45">NULL<pos:position pos:line="1388" pos:column="49"/></name></expr></init></decl>, <modifier pos:line="1388" pos:column="51">*<pos:position pos:line="1388" pos:column="52"/></modifier><modifier pos:line="1388" pos:column="52">*<pos:position pos:line="1388" pos:column="53"/></modifier><decl><type ref="prev"/><name pos:line="1388" pos:column="53">tail<pos:position pos:line="1388" pos:column="57"/></name> <init pos:line="1388" pos:column="58">= <expr><operator pos:line="1388" pos:column="60">&amp;<pos:position pos:line="1388" pos:column="65"/></operator><name pos:line="1388" pos:column="61">extra<pos:position pos:line="1388" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="1388" pos:column="67"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1389" pos:column="9">int<pos:position pos:line="1389" pos:column="12"/></name></type> <name pos:line="1389" pos:column="13">result<pos:position pos:line="1389" pos:column="19"/></name></decl>;<pos:position pos:line="1389" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="1391" pos:column="9">append_merge_tag_headers<pos:position pos:line="1391" pos:column="33"/></name><argument_list pos:line="1391" pos:column="33">(<argument><expr><name pos:line="1391" pos:column="34">parents<pos:position pos:line="1391" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="1391" pos:column="43">&amp;<pos:position pos:line="1391" pos:column="48"/></operator><name pos:line="1391" pos:column="44">tail<pos:position pos:line="1391" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1391" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1391" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name pos:line="1392" pos:column="9">result<pos:position pos:line="1392" pos:column="15"/></name> <operator pos:line="1392" pos:column="16">=<pos:position pos:line="1392" pos:column="17"/></operator> <call><name pos:line="1392" pos:column="18">commit_tree_extended<pos:position pos:line="1392" pos:column="38"/></name><argument_list pos:line="1392" pos:column="38">(<argument><expr><name pos:line="1392" pos:column="39">msg<pos:position pos:line="1392" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1392" pos:column="44">msg_len<pos:position pos:line="1392" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1392" pos:column="53">tree<pos:position pos:line="1392" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1392" pos:column="59">parents<pos:position pos:line="1392" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="1392" pos:column="68">ret<pos:position pos:line="1392" pos:column="71"/></name></expr></argument>,
				      <argument><expr><name pos:line="1393" pos:column="39">author<pos:position pos:line="1393" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1393" pos:column="47">sign_commit<pos:position pos:line="1393" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="1393" pos:column="60">extra<pos:position pos:line="1393" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1393" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1393" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1394" pos:column="9">free_commit_extra_headers<pos:position pos:line="1394" pos:column="34"/></name><argument_list pos:line="1394" pos:column="34">(<argument><expr><name pos:line="1394" pos:column="35">extra<pos:position pos:line="1394" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1394" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1394" pos:column="42"/></expr_stmt>
	<return pos:line="1395" pos:column="9">return <expr><name pos:line="1395" pos:column="16">result<pos:position pos:line="1395" pos:column="22"/></name></expr>;<pos:position pos:line="1395" pos:column="23"/></return>
}<pos:position pos:line="1396" pos:column="2"/></block></function>

<function><specifier pos:line="1398" pos:column="1">static<pos:position pos:line="1398" pos:column="7"/></specifier> <type><name pos:line="1398" pos:column="8">int<pos:position pos:line="1398" pos:column="11"/></name></type> <name pos:line="1398" pos:column="12">find_invalid_utf8<pos:position pos:line="1398" pos:column="29"/></name><parameter_list pos:line="1398" pos:column="29">(<parameter><decl><type><specifier pos:line="1398" pos:column="30">const<pos:position pos:line="1398" pos:column="35"/></specifier> <name pos:line="1398" pos:column="36">char<pos:position pos:line="1398" pos:column="40"/></name> <modifier pos:line="1398" pos:column="41">*<pos:position pos:line="1398" pos:column="42"/></modifier></type><name pos:line="1398" pos:column="42">buf<pos:position pos:line="1398" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1398" pos:column="47">int<pos:position pos:line="1398" pos:column="50"/></name></type> <name pos:line="1398" pos:column="51">len<pos:position pos:line="1398" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1398" pos:column="55"/></parameter_list>
<block pos:line="1399" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1400" pos:column="9">int<pos:position pos:line="1400" pos:column="12"/></name></type> <name pos:line="1400" pos:column="13">offset<pos:position pos:line="1400" pos:column="19"/></name> <init pos:line="1400" pos:column="20">= <expr><literal type="number" pos:line="1400" pos:column="22">0<pos:position pos:line="1400" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="1400" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="1401" pos:column="9">static<pos:position pos:line="1401" pos:column="15"/></specifier> <type><specifier pos:line="1401" pos:column="16">const<pos:position pos:line="1401" pos:column="21"/></specifier> <name pos:line="1401" pos:column="22">unsigned<pos:position pos:line="1401" pos:column="30"/></name> <name pos:line="1401" pos:column="31">int<pos:position pos:line="1401" pos:column="34"/></name></type> <name><name pos:line="1401" pos:column="35">max_codepoint<pos:position pos:line="1401" pos:column="48"/></name><index pos:line="1401" pos:column="48">[]<pos:position pos:line="1401" pos:column="50"/></index></name> <init pos:line="1401" pos:column="51">= <expr><block pos:line="1401" pos:column="53">{
		<expr><literal type="number" pos:line="1402" pos:column="17">0x7f<pos:position pos:line="1402" pos:column="21"/></literal></expr>, <expr><literal type="number" pos:line="1402" pos:column="23">0x7ff<pos:position pos:line="1402" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="1402" pos:column="30">0xffff<pos:position pos:line="1402" pos:column="36"/></literal></expr>, <expr><literal type="number" pos:line="1402" pos:column="38">0x10ffff<pos:position pos:line="1402" pos:column="46"/></literal></expr>
	}<pos:position pos:line="1403" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="1403" pos:column="11"/></decl_stmt>

	<while pos:line="1405" pos:column="9">while <condition pos:line="1405" pos:column="15">(<expr><name pos:line="1405" pos:column="16">len<pos:position pos:line="1405" pos:column="19"/></name></expr>)<pos:position pos:line="1405" pos:column="20"/></condition> <block pos:line="1405" pos:column="21">{
		<decl_stmt><decl><type><name pos:line="1406" pos:column="17">unsigned<pos:position pos:line="1406" pos:column="25"/></name> <name pos:line="1406" pos:column="26">char<pos:position pos:line="1406" pos:column="30"/></name></type> <name pos:line="1406" pos:column="31">c<pos:position pos:line="1406" pos:column="32"/></name> <init pos:line="1406" pos:column="33">= <expr><operator pos:line="1406" pos:column="35">*<pos:position pos:line="1406" pos:column="36"/></operator><name pos:line="1406" pos:column="36">buf<pos:position pos:line="1406" pos:column="39"/></name><operator pos:line="1406" pos:column="39">++<pos:position pos:line="1406" pos:column="41"/></operator></expr></init></decl>;<pos:position pos:line="1406" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="1407" pos:column="17">int<pos:position pos:line="1407" pos:column="20"/></name></type> <name pos:line="1407" pos:column="21">bytes<pos:position pos:line="1407" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="1407" pos:column="28">bad_offset<pos:position pos:line="1407" pos:column="38"/></name></decl>;<pos:position pos:line="1407" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="1408" pos:column="17">unsigned<pos:position pos:line="1408" pos:column="25"/></name> <name pos:line="1408" pos:column="26">int<pos:position pos:line="1408" pos:column="29"/></name></type> <name pos:line="1408" pos:column="30">codepoint<pos:position pos:line="1408" pos:column="39"/></name></decl>;<pos:position pos:line="1408" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="1409" pos:column="17">unsigned<pos:position pos:line="1409" pos:column="25"/></name> <name pos:line="1409" pos:column="26">int<pos:position pos:line="1409" pos:column="29"/></name></type> <name pos:line="1409" pos:column="30">min_val<pos:position pos:line="1409" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="1409" pos:column="39">max_val<pos:position pos:line="1409" pos:column="46"/></name></decl>;<pos:position pos:line="1409" pos:column="47"/></decl_stmt>

		<expr_stmt><expr><name pos:line="1411" pos:column="17">len<pos:position pos:line="1411" pos:column="20"/></name><operator pos:line="1411" pos:column="20">--<pos:position pos:line="1411" pos:column="22"/></operator></expr>;<pos:position pos:line="1411" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1412" pos:column="17">offset<pos:position pos:line="1412" pos:column="23"/></name><operator pos:line="1412" pos:column="23">++<pos:position pos:line="1412" pos:column="25"/></operator></expr>;<pos:position pos:line="1412" pos:column="26"/></expr_stmt>

		<comment type="block" pos:line="1414" pos:column="17">/* Simple US-ASCII? No worries. */</comment>
		<if pos:line="1415" pos:column="17">if <condition pos:line="1415" pos:column="20">(<expr><name pos:line="1415" pos:column="21">c<pos:position pos:line="1415" pos:column="22"/></name> <operator pos:line="1415" pos:column="23">&lt;<pos:position pos:line="1415" pos:column="27"/></operator> <literal type="number" pos:line="1415" pos:column="25">0x80<pos:position pos:line="1415" pos:column="29"/></literal></expr>)<pos:position pos:line="1415" pos:column="30"/></condition><then pos:line="1415" pos:column="30">
			<block type="pseudo"><continue pos:line="1416" pos:column="25">continue;<pos:position pos:line="1416" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="1418" pos:column="17">bad_offset<pos:position pos:line="1418" pos:column="27"/></name> <operator pos:line="1418" pos:column="28">=<pos:position pos:line="1418" pos:column="29"/></operator> <name pos:line="1418" pos:column="30">offset<pos:position pos:line="1418" pos:column="36"/></name><operator pos:line="1418" pos:column="36">-<pos:position pos:line="1418" pos:column="37"/></operator><literal type="number" pos:line="1418" pos:column="37">1<pos:position pos:line="1418" pos:column="38"/></literal></expr>;<pos:position pos:line="1418" pos:column="39"/></expr_stmt>

		<comment type="block" pos:line="1420" pos:column="17">/*
		 * Count how many more high bits set: that's how
		 * many more bytes this sequence should have.
		 */</comment>
		<expr_stmt><expr><name pos:line="1424" pos:column="17">bytes<pos:position pos:line="1424" pos:column="22"/></name> <operator pos:line="1424" pos:column="23">=<pos:position pos:line="1424" pos:column="24"/></operator> <literal type="number" pos:line="1424" pos:column="25">0<pos:position pos:line="1424" pos:column="26"/></literal></expr>;<pos:position pos:line="1424" pos:column="27"/></expr_stmt>
		<while pos:line="1425" pos:column="17">while <condition pos:line="1425" pos:column="23">(<expr><name pos:line="1425" pos:column="24">c<pos:position pos:line="1425" pos:column="25"/></name> <operator pos:line="1425" pos:column="26">&amp;<pos:position pos:line="1425" pos:column="31"/></operator> <literal type="number" pos:line="1425" pos:column="28">0x40<pos:position pos:line="1425" pos:column="32"/></literal></expr>)<pos:position pos:line="1425" pos:column="33"/></condition> <block pos:line="1425" pos:column="34">{
			<expr_stmt><expr><name pos:line="1426" pos:column="25">c<pos:position pos:line="1426" pos:column="26"/></name> <operator pos:line="1426" pos:column="27">&lt;&lt;=<pos:position pos:line="1426" pos:column="36"/></operator> <literal type="number" pos:line="1426" pos:column="31">1<pos:position pos:line="1426" pos:column="32"/></literal></expr>;<pos:position pos:line="1426" pos:column="33"/></expr_stmt>
			<expr_stmt><expr><name pos:line="1427" pos:column="25">bytes<pos:position pos:line="1427" pos:column="30"/></name><operator pos:line="1427" pos:column="30">++<pos:position pos:line="1427" pos:column="32"/></operator></expr>;<pos:position pos:line="1427" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="1428" pos:column="18"/></block></while>

		<comment type="block" pos:line="1430" pos:column="17">/*
		 * Must be between 1 and 3 more bytes.  Longer sequences result in
		 * codepoints beyond U+10FFFF, which are guaranteed never to exist.
		 */</comment>
		<if pos:line="1434" pos:column="17">if <condition pos:line="1434" pos:column="20">(<expr><name pos:line="1434" pos:column="21">bytes<pos:position pos:line="1434" pos:column="26"/></name> <operator pos:line="1434" pos:column="27">&lt;<pos:position pos:line="1434" pos:column="31"/></operator> <literal type="number" pos:line="1434" pos:column="29">1<pos:position pos:line="1434" pos:column="30"/></literal> <operator pos:line="1434" pos:column="31">||<pos:position pos:line="1434" pos:column="33"/></operator> <literal type="number" pos:line="1434" pos:column="34">3<pos:position pos:line="1434" pos:column="35"/></literal> <operator pos:line="1434" pos:column="36">&lt;<pos:position pos:line="1434" pos:column="40"/></operator> <name pos:line="1434" pos:column="38">bytes<pos:position pos:line="1434" pos:column="43"/></name></expr>)<pos:position pos:line="1434" pos:column="44"/></condition><then pos:line="1434" pos:column="44">
			<block type="pseudo"><return pos:line="1435" pos:column="25">return <expr><name pos:line="1435" pos:column="32">bad_offset<pos:position pos:line="1435" pos:column="42"/></name></expr>;<pos:position pos:line="1435" pos:column="43"/></return></block></then></if>

		<comment type="block" pos:line="1437" pos:column="17">/* Do we *have* that many bytes? */</comment>
		<if pos:line="1438" pos:column="17">if <condition pos:line="1438" pos:column="20">(<expr><name pos:line="1438" pos:column="21">len<pos:position pos:line="1438" pos:column="24"/></name> <operator pos:line="1438" pos:column="25">&lt;<pos:position pos:line="1438" pos:column="29"/></operator> <name pos:line="1438" pos:column="27">bytes<pos:position pos:line="1438" pos:column="32"/></name></expr>)<pos:position pos:line="1438" pos:column="33"/></condition><then pos:line="1438" pos:column="33">
			<block type="pseudo"><return pos:line="1439" pos:column="25">return <expr><name pos:line="1439" pos:column="32">bad_offset<pos:position pos:line="1439" pos:column="42"/></name></expr>;<pos:position pos:line="1439" pos:column="43"/></return></block></then></if>

		<comment type="block" pos:line="1441" pos:column="17">/*
		 * Place the encoded bits at the bottom of the value and compute the
		 * valid range.
		 */</comment>
		<expr_stmt><expr><name pos:line="1445" pos:column="17">codepoint<pos:position pos:line="1445" pos:column="26"/></name> <operator pos:line="1445" pos:column="27">=<pos:position pos:line="1445" pos:column="28"/></operator> <operator pos:line="1445" pos:column="29">(<pos:position pos:line="1445" pos:column="30"/></operator><name pos:line="1445" pos:column="30">c<pos:position pos:line="1445" pos:column="31"/></name> <operator pos:line="1445" pos:column="32">&amp;<pos:position pos:line="1445" pos:column="37"/></operator> <literal type="number" pos:line="1445" pos:column="34">0x7f<pos:position pos:line="1445" pos:column="38"/></literal><operator pos:line="1445" pos:column="38">)<pos:position pos:line="1445" pos:column="39"/></operator> <operator pos:line="1445" pos:column="40">&gt;&gt;<pos:position pos:line="1445" pos:column="45"/></operator> <name pos:line="1445" pos:column="43">bytes<pos:position pos:line="1445" pos:column="48"/></name></expr>;<pos:position pos:line="1445" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1446" pos:column="17">min_val<pos:position pos:line="1446" pos:column="24"/></name> <operator pos:line="1446" pos:column="25">=<pos:position pos:line="1446" pos:column="26"/></operator> <name><name pos:line="1446" pos:column="27">max_codepoint<pos:position pos:line="1446" pos:column="40"/></name><index pos:line="1446" pos:column="40">[<expr><name pos:line="1446" pos:column="41">bytes<pos:position pos:line="1446" pos:column="46"/></name><operator pos:line="1446" pos:column="46">-<pos:position pos:line="1446" pos:column="47"/></operator><literal type="number" pos:line="1446" pos:column="47">1<pos:position pos:line="1446" pos:column="48"/></literal></expr>]<pos:position pos:line="1446" pos:column="49"/></index></name> <operator pos:line="1446" pos:column="50">+<pos:position pos:line="1446" pos:column="51"/></operator> <literal type="number" pos:line="1446" pos:column="52">1<pos:position pos:line="1446" pos:column="53"/></literal></expr>;<pos:position pos:line="1446" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1447" pos:column="17">max_val<pos:position pos:line="1447" pos:column="24"/></name> <operator pos:line="1447" pos:column="25">=<pos:position pos:line="1447" pos:column="26"/></operator> <name><name pos:line="1447" pos:column="27">max_codepoint<pos:position pos:line="1447" pos:column="40"/></name><index pos:line="1447" pos:column="40">[<expr><name pos:line="1447" pos:column="41">bytes<pos:position pos:line="1447" pos:column="46"/></name></expr>]<pos:position pos:line="1447" pos:column="47"/></index></name></expr>;<pos:position pos:line="1447" pos:column="48"/></expr_stmt>

		<expr_stmt><expr><name pos:line="1449" pos:column="17">offset<pos:position pos:line="1449" pos:column="23"/></name> <operator pos:line="1449" pos:column="24">+=<pos:position pos:line="1449" pos:column="26"/></operator> <name pos:line="1449" pos:column="27">bytes<pos:position pos:line="1449" pos:column="32"/></name></expr>;<pos:position pos:line="1449" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1450" pos:column="17">len<pos:position pos:line="1450" pos:column="20"/></name> <operator pos:line="1450" pos:column="21">-=<pos:position pos:line="1450" pos:column="23"/></operator> <name pos:line="1450" pos:column="24">bytes<pos:position pos:line="1450" pos:column="29"/></name></expr>;<pos:position pos:line="1450" pos:column="30"/></expr_stmt>

		<comment type="block" pos:line="1452" pos:column="17">/* And verify that they are good continuation bytes */</comment>
		<do pos:line="1453" pos:column="17">do <block pos:line="1453" pos:column="20">{
			<expr_stmt><expr><name pos:line="1454" pos:column="25">codepoint<pos:position pos:line="1454" pos:column="34"/></name> <operator pos:line="1454" pos:column="35">&lt;&lt;=<pos:position pos:line="1454" pos:column="44"/></operator> <literal type="number" pos:line="1454" pos:column="39">6<pos:position pos:line="1454" pos:column="40"/></literal></expr>;<pos:position pos:line="1454" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="1455" pos:column="25">codepoint<pos:position pos:line="1455" pos:column="34"/></name> <operator pos:line="1455" pos:column="35">|=<pos:position pos:line="1455" pos:column="37"/></operator> <operator pos:line="1455" pos:column="38">*<pos:position pos:line="1455" pos:column="39"/></operator><name pos:line="1455" pos:column="39">buf<pos:position pos:line="1455" pos:column="42"/></name> <operator pos:line="1455" pos:column="43">&amp;<pos:position pos:line="1455" pos:column="48"/></operator> <literal type="number" pos:line="1455" pos:column="45">0x3f<pos:position pos:line="1455" pos:column="49"/></literal></expr>;<pos:position pos:line="1455" pos:column="50"/></expr_stmt>
			<if pos:line="1456" pos:column="25">if <condition pos:line="1456" pos:column="28">(<expr><operator pos:line="1456" pos:column="29">(<pos:position pos:line="1456" pos:column="30"/></operator><operator pos:line="1456" pos:column="30">*<pos:position pos:line="1456" pos:column="31"/></operator><name pos:line="1456" pos:column="31">buf<pos:position pos:line="1456" pos:column="34"/></name><operator pos:line="1456" pos:column="34">++<pos:position pos:line="1456" pos:column="36"/></operator> <operator pos:line="1456" pos:column="37">&amp;<pos:position pos:line="1456" pos:column="42"/></operator> <literal type="number" pos:line="1456" pos:column="39">0xc0<pos:position pos:line="1456" pos:column="43"/></literal><operator pos:line="1456" pos:column="43">)<pos:position pos:line="1456" pos:column="44"/></operator> <operator pos:line="1456" pos:column="45">!=<pos:position pos:line="1456" pos:column="47"/></operator> <literal type="number" pos:line="1456" pos:column="48">0x80<pos:position pos:line="1456" pos:column="52"/></literal></expr>)<pos:position pos:line="1456" pos:column="53"/></condition><then pos:line="1456" pos:column="53">
				<block type="pseudo"><return pos:line="1457" pos:column="33">return <expr><name pos:line="1457" pos:column="40">bad_offset<pos:position pos:line="1457" pos:column="50"/></name></expr>;<pos:position pos:line="1457" pos:column="51"/></return></block></then></if>
		}<pos:position pos:line="1458" pos:column="18"/></block> while <condition pos:line="1458" pos:column="25">(<expr><operator pos:line="1458" pos:column="26">--<pos:position pos:line="1458" pos:column="28"/></operator><name pos:line="1458" pos:column="28">bytes<pos:position pos:line="1458" pos:column="33"/></name></expr>)<pos:position pos:line="1458" pos:column="34"/></condition>;<pos:position pos:line="1458" pos:column="35"/></do>

		<comment type="block" pos:line="1460" pos:column="17">/* Reject codepoints that are out of range for the sequence length. */</comment>
		<if pos:line="1461" pos:column="17">if <condition pos:line="1461" pos:column="20">(<expr><name pos:line="1461" pos:column="21">codepoint<pos:position pos:line="1461" pos:column="30"/></name> <operator pos:line="1461" pos:column="31">&lt;<pos:position pos:line="1461" pos:column="35"/></operator> <name pos:line="1461" pos:column="33">min_val<pos:position pos:line="1461" pos:column="40"/></name> <operator pos:line="1461" pos:column="41">||<pos:position pos:line="1461" pos:column="43"/></operator> <name pos:line="1461" pos:column="44">codepoint<pos:position pos:line="1461" pos:column="53"/></name> <operator pos:line="1461" pos:column="54">&gt;<pos:position pos:line="1461" pos:column="58"/></operator> <name pos:line="1461" pos:column="56">max_val<pos:position pos:line="1461" pos:column="63"/></name></expr>)<pos:position pos:line="1461" pos:column="64"/></condition><then pos:line="1461" pos:column="64">
			<block type="pseudo"><return pos:line="1462" pos:column="25">return <expr><name pos:line="1462" pos:column="32">bad_offset<pos:position pos:line="1462" pos:column="42"/></name></expr>;<pos:position pos:line="1462" pos:column="43"/></return></block></then></if>
		<comment type="block" pos:line="1463" pos:column="17">/* Surrogates are only for UTF-16 and cannot be encoded in UTF-8. */</comment>
		<if pos:line="1464" pos:column="17">if <condition pos:line="1464" pos:column="20">(<expr><operator pos:line="1464" pos:column="21">(<pos:position pos:line="1464" pos:column="22"/></operator><name pos:line="1464" pos:column="22">codepoint<pos:position pos:line="1464" pos:column="31"/></name> <operator pos:line="1464" pos:column="32">&amp;<pos:position pos:line="1464" pos:column="37"/></operator> <literal type="number" pos:line="1464" pos:column="34">0x1ff800<pos:position pos:line="1464" pos:column="42"/></literal><operator pos:line="1464" pos:column="42">)<pos:position pos:line="1464" pos:column="43"/></operator> <operator pos:line="1464" pos:column="44">==<pos:position pos:line="1464" pos:column="46"/></operator> <literal type="number" pos:line="1464" pos:column="47">0xd800<pos:position pos:line="1464" pos:column="53"/></literal></expr>)<pos:position pos:line="1464" pos:column="54"/></condition><then pos:line="1464" pos:column="54">
			<block type="pseudo"><return pos:line="1465" pos:column="25">return <expr><name pos:line="1465" pos:column="32">bad_offset<pos:position pos:line="1465" pos:column="42"/></name></expr>;<pos:position pos:line="1465" pos:column="43"/></return></block></then></if>
		<comment type="block" pos:line="1466" pos:column="17">/* U+xxFFFE and U+xxFFFF are guaranteed non-characters. */</comment>
		<if pos:line="1467" pos:column="17">if <condition pos:line="1467" pos:column="20">(<expr><operator pos:line="1467" pos:column="21">(<pos:position pos:line="1467" pos:column="22"/></operator><name pos:line="1467" pos:column="22">codepoint<pos:position pos:line="1467" pos:column="31"/></name> <operator pos:line="1467" pos:column="32">&amp;<pos:position pos:line="1467" pos:column="37"/></operator> <literal type="number" pos:line="1467" pos:column="34">0xfffe<pos:position pos:line="1467" pos:column="40"/></literal><operator pos:line="1467" pos:column="40">)<pos:position pos:line="1467" pos:column="41"/></operator> <operator pos:line="1467" pos:column="42">==<pos:position pos:line="1467" pos:column="44"/></operator> <literal type="number" pos:line="1467" pos:column="45">0xfffe<pos:position pos:line="1467" pos:column="51"/></literal></expr>)<pos:position pos:line="1467" pos:column="52"/></condition><then pos:line="1467" pos:column="52">
			<block type="pseudo"><return pos:line="1468" pos:column="25">return <expr><name pos:line="1468" pos:column="32">bad_offset<pos:position pos:line="1468" pos:column="42"/></name></expr>;<pos:position pos:line="1468" pos:column="43"/></return></block></then></if>
		<comment type="block" pos:line="1469" pos:column="17">/* So are anything in the range U+FDD0..U+FDEF. */</comment>
		<if pos:line="1470" pos:column="17">if <condition pos:line="1470" pos:column="20">(<expr><name pos:line="1470" pos:column="21">codepoint<pos:position pos:line="1470" pos:column="30"/></name> <operator pos:line="1470" pos:column="31">&gt;=<pos:position pos:line="1470" pos:column="36"/></operator> <literal type="number" pos:line="1470" pos:column="34">0xfdd0<pos:position pos:line="1470" pos:column="40"/></literal> <operator pos:line="1470" pos:column="41">&amp;&amp;<pos:position pos:line="1470" pos:column="51"/></operator> <name pos:line="1470" pos:column="44">codepoint<pos:position pos:line="1470" pos:column="53"/></name> <operator pos:line="1470" pos:column="54">&lt;=<pos:position pos:line="1470" pos:column="59"/></operator> <literal type="number" pos:line="1470" pos:column="57">0xfdef<pos:position pos:line="1470" pos:column="63"/></literal></expr>)<pos:position pos:line="1470" pos:column="64"/></condition><then pos:line="1470" pos:column="64">
			<block type="pseudo"><return pos:line="1471" pos:column="25">return <expr><name pos:line="1471" pos:column="32">bad_offset<pos:position pos:line="1471" pos:column="42"/></name></expr>;<pos:position pos:line="1471" pos:column="43"/></return></block></then></if>
	}<pos:position pos:line="1472" pos:column="10"/></block></while>
	<return pos:line="1473" pos:column="9">return <expr><operator pos:line="1473" pos:column="16">-<pos:position pos:line="1473" pos:column="17"/></operator><literal type="number" pos:line="1473" pos:column="17">1<pos:position pos:line="1473" pos:column="18"/></literal></expr>;<pos:position pos:line="1473" pos:column="19"/></return>
}<pos:position pos:line="1474" pos:column="2"/></block></function>

<comment type="block" pos:line="1476" pos:column="1">/*
 * This verifies that the buffer is in proper utf8 format.
 *
 * If it isn't, it assumes any non-utf8 characters are Latin1,
 * and does the conversion.
 */</comment>
<function><specifier pos:line="1482" pos:column="1">static<pos:position pos:line="1482" pos:column="7"/></specifier> <type><name pos:line="1482" pos:column="8">int<pos:position pos:line="1482" pos:column="11"/></name></type> <name pos:line="1482" pos:column="12">verify_utf8<pos:position pos:line="1482" pos:column="23"/></name><parameter_list pos:line="1482" pos:column="23">(<parameter><decl><type><name><name pos:line="1482" pos:column="24">struct<pos:position pos:line="1482" pos:column="30"/></name> <name pos:line="1482" pos:column="31">strbuf<pos:position pos:line="1482" pos:column="37"/></name></name> <modifier pos:line="1482" pos:column="38">*<pos:position pos:line="1482" pos:column="39"/></modifier></type><name pos:line="1482" pos:column="39">buf<pos:position pos:line="1482" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1482" pos:column="43"/></parameter_list>
<block pos:line="1483" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1484" pos:column="9">int<pos:position pos:line="1484" pos:column="12"/></name></type> <name pos:line="1484" pos:column="13">ok<pos:position pos:line="1484" pos:column="15"/></name> <init pos:line="1484" pos:column="16">= <expr><literal type="number" pos:line="1484" pos:column="18">1<pos:position pos:line="1484" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="1484" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1485" pos:column="9">long<pos:position pos:line="1485" pos:column="13"/></name></type> <name pos:line="1485" pos:column="14">pos<pos:position pos:line="1485" pos:column="17"/></name> <init pos:line="1485" pos:column="18">= <expr><literal type="number" pos:line="1485" pos:column="20">0<pos:position pos:line="1485" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="1485" pos:column="22"/></decl_stmt>

	<for pos:line="1487" pos:column="9">for <control pos:line="1487" pos:column="13">(<init pos:line="1487" pos:column="14">;<pos:position pos:line="1487" pos:column="15"/></init><condition pos:line="1487" pos:column="15">;<pos:position pos:line="1487" pos:column="16"/></condition><incr/>)<pos:position pos:line="1487" pos:column="17"/></control> <block pos:line="1487" pos:column="18">{
		<decl_stmt><decl><type><name pos:line="1488" pos:column="17">int<pos:position pos:line="1488" pos:column="20"/></name></type> <name pos:line="1488" pos:column="21">bad<pos:position pos:line="1488" pos:column="24"/></name></decl>;<pos:position pos:line="1488" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="1489" pos:column="17">unsigned<pos:position pos:line="1489" pos:column="25"/></name> <name pos:line="1489" pos:column="26">char<pos:position pos:line="1489" pos:column="30"/></name></type> <name pos:line="1489" pos:column="31">c<pos:position pos:line="1489" pos:column="32"/></name></decl>;<pos:position pos:line="1489" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="1490" pos:column="17">unsigned<pos:position pos:line="1490" pos:column="25"/></name> <name pos:line="1490" pos:column="26">char<pos:position pos:line="1490" pos:column="30"/></name></type> <name><name pos:line="1490" pos:column="31">replace<pos:position pos:line="1490" pos:column="38"/></name><index pos:line="1490" pos:column="38">[<expr><literal type="number" pos:line="1490" pos:column="39">2<pos:position pos:line="1490" pos:column="40"/></literal></expr>]<pos:position pos:line="1490" pos:column="41"/></index></name></decl>;<pos:position pos:line="1490" pos:column="42"/></decl_stmt>

		<expr_stmt><expr><name pos:line="1492" pos:column="17">bad<pos:position pos:line="1492" pos:column="20"/></name> <operator pos:line="1492" pos:column="21">=<pos:position pos:line="1492" pos:column="22"/></operator> <call><name pos:line="1492" pos:column="23">find_invalid_utf8<pos:position pos:line="1492" pos:column="40"/></name><argument_list pos:line="1492" pos:column="40">(<argument><expr><name><name pos:line="1492" pos:column="41">buf<pos:position pos:line="1492" pos:column="44"/></name><operator pos:line="1492" pos:column="44">-&gt;<pos:position pos:line="1492" pos:column="49"/></operator><name pos:line="1492" pos:column="46">buf<pos:position pos:line="1492" pos:column="49"/></name></name> <operator pos:line="1492" pos:column="50">+<pos:position pos:line="1492" pos:column="51"/></operator> <name pos:line="1492" pos:column="52">pos<pos:position pos:line="1492" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="1492" pos:column="57">buf<pos:position pos:line="1492" pos:column="60"/></name><operator pos:line="1492" pos:column="60">-&gt;<pos:position pos:line="1492" pos:column="65"/></operator><name pos:line="1492" pos:column="62">len<pos:position pos:line="1492" pos:column="65"/></name></name> <operator pos:line="1492" pos:column="66">-<pos:position pos:line="1492" pos:column="67"/></operator> <name pos:line="1492" pos:column="68">pos<pos:position pos:line="1492" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1492" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1492" pos:column="73"/></expr_stmt>
		<if pos:line="1493" pos:column="17">if <condition pos:line="1493" pos:column="20">(<expr><name pos:line="1493" pos:column="21">bad<pos:position pos:line="1493" pos:column="24"/></name> <operator pos:line="1493" pos:column="25">&lt;<pos:position pos:line="1493" pos:column="29"/></operator> <literal type="number" pos:line="1493" pos:column="27">0<pos:position pos:line="1493" pos:column="28"/></literal></expr>)<pos:position pos:line="1493" pos:column="29"/></condition><then pos:line="1493" pos:column="29">
			<block type="pseudo"><return pos:line="1494" pos:column="25">return <expr><name pos:line="1494" pos:column="32">ok<pos:position pos:line="1494" pos:column="34"/></name></expr>;<pos:position pos:line="1494" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="1495" pos:column="17">pos<pos:position pos:line="1495" pos:column="20"/></name> <operator pos:line="1495" pos:column="21">+=<pos:position pos:line="1495" pos:column="23"/></operator> <name pos:line="1495" pos:column="24">bad<pos:position pos:line="1495" pos:column="27"/></name></expr>;<pos:position pos:line="1495" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1496" pos:column="17">ok<pos:position pos:line="1496" pos:column="19"/></name> <operator pos:line="1496" pos:column="20">=<pos:position pos:line="1496" pos:column="21"/></operator> <literal type="number" pos:line="1496" pos:column="22">0<pos:position pos:line="1496" pos:column="23"/></literal></expr>;<pos:position pos:line="1496" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1497" pos:column="17">c<pos:position pos:line="1497" pos:column="18"/></name> <operator pos:line="1497" pos:column="19">=<pos:position pos:line="1497" pos:column="20"/></operator> <name><name pos:line="1497" pos:column="21">buf<pos:position pos:line="1497" pos:column="24"/></name><operator pos:line="1497" pos:column="24">-&gt;<pos:position pos:line="1497" pos:column="29"/></operator><name pos:line="1497" pos:column="26">buf<pos:position pos:line="1497" pos:column="29"/></name><index pos:line="1497" pos:column="29">[<expr><name pos:line="1497" pos:column="30">pos<pos:position pos:line="1497" pos:column="33"/></name></expr>]<pos:position pos:line="1497" pos:column="34"/></index></name></expr>;<pos:position pos:line="1497" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="1498" pos:column="17">strbuf_remove<pos:position pos:line="1498" pos:column="30"/></name><argument_list pos:line="1498" pos:column="30">(<argument><expr><name pos:line="1498" pos:column="31">buf<pos:position pos:line="1498" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1498" pos:column="36">pos<pos:position pos:line="1498" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1498" pos:column="41">1<pos:position pos:line="1498" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="1498" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1498" pos:column="44"/></expr_stmt>

		<comment type="block" pos:line="1500" pos:column="17">/* We know 'c' must be in the range 128-255 */</comment>
		<expr_stmt><expr><name><name pos:line="1501" pos:column="17">replace<pos:position pos:line="1501" pos:column="24"/></name><index pos:line="1501" pos:column="24">[<expr><literal type="number" pos:line="1501" pos:column="25">0<pos:position pos:line="1501" pos:column="26"/></literal></expr>]<pos:position pos:line="1501" pos:column="27"/></index></name> <operator pos:line="1501" pos:column="28">=<pos:position pos:line="1501" pos:column="29"/></operator> <literal type="number" pos:line="1501" pos:column="30">0xc0<pos:position pos:line="1501" pos:column="34"/></literal> <operator pos:line="1501" pos:column="35">+<pos:position pos:line="1501" pos:column="36"/></operator> <operator pos:line="1501" pos:column="37">(<pos:position pos:line="1501" pos:column="38"/></operator><name pos:line="1501" pos:column="38">c<pos:position pos:line="1501" pos:column="39"/></name> <operator pos:line="1501" pos:column="40">&gt;&gt;<pos:position pos:line="1501" pos:column="45"/></operator> <literal type="number" pos:line="1501" pos:column="43">6<pos:position pos:line="1501" pos:column="44"/></literal><operator pos:line="1501" pos:column="44">)<pos:position pos:line="1501" pos:column="45"/></operator></expr>;<pos:position pos:line="1501" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="1502" pos:column="17">replace<pos:position pos:line="1502" pos:column="24"/></name><index pos:line="1502" pos:column="24">[<expr><literal type="number" pos:line="1502" pos:column="25">1<pos:position pos:line="1502" pos:column="26"/></literal></expr>]<pos:position pos:line="1502" pos:column="27"/></index></name> <operator pos:line="1502" pos:column="28">=<pos:position pos:line="1502" pos:column="29"/></operator> <literal type="number" pos:line="1502" pos:column="30">0x80<pos:position pos:line="1502" pos:column="34"/></literal> <operator pos:line="1502" pos:column="35">+<pos:position pos:line="1502" pos:column="36"/></operator> <operator pos:line="1502" pos:column="37">(<pos:position pos:line="1502" pos:column="38"/></operator><name pos:line="1502" pos:column="38">c<pos:position pos:line="1502" pos:column="39"/></name> <operator pos:line="1502" pos:column="40">&amp;<pos:position pos:line="1502" pos:column="45"/></operator> <literal type="number" pos:line="1502" pos:column="42">0x3f<pos:position pos:line="1502" pos:column="46"/></literal><operator pos:line="1502" pos:column="46">)<pos:position pos:line="1502" pos:column="47"/></operator></expr>;<pos:position pos:line="1502" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="1503" pos:column="17">strbuf_insert<pos:position pos:line="1503" pos:column="30"/></name><argument_list pos:line="1503" pos:column="30">(<argument><expr><name pos:line="1503" pos:column="31">buf<pos:position pos:line="1503" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1503" pos:column="36">pos<pos:position pos:line="1503" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1503" pos:column="41">replace<pos:position pos:line="1503" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1503" pos:column="50">2<pos:position pos:line="1503" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="1503" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1503" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1504" pos:column="17">pos<pos:position pos:line="1504" pos:column="20"/></name> <operator pos:line="1504" pos:column="21">+=<pos:position pos:line="1504" pos:column="23"/></operator> <literal type="number" pos:line="1504" pos:column="24">2<pos:position pos:line="1504" pos:column="25"/></literal></expr>;<pos:position pos:line="1504" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="1505" pos:column="10"/></block></for>
}<pos:position pos:line="1506" pos:column="2"/></block></function>

<decl_stmt><decl><specifier pos:line="1508" pos:column="1">static<pos:position pos:line="1508" pos:column="7"/></specifier> <type><specifier pos:line="1508" pos:column="8">const<pos:position pos:line="1508" pos:column="13"/></specifier> <name pos:line="1508" pos:column="14">char<pos:position pos:line="1508" pos:column="18"/></name></type> <name><name pos:line="1508" pos:column="19">commit_utf8_warn<pos:position pos:line="1508" pos:column="35"/></name><index pos:line="1508" pos:column="35">[]<pos:position pos:line="1508" pos:column="37"/></index></name> <init pos:line="1508" pos:column="38">=
<expr><literal type="string" pos:line="1509" pos:column="1">"Warning: commit message did not conform to UTF-8.\n"<pos:position pos:line="1509" pos:column="54"/></literal>
<literal type="string" pos:line="1510" pos:column="1">"You may want to amend it after fixing the message, or set the config\n"<pos:position pos:line="1510" pos:column="73"/></literal>
<literal type="string" pos:line="1511" pos:column="1">"variable i18n.commitencoding to the encoding your project uses.\n"<pos:position pos:line="1511" pos:column="68"/></literal></expr></init></decl>;<pos:position pos:line="1511" pos:column="69"/></decl_stmt>

<function><type><name pos:line="1513" pos:column="1">int<pos:position pos:line="1513" pos:column="4"/></name></type> <name pos:line="1513" pos:column="5">commit_tree_extended<pos:position pos:line="1513" pos:column="25"/></name><parameter_list pos:line="1513" pos:column="25">(<parameter><decl><type><specifier pos:line="1513" pos:column="26">const<pos:position pos:line="1513" pos:column="31"/></specifier> <name pos:line="1513" pos:column="32">char<pos:position pos:line="1513" pos:column="36"/></name> <modifier pos:line="1513" pos:column="37">*<pos:position pos:line="1513" pos:column="38"/></modifier></type><name pos:line="1513" pos:column="38">msg<pos:position pos:line="1513" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1513" pos:column="43">size_t<pos:position pos:line="1513" pos:column="49"/></name></type> <name pos:line="1513" pos:column="50">msg_len<pos:position pos:line="1513" pos:column="57"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="1514" pos:column="26">const<pos:position pos:line="1514" pos:column="31"/></specifier> <name pos:line="1514" pos:column="32">unsigned<pos:position pos:line="1514" pos:column="40"/></name> <name pos:line="1514" pos:column="41">char<pos:position pos:line="1514" pos:column="45"/></name> <modifier pos:line="1514" pos:column="46">*<pos:position pos:line="1514" pos:column="47"/></modifier></type><name pos:line="1514" pos:column="47">tree<pos:position pos:line="1514" pos:column="51"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="1515" pos:column="26">struct<pos:position pos:line="1515" pos:column="32"/></name> <name pos:line="1515" pos:column="33">commit_list<pos:position pos:line="1515" pos:column="44"/></name></name> <modifier pos:line="1515" pos:column="45">*<pos:position pos:line="1515" pos:column="46"/></modifier></type><name pos:line="1515" pos:column="46">parents<pos:position pos:line="1515" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1515" pos:column="55">unsigned<pos:position pos:line="1515" pos:column="63"/></name> <name pos:line="1515" pos:column="64">char<pos:position pos:line="1515" pos:column="68"/></name> <modifier pos:line="1515" pos:column="69">*<pos:position pos:line="1515" pos:column="70"/></modifier></type><name pos:line="1515" pos:column="70">ret<pos:position pos:line="1515" pos:column="73"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="1516" pos:column="26">const<pos:position pos:line="1516" pos:column="31"/></specifier> <name pos:line="1516" pos:column="32">char<pos:position pos:line="1516" pos:column="36"/></name> <modifier pos:line="1516" pos:column="37">*<pos:position pos:line="1516" pos:column="38"/></modifier></type><name pos:line="1516" pos:column="38">author<pos:position pos:line="1516" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1516" pos:column="46">const<pos:position pos:line="1516" pos:column="51"/></specifier> <name pos:line="1516" pos:column="52">char<pos:position pos:line="1516" pos:column="56"/></name> <modifier pos:line="1516" pos:column="57">*<pos:position pos:line="1516" pos:column="58"/></modifier></type><name pos:line="1516" pos:column="58">sign_commit<pos:position pos:line="1516" pos:column="69"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="1517" pos:column="26">struct<pos:position pos:line="1517" pos:column="32"/></name> <name pos:line="1517" pos:column="33">commit_extra_header<pos:position pos:line="1517" pos:column="52"/></name></name> <modifier pos:line="1517" pos:column="53">*<pos:position pos:line="1517" pos:column="54"/></modifier></type><name pos:line="1517" pos:column="54">extra<pos:position pos:line="1517" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1517" pos:column="60"/></parameter_list>
<block pos:line="1518" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1519" pos:column="9">int<pos:position pos:line="1519" pos:column="12"/></name></type> <name pos:line="1519" pos:column="13">result<pos:position pos:line="1519" pos:column="19"/></name></decl>;<pos:position pos:line="1519" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1520" pos:column="9">int<pos:position pos:line="1520" pos:column="12"/></name></type> <name pos:line="1520" pos:column="13">encoding_is_utf8<pos:position pos:line="1520" pos:column="29"/></name></decl>;<pos:position pos:line="1520" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1521" pos:column="9">struct<pos:position pos:line="1521" pos:column="15"/></name> <name pos:line="1521" pos:column="16">strbuf<pos:position pos:line="1521" pos:column="22"/></name></name></type> <name pos:line="1521" pos:column="23">buffer<pos:position pos:line="1521" pos:column="29"/></name></decl>;<pos:position pos:line="1521" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="1523" pos:column="9">assert_sha1_type<pos:position pos:line="1523" pos:column="25"/></name><argument_list pos:line="1523" pos:column="25">(<argument><expr><name pos:line="1523" pos:column="26">tree<pos:position pos:line="1523" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1523" pos:column="32">OBJ_TREE<pos:position pos:line="1523" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1523" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1523" pos:column="42"/></expr_stmt>

	<if pos:line="1525" pos:column="9">if <condition pos:line="1525" pos:column="12">(<expr><call><name pos:line="1525" pos:column="13">memchr<pos:position pos:line="1525" pos:column="19"/></name><argument_list pos:line="1525" pos:column="19">(<argument><expr><name pos:line="1525" pos:column="20">msg<pos:position pos:line="1525" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1525" pos:column="25">'\0'<pos:position pos:line="1525" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="1525" pos:column="31">msg_len<pos:position pos:line="1525" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1525" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="1525" pos:column="40"/></condition><then pos:line="1525" pos:column="40">
		<block type="pseudo"><return pos:line="1526" pos:column="17">return <expr><call><name pos:line="1526" pos:column="24">error<pos:position pos:line="1526" pos:column="29"/></name><argument_list pos:line="1526" pos:column="29">(<argument><expr><literal type="string" pos:line="1526" pos:column="30">"a NUL byte in commit log message not allowed."<pos:position pos:line="1526" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="1526" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="1526" pos:column="79"/></return></block></then></if>

	<comment type="block" pos:line="1528" pos:column="9">/* Not having i18n.commitencoding is the same as having utf-8 */</comment>
	<expr_stmt><expr><name pos:line="1529" pos:column="9">encoding_is_utf8<pos:position pos:line="1529" pos:column="25"/></name> <operator pos:line="1529" pos:column="26">=<pos:position pos:line="1529" pos:column="27"/></operator> <call><name pos:line="1529" pos:column="28">is_encoding_utf8<pos:position pos:line="1529" pos:column="44"/></name><argument_list pos:line="1529" pos:column="44">(<argument><expr><name pos:line="1529" pos:column="45">git_commit_encoding<pos:position pos:line="1529" pos:column="64"/></name></expr></argument>)<pos:position pos:line="1529" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="1529" pos:column="66"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="1531" pos:column="9">strbuf_init<pos:position pos:line="1531" pos:column="20"/></name><argument_list pos:line="1531" pos:column="20">(<argument><expr><operator pos:line="1531" pos:column="21">&amp;<pos:position pos:line="1531" pos:column="26"/></operator><name pos:line="1531" pos:column="22">buffer<pos:position pos:line="1531" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1531" pos:column="30">8192<pos:position pos:line="1531" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="1531" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1531" pos:column="36"/></expr_stmt> <comment type="block" pos:line="1531" pos:column="37">/* should avoid reallocs for the headers */</comment>
	<expr_stmt><expr><call><name pos:line="1532" pos:column="9">strbuf_addf<pos:position pos:line="1532" pos:column="20"/></name><argument_list pos:line="1532" pos:column="20">(<argument><expr><operator pos:line="1532" pos:column="21">&amp;<pos:position pos:line="1532" pos:column="26"/></operator><name pos:line="1532" pos:column="22">buffer<pos:position pos:line="1532" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1532" pos:column="30">"tree %s\n"<pos:position pos:line="1532" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="1532" pos:column="43">sha1_to_hex<pos:position pos:line="1532" pos:column="54"/></name><argument_list pos:line="1532" pos:column="54">(<argument><expr><name pos:line="1532" pos:column="55">tree<pos:position pos:line="1532" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1532" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="1532" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1532" pos:column="62"/></expr_stmt>

	<comment type="block" pos:line="1534" pos:column="9">/*
	 * NOTE! This ordering means that the same exact tree merged with a
	 * different order of parents will be a _different_ changeset even
	 * if everything else stays the same.
	 */</comment>
	<while pos:line="1539" pos:column="9">while <condition pos:line="1539" pos:column="15">(<expr><name pos:line="1539" pos:column="16">parents<pos:position pos:line="1539" pos:column="23"/></name></expr>)<pos:position pos:line="1539" pos:column="24"/></condition> <block pos:line="1539" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="1540" pos:column="17">struct<pos:position pos:line="1540" pos:column="23"/></name> <name pos:line="1540" pos:column="24">commit<pos:position pos:line="1540" pos:column="30"/></name></name> <modifier pos:line="1540" pos:column="31">*<pos:position pos:line="1540" pos:column="32"/></modifier></type><name pos:line="1540" pos:column="32">parent<pos:position pos:line="1540" pos:column="38"/></name> <init pos:line="1540" pos:column="39">= <expr><call><name pos:line="1540" pos:column="41">pop_commit<pos:position pos:line="1540" pos:column="51"/></name><argument_list pos:line="1540" pos:column="51">(<argument><expr><operator pos:line="1540" pos:column="52">&amp;<pos:position pos:line="1540" pos:column="57"/></operator><name pos:line="1540" pos:column="53">parents<pos:position pos:line="1540" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1540" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1540" pos:column="62"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="1541" pos:column="17">strbuf_addf<pos:position pos:line="1541" pos:column="28"/></name><argument_list pos:line="1541" pos:column="28">(<argument><expr><operator pos:line="1541" pos:column="29">&amp;<pos:position pos:line="1541" pos:column="34"/></operator><name pos:line="1541" pos:column="30">buffer<pos:position pos:line="1541" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1541" pos:column="38">"parent %s\n"<pos:position pos:line="1541" pos:column="51"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="1542" pos:column="29">sha1_to_hex<pos:position pos:line="1542" pos:column="40"/></name><argument_list pos:line="1542" pos:column="40">(<argument><expr><name><name pos:line="1542" pos:column="41">parent<pos:position pos:line="1542" pos:column="47"/></name><operator pos:line="1542" pos:column="47">-&gt;<pos:position pos:line="1542" pos:column="52"/></operator><name pos:line="1542" pos:column="49">object<pos:position pos:line="1542" pos:column="55"/></name><operator pos:line="1542" pos:column="55">.<pos:position pos:line="1542" pos:column="56"/></operator><name pos:line="1542" pos:column="56">sha1<pos:position pos:line="1542" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="1542" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="1542" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1542" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="1543" pos:column="10"/></block></while>

	<comment type="block" pos:line="1545" pos:column="9">/* Person/date information */</comment>
	<if pos:line="1546" pos:column="9">if <condition pos:line="1546" pos:column="12">(<expr><operator pos:line="1546" pos:column="13">!<pos:position pos:line="1546" pos:column="14"/></operator><name pos:line="1546" pos:column="14">author<pos:position pos:line="1546" pos:column="20"/></name></expr>)<pos:position pos:line="1546" pos:column="21"/></condition><then pos:line="1546" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="1547" pos:column="17">author<pos:position pos:line="1547" pos:column="23"/></name> <operator pos:line="1547" pos:column="24">=<pos:position pos:line="1547" pos:column="25"/></operator> <call><name pos:line="1547" pos:column="26">git_author_info<pos:position pos:line="1547" pos:column="41"/></name><argument_list pos:line="1547" pos:column="41">(<argument><expr><name pos:line="1547" pos:column="42">IDENT_STRICT<pos:position pos:line="1547" pos:column="54"/></name></expr></argument>)<pos:position pos:line="1547" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1547" pos:column="56"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="1548" pos:column="9">strbuf_addf<pos:position pos:line="1548" pos:column="20"/></name><argument_list pos:line="1548" pos:column="20">(<argument><expr><operator pos:line="1548" pos:column="21">&amp;<pos:position pos:line="1548" pos:column="26"/></operator><name pos:line="1548" pos:column="22">buffer<pos:position pos:line="1548" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1548" pos:column="30">"author %s\n"<pos:position pos:line="1548" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="1548" pos:column="45">author<pos:position pos:line="1548" pos:column="51"/></name></expr></argument>)<pos:position pos:line="1548" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1548" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1549" pos:column="9">strbuf_addf<pos:position pos:line="1549" pos:column="20"/></name><argument_list pos:line="1549" pos:column="20">(<argument><expr><operator pos:line="1549" pos:column="21">&amp;<pos:position pos:line="1549" pos:column="26"/></operator><name pos:line="1549" pos:column="22">buffer<pos:position pos:line="1549" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1549" pos:column="30">"committer %s\n"<pos:position pos:line="1549" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="1549" pos:column="48">git_committer_info<pos:position pos:line="1549" pos:column="66"/></name><argument_list pos:line="1549" pos:column="66">(<argument><expr><name pos:line="1549" pos:column="67">IDENT_STRICT<pos:position pos:line="1549" pos:column="79"/></name></expr></argument>)<pos:position pos:line="1549" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="1549" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="1549" pos:column="82"/></expr_stmt>
	<if pos:line="1550" pos:column="9">if <condition pos:line="1550" pos:column="12">(<expr><operator pos:line="1550" pos:column="13">!<pos:position pos:line="1550" pos:column="14"/></operator><name pos:line="1550" pos:column="14">encoding_is_utf8<pos:position pos:line="1550" pos:column="30"/></name></expr>)<pos:position pos:line="1550" pos:column="31"/></condition><then pos:line="1550" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="1551" pos:column="17">strbuf_addf<pos:position pos:line="1551" pos:column="28"/></name><argument_list pos:line="1551" pos:column="28">(<argument><expr><operator pos:line="1551" pos:column="29">&amp;<pos:position pos:line="1551" pos:column="34"/></operator><name pos:line="1551" pos:column="30">buffer<pos:position pos:line="1551" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1551" pos:column="38">"encoding %s\n"<pos:position pos:line="1551" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="1551" pos:column="55">git_commit_encoding<pos:position pos:line="1551" pos:column="74"/></name></expr></argument>)<pos:position pos:line="1551" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="1551" pos:column="76"/></expr_stmt></block></then></if>

	<while pos:line="1553" pos:column="9">while <condition pos:line="1553" pos:column="15">(<expr><name pos:line="1553" pos:column="16">extra<pos:position pos:line="1553" pos:column="21"/></name></expr>)<pos:position pos:line="1553" pos:column="22"/></condition> <block pos:line="1553" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="1554" pos:column="17">add_extra_header<pos:position pos:line="1554" pos:column="33"/></name><argument_list pos:line="1554" pos:column="33">(<argument><expr><operator pos:line="1554" pos:column="34">&amp;<pos:position pos:line="1554" pos:column="39"/></operator><name pos:line="1554" pos:column="35">buffer<pos:position pos:line="1554" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="1554" pos:column="43">extra<pos:position pos:line="1554" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1554" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1554" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="1555" pos:column="17">extra<pos:position pos:line="1555" pos:column="22"/></name> <operator pos:line="1555" pos:column="23">=<pos:position pos:line="1555" pos:column="24"/></operator> <name><name pos:line="1555" pos:column="25">extra<pos:position pos:line="1555" pos:column="30"/></name><operator pos:line="1555" pos:column="30">-&gt;<pos:position pos:line="1555" pos:column="35"/></operator><name pos:line="1555" pos:column="32">next<pos:position pos:line="1555" pos:column="36"/></name></name></expr>;<pos:position pos:line="1555" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="1556" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="1557" pos:column="9">strbuf_addch<pos:position pos:line="1557" pos:column="21"/></name><argument_list pos:line="1557" pos:column="21">(<argument><expr><operator pos:line="1557" pos:column="22">&amp;<pos:position pos:line="1557" pos:column="27"/></operator><name pos:line="1557" pos:column="23">buffer<pos:position pos:line="1557" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1557" pos:column="31">'\n'<pos:position pos:line="1557" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="1557" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1557" pos:column="37"/></expr_stmt>

	<comment type="block" pos:line="1559" pos:column="9">/* And add the comment */</comment>
	<expr_stmt><expr><call><name pos:line="1560" pos:column="9">strbuf_add<pos:position pos:line="1560" pos:column="19"/></name><argument_list pos:line="1560" pos:column="19">(<argument><expr><operator pos:line="1560" pos:column="20">&amp;<pos:position pos:line="1560" pos:column="25"/></operator><name pos:line="1560" pos:column="21">buffer<pos:position pos:line="1560" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1560" pos:column="29">msg<pos:position pos:line="1560" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1560" pos:column="34">msg_len<pos:position pos:line="1560" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1560" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="1560" pos:column="43"/></expr_stmt>

	<comment type="block" pos:line="1562" pos:column="9">/* And check the encoding */</comment>
	<if pos:line="1563" pos:column="9">if <condition pos:line="1563" pos:column="12">(<expr><name pos:line="1563" pos:column="13">encoding_is_utf8<pos:position pos:line="1563" pos:column="29"/></name> <operator pos:line="1563" pos:column="30">&amp;&amp;<pos:position pos:line="1563" pos:column="40"/></operator> <operator pos:line="1563" pos:column="33">!<pos:position pos:line="1563" pos:column="34"/></operator><call><name pos:line="1563" pos:column="34">verify_utf8<pos:position pos:line="1563" pos:column="45"/></name><argument_list pos:line="1563" pos:column="45">(<argument><expr><operator pos:line="1563" pos:column="46">&amp;<pos:position pos:line="1563" pos:column="51"/></operator><name pos:line="1563" pos:column="47">buffer<pos:position pos:line="1563" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1563" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="1563" pos:column="55"/></condition><then pos:line="1563" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="1564" pos:column="17">fprintf<pos:position pos:line="1564" pos:column="24"/></name><argument_list pos:line="1564" pos:column="24">(<argument><expr><name pos:line="1564" pos:column="25">stderr<pos:position pos:line="1564" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1564" pos:column="33">commit_utf8_warn<pos:position pos:line="1564" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1564" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1564" pos:column="51"/></expr_stmt></block></then></if>

	<if pos:line="1566" pos:column="9">if <condition pos:line="1566" pos:column="12">(<expr><name pos:line="1566" pos:column="13">sign_commit<pos:position pos:line="1566" pos:column="24"/></name> <operator pos:line="1566" pos:column="25">&amp;&amp;<pos:position pos:line="1566" pos:column="35"/></operator> <call><name pos:line="1566" pos:column="28">do_sign_commit<pos:position pos:line="1566" pos:column="42"/></name><argument_list pos:line="1566" pos:column="42">(<argument><expr><operator pos:line="1566" pos:column="43">&amp;<pos:position pos:line="1566" pos:column="48"/></operator><name pos:line="1566" pos:column="44">buffer<pos:position pos:line="1566" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1566" pos:column="52">sign_commit<pos:position pos:line="1566" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1566" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="1566" pos:column="65"/></condition><then pos:line="1566" pos:column="65">
		<block type="pseudo"><return pos:line="1567" pos:column="17">return <expr><operator pos:line="1567" pos:column="24">-<pos:position pos:line="1567" pos:column="25"/></operator><literal type="number" pos:line="1567" pos:column="25">1<pos:position pos:line="1567" pos:column="26"/></literal></expr>;<pos:position pos:line="1567" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="1569" pos:column="9">result<pos:position pos:line="1569" pos:column="15"/></name> <operator pos:line="1569" pos:column="16">=<pos:position pos:line="1569" pos:column="17"/></operator> <call><name pos:line="1569" pos:column="18">write_sha1_file<pos:position pos:line="1569" pos:column="33"/></name><argument_list pos:line="1569" pos:column="33">(<argument><expr><name><name pos:line="1569" pos:column="34">buffer<pos:position pos:line="1569" pos:column="40"/></name><operator pos:line="1569" pos:column="40">.<pos:position pos:line="1569" pos:column="41"/></operator><name pos:line="1569" pos:column="41">buf<pos:position pos:line="1569" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1569" pos:column="46">buffer<pos:position pos:line="1569" pos:column="52"/></name><operator pos:line="1569" pos:column="52">.<pos:position pos:line="1569" pos:column="53"/></operator><name pos:line="1569" pos:column="53">len<pos:position pos:line="1569" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="1569" pos:column="58">commit_type<pos:position pos:line="1569" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="1569" pos:column="71">ret<pos:position pos:line="1569" pos:column="74"/></name></expr></argument>)<pos:position pos:line="1569" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="1569" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="1570" pos:column="9">strbuf_release<pos:position pos:line="1570" pos:column="23"/></name><argument_list pos:line="1570" pos:column="23">(<argument><expr><operator pos:line="1570" pos:column="24">&amp;<pos:position pos:line="1570" pos:column="29"/></operator><name pos:line="1570" pos:column="25">buffer<pos:position pos:line="1570" pos:column="31"/></name></expr></argument>)<pos:position pos:line="1570" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1570" pos:column="33"/></expr_stmt>
	<return pos:line="1571" pos:column="9">return <expr><name pos:line="1571" pos:column="16">result<pos:position pos:line="1571" pos:column="22"/></name></expr>;<pos:position pos:line="1571" pos:column="23"/></return>
}<pos:position pos:line="1572" pos:column="2"/></block></function>

<function><type><name><name pos:line="1574" pos:column="1">struct<pos:position pos:line="1574" pos:column="7"/></name> <name pos:line="1574" pos:column="8">commit<pos:position pos:line="1574" pos:column="14"/></name></name> <modifier pos:line="1574" pos:column="15">*<pos:position pos:line="1574" pos:column="16"/></modifier></type><name pos:line="1574" pos:column="16">get_merge_parent<pos:position pos:line="1574" pos:column="32"/></name><parameter_list pos:line="1574" pos:column="32">(<parameter><decl><type><specifier pos:line="1574" pos:column="33">const<pos:position pos:line="1574" pos:column="38"/></specifier> <name pos:line="1574" pos:column="39">char<pos:position pos:line="1574" pos:column="43"/></name> <modifier pos:line="1574" pos:column="44">*<pos:position pos:line="1574" pos:column="45"/></modifier></type><name pos:line="1574" pos:column="45">name<pos:position pos:line="1574" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1574" pos:column="50"/></parameter_list>
<block pos:line="1575" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1576" pos:column="9">struct<pos:position pos:line="1576" pos:column="15"/></name> <name pos:line="1576" pos:column="16">object<pos:position pos:line="1576" pos:column="22"/></name></name> <modifier pos:line="1576" pos:column="23">*<pos:position pos:line="1576" pos:column="24"/></modifier></type><name pos:line="1576" pos:column="24">obj<pos:position pos:line="1576" pos:column="27"/></name></decl>;<pos:position pos:line="1576" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1577" pos:column="9">struct<pos:position pos:line="1577" pos:column="15"/></name> <name pos:line="1577" pos:column="16">commit<pos:position pos:line="1577" pos:column="22"/></name></name> <modifier pos:line="1577" pos:column="23">*<pos:position pos:line="1577" pos:column="24"/></modifier></type><name pos:line="1577" pos:column="24">commit<pos:position pos:line="1577" pos:column="30"/></name></decl>;<pos:position pos:line="1577" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1578" pos:column="9">struct<pos:position pos:line="1578" pos:column="15"/></name> <name pos:line="1578" pos:column="16">object_id<pos:position pos:line="1578" pos:column="25"/></name></name></type> <name pos:line="1578" pos:column="26">oid<pos:position pos:line="1578" pos:column="29"/></name></decl>;<pos:position pos:line="1578" pos:column="30"/></decl_stmt>
	<if pos:line="1579" pos:column="9">if <condition pos:line="1579" pos:column="12">(<expr><call><name pos:line="1579" pos:column="13">get_sha1<pos:position pos:line="1579" pos:column="21"/></name><argument_list pos:line="1579" pos:column="21">(<argument><expr><name pos:line="1579" pos:column="22">name<pos:position pos:line="1579" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="1579" pos:column="28">oid<pos:position pos:line="1579" pos:column="31"/></name><operator pos:line="1579" pos:column="31">.<pos:position pos:line="1579" pos:column="32"/></operator><name pos:line="1579" pos:column="32">hash<pos:position pos:line="1579" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="1579" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="1579" pos:column="38"/></condition><then pos:line="1579" pos:column="38">
		<block type="pseudo"><return pos:line="1580" pos:column="17">return <expr><name pos:line="1580" pos:column="24">NULL<pos:position pos:line="1580" pos:column="28"/></name></expr>;<pos:position pos:line="1580" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="1581" pos:column="9">obj<pos:position pos:line="1581" pos:column="12"/></name> <operator pos:line="1581" pos:column="13">=<pos:position pos:line="1581" pos:column="14"/></operator> <call><name pos:line="1581" pos:column="15">parse_object<pos:position pos:line="1581" pos:column="27"/></name><argument_list pos:line="1581" pos:column="27">(<argument><expr><name><name pos:line="1581" pos:column="28">oid<pos:position pos:line="1581" pos:column="31"/></name><operator pos:line="1581" pos:column="31">.<pos:position pos:line="1581" pos:column="32"/></operator><name pos:line="1581" pos:column="32">hash<pos:position pos:line="1581" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="1581" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1581" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="1582" pos:column="9">commit<pos:position pos:line="1582" pos:column="15"/></name> <operator pos:line="1582" pos:column="16">=<pos:position pos:line="1582" pos:column="17"/></operator> <operator pos:line="1582" pos:column="18">(<pos:position pos:line="1582" pos:column="19"/></operator>struct <name pos:line="1582" pos:column="26">commit<pos:position pos:line="1582" pos:column="32"/></name> <operator pos:line="1582" pos:column="33">*<pos:position pos:line="1582" pos:column="34"/></operator><operator pos:line="1582" pos:column="34">)<pos:position pos:line="1582" pos:column="35"/></operator><call><name pos:line="1582" pos:column="35">peel_to_type<pos:position pos:line="1582" pos:column="47"/></name><argument_list pos:line="1582" pos:column="47">(<argument><expr><name pos:line="1582" pos:column="48">name<pos:position pos:line="1582" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1582" pos:column="54">0<pos:position pos:line="1582" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="1582" pos:column="57">obj<pos:position pos:line="1582" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1582" pos:column="62">OBJ_COMMIT<pos:position pos:line="1582" pos:column="72"/></name></expr></argument>)<pos:position pos:line="1582" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="1582" pos:column="74"/></expr_stmt>
	<if pos:line="1583" pos:column="9">if <condition pos:line="1583" pos:column="12">(<expr><name pos:line="1583" pos:column="13">commit<pos:position pos:line="1583" pos:column="19"/></name> <operator pos:line="1583" pos:column="20">&amp;&amp;<pos:position pos:line="1583" pos:column="30"/></operator> <operator pos:line="1583" pos:column="23">!<pos:position pos:line="1583" pos:column="24"/></operator><name><name pos:line="1583" pos:column="24">commit<pos:position pos:line="1583" pos:column="30"/></name><operator pos:line="1583" pos:column="30">-&gt;<pos:position pos:line="1583" pos:column="35"/></operator><name pos:line="1583" pos:column="32">util<pos:position pos:line="1583" pos:column="36"/></name></name></expr>)<pos:position pos:line="1583" pos:column="37"/></condition><then pos:line="1583" pos:column="37"> <block pos:line="1583" pos:column="38">{
		<decl_stmt><decl><type><name><name pos:line="1584" pos:column="17">struct<pos:position pos:line="1584" pos:column="23"/></name> <name pos:line="1584" pos:column="24">merge_remote_desc<pos:position pos:line="1584" pos:column="41"/></name></name> <modifier pos:line="1584" pos:column="42">*<pos:position pos:line="1584" pos:column="43"/></modifier></type><name pos:line="1584" pos:column="43">desc<pos:position pos:line="1584" pos:column="47"/></name></decl>;<pos:position pos:line="1584" pos:column="48"/></decl_stmt>
		<expr_stmt><expr><name pos:line="1585" pos:column="17">desc<pos:position pos:line="1585" pos:column="21"/></name> <operator pos:line="1585" pos:column="22">=<pos:position pos:line="1585" pos:column="23"/></operator> <call><name pos:line="1585" pos:column="24">xmalloc<pos:position pos:line="1585" pos:column="31"/></name><argument_list pos:line="1585" pos:column="31">(<argument><expr><sizeof pos:line="1585" pos:column="32">sizeof<argument_list pos:line="1585" pos:column="38">(<argument><expr><operator pos:line="1585" pos:column="39">*<pos:position pos:line="1585" pos:column="40"/></operator><name pos:line="1585" pos:column="40">desc<pos:position pos:line="1585" pos:column="44"/></name></expr></argument>)<pos:position pos:line="1585" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1585" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="1585" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="1586" pos:column="17">desc<pos:position pos:line="1586" pos:column="21"/></name><operator pos:line="1586" pos:column="21">-&gt;<pos:position pos:line="1586" pos:column="26"/></operator><name pos:line="1586" pos:column="23">obj<pos:position pos:line="1586" pos:column="26"/></name></name> <operator pos:line="1586" pos:column="27">=<pos:position pos:line="1586" pos:column="28"/></operator> <name pos:line="1586" pos:column="29">obj<pos:position pos:line="1586" pos:column="32"/></name></expr>;<pos:position pos:line="1586" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="1587" pos:column="17">desc<pos:position pos:line="1587" pos:column="21"/></name><operator pos:line="1587" pos:column="21">-&gt;<pos:position pos:line="1587" pos:column="26"/></operator><name pos:line="1587" pos:column="23">name<pos:position pos:line="1587" pos:column="27"/></name></name> <operator pos:line="1587" pos:column="28">=<pos:position pos:line="1587" pos:column="29"/></operator> <call><name pos:line="1587" pos:column="30">strdup<pos:position pos:line="1587" pos:column="36"/></name><argument_list pos:line="1587" pos:column="36">(<argument><expr><name pos:line="1587" pos:column="37">name<pos:position pos:line="1587" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1587" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="1587" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="1588" pos:column="17">commit<pos:position pos:line="1588" pos:column="23"/></name><operator pos:line="1588" pos:column="23">-&gt;<pos:position pos:line="1588" pos:column="28"/></operator><name pos:line="1588" pos:column="25">util<pos:position pos:line="1588" pos:column="29"/></name></name> <operator pos:line="1588" pos:column="30">=<pos:position pos:line="1588" pos:column="31"/></operator> <name pos:line="1588" pos:column="32">desc<pos:position pos:line="1588" pos:column="36"/></name></expr>;<pos:position pos:line="1588" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="1589" pos:column="10"/></block></then></if>
	<return pos:line="1590" pos:column="9">return <expr><name pos:line="1590" pos:column="16">commit<pos:position pos:line="1590" pos:column="22"/></name></expr>;<pos:position pos:line="1590" pos:column="23"/></return>
}<pos:position pos:line="1591" pos:column="2"/></block></function>

<comment type="block" pos:line="1593" pos:column="1">/*
 * Append a commit to the end of the commit_list.
 *
 * next starts by pointing to the variable that holds the head of an
 * empty commit_list, and is updated to point to the "next" field of
 * the last item on the list as new commits are appended.
 *
 * Usage example:
 *
 *     struct commit_list *list;
 *     struct commit_list **next = &amp;list;
 *
 *     next = commit_list_append(c1, next);
 *     next = commit_list_append(c2, next);
 *     assert(commit_list_count(list) == 2);
 *     return list;
 */</comment>
<function><type><name><name pos:line="1610" pos:column="1">struct<pos:position pos:line="1610" pos:column="7"/></name> <name pos:line="1610" pos:column="8">commit_list<pos:position pos:line="1610" pos:column="19"/></name></name> <modifier pos:line="1610" pos:column="20">*<pos:position pos:line="1610" pos:column="21"/></modifier><modifier pos:line="1610" pos:column="21">*<pos:position pos:line="1610" pos:column="22"/></modifier></type><name pos:line="1610" pos:column="22">commit_list_append<pos:position pos:line="1610" pos:column="40"/></name><parameter_list pos:line="1610" pos:column="40">(<parameter><decl><type><name><name pos:line="1610" pos:column="41">struct<pos:position pos:line="1610" pos:column="47"/></name> <name pos:line="1610" pos:column="48">commit<pos:position pos:line="1610" pos:column="54"/></name></name> <modifier pos:line="1610" pos:column="55">*<pos:position pos:line="1610" pos:column="56"/></modifier></type><name pos:line="1610" pos:column="56">commit<pos:position pos:line="1610" pos:column="62"/></name></decl></parameter>,
					<parameter><decl><type><name><name pos:line="1611" pos:column="41">struct<pos:position pos:line="1611" pos:column="47"/></name> <name pos:line="1611" pos:column="48">commit_list<pos:position pos:line="1611" pos:column="59"/></name></name> <modifier pos:line="1611" pos:column="60">*<pos:position pos:line="1611" pos:column="61"/></modifier><modifier pos:line="1611" pos:column="61">*<pos:position pos:line="1611" pos:column="62"/></modifier></type><name pos:line="1611" pos:column="62">next<pos:position pos:line="1611" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1611" pos:column="67"/></parameter_list>
<block pos:line="1612" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="1613" pos:column="9">struct<pos:position pos:line="1613" pos:column="15"/></name> <name pos:line="1613" pos:column="16">commit_list<pos:position pos:line="1613" pos:column="27"/></name></name> <modifier pos:line="1613" pos:column="28">*<pos:position pos:line="1613" pos:column="29"/></modifier></type><name pos:line="1613" pos:column="29">new<pos:position pos:line="1613" pos:column="32"/></name> <init pos:line="1613" pos:column="33">= <expr><call><name pos:line="1613" pos:column="35">xmalloc<pos:position pos:line="1613" pos:column="42"/></name><argument_list pos:line="1613" pos:column="42">(<argument><expr><sizeof pos:line="1613" pos:column="43">sizeof<argument_list pos:line="1613" pos:column="49">(<argument><expr pos:line="1613" pos:column="50">struct <name pos:line="1613" pos:column="57">commit_list<pos:position pos:line="1613" pos:column="68"/></name></expr></argument>)<pos:position pos:line="1613" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1613" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1613" pos:column="71"/></decl_stmt>
	<expr_stmt><expr><name><name pos:line="1614" pos:column="9">new<pos:position pos:line="1614" pos:column="12"/></name><operator pos:line="1614" pos:column="12">-&gt;<pos:position pos:line="1614" pos:column="17"/></operator><name pos:line="1614" pos:column="14">item<pos:position pos:line="1614" pos:column="18"/></name></name> <operator pos:line="1614" pos:column="19">=<pos:position pos:line="1614" pos:column="20"/></operator> <name pos:line="1614" pos:column="21">commit<pos:position pos:line="1614" pos:column="27"/></name></expr>;<pos:position pos:line="1614" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="1615" pos:column="9">*<pos:position pos:line="1615" pos:column="10"/></operator><name pos:line="1615" pos:column="10">next<pos:position pos:line="1615" pos:column="14"/></name> <operator pos:line="1615" pos:column="15">=<pos:position pos:line="1615" pos:column="16"/></operator> <name pos:line="1615" pos:column="17">new<pos:position pos:line="1615" pos:column="20"/></name></expr>;<pos:position pos:line="1615" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="1616" pos:column="9">new<pos:position pos:line="1616" pos:column="12"/></name><operator pos:line="1616" pos:column="12">-&gt;<pos:position pos:line="1616" pos:column="17"/></operator><name pos:line="1616" pos:column="14">next<pos:position pos:line="1616" pos:column="18"/></name></name> <operator pos:line="1616" pos:column="19">=<pos:position pos:line="1616" pos:column="20"/></operator> <name pos:line="1616" pos:column="21">NULL<pos:position pos:line="1616" pos:column="25"/></name></expr>;<pos:position pos:line="1616" pos:column="26"/></expr_stmt>
	<return pos:line="1617" pos:column="9">return <expr><operator pos:line="1617" pos:column="16">&amp;<pos:position pos:line="1617" pos:column="21"/></operator><name><name pos:line="1617" pos:column="17">new<pos:position pos:line="1617" pos:column="20"/></name><operator pos:line="1617" pos:column="20">-&gt;<pos:position pos:line="1617" pos:column="25"/></operator><name pos:line="1617" pos:column="22">next<pos:position pos:line="1617" pos:column="26"/></name></name></expr>;<pos:position pos:line="1617" pos:column="27"/></return>
}<pos:position pos:line="1618" pos:column="2"/></block></function>

<function><type><name pos:line="1620" pos:column="1">void<pos:position pos:line="1620" pos:column="5"/></name></type> <name pos:line="1620" pos:column="6">print_commit_list<pos:position pos:line="1620" pos:column="23"/></name><parameter_list pos:line="1620" pos:column="23">(<parameter><decl><type><name><name pos:line="1620" pos:column="24">struct<pos:position pos:line="1620" pos:column="30"/></name> <name pos:line="1620" pos:column="31">commit_list<pos:position pos:line="1620" pos:column="42"/></name></name> <modifier pos:line="1620" pos:column="43">*<pos:position pos:line="1620" pos:column="44"/></modifier></type><name pos:line="1620" pos:column="44">list<pos:position pos:line="1620" pos:column="48"/></name></decl></parameter>,
		       <parameter><decl><type><specifier pos:line="1621" pos:column="24">const<pos:position pos:line="1621" pos:column="29"/></specifier> <name pos:line="1621" pos:column="30">char<pos:position pos:line="1621" pos:column="34"/></name> <modifier pos:line="1621" pos:column="35">*<pos:position pos:line="1621" pos:column="36"/></modifier></type><name pos:line="1621" pos:column="36">format_cur<pos:position pos:line="1621" pos:column="46"/></name></decl></parameter>,
		       <parameter><decl><type><specifier pos:line="1622" pos:column="24">const<pos:position pos:line="1622" pos:column="29"/></specifier> <name pos:line="1622" pos:column="30">char<pos:position pos:line="1622" pos:column="34"/></name> <modifier pos:line="1622" pos:column="35">*<pos:position pos:line="1622" pos:column="36"/></modifier></type><name pos:line="1622" pos:column="36">format_last<pos:position pos:line="1622" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1622" pos:column="48"/></parameter_list>
<block pos:line="1623" pos:column="1">{
	<for pos:line="1624" pos:column="9">for <control pos:line="1624" pos:column="13">( <init pos:line="1624" pos:column="15">;<pos:position pos:line="1624" pos:column="16"/></init> <condition><expr><name pos:line="1624" pos:column="17">list<pos:position pos:line="1624" pos:column="21"/></name></expr>;<pos:position pos:line="1624" pos:column="22"/></condition> <incr><expr><name pos:line="1624" pos:column="23">list<pos:position pos:line="1624" pos:column="27"/></name> <operator pos:line="1624" pos:column="28">=<pos:position pos:line="1624" pos:column="29"/></operator> <name><name pos:line="1624" pos:column="30">list<pos:position pos:line="1624" pos:column="34"/></name><operator pos:line="1624" pos:column="34">-&gt;<pos:position pos:line="1624" pos:column="39"/></operator><name pos:line="1624" pos:column="36">next<pos:position pos:line="1624" pos:column="40"/></name></name></expr></incr>)<pos:position pos:line="1624" pos:column="41"/></control> <block pos:line="1624" pos:column="42">{
		<decl_stmt><decl><type><specifier pos:line="1625" pos:column="17">const<pos:position pos:line="1625" pos:column="22"/></specifier> <name pos:line="1625" pos:column="23">char<pos:position pos:line="1625" pos:column="27"/></name> <modifier pos:line="1625" pos:column="28">*<pos:position pos:line="1625" pos:column="29"/></modifier></type><name pos:line="1625" pos:column="29">format<pos:position pos:line="1625" pos:column="35"/></name> <init pos:line="1625" pos:column="36">= <expr><ternary><condition><expr><name><name pos:line="1625" pos:column="38">list<pos:position pos:line="1625" pos:column="42"/></name><operator pos:line="1625" pos:column="42">-&gt;<pos:position pos:line="1625" pos:column="47"/></operator><name pos:line="1625" pos:column="44">next<pos:position pos:line="1625" pos:column="48"/></name></name></expr> ?<pos:position pos:line="1625" pos:column="50"/></condition><then pos:line="1625" pos:column="50"> <expr><name pos:line="1625" pos:column="51">format_cur<pos:position pos:line="1625" pos:column="61"/></name></expr> <pos:position pos:line="1625" pos:column="62"/></then><else pos:line="1625" pos:column="62">: <expr><name pos:line="1625" pos:column="64">format_last<pos:position pos:line="1625" pos:column="75"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="1625" pos:column="76"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="1626" pos:column="17">printf<pos:position pos:line="1626" pos:column="23"/></name><argument_list pos:line="1626" pos:column="23">(<argument><expr><name pos:line="1626" pos:column="24">format<pos:position pos:line="1626" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="1626" pos:column="32">sha1_to_hex<pos:position pos:line="1626" pos:column="43"/></name><argument_list pos:line="1626" pos:column="43">(<argument><expr><name><name pos:line="1626" pos:column="44">list<pos:position pos:line="1626" pos:column="48"/></name><operator pos:line="1626" pos:column="48">-&gt;<pos:position pos:line="1626" pos:column="53"/></operator><name pos:line="1626" pos:column="50">item<pos:position pos:line="1626" pos:column="54"/></name><operator pos:line="1626" pos:column="54">-&gt;<pos:position pos:line="1626" pos:column="59"/></operator><name pos:line="1626" pos:column="56">object<pos:position pos:line="1626" pos:column="62"/></name><operator pos:line="1626" pos:column="62">.<pos:position pos:line="1626" pos:column="63"/></operator><name pos:line="1626" pos:column="63">sha1<pos:position pos:line="1626" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="1626" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="1626" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="1626" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="1627" pos:column="10"/></block></for>
}<pos:position pos:line="1628" pos:column="2"/></block></function>

<function><type><specifier pos:line="1630" pos:column="1">const<pos:position pos:line="1630" pos:column="6"/></specifier> <name pos:line="1630" pos:column="7">char<pos:position pos:line="1630" pos:column="11"/></name> <modifier pos:line="1630" pos:column="12">*<pos:position pos:line="1630" pos:column="13"/></modifier></type><name pos:line="1630" pos:column="13">find_commit_header<pos:position pos:line="1630" pos:column="31"/></name><parameter_list pos:line="1630" pos:column="31">(<parameter><decl><type><specifier pos:line="1630" pos:column="32">const<pos:position pos:line="1630" pos:column="37"/></specifier> <name pos:line="1630" pos:column="38">char<pos:position pos:line="1630" pos:column="42"/></name> <modifier pos:line="1630" pos:column="43">*<pos:position pos:line="1630" pos:column="44"/></modifier></type><name pos:line="1630" pos:column="44">msg<pos:position pos:line="1630" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1630" pos:column="49">const<pos:position pos:line="1630" pos:column="54"/></specifier> <name pos:line="1630" pos:column="55">char<pos:position pos:line="1630" pos:column="59"/></name> <modifier pos:line="1630" pos:column="60">*<pos:position pos:line="1630" pos:column="61"/></modifier></type><name pos:line="1630" pos:column="61">key<pos:position pos:line="1630" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1630" pos:column="66">size_t<pos:position pos:line="1630" pos:column="72"/></name> <modifier pos:line="1630" pos:column="73">*<pos:position pos:line="1630" pos:column="74"/></modifier></type><name pos:line="1630" pos:column="74">out_len<pos:position pos:line="1630" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="1630" pos:column="82"/></parameter_list>
<block pos:line="1631" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1632" pos:column="9">int<pos:position pos:line="1632" pos:column="12"/></name></type> <name pos:line="1632" pos:column="13">key_len<pos:position pos:line="1632" pos:column="20"/></name> <init pos:line="1632" pos:column="21">= <expr><call><name pos:line="1632" pos:column="23">strlen<pos:position pos:line="1632" pos:column="29"/></name><argument_list pos:line="1632" pos:column="29">(<argument><expr><name pos:line="1632" pos:column="30">key<pos:position pos:line="1632" pos:column="33"/></name></expr></argument>)<pos:position pos:line="1632" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1632" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1633" pos:column="9">const<pos:position pos:line="1633" pos:column="14"/></specifier> <name pos:line="1633" pos:column="15">char<pos:position pos:line="1633" pos:column="19"/></name> <modifier pos:line="1633" pos:column="20">*<pos:position pos:line="1633" pos:column="21"/></modifier></type><name pos:line="1633" pos:column="21">line<pos:position pos:line="1633" pos:column="25"/></name> <init pos:line="1633" pos:column="26">= <expr><name pos:line="1633" pos:column="28">msg<pos:position pos:line="1633" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="1633" pos:column="32"/></decl_stmt>

	<while pos:line="1635" pos:column="9">while <condition pos:line="1635" pos:column="15">(<expr><name pos:line="1635" pos:column="16">line<pos:position pos:line="1635" pos:column="20"/></name></expr>)<pos:position pos:line="1635" pos:column="21"/></condition> <block pos:line="1635" pos:column="22">{
		<decl_stmt><decl><type><specifier pos:line="1636" pos:column="17">const<pos:position pos:line="1636" pos:column="22"/></specifier> <name pos:line="1636" pos:column="23">char<pos:position pos:line="1636" pos:column="27"/></name> <modifier pos:line="1636" pos:column="28">*<pos:position pos:line="1636" pos:column="29"/></modifier></type><name pos:line="1636" pos:column="29">eol<pos:position pos:line="1636" pos:column="32"/></name> <init pos:line="1636" pos:column="33">= <expr><call><name pos:line="1636" pos:column="35">strchrnul<pos:position pos:line="1636" pos:column="44"/></name><argument_list pos:line="1636" pos:column="44">(<argument><expr><name pos:line="1636" pos:column="45">line<pos:position pos:line="1636" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1636" pos:column="51">'\n'<pos:position pos:line="1636" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="1636" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1636" pos:column="57"/></decl_stmt>

		<if pos:line="1638" pos:column="17">if <condition pos:line="1638" pos:column="20">(<expr><name pos:line="1638" pos:column="21">line<pos:position pos:line="1638" pos:column="25"/></name> <operator pos:line="1638" pos:column="26">==<pos:position pos:line="1638" pos:column="28"/></operator> <name pos:line="1638" pos:column="29">eol<pos:position pos:line="1638" pos:column="32"/></name></expr>)<pos:position pos:line="1638" pos:column="33"/></condition><then pos:line="1638" pos:column="33">
			<block type="pseudo"><return pos:line="1639" pos:column="25">return <expr><name pos:line="1639" pos:column="32">NULL<pos:position pos:line="1639" pos:column="36"/></name></expr>;<pos:position pos:line="1639" pos:column="37"/></return></block></then></if>

		<if pos:line="1641" pos:column="17">if <condition pos:line="1641" pos:column="20">(<expr><name pos:line="1641" pos:column="21">eol<pos:position pos:line="1641" pos:column="24"/></name> <operator pos:line="1641" pos:column="25">-<pos:position pos:line="1641" pos:column="26"/></operator> <name pos:line="1641" pos:column="27">line<pos:position pos:line="1641" pos:column="31"/></name> <operator pos:line="1641" pos:column="32">&gt;<pos:position pos:line="1641" pos:column="36"/></operator> <name pos:line="1641" pos:column="34">key_len<pos:position pos:line="1641" pos:column="41"/></name> <operator pos:line="1641" pos:column="42">&amp;&amp;<pos:position pos:line="1641" pos:column="52"/></operator>
		    <operator pos:line="1642" pos:column="21">!<pos:position pos:line="1642" pos:column="22"/></operator><call><name pos:line="1642" pos:column="22">strncmp<pos:position pos:line="1642" pos:column="29"/></name><argument_list pos:line="1642" pos:column="29">(<argument><expr><name pos:line="1642" pos:column="30">line<pos:position pos:line="1642" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1642" pos:column="36">key<pos:position pos:line="1642" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1642" pos:column="41">key_len<pos:position pos:line="1642" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1642" pos:column="49"/></argument_list></call> <operator pos:line="1642" pos:column="50">&amp;&amp;<pos:position pos:line="1642" pos:column="60"/></operator>
		    <name><name pos:line="1643" pos:column="21">line<pos:position pos:line="1643" pos:column="25"/></name><index pos:line="1643" pos:column="25">[<expr><name pos:line="1643" pos:column="26">key_len<pos:position pos:line="1643" pos:column="33"/></name></expr>]<pos:position pos:line="1643" pos:column="34"/></index></name> <operator pos:line="1643" pos:column="35">==<pos:position pos:line="1643" pos:column="37"/></operator> <literal type="char" pos:line="1643" pos:column="38">' '<pos:position pos:line="1643" pos:column="41"/></literal></expr>)<pos:position pos:line="1643" pos:column="42"/></condition><then pos:line="1643" pos:column="42"> <block pos:line="1643" pos:column="43">{
			<expr_stmt><expr><operator pos:line="1644" pos:column="25">*<pos:position pos:line="1644" pos:column="26"/></operator><name pos:line="1644" pos:column="26">out_len<pos:position pos:line="1644" pos:column="33"/></name> <operator pos:line="1644" pos:column="34">=<pos:position pos:line="1644" pos:column="35"/></operator> <name pos:line="1644" pos:column="36">eol<pos:position pos:line="1644" pos:column="39"/></name> <operator pos:line="1644" pos:column="40">-<pos:position pos:line="1644" pos:column="41"/></operator> <name pos:line="1644" pos:column="42">line<pos:position pos:line="1644" pos:column="46"/></name> <operator pos:line="1644" pos:column="47">-<pos:position pos:line="1644" pos:column="48"/></operator> <name pos:line="1644" pos:column="49">key_len<pos:position pos:line="1644" pos:column="56"/></name> <operator pos:line="1644" pos:column="57">-<pos:position pos:line="1644" pos:column="58"/></operator> <literal type="number" pos:line="1644" pos:column="59">1<pos:position pos:line="1644" pos:column="60"/></literal></expr>;<pos:position pos:line="1644" pos:column="61"/></expr_stmt>
			<return pos:line="1645" pos:column="25">return <expr><name pos:line="1645" pos:column="32">line<pos:position pos:line="1645" pos:column="36"/></name> <operator pos:line="1645" pos:column="37">+<pos:position pos:line="1645" pos:column="38"/></operator> <name pos:line="1645" pos:column="39">key_len<pos:position pos:line="1645" pos:column="46"/></name> <operator pos:line="1645" pos:column="47">+<pos:position pos:line="1645" pos:column="48"/></operator> <literal type="number" pos:line="1645" pos:column="49">1<pos:position pos:line="1645" pos:column="50"/></literal></expr>;<pos:position pos:line="1645" pos:column="51"/></return>
		}<pos:position pos:line="1646" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="1647" pos:column="17">line<pos:position pos:line="1647" pos:column="21"/></name> <operator pos:line="1647" pos:column="22">=<pos:position pos:line="1647" pos:column="23"/></operator> <ternary><condition><expr><operator pos:line="1647" pos:column="24">*<pos:position pos:line="1647" pos:column="25"/></operator><name pos:line="1647" pos:column="25">eol<pos:position pos:line="1647" pos:column="28"/></name></expr> ?<pos:position pos:line="1647" pos:column="30"/></condition><then pos:line="1647" pos:column="30"> <expr><name pos:line="1647" pos:column="31">eol<pos:position pos:line="1647" pos:column="34"/></name> <operator pos:line="1647" pos:column="35">+<pos:position pos:line="1647" pos:column="36"/></operator> <literal type="number" pos:line="1647" pos:column="37">1<pos:position pos:line="1647" pos:column="38"/></literal></expr> <pos:position pos:line="1647" pos:column="39"/></then><else pos:line="1647" pos:column="39">: <expr><name pos:line="1647" pos:column="41">NULL<pos:position pos:line="1647" pos:column="45"/></name></expr></else></ternary></expr>;<pos:position pos:line="1647" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="1648" pos:column="10"/></block></while>
	<return pos:line="1649" pos:column="9">return <expr><name pos:line="1649" pos:column="16">NULL<pos:position pos:line="1649" pos:column="20"/></name></expr>;<pos:position pos:line="1649" pos:column="21"/></return>
}<pos:position pos:line="1650" pos:column="2"/></block></function>

<comment type="block" pos:line="1652" pos:column="1">/*
 * Inspect sb and determine the true "end" of the log message, in
 * order to find where to put a new Signed-off-by: line.  Ignored are
 * trailing comment lines and blank lines, and also the traditional
 * "Conflicts:" block that is not commented out, so that we can use
 * "git commit -s --amend" on an existing commit that forgot to remove
 * it.
 *
 * Returns the number of bytes from the tail to ignore, to be fed as
 * the second parameter to append_signoff().
 */</comment>
<function><type><name pos:line="1663" pos:column="1">int<pos:position pos:line="1663" pos:column="4"/></name></type> <name pos:line="1663" pos:column="5">ignore_non_trailer<pos:position pos:line="1663" pos:column="23"/></name><parameter_list pos:line="1663" pos:column="23">(<parameter><decl><type><name><name pos:line="1663" pos:column="24">struct<pos:position pos:line="1663" pos:column="30"/></name> <name pos:line="1663" pos:column="31">strbuf<pos:position pos:line="1663" pos:column="37"/></name></name> <modifier pos:line="1663" pos:column="38">*<pos:position pos:line="1663" pos:column="39"/></modifier></type><name pos:line="1663" pos:column="39">sb<pos:position pos:line="1663" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1663" pos:column="42"/></parameter_list>
<block pos:line="1664" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1665" pos:column="9">int<pos:position pos:line="1665" pos:column="12"/></name></type> <name pos:line="1665" pos:column="13">boc<pos:position pos:line="1665" pos:column="16"/></name> <init pos:line="1665" pos:column="17">= <expr><literal type="number" pos:line="1665" pos:column="19">0<pos:position pos:line="1665" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="1665" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1666" pos:column="9">int<pos:position pos:line="1666" pos:column="12"/></name></type> <name pos:line="1666" pos:column="13">bol<pos:position pos:line="1666" pos:column="16"/></name> <init pos:line="1666" pos:column="17">= <expr><literal type="number" pos:line="1666" pos:column="19">0<pos:position pos:line="1666" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="1666" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="1667" pos:column="9">int<pos:position pos:line="1667" pos:column="12"/></name></type> <name pos:line="1667" pos:column="13">in_old_conflicts_block<pos:position pos:line="1667" pos:column="35"/></name> <init pos:line="1667" pos:column="36">= <expr><literal type="number" pos:line="1667" pos:column="38">0<pos:position pos:line="1667" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="1667" pos:column="40"/></decl_stmt>

	<while pos:line="1669" pos:column="9">while <condition pos:line="1669" pos:column="15">(<expr><name pos:line="1669" pos:column="16">bol<pos:position pos:line="1669" pos:column="19"/></name> <operator pos:line="1669" pos:column="20">&lt;<pos:position pos:line="1669" pos:column="24"/></operator> <name><name pos:line="1669" pos:column="22">sb<pos:position pos:line="1669" pos:column="24"/></name><operator pos:line="1669" pos:column="24">-&gt;<pos:position pos:line="1669" pos:column="29"/></operator><name pos:line="1669" pos:column="26">len<pos:position pos:line="1669" pos:column="29"/></name></name></expr>)<pos:position pos:line="1669" pos:column="30"/></condition> <block pos:line="1669" pos:column="31">{
		<decl_stmt><decl><type><name pos:line="1670" pos:column="17">char<pos:position pos:line="1670" pos:column="21"/></name> <modifier pos:line="1670" pos:column="22">*<pos:position pos:line="1670" pos:column="23"/></modifier></type><name pos:line="1670" pos:column="23">next_line<pos:position pos:line="1670" pos:column="32"/></name></decl>;<pos:position pos:line="1670" pos:column="33"/></decl_stmt>

		<if pos:line="1672" pos:column="17">if <condition pos:line="1672" pos:column="20">(<expr><operator pos:line="1672" pos:column="21">!<pos:position pos:line="1672" pos:column="22"/></operator><operator pos:line="1672" pos:column="22">(<pos:position pos:line="1672" pos:column="23"/></operator><name pos:line="1672" pos:column="23">next_line<pos:position pos:line="1672" pos:column="32"/></name> <operator pos:line="1672" pos:column="33">=<pos:position pos:line="1672" pos:column="34"/></operator> <call><name pos:line="1672" pos:column="35">memchr<pos:position pos:line="1672" pos:column="41"/></name><argument_list pos:line="1672" pos:column="41">(<argument><expr><name><name pos:line="1672" pos:column="42">sb<pos:position pos:line="1672" pos:column="44"/></name><operator pos:line="1672" pos:column="44">-&gt;<pos:position pos:line="1672" pos:column="49"/></operator><name pos:line="1672" pos:column="46">buf<pos:position pos:line="1672" pos:column="49"/></name></name> <operator pos:line="1672" pos:column="50">+<pos:position pos:line="1672" pos:column="51"/></operator> <name pos:line="1672" pos:column="52">bol<pos:position pos:line="1672" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1672" pos:column="57">'\n'<pos:position pos:line="1672" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="1672" pos:column="63">sb<pos:position pos:line="1672" pos:column="65"/></name><operator pos:line="1672" pos:column="65">-&gt;<pos:position pos:line="1672" pos:column="70"/></operator><name pos:line="1672" pos:column="67">len<pos:position pos:line="1672" pos:column="70"/></name></name> <operator pos:line="1672" pos:column="71">-<pos:position pos:line="1672" pos:column="72"/></operator> <name pos:line="1672" pos:column="73">bol<pos:position pos:line="1672" pos:column="76"/></name></expr></argument>)<pos:position pos:line="1672" pos:column="77"/></argument_list></call><operator pos:line="1672" pos:column="77">)<pos:position pos:line="1672" pos:column="78"/></operator></expr>)<pos:position pos:line="1672" pos:column="79"/></condition><then pos:line="1672" pos:column="79">
			<block type="pseudo"><expr_stmt><expr><name pos:line="1673" pos:column="25">next_line<pos:position pos:line="1673" pos:column="34"/></name> <operator pos:line="1673" pos:column="35">=<pos:position pos:line="1673" pos:column="36"/></operator> <name><name pos:line="1673" pos:column="37">sb<pos:position pos:line="1673" pos:column="39"/></name><operator pos:line="1673" pos:column="39">-&gt;<pos:position pos:line="1673" pos:column="44"/></operator><name pos:line="1673" pos:column="41">buf<pos:position pos:line="1673" pos:column="44"/></name></name> <operator pos:line="1673" pos:column="45">+<pos:position pos:line="1673" pos:column="46"/></operator> <name><name pos:line="1673" pos:column="47">sb<pos:position pos:line="1673" pos:column="49"/></name><operator pos:line="1673" pos:column="49">-&gt;<pos:position pos:line="1673" pos:column="54"/></operator><name pos:line="1673" pos:column="51">len<pos:position pos:line="1673" pos:column="54"/></name></name></expr>;<pos:position pos:line="1673" pos:column="55"/></expr_stmt></block></then>
		<else pos:line="1674" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="1675" pos:column="25">next_line<pos:position pos:line="1675" pos:column="34"/></name><operator pos:line="1675" pos:column="34">++<pos:position pos:line="1675" pos:column="36"/></operator></expr>;<pos:position pos:line="1675" pos:column="37"/></expr_stmt></block></else></if>

		<if pos:line="1677" pos:column="17">if <condition pos:line="1677" pos:column="20">(<expr><name><name pos:line="1677" pos:column="21">sb<pos:position pos:line="1677" pos:column="23"/></name><operator pos:line="1677" pos:column="23">-&gt;<pos:position pos:line="1677" pos:column="28"/></operator><name pos:line="1677" pos:column="25">buf<pos:position pos:line="1677" pos:column="28"/></name><index pos:line="1677" pos:column="28">[<expr><name pos:line="1677" pos:column="29">bol<pos:position pos:line="1677" pos:column="32"/></name></expr>]<pos:position pos:line="1677" pos:column="33"/></index></name> <operator pos:line="1677" pos:column="34">==<pos:position pos:line="1677" pos:column="36"/></operator> <name pos:line="1677" pos:column="37">comment_line_char<pos:position pos:line="1677" pos:column="54"/></name> <operator pos:line="1677" pos:column="55">||<pos:position pos:line="1677" pos:column="57"/></operator> <name><name pos:line="1677" pos:column="58">sb<pos:position pos:line="1677" pos:column="60"/></name><operator pos:line="1677" pos:column="60">-&gt;<pos:position pos:line="1677" pos:column="65"/></operator><name pos:line="1677" pos:column="62">buf<pos:position pos:line="1677" pos:column="65"/></name><index pos:line="1677" pos:column="65">[<expr><name pos:line="1677" pos:column="66">bol<pos:position pos:line="1677" pos:column="69"/></name></expr>]<pos:position pos:line="1677" pos:column="70"/></index></name> <operator pos:line="1677" pos:column="71">==<pos:position pos:line="1677" pos:column="73"/></operator> <literal type="char" pos:line="1677" pos:column="74">'\n'<pos:position pos:line="1677" pos:column="78"/></literal></expr>)<pos:position pos:line="1677" pos:column="79"/></condition><then pos:line="1677" pos:column="79"> <block pos:line="1677" pos:column="80">{
			<comment type="block" pos:line="1678" pos:column="25">/* is this the first of the run of comments? */</comment>
			<if pos:line="1679" pos:column="25">if <condition pos:line="1679" pos:column="28">(<expr><operator pos:line="1679" pos:column="29">!<pos:position pos:line="1679" pos:column="30"/></operator><name pos:line="1679" pos:column="30">boc<pos:position pos:line="1679" pos:column="33"/></name></expr>)<pos:position pos:line="1679" pos:column="34"/></condition><then pos:line="1679" pos:column="34">
				<block type="pseudo"><expr_stmt><expr><name pos:line="1680" pos:column="33">boc<pos:position pos:line="1680" pos:column="36"/></name> <operator pos:line="1680" pos:column="37">=<pos:position pos:line="1680" pos:column="38"/></operator> <name pos:line="1680" pos:column="39">bol<pos:position pos:line="1680" pos:column="42"/></name></expr>;<pos:position pos:line="1680" pos:column="43"/></expr_stmt></block></then></if>
			<comment type="block" pos:line="1681" pos:column="25">/* otherwise, it is just continuing */</comment>
		}<pos:position pos:line="1682" pos:column="18"/></block></then> <elseif pos:line="1682" pos:column="19">else <if pos:line="1682" pos:column="24">if <condition pos:line="1682" pos:column="27">(<expr><call><name pos:line="1682" pos:column="28">starts_with<pos:position pos:line="1682" pos:column="39"/></name><argument_list pos:line="1682" pos:column="39">(<argument><expr><name><name pos:line="1682" pos:column="40">sb<pos:position pos:line="1682" pos:column="42"/></name><operator pos:line="1682" pos:column="42">-&gt;<pos:position pos:line="1682" pos:column="47"/></operator><name pos:line="1682" pos:column="44">buf<pos:position pos:line="1682" pos:column="47"/></name></name> <operator pos:line="1682" pos:column="48">+<pos:position pos:line="1682" pos:column="49"/></operator> <name pos:line="1682" pos:column="50">bol<pos:position pos:line="1682" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1682" pos:column="55">"Conflicts:\n"<pos:position pos:line="1682" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="1682" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="1682" pos:column="71"/></condition><then pos:line="1682" pos:column="71"> <block pos:line="1682" pos:column="72">{
			<expr_stmt><expr><name pos:line="1683" pos:column="25">in_old_conflicts_block<pos:position pos:line="1683" pos:column="47"/></name> <operator pos:line="1683" pos:column="48">=<pos:position pos:line="1683" pos:column="49"/></operator> <literal type="number" pos:line="1683" pos:column="50">1<pos:position pos:line="1683" pos:column="51"/></literal></expr>;<pos:position pos:line="1683" pos:column="52"/></expr_stmt>
			<if pos:line="1684" pos:column="25">if <condition pos:line="1684" pos:column="28">(<expr><operator pos:line="1684" pos:column="29">!<pos:position pos:line="1684" pos:column="30"/></operator><name pos:line="1684" pos:column="30">boc<pos:position pos:line="1684" pos:column="33"/></name></expr>)<pos:position pos:line="1684" pos:column="34"/></condition><then pos:line="1684" pos:column="34">
				<block type="pseudo"><expr_stmt><expr><name pos:line="1685" pos:column="33">boc<pos:position pos:line="1685" pos:column="36"/></name> <operator pos:line="1685" pos:column="37">=<pos:position pos:line="1685" pos:column="38"/></operator> <name pos:line="1685" pos:column="39">bol<pos:position pos:line="1685" pos:column="42"/></name></expr>;<pos:position pos:line="1685" pos:column="43"/></expr_stmt></block></then></if>
		}<pos:position pos:line="1686" pos:column="18"/></block></then></if></elseif> <elseif pos:line="1686" pos:column="19">else <if pos:line="1686" pos:column="24">if <condition pos:line="1686" pos:column="27">(<expr><name pos:line="1686" pos:column="28">in_old_conflicts_block<pos:position pos:line="1686" pos:column="50"/></name> <operator pos:line="1686" pos:column="51">&amp;&amp;<pos:position pos:line="1686" pos:column="61"/></operator> <name><name pos:line="1686" pos:column="54">sb<pos:position pos:line="1686" pos:column="56"/></name><operator pos:line="1686" pos:column="56">-&gt;<pos:position pos:line="1686" pos:column="61"/></operator><name pos:line="1686" pos:column="58">buf<pos:position pos:line="1686" pos:column="61"/></name><index pos:line="1686" pos:column="61">[<expr><name pos:line="1686" pos:column="62">bol<pos:position pos:line="1686" pos:column="65"/></name></expr>]<pos:position pos:line="1686" pos:column="66"/></index></name> <operator pos:line="1686" pos:column="67">==<pos:position pos:line="1686" pos:column="69"/></operator> <literal type="char" pos:line="1686" pos:column="70">'\t'<pos:position pos:line="1686" pos:column="74"/></literal></expr>)<pos:position pos:line="1686" pos:column="75"/></condition><then pos:line="1686" pos:column="75"> <block pos:line="1686" pos:column="76">{
			<empty_stmt pos:line="1687" pos:column="25">;<pos:position pos:line="1687" pos:column="26"/></empty_stmt> <comment type="block" pos:line="1687" pos:column="27">/* a pathname in the conflicts block */</comment>
		}<pos:position pos:line="1688" pos:column="18"/></block></then></if></elseif> <elseif pos:line="1688" pos:column="19">else <if pos:line="1688" pos:column="24">if <condition pos:line="1688" pos:column="27">(<expr><name pos:line="1688" pos:column="28">boc<pos:position pos:line="1688" pos:column="31"/></name></expr>)<pos:position pos:line="1688" pos:column="32"/></condition><then pos:line="1688" pos:column="32"> <block pos:line="1688" pos:column="33">{
			<comment type="block" pos:line="1689" pos:column="25">/* the previous was not trailing comment */</comment>
			<expr_stmt><expr><name pos:line="1690" pos:column="25">boc<pos:position pos:line="1690" pos:column="28"/></name> <operator pos:line="1690" pos:column="29">=<pos:position pos:line="1690" pos:column="30"/></operator> <literal type="number" pos:line="1690" pos:column="31">0<pos:position pos:line="1690" pos:column="32"/></literal></expr>;<pos:position pos:line="1690" pos:column="33"/></expr_stmt>
			<expr_stmt><expr><name pos:line="1691" pos:column="25">in_old_conflicts_block<pos:position pos:line="1691" pos:column="47"/></name> <operator pos:line="1691" pos:column="48">=<pos:position pos:line="1691" pos:column="49"/></operator> <literal type="number" pos:line="1691" pos:column="50">0<pos:position pos:line="1691" pos:column="51"/></literal></expr>;<pos:position pos:line="1691" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="1692" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="1693" pos:column="17">bol<pos:position pos:line="1693" pos:column="20"/></name> <operator pos:line="1693" pos:column="21">=<pos:position pos:line="1693" pos:column="22"/></operator> <name pos:line="1693" pos:column="23">next_line<pos:position pos:line="1693" pos:column="32"/></name> <operator pos:line="1693" pos:column="33">-<pos:position pos:line="1693" pos:column="34"/></operator> <name><name pos:line="1693" pos:column="35">sb<pos:position pos:line="1693" pos:column="37"/></name><operator pos:line="1693" pos:column="37">-&gt;<pos:position pos:line="1693" pos:column="42"/></operator><name pos:line="1693" pos:column="39">buf<pos:position pos:line="1693" pos:column="42"/></name></name></expr>;<pos:position pos:line="1693" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="1694" pos:column="10"/></block></while>
	<return pos:line="1695" pos:column="9">return <expr><ternary><condition><expr><name pos:line="1695" pos:column="16">boc<pos:position pos:line="1695" pos:column="19"/></name></expr> ?<pos:position pos:line="1695" pos:column="21"/></condition><then pos:line="1695" pos:column="21"> <expr><name><name pos:line="1695" pos:column="22">sb<pos:position pos:line="1695" pos:column="24"/></name><operator pos:line="1695" pos:column="24">-&gt;<pos:position pos:line="1695" pos:column="29"/></operator><name pos:line="1695" pos:column="26">len<pos:position pos:line="1695" pos:column="29"/></name></name> <operator pos:line="1695" pos:column="30">-<pos:position pos:line="1695" pos:column="31"/></operator> <name pos:line="1695" pos:column="32">boc<pos:position pos:line="1695" pos:column="35"/></name></expr> <pos:position pos:line="1695" pos:column="36"/></then><else pos:line="1695" pos:column="36">: <expr><literal type="number" pos:line="1695" pos:column="38">0<pos:position pos:line="1695" pos:column="39"/></literal></expr></else></ternary></expr>;<pos:position pos:line="1695" pos:column="40"/></return>
}<pos:position pos:line="1696" pos:column="2"/></block></function>
</unit>

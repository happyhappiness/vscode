<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.4.4/lib/fnmatch.c" pos:tabs="8"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include<pos:position pos:line="1" pos:column="9"/></cpp:directive> <cpp:file pos:line="1" pos:column="10">"../rsync.h"<pos:position pos:line="1" pos:column="22"/></cpp:file></cpp:include>
<cpp:ifndef pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">ifndef<pos:position pos:line="2" pos:column="8"/></cpp:directive> <name pos:line="2" pos:column="9">HAVE_FNMATCH<pos:position pos:line="2" pos:column="21"/></name></cpp:ifndef>

<comment type="block" pos:line="4" pos:column="1">/* Copyright (C) 1991, 1992, 1993 Free Software Foundation, Inc.

NOTE: The canonical source of this file is maintained with the GNU C Library.
Bugs can be reported to bug-glibc@prep.ai.mit.edu.

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2, or (at your option) any
later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */</comment>

<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><call><name pos:line="23" pos:column="5">defined<pos:position pos:line="23" pos:column="12"/></name> <argument_list pos:line="23" pos:column="13">(<argument><expr><name pos:line="23" pos:column="14">STDC_HEADERS<pos:position pos:line="23" pos:column="26"/></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call> <operator pos:line="23" pos:column="28">||<pos:position pos:line="23" pos:column="30"/></operator> <operator pos:line="23" pos:column="31">!<pos:position pos:line="23" pos:column="32"/></operator><call><name pos:line="23" pos:column="32">defined<pos:position pos:line="23" pos:column="39"/></name> <argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">isascii<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr></cpp:if>
<cpp:define pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">define<pos:position pos:line="24" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="24" pos:column="9">ISASCII<pos:position pos:line="24" pos:column="16"/></name><parameter_list pos:line="24" pos:column="16">(<parameter><type><name pos:line="24" pos:column="17">c<pos:position pos:line="24" pos:column="18"/></name></type></parameter>)<pos:position pos:line="24" pos:column="19"/></parameter_list></cpp:macro> <cpp:value pos:line="24" pos:column="20">1<pos:position pos:line="24" pos:column="21"/></cpp:value></cpp:define>
<cpp:else pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">else<pos:position pos:line="25" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">define<pos:position pos:line="26" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="26" pos:column="9">ISASCII<pos:position pos:line="26" pos:column="16"/></name><parameter_list pos:line="26" pos:column="16">(<parameter><type><name pos:line="26" pos:column="17">c<pos:position pos:line="26" pos:column="18"/></name></type></parameter>)<pos:position pos:line="26" pos:column="19"/></parameter_list></cpp:macro> <cpp:value pos:line="26" pos:column="20">isascii(c)<pos:position pos:line="26" pos:column="30"/></cpp:value></cpp:define>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:define pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">define<pos:position pos:line="29" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="29" pos:column="9">ISUPPER<pos:position pos:line="29" pos:column="16"/></name><parameter_list pos:line="29" pos:column="16">(<parameter><type><name pos:line="29" pos:column="17">c<pos:position pos:line="29" pos:column="18"/></name></type></parameter>)<pos:position pos:line="29" pos:column="19"/></parameter_list></cpp:macro> <cpp:value pos:line="29" pos:column="20">(ISASCII (c) &amp;&amp; isupper (c))<pos:position pos:line="29" pos:column="48"/></cpp:value></cpp:define>


<comment type="block" pos:line="32" pos:column="1">/* Comment out all this code if we are using the GNU C Library, and are not
   actually compiling the library itself.  This code is part of the GNU C
   Library, but also included in many other GNU distributions.  Compiling
   and linking in this code is a waste when using the GNU C library
   (especially if it is a shared library).  Rather than having every GNU
   program understand `configure --with-gnu-libc' and omit the object files,
   it is simpler to just do this in the source for each such file.  */</comment>

<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><operator pos:line="40" pos:column="5">!<pos:position pos:line="40" pos:column="6"/></operator><call><name pos:line="40" pos:column="6">defined<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><name pos:line="40" pos:column="14">__GNU_LIBRARY__<pos:position pos:line="40" pos:column="29"/></name></expr></argument>)<pos:position pos:line="40" pos:column="30"/></argument_list></call> <operator pos:line="40" pos:column="31">&amp;&amp;<pos:position pos:line="40" pos:column="41"/></operator> <operator pos:line="40" pos:column="34">!<pos:position pos:line="40" pos:column="35"/></operator><call><name pos:line="40" pos:column="35">defined<pos:position pos:line="40" pos:column="42"/></name><argument_list pos:line="40" pos:column="42">(<argument><expr><name pos:line="40" pos:column="43">STDC_HEADERS<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr></cpp:if>
<decl_stmt><decl><specifier pos:line="41" pos:column="1">extern<pos:position pos:line="41" pos:column="7"/></specifier> <type><name pos:line="41" pos:column="8">int<pos:position pos:line="41" pos:column="11"/></name></type> <name pos:line="41" pos:column="12">errno<pos:position pos:line="41" pos:column="17"/></name></decl>;<pos:position pos:line="41" pos:column="18"/></decl_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="44" pos:column="1">/* Match STRING against the filename pattern PATTERN, returning zero if
   it matches, nonzero if not.  */</comment>
<function><type><name pos:line="46" pos:column="1">int<pos:position pos:line="46" pos:column="4"/></name></type>
<name pos:line="47" pos:column="1">fnmatch<pos:position pos:line="47" pos:column="8"/></name> <parameter_list pos:line="47" pos:column="9">(<parameter><decl><type><name pos:line="47" pos:column="10">pattern<pos:position pos:line="47" pos:column="17"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="47" pos:column="19">string<pos:position pos:line="47" pos:column="25"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="47" pos:column="27">flags<pos:position pos:line="47" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="47" pos:column="33"/></parameter_list>
     <decl_stmt><decl><type><specifier pos:line="48" pos:column="6">const<pos:position pos:line="48" pos:column="11"/></specifier> <name pos:line="48" pos:column="12">char<pos:position pos:line="48" pos:column="16"/></name> <modifier pos:line="48" pos:column="17">*<pos:position pos:line="48" pos:column="18"/></modifier></type><name pos:line="48" pos:column="18">pattern<pos:position pos:line="48" pos:column="25"/></name></decl>;<pos:position pos:line="48" pos:column="26"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="49" pos:column="6">const<pos:position pos:line="49" pos:column="11"/></specifier> <name pos:line="49" pos:column="12">char<pos:position pos:line="49" pos:column="16"/></name> <modifier pos:line="49" pos:column="17">*<pos:position pos:line="49" pos:column="18"/></modifier></type><name pos:line="49" pos:column="18">string<pos:position pos:line="49" pos:column="24"/></name></decl>;<pos:position pos:line="49" pos:column="25"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="50" pos:column="6">int<pos:position pos:line="50" pos:column="9"/></name></type> <name pos:line="50" pos:column="10">flags<pos:position pos:line="50" pos:column="15"/></name></decl>;<pos:position pos:line="50" pos:column="16"/></decl_stmt>
<block pos:line="51" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="52" pos:column="3">register<pos:position pos:line="52" pos:column="11"/></specifier> <specifier pos:line="52" pos:column="12">const<pos:position pos:line="52" pos:column="17"/></specifier> <name pos:line="52" pos:column="18">char<pos:position pos:line="52" pos:column="22"/></name> <modifier pos:line="52" pos:column="23">*<pos:position pos:line="52" pos:column="24"/></modifier></type><name pos:line="52" pos:column="24">p<pos:position pos:line="52" pos:column="25"/></name> <init pos:line="52" pos:column="26">= <expr><name pos:line="52" pos:column="28">pattern<pos:position pos:line="52" pos:column="35"/></name></expr></init></decl>, <modifier pos:line="52" pos:column="37">*<pos:position pos:line="52" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="52" pos:column="38">n<pos:position pos:line="52" pos:column="39"/></name> <init pos:line="52" pos:column="40">= <expr><name pos:line="52" pos:column="42">string<pos:position pos:line="52" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="52" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="53" pos:column="3">register<pos:position pos:line="53" pos:column="11"/></specifier> <name pos:line="53" pos:column="12">char<pos:position pos:line="53" pos:column="16"/></name></type> <name pos:line="53" pos:column="17">c<pos:position pos:line="53" pos:column="18"/></name></decl>;<pos:position pos:line="53" pos:column="19"/></decl_stmt>

<comment type="block" pos:line="55" pos:column="1">/* Note that this evalutes C many times.  */</comment>
<cpp:define pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">define<pos:position pos:line="56" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="56" pos:column="9">FOLD<pos:position pos:line="56" pos:column="13"/></name><parameter_list pos:line="56" pos:column="13">(<parameter><type><name pos:line="56" pos:column="14">c<pos:position pos:line="56" pos:column="15"/></name></type></parameter>)<pos:position pos:line="56" pos:column="16"/></parameter_list></cpp:macro>	<cpp:value pos:line="56" pos:column="17">((flags &amp; FNM_CASEFOLD) &amp;&amp; ISUPPER (c) ? tolower (c) : (c))<pos:position pos:line="56" pos:column="76"/></cpp:value></cpp:define>

  <while pos:line="58" pos:column="3">while <condition pos:line="58" pos:column="9">(<expr><operator pos:line="58" pos:column="10">(<pos:position pos:line="58" pos:column="11"/></operator><name pos:line="58" pos:column="11">c<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <operator pos:line="58" pos:column="15">*<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="16">p<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">++<pos:position pos:line="58" pos:column="19"/></operator><operator pos:line="58" pos:column="19">)<pos:position pos:line="58" pos:column="20"/></operator> <operator pos:line="58" pos:column="21">!=<pos:position pos:line="58" pos:column="23"/></operator> <literal type="char" pos:line="58" pos:column="24">'\0'<pos:position pos:line="58" pos:column="28"/></literal></expr>)<pos:position pos:line="58" pos:column="29"/></condition>
    <block pos:line="59" pos:column="5">{
      <expr_stmt><expr><name pos:line="60" pos:column="7">c<pos:position pos:line="60" pos:column="8"/></name> <operator pos:line="60" pos:column="9">=<pos:position pos:line="60" pos:column="10"/></operator> <call><name pos:line="60" pos:column="11">FOLD<pos:position pos:line="60" pos:column="15"/></name> <argument_list pos:line="60" pos:column="16">(<argument><expr><name pos:line="60" pos:column="17">c<pos:position pos:line="60" pos:column="18"/></name></expr></argument>)<pos:position pos:line="60" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>

      <switch pos:line="62" pos:column="7">switch <condition pos:line="62" pos:column="14">(<expr><name pos:line="62" pos:column="15">c<pos:position pos:line="62" pos:column="16"/></name></expr>)<pos:position pos:line="62" pos:column="17"/></condition>
	<block pos:line="63" pos:column="9">{
	<case pos:line="64" pos:column="9">case <expr><literal type="char" pos:line="64" pos:column="14">'?'<pos:position pos:line="64" pos:column="17"/></literal></expr>:<pos:position pos:line="64" pos:column="18"/></case>
	  <if pos:line="65" pos:column="11">if <condition pos:line="65" pos:column="14">(<expr><operator pos:line="65" pos:column="15">*<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="16">n<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">==<pos:position pos:line="65" pos:column="20"/></operator> <literal type="char" pos:line="65" pos:column="21">'\0'<pos:position pos:line="65" pos:column="25"/></literal></expr>)<pos:position pos:line="65" pos:column="26"/></condition><then pos:line="65" pos:column="26">
	    <block type="pseudo"><return pos:line="66" pos:column="13">return <expr><name pos:line="66" pos:column="20">FNM_NOMATCH<pos:position pos:line="66" pos:column="31"/></name></expr>;<pos:position pos:line="66" pos:column="32"/></return></block></then>
	  <elseif pos:line="67" pos:column="11">else <if pos:line="67" pos:column="16">if <condition pos:line="67" pos:column="19">(<expr><operator pos:line="67" pos:column="20">(<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="21">flags<pos:position pos:line="67" pos:column="26"/></name> <operator pos:line="67" pos:column="27">&amp;<pos:position pos:line="67" pos:column="32"/></operator> <name pos:line="67" pos:column="29">FNM_FILE_NAME<pos:position pos:line="67" pos:column="42"/></name><operator pos:line="67" pos:column="42">)<pos:position pos:line="67" pos:column="43"/></operator> <operator pos:line="67" pos:column="44">&amp;&amp;<pos:position pos:line="67" pos:column="54"/></operator> <operator pos:line="67" pos:column="47">*<pos:position pos:line="67" pos:column="48"/></operator><name pos:line="67" pos:column="48">n<pos:position pos:line="67" pos:column="49"/></name> <operator pos:line="67" pos:column="50">==<pos:position pos:line="67" pos:column="52"/></operator> <literal type="char" pos:line="67" pos:column="53">'/'<pos:position pos:line="67" pos:column="56"/></literal></expr>)<pos:position pos:line="67" pos:column="57"/></condition><then pos:line="67" pos:column="57">
	    <block type="pseudo"><return pos:line="68" pos:column="13">return <expr><name pos:line="68" pos:column="20">FNM_NOMATCH<pos:position pos:line="68" pos:column="31"/></name></expr>;<pos:position pos:line="68" pos:column="32"/></return></block></then></if></elseif>
	  <elseif pos:line="69" pos:column="11">else <if pos:line="69" pos:column="16">if <condition pos:line="69" pos:column="19">(<expr><operator pos:line="69" pos:column="20">(<pos:position pos:line="69" pos:column="21"/></operator><name pos:line="69" pos:column="21">flags<pos:position pos:line="69" pos:column="26"/></name> <operator pos:line="69" pos:column="27">&amp;<pos:position pos:line="69" pos:column="32"/></operator> <name pos:line="69" pos:column="29">FNM_PERIOD<pos:position pos:line="69" pos:column="39"/></name><operator pos:line="69" pos:column="39">)<pos:position pos:line="69" pos:column="40"/></operator> <operator pos:line="69" pos:column="41">&amp;&amp;<pos:position pos:line="69" pos:column="51"/></operator> <operator pos:line="69" pos:column="44">*<pos:position pos:line="69" pos:column="45"/></operator><name pos:line="69" pos:column="45">n<pos:position pos:line="69" pos:column="46"/></name> <operator pos:line="69" pos:column="47">==<pos:position pos:line="69" pos:column="49"/></operator> <literal type="char" pos:line="69" pos:column="50">'.'<pos:position pos:line="69" pos:column="53"/></literal> <operator pos:line="69" pos:column="54">&amp;&amp;<pos:position pos:line="69" pos:column="64"/></operator>
		   <operator pos:line="70" pos:column="20">(<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="21">n<pos:position pos:line="70" pos:column="22"/></name> <operator pos:line="70" pos:column="23">==<pos:position pos:line="70" pos:column="25"/></operator> <name pos:line="70" pos:column="26">string<pos:position pos:line="70" pos:column="32"/></name> <operator pos:line="70" pos:column="33">||<pos:position pos:line="70" pos:column="35"/></operator> <operator pos:line="70" pos:column="36">(<pos:position pos:line="70" pos:column="37"/></operator><operator pos:line="70" pos:column="37">(<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="38">flags<pos:position pos:line="70" pos:column="43"/></name> <operator pos:line="70" pos:column="44">&amp;<pos:position pos:line="70" pos:column="49"/></operator> <name pos:line="70" pos:column="46">FNM_FILE_NAME<pos:position pos:line="70" pos:column="59"/></name><operator pos:line="70" pos:column="59">)<pos:position pos:line="70" pos:column="60"/></operator> <operator pos:line="70" pos:column="61">&amp;&amp;<pos:position pos:line="70" pos:column="71"/></operator> <name><name pos:line="70" pos:column="64">n<pos:position pos:line="70" pos:column="65"/></name><index pos:line="70" pos:column="65">[<expr><operator pos:line="70" pos:column="66">-<pos:position pos:line="70" pos:column="67"/></operator><literal type="number" pos:line="70" pos:column="67">1<pos:position pos:line="70" pos:column="68"/></literal></expr>]<pos:position pos:line="70" pos:column="69"/></index></name> <operator pos:line="70" pos:column="70">==<pos:position pos:line="70" pos:column="72"/></operator> <literal type="char" pos:line="70" pos:column="73">'/'<pos:position pos:line="70" pos:column="76"/></literal><operator pos:line="70" pos:column="76">)<pos:position pos:line="70" pos:column="77"/></operator><operator pos:line="70" pos:column="77">)<pos:position pos:line="70" pos:column="78"/></operator></expr>)<pos:position pos:line="70" pos:column="79"/></condition><then pos:line="70" pos:column="79">
	    <block type="pseudo"><return pos:line="71" pos:column="13">return <expr><name pos:line="71" pos:column="20">FNM_NOMATCH<pos:position pos:line="71" pos:column="31"/></name></expr>;<pos:position pos:line="71" pos:column="32"/></return></block></then></if></elseif></if>
	  <break pos:line="72" pos:column="11">break;<pos:position pos:line="72" pos:column="17"/></break>

	<case pos:line="74" pos:column="9">case <expr><literal type="char" pos:line="74" pos:column="14">'\\'<pos:position pos:line="74" pos:column="18"/></literal></expr>:<pos:position pos:line="74" pos:column="19"/></case>
	  <if pos:line="75" pos:column="11">if <condition pos:line="75" pos:column="14">(<expr><operator pos:line="75" pos:column="15">!<pos:position pos:line="75" pos:column="16"/></operator><operator pos:line="75" pos:column="16">(<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="17">flags<pos:position pos:line="75" pos:column="22"/></name> <operator pos:line="75" pos:column="23">&amp;<pos:position pos:line="75" pos:column="28"/></operator> <name pos:line="75" pos:column="25">FNM_NOESCAPE<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">)<pos:position pos:line="75" pos:column="38"/></operator></expr>)<pos:position pos:line="75" pos:column="39"/></condition><then pos:line="75" pos:column="39">
	    <block pos:line="76" pos:column="13">{
	      <expr_stmt><expr><name pos:line="77" pos:column="15">c<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">=<pos:position pos:line="77" pos:column="18"/></operator> <operator pos:line="77" pos:column="19">*<pos:position pos:line="77" pos:column="20"/></operator><name pos:line="77" pos:column="20">p<pos:position pos:line="77" pos:column="21"/></name><operator pos:line="77" pos:column="21">++<pos:position pos:line="77" pos:column="23"/></operator></expr>;<pos:position pos:line="77" pos:column="24"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="78" pos:column="15">c<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <call><name pos:line="78" pos:column="19">FOLD<pos:position pos:line="78" pos:column="23"/></name> <argument_list pos:line="78" pos:column="24">(<argument><expr><name pos:line="78" pos:column="25">c<pos:position pos:line="78" pos:column="26"/></name></expr></argument>)<pos:position pos:line="78" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="28"/></expr_stmt>
	    }<pos:position pos:line="79" pos:column="14"/></block></then></if>
	  <if pos:line="80" pos:column="11">if <condition pos:line="80" pos:column="14">(<expr><call><name pos:line="80" pos:column="15">FOLD<pos:position pos:line="80" pos:column="19"/></name> <argument_list pos:line="80" pos:column="20">(<argument><expr><operator pos:line="80" pos:column="21">*<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">n<pos:position pos:line="80" pos:column="23"/></name></expr></argument>)<pos:position pos:line="80" pos:column="24"/></argument_list></call> <operator pos:line="80" pos:column="25">!=<pos:position pos:line="80" pos:column="27"/></operator> <name pos:line="80" pos:column="28">c<pos:position pos:line="80" pos:column="29"/></name></expr>)<pos:position pos:line="80" pos:column="30"/></condition><then pos:line="80" pos:column="30">
	    <block type="pseudo"><return pos:line="81" pos:column="13">return <expr><name pos:line="81" pos:column="20">FNM_NOMATCH<pos:position pos:line="81" pos:column="31"/></name></expr>;<pos:position pos:line="81" pos:column="32"/></return></block></then></if>
	  <break pos:line="82" pos:column="11">break;<pos:position pos:line="82" pos:column="17"/></break>

	<case pos:line="84" pos:column="9">case <expr><literal type="char" pos:line="84" pos:column="14">'*'<pos:position pos:line="84" pos:column="17"/></literal></expr>:<pos:position pos:line="84" pos:column="18"/></case>
	  <if pos:line="85" pos:column="11">if <condition pos:line="85" pos:column="14">(<expr><operator pos:line="85" pos:column="15">(<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="16">flags<pos:position pos:line="85" pos:column="21"/></name> <operator pos:line="85" pos:column="22">&amp;<pos:position pos:line="85" pos:column="27"/></operator> <name pos:line="85" pos:column="24">FNM_PERIOD<pos:position pos:line="85" pos:column="34"/></name><operator pos:line="85" pos:column="34">)<pos:position pos:line="85" pos:column="35"/></operator> <operator pos:line="85" pos:column="36">&amp;&amp;<pos:position pos:line="85" pos:column="46"/></operator> <operator pos:line="85" pos:column="39">*<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="40">n<pos:position pos:line="85" pos:column="41"/></name> <operator pos:line="85" pos:column="42">==<pos:position pos:line="85" pos:column="44"/></operator> <literal type="char" pos:line="85" pos:column="45">'.'<pos:position pos:line="85" pos:column="48"/></literal> <operator pos:line="85" pos:column="49">&amp;&amp;<pos:position pos:line="85" pos:column="59"/></operator>
	      <operator pos:line="86" pos:column="15">(<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="16">n<pos:position pos:line="86" pos:column="17"/></name> <operator pos:line="86" pos:column="18">==<pos:position pos:line="86" pos:column="20"/></operator> <name pos:line="86" pos:column="21">string<pos:position pos:line="86" pos:column="27"/></name> <operator pos:line="86" pos:column="28">||<pos:position pos:line="86" pos:column="30"/></operator> <operator pos:line="86" pos:column="31">(<pos:position pos:line="86" pos:column="32"/></operator><operator pos:line="86" pos:column="32">(<pos:position pos:line="86" pos:column="33"/></operator><name pos:line="86" pos:column="33">flags<pos:position pos:line="86" pos:column="38"/></name> <operator pos:line="86" pos:column="39">&amp;<pos:position pos:line="86" pos:column="44"/></operator> <name pos:line="86" pos:column="41">FNM_FILE_NAME<pos:position pos:line="86" pos:column="54"/></name><operator pos:line="86" pos:column="54">)<pos:position pos:line="86" pos:column="55"/></operator> <operator pos:line="86" pos:column="56">&amp;&amp;<pos:position pos:line="86" pos:column="66"/></operator> <name><name pos:line="86" pos:column="59">n<pos:position pos:line="86" pos:column="60"/></name><index pos:line="86" pos:column="60">[<expr><operator pos:line="86" pos:column="61">-<pos:position pos:line="86" pos:column="62"/></operator><literal type="number" pos:line="86" pos:column="62">1<pos:position pos:line="86" pos:column="63"/></literal></expr>]<pos:position pos:line="86" pos:column="64"/></index></name> <operator pos:line="86" pos:column="65">==<pos:position pos:line="86" pos:column="67"/></operator> <literal type="char" pos:line="86" pos:column="68">'/'<pos:position pos:line="86" pos:column="71"/></literal><operator pos:line="86" pos:column="71">)<pos:position pos:line="86" pos:column="72"/></operator><operator pos:line="86" pos:column="72">)<pos:position pos:line="86" pos:column="73"/></operator></expr>)<pos:position pos:line="86" pos:column="74"/></condition><then pos:line="86" pos:column="74">
	    <block type="pseudo"><return pos:line="87" pos:column="13">return <expr><name pos:line="87" pos:column="20">FNM_NOMATCH<pos:position pos:line="87" pos:column="31"/></name></expr>;<pos:position pos:line="87" pos:column="32"/></return></block></then></if>

	  <for pos:line="89" pos:column="11">for <control pos:line="89" pos:column="15">(<init><expr><name pos:line="89" pos:column="16">c<pos:position pos:line="89" pos:column="17"/></name> <operator pos:line="89" pos:column="18">=<pos:position pos:line="89" pos:column="19"/></operator> <operator pos:line="89" pos:column="20">*<pos:position pos:line="89" pos:column="21"/></operator><name pos:line="89" pos:column="21">p<pos:position pos:line="89" pos:column="22"/></name><operator pos:line="89" pos:column="22">++<pos:position pos:line="89" pos:column="24"/></operator></expr>;<pos:position pos:line="89" pos:column="25"/></init> <condition><expr><name pos:line="89" pos:column="26">c<pos:position pos:line="89" pos:column="27"/></name> <operator pos:line="89" pos:column="28">==<pos:position pos:line="89" pos:column="30"/></operator> <literal type="char" pos:line="89" pos:column="31">'?'<pos:position pos:line="89" pos:column="34"/></literal> <operator pos:line="89" pos:column="35">||<pos:position pos:line="89" pos:column="37"/></operator> <name pos:line="89" pos:column="38">c<pos:position pos:line="89" pos:column="39"/></name> <operator pos:line="89" pos:column="40">==<pos:position pos:line="89" pos:column="42"/></operator> <literal type="char" pos:line="89" pos:column="43">'*'<pos:position pos:line="89" pos:column="46"/></literal></expr>;<pos:position pos:line="89" pos:column="47"/></condition> <incr><expr><name pos:line="89" pos:column="48">c<pos:position pos:line="89" pos:column="49"/></name> <operator pos:line="89" pos:column="50">=<pos:position pos:line="89" pos:column="51"/></operator> <operator pos:line="89" pos:column="52">*<pos:position pos:line="89" pos:column="53"/></operator><name pos:line="89" pos:column="53">p<pos:position pos:line="89" pos:column="54"/></name><operator pos:line="89" pos:column="54">++<pos:position pos:line="89" pos:column="56"/></operator></expr><operator pos:line="89" pos:column="56">,<pos:position pos:line="89" pos:column="57"/></operator> <expr><operator pos:line="89" pos:column="58">++<pos:position pos:line="89" pos:column="60"/></operator><name pos:line="89" pos:column="60">n<pos:position pos:line="89" pos:column="61"/></name></expr></incr>)<pos:position pos:line="89" pos:column="62"/></control>
	    <block type="pseudo"><if pos:line="90" pos:column="13">if <condition pos:line="90" pos:column="16">(<expr><operator pos:line="90" pos:column="17">(<pos:position pos:line="90" pos:column="18"/></operator><operator pos:line="90" pos:column="18">(<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="19">flags<pos:position pos:line="90" pos:column="24"/></name> <operator pos:line="90" pos:column="25">&amp;<pos:position pos:line="90" pos:column="30"/></operator> <name pos:line="90" pos:column="27">FNM_FILE_NAME<pos:position pos:line="90" pos:column="40"/></name><operator pos:line="90" pos:column="40">)<pos:position pos:line="90" pos:column="41"/></operator> <operator pos:line="90" pos:column="42">&amp;&amp;<pos:position pos:line="90" pos:column="52"/></operator> <operator pos:line="90" pos:column="45">*<pos:position pos:line="90" pos:column="46"/></operator><name pos:line="90" pos:column="46">n<pos:position pos:line="90" pos:column="47"/></name> <operator pos:line="90" pos:column="48">==<pos:position pos:line="90" pos:column="50"/></operator> <literal type="char" pos:line="90" pos:column="51">'/'<pos:position pos:line="90" pos:column="54"/></literal><operator pos:line="90" pos:column="54">)<pos:position pos:line="90" pos:column="55"/></operator> <operator pos:line="90" pos:column="56">||<pos:position pos:line="90" pos:column="58"/></operator>
		<operator pos:line="91" pos:column="17">(<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="18">c<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">==<pos:position pos:line="91" pos:column="22"/></operator> <literal type="char" pos:line="91" pos:column="23">'?'<pos:position pos:line="91" pos:column="26"/></literal> <operator pos:line="91" pos:column="27">&amp;&amp;<pos:position pos:line="91" pos:column="37"/></operator> <operator pos:line="91" pos:column="30">*<pos:position pos:line="91" pos:column="31"/></operator><name pos:line="91" pos:column="31">n<pos:position pos:line="91" pos:column="32"/></name> <operator pos:line="91" pos:column="33">==<pos:position pos:line="91" pos:column="35"/></operator> <literal type="char" pos:line="91" pos:column="36">'\0'<pos:position pos:line="91" pos:column="40"/></literal><operator pos:line="91" pos:column="40">)<pos:position pos:line="91" pos:column="41"/></operator></expr>)<pos:position pos:line="91" pos:column="42"/></condition><then pos:line="91" pos:column="42">
	      <block type="pseudo"><return pos:line="92" pos:column="15">return <expr><name pos:line="92" pos:column="22">FNM_NOMATCH<pos:position pos:line="92" pos:column="33"/></name></expr>;<pos:position pos:line="92" pos:column="34"/></return></block></then></if></block></for>

	  <if pos:line="94" pos:column="11">if <condition pos:line="94" pos:column="14">(<expr><name pos:line="94" pos:column="15">c<pos:position pos:line="94" pos:column="16"/></name> <operator pos:line="94" pos:column="17">==<pos:position pos:line="94" pos:column="19"/></operator> <literal type="char" pos:line="94" pos:column="20">'\0'<pos:position pos:line="94" pos:column="24"/></literal></expr>)<pos:position pos:line="94" pos:column="25"/></condition><then pos:line="94" pos:column="25">
	    <block type="pseudo"><return pos:line="95" pos:column="13">return <expr><literal type="number" pos:line="95" pos:column="20">0<pos:position pos:line="95" pos:column="21"/></literal></expr>;<pos:position pos:line="95" pos:column="22"/></return></block></then></if>

	  <block pos:line="97" pos:column="11">{
	    <decl_stmt><decl><type><name pos:line="98" pos:column="13">char<pos:position pos:line="98" pos:column="17"/></name></type> <name pos:line="98" pos:column="18">c1<pos:position pos:line="98" pos:column="20"/></name> <init pos:line="98" pos:column="21">= <expr><ternary><condition><expr><operator pos:line="98" pos:column="23">(<pos:position pos:line="98" pos:column="24"/></operator><operator pos:line="98" pos:column="24">!<pos:position pos:line="98" pos:column="25"/></operator><operator pos:line="98" pos:column="25">(<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="26">flags<pos:position pos:line="98" pos:column="31"/></name> <operator pos:line="98" pos:column="32">&amp;<pos:position pos:line="98" pos:column="37"/></operator> <name pos:line="98" pos:column="34">FNM_NOESCAPE<pos:position pos:line="98" pos:column="46"/></name><operator pos:line="98" pos:column="46">)<pos:position pos:line="98" pos:column="47"/></operator> <operator pos:line="98" pos:column="48">&amp;&amp;<pos:position pos:line="98" pos:column="58"/></operator> <name pos:line="98" pos:column="51">c<pos:position pos:line="98" pos:column="52"/></name> <operator pos:line="98" pos:column="53">==<pos:position pos:line="98" pos:column="55"/></operator> <literal type="char" pos:line="98" pos:column="56">'\\'<pos:position pos:line="98" pos:column="60"/></literal><operator pos:line="98" pos:column="60">)<pos:position pos:line="98" pos:column="61"/></operator></expr> ?<pos:position pos:line="98" pos:column="63"/></condition><then pos:line="98" pos:column="63"> <expr><operator pos:line="98" pos:column="64">*<pos:position pos:line="98" pos:column="65"/></operator><name pos:line="98" pos:column="65">p<pos:position pos:line="98" pos:column="66"/></name></expr> <pos:position pos:line="98" pos:column="67"/></then><else pos:line="98" pos:column="67">: <expr><name pos:line="98" pos:column="69">c<pos:position pos:line="98" pos:column="70"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="98" pos:column="71"/></decl_stmt>
	    <expr_stmt><expr><name pos:line="99" pos:column="13">c1<pos:position pos:line="99" pos:column="15"/></name> <operator pos:line="99" pos:column="16">=<pos:position pos:line="99" pos:column="17"/></operator> <call><name pos:line="99" pos:column="18">FOLD<pos:position pos:line="99" pos:column="22"/></name> <argument_list pos:line="99" pos:column="23">(<argument><expr><name pos:line="99" pos:column="24">c1<pos:position pos:line="99" pos:column="26"/></name></expr></argument>)<pos:position pos:line="99" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt>
	    <for pos:line="100" pos:column="13">for <control pos:line="100" pos:column="17">(<init><expr><operator pos:line="100" pos:column="18">--<pos:position pos:line="100" pos:column="20"/></operator><name pos:line="100" pos:column="20">p<pos:position pos:line="100" pos:column="21"/></name></expr>;<pos:position pos:line="100" pos:column="22"/></init> <condition><expr><operator pos:line="100" pos:column="23">*<pos:position pos:line="100" pos:column="24"/></operator><name pos:line="100" pos:column="24">n<pos:position pos:line="100" pos:column="25"/></name> <operator pos:line="100" pos:column="26">!=<pos:position pos:line="100" pos:column="28"/></operator> <literal type="char" pos:line="100" pos:column="29">'\0'<pos:position pos:line="100" pos:column="33"/></literal></expr>;<pos:position pos:line="100" pos:column="34"/></condition> <incr><expr><operator pos:line="100" pos:column="35">++<pos:position pos:line="100" pos:column="37"/></operator><name pos:line="100" pos:column="37">n<pos:position pos:line="100" pos:column="38"/></name></expr></incr>)<pos:position pos:line="100" pos:column="39"/></control>
	      <block type="pseudo"><if pos:line="101" pos:column="15">if <condition pos:line="101" pos:column="18">(<expr><operator pos:line="101" pos:column="19">(<pos:position pos:line="101" pos:column="20"/></operator><name pos:line="101" pos:column="20">c<pos:position pos:line="101" pos:column="21"/></name> <operator pos:line="101" pos:column="22">==<pos:position pos:line="101" pos:column="24"/></operator> <literal type="char" pos:line="101" pos:column="25">'['<pos:position pos:line="101" pos:column="28"/></literal> <operator pos:line="101" pos:column="29">||<pos:position pos:line="101" pos:column="31"/></operator> <call><name pos:line="101" pos:column="32">FOLD<pos:position pos:line="101" pos:column="36"/></name> <argument_list pos:line="101" pos:column="37">(<argument><expr><operator pos:line="101" pos:column="38">*<pos:position pos:line="101" pos:column="39"/></operator><name pos:line="101" pos:column="39">n<pos:position pos:line="101" pos:column="40"/></name></expr></argument>)<pos:position pos:line="101" pos:column="41"/></argument_list></call> <operator pos:line="101" pos:column="42">==<pos:position pos:line="101" pos:column="44"/></operator> <name pos:line="101" pos:column="45">c1<pos:position pos:line="101" pos:column="47"/></name><operator pos:line="101" pos:column="47">)<pos:position pos:line="101" pos:column="48"/></operator> <operator pos:line="101" pos:column="49">&amp;&amp;<pos:position pos:line="101" pos:column="59"/></operator>
		  <call><name pos:line="102" pos:column="19">fnmatch<pos:position pos:line="102" pos:column="26"/></name> <argument_list pos:line="102" pos:column="27">(<argument><expr><name pos:line="102" pos:column="28">p<pos:position pos:line="102" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="31">n<pos:position pos:line="102" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="34">flags<pos:position pos:line="102" pos:column="39"/></name> <operator pos:line="102" pos:column="40">&amp;<pos:position pos:line="102" pos:column="45"/></operator> <operator pos:line="102" pos:column="42">~<pos:position pos:line="102" pos:column="43"/></operator><name pos:line="102" pos:column="43">FNM_PERIOD<pos:position pos:line="102" pos:column="53"/></name></expr></argument>)<pos:position pos:line="102" pos:column="54"/></argument_list></call> <operator pos:line="102" pos:column="55">==<pos:position pos:line="102" pos:column="57"/></operator> <literal type="number" pos:line="102" pos:column="58">0<pos:position pos:line="102" pos:column="59"/></literal></expr>)<pos:position pos:line="102" pos:column="60"/></condition><then pos:line="102" pos:column="60">
		<block type="pseudo"><return pos:line="103" pos:column="17">return <expr><literal type="number" pos:line="103" pos:column="24">0<pos:position pos:line="103" pos:column="25"/></literal></expr>;<pos:position pos:line="103" pos:column="26"/></return></block></then></if></block></for>
	    <return pos:line="104" pos:column="13">return <expr><name pos:line="104" pos:column="20">FNM_NOMATCH<pos:position pos:line="104" pos:column="31"/></name></expr>;<pos:position pos:line="104" pos:column="32"/></return>
	  }<pos:position pos:line="105" pos:column="12"/></block>

	<case pos:line="107" pos:column="9">case <expr><literal type="char" pos:line="107" pos:column="14">'['<pos:position pos:line="107" pos:column="17"/></literal></expr>:<pos:position pos:line="107" pos:column="18"/></case>
	  <block pos:line="108" pos:column="11">{
	    <comment type="block" pos:line="109" pos:column="13">/* Nonzero if the sense of the character class is inverted.  */</comment>
	    <decl_stmt><decl><type><specifier pos:line="110" pos:column="13">register<pos:position pos:line="110" pos:column="21"/></specifier> <name pos:line="110" pos:column="22">int<pos:position pos:line="110" pos:column="25"/></name></type> <name pos:line="110" pos:column="26">not<pos:position pos:line="110" pos:column="29"/></name></decl>;<pos:position pos:line="110" pos:column="30"/></decl_stmt>

	    <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><operator pos:line="112" pos:column="17">*<pos:position pos:line="112" pos:column="18"/></operator><name pos:line="112" pos:column="18">n<pos:position pos:line="112" pos:column="19"/></name> <operator pos:line="112" pos:column="20">==<pos:position pos:line="112" pos:column="22"/></operator> <literal type="char" pos:line="112" pos:column="23">'\0'<pos:position pos:line="112" pos:column="27"/></literal></expr>)<pos:position pos:line="112" pos:column="28"/></condition><then pos:line="112" pos:column="28">
	      <block type="pseudo"><return pos:line="113" pos:column="15">return <expr><name pos:line="113" pos:column="22">FNM_NOMATCH<pos:position pos:line="113" pos:column="33"/></name></expr>;<pos:position pos:line="113" pos:column="34"/></return></block></then></if>

	    <if pos:line="115" pos:column="13">if <condition pos:line="115" pos:column="16">(<expr><operator pos:line="115" pos:column="17">(<pos:position pos:line="115" pos:column="18"/></operator><name pos:line="115" pos:column="18">flags<pos:position pos:line="115" pos:column="23"/></name> <operator pos:line="115" pos:column="24">&amp;<pos:position pos:line="115" pos:column="29"/></operator> <name pos:line="115" pos:column="26">FNM_PERIOD<pos:position pos:line="115" pos:column="36"/></name><operator pos:line="115" pos:column="36">)<pos:position pos:line="115" pos:column="37"/></operator> <operator pos:line="115" pos:column="38">&amp;&amp;<pos:position pos:line="115" pos:column="48"/></operator> <operator pos:line="115" pos:column="41">*<pos:position pos:line="115" pos:column="42"/></operator><name pos:line="115" pos:column="42">n<pos:position pos:line="115" pos:column="43"/></name> <operator pos:line="115" pos:column="44">==<pos:position pos:line="115" pos:column="46"/></operator> <literal type="char" pos:line="115" pos:column="47">'.'<pos:position pos:line="115" pos:column="50"/></literal> <operator pos:line="115" pos:column="51">&amp;&amp;<pos:position pos:line="115" pos:column="61"/></operator>
		<operator pos:line="116" pos:column="17">(<pos:position pos:line="116" pos:column="18"/></operator><name pos:line="116" pos:column="18">n<pos:position pos:line="116" pos:column="19"/></name> <operator pos:line="116" pos:column="20">==<pos:position pos:line="116" pos:column="22"/></operator> <name pos:line="116" pos:column="23">string<pos:position pos:line="116" pos:column="29"/></name> <operator pos:line="116" pos:column="30">||<pos:position pos:line="116" pos:column="32"/></operator> <operator pos:line="116" pos:column="33">(<pos:position pos:line="116" pos:column="34"/></operator><operator pos:line="116" pos:column="34">(<pos:position pos:line="116" pos:column="35"/></operator><name pos:line="116" pos:column="35">flags<pos:position pos:line="116" pos:column="40"/></name> <operator pos:line="116" pos:column="41">&amp;<pos:position pos:line="116" pos:column="46"/></operator> <name pos:line="116" pos:column="43">FNM_FILE_NAME<pos:position pos:line="116" pos:column="56"/></name><operator pos:line="116" pos:column="56">)<pos:position pos:line="116" pos:column="57"/></operator> <operator pos:line="116" pos:column="58">&amp;&amp;<pos:position pos:line="116" pos:column="68"/></operator> <name><name pos:line="116" pos:column="61">n<pos:position pos:line="116" pos:column="62"/></name><index pos:line="116" pos:column="62">[<expr><operator pos:line="116" pos:column="63">-<pos:position pos:line="116" pos:column="64"/></operator><literal type="number" pos:line="116" pos:column="64">1<pos:position pos:line="116" pos:column="65"/></literal></expr>]<pos:position pos:line="116" pos:column="66"/></index></name> <operator pos:line="116" pos:column="67">==<pos:position pos:line="116" pos:column="69"/></operator> <literal type="char" pos:line="116" pos:column="70">'/'<pos:position pos:line="116" pos:column="73"/></literal><operator pos:line="116" pos:column="73">)<pos:position pos:line="116" pos:column="74"/></operator><operator pos:line="116" pos:column="74">)<pos:position pos:line="116" pos:column="75"/></operator></expr>)<pos:position pos:line="116" pos:column="76"/></condition><then pos:line="116" pos:column="76">
	      <block type="pseudo"><return pos:line="117" pos:column="15">return <expr><name pos:line="117" pos:column="22">FNM_NOMATCH<pos:position pos:line="117" pos:column="33"/></name></expr>;<pos:position pos:line="117" pos:column="34"/></return></block></then></if>

	    <expr_stmt><expr><name pos:line="119" pos:column="13">not<pos:position pos:line="119" pos:column="16"/></name> <operator pos:line="119" pos:column="17">=<pos:position pos:line="119" pos:column="18"/></operator> <operator pos:line="119" pos:column="19">(<pos:position pos:line="119" pos:column="20"/></operator><operator pos:line="119" pos:column="20">*<pos:position pos:line="119" pos:column="21"/></operator><name pos:line="119" pos:column="21">p<pos:position pos:line="119" pos:column="22"/></name> <operator pos:line="119" pos:column="23">==<pos:position pos:line="119" pos:column="25"/></operator> <literal type="char" pos:line="119" pos:column="26">'!'<pos:position pos:line="119" pos:column="29"/></literal> <operator pos:line="119" pos:column="30">||<pos:position pos:line="119" pos:column="32"/></operator> <operator pos:line="119" pos:column="33">*<pos:position pos:line="119" pos:column="34"/></operator><name pos:line="119" pos:column="34">p<pos:position pos:line="119" pos:column="35"/></name> <operator pos:line="119" pos:column="36">==<pos:position pos:line="119" pos:column="38"/></operator> <literal type="char" pos:line="119" pos:column="39">'^'<pos:position pos:line="119" pos:column="42"/></literal><operator pos:line="119" pos:column="42">)<pos:position pos:line="119" pos:column="43"/></operator></expr>;<pos:position pos:line="119" pos:column="44"/></expr_stmt>
	    <if pos:line="120" pos:column="13">if <condition pos:line="120" pos:column="16">(<expr><name pos:line="120" pos:column="17">not<pos:position pos:line="120" pos:column="20"/></name></expr>)<pos:position pos:line="120" pos:column="21"/></condition><then pos:line="120" pos:column="21">
	      <block type="pseudo"><expr_stmt><expr><operator pos:line="121" pos:column="15">++<pos:position pos:line="121" pos:column="17"/></operator><name pos:line="121" pos:column="17">p<pos:position pos:line="121" pos:column="18"/></name></expr>;<pos:position pos:line="121" pos:column="19"/></expr_stmt></block></then></if>

	    <expr_stmt><expr><name pos:line="123" pos:column="13">c<pos:position pos:line="123" pos:column="14"/></name> <operator pos:line="123" pos:column="15">=<pos:position pos:line="123" pos:column="16"/></operator> <operator pos:line="123" pos:column="17">*<pos:position pos:line="123" pos:column="18"/></operator><name pos:line="123" pos:column="18">p<pos:position pos:line="123" pos:column="19"/></name><operator pos:line="123" pos:column="19">++<pos:position pos:line="123" pos:column="21"/></operator></expr>;<pos:position pos:line="123" pos:column="22"/></expr_stmt>
	    <for pos:line="124" pos:column="13">for <control pos:line="124" pos:column="17">(<init pos:line="124" pos:column="18">;<pos:position pos:line="124" pos:column="19"/></init><condition pos:line="124" pos:column="19">;<pos:position pos:line="124" pos:column="20"/></condition><incr/>)<pos:position pos:line="124" pos:column="21"/></control>
	      <block pos:line="125" pos:column="15">{
		<decl_stmt><decl><type><specifier pos:line="126" pos:column="17">register<pos:position pos:line="126" pos:column="25"/></specifier> <name pos:line="126" pos:column="26">char<pos:position pos:line="126" pos:column="30"/></name></type> <name pos:line="126" pos:column="31">cstart<pos:position pos:line="126" pos:column="37"/></name> <init pos:line="126" pos:column="38">= <expr><name pos:line="126" pos:column="40">c<pos:position pos:line="126" pos:column="41"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="126" pos:column="43">cend<pos:position pos:line="126" pos:column="47"/></name> <init pos:line="126" pos:column="48">= <expr><name pos:line="126" pos:column="50">c<pos:position pos:line="126" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="126" pos:column="52"/></decl_stmt>

		<if pos:line="128" pos:column="17">if <condition pos:line="128" pos:column="20">(<expr><operator pos:line="128" pos:column="21">!<pos:position pos:line="128" pos:column="22"/></operator><operator pos:line="128" pos:column="22">(<pos:position pos:line="128" pos:column="23"/></operator><name pos:line="128" pos:column="23">flags<pos:position pos:line="128" pos:column="28"/></name> <operator pos:line="128" pos:column="29">&amp;<pos:position pos:line="128" pos:column="34"/></operator> <name pos:line="128" pos:column="31">FNM_NOESCAPE<pos:position pos:line="128" pos:column="43"/></name><operator pos:line="128" pos:column="43">)<pos:position pos:line="128" pos:column="44"/></operator> <operator pos:line="128" pos:column="45">&amp;&amp;<pos:position pos:line="128" pos:column="55"/></operator> <name pos:line="128" pos:column="48">c<pos:position pos:line="128" pos:column="49"/></name> <operator pos:line="128" pos:column="50">==<pos:position pos:line="128" pos:column="52"/></operator> <literal type="char" pos:line="128" pos:column="53">'\\'<pos:position pos:line="128" pos:column="57"/></literal></expr>)<pos:position pos:line="128" pos:column="58"/></condition><then pos:line="128" pos:column="58">
		  <block type="pseudo"><expr_stmt><expr><name pos:line="129" pos:column="19">cstart<pos:position pos:line="129" pos:column="25"/></name> <operator pos:line="129" pos:column="26">=<pos:position pos:line="129" pos:column="27"/></operator> <name pos:line="129" pos:column="28">cend<pos:position pos:line="129" pos:column="32"/></name> <operator pos:line="129" pos:column="33">=<pos:position pos:line="129" pos:column="34"/></operator> <operator pos:line="129" pos:column="35">*<pos:position pos:line="129" pos:column="36"/></operator><name pos:line="129" pos:column="36">p<pos:position pos:line="129" pos:column="37"/></name><operator pos:line="129" pos:column="37">++<pos:position pos:line="129" pos:column="39"/></operator></expr>;<pos:position pos:line="129" pos:column="40"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="131" pos:column="17">cstart<pos:position pos:line="131" pos:column="23"/></name> <operator pos:line="131" pos:column="24">=<pos:position pos:line="131" pos:column="25"/></operator> <name pos:line="131" pos:column="26">cend<pos:position pos:line="131" pos:column="30"/></name> <operator pos:line="131" pos:column="31">=<pos:position pos:line="131" pos:column="32"/></operator> <call><name pos:line="131" pos:column="33">FOLD<pos:position pos:line="131" pos:column="37"/></name> <argument_list pos:line="131" pos:column="38">(<argument><expr><name pos:line="131" pos:column="39">cstart<pos:position pos:line="131" pos:column="45"/></name></expr></argument>)<pos:position pos:line="131" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="47"/></expr_stmt>

		<if pos:line="133" pos:column="17">if <condition pos:line="133" pos:column="20">(<expr><name pos:line="133" pos:column="21">c<pos:position pos:line="133" pos:column="22"/></name> <operator pos:line="133" pos:column="23">==<pos:position pos:line="133" pos:column="25"/></operator> <literal type="char" pos:line="133" pos:column="26">'\0'<pos:position pos:line="133" pos:column="30"/></literal></expr>)<pos:position pos:line="133" pos:column="31"/></condition><then pos:line="133" pos:column="31">
		  <comment type="block" pos:line="134" pos:column="19">/* [ (unterminated) loses.  */</comment>
		  <block type="pseudo"><return pos:line="135" pos:column="19">return <expr><name pos:line="135" pos:column="26">FNM_NOMATCH<pos:position pos:line="135" pos:column="37"/></name></expr>;<pos:position pos:line="135" pos:column="38"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="137" pos:column="17">c<pos:position pos:line="137" pos:column="18"/></name> <operator pos:line="137" pos:column="19">=<pos:position pos:line="137" pos:column="20"/></operator> <operator pos:line="137" pos:column="21">*<pos:position pos:line="137" pos:column="22"/></operator><name pos:line="137" pos:column="22">p<pos:position pos:line="137" pos:column="23"/></name><operator pos:line="137" pos:column="23">++<pos:position pos:line="137" pos:column="25"/></operator></expr>;<pos:position pos:line="137" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="138" pos:column="17">c<pos:position pos:line="138" pos:column="18"/></name> <operator pos:line="138" pos:column="19">=<pos:position pos:line="138" pos:column="20"/></operator> <call><name pos:line="138" pos:column="21">FOLD<pos:position pos:line="138" pos:column="25"/></name> <argument_list pos:line="138" pos:column="26">(<argument><expr><name pos:line="138" pos:column="27">c<pos:position pos:line="138" pos:column="28"/></name></expr></argument>)<pos:position pos:line="138" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="30"/></expr_stmt>

		<if pos:line="140" pos:column="17">if <condition pos:line="140" pos:column="20">(<expr><operator pos:line="140" pos:column="21">(<pos:position pos:line="140" pos:column="22"/></operator><name pos:line="140" pos:column="22">flags<pos:position pos:line="140" pos:column="27"/></name> <operator pos:line="140" pos:column="28">&amp;<pos:position pos:line="140" pos:column="33"/></operator> <name pos:line="140" pos:column="30">FNM_FILE_NAME<pos:position pos:line="140" pos:column="43"/></name><operator pos:line="140" pos:column="43">)<pos:position pos:line="140" pos:column="44"/></operator> <operator pos:line="140" pos:column="45">&amp;&amp;<pos:position pos:line="140" pos:column="55"/></operator> <name pos:line="140" pos:column="48">c<pos:position pos:line="140" pos:column="49"/></name> <operator pos:line="140" pos:column="50">==<pos:position pos:line="140" pos:column="52"/></operator> <literal type="char" pos:line="140" pos:column="53">'/'<pos:position pos:line="140" pos:column="56"/></literal></expr>)<pos:position pos:line="140" pos:column="57"/></condition><then pos:line="140" pos:column="57">
		  <comment type="block" pos:line="141" pos:column="19">/* [/] can never match.  */</comment>
		  <block type="pseudo"><return pos:line="142" pos:column="19">return <expr><name pos:line="142" pos:column="26">FNM_NOMATCH<pos:position pos:line="142" pos:column="37"/></name></expr>;<pos:position pos:line="142" pos:column="38"/></return></block></then></if>

		<if pos:line="144" pos:column="17">if <condition pos:line="144" pos:column="20">(<expr><name pos:line="144" pos:column="21">c<pos:position pos:line="144" pos:column="22"/></name> <operator pos:line="144" pos:column="23">==<pos:position pos:line="144" pos:column="25"/></operator> <literal type="char" pos:line="144" pos:column="26">'-'<pos:position pos:line="144" pos:column="29"/></literal> <operator pos:line="144" pos:column="30">&amp;&amp;<pos:position pos:line="144" pos:column="40"/></operator> <operator pos:line="144" pos:column="33">*<pos:position pos:line="144" pos:column="34"/></operator><name pos:line="144" pos:column="34">p<pos:position pos:line="144" pos:column="35"/></name> <operator pos:line="144" pos:column="36">!=<pos:position pos:line="144" pos:column="38"/></operator> <literal type="char" pos:line="144" pos:column="39">']'<pos:position pos:line="144" pos:column="42"/></literal></expr>)<pos:position pos:line="144" pos:column="43"/></condition><then pos:line="144" pos:column="43">
		  <block pos:line="145" pos:column="19">{
		    <expr_stmt><expr><name pos:line="146" pos:column="21">cend<pos:position pos:line="146" pos:column="25"/></name> <operator pos:line="146" pos:column="26">=<pos:position pos:line="146" pos:column="27"/></operator> <operator pos:line="146" pos:column="28">*<pos:position pos:line="146" pos:column="29"/></operator><name pos:line="146" pos:column="29">p<pos:position pos:line="146" pos:column="30"/></name><operator pos:line="146" pos:column="30">++<pos:position pos:line="146" pos:column="32"/></operator></expr>;<pos:position pos:line="146" pos:column="33"/></expr_stmt>
		    <if pos:line="147" pos:column="21">if <condition pos:line="147" pos:column="24">(<expr><operator pos:line="147" pos:column="25">!<pos:position pos:line="147" pos:column="26"/></operator><operator pos:line="147" pos:column="26">(<pos:position pos:line="147" pos:column="27"/></operator><name pos:line="147" pos:column="27">flags<pos:position pos:line="147" pos:column="32"/></name> <operator pos:line="147" pos:column="33">&amp;<pos:position pos:line="147" pos:column="38"/></operator> <name pos:line="147" pos:column="35">FNM_NOESCAPE<pos:position pos:line="147" pos:column="47"/></name><operator pos:line="147" pos:column="47">)<pos:position pos:line="147" pos:column="48"/></operator> <operator pos:line="147" pos:column="49">&amp;&amp;<pos:position pos:line="147" pos:column="59"/></operator> <name pos:line="147" pos:column="52">cend<pos:position pos:line="147" pos:column="56"/></name> <operator pos:line="147" pos:column="57">==<pos:position pos:line="147" pos:column="59"/></operator> <literal type="char" pos:line="147" pos:column="60">'\\'<pos:position pos:line="147" pos:column="64"/></literal></expr>)<pos:position pos:line="147" pos:column="65"/></condition><then pos:line="147" pos:column="65">
		      <block type="pseudo"><expr_stmt><expr><name pos:line="148" pos:column="23">cend<pos:position pos:line="148" pos:column="27"/></name> <operator pos:line="148" pos:column="28">=<pos:position pos:line="148" pos:column="29"/></operator> <operator pos:line="148" pos:column="30">*<pos:position pos:line="148" pos:column="31"/></operator><name pos:line="148" pos:column="31">p<pos:position pos:line="148" pos:column="32"/></name><operator pos:line="148" pos:column="32">++<pos:position pos:line="148" pos:column="34"/></operator></expr>;<pos:position pos:line="148" pos:column="35"/></expr_stmt></block></then></if>
		    <if pos:line="149" pos:column="21">if <condition pos:line="149" pos:column="24">(<expr><name pos:line="149" pos:column="25">cend<pos:position pos:line="149" pos:column="29"/></name> <operator pos:line="149" pos:column="30">==<pos:position pos:line="149" pos:column="32"/></operator> <literal type="char" pos:line="149" pos:column="33">'\0'<pos:position pos:line="149" pos:column="37"/></literal></expr>)<pos:position pos:line="149" pos:column="38"/></condition><then pos:line="149" pos:column="38">
		      <block type="pseudo"><return pos:line="150" pos:column="23">return <expr><name pos:line="150" pos:column="30">FNM_NOMATCH<pos:position pos:line="150" pos:column="41"/></name></expr>;<pos:position pos:line="150" pos:column="42"/></return></block></then></if>
		    <expr_stmt><expr><name pos:line="151" pos:column="21">cend<pos:position pos:line="151" pos:column="25"/></name> <operator pos:line="151" pos:column="26">=<pos:position pos:line="151" pos:column="27"/></operator> <call><name pos:line="151" pos:column="28">FOLD<pos:position pos:line="151" pos:column="32"/></name> <argument_list pos:line="151" pos:column="33">(<argument><expr><name pos:line="151" pos:column="34">cend<pos:position pos:line="151" pos:column="38"/></name></expr></argument>)<pos:position pos:line="151" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="40"/></expr_stmt>

		    <expr_stmt><expr><name pos:line="153" pos:column="21">c<pos:position pos:line="153" pos:column="22"/></name> <operator pos:line="153" pos:column="23">=<pos:position pos:line="153" pos:column="24"/></operator> <operator pos:line="153" pos:column="25">*<pos:position pos:line="153" pos:column="26"/></operator><name pos:line="153" pos:column="26">p<pos:position pos:line="153" pos:column="27"/></name><operator pos:line="153" pos:column="27">++<pos:position pos:line="153" pos:column="29"/></operator></expr>;<pos:position pos:line="153" pos:column="30"/></expr_stmt>
		  }<pos:position pos:line="154" pos:column="20"/></block></then></if>

		<if pos:line="156" pos:column="17">if <condition pos:line="156" pos:column="20">(<expr><call><name pos:line="156" pos:column="21">FOLD<pos:position pos:line="156" pos:column="25"/></name> <argument_list pos:line="156" pos:column="26">(<argument><expr><operator pos:line="156" pos:column="27">*<pos:position pos:line="156" pos:column="28"/></operator><name pos:line="156" pos:column="28">n<pos:position pos:line="156" pos:column="29"/></name></expr></argument>)<pos:position pos:line="156" pos:column="30"/></argument_list></call> <operator pos:line="156" pos:column="31">&gt;=<pos:position pos:line="156" pos:column="36"/></operator> <name pos:line="156" pos:column="34">cstart<pos:position pos:line="156" pos:column="40"/></name> <operator pos:line="156" pos:column="41">&amp;&amp;<pos:position pos:line="156" pos:column="51"/></operator> <call><name pos:line="156" pos:column="44">FOLD<pos:position pos:line="156" pos:column="48"/></name> <argument_list pos:line="156" pos:column="49">(<argument><expr><operator pos:line="156" pos:column="50">*<pos:position pos:line="156" pos:column="51"/></operator><name pos:line="156" pos:column="51">n<pos:position pos:line="156" pos:column="52"/></name></expr></argument>)<pos:position pos:line="156" pos:column="53"/></argument_list></call> <operator pos:line="156" pos:column="54">&lt;=<pos:position pos:line="156" pos:column="59"/></operator> <name pos:line="156" pos:column="57">cend<pos:position pos:line="156" pos:column="61"/></name></expr>)<pos:position pos:line="156" pos:column="62"/></condition><then pos:line="156" pos:column="62">
		  <block type="pseudo"><goto pos:line="157" pos:column="19">goto <name pos:line="157" pos:column="24">matched<pos:position pos:line="157" pos:column="31"/></name>;<pos:position pos:line="157" pos:column="32"/></goto></block></then></if>

		<if pos:line="159" pos:column="17">if <condition pos:line="159" pos:column="20">(<expr><name pos:line="159" pos:column="21">c<pos:position pos:line="159" pos:column="22"/></name> <operator pos:line="159" pos:column="23">==<pos:position pos:line="159" pos:column="25"/></operator> <literal type="char" pos:line="159" pos:column="26">']'<pos:position pos:line="159" pos:column="29"/></literal></expr>)<pos:position pos:line="159" pos:column="30"/></condition><then pos:line="159" pos:column="30">
		  <block type="pseudo"><break pos:line="160" pos:column="19">break;<pos:position pos:line="160" pos:column="25"/></break></block></then></if>
	      }<pos:position pos:line="161" pos:column="16"/></block></for>
	    <if pos:line="162" pos:column="13">if <condition pos:line="162" pos:column="16">(<expr><operator pos:line="162" pos:column="17">!<pos:position pos:line="162" pos:column="18"/></operator><name pos:line="162" pos:column="18">not<pos:position pos:line="162" pos:column="21"/></name></expr>)<pos:position pos:line="162" pos:column="22"/></condition><then pos:line="162" pos:column="22">
	      <block type="pseudo"><return pos:line="163" pos:column="15">return <expr><name pos:line="163" pos:column="22">FNM_NOMATCH<pos:position pos:line="163" pos:column="33"/></name></expr>;<pos:position pos:line="163" pos:column="34"/></return></block></then></if>
	    <break pos:line="164" pos:column="13">break;<pos:position pos:line="164" pos:column="19"/></break>

	  <label><name pos:line="166" pos:column="11">matched<pos:position pos:line="166" pos:column="18"/></name>:<pos:position pos:line="166" pos:column="19"/></label><empty_stmt pos:line="166" pos:column="19">;<pos:position pos:line="166" pos:column="20"/></empty_stmt>
	    <comment type="block" pos:line="167" pos:column="13">/* Skip the rest of the [...] that already matched.  */</comment>
	    <while pos:line="168" pos:column="13">while <condition pos:line="168" pos:column="19">(<expr><name pos:line="168" pos:column="20">c<pos:position pos:line="168" pos:column="21"/></name> <operator pos:line="168" pos:column="22">!=<pos:position pos:line="168" pos:column="24"/></operator> <literal type="char" pos:line="168" pos:column="25">']'<pos:position pos:line="168" pos:column="28"/></literal></expr>)<pos:position pos:line="168" pos:column="29"/></condition>
	      <block pos:line="169" pos:column="15">{
		<if pos:line="170" pos:column="17">if <condition pos:line="170" pos:column="20">(<expr><name pos:line="170" pos:column="21">c<pos:position pos:line="170" pos:column="22"/></name> <operator pos:line="170" pos:column="23">==<pos:position pos:line="170" pos:column="25"/></operator> <literal type="char" pos:line="170" pos:column="26">'\0'<pos:position pos:line="170" pos:column="30"/></literal></expr>)<pos:position pos:line="170" pos:column="31"/></condition><then pos:line="170" pos:column="31">
		  <comment type="block" pos:line="171" pos:column="19">/* [... (unterminated) loses.  */</comment>
		  <block type="pseudo"><return pos:line="172" pos:column="19">return <expr><name pos:line="172" pos:column="26">FNM_NOMATCH<pos:position pos:line="172" pos:column="37"/></name></expr>;<pos:position pos:line="172" pos:column="38"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="174" pos:column="17">c<pos:position pos:line="174" pos:column="18"/></name> <operator pos:line="174" pos:column="19">=<pos:position pos:line="174" pos:column="20"/></operator> <operator pos:line="174" pos:column="21">*<pos:position pos:line="174" pos:column="22"/></operator><name pos:line="174" pos:column="22">p<pos:position pos:line="174" pos:column="23"/></name><operator pos:line="174" pos:column="23">++<pos:position pos:line="174" pos:column="25"/></operator></expr>;<pos:position pos:line="174" pos:column="26"/></expr_stmt>
		<if pos:line="175" pos:column="17">if <condition pos:line="175" pos:column="20">(<expr><operator pos:line="175" pos:column="21">!<pos:position pos:line="175" pos:column="22"/></operator><operator pos:line="175" pos:column="22">(<pos:position pos:line="175" pos:column="23"/></operator><name pos:line="175" pos:column="23">flags<pos:position pos:line="175" pos:column="28"/></name> <operator pos:line="175" pos:column="29">&amp;<pos:position pos:line="175" pos:column="34"/></operator> <name pos:line="175" pos:column="31">FNM_NOESCAPE<pos:position pos:line="175" pos:column="43"/></name><operator pos:line="175" pos:column="43">)<pos:position pos:line="175" pos:column="44"/></operator> <operator pos:line="175" pos:column="45">&amp;&amp;<pos:position pos:line="175" pos:column="55"/></operator> <name pos:line="175" pos:column="48">c<pos:position pos:line="175" pos:column="49"/></name> <operator pos:line="175" pos:column="50">==<pos:position pos:line="175" pos:column="52"/></operator> <literal type="char" pos:line="175" pos:column="53">'\\'<pos:position pos:line="175" pos:column="57"/></literal></expr>)<pos:position pos:line="175" pos:column="58"/></condition><then pos:line="175" pos:column="58">
		  <comment type="block" pos:line="176" pos:column="19">/* XXX 1003.2d11 is unclear if this is right.  */</comment>
		  <block type="pseudo"><expr_stmt><expr><operator pos:line="177" pos:column="19">++<pos:position pos:line="177" pos:column="21"/></operator><name pos:line="177" pos:column="21">p<pos:position pos:line="177" pos:column="22"/></name></expr>;<pos:position pos:line="177" pos:column="23"/></expr_stmt></block></then></if>
	      }<pos:position pos:line="178" pos:column="16"/></block></while>
	    <if pos:line="179" pos:column="13">if <condition pos:line="179" pos:column="16">(<expr><name pos:line="179" pos:column="17">not<pos:position pos:line="179" pos:column="20"/></name></expr>)<pos:position pos:line="179" pos:column="21"/></condition><then pos:line="179" pos:column="21">
	      <block type="pseudo"><return pos:line="180" pos:column="15">return <expr><name pos:line="180" pos:column="22">FNM_NOMATCH<pos:position pos:line="180" pos:column="33"/></name></expr>;<pos:position pos:line="180" pos:column="34"/></return></block></then></if>
	  }<pos:position pos:line="181" pos:column="12"/></block>
	  <break pos:line="182" pos:column="11">break;<pos:position pos:line="182" pos:column="17"/></break>

	<default pos:line="184" pos:column="9">default:<pos:position pos:line="184" pos:column="17"/></default>
	  <if pos:line="185" pos:column="11">if <condition pos:line="185" pos:column="14">(<expr><name pos:line="185" pos:column="15">c<pos:position pos:line="185" pos:column="16"/></name> <operator pos:line="185" pos:column="17">!=<pos:position pos:line="185" pos:column="19"/></operator> <call><name pos:line="185" pos:column="20">FOLD<pos:position pos:line="185" pos:column="24"/></name> <argument_list pos:line="185" pos:column="25">(<argument><expr><operator pos:line="185" pos:column="26">*<pos:position pos:line="185" pos:column="27"/></operator><name pos:line="185" pos:column="27">n<pos:position pos:line="185" pos:column="28"/></name></expr></argument>)<pos:position pos:line="185" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="185" pos:column="30"/></condition><then pos:line="185" pos:column="30">
	    <block type="pseudo"><return pos:line="186" pos:column="13">return <expr><name pos:line="186" pos:column="20">FNM_NOMATCH<pos:position pos:line="186" pos:column="31"/></name></expr>;<pos:position pos:line="186" pos:column="32"/></return></block></then></if>
	}<pos:position pos:line="187" pos:column="10"/></block></switch>

      <expr_stmt><expr><operator pos:line="189" pos:column="7">++<pos:position pos:line="189" pos:column="9"/></operator><name pos:line="189" pos:column="9">n<pos:position pos:line="189" pos:column="10"/></name></expr>;<pos:position pos:line="189" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="190" pos:column="6"/></block></while>

  <if pos:line="192" pos:column="3">if <condition pos:line="192" pos:column="6">(<expr><operator pos:line="192" pos:column="7">*<pos:position pos:line="192" pos:column="8"/></operator><name pos:line="192" pos:column="8">n<pos:position pos:line="192" pos:column="9"/></name> <operator pos:line="192" pos:column="10">==<pos:position pos:line="192" pos:column="12"/></operator> <literal type="char" pos:line="192" pos:column="13">'\0'<pos:position pos:line="192" pos:column="17"/></literal></expr>)<pos:position pos:line="192" pos:column="18"/></condition><then pos:line="192" pos:column="18">
    <block type="pseudo"><return pos:line="193" pos:column="5">return <expr><literal type="number" pos:line="193" pos:column="12">0<pos:position pos:line="193" pos:column="13"/></literal></expr>;<pos:position pos:line="193" pos:column="14"/></return></block></then></if>

  <if pos:line="195" pos:column="3">if <condition pos:line="195" pos:column="6">(<expr><operator pos:line="195" pos:column="7">(<pos:position pos:line="195" pos:column="8"/></operator><name pos:line="195" pos:column="8">flags<pos:position pos:line="195" pos:column="13"/></name> <operator pos:line="195" pos:column="14">&amp;<pos:position pos:line="195" pos:column="19"/></operator> <name pos:line="195" pos:column="16">FNM_LEADING_DIR<pos:position pos:line="195" pos:column="31"/></name><operator pos:line="195" pos:column="31">)<pos:position pos:line="195" pos:column="32"/></operator> <operator pos:line="195" pos:column="33">&amp;&amp;<pos:position pos:line="195" pos:column="43"/></operator> <operator pos:line="195" pos:column="36">*<pos:position pos:line="195" pos:column="37"/></operator><name pos:line="195" pos:column="37">n<pos:position pos:line="195" pos:column="38"/></name> <operator pos:line="195" pos:column="39">==<pos:position pos:line="195" pos:column="41"/></operator> <literal type="char" pos:line="195" pos:column="42">'/'<pos:position pos:line="195" pos:column="45"/></literal></expr>)<pos:position pos:line="195" pos:column="46"/></condition><then pos:line="195" pos:column="46">
    <comment type="block" pos:line="196" pos:column="5">/* The FNM_LEADING_DIR flag says that "foo*" matches "foobar/frobozz".  */</comment>
    <block type="pseudo"><return pos:line="197" pos:column="5">return <expr><literal type="number" pos:line="197" pos:column="12">0<pos:position pos:line="197" pos:column="13"/></literal></expr>;<pos:position pos:line="197" pos:column="14"/></return></block></then></if>

  <return pos:line="199" pos:column="3">return <expr><name pos:line="199" pos:column="10">FNM_NOMATCH<pos:position pos:line="199" pos:column="21"/></name></expr>;<pos:position pos:line="199" pos:column="22"/></return>
}<pos:position pos:line="200" pos:column="2"/></block></function>

<cpp:else pos:line="202" pos:column="1">#<cpp:directive pos:line="202" pos:column="2">else<pos:position pos:line="202" pos:column="6"/></cpp:directive></cpp:else>	<comment type="block" pos:line="202" pos:column="9">/* HAVE_FNMATCH */</comment>
<function><type><name pos:line="203" pos:column="1">void<pos:position pos:line="203" pos:column="5"/></name></type> <name pos:line="203" pos:column="6">fnmatch_dummy<pos:position pos:line="203" pos:column="19"/></name><parameter_list pos:line="203" pos:column="19">(<parameter><decl><type><name pos:line="203" pos:column="20">void<pos:position pos:line="203" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="203" pos:column="25"/></parameter_list> <block pos:line="203" pos:column="26">{}<pos:position pos:line="203" pos:column="28"/></block></function>
<cpp:endif pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">endif<pos:position pos:line="204" pos:column="7"/></cpp:directive></cpp:endif>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.4.10/ident.c" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 * ident.c
 *
 * create git identifier lines of the form "name &lt;email&gt; date"
 *
 * Copyright (C) 2005 Linus Torvalds
 */</comment>
<cpp:include pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">include<pos:position pos:line="8" pos:column="9"/></cpp:directive> <cpp:file pos:line="8" pos:column="10">"cache.h"<pos:position pos:line="8" pos:column="19"/></cpp:file></cpp:include>

<decl_stmt><decl><specifier pos:line="10" pos:column="1">static<pos:position pos:line="10" pos:column="7"/></specifier> <type><name><name pos:line="10" pos:column="8">struct<pos:position pos:line="10" pos:column="14"/></name> <name pos:line="10" pos:column="15">strbuf<pos:position pos:line="10" pos:column="21"/></name></name></type> <name pos:line="10" pos:column="22">git_default_name<pos:position pos:line="10" pos:column="38"/></name> <init pos:line="10" pos:column="39">= <expr><name pos:line="10" pos:column="41">STRBUF_INIT<pos:position pos:line="10" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="53"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="11" pos:column="1">static<pos:position pos:line="11" pos:column="7"/></specifier> <type><name><name pos:line="11" pos:column="8">struct<pos:position pos:line="11" pos:column="14"/></name> <name pos:line="11" pos:column="15">strbuf<pos:position pos:line="11" pos:column="21"/></name></name></type> <name pos:line="11" pos:column="22">git_default_email<pos:position pos:line="11" pos:column="39"/></name> <init pos:line="11" pos:column="40">= <expr><name pos:line="11" pos:column="42">STRBUF_INIT<pos:position pos:line="11" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="54"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="12" pos:column="1">static<pos:position pos:line="12" pos:column="7"/></specifier> <type><name><name pos:line="12" pos:column="8">struct<pos:position pos:line="12" pos:column="14"/></name> <name pos:line="12" pos:column="15">strbuf<pos:position pos:line="12" pos:column="21"/></name></name></type> <name pos:line="12" pos:column="22">git_default_date<pos:position pos:line="12" pos:column="38"/></name> <init pos:line="12" pos:column="39">= <expr><name pos:line="12" pos:column="41">STRBUF_INIT<pos:position pos:line="12" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="53"/></decl_stmt>

<cpp:define pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">define<pos:position pos:line="14" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="14" pos:column="9">IDENT_NAME_GIVEN<pos:position pos:line="14" pos:column="25"/></name></cpp:macro> <cpp:value pos:line="14" pos:column="26">01<pos:position pos:line="14" pos:column="28"/></cpp:value></cpp:define>
<cpp:define pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">define<pos:position pos:line="15" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="15" pos:column="9">IDENT_MAIL_GIVEN<pos:position pos:line="15" pos:column="25"/></name></cpp:macro> <cpp:value pos:line="15" pos:column="26">02<pos:position pos:line="15" pos:column="28"/></cpp:value></cpp:define>
<cpp:define pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">define<pos:position pos:line="16" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="16" pos:column="9">IDENT_ALL_GIVEN<pos:position pos:line="16" pos:column="24"/></name></cpp:macro> <cpp:value pos:line="16" pos:column="25">(IDENT_NAME_GIVEN|IDENT_MAIL_GIVEN)<pos:position pos:line="16" pos:column="60"/></cpp:value></cpp:define>
<decl_stmt><decl><specifier pos:line="17" pos:column="1">static<pos:position pos:line="17" pos:column="7"/></specifier> <type><name pos:line="17" pos:column="8">int<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">committer_ident_explicitly_given<pos:position pos:line="17" pos:column="44"/></name></decl>;<pos:position pos:line="17" pos:column="45"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="18" pos:column="1">static<pos:position pos:line="18" pos:column="7"/></specifier> <type><name pos:line="18" pos:column="8">int<pos:position pos:line="18" pos:column="11"/></name></type> <name pos:line="18" pos:column="12">author_ident_explicitly_given<pos:position pos:line="18" pos:column="41"/></name></decl>;<pos:position pos:line="18" pos:column="42"/></decl_stmt>

<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">NO_GECOS_IN_PWENT<pos:position pos:line="20" pos:column="25"/></name></cpp:ifdef>
<cpp:define pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">define<pos:position pos:line="21" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="21" pos:column="9">get_gecos<pos:position pos:line="21" pos:column="18"/></name><parameter_list pos:line="21" pos:column="18">(<parameter><type><name pos:line="21" pos:column="19">ignored<pos:position pos:line="21" pos:column="26"/></name></type></parameter>)<pos:position pos:line="21" pos:column="27"/></parameter_list></cpp:macro> <cpp:value pos:line="21" pos:column="28">"&amp;"<pos:position pos:line="21" pos:column="35"/></cpp:value></cpp:define>
<cpp:else pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">else<pos:position pos:line="22" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">define<pos:position pos:line="23" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="23" pos:column="9">get_gecos<pos:position pos:line="23" pos:column="18"/></name><parameter_list pos:line="23" pos:column="18">(<parameter><type><name pos:line="23" pos:column="19">struct_passwd<pos:position pos:line="23" pos:column="32"/></name></type></parameter>)<pos:position pos:line="23" pos:column="33"/></parameter_list></cpp:macro> <cpp:value pos:line="23" pos:column="34">((struct_passwd)-&gt;pw_gecos)<pos:position pos:line="23" pos:column="61"/></cpp:value></cpp:define>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>

<function><specifier pos:line="26" pos:column="1">static<pos:position pos:line="26" pos:column="7"/></specifier> <type><name pos:line="26" pos:column="8">void<pos:position pos:line="26" pos:column="12"/></name></type> <name pos:line="26" pos:column="13">copy_gecos<pos:position pos:line="26" pos:column="23"/></name><parameter_list pos:line="26" pos:column="23">(<parameter><decl><type><specifier pos:line="26" pos:column="24">const<pos:position pos:line="26" pos:column="29"/></specifier> <name><name pos:line="26" pos:column="30">struct<pos:position pos:line="26" pos:column="36"/></name> <name pos:line="26" pos:column="37">passwd<pos:position pos:line="26" pos:column="43"/></name></name> <modifier pos:line="26" pos:column="44">*<pos:position pos:line="26" pos:column="45"/></modifier></type><name pos:line="26" pos:column="45">w<pos:position pos:line="26" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="26" pos:column="48">struct<pos:position pos:line="26" pos:column="54"/></name> <name pos:line="26" pos:column="55">strbuf<pos:position pos:line="26" pos:column="61"/></name></name> <modifier pos:line="26" pos:column="62">*<pos:position pos:line="26" pos:column="63"/></modifier></type><name pos:line="26" pos:column="63">name<pos:position pos:line="26" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="26" pos:column="68"/></parameter_list>
<block pos:line="27" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="28" pos:column="9">char<pos:position pos:line="28" pos:column="13"/></name> <modifier pos:line="28" pos:column="14">*<pos:position pos:line="28" pos:column="15"/></modifier></type><name pos:line="28" pos:column="15">src<pos:position pos:line="28" pos:column="18"/></name></decl>;<pos:position pos:line="28" pos:column="19"/></decl_stmt>

	<comment type="block" pos:line="30" pos:column="9">/* Traditionally GECOS field had office phone numbers etc, separated
	 * with commas.  Also &amp; stands for capitalized form of the login name.
	 */</comment>

	<for pos:line="34" pos:column="9">for <control pos:line="34" pos:column="13">(<init><expr><name pos:line="34" pos:column="14">src<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <call><name pos:line="34" pos:column="20">get_gecos<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">w<pos:position pos:line="34" pos:column="31"/></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></init> <condition><expr><operator pos:line="34" pos:column="34">*<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">src<pos:position pos:line="34" pos:column="38"/></name> <operator pos:line="34" pos:column="39">&amp;&amp;<pos:position pos:line="34" pos:column="49"/></operator> <operator pos:line="34" pos:column="42">*<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="43">src<pos:position pos:line="34" pos:column="46"/></name> <operator pos:line="34" pos:column="47">!=<pos:position pos:line="34" pos:column="49"/></operator> <literal type="char" pos:line="34" pos:column="50">','<pos:position pos:line="34" pos:column="53"/></literal></expr>;<pos:position pos:line="34" pos:column="54"/></condition> <incr><expr><name pos:line="34" pos:column="55">src<pos:position pos:line="34" pos:column="58"/></name><operator pos:line="34" pos:column="58">++<pos:position pos:line="34" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="61"/></control> <block pos:line="34" pos:column="62">{
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int<pos:position pos:line="35" pos:column="20"/></name></type> <name pos:line="35" pos:column="21">ch<pos:position pos:line="35" pos:column="23"/></name> <init pos:line="35" pos:column="24">= <expr><operator pos:line="35" pos:column="26">*<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">src<pos:position pos:line="35" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="31"/></decl_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">ch<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">!=<pos:position pos:line="36" pos:column="26"/></operator> <literal type="char" pos:line="36" pos:column="27">'&amp;'<pos:position pos:line="36" pos:column="34"/></literal></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">strbuf_addch<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">name<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="44">ch<pos:position pos:line="37" pos:column="46"/></name></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt></block></then>
		<else pos:line="38" pos:column="17">else <block pos:line="38" pos:column="22">{
			<comment type="block" pos:line="39" pos:column="25">/* Sorry, Mr. McDonald... */</comment>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">strbuf_addch<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">name<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="44">toupper<pos:position pos:line="40" pos:column="51"/></name><argument_list pos:line="40" pos:column="51">(<argument><expr><operator pos:line="40" pos:column="52">*<pos:position pos:line="40" pos:column="53"/></operator><name><name pos:line="40" pos:column="53">w<pos:position pos:line="40" pos:column="54"/></name><operator pos:line="40" pos:column="54">-&gt;<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="56">pw_name<pos:position pos:line="40" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">strbuf_addstr<pos:position pos:line="41" pos:column="38"/></name><argument_list pos:line="41" pos:column="38">(<argument><expr><name pos:line="41" pos:column="39">name<pos:position pos:line="41" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="45">w<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">pw_name<pos:position pos:line="41" pos:column="55"/></name></name> <operator pos:line="41" pos:column="56">+<pos:position pos:line="41" pos:column="57"/></operator> <literal type="number" pos:line="41" pos:column="58">1<pos:position pos:line="41" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="42" pos:column="18"/></block></else></if>
	}<pos:position pos:line="43" pos:column="10"/></block></for>
}<pos:position pos:line="44" pos:column="2"/></block></function>

<function><specifier pos:line="46" pos:column="1">static<pos:position pos:line="46" pos:column="7"/></specifier> <type><name pos:line="46" pos:column="8">int<pos:position pos:line="46" pos:column="11"/></name></type> <name pos:line="46" pos:column="12">add_mailname_host<pos:position pos:line="46" pos:column="29"/></name><parameter_list pos:line="46" pos:column="29">(<parameter><decl><type><name><name pos:line="46" pos:column="30">struct<pos:position pos:line="46" pos:column="36"/></name> <name pos:line="46" pos:column="37">strbuf<pos:position pos:line="46" pos:column="43"/></name></name> <modifier pos:line="46" pos:column="44">*<pos:position pos:line="46" pos:column="45"/></modifier></type><name pos:line="46" pos:column="45">buf<pos:position pos:line="46" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="46" pos:column="49"/></parameter_list>
<block pos:line="47" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="48" pos:column="9">FILE<pos:position pos:line="48" pos:column="13"/></name> <modifier pos:line="48" pos:column="14">*<pos:position pos:line="48" pos:column="15"/></modifier></type><name pos:line="48" pos:column="15">mailname<pos:position pos:line="48" pos:column="23"/></name></decl>;<pos:position pos:line="48" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="49" pos:column="9">struct<pos:position pos:line="49" pos:column="15"/></name> <name pos:line="49" pos:column="16">strbuf<pos:position pos:line="49" pos:column="22"/></name></name></type> <name pos:line="49" pos:column="23">mailnamebuf<pos:position pos:line="49" pos:column="34"/></name> <init pos:line="49" pos:column="35">= <expr><name pos:line="49" pos:column="37">STRBUF_INIT<pos:position pos:line="49" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="49" pos:column="49"/></decl_stmt>

	<expr_stmt><expr><name pos:line="51" pos:column="9">mailname<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <call><name pos:line="51" pos:column="20">fopen<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><literal type="string" pos:line="51" pos:column="26">"/etc/mailname"<pos:position pos:line="51" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="43">"r"<pos:position pos:line="51" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">!<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">mailname<pos:position pos:line="52" pos:column="22"/></name></expr>)<pos:position pos:line="52" pos:column="23"/></condition><then pos:line="52" pos:column="23"> <block pos:line="52" pos:column="24">{
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">errno<pos:position pos:line="53" pos:column="26"/></name> <operator pos:line="53" pos:column="27">!=<pos:position pos:line="53" pos:column="29"/></operator> <name pos:line="53" pos:column="30">ENOENT<pos:position pos:line="53" pos:column="36"/></name></expr>)<pos:position pos:line="53" pos:column="37"/></condition><then pos:line="53" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="25">warning<pos:position pos:line="54" pos:column="32"/></name><argument_list pos:line="54" pos:column="32">(<argument><expr><literal type="string" pos:line="54" pos:column="33">"cannot open /etc/mailname: %s"<pos:position pos:line="54" pos:column="64"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="55" pos:column="33">strerror<pos:position pos:line="55" pos:column="41"/></name><argument_list pos:line="55" pos:column="41">(<argument><expr><name pos:line="55" pos:column="42">errno<pos:position pos:line="55" pos:column="47"/></name></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt></block></then></if>
		<return pos:line="56" pos:column="17">return <expr><operator pos:line="56" pos:column="24">-<pos:position pos:line="56" pos:column="25"/></operator><literal type="number" pos:line="56" pos:column="25">1<pos:position pos:line="56" pos:column="26"/></literal></expr>;<pos:position pos:line="56" pos:column="27"/></return>
	}<pos:position pos:line="57" pos:column="10"/></block></then></if>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><call><name pos:line="58" pos:column="13">strbuf_getline<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><operator pos:line="58" pos:column="28">&amp;<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="29">mailnamebuf<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="42">mailname<pos:position pos:line="58" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="58" pos:column="52">'\n'<pos:position pos:line="58" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call> <operator pos:line="58" pos:column="58">==<pos:position pos:line="58" pos:column="60"/></operator> <name pos:line="58" pos:column="61">EOF<pos:position pos:line="58" pos:column="64"/></name></expr>)<pos:position pos:line="58" pos:column="65"/></condition><then pos:line="58" pos:column="65"> <block pos:line="58" pos:column="66">{
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><call><name pos:line="59" pos:column="21">ferror<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">mailname<pos:position pos:line="59" pos:column="36"/></name></expr></argument>)<pos:position pos:line="59" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="38"/></condition><then pos:line="59" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="25">warning<pos:position pos:line="60" pos:column="32"/></name><argument_list pos:line="60" pos:column="32">(<argument><expr><literal type="string" pos:line="60" pos:column="33">"cannot read /etc/mailname: %s"<pos:position pos:line="60" pos:column="64"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="61" pos:column="33">strerror<pos:position pos:line="61" pos:column="41"/></name><argument_list pos:line="61" pos:column="41">(<argument><expr><name pos:line="61" pos:column="42">errno<pos:position pos:line="61" pos:column="47"/></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="50"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">strbuf_release<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><operator pos:line="62" pos:column="32">&amp;<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="33">mailnamebuf<pos:position pos:line="62" pos:column="44"/></name></expr></argument>)<pos:position pos:line="62" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">fclose<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><name pos:line="63" pos:column="24">mailname<pos:position pos:line="63" pos:column="32"/></name></expr></argument>)<pos:position pos:line="63" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt>
		<return pos:line="64" pos:column="17">return <expr><operator pos:line="64" pos:column="24">-<pos:position pos:line="64" pos:column="25"/></operator><literal type="number" pos:line="64" pos:column="25">1<pos:position pos:line="64" pos:column="26"/></literal></expr>;<pos:position pos:line="64" pos:column="27"/></return>
	}<pos:position pos:line="65" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="66" pos:column="9">/* success! */</comment>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">strbuf_addbuf<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">buf<pos:position pos:line="67" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="28">&amp;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="29">mailnamebuf<pos:position pos:line="67" pos:column="40"/></name></expr></argument>)<pos:position pos:line="67" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">strbuf_release<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><operator pos:line="68" pos:column="24">&amp;<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="25">mailnamebuf<pos:position pos:line="68" pos:column="36"/></name></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">fclose<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><name pos:line="69" pos:column="16">mailname<pos:position pos:line="69" pos:column="24"/></name></expr></argument>)<pos:position pos:line="69" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="26"/></expr_stmt>
	<return pos:line="70" pos:column="9">return <expr><literal type="number" pos:line="70" pos:column="16">0<pos:position pos:line="70" pos:column="17"/></literal></expr>;<pos:position pos:line="70" pos:column="18"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function>

<function><specifier pos:line="73" pos:column="1">static<pos:position pos:line="73" pos:column="7"/></specifier> <type><name pos:line="73" pos:column="8">void<pos:position pos:line="73" pos:column="12"/></name></type> <name pos:line="73" pos:column="13">add_domainname<pos:position pos:line="73" pos:column="27"/></name><parameter_list pos:line="73" pos:column="27">(<parameter><decl><type><name><name pos:line="73" pos:column="28">struct<pos:position pos:line="73" pos:column="34"/></name> <name pos:line="73" pos:column="35">strbuf<pos:position pos:line="73" pos:column="41"/></name></name> <modifier pos:line="73" pos:column="42">*<pos:position pos:line="73" pos:column="43"/></modifier></type><name pos:line="73" pos:column="43">out<pos:position pos:line="73" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="73" pos:column="47"/></parameter_list>
<block pos:line="74" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="75" pos:column="9">char<pos:position pos:line="75" pos:column="13"/></name></type> <name><name pos:line="75" pos:column="14">buf<pos:position pos:line="75" pos:column="17"/></name><index pos:line="75" pos:column="17">[<expr><literal type="number" pos:line="75" pos:column="18">1024<pos:position pos:line="75" pos:column="22"/></literal></expr>]<pos:position pos:line="75" pos:column="23"/></index></name></decl>;<pos:position pos:line="75" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="76" pos:column="9">struct<pos:position pos:line="76" pos:column="15"/></name> <name pos:line="76" pos:column="16">hostent<pos:position pos:line="76" pos:column="23"/></name></name> <modifier pos:line="76" pos:column="24">*<pos:position pos:line="76" pos:column="25"/></modifier></type><name pos:line="76" pos:column="25">he<pos:position pos:line="76" pos:column="27"/></name></decl>;<pos:position pos:line="76" pos:column="28"/></decl_stmt>

	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><call><name pos:line="78" pos:column="13">gethostname<pos:position pos:line="78" pos:column="24"/></name><argument_list pos:line="78" pos:column="24">(<argument><expr><name pos:line="78" pos:column="25">buf<pos:position pos:line="78" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="30">sizeof<argument_list pos:line="78" pos:column="36">(<argument><expr><name pos:line="78" pos:column="37">buf<pos:position pos:line="78" pos:column="40"/></name></expr></argument>)<pos:position pos:line="78" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="78" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="43"/></condition><then pos:line="78" pos:column="43"> <block pos:line="78" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="79" pos:column="17">warning<pos:position pos:line="79" pos:column="24"/></name><argument_list pos:line="79" pos:column="24">(<argument><expr><literal type="string" pos:line="79" pos:column="25">"cannot get host name: %s"<pos:position pos:line="79" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="79" pos:column="53">strerror<pos:position pos:line="79" pos:column="61"/></name><argument_list pos:line="79" pos:column="61">(<argument><expr><name pos:line="79" pos:column="62">errno<pos:position pos:line="79" pos:column="67"/></name></expr></argument>)<pos:position pos:line="79" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">strbuf_addstr<pos:position pos:line="80" pos:column="30"/></name><argument_list pos:line="80" pos:column="30">(<argument><expr><name pos:line="80" pos:column="31">out<pos:position pos:line="80" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="36">"(none)"<pos:position pos:line="80" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="46"/></expr_stmt>
		<return pos:line="81" pos:column="17">return;<pos:position pos:line="81" pos:column="24"/></return>
	}<pos:position pos:line="82" pos:column="10"/></block></then></if>
	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><call><name pos:line="83" pos:column="13">strchr<pos:position pos:line="83" pos:column="19"/></name><argument_list pos:line="83" pos:column="19">(<argument><expr><name pos:line="83" pos:column="20">buf<pos:position pos:line="83" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="83" pos:column="25">'.'<pos:position pos:line="83" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="30"/></condition><then pos:line="83" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="17">strbuf_addstr<pos:position pos:line="84" pos:column="30"/></name><argument_list pos:line="84" pos:column="30">(<argument><expr><name pos:line="84" pos:column="31">out<pos:position pos:line="84" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="36">buf<pos:position pos:line="84" pos:column="39"/></name></expr></argument>)<pos:position pos:line="84" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="41"/></expr_stmt></block></then>
	<elseif pos:line="85" pos:column="9">else <if pos:line="85" pos:column="14">if <condition pos:line="85" pos:column="17">(<expr><operator pos:line="85" pos:column="18">(<pos:position pos:line="85" pos:column="19"/></operator><name pos:line="85" pos:column="19">he<pos:position pos:line="85" pos:column="21"/></name> <operator pos:line="85" pos:column="22">=<pos:position pos:line="85" pos:column="23"/></operator> <call><name pos:line="85" pos:column="24">gethostbyname<pos:position pos:line="85" pos:column="37"/></name><argument_list pos:line="85" pos:column="37">(<argument><expr><name pos:line="85" pos:column="38">buf<pos:position pos:line="85" pos:column="41"/></name></expr></argument>)<pos:position pos:line="85" pos:column="42"/></argument_list></call><operator pos:line="85" pos:column="42">)<pos:position pos:line="85" pos:column="43"/></operator> <operator pos:line="85" pos:column="44">&amp;&amp;<pos:position pos:line="85" pos:column="54"/></operator> <call><name pos:line="85" pos:column="47">strchr<pos:position pos:line="85" pos:column="53"/></name><argument_list pos:line="85" pos:column="53">(<argument><expr><name><name pos:line="85" pos:column="54">he<pos:position pos:line="85" pos:column="56"/></name><operator pos:line="85" pos:column="56">-&gt;<pos:position pos:line="85" pos:column="61"/></operator><name pos:line="85" pos:column="58">h_name<pos:position pos:line="85" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="85" pos:column="66">'.'<pos:position pos:line="85" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="71"/></condition><then pos:line="85" pos:column="71">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="17">strbuf_addstr<pos:position pos:line="86" pos:column="30"/></name><argument_list pos:line="86" pos:column="30">(<argument><expr><name pos:line="86" pos:column="31">out<pos:position pos:line="86" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="36">he<pos:position pos:line="86" pos:column="38"/></name><operator pos:line="86" pos:column="38">-&gt;<pos:position pos:line="86" pos:column="43"/></operator><name pos:line="86" pos:column="40">h_name<pos:position pos:line="86" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="48"/></expr_stmt></block></then></if></elseif>
	<else pos:line="87" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="17">strbuf_addf<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><name pos:line="88" pos:column="29">out<pos:position pos:line="88" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="34">"%s.(none)"<pos:position pos:line="88" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="47">buf<pos:position pos:line="88" pos:column="50"/></name></expr></argument>)<pos:position pos:line="88" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="52"/></expr_stmt></block></else></if>
}<pos:position pos:line="89" pos:column="2"/></block></function>

<function><specifier pos:line="91" pos:column="1">static<pos:position pos:line="91" pos:column="7"/></specifier> <type><name pos:line="91" pos:column="8">void<pos:position pos:line="91" pos:column="12"/></name></type> <name pos:line="91" pos:column="13">copy_email<pos:position pos:line="91" pos:column="23"/></name><parameter_list pos:line="91" pos:column="23">(<parameter><decl><type><specifier pos:line="91" pos:column="24">const<pos:position pos:line="91" pos:column="29"/></specifier> <name><name pos:line="91" pos:column="30">struct<pos:position pos:line="91" pos:column="36"/></name> <name pos:line="91" pos:column="37">passwd<pos:position pos:line="91" pos:column="43"/></name></name> <modifier pos:line="91" pos:column="44">*<pos:position pos:line="91" pos:column="45"/></modifier></type><name pos:line="91" pos:column="45">pw<pos:position pos:line="91" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="91" pos:column="49">struct<pos:position pos:line="91" pos:column="55"/></name> <name pos:line="91" pos:column="56">strbuf<pos:position pos:line="91" pos:column="62"/></name></name> <modifier pos:line="91" pos:column="63">*<pos:position pos:line="91" pos:column="64"/></modifier></type><name pos:line="91" pos:column="64">email<pos:position pos:line="91" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="91" pos:column="70"/></parameter_list>
<block pos:line="92" pos:column="1">{
	<comment type="block" pos:line="93" pos:column="9">/*
	 * Make up a fake email address
	 * (name + '@' + hostname [+ '.' + domainname])
	 */</comment>
	<expr_stmt><expr><call><name pos:line="97" pos:column="9">strbuf_addstr<pos:position pos:line="97" pos:column="22"/></name><argument_list pos:line="97" pos:column="22">(<argument><expr><name pos:line="97" pos:column="23">email<pos:position pos:line="97" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="30">pw<pos:position pos:line="97" pos:column="32"/></name><operator pos:line="97" pos:column="32">-&gt;<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="34">pw_name<pos:position pos:line="97" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="98" pos:column="9">strbuf_addch<pos:position pos:line="98" pos:column="21"/></name><argument_list pos:line="98" pos:column="21">(<argument><expr><name pos:line="98" pos:column="22">email<pos:position pos:line="98" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="98" pos:column="29">'@'<pos:position pos:line="98" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><operator pos:line="100" pos:column="13">!<pos:position pos:line="100" pos:column="14"/></operator><call><name pos:line="100" pos:column="14">add_mailname_host<pos:position pos:line="100" pos:column="31"/></name><argument_list pos:line="100" pos:column="31">(<argument><expr><name pos:line="100" pos:column="32">email<pos:position pos:line="100" pos:column="37"/></name></expr></argument>)<pos:position pos:line="100" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="39"/></condition><then pos:line="100" pos:column="39">
		<block type="pseudo"><return pos:line="101" pos:column="17">return;<pos:position pos:line="101" pos:column="24"/></return></block></then></if>	<comment type="block" pos:line="101" pos:column="25">/* read from "/etc/mailname" (Debian) */</comment>
	<expr_stmt><expr><call><name pos:line="102" pos:column="9">add_domainname<pos:position pos:line="102" pos:column="23"/></name><argument_list pos:line="102" pos:column="23">(<argument><expr><name pos:line="102" pos:column="24">email<pos:position pos:line="102" pos:column="29"/></name></expr></argument>)<pos:position pos:line="102" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="31"/></expr_stmt>
}<pos:position pos:line="103" pos:column="2"/></block></function>

<function><type><specifier pos:line="105" pos:column="1">const<pos:position pos:line="105" pos:column="6"/></specifier> <name pos:line="105" pos:column="7">char<pos:position pos:line="105" pos:column="11"/></name> <modifier pos:line="105" pos:column="12">*<pos:position pos:line="105" pos:column="13"/></modifier></type><name pos:line="105" pos:column="13">ident_default_name<pos:position pos:line="105" pos:column="31"/></name><parameter_list pos:line="105" pos:column="31">(<parameter><decl><type><name pos:line="105" pos:column="32">void<pos:position pos:line="105" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="105" pos:column="37"/></parameter_list>
<block pos:line="106" pos:column="1">{
	<if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><operator pos:line="107" pos:column="13">!<pos:position pos:line="107" pos:column="14"/></operator><name><name pos:line="107" pos:column="14">git_default_name<pos:position pos:line="107" pos:column="30"/></name><operator pos:line="107" pos:column="30">.<pos:position pos:line="107" pos:column="31"/></operator><name pos:line="107" pos:column="31">len<pos:position pos:line="107" pos:column="34"/></name></name></expr>)<pos:position pos:line="107" pos:column="35"/></condition><then pos:line="107" pos:column="35"> <block pos:line="107" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="108" pos:column="17">copy_gecos<pos:position pos:line="108" pos:column="27"/></name><argument_list pos:line="108" pos:column="27">(<argument><expr><call><name pos:line="108" pos:column="28">xgetpwuid_self<pos:position pos:line="108" pos:column="42"/></name><argument_list pos:line="108" pos:column="42">()<pos:position pos:line="108" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="108" pos:column="46">&amp;<pos:position pos:line="108" pos:column="51"/></operator><name pos:line="108" pos:column="47">git_default_name<pos:position pos:line="108" pos:column="63"/></name></expr></argument>)<pos:position pos:line="108" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="109" pos:column="17">strbuf_trim<pos:position pos:line="109" pos:column="28"/></name><argument_list pos:line="109" pos:column="28">(<argument><expr><operator pos:line="109" pos:column="29">&amp;<pos:position pos:line="109" pos:column="34"/></operator><name pos:line="109" pos:column="30">git_default_name<pos:position pos:line="109" pos:column="46"/></name></expr></argument>)<pos:position pos:line="109" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="110" pos:column="10"/></block></then></if>
	<return pos:line="111" pos:column="9">return <expr><name><name pos:line="111" pos:column="16">git_default_name<pos:position pos:line="111" pos:column="32"/></name><operator pos:line="111" pos:column="32">.<pos:position pos:line="111" pos:column="33"/></operator><name pos:line="111" pos:column="33">buf<pos:position pos:line="111" pos:column="36"/></name></name></expr>;<pos:position pos:line="111" pos:column="37"/></return>
}<pos:position pos:line="112" pos:column="2"/></block></function>

<function><type><specifier pos:line="114" pos:column="1">const<pos:position pos:line="114" pos:column="6"/></specifier> <name pos:line="114" pos:column="7">char<pos:position pos:line="114" pos:column="11"/></name> <modifier pos:line="114" pos:column="12">*<pos:position pos:line="114" pos:column="13"/></modifier></type><name pos:line="114" pos:column="13">ident_default_email<pos:position pos:line="114" pos:column="32"/></name><parameter_list pos:line="114" pos:column="32">(<parameter><decl><type><name pos:line="114" pos:column="33">void<pos:position pos:line="114" pos:column="37"/></name></type></decl></parameter>)<pos:position pos:line="114" pos:column="38"/></parameter_list>
<block pos:line="115" pos:column="1">{
	<if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><operator pos:line="116" pos:column="13">!<pos:position pos:line="116" pos:column="14"/></operator><name><name pos:line="116" pos:column="14">git_default_email<pos:position pos:line="116" pos:column="31"/></name><operator pos:line="116" pos:column="31">.<pos:position pos:line="116" pos:column="32"/></operator><name pos:line="116" pos:column="32">len<pos:position pos:line="116" pos:column="35"/></name></name></expr>)<pos:position pos:line="116" pos:column="36"/></condition><then pos:line="116" pos:column="36"> <block pos:line="116" pos:column="37">{
		<decl_stmt><decl><type><specifier pos:line="117" pos:column="17">const<pos:position pos:line="117" pos:column="22"/></specifier> <name pos:line="117" pos:column="23">char<pos:position pos:line="117" pos:column="27"/></name> <modifier pos:line="117" pos:column="28">*<pos:position pos:line="117" pos:column="29"/></modifier></type><name pos:line="117" pos:column="29">email<pos:position pos:line="117" pos:column="34"/></name> <init pos:line="117" pos:column="35">= <expr><call><name pos:line="117" pos:column="37">getenv<pos:position pos:line="117" pos:column="43"/></name><argument_list pos:line="117" pos:column="43">(<argument><expr><literal type="string" pos:line="117" pos:column="44">"EMAIL"<pos:position pos:line="117" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="117" pos:column="53"/></decl_stmt>

		<if pos:line="119" pos:column="17">if <condition pos:line="119" pos:column="20">(<expr><name pos:line="119" pos:column="21">email<pos:position pos:line="119" pos:column="26"/></name> <operator pos:line="119" pos:column="27">&amp;&amp;<pos:position pos:line="119" pos:column="37"/></operator> <name><name pos:line="119" pos:column="30">email<pos:position pos:line="119" pos:column="35"/></name><index pos:line="119" pos:column="35">[<expr><literal type="number" pos:line="119" pos:column="36">0<pos:position pos:line="119" pos:column="37"/></literal></expr>]<pos:position pos:line="119" pos:column="38"/></index></name></expr>)<pos:position pos:line="119" pos:column="39"/></condition><then pos:line="119" pos:column="39"> <block pos:line="119" pos:column="40">{
			<expr_stmt><expr><call><name pos:line="120" pos:column="25">strbuf_addstr<pos:position pos:line="120" pos:column="38"/></name><argument_list pos:line="120" pos:column="38">(<argument><expr><operator pos:line="120" pos:column="39">&amp;<pos:position pos:line="120" pos:column="44"/></operator><name pos:line="120" pos:column="40">git_default_email<pos:position pos:line="120" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="59">email<pos:position pos:line="120" pos:column="64"/></name></expr></argument>)<pos:position pos:line="120" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name pos:line="121" pos:column="25">committer_ident_explicitly_given<pos:position pos:line="121" pos:column="57"/></name> <operator pos:line="121" pos:column="58">|=<pos:position pos:line="121" pos:column="60"/></operator> <name pos:line="121" pos:column="61">IDENT_MAIL_GIVEN<pos:position pos:line="121" pos:column="77"/></name></expr>;<pos:position pos:line="121" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><name pos:line="122" pos:column="25">author_ident_explicitly_given<pos:position pos:line="122" pos:column="54"/></name> <operator pos:line="122" pos:column="55">|=<pos:position pos:line="122" pos:column="57"/></operator> <name pos:line="122" pos:column="58">IDENT_MAIL_GIVEN<pos:position pos:line="122" pos:column="74"/></name></expr>;<pos:position pos:line="122" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="123" pos:column="18"/></block></then> <else pos:line="123" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="124" pos:column="25">copy_email<pos:position pos:line="124" pos:column="35"/></name><argument_list pos:line="124" pos:column="35">(<argument><expr><call><name pos:line="124" pos:column="36">xgetpwuid_self<pos:position pos:line="124" pos:column="50"/></name><argument_list pos:line="124" pos:column="50">()<pos:position pos:line="124" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="124" pos:column="54">&amp;<pos:position pos:line="124" pos:column="59"/></operator><name pos:line="124" pos:column="55">git_default_email<pos:position pos:line="124" pos:column="72"/></name></expr></argument>)<pos:position pos:line="124" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="74"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="125" pos:column="17">strbuf_trim<pos:position pos:line="125" pos:column="28"/></name><argument_list pos:line="125" pos:column="28">(<argument><expr><operator pos:line="125" pos:column="29">&amp;<pos:position pos:line="125" pos:column="34"/></operator><name pos:line="125" pos:column="30">git_default_email<pos:position pos:line="125" pos:column="47"/></name></expr></argument>)<pos:position pos:line="125" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="126" pos:column="10"/></block></then></if>
	<return pos:line="127" pos:column="9">return <expr><name><name pos:line="127" pos:column="16">git_default_email<pos:position pos:line="127" pos:column="33"/></name><operator pos:line="127" pos:column="33">.<pos:position pos:line="127" pos:column="34"/></operator><name pos:line="127" pos:column="34">buf<pos:position pos:line="127" pos:column="37"/></name></name></expr>;<pos:position pos:line="127" pos:column="38"/></return>
}<pos:position pos:line="128" pos:column="2"/></block></function>

<function><specifier pos:line="130" pos:column="1">static<pos:position pos:line="130" pos:column="7"/></specifier> <type><specifier pos:line="130" pos:column="8">const<pos:position pos:line="130" pos:column="13"/></specifier> <name pos:line="130" pos:column="14">char<pos:position pos:line="130" pos:column="18"/></name> <modifier pos:line="130" pos:column="19">*<pos:position pos:line="130" pos:column="20"/></modifier></type><name pos:line="130" pos:column="20">ident_default_date<pos:position pos:line="130" pos:column="38"/></name><parameter_list pos:line="130" pos:column="38">(<parameter><decl><type><name pos:line="130" pos:column="39">void<pos:position pos:line="130" pos:column="43"/></name></type></decl></parameter>)<pos:position pos:line="130" pos:column="44"/></parameter_list>
<block pos:line="131" pos:column="1">{
	<if pos:line="132" pos:column="9">if <condition pos:line="132" pos:column="12">(<expr><operator pos:line="132" pos:column="13">!<pos:position pos:line="132" pos:column="14"/></operator><name><name pos:line="132" pos:column="14">git_default_date<pos:position pos:line="132" pos:column="30"/></name><operator pos:line="132" pos:column="30">.<pos:position pos:line="132" pos:column="31"/></operator><name pos:line="132" pos:column="31">len<pos:position pos:line="132" pos:column="34"/></name></name></expr>)<pos:position pos:line="132" pos:column="35"/></condition><then pos:line="132" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="133" pos:column="17">datestamp<pos:position pos:line="133" pos:column="26"/></name><argument_list pos:line="133" pos:column="26">(<argument><expr><operator pos:line="133" pos:column="27">&amp;<pos:position pos:line="133" pos:column="32"/></operator><name pos:line="133" pos:column="28">git_default_date<pos:position pos:line="133" pos:column="44"/></name></expr></argument>)<pos:position pos:line="133" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="46"/></expr_stmt></block></then></if>
	<return pos:line="134" pos:column="9">return <expr><name><name pos:line="134" pos:column="16">git_default_date<pos:position pos:line="134" pos:column="32"/></name><operator pos:line="134" pos:column="32">.<pos:position pos:line="134" pos:column="33"/></operator><name pos:line="134" pos:column="33">buf<pos:position pos:line="134" pos:column="36"/></name></name></expr>;<pos:position pos:line="134" pos:column="37"/></return>
}<pos:position pos:line="135" pos:column="2"/></block></function>

<function><specifier pos:line="137" pos:column="1">static<pos:position pos:line="137" pos:column="7"/></specifier> <type><name pos:line="137" pos:column="8">int<pos:position pos:line="137" pos:column="11"/></name></type> <name pos:line="137" pos:column="12">crud<pos:position pos:line="137" pos:column="16"/></name><parameter_list pos:line="137" pos:column="16">(<parameter><decl><type><name pos:line="137" pos:column="17">unsigned<pos:position pos:line="137" pos:column="25"/></name> <name pos:line="137" pos:column="26">char<pos:position pos:line="137" pos:column="30"/></name></type> <name pos:line="137" pos:column="31">c<pos:position pos:line="137" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="137" pos:column="33"/></parameter_list>
<block pos:line="138" pos:column="1">{
	<return pos:line="139" pos:column="9">return  <expr><name pos:line="139" pos:column="17">c<pos:position pos:line="139" pos:column="18"/></name> <operator pos:line="139" pos:column="19">&lt;=<pos:position pos:line="139" pos:column="24"/></operator> <literal type="number" pos:line="139" pos:column="22">32<pos:position pos:line="139" pos:column="24"/></literal>  <operator pos:line="139" pos:column="26">||<pos:position pos:line="139" pos:column="28"/></operator>
		<name pos:line="140" pos:column="17">c<pos:position pos:line="140" pos:column="18"/></name> <operator pos:line="140" pos:column="19">==<pos:position pos:line="140" pos:column="21"/></operator> <literal type="char" pos:line="140" pos:column="22">'.'<pos:position pos:line="140" pos:column="25"/></literal> <operator pos:line="140" pos:column="26">||<pos:position pos:line="140" pos:column="28"/></operator>
		<name pos:line="141" pos:column="17">c<pos:position pos:line="141" pos:column="18"/></name> <operator pos:line="141" pos:column="19">==<pos:position pos:line="141" pos:column="21"/></operator> <literal type="char" pos:line="141" pos:column="22">','<pos:position pos:line="141" pos:column="25"/></literal> <operator pos:line="141" pos:column="26">||<pos:position pos:line="141" pos:column="28"/></operator>
		<name pos:line="142" pos:column="17">c<pos:position pos:line="142" pos:column="18"/></name> <operator pos:line="142" pos:column="19">==<pos:position pos:line="142" pos:column="21"/></operator> <literal type="char" pos:line="142" pos:column="22">':'<pos:position pos:line="142" pos:column="25"/></literal> <operator pos:line="142" pos:column="26">||<pos:position pos:line="142" pos:column="28"/></operator>
		<name pos:line="143" pos:column="17">c<pos:position pos:line="143" pos:column="18"/></name> <operator pos:line="143" pos:column="19">==<pos:position pos:line="143" pos:column="21"/></operator> <literal type="char" pos:line="143" pos:column="22">';'<pos:position pos:line="143" pos:column="25"/></literal> <operator pos:line="143" pos:column="26">||<pos:position pos:line="143" pos:column="28"/></operator>
		<name pos:line="144" pos:column="17">c<pos:position pos:line="144" pos:column="18"/></name> <operator pos:line="144" pos:column="19">==<pos:position pos:line="144" pos:column="21"/></operator> <literal type="char" pos:line="144" pos:column="22">'&lt;'<pos:position pos:line="144" pos:column="28"/></literal> <operator pos:line="144" pos:column="26">||<pos:position pos:line="144" pos:column="28"/></operator>
		<name pos:line="145" pos:column="17">c<pos:position pos:line="145" pos:column="18"/></name> <operator pos:line="145" pos:column="19">==<pos:position pos:line="145" pos:column="21"/></operator> <literal type="char" pos:line="145" pos:column="22">'&gt;'<pos:position pos:line="145" pos:column="28"/></literal> <operator pos:line="145" pos:column="26">||<pos:position pos:line="145" pos:column="28"/></operator>
		<name pos:line="146" pos:column="17">c<pos:position pos:line="146" pos:column="18"/></name> <operator pos:line="146" pos:column="19">==<pos:position pos:line="146" pos:column="21"/></operator> <literal type="char" pos:line="146" pos:column="22">'"'<pos:position pos:line="146" pos:column="25"/></literal> <operator pos:line="146" pos:column="26">||<pos:position pos:line="146" pos:column="28"/></operator>
		<name pos:line="147" pos:column="17">c<pos:position pos:line="147" pos:column="18"/></name> <operator pos:line="147" pos:column="19">==<pos:position pos:line="147" pos:column="21"/></operator> <literal type="char" pos:line="147" pos:column="22">'\\'<pos:position pos:line="147" pos:column="26"/></literal> <operator pos:line="147" pos:column="27">||<pos:position pos:line="147" pos:column="29"/></operator>
		<name pos:line="148" pos:column="17">c<pos:position pos:line="148" pos:column="18"/></name> <operator pos:line="148" pos:column="19">==<pos:position pos:line="148" pos:column="21"/></operator> <literal type="char" pos:line="148" pos:column="22">'\''<pos:position pos:line="148" pos:column="26"/></literal></expr>;<pos:position pos:line="148" pos:column="27"/></return>
}<pos:position pos:line="149" pos:column="2"/></block></function>

<comment type="block" pos:line="151" pos:column="1">/*
 * Copy over a string to the destination, but avoid special
 * characters ('\n', '&lt;' and '&gt;') and remove crud at the end
 */</comment>
<function><specifier pos:line="155" pos:column="1">static<pos:position pos:line="155" pos:column="7"/></specifier> <type><name pos:line="155" pos:column="8">void<pos:position pos:line="155" pos:column="12"/></name></type> <name pos:line="155" pos:column="13">strbuf_addstr_without_crud<pos:position pos:line="155" pos:column="39"/></name><parameter_list pos:line="155" pos:column="39">(<parameter><decl><type><name><name pos:line="155" pos:column="40">struct<pos:position pos:line="155" pos:column="46"/></name> <name pos:line="155" pos:column="47">strbuf<pos:position pos:line="155" pos:column="53"/></name></name> <modifier pos:line="155" pos:column="54">*<pos:position pos:line="155" pos:column="55"/></modifier></type><name pos:line="155" pos:column="55">sb<pos:position pos:line="155" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="155" pos:column="59">const<pos:position pos:line="155" pos:column="64"/></specifier> <name pos:line="155" pos:column="65">char<pos:position pos:line="155" pos:column="69"/></name> <modifier pos:line="155" pos:column="70">*<pos:position pos:line="155" pos:column="71"/></modifier></type><name pos:line="155" pos:column="71">src<pos:position pos:line="155" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="155" pos:column="75"/></parameter_list>
<block pos:line="156" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="157" pos:column="9">size_t<pos:position pos:line="157" pos:column="15"/></name></type> <name pos:line="157" pos:column="16">i<pos:position pos:line="157" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="157" pos:column="19">len<pos:position pos:line="157" pos:column="22"/></name></decl>;<pos:position pos:line="157" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="158" pos:column="9">unsigned<pos:position pos:line="158" pos:column="17"/></name> <name pos:line="158" pos:column="18">char<pos:position pos:line="158" pos:column="22"/></name></type> <name pos:line="158" pos:column="23">c<pos:position pos:line="158" pos:column="24"/></name></decl>;<pos:position pos:line="158" pos:column="25"/></decl_stmt>

	<comment type="block" pos:line="160" pos:column="9">/* Remove crud from the beginning.. */</comment>
	<while pos:line="161" pos:column="9">while <condition pos:line="161" pos:column="15">(<expr><operator pos:line="161" pos:column="16">(<pos:position pos:line="161" pos:column="17"/></operator><name pos:line="161" pos:column="17">c<pos:position pos:line="161" pos:column="18"/></name> <operator pos:line="161" pos:column="19">=<pos:position pos:line="161" pos:column="20"/></operator> <operator pos:line="161" pos:column="21">*<pos:position pos:line="161" pos:column="22"/></operator><name pos:line="161" pos:column="22">src<pos:position pos:line="161" pos:column="25"/></name><operator pos:line="161" pos:column="25">)<pos:position pos:line="161" pos:column="26"/></operator> <operator pos:line="161" pos:column="27">!=<pos:position pos:line="161" pos:column="29"/></operator> <literal type="number" pos:line="161" pos:column="30">0<pos:position pos:line="161" pos:column="31"/></literal></expr>)<pos:position pos:line="161" pos:column="32"/></condition> <block pos:line="161" pos:column="33">{
		<if pos:line="162" pos:column="17">if <condition pos:line="162" pos:column="20">(<expr><operator pos:line="162" pos:column="21">!<pos:position pos:line="162" pos:column="22"/></operator><call><name pos:line="162" pos:column="22">crud<pos:position pos:line="162" pos:column="26"/></name><argument_list pos:line="162" pos:column="26">(<argument><expr><name pos:line="162" pos:column="27">c<pos:position pos:line="162" pos:column="28"/></name></expr></argument>)<pos:position pos:line="162" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="162" pos:column="30"/></condition><then pos:line="162" pos:column="30">
			<block type="pseudo"><break pos:line="163" pos:column="25">break;<pos:position pos:line="163" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="164" pos:column="17">src<pos:position pos:line="164" pos:column="20"/></name><operator pos:line="164" pos:column="20">++<pos:position pos:line="164" pos:column="22"/></operator></expr>;<pos:position pos:line="164" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="165" pos:column="10"/></block></while>

	<comment type="block" pos:line="167" pos:column="9">/* Remove crud from the end.. */</comment>
	<expr_stmt><expr><name pos:line="168" pos:column="9">len<pos:position pos:line="168" pos:column="12"/></name> <operator pos:line="168" pos:column="13">=<pos:position pos:line="168" pos:column="14"/></operator> <call><name pos:line="168" pos:column="15">strlen<pos:position pos:line="168" pos:column="21"/></name><argument_list pos:line="168" pos:column="21">(<argument><expr><name pos:line="168" pos:column="22">src<pos:position pos:line="168" pos:column="25"/></name></expr></argument>)<pos:position pos:line="168" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="27"/></expr_stmt>
	<while pos:line="169" pos:column="9">while <condition pos:line="169" pos:column="15">(<expr><name pos:line="169" pos:column="16">len<pos:position pos:line="169" pos:column="19"/></name> <operator pos:line="169" pos:column="20">&gt;<pos:position pos:line="169" pos:column="24"/></operator> <literal type="number" pos:line="169" pos:column="22">0<pos:position pos:line="169" pos:column="23"/></literal></expr>)<pos:position pos:line="169" pos:column="24"/></condition> <block pos:line="169" pos:column="25">{
		<expr_stmt><expr><name pos:line="170" pos:column="17">c<pos:position pos:line="170" pos:column="18"/></name> <operator pos:line="170" pos:column="19">=<pos:position pos:line="170" pos:column="20"/></operator> <name><name pos:line="170" pos:column="21">src<pos:position pos:line="170" pos:column="24"/></name><index pos:line="170" pos:column="24">[<expr><name pos:line="170" pos:column="25">len<pos:position pos:line="170" pos:column="28"/></name><operator pos:line="170" pos:column="28">-<pos:position pos:line="170" pos:column="29"/></operator><literal type="number" pos:line="170" pos:column="29">1<pos:position pos:line="170" pos:column="30"/></literal></expr>]<pos:position pos:line="170" pos:column="31"/></index></name></expr>;<pos:position pos:line="170" pos:column="32"/></expr_stmt>
		<if pos:line="171" pos:column="17">if <condition pos:line="171" pos:column="20">(<expr><operator pos:line="171" pos:column="21">!<pos:position pos:line="171" pos:column="22"/></operator><call><name pos:line="171" pos:column="22">crud<pos:position pos:line="171" pos:column="26"/></name><argument_list pos:line="171" pos:column="26">(<argument><expr><name pos:line="171" pos:column="27">c<pos:position pos:line="171" pos:column="28"/></name></expr></argument>)<pos:position pos:line="171" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="171" pos:column="30"/></condition><then pos:line="171" pos:column="30">
			<block type="pseudo"><break pos:line="172" pos:column="25">break;<pos:position pos:line="172" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><operator pos:line="173" pos:column="17">--<pos:position pos:line="173" pos:column="19"/></operator><name pos:line="173" pos:column="19">len<pos:position pos:line="173" pos:column="22"/></name></expr>;<pos:position pos:line="173" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="174" pos:column="10"/></block></while>

	<comment type="block" pos:line="176" pos:column="9">/*
	 * Copy the rest to the buffer, but avoid the special
	 * characters '\n' '&lt;' and '&gt;' that act as delimiters on
	 * an identification line. We can only remove crud, never add it,
	 * so 'len' is our maximum.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="182" pos:column="9">strbuf_grow<pos:position pos:line="182" pos:column="20"/></name><argument_list pos:line="182" pos:column="20">(<argument><expr><name pos:line="182" pos:column="21">sb<pos:position pos:line="182" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="25">len<pos:position pos:line="182" pos:column="28"/></name></expr></argument>)<pos:position pos:line="182" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="30"/></expr_stmt>
	<for pos:line="183" pos:column="9">for <control pos:line="183" pos:column="13">(<init><expr><name pos:line="183" pos:column="14">i<pos:position pos:line="183" pos:column="15"/></name> <operator pos:line="183" pos:column="16">=<pos:position pos:line="183" pos:column="17"/></operator> <literal type="number" pos:line="183" pos:column="18">0<pos:position pos:line="183" pos:column="19"/></literal></expr>;<pos:position pos:line="183" pos:column="20"/></init> <condition><expr><name pos:line="183" pos:column="21">i<pos:position pos:line="183" pos:column="22"/></name> <operator pos:line="183" pos:column="23">&lt;<pos:position pos:line="183" pos:column="27"/></operator> <name pos:line="183" pos:column="25">len<pos:position pos:line="183" pos:column="28"/></name></expr>;<pos:position pos:line="183" pos:column="29"/></condition> <incr><expr><name pos:line="183" pos:column="30">i<pos:position pos:line="183" pos:column="31"/></name><operator pos:line="183" pos:column="31">++<pos:position pos:line="183" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="183" pos:column="34"/></control> <block pos:line="183" pos:column="35">{
		<expr_stmt><expr><name pos:line="184" pos:column="17">c<pos:position pos:line="184" pos:column="18"/></name> <operator pos:line="184" pos:column="19">=<pos:position pos:line="184" pos:column="20"/></operator> <operator pos:line="184" pos:column="21">*<pos:position pos:line="184" pos:column="22"/></operator><name pos:line="184" pos:column="22">src<pos:position pos:line="184" pos:column="25"/></name><operator pos:line="184" pos:column="25">++<pos:position pos:line="184" pos:column="27"/></operator></expr>;<pos:position pos:line="184" pos:column="28"/></expr_stmt>
		<switch pos:line="185" pos:column="17">switch <condition pos:line="185" pos:column="24">(<expr><name pos:line="185" pos:column="25">c<pos:position pos:line="185" pos:column="26"/></name></expr>)<pos:position pos:line="185" pos:column="27"/></condition> <block pos:line="185" pos:column="28">{
		<case pos:line="186" pos:column="17">case <expr><literal type="char" pos:line="186" pos:column="22">'\n'<pos:position pos:line="186" pos:column="26"/></literal></expr>:<pos:position pos:line="186" pos:column="27"/></case> <case pos:line="186" pos:column="28">case <expr><literal type="char" pos:line="186" pos:column="33">'&lt;'<pos:position pos:line="186" pos:column="39"/></literal></expr>:<pos:position pos:line="186" pos:column="37"/></case> <case pos:line="186" pos:column="38">case <expr><literal type="char" pos:line="186" pos:column="43">'&gt;'<pos:position pos:line="186" pos:column="49"/></literal></expr>:<pos:position pos:line="186" pos:column="47"/></case>
			<continue pos:line="187" pos:column="25">continue;<pos:position pos:line="187" pos:column="34"/></continue>
		}<pos:position pos:line="188" pos:column="18"/></block></switch>
		<expr_stmt><expr><name><name pos:line="189" pos:column="17">sb<pos:position pos:line="189" pos:column="19"/></name><operator pos:line="189" pos:column="19">-&gt;<pos:position pos:line="189" pos:column="24"/></operator><name pos:line="189" pos:column="21">buf<pos:position pos:line="189" pos:column="24"/></name><index pos:line="189" pos:column="24">[<expr><name><name pos:line="189" pos:column="25">sb<pos:position pos:line="189" pos:column="27"/></name><operator pos:line="189" pos:column="27">-&gt;<pos:position pos:line="189" pos:column="32"/></operator><name pos:line="189" pos:column="29">len<pos:position pos:line="189" pos:column="32"/></name></name><operator pos:line="189" pos:column="32">++<pos:position pos:line="189" pos:column="34"/></operator></expr>]<pos:position pos:line="189" pos:column="35"/></index></name> <operator pos:line="189" pos:column="36">=<pos:position pos:line="189" pos:column="37"/></operator> <name pos:line="189" pos:column="38">c<pos:position pos:line="189" pos:column="39"/></name></expr>;<pos:position pos:line="189" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="190" pos:column="10"/></block></for>
	<expr_stmt><expr><name><name pos:line="191" pos:column="9">sb<pos:position pos:line="191" pos:column="11"/></name><operator pos:line="191" pos:column="11">-&gt;<pos:position pos:line="191" pos:column="16"/></operator><name pos:line="191" pos:column="13">buf<pos:position pos:line="191" pos:column="16"/></name><index pos:line="191" pos:column="16">[<expr><name><name pos:line="191" pos:column="17">sb<pos:position pos:line="191" pos:column="19"/></name><operator pos:line="191" pos:column="19">-&gt;<pos:position pos:line="191" pos:column="24"/></operator><name pos:line="191" pos:column="21">len<pos:position pos:line="191" pos:column="24"/></name></name></expr>]<pos:position pos:line="191" pos:column="25"/></index></name> <operator pos:line="191" pos:column="26">=<pos:position pos:line="191" pos:column="27"/></operator> <literal type="char" pos:line="191" pos:column="28">'\0'<pos:position pos:line="191" pos:column="32"/></literal></expr>;<pos:position pos:line="191" pos:column="33"/></expr_stmt>
}<pos:position pos:line="192" pos:column="2"/></block></function>

<comment type="block" pos:line="194" pos:column="1">/*
 * Reverse of fmt_ident(); given an ident line, split the fields
 * to allow the caller to parse it.
 * Signal a success by returning 0, but date/tz fields of the result
 * can still be NULL if the input line only has the name/email part
 * (e.g. reading from a reflog entry).
 */</comment>
<function><type><name pos:line="201" pos:column="1">int<pos:position pos:line="201" pos:column="4"/></name></type> <name pos:line="201" pos:column="5">split_ident_line<pos:position pos:line="201" pos:column="21"/></name><parameter_list pos:line="201" pos:column="21">(<parameter><decl><type><name><name pos:line="201" pos:column="22">struct<pos:position pos:line="201" pos:column="28"/></name> <name pos:line="201" pos:column="29">ident_split<pos:position pos:line="201" pos:column="40"/></name></name> <modifier pos:line="201" pos:column="41">*<pos:position pos:line="201" pos:column="42"/></modifier></type><name pos:line="201" pos:column="42">split<pos:position pos:line="201" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="201" pos:column="49">const<pos:position pos:line="201" pos:column="54"/></specifier> <name pos:line="201" pos:column="55">char<pos:position pos:line="201" pos:column="59"/></name> <modifier pos:line="201" pos:column="60">*<pos:position pos:line="201" pos:column="61"/></modifier></type><name pos:line="201" pos:column="61">line<pos:position pos:line="201" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="201" pos:column="67">int<pos:position pos:line="201" pos:column="70"/></name></type> <name pos:line="201" pos:column="71">len<pos:position pos:line="201" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="201" pos:column="75"/></parameter_list>
<block pos:line="202" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="203" pos:column="9">const<pos:position pos:line="203" pos:column="14"/></specifier> <name pos:line="203" pos:column="15">char<pos:position pos:line="203" pos:column="19"/></name> <modifier pos:line="203" pos:column="20">*<pos:position pos:line="203" pos:column="21"/></modifier></type><name pos:line="203" pos:column="21">cp<pos:position pos:line="203" pos:column="23"/></name></decl>;<pos:position pos:line="203" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="204" pos:column="9">size_t<pos:position pos:line="204" pos:column="15"/></name></type> <name pos:line="204" pos:column="16">span<pos:position pos:line="204" pos:column="20"/></name></decl>;<pos:position pos:line="204" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="205" pos:column="9">int<pos:position pos:line="205" pos:column="12"/></name></type> <name pos:line="205" pos:column="13">status<pos:position pos:line="205" pos:column="19"/></name> <init pos:line="205" pos:column="20">= <expr><operator pos:line="205" pos:column="22">-<pos:position pos:line="205" pos:column="23"/></operator><literal type="number" pos:line="205" pos:column="23">1<pos:position pos:line="205" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="205" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="207" pos:column="9">memset<pos:position pos:line="207" pos:column="15"/></name><argument_list pos:line="207" pos:column="15">(<argument><expr><name pos:line="207" pos:column="16">split<pos:position pos:line="207" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="207" pos:column="23">0<pos:position pos:line="207" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="207" pos:column="26">sizeof<argument_list pos:line="207" pos:column="32">(<argument><expr><operator pos:line="207" pos:column="33">*<pos:position pos:line="207" pos:column="34"/></operator><name pos:line="207" pos:column="34">split<pos:position pos:line="207" pos:column="39"/></name></expr></argument>)<pos:position pos:line="207" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="207" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="209" pos:column="9">split<pos:position pos:line="209" pos:column="14"/></name><operator pos:line="209" pos:column="14">-&gt;<pos:position pos:line="209" pos:column="19"/></operator><name pos:line="209" pos:column="16">name_begin<pos:position pos:line="209" pos:column="26"/></name></name> <operator pos:line="209" pos:column="27">=<pos:position pos:line="209" pos:column="28"/></operator> <name pos:line="209" pos:column="29">line<pos:position pos:line="209" pos:column="33"/></name></expr>;<pos:position pos:line="209" pos:column="34"/></expr_stmt>
	<for pos:line="210" pos:column="9">for <control pos:line="210" pos:column="13">(<init><expr><name pos:line="210" pos:column="14">cp<pos:position pos:line="210" pos:column="16"/></name> <operator pos:line="210" pos:column="17">=<pos:position pos:line="210" pos:column="18"/></operator> <name pos:line="210" pos:column="19">line<pos:position pos:line="210" pos:column="23"/></name></expr>;<pos:position pos:line="210" pos:column="24"/></init> <condition><expr><operator pos:line="210" pos:column="25">*<pos:position pos:line="210" pos:column="26"/></operator><name pos:line="210" pos:column="26">cp<pos:position pos:line="210" pos:column="28"/></name> <operator pos:line="210" pos:column="29">&amp;&amp;<pos:position pos:line="210" pos:column="39"/></operator> <name pos:line="210" pos:column="32">cp<pos:position pos:line="210" pos:column="34"/></name> <operator pos:line="210" pos:column="35">&lt;<pos:position pos:line="210" pos:column="39"/></operator> <name pos:line="210" pos:column="37">line<pos:position pos:line="210" pos:column="41"/></name> <operator pos:line="210" pos:column="42">+<pos:position pos:line="210" pos:column="43"/></operator> <name pos:line="210" pos:column="44">len<pos:position pos:line="210" pos:column="47"/></name></expr>;<pos:position pos:line="210" pos:column="48"/></condition> <incr><expr><name pos:line="210" pos:column="49">cp<pos:position pos:line="210" pos:column="51"/></name><operator pos:line="210" pos:column="51">++<pos:position pos:line="210" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="210" pos:column="54"/></control>
		<block type="pseudo"><if pos:line="211" pos:column="17">if <condition pos:line="211" pos:column="20">(<expr><operator pos:line="211" pos:column="21">*<pos:position pos:line="211" pos:column="22"/></operator><name pos:line="211" pos:column="22">cp<pos:position pos:line="211" pos:column="24"/></name> <operator pos:line="211" pos:column="25">==<pos:position pos:line="211" pos:column="27"/></operator> <literal type="char" pos:line="211" pos:column="28">'&lt;'<pos:position pos:line="211" pos:column="34"/></literal></expr>)<pos:position pos:line="211" pos:column="32"/></condition><then pos:line="211" pos:column="32"> <block pos:line="211" pos:column="33">{
			<expr_stmt><expr><name><name pos:line="212" pos:column="25">split<pos:position pos:line="212" pos:column="30"/></name><operator pos:line="212" pos:column="30">-&gt;<pos:position pos:line="212" pos:column="35"/></operator><name pos:line="212" pos:column="32">mail_begin<pos:position pos:line="212" pos:column="42"/></name></name> <operator pos:line="212" pos:column="43">=<pos:position pos:line="212" pos:column="44"/></operator> <name pos:line="212" pos:column="45">cp<pos:position pos:line="212" pos:column="47"/></name> <operator pos:line="212" pos:column="48">+<pos:position pos:line="212" pos:column="49"/></operator> <literal type="number" pos:line="212" pos:column="50">1<pos:position pos:line="212" pos:column="51"/></literal></expr>;<pos:position pos:line="212" pos:column="52"/></expr_stmt>
			<break pos:line="213" pos:column="25">break;<pos:position pos:line="213" pos:column="31"/></break>
		}<pos:position pos:line="214" pos:column="18"/></block></then></if></block></for>
	<if pos:line="215" pos:column="9">if <condition pos:line="215" pos:column="12">(<expr><operator pos:line="215" pos:column="13">!<pos:position pos:line="215" pos:column="14"/></operator><name><name pos:line="215" pos:column="14">split<pos:position pos:line="215" pos:column="19"/></name><operator pos:line="215" pos:column="19">-&gt;<pos:position pos:line="215" pos:column="24"/></operator><name pos:line="215" pos:column="21">mail_begin<pos:position pos:line="215" pos:column="31"/></name></name></expr>)<pos:position pos:line="215" pos:column="32"/></condition><then pos:line="215" pos:column="32">
		<block type="pseudo"><return pos:line="216" pos:column="17">return <expr><name pos:line="216" pos:column="24">status<pos:position pos:line="216" pos:column="30"/></name></expr>;<pos:position pos:line="216" pos:column="31"/></return></block></then></if>

	<for pos:line="218" pos:column="9">for <control pos:line="218" pos:column="13">(<init><expr><name pos:line="218" pos:column="14">cp<pos:position pos:line="218" pos:column="16"/></name> <operator pos:line="218" pos:column="17">=<pos:position pos:line="218" pos:column="18"/></operator> <name><name pos:line="218" pos:column="19">split<pos:position pos:line="218" pos:column="24"/></name><operator pos:line="218" pos:column="24">-&gt;<pos:position pos:line="218" pos:column="29"/></operator><name pos:line="218" pos:column="26">mail_begin<pos:position pos:line="218" pos:column="36"/></name></name> <operator pos:line="218" pos:column="37">-<pos:position pos:line="218" pos:column="38"/></operator> <literal type="number" pos:line="218" pos:column="39">2<pos:position pos:line="218" pos:column="40"/></literal></expr>;<pos:position pos:line="218" pos:column="41"/></init> <condition><expr><name pos:line="218" pos:column="42">line<pos:position pos:line="218" pos:column="46"/></name> <operator pos:line="218" pos:column="47">&lt;=<pos:position pos:line="218" pos:column="52"/></operator> <name pos:line="218" pos:column="50">cp<pos:position pos:line="218" pos:column="52"/></name></expr>;<pos:position pos:line="218" pos:column="53"/></condition> <incr><expr><name pos:line="218" pos:column="54">cp<pos:position pos:line="218" pos:column="56"/></name><operator pos:line="218" pos:column="56">--<pos:position pos:line="218" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="218" pos:column="59"/></control>
		<block type="pseudo"><if pos:line="219" pos:column="17">if <condition pos:line="219" pos:column="20">(<expr><operator pos:line="219" pos:column="21">!<pos:position pos:line="219" pos:column="22"/></operator><call><name pos:line="219" pos:column="22">isspace<pos:position pos:line="219" pos:column="29"/></name><argument_list pos:line="219" pos:column="29">(<argument><expr><operator pos:line="219" pos:column="30">*<pos:position pos:line="219" pos:column="31"/></operator><name pos:line="219" pos:column="31">cp<pos:position pos:line="219" pos:column="33"/></name></expr></argument>)<pos:position pos:line="219" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="219" pos:column="35"/></condition><then pos:line="219" pos:column="35"> <block pos:line="219" pos:column="36">{
			<expr_stmt><expr><name><name pos:line="220" pos:column="25">split<pos:position pos:line="220" pos:column="30"/></name><operator pos:line="220" pos:column="30">-&gt;<pos:position pos:line="220" pos:column="35"/></operator><name pos:line="220" pos:column="32">name_end<pos:position pos:line="220" pos:column="40"/></name></name> <operator pos:line="220" pos:column="41">=<pos:position pos:line="220" pos:column="42"/></operator> <name pos:line="220" pos:column="43">cp<pos:position pos:line="220" pos:column="45"/></name> <operator pos:line="220" pos:column="46">+<pos:position pos:line="220" pos:column="47"/></operator> <literal type="number" pos:line="220" pos:column="48">1<pos:position pos:line="220" pos:column="49"/></literal></expr>;<pos:position pos:line="220" pos:column="50"/></expr_stmt>
			<break pos:line="221" pos:column="25">break;<pos:position pos:line="221" pos:column="31"/></break>
		}<pos:position pos:line="222" pos:column="18"/></block></then></if></block></for>
	<if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><operator pos:line="223" pos:column="13">!<pos:position pos:line="223" pos:column="14"/></operator><name><name pos:line="223" pos:column="14">split<pos:position pos:line="223" pos:column="19"/></name><operator pos:line="223" pos:column="19">-&gt;<pos:position pos:line="223" pos:column="24"/></operator><name pos:line="223" pos:column="21">name_end<pos:position pos:line="223" pos:column="29"/></name></name></expr>)<pos:position pos:line="223" pos:column="30"/></condition><then pos:line="223" pos:column="30"> <block pos:line="223" pos:column="31">{
		<comment type="block" pos:line="224" pos:column="17">/* no human readable name */</comment>
		<expr_stmt><expr><name><name pos:line="225" pos:column="17">split<pos:position pos:line="225" pos:column="22"/></name><operator pos:line="225" pos:column="22">-&gt;<pos:position pos:line="225" pos:column="27"/></operator><name pos:line="225" pos:column="24">name_end<pos:position pos:line="225" pos:column="32"/></name></name> <operator pos:line="225" pos:column="33">=<pos:position pos:line="225" pos:column="34"/></operator> <name><name pos:line="225" pos:column="35">split<pos:position pos:line="225" pos:column="40"/></name><operator pos:line="225" pos:column="40">-&gt;<pos:position pos:line="225" pos:column="45"/></operator><name pos:line="225" pos:column="42">name_begin<pos:position pos:line="225" pos:column="52"/></name></name></expr>;<pos:position pos:line="225" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="226" pos:column="10"/></block></then></if>

	<for pos:line="228" pos:column="9">for <control pos:line="228" pos:column="13">(<init><expr><name pos:line="228" pos:column="14">cp<pos:position pos:line="228" pos:column="16"/></name> <operator pos:line="228" pos:column="17">=<pos:position pos:line="228" pos:column="18"/></operator> <name><name pos:line="228" pos:column="19">split<pos:position pos:line="228" pos:column="24"/></name><operator pos:line="228" pos:column="24">-&gt;<pos:position pos:line="228" pos:column="29"/></operator><name pos:line="228" pos:column="26">mail_begin<pos:position pos:line="228" pos:column="36"/></name></name></expr>;<pos:position pos:line="228" pos:column="37"/></init> <condition><expr><name pos:line="228" pos:column="38">cp<pos:position pos:line="228" pos:column="40"/></name> <operator pos:line="228" pos:column="41">&lt;<pos:position pos:line="228" pos:column="45"/></operator> <name pos:line="228" pos:column="43">line<pos:position pos:line="228" pos:column="47"/></name> <operator pos:line="228" pos:column="48">+<pos:position pos:line="228" pos:column="49"/></operator> <name pos:line="228" pos:column="50">len<pos:position pos:line="228" pos:column="53"/></name></expr>;<pos:position pos:line="228" pos:column="54"/></condition> <incr><expr><name pos:line="228" pos:column="55">cp<pos:position pos:line="228" pos:column="57"/></name><operator pos:line="228" pos:column="57">++<pos:position pos:line="228" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="228" pos:column="60"/></control>
		<block type="pseudo"><if pos:line="229" pos:column="17">if <condition pos:line="229" pos:column="20">(<expr><operator pos:line="229" pos:column="21">*<pos:position pos:line="229" pos:column="22"/></operator><name pos:line="229" pos:column="22">cp<pos:position pos:line="229" pos:column="24"/></name> <operator pos:line="229" pos:column="25">==<pos:position pos:line="229" pos:column="27"/></operator> <literal type="char" pos:line="229" pos:column="28">'&gt;'<pos:position pos:line="229" pos:column="34"/></literal></expr>)<pos:position pos:line="229" pos:column="32"/></condition><then pos:line="229" pos:column="32"> <block pos:line="229" pos:column="33">{
			<expr_stmt><expr><name><name pos:line="230" pos:column="25">split<pos:position pos:line="230" pos:column="30"/></name><operator pos:line="230" pos:column="30">-&gt;<pos:position pos:line="230" pos:column="35"/></operator><name pos:line="230" pos:column="32">mail_end<pos:position pos:line="230" pos:column="40"/></name></name> <operator pos:line="230" pos:column="41">=<pos:position pos:line="230" pos:column="42"/></operator> <name pos:line="230" pos:column="43">cp<pos:position pos:line="230" pos:column="45"/></name></expr>;<pos:position pos:line="230" pos:column="46"/></expr_stmt>
			<break pos:line="231" pos:column="25">break;<pos:position pos:line="231" pos:column="31"/></break>
		}<pos:position pos:line="232" pos:column="18"/></block></then></if></block></for>
	<if pos:line="233" pos:column="9">if <condition pos:line="233" pos:column="12">(<expr><operator pos:line="233" pos:column="13">!<pos:position pos:line="233" pos:column="14"/></operator><name><name pos:line="233" pos:column="14">split<pos:position pos:line="233" pos:column="19"/></name><operator pos:line="233" pos:column="19">-&gt;<pos:position pos:line="233" pos:column="24"/></operator><name pos:line="233" pos:column="21">mail_end<pos:position pos:line="233" pos:column="29"/></name></name></expr>)<pos:position pos:line="233" pos:column="30"/></condition><then pos:line="233" pos:column="30">
		<block type="pseudo"><return pos:line="234" pos:column="17">return <expr><name pos:line="234" pos:column="24">status<pos:position pos:line="234" pos:column="30"/></name></expr>;<pos:position pos:line="234" pos:column="31"/></return></block></then></if>

	<comment type="block" pos:line="236" pos:column="9">/*
	 * Look from the end-of-line to find the trailing "&gt;" of the mail
	 * address, even though we should already know it as split-&gt;mail_end.
	 * This can help in cases of broken idents with an extra "&gt;" somewhere
	 * in the email address.  Note that we are assuming the timestamp will
	 * never have a "&gt;" in it.
	 *
	 * Note that we will always find some "&gt;" before going off the front of
	 * the string, because will always hit the split-&gt;mail_end closing
	 * bracket.
	 */</comment>
	<for pos:line="247" pos:column="9">for <control pos:line="247" pos:column="13">(<init><expr><name pos:line="247" pos:column="14">cp<pos:position pos:line="247" pos:column="16"/></name> <operator pos:line="247" pos:column="17">=<pos:position pos:line="247" pos:column="18"/></operator> <name pos:line="247" pos:column="19">line<pos:position pos:line="247" pos:column="23"/></name> <operator pos:line="247" pos:column="24">+<pos:position pos:line="247" pos:column="25"/></operator> <name pos:line="247" pos:column="26">len<pos:position pos:line="247" pos:column="29"/></name> <operator pos:line="247" pos:column="30">-<pos:position pos:line="247" pos:column="31"/></operator> <literal type="number" pos:line="247" pos:column="32">1<pos:position pos:line="247" pos:column="33"/></literal></expr>;<pos:position pos:line="247" pos:column="34"/></init> <condition><expr><operator pos:line="247" pos:column="35">*<pos:position pos:line="247" pos:column="36"/></operator><name pos:line="247" pos:column="36">cp<pos:position pos:line="247" pos:column="38"/></name> <operator pos:line="247" pos:column="39">!=<pos:position pos:line="247" pos:column="41"/></operator> <literal type="char" pos:line="247" pos:column="42">'&gt;'<pos:position pos:line="247" pos:column="48"/></literal></expr>;<pos:position pos:line="247" pos:column="46"/></condition> <incr><expr><name pos:line="247" pos:column="47">cp<pos:position pos:line="247" pos:column="49"/></name><operator pos:line="247" pos:column="49">--<pos:position pos:line="247" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="247" pos:column="52"/></control>
		<block type="pseudo"><empty_stmt pos:line="248" pos:column="17">;<pos:position pos:line="248" pos:column="18"/></empty_stmt></block></for>

	<for pos:line="250" pos:column="9">for <control pos:line="250" pos:column="13">(<init><expr><name pos:line="250" pos:column="14">cp<pos:position pos:line="250" pos:column="16"/></name> <operator pos:line="250" pos:column="17">=<pos:position pos:line="250" pos:column="18"/></operator> <name pos:line="250" pos:column="19">cp<pos:position pos:line="250" pos:column="21"/></name> <operator pos:line="250" pos:column="22">+<pos:position pos:line="250" pos:column="23"/></operator> <literal type="number" pos:line="250" pos:column="24">1<pos:position pos:line="250" pos:column="25"/></literal></expr>;<pos:position pos:line="250" pos:column="26"/></init> <condition><expr><name pos:line="250" pos:column="27">cp<pos:position pos:line="250" pos:column="29"/></name> <operator pos:line="250" pos:column="30">&lt;<pos:position pos:line="250" pos:column="34"/></operator> <name pos:line="250" pos:column="32">line<pos:position pos:line="250" pos:column="36"/></name> <operator pos:line="250" pos:column="37">+<pos:position pos:line="250" pos:column="38"/></operator> <name pos:line="250" pos:column="39">len<pos:position pos:line="250" pos:column="42"/></name> <operator pos:line="250" pos:column="43">&amp;&amp;<pos:position pos:line="250" pos:column="53"/></operator> <call><name pos:line="250" pos:column="46">isspace<pos:position pos:line="250" pos:column="53"/></name><argument_list pos:line="250" pos:column="53">(<argument><expr><operator pos:line="250" pos:column="54">*<pos:position pos:line="250" pos:column="55"/></operator><name pos:line="250" pos:column="55">cp<pos:position pos:line="250" pos:column="57"/></name></expr></argument>)<pos:position pos:line="250" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="59"/></condition> <incr><expr><name pos:line="250" pos:column="60">cp<pos:position pos:line="250" pos:column="62"/></name><operator pos:line="250" pos:column="62">++<pos:position pos:line="250" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="250" pos:column="65"/></control>
		<block type="pseudo"><empty_stmt pos:line="251" pos:column="17">;<pos:position pos:line="251" pos:column="18"/></empty_stmt></block></for>
	<if pos:line="252" pos:column="9">if <condition pos:line="252" pos:column="12">(<expr><name pos:line="252" pos:column="13">line<pos:position pos:line="252" pos:column="17"/></name> <operator pos:line="252" pos:column="18">+<pos:position pos:line="252" pos:column="19"/></operator> <name pos:line="252" pos:column="20">len<pos:position pos:line="252" pos:column="23"/></name> <operator pos:line="252" pos:column="24">&lt;=<pos:position pos:line="252" pos:column="29"/></operator> <name pos:line="252" pos:column="27">cp<pos:position pos:line="252" pos:column="29"/></name></expr>)<pos:position pos:line="252" pos:column="30"/></condition><then pos:line="252" pos:column="30">
		<block type="pseudo"><goto pos:line="253" pos:column="17">goto <name pos:line="253" pos:column="22">person_only<pos:position pos:line="253" pos:column="33"/></name>;<pos:position pos:line="253" pos:column="34"/></goto></block></then></if>
	<expr_stmt><expr><name><name pos:line="254" pos:column="9">split<pos:position pos:line="254" pos:column="14"/></name><operator pos:line="254" pos:column="14">-&gt;<pos:position pos:line="254" pos:column="19"/></operator><name pos:line="254" pos:column="16">date_begin<pos:position pos:line="254" pos:column="26"/></name></name> <operator pos:line="254" pos:column="27">=<pos:position pos:line="254" pos:column="28"/></operator> <name pos:line="254" pos:column="29">cp<pos:position pos:line="254" pos:column="31"/></name></expr>;<pos:position pos:line="254" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="255" pos:column="9">span<pos:position pos:line="255" pos:column="13"/></name> <operator pos:line="255" pos:column="14">=<pos:position pos:line="255" pos:column="15"/></operator> <call><name pos:line="255" pos:column="16">strspn<pos:position pos:line="255" pos:column="22"/></name><argument_list pos:line="255" pos:column="22">(<argument><expr><name pos:line="255" pos:column="23">cp<pos:position pos:line="255" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="27">"0123456789"<pos:position pos:line="255" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="41"/></expr_stmt>
	<if pos:line="256" pos:column="9">if <condition pos:line="256" pos:column="12">(<expr><operator pos:line="256" pos:column="13">!<pos:position pos:line="256" pos:column="14"/></operator><name pos:line="256" pos:column="14">span<pos:position pos:line="256" pos:column="18"/></name></expr>)<pos:position pos:line="256" pos:column="19"/></condition><then pos:line="256" pos:column="19">
		<block type="pseudo"><goto pos:line="257" pos:column="17">goto <name pos:line="257" pos:column="22">person_only<pos:position pos:line="257" pos:column="33"/></name>;<pos:position pos:line="257" pos:column="34"/></goto></block></then></if>
	<expr_stmt><expr><name><name pos:line="258" pos:column="9">split<pos:position pos:line="258" pos:column="14"/></name><operator pos:line="258" pos:column="14">-&gt;<pos:position pos:line="258" pos:column="19"/></operator><name pos:line="258" pos:column="16">date_end<pos:position pos:line="258" pos:column="24"/></name></name> <operator pos:line="258" pos:column="25">=<pos:position pos:line="258" pos:column="26"/></operator> <name><name pos:line="258" pos:column="27">split<pos:position pos:line="258" pos:column="32"/></name><operator pos:line="258" pos:column="32">-&gt;<pos:position pos:line="258" pos:column="37"/></operator><name pos:line="258" pos:column="34">date_begin<pos:position pos:line="258" pos:column="44"/></name></name> <operator pos:line="258" pos:column="45">+<pos:position pos:line="258" pos:column="46"/></operator> <name pos:line="258" pos:column="47">span<pos:position pos:line="258" pos:column="51"/></name></expr>;<pos:position pos:line="258" pos:column="52"/></expr_stmt>
	<for pos:line="259" pos:column="9">for <control pos:line="259" pos:column="13">(<init><expr><name pos:line="259" pos:column="14">cp<pos:position pos:line="259" pos:column="16"/></name> <operator pos:line="259" pos:column="17">=<pos:position pos:line="259" pos:column="18"/></operator> <name><name pos:line="259" pos:column="19">split<pos:position pos:line="259" pos:column="24"/></name><operator pos:line="259" pos:column="24">-&gt;<pos:position pos:line="259" pos:column="29"/></operator><name pos:line="259" pos:column="26">date_end<pos:position pos:line="259" pos:column="34"/></name></name></expr>;<pos:position pos:line="259" pos:column="35"/></init> <condition><expr><name pos:line="259" pos:column="36">cp<pos:position pos:line="259" pos:column="38"/></name> <operator pos:line="259" pos:column="39">&lt;<pos:position pos:line="259" pos:column="43"/></operator> <name pos:line="259" pos:column="41">line<pos:position pos:line="259" pos:column="45"/></name> <operator pos:line="259" pos:column="46">+<pos:position pos:line="259" pos:column="47"/></operator> <name pos:line="259" pos:column="48">len<pos:position pos:line="259" pos:column="51"/></name> <operator pos:line="259" pos:column="52">&amp;&amp;<pos:position pos:line="259" pos:column="62"/></operator> <call><name pos:line="259" pos:column="55">isspace<pos:position pos:line="259" pos:column="62"/></name><argument_list pos:line="259" pos:column="62">(<argument><expr><operator pos:line="259" pos:column="63">*<pos:position pos:line="259" pos:column="64"/></operator><name pos:line="259" pos:column="64">cp<pos:position pos:line="259" pos:column="66"/></name></expr></argument>)<pos:position pos:line="259" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="68"/></condition> <incr><expr><name pos:line="259" pos:column="69">cp<pos:position pos:line="259" pos:column="71"/></name><operator pos:line="259" pos:column="71">++<pos:position pos:line="259" pos:column="73"/></operator></expr></incr>)<pos:position pos:line="259" pos:column="74"/></control>
		<block type="pseudo"><empty_stmt pos:line="260" pos:column="17">;<pos:position pos:line="260" pos:column="18"/></empty_stmt></block></for>
	<if pos:line="261" pos:column="9">if <condition pos:line="261" pos:column="12">(<expr><name pos:line="261" pos:column="13">line<pos:position pos:line="261" pos:column="17"/></name> <operator pos:line="261" pos:column="18">+<pos:position pos:line="261" pos:column="19"/></operator> <name pos:line="261" pos:column="20">len<pos:position pos:line="261" pos:column="23"/></name> <operator pos:line="261" pos:column="24">&lt;=<pos:position pos:line="261" pos:column="29"/></operator> <name pos:line="261" pos:column="27">cp<pos:position pos:line="261" pos:column="29"/></name> <operator pos:line="261" pos:column="30">||<pos:position pos:line="261" pos:column="32"/></operator> <operator pos:line="261" pos:column="33">(<pos:position pos:line="261" pos:column="34"/></operator><operator pos:line="261" pos:column="34">*<pos:position pos:line="261" pos:column="35"/></operator><name pos:line="261" pos:column="35">cp<pos:position pos:line="261" pos:column="37"/></name> <operator pos:line="261" pos:column="38">!=<pos:position pos:line="261" pos:column="40"/></operator> <literal type="char" pos:line="261" pos:column="41">'+'<pos:position pos:line="261" pos:column="44"/></literal> <operator pos:line="261" pos:column="45">&amp;&amp;<pos:position pos:line="261" pos:column="55"/></operator> <operator pos:line="261" pos:column="48">*<pos:position pos:line="261" pos:column="49"/></operator><name pos:line="261" pos:column="49">cp<pos:position pos:line="261" pos:column="51"/></name> <operator pos:line="261" pos:column="52">!=<pos:position pos:line="261" pos:column="54"/></operator> <literal type="char" pos:line="261" pos:column="55">'-'<pos:position pos:line="261" pos:column="58"/></literal><operator pos:line="261" pos:column="58">)<pos:position pos:line="261" pos:column="59"/></operator></expr>)<pos:position pos:line="261" pos:column="60"/></condition><then pos:line="261" pos:column="60">
		<block type="pseudo"><goto pos:line="262" pos:column="17">goto <name pos:line="262" pos:column="22">person_only<pos:position pos:line="262" pos:column="33"/></name>;<pos:position pos:line="262" pos:column="34"/></goto></block></then></if>
	<expr_stmt><expr><name><name pos:line="263" pos:column="9">split<pos:position pos:line="263" pos:column="14"/></name><operator pos:line="263" pos:column="14">-&gt;<pos:position pos:line="263" pos:column="19"/></operator><name pos:line="263" pos:column="16">tz_begin<pos:position pos:line="263" pos:column="24"/></name></name> <operator pos:line="263" pos:column="25">=<pos:position pos:line="263" pos:column="26"/></operator> <name pos:line="263" pos:column="27">cp<pos:position pos:line="263" pos:column="29"/></name></expr>;<pos:position pos:line="263" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="264" pos:column="9">span<pos:position pos:line="264" pos:column="13"/></name> <operator pos:line="264" pos:column="14">=<pos:position pos:line="264" pos:column="15"/></operator> <call><name pos:line="264" pos:column="16">strspn<pos:position pos:line="264" pos:column="22"/></name><argument_list pos:line="264" pos:column="22">(<argument><expr><name pos:line="264" pos:column="23">cp<pos:position pos:line="264" pos:column="25"/></name> <operator pos:line="264" pos:column="26">+<pos:position pos:line="264" pos:column="27"/></operator> <literal type="number" pos:line="264" pos:column="28">1<pos:position pos:line="264" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="264" pos:column="31">"0123456789"<pos:position pos:line="264" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="264" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="45"/></expr_stmt>
	<if pos:line="265" pos:column="9">if <condition pos:line="265" pos:column="12">(<expr><operator pos:line="265" pos:column="13">!<pos:position pos:line="265" pos:column="14"/></operator><name pos:line="265" pos:column="14">span<pos:position pos:line="265" pos:column="18"/></name></expr>)<pos:position pos:line="265" pos:column="19"/></condition><then pos:line="265" pos:column="19">
		<block type="pseudo"><goto pos:line="266" pos:column="17">goto <name pos:line="266" pos:column="22">person_only<pos:position pos:line="266" pos:column="33"/></name>;<pos:position pos:line="266" pos:column="34"/></goto></block></then></if>
	<expr_stmt><expr><name><name pos:line="267" pos:column="9">split<pos:position pos:line="267" pos:column="14"/></name><operator pos:line="267" pos:column="14">-&gt;<pos:position pos:line="267" pos:column="19"/></operator><name pos:line="267" pos:column="16">tz_end<pos:position pos:line="267" pos:column="22"/></name></name> <operator pos:line="267" pos:column="23">=<pos:position pos:line="267" pos:column="24"/></operator> <name><name pos:line="267" pos:column="25">split<pos:position pos:line="267" pos:column="30"/></name><operator pos:line="267" pos:column="30">-&gt;<pos:position pos:line="267" pos:column="35"/></operator><name pos:line="267" pos:column="32">tz_begin<pos:position pos:line="267" pos:column="40"/></name></name> <operator pos:line="267" pos:column="41">+<pos:position pos:line="267" pos:column="42"/></operator> <literal type="number" pos:line="267" pos:column="43">1<pos:position pos:line="267" pos:column="44"/></literal> <operator pos:line="267" pos:column="45">+<pos:position pos:line="267" pos:column="46"/></operator> <name pos:line="267" pos:column="47">span<pos:position pos:line="267" pos:column="51"/></name></expr>;<pos:position pos:line="267" pos:column="52"/></expr_stmt>
	<return pos:line="268" pos:column="9">return <expr><literal type="number" pos:line="268" pos:column="16">0<pos:position pos:line="268" pos:column="17"/></literal></expr>;<pos:position pos:line="268" pos:column="18"/></return>

<label><name pos:line="270" pos:column="1">person_only<pos:position pos:line="270" pos:column="12"/></name>:<pos:position pos:line="270" pos:column="13"/></label>
	<expr_stmt><expr><name><name pos:line="271" pos:column="9">split<pos:position pos:line="271" pos:column="14"/></name><operator pos:line="271" pos:column="14">-&gt;<pos:position pos:line="271" pos:column="19"/></operator><name pos:line="271" pos:column="16">date_begin<pos:position pos:line="271" pos:column="26"/></name></name> <operator pos:line="271" pos:column="27">=<pos:position pos:line="271" pos:column="28"/></operator> <name pos:line="271" pos:column="29">NULL<pos:position pos:line="271" pos:column="33"/></name></expr>;<pos:position pos:line="271" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="272" pos:column="9">split<pos:position pos:line="272" pos:column="14"/></name><operator pos:line="272" pos:column="14">-&gt;<pos:position pos:line="272" pos:column="19"/></operator><name pos:line="272" pos:column="16">date_end<pos:position pos:line="272" pos:column="24"/></name></name> <operator pos:line="272" pos:column="25">=<pos:position pos:line="272" pos:column="26"/></operator> <name pos:line="272" pos:column="27">NULL<pos:position pos:line="272" pos:column="31"/></name></expr>;<pos:position pos:line="272" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="273" pos:column="9">split<pos:position pos:line="273" pos:column="14"/></name><operator pos:line="273" pos:column="14">-&gt;<pos:position pos:line="273" pos:column="19"/></operator><name pos:line="273" pos:column="16">tz_begin<pos:position pos:line="273" pos:column="24"/></name></name> <operator pos:line="273" pos:column="25">=<pos:position pos:line="273" pos:column="26"/></operator> <name pos:line="273" pos:column="27">NULL<pos:position pos:line="273" pos:column="31"/></name></expr>;<pos:position pos:line="273" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="274" pos:column="9">split<pos:position pos:line="274" pos:column="14"/></name><operator pos:line="274" pos:column="14">-&gt;<pos:position pos:line="274" pos:column="19"/></operator><name pos:line="274" pos:column="16">tz_end<pos:position pos:line="274" pos:column="22"/></name></name> <operator pos:line="274" pos:column="23">=<pos:position pos:line="274" pos:column="24"/></operator> <name pos:line="274" pos:column="25">NULL<pos:position pos:line="274" pos:column="29"/></name></expr>;<pos:position pos:line="274" pos:column="30"/></expr_stmt>
	<return pos:line="275" pos:column="9">return <expr><literal type="number" pos:line="275" pos:column="16">0<pos:position pos:line="275" pos:column="17"/></literal></expr>;<pos:position pos:line="275" pos:column="18"/></return>
}<pos:position pos:line="276" pos:column="2"/></block></function>

<decl_stmt><decl><specifier pos:line="278" pos:column="1">static<pos:position pos:line="278" pos:column="7"/></specifier> <type><specifier pos:line="278" pos:column="8">const<pos:position pos:line="278" pos:column="13"/></specifier> <name pos:line="278" pos:column="14">char<pos:position pos:line="278" pos:column="18"/></name> <modifier pos:line="278" pos:column="19">*<pos:position pos:line="278" pos:column="20"/></modifier></type><name pos:line="278" pos:column="20">env_hint<pos:position pos:line="278" pos:column="28"/></name> <init pos:line="278" pos:column="29">=
<expr><literal type="string" pos:line="279" pos:column="1">"\n"<pos:position pos:line="279" pos:column="5"/></literal>
<literal type="string" pos:line="280" pos:column="1">"*** Please tell me who you are.\n"<pos:position pos:line="280" pos:column="36"/></literal>
<literal type="string" pos:line="281" pos:column="1">"\n"<pos:position pos:line="281" pos:column="5"/></literal>
<literal type="string" pos:line="282" pos:column="1">"Run\n"<pos:position pos:line="282" pos:column="8"/></literal>
<literal type="string" pos:line="283" pos:column="1">"\n"<pos:position pos:line="283" pos:column="5"/></literal>
<literal type="string" pos:line="284" pos:column="1">"  git config --global user.email \"you@example.com\"\n"<pos:position pos:line="284" pos:column="57"/></literal>
<literal type="string" pos:line="285" pos:column="1">"  git config --global user.name \"Your Name\"\n"<pos:position pos:line="285" pos:column="50"/></literal>
<literal type="string" pos:line="286" pos:column="1">"\n"<pos:position pos:line="286" pos:column="5"/></literal>
<literal type="string" pos:line="287" pos:column="1">"to set your account\'s default identity.\n"<pos:position pos:line="287" pos:column="45"/></literal>
<literal type="string" pos:line="288" pos:column="1">"Omit --global to set the identity only in this repository.\n"<pos:position pos:line="288" pos:column="63"/></literal>
<literal type="string" pos:line="289" pos:column="1">"\n"<pos:position pos:line="289" pos:column="5"/></literal></expr></init></decl>;<pos:position pos:line="289" pos:column="6"/></decl_stmt>

<function><type><specifier pos:line="291" pos:column="1">const<pos:position pos:line="291" pos:column="6"/></specifier> <name pos:line="291" pos:column="7">char<pos:position pos:line="291" pos:column="11"/></name> <modifier pos:line="291" pos:column="12">*<pos:position pos:line="291" pos:column="13"/></modifier></type><name pos:line="291" pos:column="13">fmt_ident<pos:position pos:line="291" pos:column="22"/></name><parameter_list pos:line="291" pos:column="22">(<parameter><decl><type><specifier pos:line="291" pos:column="23">const<pos:position pos:line="291" pos:column="28"/></specifier> <name pos:line="291" pos:column="29">char<pos:position pos:line="291" pos:column="33"/></name> <modifier pos:line="291" pos:column="34">*<pos:position pos:line="291" pos:column="35"/></modifier></type><name pos:line="291" pos:column="35">name<pos:position pos:line="291" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="291" pos:column="41">const<pos:position pos:line="291" pos:column="46"/></specifier> <name pos:line="291" pos:column="47">char<pos:position pos:line="291" pos:column="51"/></name> <modifier pos:line="291" pos:column="52">*<pos:position pos:line="291" pos:column="53"/></modifier></type><name pos:line="291" pos:column="53">email<pos:position pos:line="291" pos:column="58"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="292" pos:column="23">const<pos:position pos:line="292" pos:column="28"/></specifier> <name pos:line="292" pos:column="29">char<pos:position pos:line="292" pos:column="33"/></name> <modifier pos:line="292" pos:column="34">*<pos:position pos:line="292" pos:column="35"/></modifier></type><name pos:line="292" pos:column="35">date_str<pos:position pos:line="292" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="292" pos:column="45">int<pos:position pos:line="292" pos:column="48"/></name></type> <name pos:line="292" pos:column="49">flag<pos:position pos:line="292" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="292" pos:column="54"/></parameter_list>
<block pos:line="293" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="294" pos:column="9">static<pos:position pos:line="294" pos:column="15"/></specifier> <type><name><name pos:line="294" pos:column="16">struct<pos:position pos:line="294" pos:column="22"/></name> <name pos:line="294" pos:column="23">strbuf<pos:position pos:line="294" pos:column="29"/></name></name></type> <name pos:line="294" pos:column="30">ident<pos:position pos:line="294" pos:column="35"/></name> <init pos:line="294" pos:column="36">= <expr><name pos:line="294" pos:column="38">STRBUF_INIT<pos:position pos:line="294" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="294" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="295" pos:column="9">int<pos:position pos:line="295" pos:column="12"/></name></type> <name pos:line="295" pos:column="13">strict<pos:position pos:line="295" pos:column="19"/></name> <init pos:line="295" pos:column="20">= <expr><operator pos:line="295" pos:column="22">(<pos:position pos:line="295" pos:column="23"/></operator><name pos:line="295" pos:column="23">flag<pos:position pos:line="295" pos:column="27"/></name> <operator pos:line="295" pos:column="28">&amp;<pos:position pos:line="295" pos:column="33"/></operator> <name pos:line="295" pos:column="30">IDENT_STRICT<pos:position pos:line="295" pos:column="42"/></name><operator pos:line="295" pos:column="42">)<pos:position pos:line="295" pos:column="43"/></operator></expr></init></decl>;<pos:position pos:line="295" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="296" pos:column="9">int<pos:position pos:line="296" pos:column="12"/></name></type> <name pos:line="296" pos:column="13">want_date<pos:position pos:line="296" pos:column="22"/></name> <init pos:line="296" pos:column="23">= <expr><operator pos:line="296" pos:column="25">!<pos:position pos:line="296" pos:column="26"/></operator><operator pos:line="296" pos:column="26">(<pos:position pos:line="296" pos:column="27"/></operator><name pos:line="296" pos:column="27">flag<pos:position pos:line="296" pos:column="31"/></name> <operator pos:line="296" pos:column="32">&amp;<pos:position pos:line="296" pos:column="37"/></operator> <name pos:line="296" pos:column="34">IDENT_NO_DATE<pos:position pos:line="296" pos:column="47"/></name><operator pos:line="296" pos:column="47">)<pos:position pos:line="296" pos:column="48"/></operator></expr></init></decl>;<pos:position pos:line="296" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="297" pos:column="9">int<pos:position pos:line="297" pos:column="12"/></name></type> <name pos:line="297" pos:column="13">want_name<pos:position pos:line="297" pos:column="22"/></name> <init pos:line="297" pos:column="23">= <expr><operator pos:line="297" pos:column="25">!<pos:position pos:line="297" pos:column="26"/></operator><operator pos:line="297" pos:column="26">(<pos:position pos:line="297" pos:column="27"/></operator><name pos:line="297" pos:column="27">flag<pos:position pos:line="297" pos:column="31"/></name> <operator pos:line="297" pos:column="32">&amp;<pos:position pos:line="297" pos:column="37"/></operator> <name pos:line="297" pos:column="34">IDENT_NO_NAME<pos:position pos:line="297" pos:column="47"/></name><operator pos:line="297" pos:column="47">)<pos:position pos:line="297" pos:column="48"/></operator></expr></init></decl>;<pos:position pos:line="297" pos:column="49"/></decl_stmt>

	<if pos:line="299" pos:column="9">if <condition pos:line="299" pos:column="12">(<expr><name pos:line="299" pos:column="13">want_name<pos:position pos:line="299" pos:column="22"/></name> <operator pos:line="299" pos:column="23">&amp;&amp;<pos:position pos:line="299" pos:column="33"/></operator> <operator pos:line="299" pos:column="26">!<pos:position pos:line="299" pos:column="27"/></operator><name pos:line="299" pos:column="27">name<pos:position pos:line="299" pos:column="31"/></name></expr>)<pos:position pos:line="299" pos:column="32"/></condition><then pos:line="299" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="300" pos:column="17">name<pos:position pos:line="300" pos:column="21"/></name> <operator pos:line="300" pos:column="22">=<pos:position pos:line="300" pos:column="23"/></operator> <call><name pos:line="300" pos:column="24">ident_default_name<pos:position pos:line="300" pos:column="42"/></name><argument_list pos:line="300" pos:column="42">()<pos:position pos:line="300" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="45"/></expr_stmt></block></then></if>
	<if pos:line="301" pos:column="9">if <condition pos:line="301" pos:column="12">(<expr><operator pos:line="301" pos:column="13">!<pos:position pos:line="301" pos:column="14"/></operator><name pos:line="301" pos:column="14">email<pos:position pos:line="301" pos:column="19"/></name></expr>)<pos:position pos:line="301" pos:column="20"/></condition><then pos:line="301" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="302" pos:column="17">email<pos:position pos:line="302" pos:column="22"/></name> <operator pos:line="302" pos:column="23">=<pos:position pos:line="302" pos:column="24"/></operator> <call><name pos:line="302" pos:column="25">ident_default_email<pos:position pos:line="302" pos:column="44"/></name><argument_list pos:line="302" pos:column="44">()<pos:position pos:line="302" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="47"/></expr_stmt></block></then></if>

	<if pos:line="304" pos:column="9">if <condition pos:line="304" pos:column="12">(<expr><name pos:line="304" pos:column="13">want_name<pos:position pos:line="304" pos:column="22"/></name> <operator pos:line="304" pos:column="23">&amp;&amp;<pos:position pos:line="304" pos:column="33"/></operator> <operator pos:line="304" pos:column="26">!<pos:position pos:line="304" pos:column="27"/></operator><operator pos:line="304" pos:column="27">*<pos:position pos:line="304" pos:column="28"/></operator><name pos:line="304" pos:column="28">name<pos:position pos:line="304" pos:column="32"/></name></expr>)<pos:position pos:line="304" pos:column="33"/></condition><then pos:line="304" pos:column="33"> <block pos:line="304" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="305" pos:column="17">struct<pos:position pos:line="305" pos:column="23"/></name> <name pos:line="305" pos:column="24">passwd<pos:position pos:line="305" pos:column="30"/></name></name> <modifier pos:line="305" pos:column="31">*<pos:position pos:line="305" pos:column="32"/></modifier></type><name pos:line="305" pos:column="32">pw<pos:position pos:line="305" pos:column="34"/></name></decl>;<pos:position pos:line="305" pos:column="35"/></decl_stmt>

		<if pos:line="307" pos:column="17">if <condition pos:line="307" pos:column="20">(<expr><name pos:line="307" pos:column="21">strict<pos:position pos:line="307" pos:column="27"/></name></expr>)<pos:position pos:line="307" pos:column="28"/></condition><then pos:line="307" pos:column="28"> <block pos:line="307" pos:column="29">{
			<if pos:line="308" pos:column="25">if <condition pos:line="308" pos:column="28">(<expr><name pos:line="308" pos:column="29">name<pos:position pos:line="308" pos:column="33"/></name> <operator pos:line="308" pos:column="34">==<pos:position pos:line="308" pos:column="36"/></operator> <name><name pos:line="308" pos:column="37">git_default_name<pos:position pos:line="308" pos:column="53"/></name><operator pos:line="308" pos:column="53">.<pos:position pos:line="308" pos:column="54"/></operator><name pos:line="308" pos:column="54">buf<pos:position pos:line="308" pos:column="57"/></name></name></expr>)<pos:position pos:line="308" pos:column="58"/></condition><then pos:line="308" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="309" pos:column="33">fputs<pos:position pos:line="309" pos:column="38"/></name><argument_list pos:line="309" pos:column="38">(<argument><expr><name pos:line="309" pos:column="39">env_hint<pos:position pos:line="309" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="49">stderr<pos:position pos:line="309" pos:column="55"/></name></expr></argument>)<pos:position pos:line="309" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="57"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="310" pos:column="25">die<pos:position pos:line="310" pos:column="28"/></name><argument_list pos:line="310" pos:column="28">(<argument><expr><literal type="string" pos:line="310" pos:column="29">"empty ident name (for &lt;%s&gt;) not allowed"<pos:position pos:line="310" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="310" pos:column="72">email<pos:position pos:line="310" pos:column="77"/></name></expr></argument>)<pos:position pos:line="310" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="79"/></expr_stmt>
		}<pos:position pos:line="311" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="312" pos:column="17">pw<pos:position pos:line="312" pos:column="19"/></name> <operator pos:line="312" pos:column="20">=<pos:position pos:line="312" pos:column="21"/></operator> <call><name pos:line="312" pos:column="22">xgetpwuid_self<pos:position pos:line="312" pos:column="36"/></name><argument_list pos:line="312" pos:column="36">()<pos:position pos:line="312" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="313" pos:column="17">name<pos:position pos:line="313" pos:column="21"/></name> <operator pos:line="313" pos:column="22">=<pos:position pos:line="313" pos:column="23"/></operator> <name><name pos:line="313" pos:column="24">pw<pos:position pos:line="313" pos:column="26"/></name><operator pos:line="313" pos:column="26">-&gt;<pos:position pos:line="313" pos:column="31"/></operator><name pos:line="313" pos:column="28">pw_name<pos:position pos:line="313" pos:column="35"/></name></name></expr>;<pos:position pos:line="313" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="314" pos:column="10"/></block></then></if>

	<if pos:line="316" pos:column="9">if <condition pos:line="316" pos:column="12">(<expr><name pos:line="316" pos:column="13">strict<pos:position pos:line="316" pos:column="19"/></name> <operator pos:line="316" pos:column="20">&amp;&amp;<pos:position pos:line="316" pos:column="30"/></operator> <name pos:line="316" pos:column="23">email<pos:position pos:line="316" pos:column="28"/></name> <operator pos:line="316" pos:column="29">==<pos:position pos:line="316" pos:column="31"/></operator> <name><name pos:line="316" pos:column="32">git_default_email<pos:position pos:line="316" pos:column="49"/></name><operator pos:line="316" pos:column="49">.<pos:position pos:line="316" pos:column="50"/></operator><name pos:line="316" pos:column="50">buf<pos:position pos:line="316" pos:column="53"/></name></name> <operator pos:line="316" pos:column="54">&amp;&amp;<pos:position pos:line="316" pos:column="64"/></operator>
	    <call><name pos:line="317" pos:column="13">strstr<pos:position pos:line="317" pos:column="19"/></name><argument_list pos:line="317" pos:column="19">(<argument><expr><name pos:line="317" pos:column="20">email<pos:position pos:line="317" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="317" pos:column="27">"(none)"<pos:position pos:line="317" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="317" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="317" pos:column="37"/></condition><then pos:line="317" pos:column="37"> <block pos:line="317" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="318" pos:column="17">fputs<pos:position pos:line="318" pos:column="22"/></name><argument_list pos:line="318" pos:column="22">(<argument><expr><name pos:line="318" pos:column="23">env_hint<pos:position pos:line="318" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="318" pos:column="33">stderr<pos:position pos:line="318" pos:column="39"/></name></expr></argument>)<pos:position pos:line="318" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="319" pos:column="17">die<pos:position pos:line="319" pos:column="20"/></name><argument_list pos:line="319" pos:column="20">(<argument><expr><literal type="string" pos:line="319" pos:column="21">"unable to auto-detect email address (got '%s')"<pos:position pos:line="319" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="319" pos:column="71">email<pos:position pos:line="319" pos:column="76"/></name></expr></argument>)<pos:position pos:line="319" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="78"/></expr_stmt>
	}<pos:position pos:line="320" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="322" pos:column="9">strbuf_reset<pos:position pos:line="322" pos:column="21"/></name><argument_list pos:line="322" pos:column="21">(<argument><expr><operator pos:line="322" pos:column="22">&amp;<pos:position pos:line="322" pos:column="27"/></operator><name pos:line="322" pos:column="23">ident<pos:position pos:line="322" pos:column="28"/></name></expr></argument>)<pos:position pos:line="322" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="30"/></expr_stmt>
	<if pos:line="323" pos:column="9">if <condition pos:line="323" pos:column="12">(<expr><name pos:line="323" pos:column="13">want_name<pos:position pos:line="323" pos:column="22"/></name></expr>)<pos:position pos:line="323" pos:column="23"/></condition><then pos:line="323" pos:column="23"> <block pos:line="323" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="324" pos:column="17">strbuf_addstr_without_crud<pos:position pos:line="324" pos:column="43"/></name><argument_list pos:line="324" pos:column="43">(<argument><expr><operator pos:line="324" pos:column="44">&amp;<pos:position pos:line="324" pos:column="49"/></operator><name pos:line="324" pos:column="45">ident<pos:position pos:line="324" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="52">name<pos:position pos:line="324" pos:column="56"/></name></expr></argument>)<pos:position pos:line="324" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="325" pos:column="17">strbuf_addstr<pos:position pos:line="325" pos:column="30"/></name><argument_list pos:line="325" pos:column="30">(<argument><expr><operator pos:line="325" pos:column="31">&amp;<pos:position pos:line="325" pos:column="36"/></operator><name pos:line="325" pos:column="32">ident<pos:position pos:line="325" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="325" pos:column="39">" &lt;"<pos:position pos:line="325" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="325" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="326" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="327" pos:column="9">strbuf_addstr_without_crud<pos:position pos:line="327" pos:column="35"/></name><argument_list pos:line="327" pos:column="35">(<argument><expr><operator pos:line="327" pos:column="36">&amp;<pos:position pos:line="327" pos:column="41"/></operator><name pos:line="327" pos:column="37">ident<pos:position pos:line="327" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="44">email<pos:position pos:line="327" pos:column="49"/></name></expr></argument>)<pos:position pos:line="327" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="51"/></expr_stmt>
	<if pos:line="328" pos:column="9">if <condition pos:line="328" pos:column="12">(<expr><name pos:line="328" pos:column="13">want_name<pos:position pos:line="328" pos:column="22"/></name></expr>)<pos:position pos:line="328" pos:column="23"/></condition><then pos:line="328" pos:column="23">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="329" pos:column="25">strbuf_addch<pos:position pos:line="329" pos:column="37"/></name><argument_list pos:line="329" pos:column="37">(<argument><expr><operator pos:line="329" pos:column="38">&amp;<pos:position pos:line="329" pos:column="43"/></operator><name pos:line="329" pos:column="39">ident<pos:position pos:line="329" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="329" pos:column="46">'&gt;'<pos:position pos:line="329" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="329" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="329" pos:column="51"/></expr_stmt></block></then></if>
	<if pos:line="330" pos:column="9">if <condition pos:line="330" pos:column="12">(<expr><name pos:line="330" pos:column="13">want_date<pos:position pos:line="330" pos:column="22"/></name></expr>)<pos:position pos:line="330" pos:column="23"/></condition><then pos:line="330" pos:column="23"> <block pos:line="330" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="331" pos:column="17">strbuf_addch<pos:position pos:line="331" pos:column="29"/></name><argument_list pos:line="331" pos:column="29">(<argument><expr><operator pos:line="331" pos:column="30">&amp;<pos:position pos:line="331" pos:column="35"/></operator><name pos:line="331" pos:column="31">ident<pos:position pos:line="331" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="331" pos:column="38">' '<pos:position pos:line="331" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="43"/></expr_stmt>
		<if pos:line="332" pos:column="17">if <condition pos:line="332" pos:column="20">(<expr><name pos:line="332" pos:column="21">date_str<pos:position pos:line="332" pos:column="29"/></name> <operator pos:line="332" pos:column="30">&amp;&amp;<pos:position pos:line="332" pos:column="40"/></operator> <name><name pos:line="332" pos:column="33">date_str<pos:position pos:line="332" pos:column="41"/></name><index pos:line="332" pos:column="41">[<expr><literal type="number" pos:line="332" pos:column="42">0<pos:position pos:line="332" pos:column="43"/></literal></expr>]<pos:position pos:line="332" pos:column="44"/></index></name></expr>)<pos:position pos:line="332" pos:column="45"/></condition><then pos:line="332" pos:column="45"> <block pos:line="332" pos:column="46">{
			<if pos:line="333" pos:column="25">if <condition pos:line="333" pos:column="28">(<expr><call><name pos:line="333" pos:column="29">parse_date<pos:position pos:line="333" pos:column="39"/></name><argument_list pos:line="333" pos:column="39">(<argument><expr><name pos:line="333" pos:column="40">date_str<pos:position pos:line="333" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="333" pos:column="50">&amp;<pos:position pos:line="333" pos:column="55"/></operator><name pos:line="333" pos:column="51">ident<pos:position pos:line="333" pos:column="56"/></name></expr></argument>)<pos:position pos:line="333" pos:column="57"/></argument_list></call> <operator pos:line="333" pos:column="58">&lt;<pos:position pos:line="333" pos:column="62"/></operator> <literal type="number" pos:line="333" pos:column="60">0<pos:position pos:line="333" pos:column="61"/></literal></expr>)<pos:position pos:line="333" pos:column="62"/></condition><then pos:line="333" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="334" pos:column="33">die<pos:position pos:line="334" pos:column="36"/></name><argument_list pos:line="334" pos:column="36">(<argument><expr><literal type="string" pos:line="334" pos:column="37">"invalid date format: %s"<pos:position pos:line="334" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="334" pos:column="64">date_str<pos:position pos:line="334" pos:column="72"/></name></expr></argument>)<pos:position pos:line="334" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="74"/></expr_stmt></block></then></if>
		}<pos:position pos:line="335" pos:column="18"/></block></then>
		<else pos:line="336" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="337" pos:column="25">strbuf_addstr<pos:position pos:line="337" pos:column="38"/></name><argument_list pos:line="337" pos:column="38">(<argument><expr><operator pos:line="337" pos:column="39">&amp;<pos:position pos:line="337" pos:column="44"/></operator><name pos:line="337" pos:column="40">ident<pos:position pos:line="337" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="337" pos:column="47">ident_default_date<pos:position pos:line="337" pos:column="65"/></name><argument_list pos:line="337" pos:column="65">()<pos:position pos:line="337" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="337" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="69"/></expr_stmt></block></else></if>
	}<pos:position pos:line="338" pos:column="10"/></block></then></if>

	<return pos:line="340" pos:column="9">return <expr><name><name pos:line="340" pos:column="16">ident<pos:position pos:line="340" pos:column="21"/></name><operator pos:line="340" pos:column="21">.<pos:position pos:line="340" pos:column="22"/></operator><name pos:line="340" pos:column="22">buf<pos:position pos:line="340" pos:column="25"/></name></name></expr>;<pos:position pos:line="340" pos:column="26"/></return>
}<pos:position pos:line="341" pos:column="2"/></block></function>

<function><type><specifier pos:line="343" pos:column="1">const<pos:position pos:line="343" pos:column="6"/></specifier> <name pos:line="343" pos:column="7">char<pos:position pos:line="343" pos:column="11"/></name> <modifier pos:line="343" pos:column="12">*<pos:position pos:line="343" pos:column="13"/></modifier></type><name pos:line="343" pos:column="13">fmt_name<pos:position pos:line="343" pos:column="21"/></name><parameter_list pos:line="343" pos:column="21">(<parameter><decl><type><specifier pos:line="343" pos:column="22">const<pos:position pos:line="343" pos:column="27"/></specifier> <name pos:line="343" pos:column="28">char<pos:position pos:line="343" pos:column="32"/></name> <modifier pos:line="343" pos:column="33">*<pos:position pos:line="343" pos:column="34"/></modifier></type><name pos:line="343" pos:column="34">name<pos:position pos:line="343" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="343" pos:column="40">const<pos:position pos:line="343" pos:column="45"/></specifier> <name pos:line="343" pos:column="46">char<pos:position pos:line="343" pos:column="50"/></name> <modifier pos:line="343" pos:column="51">*<pos:position pos:line="343" pos:column="52"/></modifier></type><name pos:line="343" pos:column="52">email<pos:position pos:line="343" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="343" pos:column="58"/></parameter_list>
<block pos:line="344" pos:column="1">{
	<return pos:line="345" pos:column="9">return <expr><call><name pos:line="345" pos:column="16">fmt_ident<pos:position pos:line="345" pos:column="25"/></name><argument_list pos:line="345" pos:column="25">(<argument><expr><name pos:line="345" pos:column="26">name<pos:position pos:line="345" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="345" pos:column="32">email<pos:position pos:line="345" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="345" pos:column="39">NULL<pos:position pos:line="345" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="345" pos:column="45">IDENT_STRICT<pos:position pos:line="345" pos:column="57"/></name> <operator pos:line="345" pos:column="58">|<pos:position pos:line="345" pos:column="59"/></operator> <name pos:line="345" pos:column="60">IDENT_NO_DATE<pos:position pos:line="345" pos:column="73"/></name></expr></argument>)<pos:position pos:line="345" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="75"/></return>
}<pos:position pos:line="346" pos:column="2"/></block></function>

<function><type><specifier pos:line="348" pos:column="1">const<pos:position pos:line="348" pos:column="6"/></specifier> <name pos:line="348" pos:column="7">char<pos:position pos:line="348" pos:column="11"/></name> <modifier pos:line="348" pos:column="12">*<pos:position pos:line="348" pos:column="13"/></modifier></type><name pos:line="348" pos:column="13">git_author_info<pos:position pos:line="348" pos:column="28"/></name><parameter_list pos:line="348" pos:column="28">(<parameter><decl><type><name pos:line="348" pos:column="29">int<pos:position pos:line="348" pos:column="32"/></name></type> <name pos:line="348" pos:column="33">flag<pos:position pos:line="348" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="348" pos:column="38"/></parameter_list>
<block pos:line="349" pos:column="1">{
	<if pos:line="350" pos:column="9">if <condition pos:line="350" pos:column="12">(<expr><call><name pos:line="350" pos:column="13">getenv<pos:position pos:line="350" pos:column="19"/></name><argument_list pos:line="350" pos:column="19">(<argument><expr><literal type="string" pos:line="350" pos:column="20">"GIT_AUTHOR_NAME"<pos:position pos:line="350" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="350" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="350" pos:column="39"/></condition><then pos:line="350" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name pos:line="351" pos:column="17">author_ident_explicitly_given<pos:position pos:line="351" pos:column="46"/></name> <operator pos:line="351" pos:column="47">|=<pos:position pos:line="351" pos:column="49"/></operator> <name pos:line="351" pos:column="50">IDENT_NAME_GIVEN<pos:position pos:line="351" pos:column="66"/></name></expr>;<pos:position pos:line="351" pos:column="67"/></expr_stmt></block></then></if>
	<if pos:line="352" pos:column="9">if <condition pos:line="352" pos:column="12">(<expr><call><name pos:line="352" pos:column="13">getenv<pos:position pos:line="352" pos:column="19"/></name><argument_list pos:line="352" pos:column="19">(<argument><expr><literal type="string" pos:line="352" pos:column="20">"GIT_AUTHOR_EMAIL"<pos:position pos:line="352" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="352" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="352" pos:column="40"/></condition><then pos:line="352" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name pos:line="353" pos:column="17">author_ident_explicitly_given<pos:position pos:line="353" pos:column="46"/></name> <operator pos:line="353" pos:column="47">|=<pos:position pos:line="353" pos:column="49"/></operator> <name pos:line="353" pos:column="50">IDENT_MAIL_GIVEN<pos:position pos:line="353" pos:column="66"/></name></expr>;<pos:position pos:line="353" pos:column="67"/></expr_stmt></block></then></if>
	<return pos:line="354" pos:column="9">return <expr><call><name pos:line="354" pos:column="16">fmt_ident<pos:position pos:line="354" pos:column="25"/></name><argument_list pos:line="354" pos:column="25">(<argument><expr><call><name pos:line="354" pos:column="26">getenv<pos:position pos:line="354" pos:column="32"/></name><argument_list pos:line="354" pos:column="32">(<argument><expr><literal type="string" pos:line="354" pos:column="33">"GIT_AUTHOR_NAME"<pos:position pos:line="354" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="354" pos:column="51"/></argument_list></call></expr></argument>,
			 <argument><expr><call><name pos:line="355" pos:column="26">getenv<pos:position pos:line="355" pos:column="32"/></name><argument_list pos:line="355" pos:column="32">(<argument><expr><literal type="string" pos:line="355" pos:column="33">"GIT_AUTHOR_EMAIL"<pos:position pos:line="355" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="355" pos:column="52"/></argument_list></call></expr></argument>,
			 <argument><expr><call><name pos:line="356" pos:column="26">getenv<pos:position pos:line="356" pos:column="32"/></name><argument_list pos:line="356" pos:column="32">(<argument><expr><literal type="string" pos:line="356" pos:column="33">"GIT_AUTHOR_DATE"<pos:position pos:line="356" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="356" pos:column="51"/></argument_list></call></expr></argument>,
			 <argument><expr><name pos:line="357" pos:column="26">flag<pos:position pos:line="357" pos:column="30"/></name></expr></argument>)<pos:position pos:line="357" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="32"/></return>
}<pos:position pos:line="358" pos:column="2"/></block></function>

<function><type><specifier pos:line="360" pos:column="1">const<pos:position pos:line="360" pos:column="6"/></specifier> <name pos:line="360" pos:column="7">char<pos:position pos:line="360" pos:column="11"/></name> <modifier pos:line="360" pos:column="12">*<pos:position pos:line="360" pos:column="13"/></modifier></type><name pos:line="360" pos:column="13">git_committer_info<pos:position pos:line="360" pos:column="31"/></name><parameter_list pos:line="360" pos:column="31">(<parameter><decl><type><name pos:line="360" pos:column="32">int<pos:position pos:line="360" pos:column="35"/></name></type> <name pos:line="360" pos:column="36">flag<pos:position pos:line="360" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="360" pos:column="41"/></parameter_list>
<block pos:line="361" pos:column="1">{
	<if pos:line="362" pos:column="9">if <condition pos:line="362" pos:column="12">(<expr><call><name pos:line="362" pos:column="13">getenv<pos:position pos:line="362" pos:column="19"/></name><argument_list pos:line="362" pos:column="19">(<argument><expr><literal type="string" pos:line="362" pos:column="20">"GIT_COMMITTER_NAME"<pos:position pos:line="362" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="362" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="362" pos:column="42"/></condition><then pos:line="362" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name pos:line="363" pos:column="17">committer_ident_explicitly_given<pos:position pos:line="363" pos:column="49"/></name> <operator pos:line="363" pos:column="50">|=<pos:position pos:line="363" pos:column="52"/></operator> <name pos:line="363" pos:column="53">IDENT_NAME_GIVEN<pos:position pos:line="363" pos:column="69"/></name></expr>;<pos:position pos:line="363" pos:column="70"/></expr_stmt></block></then></if>
	<if pos:line="364" pos:column="9">if <condition pos:line="364" pos:column="12">(<expr><call><name pos:line="364" pos:column="13">getenv<pos:position pos:line="364" pos:column="19"/></name><argument_list pos:line="364" pos:column="19">(<argument><expr><literal type="string" pos:line="364" pos:column="20">"GIT_COMMITTER_EMAIL"<pos:position pos:line="364" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="364" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="364" pos:column="43"/></condition><then pos:line="364" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="365" pos:column="17">committer_ident_explicitly_given<pos:position pos:line="365" pos:column="49"/></name> <operator pos:line="365" pos:column="50">|=<pos:position pos:line="365" pos:column="52"/></operator> <name pos:line="365" pos:column="53">IDENT_MAIL_GIVEN<pos:position pos:line="365" pos:column="69"/></name></expr>;<pos:position pos:line="365" pos:column="70"/></expr_stmt></block></then></if>
	<return pos:line="366" pos:column="9">return <expr><call><name pos:line="366" pos:column="16">fmt_ident<pos:position pos:line="366" pos:column="25"/></name><argument_list pos:line="366" pos:column="25">(<argument><expr><call><name pos:line="366" pos:column="26">getenv<pos:position pos:line="366" pos:column="32"/></name><argument_list pos:line="366" pos:column="32">(<argument><expr><literal type="string" pos:line="366" pos:column="33">"GIT_COMMITTER_NAME"<pos:position pos:line="366" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="366" pos:column="54"/></argument_list></call></expr></argument>,
			 <argument><expr><call><name pos:line="367" pos:column="26">getenv<pos:position pos:line="367" pos:column="32"/></name><argument_list pos:line="367" pos:column="32">(<argument><expr><literal type="string" pos:line="367" pos:column="33">"GIT_COMMITTER_EMAIL"<pos:position pos:line="367" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="367" pos:column="55"/></argument_list></call></expr></argument>,
			 <argument><expr><call><name pos:line="368" pos:column="26">getenv<pos:position pos:line="368" pos:column="32"/></name><argument_list pos:line="368" pos:column="32">(<argument><expr><literal type="string" pos:line="368" pos:column="33">"GIT_COMMITTER_DATE"<pos:position pos:line="368" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="368" pos:column="54"/></argument_list></call></expr></argument>,
			 <argument><expr><name pos:line="369" pos:column="26">flag<pos:position pos:line="369" pos:column="30"/></name></expr></argument>)<pos:position pos:line="369" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="32"/></return>
}<pos:position pos:line="370" pos:column="2"/></block></function>

<function><specifier pos:line="372" pos:column="1">static<pos:position pos:line="372" pos:column="7"/></specifier> <type><name pos:line="372" pos:column="8">int<pos:position pos:line="372" pos:column="11"/></name></type> <name pos:line="372" pos:column="12">ident_is_sufficient<pos:position pos:line="372" pos:column="31"/></name><parameter_list pos:line="372" pos:column="31">(<parameter><decl><type><name pos:line="372" pos:column="32">int<pos:position pos:line="372" pos:column="35"/></name></type> <name pos:line="372" pos:column="36">user_ident_explicitly_given<pos:position pos:line="372" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="372" pos:column="64"/></parameter_list>
<block pos:line="373" pos:column="1">{
<cpp:ifndef pos:line="374" pos:column="1">#<cpp:directive pos:line="374" pos:column="2">ifndef<pos:position pos:line="374" pos:column="8"/></cpp:directive> <name pos:line="374" pos:column="9">WINDOWS<pos:position pos:line="374" pos:column="16"/></name></cpp:ifndef>
	<return pos:line="375" pos:column="9">return <expr><operator pos:line="375" pos:column="16">(<pos:position pos:line="375" pos:column="17"/></operator><name pos:line="375" pos:column="17">user_ident_explicitly_given<pos:position pos:line="375" pos:column="44"/></name> <operator pos:line="375" pos:column="45">&amp;<pos:position pos:line="375" pos:column="50"/></operator> <name pos:line="375" pos:column="47">IDENT_MAIL_GIVEN<pos:position pos:line="375" pos:column="63"/></name><operator pos:line="375" pos:column="63">)<pos:position pos:line="375" pos:column="64"/></operator></expr>;<pos:position pos:line="375" pos:column="65"/></return>
<cpp:else pos:line="376" pos:column="1">#<cpp:directive pos:line="376" pos:column="2">else<pos:position pos:line="376" pos:column="6"/></cpp:directive></cpp:else>
	<return pos:line="377" pos:column="9">return <expr><operator pos:line="377" pos:column="16">(<pos:position pos:line="377" pos:column="17"/></operator><name pos:line="377" pos:column="17">user_ident_explicitly_given<pos:position pos:line="377" pos:column="44"/></name> <operator pos:line="377" pos:column="45">==<pos:position pos:line="377" pos:column="47"/></operator> <name pos:line="377" pos:column="48">IDENT_ALL_GIVEN<pos:position pos:line="377" pos:column="63"/></name><operator pos:line="377" pos:column="63">)<pos:position pos:line="377" pos:column="64"/></operator></expr>;<pos:position pos:line="377" pos:column="65"/></return>
<cpp:endif pos:line="378" pos:column="1">#<cpp:directive pos:line="378" pos:column="2">endif<pos:position pos:line="378" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="379" pos:column="2"/></block></function>

<function><type><name pos:line="381" pos:column="1">int<pos:position pos:line="381" pos:column="4"/></name></type> <name pos:line="381" pos:column="5">committer_ident_sufficiently_given<pos:position pos:line="381" pos:column="39"/></name><parameter_list pos:line="381" pos:column="39">(<parameter><decl><type><name pos:line="381" pos:column="40">void<pos:position pos:line="381" pos:column="44"/></name></type></decl></parameter>)<pos:position pos:line="381" pos:column="45"/></parameter_list>
<block pos:line="382" pos:column="1">{
	<return pos:line="383" pos:column="9">return <expr><call><name pos:line="383" pos:column="16">ident_is_sufficient<pos:position pos:line="383" pos:column="35"/></name><argument_list pos:line="383" pos:column="35">(<argument><expr><name pos:line="383" pos:column="36">committer_ident_explicitly_given<pos:position pos:line="383" pos:column="68"/></name></expr></argument>)<pos:position pos:line="383" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="70"/></return>
}<pos:position pos:line="384" pos:column="2"/></block></function>

<function><type><name pos:line="386" pos:column="1">int<pos:position pos:line="386" pos:column="4"/></name></type> <name pos:line="386" pos:column="5">author_ident_sufficiently_given<pos:position pos:line="386" pos:column="36"/></name><parameter_list pos:line="386" pos:column="36">(<parameter><decl><type><name pos:line="386" pos:column="37">void<pos:position pos:line="386" pos:column="41"/></name></type></decl></parameter>)<pos:position pos:line="386" pos:column="42"/></parameter_list>
<block pos:line="387" pos:column="1">{
	<return pos:line="388" pos:column="9">return <expr><call><name pos:line="388" pos:column="16">ident_is_sufficient<pos:position pos:line="388" pos:column="35"/></name><argument_list pos:line="388" pos:column="35">(<argument><expr><name pos:line="388" pos:column="36">author_ident_explicitly_given<pos:position pos:line="388" pos:column="65"/></name></expr></argument>)<pos:position pos:line="388" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="67"/></return>
}<pos:position pos:line="389" pos:column="2"/></block></function>

<function><type><name pos:line="391" pos:column="1">int<pos:position pos:line="391" pos:column="4"/></name></type> <name pos:line="391" pos:column="5">git_ident_config<pos:position pos:line="391" pos:column="21"/></name><parameter_list pos:line="391" pos:column="21">(<parameter><decl><type><specifier pos:line="391" pos:column="22">const<pos:position pos:line="391" pos:column="27"/></specifier> <name pos:line="391" pos:column="28">char<pos:position pos:line="391" pos:column="32"/></name> <modifier pos:line="391" pos:column="33">*<pos:position pos:line="391" pos:column="34"/></modifier></type><name pos:line="391" pos:column="34">var<pos:position pos:line="391" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="391" pos:column="39">const<pos:position pos:line="391" pos:column="44"/></specifier> <name pos:line="391" pos:column="45">char<pos:position pos:line="391" pos:column="49"/></name> <modifier pos:line="391" pos:column="50">*<pos:position pos:line="391" pos:column="51"/></modifier></type><name pos:line="391" pos:column="51">value<pos:position pos:line="391" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="391" pos:column="58">void<pos:position pos:line="391" pos:column="62"/></name> <modifier pos:line="391" pos:column="63">*<pos:position pos:line="391" pos:column="64"/></modifier></type><name pos:line="391" pos:column="64">data<pos:position pos:line="391" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="391" pos:column="69"/></parameter_list>
<block pos:line="392" pos:column="1">{
	<if pos:line="393" pos:column="9">if <condition pos:line="393" pos:column="12">(<expr><operator pos:line="393" pos:column="13">!<pos:position pos:line="393" pos:column="14"/></operator><call><name pos:line="393" pos:column="14">strcmp<pos:position pos:line="393" pos:column="20"/></name><argument_list pos:line="393" pos:column="20">(<argument><expr><name pos:line="393" pos:column="21">var<pos:position pos:line="393" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="393" pos:column="26">"user.name"<pos:position pos:line="393" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="393" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="393" pos:column="39"/></condition><then pos:line="393" pos:column="39"> <block pos:line="393" pos:column="40">{
		<if pos:line="394" pos:column="17">if <condition pos:line="394" pos:column="20">(<expr><operator pos:line="394" pos:column="21">!<pos:position pos:line="394" pos:column="22"/></operator><name pos:line="394" pos:column="22">value<pos:position pos:line="394" pos:column="27"/></name></expr>)<pos:position pos:line="394" pos:column="28"/></condition><then pos:line="394" pos:column="28">
			<block type="pseudo"><return pos:line="395" pos:column="25">return <expr><call><name pos:line="395" pos:column="32">config_error_nonbool<pos:position pos:line="395" pos:column="52"/></name><argument_list pos:line="395" pos:column="52">(<argument><expr><name pos:line="395" pos:column="53">var<pos:position pos:line="395" pos:column="56"/></name></expr></argument>)<pos:position pos:line="395" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="58"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="396" pos:column="17">strbuf_reset<pos:position pos:line="396" pos:column="29"/></name><argument_list pos:line="396" pos:column="29">(<argument><expr><operator pos:line="396" pos:column="30">&amp;<pos:position pos:line="396" pos:column="35"/></operator><name pos:line="396" pos:column="31">git_default_name<pos:position pos:line="396" pos:column="47"/></name></expr></argument>)<pos:position pos:line="396" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="397" pos:column="17">strbuf_addstr<pos:position pos:line="397" pos:column="30"/></name><argument_list pos:line="397" pos:column="30">(<argument><expr><operator pos:line="397" pos:column="31">&amp;<pos:position pos:line="397" pos:column="36"/></operator><name pos:line="397" pos:column="32">git_default_name<pos:position pos:line="397" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="50">value<pos:position pos:line="397" pos:column="55"/></name></expr></argument>)<pos:position pos:line="397" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="398" pos:column="17">committer_ident_explicitly_given<pos:position pos:line="398" pos:column="49"/></name> <operator pos:line="398" pos:column="50">|=<pos:position pos:line="398" pos:column="52"/></operator> <name pos:line="398" pos:column="53">IDENT_NAME_GIVEN<pos:position pos:line="398" pos:column="69"/></name></expr>;<pos:position pos:line="398" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name pos:line="399" pos:column="17">author_ident_explicitly_given<pos:position pos:line="399" pos:column="46"/></name> <operator pos:line="399" pos:column="47">|=<pos:position pos:line="399" pos:column="49"/></operator> <name pos:line="399" pos:column="50">IDENT_NAME_GIVEN<pos:position pos:line="399" pos:column="66"/></name></expr>;<pos:position pos:line="399" pos:column="67"/></expr_stmt>
		<return pos:line="400" pos:column="17">return <expr><literal type="number" pos:line="400" pos:column="24">0<pos:position pos:line="400" pos:column="25"/></literal></expr>;<pos:position pos:line="400" pos:column="26"/></return>
	}<pos:position pos:line="401" pos:column="10"/></block></then></if>

	<if pos:line="403" pos:column="9">if <condition pos:line="403" pos:column="12">(<expr><operator pos:line="403" pos:column="13">!<pos:position pos:line="403" pos:column="14"/></operator><call><name pos:line="403" pos:column="14">strcmp<pos:position pos:line="403" pos:column="20"/></name><argument_list pos:line="403" pos:column="20">(<argument><expr><name pos:line="403" pos:column="21">var<pos:position pos:line="403" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="403" pos:column="26">"user.email"<pos:position pos:line="403" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="403" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="403" pos:column="40"/></condition><then pos:line="403" pos:column="40"> <block pos:line="403" pos:column="41">{
		<if pos:line="404" pos:column="17">if <condition pos:line="404" pos:column="20">(<expr><operator pos:line="404" pos:column="21">!<pos:position pos:line="404" pos:column="22"/></operator><name pos:line="404" pos:column="22">value<pos:position pos:line="404" pos:column="27"/></name></expr>)<pos:position pos:line="404" pos:column="28"/></condition><then pos:line="404" pos:column="28">
			<block type="pseudo"><return pos:line="405" pos:column="25">return <expr><call><name pos:line="405" pos:column="32">config_error_nonbool<pos:position pos:line="405" pos:column="52"/></name><argument_list pos:line="405" pos:column="52">(<argument><expr><name pos:line="405" pos:column="53">var<pos:position pos:line="405" pos:column="56"/></name></expr></argument>)<pos:position pos:line="405" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="58"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="406" pos:column="17">strbuf_reset<pos:position pos:line="406" pos:column="29"/></name><argument_list pos:line="406" pos:column="29">(<argument><expr><operator pos:line="406" pos:column="30">&amp;<pos:position pos:line="406" pos:column="35"/></operator><name pos:line="406" pos:column="31">git_default_email<pos:position pos:line="406" pos:column="48"/></name></expr></argument>)<pos:position pos:line="406" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="407" pos:column="17">strbuf_addstr<pos:position pos:line="407" pos:column="30"/></name><argument_list pos:line="407" pos:column="30">(<argument><expr><operator pos:line="407" pos:column="31">&amp;<pos:position pos:line="407" pos:column="36"/></operator><name pos:line="407" pos:column="32">git_default_email<pos:position pos:line="407" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="407" pos:column="51">value<pos:position pos:line="407" pos:column="56"/></name></expr></argument>)<pos:position pos:line="407" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="407" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="408" pos:column="17">committer_ident_explicitly_given<pos:position pos:line="408" pos:column="49"/></name> <operator pos:line="408" pos:column="50">|=<pos:position pos:line="408" pos:column="52"/></operator> <name pos:line="408" pos:column="53">IDENT_MAIL_GIVEN<pos:position pos:line="408" pos:column="69"/></name></expr>;<pos:position pos:line="408" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name pos:line="409" pos:column="17">author_ident_explicitly_given<pos:position pos:line="409" pos:column="46"/></name> <operator pos:line="409" pos:column="47">|=<pos:position pos:line="409" pos:column="49"/></operator> <name pos:line="409" pos:column="50">IDENT_MAIL_GIVEN<pos:position pos:line="409" pos:column="66"/></name></expr>;<pos:position pos:line="409" pos:column="67"/></expr_stmt>
		<return pos:line="410" pos:column="17">return <expr><literal type="number" pos:line="410" pos:column="24">0<pos:position pos:line="410" pos:column="25"/></literal></expr>;<pos:position pos:line="410" pos:column="26"/></return>
	}<pos:position pos:line="411" pos:column="10"/></block></then></if>

	<return pos:line="413" pos:column="9">return <expr><literal type="number" pos:line="413" pos:column="16">0<pos:position pos:line="413" pos:column="17"/></literal></expr>;<pos:position pos:line="413" pos:column="18"/></return>
}<pos:position pos:line="414" pos:column="2"/></block></function>

<function><specifier pos:line="416" pos:column="1">static<pos:position pos:line="416" pos:column="7"/></specifier> <type><name pos:line="416" pos:column="8">int<pos:position pos:line="416" pos:column="11"/></name></type> <name pos:line="416" pos:column="12">buf_cmp<pos:position pos:line="416" pos:column="19"/></name><parameter_list pos:line="416" pos:column="19">(<parameter><decl><type><specifier pos:line="416" pos:column="20">const<pos:position pos:line="416" pos:column="25"/></specifier> <name pos:line="416" pos:column="26">char<pos:position pos:line="416" pos:column="30"/></name> <modifier pos:line="416" pos:column="31">*<pos:position pos:line="416" pos:column="32"/></modifier></type><name pos:line="416" pos:column="32">a_begin<pos:position pos:line="416" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="416" pos:column="41">const<pos:position pos:line="416" pos:column="46"/></specifier> <name pos:line="416" pos:column="47">char<pos:position pos:line="416" pos:column="51"/></name> <modifier pos:line="416" pos:column="52">*<pos:position pos:line="416" pos:column="53"/></modifier></type><name pos:line="416" pos:column="53">a_end<pos:position pos:line="416" pos:column="58"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="417" pos:column="20">const<pos:position pos:line="417" pos:column="25"/></specifier> <name pos:line="417" pos:column="26">char<pos:position pos:line="417" pos:column="30"/></name> <modifier pos:line="417" pos:column="31">*<pos:position pos:line="417" pos:column="32"/></modifier></type><name pos:line="417" pos:column="32">b_begin<pos:position pos:line="417" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="417" pos:column="41">const<pos:position pos:line="417" pos:column="46"/></specifier> <name pos:line="417" pos:column="47">char<pos:position pos:line="417" pos:column="51"/></name> <modifier pos:line="417" pos:column="52">*<pos:position pos:line="417" pos:column="53"/></modifier></type><name pos:line="417" pos:column="53">b_end<pos:position pos:line="417" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="417" pos:column="59"/></parameter_list>
<block pos:line="418" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="419" pos:column="9">int<pos:position pos:line="419" pos:column="12"/></name></type> <name pos:line="419" pos:column="13">a_len<pos:position pos:line="419" pos:column="18"/></name> <init pos:line="419" pos:column="19">= <expr><name pos:line="419" pos:column="21">a_end<pos:position pos:line="419" pos:column="26"/></name> <operator pos:line="419" pos:column="27">-<pos:position pos:line="419" pos:column="28"/></operator> <name pos:line="419" pos:column="29">a_begin<pos:position pos:line="419" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="419" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="420" pos:column="9">int<pos:position pos:line="420" pos:column="12"/></name></type> <name pos:line="420" pos:column="13">b_len<pos:position pos:line="420" pos:column="18"/></name> <init pos:line="420" pos:column="19">= <expr><name pos:line="420" pos:column="21">b_end<pos:position pos:line="420" pos:column="26"/></name> <operator pos:line="420" pos:column="27">-<pos:position pos:line="420" pos:column="28"/></operator> <name pos:line="420" pos:column="29">b_begin<pos:position pos:line="420" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="420" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="421" pos:column="9">int<pos:position pos:line="421" pos:column="12"/></name></type> <name pos:line="421" pos:column="13">min<pos:position pos:line="421" pos:column="16"/></name> <init pos:line="421" pos:column="17">= <expr><ternary><condition><expr><name pos:line="421" pos:column="19">a_len<pos:position pos:line="421" pos:column="24"/></name> <operator pos:line="421" pos:column="25">&lt;<pos:position pos:line="421" pos:column="29"/></operator> <name pos:line="421" pos:column="27">b_len<pos:position pos:line="421" pos:column="32"/></name></expr> ?<pos:position pos:line="421" pos:column="34"/></condition><then pos:line="421" pos:column="34"> <expr><name pos:line="421" pos:column="35">a_len<pos:position pos:line="421" pos:column="40"/></name></expr> <pos:position pos:line="421" pos:column="41"/></then><else pos:line="421" pos:column="41">: <expr><name pos:line="421" pos:column="43">b_len<pos:position pos:line="421" pos:column="48"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="421" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="422" pos:column="9">int<pos:position pos:line="422" pos:column="12"/></name></type> <name pos:line="422" pos:column="13">cmp<pos:position pos:line="422" pos:column="16"/></name></decl>;<pos:position pos:line="422" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="424" pos:column="9">cmp<pos:position pos:line="424" pos:column="12"/></name> <operator pos:line="424" pos:column="13">=<pos:position pos:line="424" pos:column="14"/></operator> <call><name pos:line="424" pos:column="15">memcmp<pos:position pos:line="424" pos:column="21"/></name><argument_list pos:line="424" pos:column="21">(<argument><expr><name pos:line="424" pos:column="22">a_begin<pos:position pos:line="424" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="31">b_begin<pos:position pos:line="424" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="40">min<pos:position pos:line="424" pos:column="43"/></name></expr></argument>)<pos:position pos:line="424" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="45"/></expr_stmt>
	<if pos:line="425" pos:column="9">if <condition pos:line="425" pos:column="12">(<expr><name pos:line="425" pos:column="13">cmp<pos:position pos:line="425" pos:column="16"/></name></expr>)<pos:position pos:line="425" pos:column="17"/></condition><then pos:line="425" pos:column="17">
		<block type="pseudo"><return pos:line="426" pos:column="17">return <expr><name pos:line="426" pos:column="24">cmp<pos:position pos:line="426" pos:column="27"/></name></expr>;<pos:position pos:line="426" pos:column="28"/></return></block></then></if>

	<return pos:line="428" pos:column="9">return <expr><name pos:line="428" pos:column="16">a_len<pos:position pos:line="428" pos:column="21"/></name> <operator pos:line="428" pos:column="22">-<pos:position pos:line="428" pos:column="23"/></operator> <name pos:line="428" pos:column="24">b_len<pos:position pos:line="428" pos:column="29"/></name></expr>;<pos:position pos:line="428" pos:column="30"/></return>
}<pos:position pos:line="429" pos:column="2"/></block></function>

<function><type><name pos:line="431" pos:column="1">int<pos:position pos:line="431" pos:column="4"/></name></type> <name pos:line="431" pos:column="5">ident_cmp<pos:position pos:line="431" pos:column="14"/></name><parameter_list pos:line="431" pos:column="14">(<parameter><decl><type><specifier pos:line="431" pos:column="15">const<pos:position pos:line="431" pos:column="20"/></specifier> <name><name pos:line="431" pos:column="21">struct<pos:position pos:line="431" pos:column="27"/></name> <name pos:line="431" pos:column="28">ident_split<pos:position pos:line="431" pos:column="39"/></name></name> <modifier pos:line="431" pos:column="40">*<pos:position pos:line="431" pos:column="41"/></modifier></type><name pos:line="431" pos:column="41">a<pos:position pos:line="431" pos:column="42"/></name></decl></parameter>,
	      <parameter><decl><type><specifier pos:line="432" pos:column="15">const<pos:position pos:line="432" pos:column="20"/></specifier> <name><name pos:line="432" pos:column="21">struct<pos:position pos:line="432" pos:column="27"/></name> <name pos:line="432" pos:column="28">ident_split<pos:position pos:line="432" pos:column="39"/></name></name> <modifier pos:line="432" pos:column="40">*<pos:position pos:line="432" pos:column="41"/></modifier></type><name pos:line="432" pos:column="41">b<pos:position pos:line="432" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="432" pos:column="43"/></parameter_list>
<block pos:line="433" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="434" pos:column="9">int<pos:position pos:line="434" pos:column="12"/></name></type> <name pos:line="434" pos:column="13">cmp<pos:position pos:line="434" pos:column="16"/></name></decl>;<pos:position pos:line="434" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="436" pos:column="9">cmp<pos:position pos:line="436" pos:column="12"/></name> <operator pos:line="436" pos:column="13">=<pos:position pos:line="436" pos:column="14"/></operator> <call><name pos:line="436" pos:column="15">buf_cmp<pos:position pos:line="436" pos:column="22"/></name><argument_list pos:line="436" pos:column="22">(<argument><expr><name><name pos:line="436" pos:column="23">a<pos:position pos:line="436" pos:column="24"/></name><operator pos:line="436" pos:column="24">-&gt;<pos:position pos:line="436" pos:column="29"/></operator><name pos:line="436" pos:column="26">mail_begin<pos:position pos:line="436" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="436" pos:column="38">a<pos:position pos:line="436" pos:column="39"/></name><operator pos:line="436" pos:column="39">-&gt;<pos:position pos:line="436" pos:column="44"/></operator><name pos:line="436" pos:column="41">mail_end<pos:position pos:line="436" pos:column="49"/></name></name></expr></argument>,
		      <argument><expr><name><name pos:line="437" pos:column="23">b<pos:position pos:line="437" pos:column="24"/></name><operator pos:line="437" pos:column="24">-&gt;<pos:position pos:line="437" pos:column="29"/></operator><name pos:line="437" pos:column="26">mail_begin<pos:position pos:line="437" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="437" pos:column="38">b<pos:position pos:line="437" pos:column="39"/></name><operator pos:line="437" pos:column="39">-&gt;<pos:position pos:line="437" pos:column="44"/></operator><name pos:line="437" pos:column="41">mail_end<pos:position pos:line="437" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="437" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="437" pos:column="51"/></expr_stmt>
	<if pos:line="438" pos:column="9">if <condition pos:line="438" pos:column="12">(<expr><name pos:line="438" pos:column="13">cmp<pos:position pos:line="438" pos:column="16"/></name></expr>)<pos:position pos:line="438" pos:column="17"/></condition><then pos:line="438" pos:column="17">
		<block type="pseudo"><return pos:line="439" pos:column="17">return <expr><name pos:line="439" pos:column="24">cmp<pos:position pos:line="439" pos:column="27"/></name></expr>;<pos:position pos:line="439" pos:column="28"/></return></block></then></if>

	<return pos:line="441" pos:column="9">return <expr><call><name pos:line="441" pos:column="16">buf_cmp<pos:position pos:line="441" pos:column="23"/></name><argument_list pos:line="441" pos:column="23">(<argument><expr><name><name pos:line="441" pos:column="24">a<pos:position pos:line="441" pos:column="25"/></name><operator pos:line="441" pos:column="25">-&gt;<pos:position pos:line="441" pos:column="30"/></operator><name pos:line="441" pos:column="27">name_begin<pos:position pos:line="441" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="441" pos:column="39">a<pos:position pos:line="441" pos:column="40"/></name><operator pos:line="441" pos:column="40">-&gt;<pos:position pos:line="441" pos:column="45"/></operator><name pos:line="441" pos:column="42">name_end<pos:position pos:line="441" pos:column="50"/></name></name></expr></argument>,
		       <argument><expr><name><name pos:line="442" pos:column="24">b<pos:position pos:line="442" pos:column="25"/></name><operator pos:line="442" pos:column="25">-&gt;<pos:position pos:line="442" pos:column="30"/></operator><name pos:line="442" pos:column="27">name_begin<pos:position pos:line="442" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="442" pos:column="39">b<pos:position pos:line="442" pos:column="40"/></name><operator pos:line="442" pos:column="40">-&gt;<pos:position pos:line="442" pos:column="45"/></operator><name pos:line="442" pos:column="42">name_end<pos:position pos:line="442" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="442" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="52"/></return>
}<pos:position pos:line="443" pos:column="2"/></block></function>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/repos/httpd-2.3.8/server/mpm/mpmt_os2/mpm_default.h" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<comment type="block" pos:line="17" pos:column="1">/**
 * @file  mpmt_os2/mpm_default.h
 * @brief os2 MPM defaults
 * 
 * @addtogroup APACHE_MPM_OS2
 * @{
 */</comment>

<cpp:ifndef pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">ifndef<pos:position pos:line="25" pos:column="8"/></cpp:directive> <name pos:line="25" pos:column="9">APACHE_MPM_DEFAULT_H<pos:position pos:line="25" pos:column="29"/></name></cpp:ifndef>
<cpp:define pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">define<pos:position pos:line="26" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="26" pos:column="9">APACHE_MPM_DEFAULT_H<pos:position pos:line="26" pos:column="29"/></name></cpp:macro></cpp:define>

<comment type="block" pos:line="28" pos:column="1">/* Number of servers processes to spawn off by default
 */</comment>
<cpp:ifndef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifndef<pos:position pos:line="30" pos:column="8"/></cpp:directive> <name pos:line="30" pos:column="9">DEFAULT_START_DAEMON<pos:position pos:line="30" pos:column="29"/></name></cpp:ifndef>
<cpp:define pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">define<pos:position pos:line="31" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="31" pos:column="9">DEFAULT_START_DAEMON<pos:position pos:line="31" pos:column="29"/></name></cpp:macro> <cpp:value pos:line="31" pos:column="30">2<pos:position pos:line="31" pos:column="31"/></cpp:value></cpp:define>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="34" pos:column="1">/* Maximum number of *free* server threads --- more than this, and
 * they will die off.
 */</comment>

<cpp:ifndef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifndef<pos:position pos:line="38" pos:column="8"/></cpp:directive> <name pos:line="38" pos:column="9">DEFAULT_MAX_SPARE_THREAD<pos:position pos:line="38" pos:column="33"/></name></cpp:ifndef>
<cpp:define pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">define<pos:position pos:line="39" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="39" pos:column="9">DEFAULT_MAX_SPARE_THREAD<pos:position pos:line="39" pos:column="33"/></name></cpp:macro> <cpp:value pos:line="39" pos:column="34">10<pos:position pos:line="39" pos:column="36"/></cpp:value></cpp:define>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="42" pos:column="1">/* Minimum --- fewer than this, and more will be created */</comment>

<cpp:ifndef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifndef<pos:position pos:line="44" pos:column="8"/></cpp:directive> <name pos:line="44" pos:column="9">DEFAULT_MIN_SPARE_THREAD<pos:position pos:line="44" pos:column="33"/></name></cpp:ifndef>
<cpp:define pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">define<pos:position pos:line="45" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="45" pos:column="9">DEFAULT_MIN_SPARE_THREAD<pos:position pos:line="45" pos:column="33"/></name></cpp:macro> <cpp:value pos:line="45" pos:column="34">5<pos:position pos:line="45" pos:column="35"/></cpp:value></cpp:define>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="48" pos:column="1">/* Where the main/parent process's pid is logged */</comment>
<cpp:ifndef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifndef<pos:position pos:line="49" pos:column="8"/></cpp:directive> <name pos:line="49" pos:column="9">DEFAULT_PIDLOG<pos:position pos:line="49" pos:column="23"/></name></cpp:ifndef>
<cpp:define pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">define<pos:position pos:line="50" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="50" pos:column="9">DEFAULT_PIDLOG<pos:position pos:line="50" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="50" pos:column="24">DEFAULT_REL_RUNTIMEDIR "/httpd.pid"<pos:position pos:line="50" pos:column="59"/></cpp:value></cpp:define>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="53" pos:column="1">/*
 * Interval, in microseconds, between scoreboard maintenance.
 */</comment>
<cpp:ifndef pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">ifndef<pos:position pos:line="56" pos:column="8"/></cpp:directive> <name pos:line="56" pos:column="9">SCOREBOARD_MAINTENANCE_INTERVAL<pos:position pos:line="56" pos:column="40"/></name></cpp:ifndef>
<cpp:define pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">define<pos:position pos:line="57" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="57" pos:column="9">SCOREBOARD_MAINTENANCE_INTERVAL<pos:position pos:line="57" pos:column="40"/></name></cpp:macro> <cpp:value pos:line="57" pos:column="41">1000000<pos:position pos:line="57" pos:column="48"/></cpp:value></cpp:define>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="60" pos:column="1">/* Number of requests to try to handle in a single process.  If &lt;= 0,
 * the children don't die off.
 */</comment>
<cpp:ifndef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifndef<pos:position pos:line="63" pos:column="8"/></cpp:directive> <name pos:line="63" pos:column="9">DEFAULT_MAX_REQUESTS_PER_CHILD<pos:position pos:line="63" pos:column="39"/></name></cpp:ifndef>
<cpp:define pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">define<pos:position pos:line="64" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="64" pos:column="9">DEFAULT_MAX_REQUESTS_PER_CHILD<pos:position pos:line="64" pos:column="39"/></name></cpp:macro> <cpp:value pos:line="64" pos:column="40">10000<pos:position pos:line="64" pos:column="45"/></cpp:value></cpp:define>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="67" pos:column="8">/* AP_MPM_DEFAULT_H */</comment>
<comment type="block" pos:line="68" pos:column="1">/** @} */</comment>
</unit>
